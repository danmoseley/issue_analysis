[
    {
        "url":  "https://github.com/dotnet/runtime/issues/33506",
        "createdAt":  "2020-03-12T03:43:54Z",
        "number":  33506,
        "author":  "benpye",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-11-10T18:07:26Z",
        "body":  "Hey all - I think there is a bug with opening performance counters on remote machines. I have noticed that we have different behaviour to PDH, and I\u0027m fairly certain theirs is correct.\r\n\r\nWhilst the documentation for `OpenRemoteBaseKey` doesn\u0027t say much about the format of `machineName`, if we look at the [docs for `RegConnectRegistryW`](https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regconnectregistryw) we see\r\n\r\n\u003e The name of the remote computer. The string has the following form:\r\n\u003e\r\n\u003e \\computername\r\n\r\nI do suspect that even this is a typo and it should be `\\\\computername` but the second `\\` has been eaten as an escape.\r\n\r\nIf we look at PerformanceCounterLib we do the right thing in one place https://github.com/dotnet/runtime/blob/master/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs#L678 , but the other two calls https://github.com/dotnet/runtime/blob/master/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs#L1044 and https://github.com/dotnet/runtime/blob/master/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs#L1286 seem to be doing the wrong thing. This bug also appears to exist in .NET Framework - and actually that\u0027s where I first noticed this issue.\r\n\r\nThis appears to make it impossible, at least on my machine, to use the .NET perf counter library against a remote machine. Unfortunately we can\u0027t pass in the correct machine name as we \u0027validate\u0027 the machine name and ensure it does not contain any `\\` characters! So far as I can tell this should be an easy fix, but I am surprised that it has gone undetected for so long.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOJHc1vg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5Nzk5MTMzNQ==",
                                           "createdAt":  "2020-03-12T03:43:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Dotnet-GitSync-Bot",
                                           "body":  "I couldn\u0027t add an area label to this Issue.\r\n\r\nCheckout [this](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md) page to find out which area owner to ping, or please add exactly one area label to help train me in the future.",
                                           "updatedAt":  "2020-03-12T03:43:56Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5Nzk5Mjg1Mw==",
                                           "createdAt":  "2020-03-12T03:51:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "benpye",
                                           "body":  "@Anipik it looks like you own this?",
                                           "updatedAt":  "2020-03-12T03:51:36Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5ODMzNjMxMQ==",
                                           "createdAt":  "2020-03-12T17:56:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOA-CJpg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "benpye",
                                                                               "createdAt":  "2020-03-13T06:41:07Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "\u003e  if we look at the docs for RegConnectRegistryW we see\r\n\r\nYou probably know this, but note that you can click the pencil in the top right of the topic and fix it if you like.",
                                           "updatedAt":  "2020-03-12T17:56:32Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMjg1NDYzNA==",
                                           "createdAt":  "2020-03-23T21:02:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Anipik",
                                           "body":  "i will take a look ",
                                           "updatedAt":  "2020-03-23T21:02:50Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxMTE1MjM0MA==",
                                           "createdAt":  "2020-04-08T19:37:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "benpye",
                                           "body":  "Adding a simple example\r\n\r\nCurrently the following will fail:\r\n`\r\n var categories = PerformanceCounterCategory.GetCategories(\"192.168.1.42\");\r\n`\r\n\r\nI would expect to receive the list of performance counter categories from the remote machine. Instead I am getting an exception.",
                                           "updatedAt":  "2020-04-08T19:37:27Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxMTE4NzgxNg==",
                                           "createdAt":  "2020-04-08T20:51:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBAkkug==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "benpye",
                                                                               "createdAt":  "2020-04-08T21:55:21Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "@benpye any interest in offering a PR, with tests (perhaps against 127.0.0.1?)?",
                                           "updatedAt":  "2020-04-08T20:51:04Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxMTIxNTMwOQ==",
                                           "createdAt":  "2020-04-08T21:56:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "benpye",
                                           "body":  "@danmosemsft How do we deal with tests that require machine setup? To test this functionality we must go and enable the remote registry service on the target.",
                                           "updatedAt":  "2020-04-08T21:56:26Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxMTI0MzY5Nw==",
                                           "createdAt":  "2020-04-08T23:23:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBAmB1Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "benpye",
                                                                               "createdAt":  "2020-04-09T04:24:47Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "@benpye our options are\r\n1. Add something like `[Fact(Skip = \"Manual test\")]` and run it locally only. That\u0027s possibly better than no test at all, as someone can comment that line and run it if they change the code in future.\r\n2. Find something that would exercise the codepath but still succeed against the local box,. eg `127.0.0.1` `\\\\%machinename%` or something of that sort. \r\n3. Forever maintain some endpoint for test use. This is what some networking tests do.\r\n\r\nI don\u0027t think we would do 3 for this. 2 would be nice.",
                                           "updatedAt":  "2020-04-08T23:23:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxMTc5MjMxOA==",
                                           "createdAt":  "2020-04-09T22:55:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "benpye",
                                           "body":  "I am happy to add a test with 2 - however it looks like I can\u0027t repro the bug against localhost, but I can at least add a test that ensures that case doesn\u0027t regress. I guess it\u0027s the interaction between impersonation and `OpenRemoteBaseKey` that\u0027s causing trouble here.",
                                           "updatedAt":  "2020-04-09T22:55:00Z"
                                       }
                                   ],
                         "totalCount":  9
                     },
        "title":  "PerformanceCounterLib calls RegistryKey.OpenRemoteBaseKey with incorrect machine name",
        "labels":  [
                       "help wanted",
                       "area-System.Diagnostics.PerformanceCounter"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/47636",
        "createdAt":  "2021-01-29T17:00:30Z",
        "number":  47636,
        "author":  "ZhivovOleg",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-10-14T03:32:13Z",
        "body":  "### Description\r\n\r\nI trying to get uptime for IIS AppPool, but code always returns zero. Windows system monitor shows real values:\r\n\r\n![image](https://user-images.githubusercontent.com/3338705/106303001-b2c14c80-626a-11eb-94ee-2937a0d9bcb4.png)\r\n\r\nCode:\r\n```csharp\r\nPerformanceCounterCategory cat = new PerformanceCounterCategory(\"APP_POOL_WAS\");\r\nstring inst = cat.GetInstanceNames().First(x =\u003e x.Contains(\"bp\"));\r\nPerformanceCounter pc = cat.GetCounters(inst).First(x =\u003e x.CounterName == \"Current Application Pool Uptime\");\r\npc.NextValue(); //zero \r\nThread.Sleep(1000); //wait as recommended in msdn\r\nfloat val = pc.NextValue(); //zero too\r\n```\r\n\r\n### Configuration\r\n\r\naspnet core 3.1 (net 5.0 - same behavior)\r\nwindows 10\r\nx64, self-hosted\r\n\r\n### Expected behavior\r\n\r\nLike as, for example, \"System - System Up Time\" Perfomance counter:\r\n\r\n```csharp\r\nPerformanceCounter _upTimeCounter = new PerformanceCounter(\"System\", \"System Up Time\");\r\n_upTimeCounter.NextValue(); //zero\r\nTimeSpan uptimeCounterValue = TimeSpan.FromSeconds(_upTimeCounter.NextValue()); //real expected value\r\n```\r\n\r\n### Extended information\r\n\r\nAll counters in category \"APP_POOL_WAS\" with type ```PerformanceCounterType.ElapsedTime``` returns zero.\r\nAll others returns real values\r\n\r\nMaybe this is localization error, because in powershell we see localizaed names of counters\r\n\r\n![image](https://user-images.githubusercontent.com/3338705/106446244-11680f80-6491-11eb-804e-f80bae1998d6.png)\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOODO8Gw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc44M7wb",
                                           "createdAt":  "2021-10-14T03:32:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Hello. Apologies for the delay. What is `CultureInfo.CurrentCulture` when you run this code?\r\n\r\nIf CurrentCulture is \u0027ru-RU\u0027 what happens if you request the counter by its Russian text instead?\r\n\r\nWhen pulling counters for a category, the code tries en-US first, then tries CurrentCulture, and then its parent in turn.\r\nhttps://github.com/danmoseley/runtime/blob/2cbbe8570c1561d4b8f42ff38eb97b2366d71f11/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs#L852\r\nYou do seem to be finding the  category OK. And apparently GetCounters is returning something, rather than throwing. But Powershell likely just calls into .NET, and it seems that the localized counter name works there.\r\n\r\nIt would need a bit more debugging. Let me know if you have figured this out since.",
                                           "updatedAt":  "2021-10-14T03:32:13Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "APP_POOL_WAS perfomanceCounter always returns 0",
        "labels":  [
                       "help wanted",
                       "area-System.Diagnostics.PerformanceCounter"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/54137",
        "createdAt":  "2021-06-14T08:24:03Z",
        "number":  54137,
        "author":  "jmecosta",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-07-19T21:12:41Z",
        "body":  "Hi,\r\n\r\ntrying to use performance counters to take several samples (10) per second. However im seeing .NextValue() takes about 100ms or in some cases (not sure because of degraded performance) even 0.5 seconds... \r\n\r\nThe documentation does suggest that 1sec should be the minimum to be used between calls of .NextValue().\r\n\r\nIs there are good alternative to handle this scenario?\r\n\r\nTo reduce the accumulated affect of calling  .NextValue() in several performace counters, im spawning one thread per counter (9 threads at the moment)\r\n\r\n\r\nThere are some operations that last 1, or 2 seconds... so i need to collect a few samples to be able to plot something... \r\n\r\nThis seems ok, but i cant guarentee the sampling to be done in regular intervals\r\n![image](https://user-images.githubusercontent.com/1041352/121861937-ff319400-cd02-11eb-84dd-4f9b3f809321.png)\r\n\r\n\r\nthanks for any pointers\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOM0oP6A==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2MDQ5MTc1Mg==",
                                           "createdAt":  "2021-06-14T08:24:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-06-14T08:24:05Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Performance counters several samples within a second",
        "labels":  [
                       "area-System.Diagnostics.PerformanceCounter"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/60403",
        "createdAt":  "2021-10-14T15:14:20Z",
        "number":  60403,
        "author":  "krwq",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-08-12T19:33:16Z",
        "body":  "### Description\n\nThis is most likely existing bug exposed by https://github.com/dotnet/runtime/pull/60372\r\n\r\nBuild: https://dev.azure.com/dnceng/public/_build/results?buildId=1420264\u0026view=results\r\n\r\n\u003cdetails\u003e\u003csummary\u003eClick to expand log\u003c/summary\u003e\r\n\r\n```\r\nConsole log: \u0027System.Diagnostics.PerformanceCounter.Tests\u0027 from job db1905bc-9532-465c-b9d8-aa026a1f4efc workitem 398567de-b934-41bc-b6e4-1ee31d39f041 (windows.10.arm64.open) executed on machine DDARM64S-035\r\n\r\nC:\\h\\w\\AE7009CF\\w\\AA2E094B\\e\u003etaskkill.exe /f /im corerun.exe \r\nERROR: The process \"corerun.exe\" not found.\r\n\r\nC:\\h\\w\\AE7009CF\\w\\AA2E094B\\e\u003ecall RunTests.cmd --runtime-path C:\\h\\w\\AE7009CF\\p \r\n----- start Thu 10/14/2021  1:48:38.96 ===============  To repro directly: ===================================================== \r\npushd C:\\h\\w\\AE7009CF\\w\\AA2E094B\\e\\\r\n\"C:\\h\\w\\AE7009CF\\p\\dotnet.exe\" exec --runtimeconfig System.Diagnostics.PerformanceCounter.Tests.runtimeconfig.json --depsfile System.Diagnostics.PerformanceCounter.Tests.deps.json xunit.console.dll System.Diagnostics.PerformanceCounter.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing \r\npopd\r\n===========================================================================================================\r\n\r\nC:\\h\\w\\AE7009CF\\w\\AA2E094B\\e\u003e\"C:\\h\\w\\AE7009CF\\p\\dotnet.exe\" exec --runtimeconfig System.Diagnostics.PerformanceCounter.Tests.runtimeconfig.json --depsfile System.Diagnostics.PerformanceCounter.Tests.deps.json xunit.console.dll System.Diagnostics.PerformanceCounter.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing  \r\n  Discovering: System.Diagnostics.PerformanceCounter.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Diagnostics.PerformanceCounter.Tests (found 91 test cases)\r\n  Starting:    System.Diagnostics.PerformanceCounter.Tests (parallel test collections = on, max threads = 46)\r\n    System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_CreateCounter_MultiInstanceReadOnly [SKIP]\r\n      Condition(s) not met: \"IsElevatedAndCanWriteAndReadNetPerfCounters\"\r\n    System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Increment [SKIP]\r\n      Condition(s) not met: \"IsElevatedAndCanWriteAndReadNetPerfCounters\"\r\n    System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_CreateCounter_SetReadOnly [SKIP]\r\n      Condition(s) not met: \"IsElevatedAndCanWriteAndReadNetPerfCounters\"\r\n    System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Increment_IncrementReadOnly [SKIP]\r\n      Condition(s) not met: \"IsElevatedAndCanWriteAndReadNetPerfCounters\"\r\n    System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Decrement_DecrementReadOnly [SKIP]\r\n      Condition(s) not met: \"IsElevatedAndCanWriteAndReadNetPerfCounters\"\r\n    System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Decrement [SKIP]\r\n      Condition(s) not met: \"IsElevatedAndCanWriteAndReadNetPerfCounters\"\r\n    System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementBy2 [SKIP]\r\n      Condition(s) not met: \"IsElevatedAndCanWriteAndReadNetPerfCounters\"\r\n    System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementByReadOnly [SKIP]\r\n      Condition(s) not met: \"IsElevatedAndCanWriteAndReadNetPerfCounters\"\r\n    System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_NextSample_MultiInstance [SKIP]\r\n      Condition(s) not met: \"IsElevatedAndCanWriteAndReadNetPerfCounters\"\r\n\r\nInfo: Successfully installed performance counters in C:\\h\\w\\AE7009CF\\t\\mhja4dqs.ebl\\provider.man    System.Diagnostics.Tests.PerformanceDataTests.PerformanceCounter_PerformanceData [SKIP]\r\n      Condition(s) not met: \"IsRunnableEnvironment\"\r\n\r\nInfo: Successfully uninstalled the performance counters from the counter definition XML file C:\\h\\w\\AE7009CF\\t\\mhja4dqs.ebl\\provider.man.Fatal error. System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.\r\nRepeat 2 times:\r\n--------------------------------\r\n   at Interop+Pdh.PdhFormatFromRawValue(UInt32, UInt32, Int64 ByRef, PDH_RAW_COUNTER ByRef, PDH_RAW_COUNTER ByRef, PDH_FMT_COUNTERVALUE ByRef)\r\n--------------------------------\r\n   at System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample, System.Diagnostics.CounterSample)\r\n   at System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample, System.Diagnostics.CounterSample)\r\n   at System.Diagnostics.Tests.CounterSampleTests.CounterSample_Calculate_CalculateCounterSampleCounterSample()\r\n   at System.RuntimeMethodHandle.InvokeMethod(System.Object, System.Span`1\u003cSystem.Object\u003e ByRef, System.Signature, Boolean, Boolean)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)\r\n   at Xunit.Sdk.TestInvoker`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].CallTestMethod(System.Object)\r\n   at Xunit.Sdk.TestInvoker`1+\u003c\u003ec__DisplayClass48_0+\u003c\u003cInvokeTestMethodAsync\u003eb__1\u003ed[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.TestInvoker`1+\u003c\u003ec__DisplayClass48_0+\u003c\u003cInvokeTestMethodAsync\u003eb__1\u003ed[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003c\u003cInvokeTestMethodAsync\u003eb__1\u003ed\u003cSystem.__Canon\u003e ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[Xunit.Sdk.TestInvoker`1+\u003c\u003ec__DisplayClass48_0+\u003c\u003cInvokeTestMethodAsync\u003eb__1\u003ed[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003c\u003cInvokeTestMethodAsync\u003eb__1\u003ed\u003cSystem.__Canon\u003e ByRef)\r\n   at Xunit.Sdk.TestInvoker`1+\u003c\u003ec__DisplayClass48_0[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].\u003cInvokeTestMethodAsync\u003eb__1()\r\n   at Xunit.Sdk.ExecutionTimer+\u003cAggregateAsync\u003ed__4.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.ExecutionTimer+\u003cAggregateAsync\u003ed__4, xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cAggregateAsync\u003ed__4 ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[Xunit.Sdk.ExecutionTimer+\u003cAggregateAsync\u003ed__4, xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cAggregateAsync\u003ed__4 ByRef)\r\n   at Xunit.Sdk.ExecutionTimer.AggregateAsync(System.Func`1\u003cSystem.Threading.Tasks.Task\u003e)\r\n   at Xunit.Sdk.TestInvoker`1+\u003c\u003ec__DisplayClass48_0[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].\u003cInvokeTestMethodAsync\u003eb__0()\r\n   at Xunit.Sdk.ExceptionAggregator+\u003cRunAsync\u003ed__9.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.ExceptionAggregator+\u003cRunAsync\u003ed__9, xunit.core, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunAsync\u003ed__9 ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[Xunit.Sdk.ExceptionAggregator+\u003cRunAsync\u003ed__9, xunit.core, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunAsync\u003ed__9 ByRef)\r\n   at Xunit.Sdk.ExceptionAggregator.RunAsync(System.Func`1\u003cSystem.Threading.Tasks.Task\u003e)\r\n   at Xunit.Sdk.TestInvoker`1+\u003cInvokeTestMethodAsync\u003ed__48[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.TestInvoker`1+\u003cInvokeTestMethodAsync\u003ed__48[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cInvokeTestMethodAsync\u003ed__48\u003cSystem.__Canon\u003e ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Decimal, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.TestInvoker`1+\u003cInvokeTestMethodAsync\u003ed__48[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cInvokeTestMethodAsync\u003ed__48\u003cSystem.__Canon\u003e ByRef)\r\n   at Xunit.Sdk.TestInvoker`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].InvokeTestMethodAsync(System.Object)\r\n   at Xunit.Sdk.XunitTestInvoker.InvokeTestMethodAsync(System.Object)\r\n   at Xunit.Sdk.TestInvoker`1+\u003c\u003cRunAsync\u003eb__47_0\u003ed[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.TestInvoker`1+\u003c\u003cRunAsync\u003eb__47_0\u003ed[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003c\u003cRunAsync\u003eb__47_0\u003ed\u003cSystem.__Canon\u003e ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Decimal, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.TestInvoker`1+\u003c\u003cRunAsync\u003eb__47_0\u003ed[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003c\u003cRunAsync\u003eb__47_0\u003ed\u003cSystem.__Canon\u003e ByRef)\r\n   at Xunit.Sdk.TestInvoker`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].\u003cRunAsync\u003eb__47_0()\r\n   at Xunit.Sdk.ExceptionAggregator+\u003cRunAsync\u003ed__10`1[[System.Decimal, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.ExceptionAggregator+\u003cRunAsync\u003ed__10`1[[System.Decimal, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.core, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunAsync\u003ed__10`1\u003cSystem.Decimal\u003e ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Decimal, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.ExceptionAggregator+\u003cRunAsync\u003ed__10`1[[System.Decimal, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.core, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunAsync\u003ed__10`1\u003cSystem.Decimal\u003e ByRef)\r\n   at Xunit.Sdk.ExceptionAggregator.RunAsync[[System.Decimal, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](System.Func`1\u003cSystem.Threading.Tasks.Task`1\u003cSystem.Decimal\u003e\u003e)\r\n   at Xunit.Sdk.TestInvoker`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].RunAsync()\r\n   at Xunit.Sdk.XunitTestRunner.InvokeTestMethodAsync(Xunit.Sdk.ExceptionAggregator)\r\n   at Xunit.Sdk.XunitTestRunner+\u003cInvokeTestAsync\u003ed__4.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.XunitTestRunner+\u003cInvokeTestAsync\u003ed__4, xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cInvokeTestAsync\u003ed__4 ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.XunitTestRunner+\u003cInvokeTestAsync\u003ed__4, xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cInvokeTestAsync\u003ed__4 ByRef)\r\n   at Xunit.Sdk.XunitTestRunner.InvokeTestAsync(Xunit.Sdk.ExceptionAggregator)\r\n   at Xunit.Sdk.TestRunner`1+\u003c\u003ec__DisplayClass43_0[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].\u003cRunAsync\u003eb__0()\r\n   at Xunit.Sdk.ExceptionAggregator+\u003cRunAsync\u003ed__10`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.ExceptionAggregator+\u003cRunAsync\u003ed__10`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.core, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunAsync\u003ed__10`1\u003cSystem.__Canon\u003e ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.ExceptionAggregator+\u003cRunAsync\u003ed__10`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.core, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunAsync\u003ed__10`1\u003cSystem.__Canon\u003e ByRef)\r\n   at Xunit.Sdk.ExceptionAggregator.RunAsync[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](System.Func`1\u003cSystem.Threading.Tasks.Task`1\u003cSystem.__Canon\u003e\u003e)\r\n   at Xunit.Sdk.TestRunner`1+\u003cRunAsync\u003ed__43[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.TestRunner`1+\u003cRunAsync\u003ed__43[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunAsync\u003ed__43\u003cSystem.__Canon\u003e ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.TestRunner`1+\u003cRunAsync\u003ed__43[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunAsync\u003ed__43\u003cSystem.__Canon\u003e ByRef)\r\n   at Xunit.Sdk.TestRunner`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].RunAsync()\r\n   at Xunit.Sdk.XunitTestCaseRunner.RunTestAsync()\r\n   at Xunit.Sdk.TestCaseRunner`1+\u003cRunAsync\u003ed__19[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.TestCaseRunner`1+\u003cRunAsync\u003ed__19[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunAsync\u003ed__19\u003cSystem.__Canon\u003e ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.TestCaseRunner`1+\u003cRunAsync\u003ed__19[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunAsync\u003ed__19\u003cSystem.__Canon\u003e ByRef)\r\n   at Xunit.Sdk.TestCaseRunner`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].RunAsync()\r\n   at Xunit.Sdk.XunitTestCase.RunAsync(Xunit.Abstractions.IMessageSink, Xunit.Sdk.IMessageBus, System.Object[], Xunit.Sdk.ExceptionAggregator, System.Threading.CancellationTokenSource)\r\n   at Xunit.Sdk.XunitTestMethodRunner.RunTestCaseAsync(Xunit.Sdk.IXunitTestCase)\r\n   at Xunit.Sdk.TestMethodRunner`1+\u003cRunTestCasesAsync\u003ed__32[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.TestMethodRunner`1+\u003cRunTestCasesAsync\u003ed__32[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunTestCasesAsync\u003ed__32\u003cSystem.__Canon\u003e ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.TestMethodRunner`1+\u003cRunTestCasesAsync\u003ed__32[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunTestCasesAsync\u003ed__32\u003cSystem.__Canon\u003e ByRef)\r\n   at Xunit.Sdk.TestMethodRunner`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].RunTestCasesAsync()\r\n   at Xunit.Sdk.TestMethodRunner`1+\u003cRunAsync\u003ed__31[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.TestMethodRunner`1+\u003cRunAsync\u003ed__31[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunAsync\u003ed__31\u003cSystem.__Canon\u003e ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.TestMethodRunner`1+\u003cRunAsync\u003ed__31[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunAsync\u003ed__31\u003cSystem.__Canon\u003e ByRef)\r\n   at Xunit.Sdk.TestMethodRunner`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].RunAsync()\r\n   at Xunit.Sdk.XunitTestClassRunner.RunTestMethodAsync(Xunit.Abstractions.ITestMethod, Xunit.Abstractions.IReflectionMethodInfo, System.Collections.Generic.IEnumerable`1\u003cXunit.Sdk.IXunitTestCase\u003e, System.Object[])\r\n   at Xunit.Sdk.TestClassRunner`1+\u003cRunTestMethodsAsync\u003ed__38[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.TestClassRunner`1+\u003cRunTestMethodsAsync\u003ed__38[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunTestMethodsAsync\u003ed__38\u003cSystem.__Canon\u003e ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.TestClassRunner`1+\u003cRunTestMethodsAsync\u003ed__38[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunTestMethodsAsync\u003ed__38\u003cSystem.__Canon\u003e ByRef)\r\n   at Xunit.Sdk.TestClassRunner`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].RunTestMethodsAsync()\r\n   at Xunit.Sdk.TestClassRunner`1+\u003cRunAsync\u003ed__37[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.TestClassRunner`1+\u003cRunAsync\u003ed__37[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunAsync\u003ed__37\u003cSystem.__Canon\u003e ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.TestClassRunner`1+\u003cRunAsync\u003ed__37[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunAsync\u003ed__37\u003cSystem.__Canon\u003e ByRef)\r\n   at Xunit.Sdk.TestClassRunner`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].RunAsync()\r\n   at Xunit.Sdk.XunitTestCollectionRunner.RunTestClassAsync(Xunit.Abstractions.ITestClass, Xunit.Abstractions.IReflectionTypeInfo, System.Collections.Generic.IEnumerable`1\u003cXunit.Sdk.IXunitTestCase\u003e)\r\n   at Xunit.Sdk.TestCollectionRunner`1+\u003cRunTestClassesAsync\u003ed__28[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.TestCollectionRunner`1+\u003cRunTestClassesAsync\u003ed__28[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunTestClassesAsync\u003ed__28\u003cSystem.__Canon\u003e ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.TestCollectionRunner`1+\u003cRunTestClassesAsync\u003ed__28[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunTestClassesAsync\u003ed__28\u003cSystem.__Canon\u003e ByRef)\r\n   at Xunit.Sdk.TestCollectionRunner`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].RunTestClassesAsync()\r\n   at Xunit.Sdk.TestCollectionRunner`1+\u003cRunAsync\u003ed__27[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.TestCollectionRunner`1+\u003cRunAsync\u003ed__27[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunAsync\u003ed__27\u003cSystem.__Canon\u003e ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.TestCollectionRunner`1+\u003cRunAsync\u003ed__27[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunAsync\u003ed__27\u003cSystem.__Canon\u003e ByRef)\r\n   at Xunit.Sdk.TestCollectionRunner`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].RunAsync()\r\n   at Xunit.Sdk.XunitTestAssemblyRunner.RunTestCollectionAsync(Xunit.Sdk.IMessageBus, Xunit.Abstractions.ITestCollection, System.Collections.Generic.IEnumerable`1\u003cXunit.Sdk.IXunitTestCase\u003e, System.Threading.CancellationTokenSource)\r\n   at Xunit.Sdk.TestAssemblyRunner`1+\u003cRunTestCollectionsAsync\u003ed__42[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.TestAssemblyRunner`1+\u003cRunTestCollectionsAsync\u003ed__42[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunTestCollectionsAsync\u003ed__42\u003cSystem.__Canon\u003e ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.TestAssemblyRunner`1+\u003cRunTestCollectionsAsync\u003ed__42[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunTestCollectionsAsync\u003ed__42\u003cSystem.__Canon\u003e ByRef)\r\n   at Xunit.Sdk.TestAssemblyRunner`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].RunTestCollectionsAsync(Xunit.Sdk.IMessageBus, System.Threading.CancellationTokenSource)\r\n   at Xunit.Sdk.XunitTestAssemblyRunner+\u003cRunTestCollectionsAsync\u003ed__14.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.XunitTestAssemblyRunner+\u003cRunTestCollectionsAsync\u003ed__14, xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunTestCollectionsAsync\u003ed__14 ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.XunitTestAssemblyRunner+\u003cRunTestCollectionsAsync\u003ed__14, xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunTestCollectionsAsync\u003ed__14 ByRef)\r\n   at Xunit.Sdk.XunitTestAssemblyRunner.RunTestCollectionsAsync(Xunit.Sdk.IMessageBus, System.Threading.CancellationTokenSource)\r\n   at Xunit.Sdk.TestAssemblyRunner`1+\u003cRunAsync\u003ed__41[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.TestAssemblyRunner`1+\u003cRunAsync\u003ed__41[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunAsync\u003ed__41\u003cSystem.__Canon\u003e ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[Xunit.Sdk.TestAssemblyRunner`1+\u003cRunAsync\u003ed__41[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunAsync\u003ed__41\u003cSystem.__Canon\u003e ByRef)\r\n   at Xunit.Sdk.TestAssemblyRunner`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].RunAsync()\r\n   at Xunit.Sdk.XunitTestFrameworkExecutor+\u003cRunTestCases\u003ed__8.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Xunit.Sdk.XunitTestFrameworkExecutor+\u003cRunTestCases\u003ed__8, xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunTestCases\u003ed__8 ByRef)\r\n   at System.Runtime.CompilerServices.AsyncVoidMethodBuilder.Start[[Xunit.Sdk.XunitTestFrameworkExecutor+\u003cRunTestCases\u003ed__8, xunit.execution.dotnet, Version=2.4.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c]](\u003cRunTestCases\u003ed__8 ByRef)\r\n   at Xunit.Sdk.XunitTestFrameworkExecutor.RunTestCases(System.Collections.Generic.IEnumerable`1\u003cXunit.Sdk.IXunitTestCase\u003e, Xunit.Abstractions.IMessageSink, Xunit.Abstractions.ITestFrameworkExecutionOptions)\r\n   at Xunit.Sdk.TestFrameworkExecutor`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].RunTests(System.Collections.Generic.IEnumerable`1\u003cXunit.Abstractions.ITestCase\u003e, Xunit.Abstractions.IMessageSink, Xunit.Abstractions.ITestFrameworkExecutionOptions)\r\n   at Xunit.Xunit2.RunTests(System.Collections.Generic.IEnumerable`1\u003cXunit.Abstractions.ITestCase\u003e, Xunit.Abstractions.IMessageSink, Xunit.Abstractions.ITestFrameworkExecutionOptions)\r\n   at Xunit.ConsoleClient.ConsoleRunner.ExecuteAssembly(System.Object, Xunit.XunitProjectAssembly, Boolean, Boolean, System.Nullable`1\u003cBoolean\u003e, System.Nullable`1\u003cInt32\u003e, Boolean, Boolean, System.Nullable`1\u003cXunit.AppDomainSupport\u003e, Boolean, Boolean, Xunit.XunitFilters, Boolean)\r\n   at Xunit.ConsoleClient.ConsoleRunner.RunProject(Xunit.XunitProject, Boolean, System.Nullable`1\u003cBoolean\u003e, System.Nullable`1\u003cBoolean\u003e, System.Nullable`1\u003cInt32\u003e, Boolean, Boolean, System.Nullable`1\u003cXunit.AppDomainSupport\u003e, Boolean, Boolean, Boolean)\r\n   at Xunit.ConsoleClient.ConsoleRunner.EntryPoint(System.String[])\r\n   at Xunit.ConsoleClient.Program.Main(System.String[])\r\n----- end Thu 10/14/2021  1:48:49.30 ----- exit code -1073741819 ----------------------------------------------------------\r\n2021-10-14 01:48:49,758: INFO: 4304: run(48): main: Beginning reading of test results.\r\n2021-10-14 01:48:49,758: INFO: 4304: __init__(48): get_log_files: Searching \u0027C:\\h\\w\\AE7009CF\\w\\AA2E094B\\e\\..\u0027 for log files\r\n2021-10-14 01:48:49,758: INFO: 4304: __init__(66): construct_log_list: Generated log list: console.59d88bc2.log:\r\n  https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-heads-main-db1905bc9532465cb9/System.Diagnostics.PerformanceCounter.Tests/console.59d88bc2.log?sv=2019-07-07\u0026se=2021-11-03T08%3A40%3A07Z\u0026sr=c\u0026sp=rl\u0026sig=NuucYvcSV2cCyA50oTSUnJpbrpmGK%2BqDkfOqbmFMMDY%3D\r\n\r\n2021-10-14 01:48:49,758: INFO: 4304: __init__(90): read_results: Searching \u0027C:\\h\\w\\AE7009CF\\w\\AA2E094B\\e\u0027 for test results files\r\n2021-10-14 01:48:49,758: INFO: 4304: __init__(90): read_results: Searching \u0027C:\\h\\w\\AE7009CF\\w\\AA2E094B\\uploads\u0027 for test results files\r\n2021-10-14 01:48:49,758: WARNING: 4304: __init__(103): read_results: No results file found in any of the following formats: xunit, junit, trx\r\n2021-10-14 01:48:49,758: INFO: 4304: packing_test_reporter(30): report_results: Packing 0 test reports to \u0027C:\\h\\w\\AE7009CF\\w\\AA2E094B\\e\\__test_report.json\u0027\r\n2021-10-14 01:48:49,758: INFO: 4304: packing_test_reporter(33): report_results: Packed 1446 bytes\r\nFound log \u0027C:\\h\\w\\AE7009CF\\w\\AA2E094B\\e\\..\\console.59d88bc2.log\u0027\r\nUri \u0027https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-heads-main-db1905bc9532465cb9/System.Diagnostics.PerformanceCounter.Tests/console.59d88bc2.log?sv=2019-07-07\u0026se=2021-11-03T08%3A40%3A07Z\u0026sr=c\u0026sp=rl\u0026sig=NuucYvcSV2cCyA50oTSUnJpbrpmGK%2BqDkfOqbmFMMDY%3D\u0027\r\nDid not find dumps, skipping dump docs generation.\r\n```\r\n\u003c/details\u003e\n\n### Reproduction Steps\n\nRun tests on `net7.0-windows-Release-arm64-CoreCLR_release-Windows.10.Arm64.Open` or schedule rolling build\n\n### Expected behavior\n\nSee log\n\n### Actual behavior\n\nSee log\n\n### Regression?\n\nlikely no\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSFPHHw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc44YNYO",
                                           "createdAt":  "2021-10-18T15:04:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "krwq",
                                           "body":  "This has been disabled as it was failing every time on Windows ARM64 (rolling builds only)",
                                           "updatedAt":  "2021-10-18T15:05:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44Ykcd",
                                           "createdAt":  "2021-10-18T16:46:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "another one different test\r\n```\r\nFatal error. System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.\r\nRepeat 2 times:\r\n--------------------------------\r\n   at Interop+Pdh.PdhFormatFromRawValue(UInt32, UInt32, Int64 ByRef, PDH_RAW_COUNTER ByRef, PDH_RAW_COUNTER ByRef, PDH_FMT_COUNTERVALUE ByRef)\r\n--------------------------------\r\n   at System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample, System.Diagnostics.CounterSample)\r\n   at System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample, System.Diagnostics.CounterSample)\r\n   at System.Diagnostics.PerformanceCounter.NextValue()\r\n   at System.Diagnostics.Tests.PerformanceCounterTests+\u003c\u003ec__DisplayClass10_0.\u003cPerformanceCounter_NextValue_ProcessorCounter\u003eb__0()\r\n   at System.Diagnostics.Tests.Helpers+\u003c\u003ec__DisplayClass12_0`1[[System.Single, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].\u003cRetryOnAllPlatforms\u003eb__0()\r\n   at System.RetryHelper.Execute(System.Action, Int32, System.Func`2\u003cInt32,Int32\u003e, System.Predicate`1\u003cSystem.Exception\u003e)\r\n   at System.Diagnostics.Tests.Helpers.RetryOnAllPlatforms[[System.Single, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](System.Func`1\u003cSingle\u003e)\r\n   at System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_NextValue_ProcessorCounter()\r\n```",
                                           "updatedAt":  "2021-10-18T16:46:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44Y7R9",
                                           "createdAt":  "2021-10-18T18:40:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "this efficiently gives all the crashes\r\n\r\nlet jobs = Jobs\r\n| where Queued \u003e ago (14d)\r\n| where Source == \"ci/public/dotnet/runtime/refs/heads/main\"\r\n| project Name, Source;\r\nlet instancesOfThatWorkItem = WorkItems\r\n| where JobName in (jobs)\r\n| where FriendlyName == \"System.Diagnostics.PerformanceCounter.Tests\"\r\n| where ExitCode != 0;\r\nTestResults\r\n| where Result == \"Fail\"\r\n| join (instancesOfThatWorkItem) on WorkItemId\r\n\r\nConsoleUri\r\nhttps://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-heads-main-b1c8caa73f714ba79f/System.Diagnostics.PerformanceCounter.Tests/1/console.7eac5d86.log?sv=2019-07-07\u0026se=2021-11-05T09%3A28%3A06Z\u0026sr=c\u0026sp=rl\u0026sig=4Z397%2BjoznCEiTDXZJsI6UobVtIlv4Kq1OwG4q1wCEM%3D\r\nhttps://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-heads-main-381b2bc0ae9040ceba/System.Diagnostics.PerformanceCounter.Tests/1/console.b3b052f3.log?sv=2019-07-07\u0026se=2021-11-05T09%3A28%3A06Z\u0026sr=c\u0026sp=rl\u0026sig=dcwY09HzetFCpVRU4xMPi%2F%2F5hoX9g1QUWmxnzQAP5WI%3D\r\nhttps://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-heads-main-5eb215542c134daca3/System.Diagnostics.PerformanceCounter.Tests/1/console.29a2b75e.log?sv=2019-07-07\u0026se=2021-11-05T10%3A15%3A02Z\u0026sr=c\u0026sp=rl\u0026sig=tFMWkPzbqaPZATEvp599VlQtd81wziEgDXXO9pmfZPM%3D\r\n\r\nthey are all the above or CounterSample_Calculate_CalculateCounterSampleCounterSample or this\r\n```\r\nFatal error. System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.\r\nRepeat 2 times:\r\n--------------------------------\r\n   at Interop+Pdh.PdhFormatFromRawValue(UInt32, UInt32, Int64 ByRef, PDH_RAW_COUNTER ByRef, PDH_RAW_COUNTER ByRef, PDH_FMT_COUNTERVALUE ByRef)\r\n--------------------------------\r\n   at System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample, System.Diagnostics.CounterSample)\r\n   at System.Diagnostics.Tests.PerformanceCounterTests+\u003c\u003ec__DisplayClass10_0.\u003cPerformanceCounter_NextValue_ProcessorCounter\u003eb__0()\r\n   at System.Diagnostics.Tests.Helpers+\u003c\u003ec__DisplayClass12_0`1[[System.Single, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].\u003cRetryOnAllPlatforms\u003eb__0()\r\n   at System.RetryHelper.Execute(System.Action, Int32, System.Func`2\u003cInt32,Int32\u003e, System.Predicate`1\u003cSystem.Exception\u003e)\r\n   at System.Diagnostics.Tests.Helpers.RetryOnAllPlatforms[[System.Single, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](System.Func`1\u003cSingle\u003e)\r\n   at System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_NextValue_ProcessorCounter()\r\n   ```\r\n   \r\n   and all on Arm64 \r\n\r\n",
                                           "updatedAt":  "2021-10-18T22:41:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44blll",
                                           "createdAt":  "2021-10-19T14:02:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Probably will need dump file or repro to solve this one. I don\u0027t have this hardware..",
                                           "updatedAt":  "2021-10-19T14:02:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FwdQg",
                                           "createdAt":  "2022-06-29T18:14:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "smasher164",
                                           "body":  "Just want to follow up to see how much of this issue is subsumed by #60933.\r\n\r\nSince this is only happening on ARM64, I\u0027ll look into repro\u0027ing it on a VM.",
                                           "updatedAt":  "2022-06-29T18:14:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5IU7h8",
                                           "createdAt":  "2022-08-12T19:28:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Did you end up looking @smasher164 ?",
                                           "updatedAt":  "2022-08-12T19:28:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5IU8cf",
                                           "createdAt":  "2022-08-12T19:33:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "smasher164",
                                           "body":  "\u003e Did you end up looking @smasher164 ?\n\nNo, I wasn\u0027t able to get the Windows ARM VM to boot. I was planning on taking another look after the ApiCompat features for .NET 7.",
                                           "updatedAt":  "2022-08-12T19:33:16Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "Rolling build failures in System.Diagnostics.PerformanceCounter.Tests",
        "labels":  [
                       "disabled-test",
                       "area-System.Diagnostics.PerformanceCounter"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/73019",
        "createdAt":  "2022-07-28T18:52:28Z",
        "number":  73019,
        "author":  "jozkee",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-08-10T16:41:14Z",
        "body":  "https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-73004-merge-0bd05363f5734fda96/System.Diagnostics.PerformanceCounter.Tests/1/console.f36b7a1e.log?helixlogtype=result\r\n\r\n```\r\nC:\\h\\w\\AF870A37\\w\\9E1F08E2\\e\u003ecall RunTests.cmd --runtime-path C:\\h\\w\\AF870A37\\p \r\n----- start 28/07/2022 16:18:21,50 ===============  To repro directly: ===================================================== \r\npushd C:\\h\\w\\AF870A37\\w\\9E1F08E2\\e\\\r\n\"C:\\h\\w\\AF870A37\\p\\dotnet.exe\" exec --runtimeconfig System.Diagnostics.PerformanceCounter.Tests.runtimeconfig.json --depsfile System.Diagnostics.PerformanceCounter.Tests.deps.json xunit.console.dll System.Diagnostics.PerformanceCounter.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing \r\npopd\r\n===========================================================================================================\r\n\r\nC:\\h\\w\\AF870A37\\w\\9E1F08E2\\e\u003e\"C:\\h\\w\\AF870A37\\p\\dotnet.exe\" exec --runtimeconfig System.Diagnostics.PerformanceCounter.Tests.runtimeconfig.json --depsfile System.Diagnostics.PerformanceCounter.Tests.deps.json xunit.console.dll System.Diagnostics.PerformanceCounter.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing  \r\n  Discovering: System.Diagnostics.PerformanceCounter.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Diagnostics.PerformanceCounter.Tests (found 91 of 92 test cases)\r\n  Starting:    System.Diagnostics.PerformanceCounter.Tests (parallel test collections = on, max threads = 2)\r\n\r\nInformaci�n: Los contadores de rendimiento se instalaron correctamente en C:\\h\\w\\AF870A37\\t\\hsp41u0t.stv\\provider.man.    System.Diagnostics.Tests.PerformanceDataTests.PerformanceCounter_PerformanceData [SKIP]\r\n      Condition(s) not met: \"IsRunnableEnvironnement\"\r\n\r\nInformaci�n: Desinstalaci�n correcta de los contadores de rendimiento del archivo XML de definici�n de contadores C:\\h\\w\\AF870A37\\t\\hsp41u0t.stv\\provider.man.    System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementBy2 [FAIL]\r\n      System.InvalidOperationException : Cannot load Counter Name data because an invalid index \u0027\u0027 was read from the registry. Performance counters on the machine may need to be repaired.\r\n      Stack Trace:\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs(1140,0): at System.Diagnostics.PerformanceCounterLib.GetStringTable(Boolean isHelp)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs(260,0): at System.Diagnostics.PerformanceCounterLib.get_NameTable()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs(193,0): at System.Diagnostics.PerformanceCounterLib.get_CategoryTable()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs(320,0): at System.Diagnostics.PerformanceCounterLib.CategoryExists(String category)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs(309,0): at System.Diagnostics.PerformanceCounterLib.CategoryExists(String machine, String category)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs(435,0): at System.Diagnostics.PerformanceCounterCategory.Exists(String categoryName, String machineName)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs(415,0): at System.Diagnostics.PerformanceCounterCategory.Exists(String categoryName)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs(47,0): at System.Diagnostics.Tests.Helpers.DeleteCategory(String name)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs(25,0): at System.Diagnostics.Tests.Helpers.CreateCategory(String name, PerformanceCounterCategoryType categoryType)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs(320,0): at System.Diagnostics.Tests.PerformanceCounterTests.CreateCounterWithCategory(String name, Boolean readOnly, PerformanceCounterCategoryType categoryType)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs(216,0): at System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementBy2()\r\n  Finished:    System.Diagnostics.PerformanceCounter.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Diagnostics.PerformanceCounter.Tests  Total: 95, Errors: 0, Failed: 1, Skipped: 1, Time: 45,013s\r\n----- end 28/07/2022 16:19:07,24 ----- exit code 1 ----------------------------------------------------------\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOR2_nFQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5Hb-cV",
                                           "createdAt":  "2022-07-28T18:52:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-diagnostics-performancecounter\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nhttps://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-73004-merge-0bd05363f5734fda96/System.Diagnostics.PerformanceCounter.Tests/1/console.f36b7a1e.log?helixlogtype=result\r\n\r\n```\r\nC:\\h\\w\\AF870A37\\w\\9E1F08E2\\e\u003ecall RunTests.cmd --runtime-path C:\\h\\w\\AF870A37\\p \r\n----- start 28/07/2022 16:18:21,50 ===============  To repro directly: ===================================================== \r\npushd C:\\h\\w\\AF870A37\\w\\9E1F08E2\\e\\\r\n\"C:\\h\\w\\AF870A37\\p\\dotnet.exe\" exec --runtimeconfig System.Diagnostics.PerformanceCounter.Tests.runtimeconfig.json --depsfile System.Diagnostics.PerformanceCounter.Tests.deps.json xunit.console.dll System.Diagnostics.PerformanceCounter.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing \r\npopd\r\n===========================================================================================================\r\n\r\nC:\\h\\w\\AF870A37\\w\\9E1F08E2\\e\u003e\"C:\\h\\w\\AF870A37\\p\\dotnet.exe\" exec --runtimeconfig System.Diagnostics.PerformanceCounter.Tests.runtimeconfig.json --depsfile System.Diagnostics.PerformanceCounter.Tests.deps.json xunit.console.dll System.Diagnostics.PerformanceCounter.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing  \r\n  Discovering: System.Diagnostics.PerformanceCounter.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Diagnostics.PerformanceCounter.Tests (found 91 of 92 test cases)\r\n  Starting:    System.Diagnostics.PerformanceCounter.Tests (parallel test collections = on, max threads = 2)\r\n\r\nInformaci�n: Los contadores de rendimiento se instalaron correctamente en C:\\h\\w\\AF870A37\\t\\hsp41u0t.stv\\provider.man.    System.Diagnostics.Tests.PerformanceDataTests.PerformanceCounter_PerformanceData [SKIP]\r\n      Condition(s) not met: \"IsRunnableEnvironnement\"\r\n\r\nInformaci�n: Desinstalaci�n correcta de los contadores de rendimiento del archivo XML de definici�n de contadores C:\\h\\w\\AF870A37\\t\\hsp41u0t.stv\\provider.man.    System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementBy2 [FAIL]\r\n      System.InvalidOperationException : Cannot load Counter Name data because an invalid index \u0027\u0027 was read from the registry. Performance counters on the machine may need to be repaired.\r\n      Stack Trace:\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs(1140,0): at System.Diagnostics.PerformanceCounterLib.GetStringTable(Boolean isHelp)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs(260,0): at System.Diagnostics.PerformanceCounterLib.get_NameTable()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs(193,0): at System.Diagnostics.PerformanceCounterLib.get_CategoryTable()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs(320,0): at System.Diagnostics.PerformanceCounterLib.CategoryExists(String category)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs(309,0): at System.Diagnostics.PerformanceCounterLib.CategoryExists(String machine, String category)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs(435,0): at System.Diagnostics.PerformanceCounterCategory.Exists(String categoryName, String machineName)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs(415,0): at System.Diagnostics.PerformanceCounterCategory.Exists(String categoryName)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs(47,0): at System.Diagnostics.Tests.Helpers.DeleteCategory(String name)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs(25,0): at System.Diagnostics.Tests.Helpers.CreateCategory(String name, PerformanceCounterCategoryType categoryType)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs(320,0): at System.Diagnostics.Tests.PerformanceCounterTests.CreateCounterWithCategory(String name, Boolean readOnly, PerformanceCounterCategoryType categoryType)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs(216,0): at System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementBy2()\r\n  Finished:    System.Diagnostics.PerformanceCounter.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Diagnostics.PerformanceCounter.Tests  Total: 95, Errors: 0, Failed: 1, Skipped: 1, Time: 45,013s\r\n----- end 28/07/2022 16:19:07,24 ----- exit code 1 ----------------------------------------------------------\r\n```\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eJozkee\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-System.Diagnostics.PerformanceCounter`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-07-28T18:52:39Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementBy2 failed on release/6.0",
        "labels":  [
                       "area-System.Diagnostics.PerformanceCounter"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/73706",
        "createdAt":  "2022-08-10T17:44:12Z",
        "number":  73706,
        "author":  "steveharter",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-08-15T23:26:21Z",
        "body":  "### Description\r\n\r\nDuring [implementation](https://github.com/dotnet/runtime/pull/73087) of https://github.com/dotnet/runtime/issues/23937 it was discovered that having a config entry of `filemappingsize` causes an exception and is not supported. It works fine in .NET Framework.\r\n\r\n\r\n### Reproduction Steps\r\n\r\nUsing a console app in Visual Studio in admin mode (admin required for perf counter creation):\r\n```cs\r\nstring categoryName = \"PerformanceCounterCategory_CategoryType_SingleInstance_Category\";\r\nCreateCategory(categoryName, PerformanceCounterCategoryType.SingleInstance);\r\nPerformanceCounterCategory pcc = new PerformanceCounterCategory(categoryName);\r\nPerformanceCounterCategory.Delete(categoryName);\r\n\r\nvoid CreateCategory(string categoryName, PerformanceCounterCategoryType categoryType)\r\n{\r\n    string counterName = categoryName.Replace(\"_Category\", \"_Counter\");\r\n    // If the category already exists, delete it, then create it.\r\n    DeleteCategory(categoryName);\r\n    PerformanceCounterCategory.Create(categoryName, \"description\", categoryType, counterName, \"counter description\");\r\n}\r\n\r\nvoid DeleteCategory(string categoryName)\r\n{\r\n    if (PerformanceCounterCategory.Exists(categoryName))\r\n    {\r\n        PerformanceCounterCategory.Delete(categoryName);\r\n    }\r\n\r\n    int tries = 0;\r\n    while (PerformanceCounterCategory.Exists(categoryName) \u0026\u0026 tries \u003c 10)\r\n    {\r\n        System.Threading.Thread.Sleep(100);\r\n        tries++;\r\n    }\r\n}\r\n```\r\n\r\nand a config file named, for example, `ConsoleApp1.dll.config` and placed in the bin location next to `ConsoleApp1.dll`:\r\n```\r\n\u003cconfiguration\u003e\r\n  \u003csystem.diagnostics\u003e\r\n    \u003cperformanceCounters filemappingsize=\"6524288\" /\u003e\r\n  \u003c/system.diagnostics\u003e\r\n\u003c/configuration\u003e\r\n```\r\n\r\nCauses\r\n```\r\nSystem.Configuration.ConfigurationErrorsException\r\n  HResult=0x80131902\r\n  Message=Configuration system failed to initialize\r\n  Source=System.Configuration.ConfigurationManager\r\n  StackTrace:\r\n   at System.Configuration.ClientConfigurationSystem.EnsureInit(String configKey) in /_/src/libraries/System.Configuration.ConfigurationManager/src/System/Configuration/ClientConfigurationSystem.cs:line 164\r\n   at System.Configuration.ClientConfigurationSystem.PrepareClientConfigSystem(String sectionName) in /_/src/libraries/System.Configuration.ConfigurationManager/src/System/Configuration/ClientConfigurationSystem.cs:line 201\r\n   at System.Configuration.ClientConfigurationSystem.System.Configuration.Internal.IInternalConfigSystem.GetSection(String sectionName) in /_/src/libraries/System.Configuration.ConfigurationManager/src/System/Configuration/ClientConfigurationSystem.cs:line 42\r\n   at System.Configuration.ConfigurationManager.GetSection(String sectionName) in /_/src/libraries/System.Configuration.ConfigurationManager/src/System/Configuration/ConfigurationManager.cs:line 154\r\n   at System.Diagnostics.DiagnosticsConfiguration.GetConfigSection() in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/DiagnosticsConfiguration.cs:line 63\r\n   at System.Diagnostics.DiagnosticsConfiguration.Initialize() in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/DiagnosticsConfiguration.cs:line 95\r\n   at System.Diagnostics.DiagnosticsConfiguration.get_PerformanceCountersFileMappingSize() in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/DiagnosticsConfiguration.cs:line 34\r\n   at System.Diagnostics.SharedPerformanceCounter.GetFileMappingSizeFromConfig() in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/SharedPerformanceCounter.cs:line 731\r\n   at System.Diagnostics.SharedPerformanceCounter.GetCategoryData() in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/SharedPerformanceCounter.cs:line 671\r\n   at System.Diagnostics.SharedPerformanceCounter..ctor(String catName, String counterName, String instanceName, PerformanceCounterInstanceLifetime lifetime) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/SharedPerformanceCounter.cs:line 96\r\n   at System.Diagnostics.SharedPerformanceCounter..ctor(String catName, String counterName, String instanceName) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/SharedPerformanceCounter.cs:line 89\r\n   at System.Diagnostics.SharedPerformanceCounter.RemoveAllInstances(String categoryName) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/SharedPerformanceCounter.cs:line 1389\r\n   at System.Diagnostics.PerformanceCounterCategory.Delete(String categoryName) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs:line 392\r\n   at ConsoleApp54.Program.\u003cDoIt\u003eg__DeleteCategory|1_1(String categoryName) in C:\\Users\\sharter\\source\\repos\\ConsoleApp54\\Program.cs:line 40\r\n   at ConsoleApp54.Program.\u003cDoIt\u003eg__CreateCategory|1_0(String categoryName, PerformanceCounterCategoryType categoryType) in C:\\Users\\sharter\\source\\repos\\ConsoleApp54\\Program.cs:line 32\r\n   at ConsoleApp54.Program.DoIt() in C:\\Users\\sharter\\source\\repos\\ConsoleApp54\\Program.cs:line 21\r\n   at ConsoleApp54.Program.Main(String[] args) in C:\\Users\\sharter\\source\\repos\\ConsoleApp54\\Program.cs:line 14\r\n\r\n  This exception was originally thrown at this call stack:\r\n    System.Configuration.ConfigurationSchemaErrors.ThrowIfErrors(bool) in ConfigurationSchemaErrors.cs\r\n    System.Configuration.BaseConfigurationRecord.ThrowIfParseErrors(System.Configuration.ConfigurationSchemaErrors) in BaseConfigurationRecord.cs\r\n    System.Configuration.BaseConfigurationRecord.ThrowIfInitErrors() in BaseConfigurationRecord.cs\r\n    System.Configuration.ClientConfigurationSystem.EnsureInit(string) in ClientConfigurationSystem.cs\r\n\r\nInner Exception 1:\r\nConfigurationErrorsException: Unrecognized configuration section system.diagnostics. (C:\\Users\\sharter\\source\\repos\\ConsoleApp54\\bin\\Debug\\net7.0\\ConsoleApp54.dll.config line 2)\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nNo exception; the file mapping size applied. Note that there is not a public API to read the applied value, so that is somewhat unfortunate for testing purposes and validation.\r\n\r\n### Actual behavior\r\n\r\nException saying `ConfigurationErrorsException: Unrecognized configuration section system.diagnostics. `\r\n\r\n\r\n### Regression?\r\n\r\nI don\u0027t believe so. The `System.Diagnostics.ConfigurationManager` assembly is missing the System.Diagnostics entry in the `ImplicitMachineConfigHost` class which is causing the exception.\r\n\r\n### Known Workarounds\r\n\r\n_No response_\r\n\r\n### Configuration\r\n\r\n_No response_\r\n\r\n### Other information\r\n\r\nThis issue won\u0027t repro after https://github.com/dotnet/runtime/pull/73087 is in since that removes this support because fixing it requires new APIs or prevents the TraceSource functionality in that PR from working properly since the implementation on the PerfCounter side assumes no other entries in the `System.Diagnostics` section in the config file.\r\n\r\nAdding support for this will likely require new APIs as temporary implemented in https://github.com/dotnet/runtime/pull/73087/commits/a5ac25d24200ca0e6febfcaaba0d95f4bba30791\r\n```cs\r\nnamespace System.Diagnostics\r\n{\r\n    public sealed partial class PerfCounterSettings : System.Configuration.ConfigurationElement\r\n    {\r\n        public PerfCounterSettings() { }\r\n        public int FileMappingSize { get { throw null; } }\r\n        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }\r\n    }\r\n    public sealed partial class SystemDiagnosticsSection : System.Configuration.ConfigurationSection\r\n    {\r\n        public SystemDiagnosticsSection() { }\r\n        public System.Diagnostics.PerfCounterSettings PerfCounterSettings { get { throw null; } }\r\n        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }\r\n        protected override void InitializeDefault() { }\r\n    }\r\n}\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSHpfMA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5ILxS9",
                                           "createdAt":  "2022-08-10T17:44:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-diagnostics-performancecounter\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\n\nDuring [implementation](https://github.com/dotnet/runtime/pull/73087) of https://github.com/dotnet/runtime/issues/23937 it was discovered that having a config entry of `filemappingsize` causes an exception and is not supported. It works fine in .NET Framework.\r\n\n\n### Reproduction Steps\n\nUsing Visual Studio in admin mode:\r\n```cs\r\nstring categoryName = \"PerformanceCounterCategory_CategoryType_SingleInstance_Category\";\r\n\r\nCreateCategory(categoryName, PerformanceCounterCategoryType.SingleInstance);\r\n\r\nPerformanceCounterCategory pcc = new PerformanceCounterCategory(categoryName);\r\n\r\n//Assert.Equal(PerformanceCounterCategoryType.SingleInstance, Helpers.RetryOnAllPlatforms(() =\u003e pcc.CategoryType));\r\nPerformanceCounterCategory.Delete(categoryName);\r\n\r\nvoid CreateCategory(string categoryName, PerformanceCounterCategoryType categoryType)\r\n{\r\n    string counterName = categoryName.Replace(\"_Category\", \"_Counter\");\r\n    // If the category already exists, delete it, then create it.\r\n    DeleteCategory(categoryName);\r\n    PerformanceCounterCategory.Create(categoryName, \"description\", categoryType, counterName, \"counter description\");\r\n}\r\n\r\nvoid DeleteCategory(string categoryName)\r\n{\r\n    if (PerformanceCounterCategory.Exists(categoryName))\r\n    {\r\n        PerformanceCounterCategory.Delete(categoryName);\r\n    }\r\n\r\n    int tries = 0;\r\n    while (PerformanceCounterCategory.Exists(categoryName) \u0026\u0026 tries \u003c 10)\r\n    {\r\n        System.Threading.Thread.Sleep(100);\r\n        tries++;\r\n    }\r\n}\r\n```\r\n\r\nand a config file named, for example, `ConsoleApp1.dll.config`:\r\n```\r\n\u003cconfiguration\u003e\r\n  \u003csystem.diagnostics\u003e\r\n    \u003cperformanceCounters filemappingsize=\"6524288\" /\u003e\r\n  \u003c/system.diagnostics\u003e\r\n\u003c/configuration\u003e\r\n```\r\n\r\nCauses\r\n```\r\nSystem.Configuration.ConfigurationErrorsException\r\n  HResult=0x80131902\r\n  Message=Configuration system failed to initialize\r\n  Source=System.Configuration.ConfigurationManager\r\n  StackTrace:\r\n   at System.Configuration.ClientConfigurationSystem.EnsureInit(String configKey) in /_/src/libraries/System.Configuration.ConfigurationManager/src/System/Configuration/ClientConfigurationSystem.cs:line 164\r\n   at System.Configuration.ClientConfigurationSystem.PrepareClientConfigSystem(String sectionName) in /_/src/libraries/System.Configuration.ConfigurationManager/src/System/Configuration/ClientConfigurationSystem.cs:line 201\r\n   at System.Configuration.ClientConfigurationSystem.System.Configuration.Internal.IInternalConfigSystem.GetSection(String sectionName) in /_/src/libraries/System.Configuration.ConfigurationManager/src/System/Configuration/ClientConfigurationSystem.cs:line 42\r\n   at System.Configuration.ConfigurationManager.GetSection(String sectionName) in /_/src/libraries/System.Configuration.ConfigurationManager/src/System/Configuration/ConfigurationManager.cs:line 154\r\n   at System.Diagnostics.DiagnosticsConfiguration.GetConfigSection() in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/DiagnosticsConfiguration.cs:line 63\r\n   at System.Diagnostics.DiagnosticsConfiguration.Initialize() in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/DiagnosticsConfiguration.cs:line 95\r\n   at System.Diagnostics.DiagnosticsConfiguration.get_PerformanceCountersFileMappingSize() in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/DiagnosticsConfiguration.cs:line 34\r\n   at System.Diagnostics.SharedPerformanceCounter.GetFileMappingSizeFromConfig() in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/SharedPerformanceCounter.cs:line 731\r\n   at System.Diagnostics.SharedPerformanceCounter.GetCategoryData() in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/SharedPerformanceCounter.cs:line 671\r\n   at System.Diagnostics.SharedPerformanceCounter..ctor(String catName, String counterName, String instanceName, PerformanceCounterInstanceLifetime lifetime) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/SharedPerformanceCounter.cs:line 96\r\n   at System.Diagnostics.SharedPerformanceCounter..ctor(String catName, String counterName, String instanceName) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/SharedPerformanceCounter.cs:line 89\r\n   at System.Diagnostics.SharedPerformanceCounter.RemoveAllInstances(String categoryName) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/SharedPerformanceCounter.cs:line 1389\r\n   at System.Diagnostics.PerformanceCounterCategory.Delete(String categoryName) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs:line 392\r\n   at ConsoleApp54.Program.\u003cDoIt\u003eg__DeleteCategory|1_1(String categoryName) in C:\\Users\\sharter\\source\\repos\\ConsoleApp54\\Program.cs:line 40\r\n   at ConsoleApp54.Program.\u003cDoIt\u003eg__CreateCategory|1_0(String categoryName, PerformanceCounterCategoryType categoryType) in C:\\Users\\sharter\\source\\repos\\ConsoleApp54\\Program.cs:line 32\r\n   at ConsoleApp54.Program.DoIt() in C:\\Users\\sharter\\source\\repos\\ConsoleApp54\\Program.cs:line 21\r\n   at ConsoleApp54.Program.Main(String[] args) in C:\\Users\\sharter\\source\\repos\\ConsoleApp54\\Program.cs:line 14\r\n\r\n  This exception was originally thrown at this call stack:\r\n    System.Configuration.ConfigurationSchemaErrors.ThrowIfErrors(bool) in ConfigurationSchemaErrors.cs\r\n    System.Configuration.BaseConfigurationRecord.ThrowIfParseErrors(System.Configuration.ConfigurationSchemaErrors) in BaseConfigurationRecord.cs\r\n    System.Configuration.BaseConfigurationRecord.ThrowIfInitErrors() in BaseConfigurationRecord.cs\r\n    System.Configuration.ClientConfigurationSystem.EnsureInit(string) in ClientConfigurationSystem.cs\r\n\r\nInner Exception 1:\r\nConfigurationErrorsException: Unrecognized configuration section system.diagnostics. (C:\\Users\\sharter\\source\\repos\\ConsoleApp54\\bin\\Debug\\net7.0\\ConsoleApp54.dll.config line 2)\r\n```\r\n\n\n### Expected behavior\n\nNo exception; the file mapping size applied. Note that there is not a public API to read the applied value, so that is somewhat unfortunate for testing purposes and validation.\n\n### Actual behavior\n\nException saying `ConfigurationErrorsException: Unrecognized configuration section system.diagnostics. `\r\n\n\n### Regression?\n\nI don\u0027t believe so. The `System.Diagnostics.ConfigurationManager` assembly is missing the System.Diagnostics entry in the `ImplicitMachineConfigHost` class which is causing the exception.\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\nThis issue won\u0027t repro after https://github.com/dotnet/runtime/pull/73087 is in since that removes this support because fixing it requires new APIs or prevents the TraceSource functionality in that PR from working properly since the implementation on the PerfCounter side assumes no other entries in the `System.Diagnostics` section in the config file.\r\n\r\nAdding support for this will likely require new APIs as temporary implemented in https://github.com/dotnet/runtime/pull/52793/commits/ed3842c6b4ee7e35fa736c9871f4207ae0a38d3c\r\n\r\n```cs\r\nnamespace System.Diagnostics\r\n{\r\n    public sealed partial class PerfCounterSettings : System.Configuration.ConfigurationElement\r\n    {\r\n        public PerfCounterSettings() { }\r\n        public int FileMappingSize { get { throw null; } }\r\n        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }\r\n    }\r\n    public sealed partial class SystemDiagnosticsSection : System.Configuration.ConfigurationSection\r\n    {\r\n        public SystemDiagnosticsSection() { }\r\n        public System.Diagnostics.PerfCounterSettings PerfCounterSettings { get { throw null; } }\r\n        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }\r\n        protected override void InitializeDefault() { }\r\n    }\r\n}\r\n```\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003esteveharter\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`bug`, `area-System.Diagnostics.PerformanceCounter`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-08-10T17:44:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Iel8w",
                                           "createdAt":  "2022-08-15T23:26:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "The `ConfigurationErrorsException` is expected for any of the strongly typed configuration sections that are no longer supported.  \r\n\r\nThis case is similar to the TraceSource case where there is no alternative API to specify this information.\r\n\r\nI agree that this is not a regression -- it\u0027s been this way since the library was introduced.   Since we haven\u0027t seen any customer requests for this I\u0027m moving this in future until we see anyone ask for it.  If folks need it, we can decide if we want to plumb it from Config of just add a static API (or runtimeconfig) option for specifying the value.",
                                           "updatedAt":  "2022-08-15T23:26:12Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "PerformanceCounters do not support config entry for \u0027filemappingsize\u0027",
        "labels":  [
                       "bug",
                       "area-System.Diagnostics.PerformanceCounter"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/75417",
        "createdAt":  "2022-09-11T15:13:40Z",
        "number":  75417,
        "author":  "jkotas",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T22:00:14Z",
        "body":  "Hit in #75264. Full log: https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-75264-merge-084c1315e5b040e5a8/System.Diagnostics.PerformanceCounter.Tests/1/console.03a615ce.log?helixlogtype=result\r\n```\r\n    System.Diagnostics.Tests.InstanceDataTests.InstanceDataCollectionCollection_CopyTo [FAIL]\r\n      System.AggregateException : One or more errors occurred. (Category \u0027Processor\u0027 does not exist.) (Category \u0027Processor\u0027 does not exist.) (Category \u0027Processor\u0027 does not exist.) (Category \u0027Processor\u0027 does not exist.) (Category \u0027Processor\u0027 does not exist.) (Category \u0027Processor\u0027 does not exist.) (Category \u0027Processor\u0027 does not exist.) (Category \u0027Processor\u0027 does not exist.) (Category \u0027Processor\u0027 does not exist.) (Category \u0027Processor\u0027 does not exist.)\r\n      ---- System.InvalidOperationException : Category \u0027Processor\u0027 does not exist.\r\n      ---- System.InvalidOperationException : Category \u0027Processor\u0027 does not exist.\r\n      ---- System.InvalidOperationException : Category \u0027Processor\u0027 does not exist.\r\n      ---- System.InvalidOperationException : Category \u0027Processor\u0027 does not exist.\r\n      ---- System.InvalidOperationException : Category \u0027Processor\u0027 does not exist.\r\n      ---- System.InvalidOperationException : Category \u0027Processor\u0027 does not exist.\r\n      ---- System.InvalidOperationException : Category \u0027Processor\u0027 does not exist.\r\n      ---- System.InvalidOperationException : Category \u0027Processor\u0027 does not exist.\r\n      ---- System.InvalidOperationException : Category \u0027Processor\u0027 does not exist.\r\n      ---- System.InvalidOperationException : Category \u0027Processor\u0027 does not exist.\r\n```\r\n```json \r\n{ \"ErrorMessage\":\"System.Diagnostics.Tests.InstanceDataTests.InstanceDataCollectionCollection_CopyTo [FAIL]\" } \r\n```\r\n\r\n\r\n\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|0|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOpsi9kw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5KFnV7",
                                           "createdAt":  "2022-09-11T15:13:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-diagnostics-performancecounter\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nHit in #75264. Full log: https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-75264-merge-084c1315e5b040e5a8/System.Diagnostics.PerformanceCounter.Tests/1/console.03a615ce.log?helixlogtype=result\r\n```\r\n    System.Diagnostics.Tests.InstanceDataTests.InstanceDataCollectionCollection_CopyTo [FAIL]\r\n      System.AggregateException : One or more errors occurred. (Category \u0027Processor\u0027 does not exist.) (Category \u0027Processor\u0027 does not exist.) (Category \u0027Processor\u0027 does not exist.) (Category \u0027Processor\u0027 does not exist.) (Category \u0027Processor\u0027 does not exist.) (Category \u0027Processor\u0027 does not exist.) (Category \u0027Processor\u0027 does not exist.) (Category \u0027Processor\u0027 does not exist.) (Category \u0027Processor\u0027 does not exist.) (Category \u0027Processor\u0027 does not exist.)\r\n      ---- System.InvalidOperationException : Category \u0027Processor\u0027 does not exist.\r\n      ---- System.InvalidOperationException : Category \u0027Processor\u0027 does not exist.\r\n      ---- System.InvalidOperationException : Category \u0027Processor\u0027 does not exist.\r\n      ---- System.InvalidOperationException : Category \u0027Processor\u0027 does not exist.\r\n      ---- System.InvalidOperationException : Category \u0027Processor\u0027 does not exist.\r\n      ---- System.InvalidOperationException : Category \u0027Processor\u0027 does not exist.\r\n      ---- System.InvalidOperationException : Category \u0027Processor\u0027 does not exist.\r\n      ---- System.InvalidOperationException : Category \u0027Processor\u0027 does not exist.\r\n      ---- System.InvalidOperationException : Category \u0027Processor\u0027 does not exist.\r\n      ---- System.InvalidOperationException : Category \u0027Processor\u0027 does not exist.\r\n```\r\n```json \r\n{ \"ErrorMessage\":\"System.Diagnostics.Tests.InstanceDataTests.InstanceDataCollectionCollection_CopyTo [FAIL]\" } \r\n```\r\n\r\n\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ejkotas\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-System.Diagnostics.PerformanceCounter`, `Known Build Error`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-09-11T15:13:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5KFnZn",
                                           "createdAt":  "2022-09-11T15:15:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "This is still failing despite multiple attempts to fix this issue https://github.com/dotnet/runtime/search?q=InstanceDataCollectionCollection\u0026type=issues",
                                           "updatedAt":  "2022-09-11T15:15:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5KHhAT",
                                           "createdAt":  "2022-09-12T09:45:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "cc @smasher164 ",
                                           "updatedAt":  "2022-09-12T09:45:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ZjgRz",
                                           "createdAt":  "2023-04-10T23:47:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "carlossanlop",
                                           "body":  "Strange to see that the CI failure happened again in a 7.0 PR but it was not collected by Known Build Error.\r\n\r\nI was able to find this test failure in the console.log file in the Tests -\u003e Artifacts tab. The output in the job said simply it encountered an error, but no output log file link.\r\n\r\n- PR: https://github.com/dotnet/runtime/pull/84486\r\n- Queue: Libraries Test Run release coreclr windows x86 Release\r\n    - net7.0-windows-Release-x86-CoreCLR_release-Windows.7.Amd64.Open\r\n- The weird job error: https://dev.azure.com/dnceng-public/public/_build/results?buildId=231568\u0026view=logs\u0026j=457f7e88-dfa2-5bd9-f871-fdf124c2477d\u0026t=bfe52dfb-2099-5c7f-ee52-70a1d81c544e\r\n- Artifacts: https://dev.azure.com/dnceng-public/public/_build/results?buildId=231568\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=4395126\u0026resultId=123557\u0026paneView=dotnet-dnceng.dnceng-build-release-tasks.helix-test-information-tab\r\n- Log: https://helixre107v0xd1eu3ibi6ka.blob.core.windows.net/dotnet-runtime-refs-pull-84486-merge-07fde91d85874d40a6/System.Diagnostics.PerformanceCounter.Tests/1/console.69230b8d.log?helixlogtype=result",
                                           "updatedAt":  "2023-04-10T23:47:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6myL2T",
                                           "createdAt":  "2025-04-11T23:10:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "Failed in #114519",
                                           "updatedAt":  "2025-04-11T23:10:37Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "System.Diagnostics.Tests.InstanceDataTests.InstanceDataCollectionCollection tests failing in CI ",
        "labels":  [
                       "needs-further-triage",
                       "area-System.Diagnostics.PerformanceCounter",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/83317",
        "createdAt":  "2023-03-13T01:26:07Z",
        "number":  83317,
        "author":  "v-wenyuxu",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-31T19:03:28Z",
        "body":  "Failed in Run: [runtime-coreclr libraries-jitstress 20230311.1](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=201752)\r\n \r\n **Failed tests:**\r\n ```\r\n net8.0-windows-Release-arm64-CoreCLR_checked-jitstress1-Windows.11.Arm64.Open\r\n     - System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_InstanceExists_Static\r\n ```\r\n \r\n **Error message:**\r\n ```\r\nAssert.True() Failure\r\nExpected: True\r\nActual:   False\r\n ```\r\n \r\n **Stack trace:**\r\n ```\r\n   at System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_InstanceExists_Static() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterCategoryTests.cs:line 274\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr) in /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodInvoker.cs:line 59\r\n ```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOYpa4mA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5XV8iY",
                                           "createdAt":  "2023-03-13T01:26:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-diagnostics-performancecounter\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nFailed in Run: [runtime-coreclr libraries-jitstress 20230311.1](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=201752)\r\n \r\n **Failed tests:**\r\n ```\r\n net8.0-windows-Release-arm64-CoreCLR_checked-jitstress1-Windows.11.Arm64.Open\r\n     - System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_InstanceExists_Static\r\n ```\r\n \r\n **Error message:**\r\n ```\r\nAssert.True() Failure\r\nExpected: True\r\nActual:   False\r\n ```\r\n \r\n **Stack trace:**\r\n ```\r\n   at System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_InstanceExists_Static() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterCategoryTests.cs:line 274\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr) in /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodInvoker.cs:line 59\r\n ```\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ev-wenyuxu\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-arm64`, `os-windows`, `JitStress`, `untriaged`, `area-System.Diagnostics.PerformanceCounter`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-03-13T01:26:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ilG-X",
                                           "createdAt":  "2023-07-27T15:52:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "carlossanlop",
                                           "body":  "The test is checking if `PerformanceCounterCategory.GetInstanceNames()` returns a number greater than zero. If not, the assert fails.\r\n\r\nThe test has been failing in this assert since at least 04/25 (unsure if Kusto is deleting results older than that):\r\n\r\n\u003cdetails\u003e\u003csummary\u003eResults (expand)\u003c/summary\u003e\r\n\r\n```\r\nAzureDevOpsTests\r\n| where TestName == \"System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_InstanceExists_Static\"\r\nand Outcome == \"Failed\"\r\n| project RunCompleted, TestName, Message, StackTrace, QueueName, BuildReason\r\n```\r\n\r\nRunCompleted | TestName | QueueName | BuildReason\r\n-- | -- | -- | --\r\n2023-04-25 20:11:52.7100000 | System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_InstanceExists_Static | windows.11.arm64.open | PullRequest\r\n2023-04-25 20:11:52.7100000 | System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_InstanceExists_Static | windows.11.arm64.open | PullRequest\r\n2023-04-25 20:11:52.7100000 | System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_InstanceExists_Static | windows.11.arm64.open | PullRequest\r\n2023-04-25 20:11:52.7100000 | System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_InstanceExists_Static | windows.11.arm64.open | PullRequest\r\n2023-04-25 20:11:52.7100000 | System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_InstanceExists_Static | windows.11.arm64.open | PullRequest\r\n2023-04-25 20:11:52.7100000 | System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_InstanceExists_Static | windows.11.arm64.open | PullRequest\r\n2023-04-25 20:11:52.7100000 | System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_InstanceExists_Static | windows.11.arm64.open | PullRequest\r\n2023-04-25 20:11:52.7100000 | System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_InstanceExists_Static | windows.11.arm64.open | PullRequest\r\n2023-04-25 20:11:52.7100000 | System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_InstanceExists_Static | windows.11.arm64.open | PullRequest\r\n2023-04-25 20:17:31.2130000 | System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_InstanceExists_Static | windows.11.arm64.open | PullRequest\r\n2023-04-25 20:17:31.2130000 | System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_InstanceExists_Static | windows.11.arm64.open | PullRequest\r\n2023-04-25 20:17:31.2130000 | System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_InstanceExists_Static | windows.11.arm64.open | PullRequest\r\n2023-04-25 20:17:31.2130000 | System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_InstanceExists_Static | windows.11.arm64.open | PullRequest\r\n2023-04-25 20:17:31.2130000 | System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_InstanceExists_Static | windows.11.arm64.open | PullRequest\r\n2023-04-25 20:17:31.2130000 | System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_InstanceExists_Static | windows.11.arm64.open | PullRequest\r\n2023-04-25 20:17:31.2130000 | System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_InstanceExists_Static | windows.11.arm64.open | PullRequest\r\n2023-04-25 20:17:31.2130000 | System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_InstanceExists_Static | windows.11.arm64.open | PullRequest\r\n2023-04-25 20:17:31.2130000 | System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_InstanceExists_Static | windows.11.arm64.open | PullRequest\r\n2023-05-22 13:55:29.7500000 | System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_InstanceExists_Static | windows.10.amd64.open.rt | PullRequest\r\n2023-07-05 12:45:40.5230000 | System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_InstanceExists_Static | windows.81.amd64.open.rt | PullRequest\r\n2023-07-05 12:45:40.5230000 | System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_InstanceExists_Static | windows.81.amd64.open.rt | PullRequest\r\n\r\n\u003c/details\u003e\r\n\r\nIn 04/25 the message was:\r\n\r\n```\r\nSystem.AggregateException : One or more errors occurred. (Specified argument was out of the range of valid values. (Parameter \u0027length\u0027)) (Specified argument was out of the range of valid values. (Parameter \u0027length\u0027)) (Specified argument was out of the range of valid values. (Parameter \u0027length\u0027)) (Specified argument was out of the range of valid values. (Parameter \u0027length\u0027)) (Specified argument was out of the range of valid values. (Parameter \u0027length\u0027)) (Specified argument was out of the range of valid values. (Parameter \u0027length\u0027)) (Specified argument was out of the range of valid values. (Parameter \u0027length\u0027)) (Specified argument was out of the range of valid values. (Parameter \u0027length\u0027)) (Specified argument was out of the range of valid values. (Parameter \u0027length\u0027)) (Specified argument was out of the range of valid values. (Parameter \u0027length\u0027))\r\n---- System.ArgumentOutOfRangeException : Specified argument was out of the range of valid values. (Parameter \u0027length\u0027)\r\n---- System.ArgumentOutOfRangeException : Specified argument was out of the range of valid values. (Parameter \u0027length\u0027)\r\n---- System.ArgumentOutOfRangeException : Specified argument was out of the range of valid values. (Parameter \u0027length\u0027)\r\n---- System.ArgumentOutOfRangeException : Specified argument was out of the range of valid values. (Parameter \u0027length\u0027)\r\n---- System.ArgumentOutOfRangeException : Specified argument was out of the range of valid values. (Parameter \u0027length\u0027)\r\n---- System.ArgumentOutOfRangeException : Specified argument was out of the range of valid values. (Parameter \u0027length\u0027)\r\n---- System.ArgumentOutOfRangeException : Specified argument was out of the range of valid values. (Parameter \u0027length\u0027)\r\n---- System.ArgumentOutOfRangeException : Specified argument was out of the range of valid values. (Parameter \u0027length\u0027)\r\n---- System.ArgumentOutOfRangeException : Specified argument was out of the range of valid values. (Parameter \u0027length\u0027)\r\n---- System.ArgumentOutOfRangeException : Specified argument was out of the range of valid values. (Parameter \u0027length\u0027)\r\n```\r\n\r\nAnd then it started showing up like this:\r\n\r\n```\r\nAssert.True() Failure\r\nExpected: True\r\nActual:   False\r\n```\r\n\r\nThe history of `src/libraries/System.Diagnostics.PerformanceCounter` [does not show any changes in April](https://github.com/dotnet/runtime/commits/main/src/libraries/System.Diagnostics.PerformanceCounter). So I suspect it\u0027s the same error (the array length was not larger than zero, it was zero, so it\u0027s technically out of the range of valid values... it is an unhelpful message in both cases).\r\n\r\nThe failure happens in Win11, mostly in arm64 but also in x64. There are only PR hits, no rolling build hits.\r\n\r\nWhile I investigate the potential root cause, I\u0027m going to change it to `AssertExtensions.GreaterThan` and will add a meaningful message argument.",
                                           "updatedAt":  "2023-07-27T16:09:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5iljfw",
                                           "createdAt":  "2023-07-27T17:01:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "carlossanlop",
                                           "body":  "The code tries to get the \"Processor\" performance counter category from the registry and then tries to get the list of all the elements under this category. The test seems to be failing very rarely to get such list. May be some configuration problem in the computer. The test even has several retries.\r\n\r\nI\u0027ll modify the test so we get a more meaningful error message that we can attach to KnownBuildError properly.\r\n",
                                           "updatedAt":  "2023-07-27T17:01:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ilriY",
                                           "createdAt":  "2023-07-27T17:09:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "carlossanlop",
                                           "body":  "Also wanted to mention that I\u0027ve seen a few cases in related areas that need the process to be elevated in arm64 for the feature to work. Something we could consider.",
                                           "updatedAt":  "2023-07-27T17:09:54Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Test failure System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_InstanceExists_Static",
        "labels":  [
                       "arch-arm64",
                       "os-windows",
                       "JitStress",
                       "area-System.Diagnostics.PerformanceCounter"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/90803",
        "createdAt":  "2023-08-18T15:14:23Z",
        "number":  90803,
        "author":  "BruceForstall",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T22:00:30Z",
        "body":  "## Error Message\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssues.md#how-to-fill-out-a-known-issue-error-section).\r\n\r\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": \"System.InvalidOperationException : Category \u0027PerformanceCounterCategory_GetCounters_Category\u0027 does not exist.\",\r\n  \"BuildRetry\": false,\r\n  \"ErrorPattern\": \"\",\r\n  \"ExcludeConsoleLog\": true\r\n}\r\n```\r\n\r\n\r\nPipeline: runtime-coreclr libraries-jitstress\r\nnet8.0-windows-Release-arm64-CoreCLR_checked-no_tiered_compilation-Windows.11.Arm64.Open\r\nTest: System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_GetCounters\r\n\r\nhttps://dev.azure.com/dnceng-public/public/_build/results?buildId=378388\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=8058808\u0026paneView=debug\u0026resultId=124445\r\n\r\n```\r\nC:\\h\\w\\B40D0980\\w\\BC6F0A05\\e\u003e\"C:\\h\\w\\B40D0980\\p\\dotnet.exe\" exec --runtimeconfig System.Diagnostics.PerformanceCounter.Tests.runtimeconfig.json --depsfile System.Diagnostics.PerformanceCounter.Tests.deps.json xunit.console.dll System.Diagnostics.PerformanceCounter.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing  \r\n  Discovering: System.Diagnostics.PerformanceCounter.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Diagnostics.PerformanceCounter.Tests (found 88 of 92 test cases)\r\n  Starting:    System.Diagnostics.PerformanceCounter.Tests (parallel test collections = on, max threads = 2)\r\n\r\nInfo: Successfully installed performance counters in C:\\h\\w\\B40D0980\\t\\crwb4l0j.wc1\\provider.man    System.Diagnostics.Tests.PerformanceDataTests.PerformanceCounter_PerformanceData [SKIP]\r\n      Condition(s) not met: \"IsRunnableEnvironment\"\r\n\r\nInfo: Successfully uninstalled the performance counters from the counter definition XML file C:\\h\\w\\B40D0980\\t\\crwb4l0j.wc1\\provider.man.    System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_GetCounters [FAIL]\r\n      System.InvalidOperationException : Category \u0027PerformanceCounterCategory_GetCounters_Category\u0027 does not exist.\r\n      Stack Trace:\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs(829,0): at System.Diagnostics.PerformanceCounterLib.GetCategorySample(String machine, String category)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs(438,0): at System.Diagnostics.PerformanceCounterCategory.GetCounterInstances(String categoryName, String machineName)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs(457,0): at System.Diagnostics.PerformanceCounterCategory.GetCounters()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterCategoryTests.cs(234,0): at System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_GetCounters()\r\n           at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n        /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs(57,0): at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)\r\n  Finished:    System.Diagnostics.PerformanceCounter.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Diagnostics.PerformanceCounter.Tests  Total: 92, Errors: 0, Failed: 1, Skipped: 1, Time: 20.245s\r\n```\r\n\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** \r\n**Result validation: :warning:** Validation could not be done without an Azure DevOps build URL on the issue. Please add it to the \"**Build: :mag_right:**\" line.\r\n**Validation performed at:** 9/9/2023 1:08:12 AM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|0|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOiQytrQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5kYM3K",
                                           "createdAt":  "2023-08-18T15:14:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-diagnostics-performancecounter\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nPipeline: runtime-coreclr libraries-jitstress\r\nnet8.0-windows-Release-arm64-CoreCLR_checked-no_tiered_compilation-Windows.11.Arm64.Open\r\nTest: System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_GetCounters\r\n\r\nhttps://dev.azure.com/dnceng-public/public/_build/results?buildId=378388\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=8058808\u0026paneView=debug\u0026resultId=124445\r\n\r\n```\r\nC:\\h\\w\\B40D0980\\w\\BC6F0A05\\e\u003e\"C:\\h\\w\\B40D0980\\p\\dotnet.exe\" exec --runtimeconfig System.Diagnostics.PerformanceCounter.Tests.runtimeconfig.json --depsfile System.Diagnostics.PerformanceCounter.Tests.deps.json xunit.console.dll System.Diagnostics.PerformanceCounter.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing  \r\n  Discovering: System.Diagnostics.PerformanceCounter.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Diagnostics.PerformanceCounter.Tests (found 88 of 92 test cases)\r\n  Starting:    System.Diagnostics.PerformanceCounter.Tests (parallel test collections = on, max threads = 2)\r\n\r\nInfo: Successfully installed performance counters in C:\\h\\w\\B40D0980\\t\\crwb4l0j.wc1\\provider.man    System.Diagnostics.Tests.PerformanceDataTests.PerformanceCounter_PerformanceData [SKIP]\r\n      Condition(s) not met: \"IsRunnableEnvironment\"\r\n\r\nInfo: Successfully uninstalled the performance counters from the counter definition XML file C:\\h\\w\\B40D0980\\t\\crwb4l0j.wc1\\provider.man.    System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_GetCounters [FAIL]\r\n      System.InvalidOperationException : Category \u0027PerformanceCounterCategory_GetCounters_Category\u0027 does not exist.\r\n      Stack Trace:\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs(829,0): at System.Diagnostics.PerformanceCounterLib.GetCategorySample(String machine, String category)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs(438,0): at System.Diagnostics.PerformanceCounterCategory.GetCounterInstances(String categoryName, String machineName)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs(457,0): at System.Diagnostics.PerformanceCounterCategory.GetCounters()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterCategoryTests.cs(234,0): at System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_GetCounters()\r\n           at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n        /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs(57,0): at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)\r\n  Finished:    System.Diagnostics.PerformanceCounter.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Diagnostics.PerformanceCounter.Tests  Total: 92, Errors: 0, Failed: 1, Skipped: 1, Time: 20.245s\r\n```\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eBruceForstall\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-arm64`, `os-windows`, `blocking-clean-ci-optional`, `area-System.Diagnostics.PerformanceCounter`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-08-18T15:14:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5kYzLM",
                                           "createdAt":  "2023-08-18T17:30:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "the test helper that creates the perf counter category verifies it exists before returning\r\nhttps://github.com/dotnet/runtime/blob/b0368ecc1287d8935e41f2d4836815d778c6930e/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs#L38-L46\r\n\r\nhttps://github.com/dotnet/runtime/blob/b0368ecc1287d8935e41f2d4836815d778c6930e/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs#L288-L311\r\n\r\nyet the test later fails as it cannot find the perf counter with this category\r\nhttps://github.com/dotnet/runtime/blob/b0368ecc1287d8935e41f2d4836815d778c6930e/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs#L814-L838\r\n\r\neither it was deleted meantime (but no other test uses a category of the same name) or one of the existence checks is faulty.",
                                           "updatedAt":  "2023-08-18T17:55:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5kY127",
                                           "createdAt":  "2023-08-18T17:41:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODGNVmQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ericstj",
                                                                               "createdAt":  "2023-09-09T00:38:07Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "There is a cache of PerformanceCounterLib\u0027s per machine/LCID, so these are shared between concurrently running tests\r\n\r\nhttps://github.com/dotnet/runtime/blob/b0368ecc1287d8935e41f2d4836815d778c6930e/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs#L991\r\n\r\neach PerformanceCounterLib caches categories in a hashtable _categoryTable. It clears this eg when it is asked to create a category. Could this table be somehow stale? \r\n\r\nincidentally, or possibly related, these two methods are called in succession, yet only one protects access to s_libraryTable against concurrent calls to GetPerformanceCounterLib(). Either both or neither should.\r\nhttps://github.com/dotnet/runtime/blob/b0368ecc1287d8935e41f2d4836815d778c6930e/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs#L314-L339\r\n\r\nmight be useful to add some asserts and inspect the locking.",
                                           "updatedAt":  "2023-08-18T17:41:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5kY6El",
                                           "createdAt":  "2023-08-18T17:58:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODGNVmg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ericstj",
                                                                               "createdAt":  "2023-09-09T00:38:19Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "a possible race due to the above seems to be\r\n- thread 1 retrieves CategoryTable on a PerformanceCounterLib, it\u0027s null, so it creates one, sets _categoryTable field\r\n- thread 2 registers a category (eg), as a result the lib calls CloseAllTables(), which clears _categoryTable field\r\n- thread 1 returns _categoryTable field which is unexpectedly null. \r\n\r\nLooks like eg _nameTable has the same possibility.\r\n\r\nthat would result in a null ref though, not failing to find the entry.",
                                           "updatedAt":  "2023-08-18T18:04:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5plTZB",
                                           "createdAt":  "2023-10-19T17:02:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Although the races mentioned above aren\u0027t necessarily going to cause this test failure, it makes a lot of sense to fix them before looking more at the test. Changing title and marking help wanted as this seems fairly straightforward to fix.",
                                           "updatedAt":  "2023-10-19T17:02:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc50ln7P",
                                           "createdAt":  "2024-02-21T07:08:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "zhangyousong",
                                           "body":  "Pls kindly help.  I also met the System.InvalidOperationException: Category does not exist issue.  When I open SystemSetting.exe on Win11 professional , and then minimize the SystemSetting window,  and then the SystemSetting.exe will be suspended. And then run the code： var counterNames = new PerformanceCounterCategory(\"GPU Engine\").GetInstanceNames(); ， will have this issue.  \r\n And I call var c = PerformanceCounterCategory.GetCategories();, when SystemSetting.exe is suspended, will get 60 categories, not including  \"GPU Engine\",  while when SystemSetting.exe is not suspened, will get 206 categories, including  \"GPU Engine\". \r\nSo why this happen , and  how should I handle this?   now I have 2 sollutions:  1, kill the suspened SystemSetting.exe , 2, maybe use C++ instead, but that\u0027s difficult.",
                                           "updatedAt":  "2024-02-21T07:08:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc52JDDM",
                                           "createdAt":  "2024-03-07T00:13:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "@danmoseley Looks like this test failed again: https://github.com/dotnet/runtime/issues/99135",
                                           "updatedAt":  "2024-03-07T00:13:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6JDK2t",
                                           "createdAt":  "2024-08-20T16:48:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "Not a customer report, but causing recurring pain in CI.  Moving to 10.0 - we should try to get to this and apply @danmoseley\u0027s suggestions @dotnet/area-system-diagnostics-performancecounter ",
                                           "updatedAt":  "2024-08-20T16:48:25Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "Address race in PerformanceCounterLib",
        "labels":  [
                       "arch-arm64",
                       "os-windows",
                       "help wanted",
                       "blocking-clean-ci-optional",
                       "needs-further-triage",
                       "area-System.Diagnostics.PerformanceCounter",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/94498",
        "createdAt":  "2023-11-08T01:23:29Z",
        "number":  94498,
        "author":  "v-wenyuxu",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T22:00:42Z",
        "body":  "**Failed in:** [runtime-coreclr libraries-jitstress 20231106.1](https://dev.azure.com/dnceng-public/public/_build/results?buildId=461683\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=10438344\u0026resultId=129054\u0026paneView=debug)\r\n\r\n**Failed tests:**\r\n```\r\nnet9.0-windows-Release-arm64-CoreCLR_checked-no_tiered_compilation-Windows.11.Arm64.Open\r\n    - System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Invalid\r\n```\r\n\r\n**Error message:**\r\n```\r\nAssert.Throws() Failure: No exception was thrown\r\nExpected: typeof(System.InvalidOperationException)\r\n```\r\n\r\n**Stack trace:**\r\n```\r\n   at System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Invalid() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterCategoryTests.cs:line 145\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr) in /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs:line 57\r\n```\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": \"at System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Invalid()\",\r\n  \"BuildRetry\": true,\r\n  \"ErrorPattern\": \"\",\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\n\r\n\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** \r\n**Result validation: :warning:**  Build internal information not found. This may happen if your build is too old. Please use a build that is no older than two weeks. If the problem persists, contact [.NET Engineering Services Team](https://dev.azure.com/dnceng/internal/_wiki/wikis/DNCEng%20Services%20Wiki/890/How-to-get-a-hold-of-Engineering-Servicing) and share this issue.\r\n**Validation performed at:** 12/6/2023 5:17:51 PM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n\r\n|Build|Definition|Test|Pull Request|\r\n|---|---|---|---|\r\n|[1146800](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146800)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Obsolete](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146800\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31651182\u0026resultId=126683)|dotnet/runtime#119111|\r\n|[1145755](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145755)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_DeleteCategory](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145755\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31613426\u0026resultId=128261)|dotnet/runtime#119584|\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|2|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOa1bWqQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5rVtap",
                                           "createdAt":  "2023-11-08T01:23:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-diagnostics-performancecounter\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n**Failed in:** [runtime-coreclr libraries-jitstress 20231106.1](https://dev.azure.com/dnceng-public/public/_build/results?buildId=461683\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=10438344\u0026resultId=129054\u0026paneView=debug)\r\n\r\n**Failed tests:**\r\n```\r\nnet9.0-windows-Release-arm64-CoreCLR_checked-no_tiered_compilation-Windows.11.Arm64.Open\r\n    - System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Invalid\r\n```\r\n\r\n**Error message:**\r\n```\r\nAssert.Throws() Failure: No exception was thrown\r\nExpected: typeof(System.InvalidOperationException)\r\n```\r\n\r\n**Stack trace:**\r\n```\r\n   at System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Invalid() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterCategoryTests.cs:line 145\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr) in /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs:line 57\r\n```\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ev-wenyuxu\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-arm64`, `os-windows`, `JitStress`, `area-System.Diagnostics.PerformanceCounter`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-11-08T01:23:43Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Test failure System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Invalid",
        "labels":  [
                       "arch-arm64",
                       "os-windows",
                       "JitStress",
                       "needs-further-triage",
                       "area-System.Diagnostics.PerformanceCounter",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/98746",
        "createdAt":  "2024-02-21T09:50:18Z",
        "number":  98746,
        "author":  "zhangyousong",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-22T20:53:44Z",
        "body":  "### Description\r\n\r\n my program have the code： var counterNames = new PerformanceCounterCategory(\"GPU Engine\").GetInstanceNames(); \r\nif the SystemSetting.exe is suspended before  my program run above code, will  have  exception:System.InvalidOperationException: Category does not exist.  \r\nAnd I call var c = PerformanceCounterCategory.GetCategories();, when SystemSetting.exe is suspended, will get 60 categories, not including \"GPU Engine\", while when SystemSetting.exe is not suspened, will get 206 categories, including \"GPU Engine\".\r\nSo why this happen , and how should I handle this? now I have 2 sollutions: 1, kill the suspened SystemSetting.exe , 2, maybe use C++ instead, but that\u0027s difficult.\r\n\r\n### Reproduction Steps\r\n\r\nOS is Windows 11 prof 22H2 22621.3007.  need firstly make the \u0027SystemSettings.exe\u0027 is suspended in task manager,and then start the test program.   two ways to suspend \u0027SystemSettings.exe\u0027 :\r\n1, open setting application(installed with Win11), and minimize it.\r\nor 2, Logout the account and login, or restart the PC, after about 2 minutes, the \u0027SystemSettings.exe\u0027 will be launched automatically by the system and suspended.\r\n\r\n### Expected behavior\r\n\r\nvar counterNames = new PerformanceCounterCategory(\"GPU Engine\").GetInstanceNames();  can always run OK with out execption, \r\nand var c = PerformanceCounterCategory.GetCategories() can always  get all the categories including \"GPU Engine\",  whether  SystemSetting.exe is suspended or not.\r\n\r\n\r\n### Actual behavior\r\n\r\nwhen SystemSetting.exe is suspended  before the program run,   var counterNames = new PerformanceCounterCategory(\"GPU Engine\").GetInstanceNames();  will have execption System.InvalidOperationException: Category does not exist. \r\nand var c = PerformanceCounterCategory.GetCategories()  only gets part of the  categories,  without \"GPU Engine\".\r\n\r\n### Regression?\r\n\r\n_No response_\r\n\r\n### Known Workarounds\r\n\r\nkill the suspended SystemSetting.exe  before execute the above codes var counterNames = new PerformanceCounterCategory(\"GPU Engine\").GetInstanceNames()\r\n\r\n### Configuration\r\n\r\n_No response_\r\n\r\n### Other information\r\n\r\nOS is Windows 11 prof 22H2 22621.3007.  .NetFramework 4.6.2, 4.7.2, 4.8 .",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhb2f3Q==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc50mk7_",
                                           "createdAt":  "2024-02-21T09:50:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-diagnostics-performancecounter\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\n\n my program have the code： var counterNames = new PerformanceCounterCategory(\"GPU Engine\").GetInstanceNames(); \r\nif the SystemSetting.exe is suspended before  my program run above code, will  have  exception:System.InvalidOperationException: Category does not exist.  \r\nAnd I call var c = PerformanceCounterCategory.GetCategories();, when SystemSetting.exe is suspended, will get 60 categories, not including \"GPU Engine\", while when SystemSetting.exe is not suspened, will get 206 categories, including \"GPU Engine\".\r\nSo why this happen , and how should I handle this? now I have 2 sollutions: 1, kill the suspened SystemSetting.exe , 2, maybe use C++ instead, but that\u0027s difficult.\n\n### Reproduction Steps\n\nOS is Windows 11 prof 22H2 22621.3007.  need firstly make the \u0027SystemSettings.exe\u0027 is suspended in task manager,and then start the test program.   two ways to suspend \u0027SystemSettings.exe\u0027 :\r\n1, open setting application(installed with Win11), and minimize it.\r\nor 2, Logout the account and login, or restart the PC, after about 2 minutes, the \u0027SystemSettings.exe\u0027 will be launched automatically by the system and suspended.\n\n### Expected behavior\n\nvar counterNames = new PerformanceCounterCategory(\"GPU Engine\").GetInstanceNames();  can always run OK with out execption, \r\nand var c = PerformanceCounterCategory.GetCategories() can always  get all the categories including \"GPU Engine\",  whether  SystemSetting.exe is suspended or not.\r\n\n\n### Actual behavior\n\nwhen SystemSetting.exe is suspended  before the program run,   var counterNames = new PerformanceCounterCategory(\"GPU Engine\").GetInstanceNames();  will have execption System.InvalidOperationException: Category does not exist. \r\nand var c = PerformanceCounterCategory.GetCategories()  only gets part of the  categories,  without \"GPU Engine\".\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\nkill the suspended SystemSetting.exe  before execute the above codes var counterNames = new PerformanceCounterCategory(\"GPU Engine\").GetInstanceNames()\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ezhangyousong\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`untriaged`, `area-System.Diagnostics.PerformanceCounter`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2024-02-21T09:50:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6FvZ_d",
                                           "createdAt":  "2024-07-22T20:53:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "Doesn\u0027t appear to be a regression.  It\u0027s not uncommon for other applications to interfere with the access to shared files/objects.  You might want to report this to the owners of SystemSettings.exe.",
                                           "updatedAt":  "2024-07-22T20:53:43Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Suspended SystemSetting.exe cause PerformanceCounterCategory  exception:System.InvalidOperationException: Category does not exist",
        "labels":  [
                       "question",
                       "needs-further-triage",
                       "area-System.Diagnostics.PerformanceCounter"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/101485",
        "createdAt":  "2024-04-24T10:56:33Z",
        "number":  101485,
        "author":  "vsfeedback",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-18T21:04:30Z",
        "body":  "_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/PerformanceCounterCategoryReadCategory/10612102)._\n\n---\nOur .NET Core app uses PerformanceCounterCategory.ReadCategory() method to read performance data for every around 15 seconds.\nCurrently we are trying to read performance data for around 10 categories.\n\nThe memory usage is high with the ReadCategory() method. Also, Gen 0 to Gen 1 promotion and Gen1 to Gen 2 promotion is higher because of this.\n\nHere is the code:\n        public void ReadCounterValues()\n        {\n            InstanceDataCollectionCollection collection = this.pcCategory.ReadCategory();\n            ICollection values = collection. Values;\n\nforeach (InstanceDataCollection value in values)\n            {\n                string categoryType = value. CounterName;\n                string counter = this. Category + \"\\\\\" + categoryType;\n                int counterPositioninMap = this. CategoryTypes.FindIndex(x =\u003e string. Equals(x, categoryType, StringComparison.OrdinalIgnoreCase));\n\n// skip reading performance data for the counters not listed in Environment.ini\n                if (counterPositioninMap \u003c 0)\n                {\n                    continue;\n                }\n\nforeach (InstanceData data in value. Values)\n                {\n                    string process = data. InstanceName;\n\n// Check if the performance data need to be collected for overall resource usage only\n                    if (this. Config.CollectOnlyOverallResourceUsage(counter))\n                    {\n                        if (!( string. Equals(process, Constants.SingleInstance) || string. Equals(process, Constants.Total)))\n                        {\n                            continue;\n                        }\n\nprocess = Constants.Total;\n                    }\n                    else if (string. Equals(process, Constants.Total) || string. Equals(process, Constants.IdleProcess))\n                    {\n                        // Skip reading counter values for Idle and total process instance\n                        continue;\n                    }\n\nif (!this. ProcessToCounterValuesMap.TryGetValue(process, out var counterValues))\n                    {\n                        counterValues = Enumerable.Repeat(0f, this. TotalCountersInCategory). ToArray();\n                        this. ProcessToCounterValuesMap.Add(process, counterValues);\n                    }\n\nif (!this. ProcessToCounterSamplesMap.TryGetValue(process, out var counterSamples))\n                    {\n                        counterSamples = Enumerable.Repeat(CounterSample.Empty, this. TotalCountersInCategory). ToArray();\n                        this. ProcessToCounterSamplesMap.Add(process, counterSamples);\n                    }\n\nfloat counterValue = 0.0f;\n\n// This value is calculated over the base line of\n                    // (No of Logical CPUS * 100), So this is going to be a\n                    // calculated over a baseline of more than 100.\n                    if (string. Equals(counter, Constants.ProcessorTimePerfMonitorCounter, StringComparison.OrdinalIgnoreCase))\n                    {\n                        counterValue = counterValue / this.numberOfLogicalPrcessors;\n                    }\n\ncounterValues[counterPositioninMap] += counterValue;\n                    counterSamples[counterPositioninMap] = data. Sample;\n                    this. ProcessToCounterValuesMap[process] = counterValues;\n                    this. ProcessToCounterSamplesMap[process] = counterSamples;\n                }\n            }\n        }\n\nReadCounterValues() method is called from another main class through the below method:\n        private void CollectAndEmitCounterValues(string category)\n        {\n            // perfCounterCategory instance to read performance data related to a specific category.\n            PerfCounterCategory perfCounterCategory = new PerfCounterCategory(category, this.settings);\n\n// Collect counter values set as samples count.\n            int sampleCount = 0;\n\n// Use the stopwatch to emit the counter metrics for every 1 minnute.\n            Stopwatch sw = new Stopwatch();\n            sw. Start();\n\nwhile (this.settings.EnableMachineMonitor)\n            {\n                // Read performance data from the machine for the category\n                perfCounterCategory.ReadCounterValues();\n\nsampleCount++;\n\n// Emit metrics for each counterType(say \u0027processor Time\u0027 under process category) under the category for every Constants.TimeToEmitCounterMetricInMillSec\n                if (sw. ElapsedMilliseconds \u003e= Constants.TimeToEmitCounterMetricInMillSec)\n                {\n                    // Get the average of the counter values for each performance counter based on number of samples collected.\n                    perfCounterCategory.CalculateAverageOfCounterValues(sampleCount);\n\n// Loop to emit metrics for each counter under a specific category.\n                    foreach (string counter in perfCounterCategory.Counters)\n                    {\n                        int topMetricCount = this.settings.CountersList[counter]. EmitTopNMetrics;\n                        long metricMinVal = this.settings.CountersList[counter]. MinMetricValue;\n                        this. SortAndEmit(perfCounterCategory.GetValuesPerCounter(counter), counter, topMetricCount, metricMinVal);\n                    }\n\n// Clear the performance data values being collected to start new sample collection.\n                    perfCounterCategory.ClearCounterValues();\n                    sw. Restart();\n                    sampleCount = 0;\n                }\n\n// Counters shouldn\u0027t be used immediately.\n                Thread.Sleep(this.settings.SleepTimeForNextCounterValue);\n            }\n        }\n\nHere is the profiler info related to this:\n![image.png](https://aka.ms/dc/image?name=B66517eca607f46f78ef830b09033cdef638456074457304554_20240309-135723-image.png\u0026tid=66517eca607f46f78ef830b09033cdef638456074457304554)\n\nCan you please suggest the optimization here to reduce memory usage by ReadCategory() method?\n\n\n---\n### Original Comments\n\n#### Feedback Bot on 3/11/2024, 06:08 AM: \n\n(private comment, text removed)\n\n---\n### Original Solutions\n(no solutions)",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOe7SHLg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc57tIcu",
                                           "createdAt":  "2024-04-24T17:01:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-diagnostics-performancecounter\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-04-24T17:01:41Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "PerformanceCounterCategory.ReadCategory() is taking larger memory allocation",
        "labels":  [
                       "needs-further-triage",
                       "area-System.Diagnostics.PerformanceCounter"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/103435",
        "createdAt":  "2024-06-13T18:20:06Z",
        "number":  103435,
        "author":  "carlossanlop",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T22:01:31Z",
        "body":  "## Build Information\r\nBuild: https://dev.azure.com/dnceng-public/public/_build/results?buildId=706881\r\nBuild error leg or test failing: System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementBy2\r\n\u003c!-- Error message template  --\u003e\r\n## Error Message\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssueJsonStepByStep.md).\r\n\r\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": \"System.InvalidOperationException : Category does not exist.\",\r\n  \"BuildRetry\": true,\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\n\r\nPR: https://github.com/dotnet/runtime/pull/103426\r\nJob: https://dev.azure.com/dnceng-public/public/_build/results?buildId=706881\u0026view=logs\u0026j=885df564-30f3-5dad-0bdc-caf444244bdf\u0026t=71aa97be-149e-50ab-5d1c-74d5540a091f\u0026l=50\r\nJob name: `windows-x86 Release Libraries_NET48`\r\nLog: https://helixre107v0xd1eu3ibi6ka.blob.core.windows.net/dotnet-runtime-refs-pull-103426-merge-01018e12059a47ae96/System.Diagnostics.PerformanceCounter.Tests/1/console.bc703876.log?helixlogtype=result\r\nOutput:\r\n```\r\n    System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementBy2 [FAIL]\r\n      System.AggregateException : One or more errors occurred.\r\n      ---- System.InvalidOperationException : Category does not exist.\r\n      ---- System.InvalidOperationException : Category does not exist.\r\n      ---- System.InvalidOperationException : Category does not exist.\r\n      ---- System.InvalidOperationException : Category does not exist.\r\n      ---- System.InvalidOperationException : Category does not exist.\r\n      ---- System.InvalidOperationException : Category does not exist.\r\n      ---- System.InvalidOperationException : Category does not exist.\r\n      ---- System.InvalidOperationException : Category does not exist.\r\n      ---- System.InvalidOperationException : Category does not exist.\r\n      ---- System.InvalidOperationException : Category does not exist.\r\n      Stack Trace:\r\n        /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs(54,0): at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs(78,0): at System.Diagnostics.Tests.Helpers.RetryOnAllPlatforms[T](Func`1 func)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs(237,0): at System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementBy2()\r\n        ----- Inner Stack Trace #1 (System.InvalidOperationException) -----\r\n           at System.Diagnostics.PerformanceCounterLib.GetCategorySample(String machine, String category)\r\n           at System.Diagnostics.PerformanceCounter.NextSample()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs(243,0): at System.Diagnostics.Tests.PerformanceCounterTests.\u003c\u003ec__DisplayClass15_0.\u003cPerformanceCounter_IncrementBy_IncrementBy2\u003eb__1()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs(75,0): at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass12_0`1.\u003cRetryOnAllPlatforms\u003eb__0()\r\n        /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs(45,0): at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName)\r\n        ----- Inner Stack Trace #2 (System.InvalidOperationException) -----\r\n           at System.Diagnostics.PerformanceCounterLib.GetCategorySample(String machine, String category)\r\n           at System.Diagnostics.PerformanceCounter.NextSample()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs(243,0): at System.Diagnostics.Tests.PerformanceCounterTests.\u003c\u003ec__DisplayClass15_0.\u003cPerformanceCounter_IncrementBy_IncrementBy2\u003eb__1()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs(75,0): at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass12_0`1.\u003cRetryOnAllPlatforms\u003eb__0()\r\n        /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs(45,0): at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName)\r\n        ----- Inner Stack Trace #3 (System.InvalidOperationException) -----\r\n           at System.Diagnostics.PerformanceCounterLib.GetCategorySample(String machine, String category)\r\n           at System.Diagnostics.PerformanceCounter.NextSample()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs(243,0): at System.Diagnostics.Tests.PerformanceCounterTests.\u003c\u003ec__DisplayClass15_0.\u003cPerformanceCounter_IncrementBy_IncrementBy2\u003eb__1()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs(75,0): at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass12_0`1.\u003cRetryOnAllPlatforms\u003eb__0()\r\n        /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs(45,0): at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName)\r\n        ----- Inner Stack Trace #4 (System.InvalidOperationException) -----\r\n           at System.Diagnostics.PerformanceCounterLib.GetCategorySample(String machine, String category)\r\n           at System.Diagnostics.PerformanceCounter.NextSample()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs(243,0): at System.Diagnostics.Tests.PerformanceCounterTests.\u003c\u003ec__DisplayClass15_0.\u003cPerformanceCounter_IncrementBy_IncrementBy2\u003eb__1()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs(75,0): at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass12_0`1.\u003cRetryOnAllPlatforms\u003eb__0()\r\n        /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs(45,0): at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName)\r\n        ----- Inner Stack Trace #5 (System.InvalidOperationException) -----\r\n           at System.Diagnostics.PerformanceCounterLib.GetCategorySample(String machine, String category)\r\n           at System.Diagnostics.PerformanceCounter.NextSample()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs(243,0): at System.Diagnostics.Tests.PerformanceCounterTests.\u003c\u003ec__DisplayClass15_0.\u003cPerformanceCounter_IncrementBy_IncrementBy2\u003eb__1()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs(75,0): at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass12_0`1.\u003cRetryOnAllPlatforms\u003eb__0()\r\n        /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs(45,0): at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName)\r\n        ----- Inner Stack Trace #6 (System.InvalidOperationException) -----\r\n           at System.Diagnostics.PerformanceCounterLib.GetCategorySample(String machine, String category)\r\n           at System.Diagnostics.PerformanceCounter.NextSample()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs(243,0): at System.Diagnostics.Tests.PerformanceCounterTests.\u003c\u003ec__DisplayClass15_0.\u003cPerformanceCounter_IncrementBy_IncrementBy2\u003eb__1()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs(75,0): at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass12_0`1.\u003cRetryOnAllPlatforms\u003eb__0()\r\n        /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs(45,0): at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName)\r\n        ----- Inner Stack Trace #7 (System.InvalidOperationException) -----\r\n           at System.Diagnostics.PerformanceCounterLib.GetCategorySample(String machine, String category)\r\n           at System.Diagnostics.PerformanceCounter.NextSample()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs(243,0): at System.Diagnostics.Tests.PerformanceCounterTests.\u003c\u003ec__DisplayClass15_0.\u003cPerformanceCounter_IncrementBy_IncrementBy2\u003eb__1()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs(75,0): at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass12_0`1.\u003cRetryOnAllPlatforms\u003eb__0()\r\n        /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs(45,0): at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName)\r\n        ----- Inner Stack Trace #8 (System.InvalidOperationException) -----\r\n           at System.Diagnostics.PerformanceCounterLib.GetCategorySample(String machine, String category)\r\n           at System.Diagnostics.PerformanceCounter.NextSample()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs(243,0): at System.Diagnostics.Tests.PerformanceCounterTests.\u003c\u003ec__DisplayClass15_0.\u003cPerformanceCounter_IncrementBy_IncrementBy2\u003eb__1()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs(75,0): at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass12_0`1.\u003cRetryOnAllPlatforms\u003eb__0()\r\n        /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs(45,0): at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName)\r\n        ----- Inner Stack Trace #9 (System.InvalidOperationException) -----\r\n           at System.Diagnostics.PerformanceCounterLib.GetCategorySample(String machine, String category)\r\n           at System.Diagnostics.PerformanceCounter.NextSample()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs(243,0): at System.Diagnostics.Tests.PerformanceCounterTests.\u003c\u003ec__DisplayClass15_0.\u003cPerformanceCounter_IncrementBy_IncrementBy2\u003eb__1()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs(75,0): at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass12_0`1.\u003cRetryOnAllPlatforms\u003eb__0()\r\n        /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs(45,0): at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName)\r\n        ----- Inner Stack Trace #10 (System.InvalidOperationException) -----\r\n           at System.Diagnostics.PerformanceCounterLib.GetCategorySample(String machine, String category)\r\n           at System.Diagnostics.PerformanceCounter.NextSample()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs(243,0): at System.Diagnostics.Tests.PerformanceCounterTests.\u003c\u003ec__DisplayClass15_0.\u003cPerformanceCounter_IncrementBy_IncrementBy2\u003eb__1()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs(75,0): at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass12_0`1.\u003cRetryOnAllPlatforms\u003eb__0()\r\n        /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs(45,0): at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName)\r\n```\r\n\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=706881\r\n**Error message validated:** `[System.InvalidOperationException : Category does not exist.`]\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 6/13/2024 6:20:23 PM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|0|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOgZ5Ulw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6BIiHe",
                                           "createdAt":  "2024-06-13T18:20:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-diagnostics-performancecounter\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-06-13T18:20:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6BnlSX",
                                           "createdAt":  "2024-06-17T23:47:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "There\u0027s a number of perfcounter issues with failure mode `System.InvalidOperationException : Category does not exist.`  This is a common mode of flakiness for these tests.  IIRC there\u0027s some loss-tolerance in the actual platform APIs that can cause this.  I\u0027m not sure the `RetryHelper` in use here helps, because I think the problem causes the static counter list in the process to be missing the counter category.  https://github.com/search?q=repo%3Adotnet%2Fruntime+%22Category+does+not+exist%22\u0026type=issues",
                                           "updatedAt":  "2024-06-17T23:47:03Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "[8.0] \"InvalidOperationException: Category does not exist\" failure in net48 win x86 in System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementBy2",
        "labels":  [
                       "arch-x86",
                       "os-windows",
                       "test-run-desktop",
                       "needs-further-triage",
                       "area-System.Diagnostics.PerformanceCounter",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/104572",
        "createdAt":  "2024-07-08T20:03:08Z",
        "number":  104572,
        "author":  "kouvel",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T22:01:45Z",
        "body":  "## Build Information\r\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=731587\r\nBuild error leg or test failing: System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Increment\r\nPull request: https://github.com/dotnet/runtime/pull/103984\r\n\u003c!-- Error message template  --\u003e\r\n## Error Message\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssueJsonStepByStep.md).\r\n\r\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": \"System.InvalidOperationException : Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.\",\r\n  \"ErrorPattern\": \"\",\r\n  \"BuildRetry\": false,\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\n\r\n## Error output\r\n\r\n```\r\nInfo: Successfully uninstalled the performance counters from the counter definition XML file C:\\h\\w\\A4A0097E\\t\\pv4sxcea.r50\\provider.man.    System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Increment [FAIL]\r\n      System.AggregateException : One or more errors occurred. (Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.) (Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.) (Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.) (Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.) (Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.) (Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.) (Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.) (Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.) (Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.) (Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.)\r\n      ---- System.InvalidOperationException : Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.\r\n      ---- System.InvalidOperationException : Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.\r\n      ---- System.InvalidOperationException : Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.\r\n      ---- System.InvalidOperationException : Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.\r\n      ---- System.InvalidOperationException : Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.\r\n      ---- System.InvalidOperationException : Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.\r\n      ---- System.InvalidOperationException : Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.\r\n      ---- System.InvalidOperationException : Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.\r\n      ---- System.InvalidOperationException : Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.\r\n      ---- System.InvalidOperationException : Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.\r\n      Stack Trace:\r\n        /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs(54,0): at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs(73,0): at System.Diagnostics.Tests.Helpers.RetryOnAllPlatforms[T](Func`1 func)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs(228,0): at System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Increment()\r\n           at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n        /_/src/coreclr/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.CoreCLR.cs(36,0): at System.Reflection.MethodBaseInvoker.InterpretedInvoke_Method(Object obj, IntPtr* args)\r\n        /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs(57,0): at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)\r\n        ----- Inner Stack Trace #1 (System.InvalidOperationException) -----\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs(829,0): at System.Diagnostics.PerformanceCounterLib.GetCategorySample(String machine, String category)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounter.cs(545,0): at System.Diagnostics.PerformanceCounter.NextSample()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs(228,0): at System.Diagnostics.Tests.PerformanceCounterTests.\u003c\u003ec__DisplayClass14_0.\u003cPerformanceCounter_Increment\u003eb__1()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs(75,0): at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass12_0`1.\u003cRetryOnAllPlatforms\u003eb__0()\r\n        /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs(45,0): at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName)\r\n        ----- Inner Stack Trace #2 (System.InvalidOperationException) -----\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs(829,0): at System.Diagnostics.PerformanceCounterLib.GetCategorySample(String machine, String category)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounter.cs(545,0): at System.Diagnostics.PerformanceCounter.NextSample()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs(228,0): at System.Diagnostics.Tests.PerformanceCounterTests.\u003c\u003ec__DisplayClass14_0.\u003cPerformanceCounter_Increment\u003eb__1()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs(75,0): at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass12_0`1.\u003cRetryOnAllPlatforms\u003eb__0()\r\n        /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs(45,0): at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName)\r\n        ----- Inner Stack Trace #3 (System.InvalidOperationException) -----\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs(829,0): at System.Diagnostics.PerformanceCounterLib.GetCategorySample(String machine, String category)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounter.cs(545,0): at System.Diagnostics.PerformanceCounter.NextSample()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs(228,0): at System.Diagnostics.Tests.PerformanceCounterTests.\u003c\u003ec__DisplayClass14_0.\u003cPerformanceCounter_Increment\u003eb__1()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs(75,0): at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass12_0`1.\u003cRetryOnAllPlatforms\u003eb__0()\r\n        /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs(45,0): at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName)\r\n        ----- Inner Stack Trace #4 (System.InvalidOperationException) -----\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs(829,0): at System.Diagnostics.PerformanceCounterLib.GetCategorySample(String machine, String category)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounter.cs(545,0): at System.Diagnostics.PerformanceCounter.NextSample()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs(228,0): at System.Diagnostics.Tests.PerformanceCounterTests.\u003c\u003ec__DisplayClass14_0.\u003cPerformanceCounter_Increment\u003eb__1()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs(75,0): at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass12_0`1.\u003cRetryOnAllPlatforms\u003eb__0()\r\n        /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs(45,0): at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName)\r\n        ----- Inner Stack Trace #5 (System.InvalidOperationException) -----\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs(829,0): at System.Diagnostics.PerformanceCounterLib.GetCategorySample(String machine, String category)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounter.cs(545,0): at System.Diagnostics.PerformanceCounter.NextSample()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs(228,0): at System.Diagnostics.Tests.PerformanceCounterTests.\u003c\u003ec__DisplayClass14_0.\u003cPerformanceCounter_Increment\u003eb__1()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs(75,0): at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass12_0`1.\u003cRetryOnAllPlatforms\u003eb__0()\r\n        /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs(45,0): at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName)\r\n        ----- Inner Stack Trace #6 (System.InvalidOperationException) -----\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs(829,0): at System.Diagnostics.PerformanceCounterLib.GetCategorySample(String machine, String category)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounter.cs(545,0): at System.Diagnostics.PerformanceCounter.NextSample()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs(228,0): at System.Diagnostics.Tests.PerformanceCounterTests.\u003c\u003ec__DisplayClass14_0.\u003cPerformanceCounter_Increment\u003eb__1()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs(75,0): at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass12_0`1.\u003cRetryOnAllPlatforms\u003eb__0()\r\n        /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs(45,0): at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName)\r\n        ----- Inner Stack Trace #7 (System.InvalidOperationException) -----\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs(829,0): at System.Diagnostics.PerformanceCounterLib.GetCategorySample(String machine, String category)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounter.cs(545,0): at System.Diagnostics.PerformanceCounter.NextSample()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs(228,0): at System.Diagnostics.Tests.PerformanceCounterTests.\u003c\u003ec__DisplayClass14_0.\u003cPerformanceCounter_Increment\u003eb__1()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs(75,0): at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass12_0`1.\u003cRetryOnAllPlatforms\u003eb__0()\r\n        /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs(45,0): at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName)\r\n        ----- Inner Stack Trace #8 (System.InvalidOperationException) -----\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs(829,0): at System.Diagnostics.PerformanceCounterLib.GetCategorySample(String machine, String category)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounter.cs(545,0): at System.Diagnostics.PerformanceCounter.NextSample()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs(228,0): at System.Diagnostics.Tests.PerformanceCounterTests.\u003c\u003ec__DisplayClass14_0.\u003cPerformanceCounter_Increment\u003eb__1()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs(75,0): at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass12_0`1.\u003cRetryOnAllPlatforms\u003eb__0()\r\n        /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs(45,0): at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName)\r\n        ----- Inner Stack Trace #9 (System.InvalidOperationException) -----\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs(829,0): at System.Diagnostics.PerformanceCounterLib.GetCategorySample(String machine, String category)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounter.cs(545,0): at System.Diagnostics.PerformanceCounter.NextSample()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs(228,0): at System.Diagnostics.Tests.PerformanceCounterTests.\u003c\u003ec__DisplayClass14_0.\u003cPerformanceCounter_Increment\u003eb__1()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs(75,0): at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass12_0`1.\u003cRetryOnAllPlatforms\u003eb__0()\r\n        /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs(45,0): at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName)\r\n        ----- Inner Stack Trace #10 (System.InvalidOperationException) -----\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterLib.cs(829,0): at System.Diagnostics.PerformanceCounterLib.GetCategorySample(String machine, String category)\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounter.cs(545,0): at System.Diagnostics.PerformanceCounter.NextSample()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs(228,0): at System.Diagnostics.Tests.PerformanceCounterTests.\u003c\u003ec__DisplayClass14_0.\u003cPerformanceCounter_Increment\u003eb__1()\r\n        /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs(75,0): at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass12_0`1.\u003cRetryOnAllPlatforms\u003eb__0()\r\n        /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs(45,0): at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName)\r\n```\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=731587\r\n**Error message validated:** `[System.InvalidOperationException : Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.`]\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 7/8/2024 8:03:26 PM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|0|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhSS0OA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6ECCBP",
                                           "createdAt":  "2024-07-08T20:03:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-diagnostics-performancecounter\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-07-08T20:03:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6FJLQ4",
                                           "createdAt":  "2024-07-17T17:00:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "Singe instance of a failure, looks to me like test failed to missing counter installation:\r\n```\r\nInfo: Successfully installed performance counters in C:\\h\\w\\A4A0097E\\t\\pv4sxcea.r50\\provider.man    System.Diagnostics.Tests.PerformanceDataTests.PerformanceCounter_PerformanceData [SKIP]\r\n      Condition(s) not met: \"IsRunnableEnvironment\"\r\n\r\nInfo: Successfully uninstalled the performance counters from the counter definition XML file C:\\h\\w\\A4A0097E\\t\\pv4sxcea.r50\\provider.man.    System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Increment [FAIL]\r\n      System.AggregateException : One or more errors occurred. (Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.) (Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.) (Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.) (Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.) (Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.) (Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.) (Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.) (Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.) (Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.) (Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.)\r\n      ---- System.InvalidOperationException : Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.\r\n```\r\n\r\nIt looks to me like Xunit disposed the counters before running the test.  It shouldn\u0027t, if I understand how text fixtures work:\r\nhttps://github.com/dotnet/runtime/blob/66ae90f3b7ec4f13fffcd71913eca0b45777e58c/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceDataTests.cs#L203-L253\r\n\r\nLeaving this open to see about hit count.  If we see more of this we should investigate why the PerformanceDataTestsFixture is disposed before finishing tests.",
                                           "updatedAt":  "2024-07-17T17:00:16Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "[8.0] Failure in `System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Increment`: Category \u0027PerformanceCounter_Increment_Category\u0027 does not exist.",
        "labels":  [
                       "area-System.Diagnostics.PerformanceCounter",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/110454",
        "createdAt":  "2024-12-05T21:34:48Z",
        "number":  110454,
        "author":  "jkoritzinsky",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T22:02:36Z",
        "body":  "## Build Information\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=887390\nBuild error leg or test failing: System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_GetCounters\nPull request: https://github.com/dotnet/runtime/pull/110378\n\u003c!-- Error message template  --\u003e\n## Error Message\n\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssueJsonStepByStep.md).\n\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\n\n```json\n{\n  \"ErrorMessage\": \"\",\n  \"ErrorPattern\": [ \"System\\\\.Diagnostics\\\\.Tests\\\\.PerformanceCounterCategoryTests.* \\\\[FAIL\\\\]\", \"System\\\\.UnauthorizedAccessException\", \"System\\\\.Security\\\\.AccessControl\\\\.Win32\\\\.SetSecurityInfo\"] ,\n  \"BuildRetry\": false,\n  \"ExcludeConsoleLog\": false\n}\n```\n\n\n\u003c!-- Known issue validation start --\u003e\n ### Known issue validation\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=887390\n**Error message validated:** `[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_GetCounters [FAIL]`]\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\n**Validation performed at:** 12/5/2024 9:35:22 PM UTC\n\u003c!-- Known issue validation end --\u003e\n\u003c!--Known issue error report start --\u003e\n\n### Report\n\n|Build|Definition|Test|Pull Request|\n|---|---|---|---|\n|[1089114](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1089114)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_CategoryType_MultiInstance](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1089114\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29662752\u0026resultId=130009)|dotnet/runtime#115746|\n|[1084190](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1084190)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Obsolete_CCD](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1084190\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29503576\u0026resultId=119399)|dotnet/runtime#116082|\n|[1079880](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1079880)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_DeleteCategory_Invalid](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1079880\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29353942\u0026resultId=112974)||\n|[1079461](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1079461)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Decrement](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1079461\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29337362\u0026resultId=126182)|dotnet/runtime#117055|\n|[1079050](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1079050)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementByReadOnly](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1079050\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29328748\u0026resultId=124688)|dotnet/runtime#117037|\n|[1078772](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1078772)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Decrement](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1078772\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29322470\u0026resultId=116922)|dotnet/runtime#117047|\n|[1076781](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1076781)|dotnet/runtime|[System.Diagnostics.Tests.CounterSampleCalculatorTests.CounterSampleCalculator_ElapsedTime](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1076781\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29228412\u0026resultId=116119)|dotnet/runtime#116780|\n|[1076517](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1076517)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_DeleteCategory_Invalid](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1076517\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29216124\u0026resultId=118785)||\n|[1073939](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1073939)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Obsolete_CCD](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1073939\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29127122\u0026resultId=111026)|dotnet/runtime#116866|\n|[1072260](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1072260)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Increment_IncrementReadOnly](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1072260\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29048364\u0026resultId=108163)|dotnet/runtime#116806|\n|[1069217](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1069217)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementBy2](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1069217\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=28944250\u0026resultId=129140)|dotnet/runtime#116702|\n#### Summary\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\n|---|---|---|\n|0|1|11|\n\u003c!--Known issue error report end --\u003e\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** \r\n**Result validation:** :warning: Provided build not found. Provide a valid build in the \"**Build:** :mag_right:\" line.\r\n**Validation performed at:** 7/14/2025 6:35:50 PM UTC\r\n\u003c!-- Known issue validation end --\u003e\n\u003c!--Known issue error report start --\u003e\n\n### Report\n\n|Build|Definition|Test|Pull Request|\n|---|---|---|---|\n|[1089114](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1089114)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_CategoryType_MultiInstance](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1089114\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29662752\u0026resultId=130009)|dotnet/runtime#115746|\n|[1084190](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1084190)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Obsolete_CCD](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1084190\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29503576\u0026resultId=119399)|dotnet/runtime#116082|\n|[1079880](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1079880)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_DeleteCategory_Invalid](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1079880\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29353942\u0026resultId=112974)||\n|[1079461](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1079461)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Decrement](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1079461\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29337362\u0026resultId=126182)|dotnet/runtime#117055|\n|[1079050](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1079050)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementByReadOnly](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1079050\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29328748\u0026resultId=124688)|dotnet/runtime#117037|\n|[1078772](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1078772)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Decrement](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1078772\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29322470\u0026resultId=116922)|dotnet/runtime#117047|\n|[1076781](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1076781)|dotnet/runtime|[System.Diagnostics.Tests.CounterSampleCalculatorTests.CounterSampleCalculator_ElapsedTime](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1076781\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29228412\u0026resultId=116119)|dotnet/runtime#116780|\n|[1076517](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1076517)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_DeleteCategory_Invalid](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1076517\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29216124\u0026resultId=118785)||\n|[1073939](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1073939)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Obsolete_CCD](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1073939\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29127122\u0026resultId=111026)|dotnet/runtime#116866|\n|[1072260](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1072260)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Increment_IncrementReadOnly](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1072260\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29048364\u0026resultId=108163)|dotnet/runtime#116806|\n|[1069217](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1069217)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementBy2](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1069217\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=28944250\u0026resultId=129140)|dotnet/runtime#116702|\n#### Summary\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\n|---|---|---|\n|0|1|11|\n\u003c!--Known issue error report end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n\r\n|Build|Definition|Test|Pull Request|\r\n|---|---|---|---|\r\n|[1153927](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153927)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Obsolete_CCD](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153927\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31877266\u0026resultId=129197)|dotnet/runtime#119930|\r\n|[1152789](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152789)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Obsolete_CCD](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152789\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31845998\u0026resultId=128216)||\r\n|[1149583](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149583)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Obsolete_CCD](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149583\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31755888\u0026resultId=129246)|dotnet/runtime#119757|\r\n|[1147335](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147335)|dotnet/runtime|[System.Diagnostics.Tests.CounterCreationDataCollectionTests.PerformanceCounterCategory_CreateCategory](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147335\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31669836\u0026resultId=130700)|dotnet/runtime#119682|\r\n|[1146800](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146800)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Obsolete](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146800\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31651182\u0026resultId=126683)|dotnet/runtime#119111|\r\n|[1145755](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145755)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_DeleteCategory](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145755\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31613426\u0026resultId=128261)|dotnet/runtime#119584|\r\n|[1143909](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143909)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Obsolete_CCD](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143909\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31548810\u0026resultId=130453)|dotnet/runtime#119518|\r\n|[1139479](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139479)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_CategoryType_MultiInstance](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139479\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31393364\u0026resultId=113887)||\r\n|[1137536](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137536)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_GetCounters](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137536\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31326040\u0026resultId=117898)|dotnet/runtime#119287|\r\n|[1135752](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135752)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_GetCounters](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135752\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31266388\u0026resultId=114132)|dotnet/runtime#119098|\r\n|[1135315](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135315)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Obsolete_CCD](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135315\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31251508\u0026resultId=127295)|dotnet/runtime#119196|\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|1|3|11|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOtwVwHA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6WSxN8",
                                           "createdAt":  "2024-12-05T21:35:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-diagnostics-performancecounter\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-12-05T21:35:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6bcrIf",
                                           "createdAt":  "2025-01-22T18:33:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeffschwMSFT",
                                           "body":  "removing blocking-clean-ci as this issue has not been hit in 30 days\n\n24-Hour Hit Count | 7-Day Hit Count | 1-Month Count\n-- | -- | --\n0 | 0 | 0\n",
                                           "updatedAt":  "2025-01-22T18:33:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc63BXAc",
                                           "createdAt":  "2025-07-14T18:37:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "```\nSystem.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n\n\n\nStack trace\n   at System.Security.AccessControl.Win32.SetSecurityInfo(ResourceType type, String name, SafeHandle handle, SecurityInfos securityInformation, SecurityIdentifier owner, SecurityIdentifier group, GenericAcl sacl, GenericAcl dacl) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/Win32.cs:line 308\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(String name, SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 263\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 368\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(SafeHandle handle, AccessControlSections includeSections) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 361\n   at System.Security.AccessControl.MutexSecurity.Persist(SafeWaitHandle handle) in /_/src/libraries/System.Threading.AccessControl/src/System/Security/AccessControl/MutexSecurity.cs:line 178\n   at System.Threading.ThreadingAclExtensions.SetAccessControl(Mutex mutex, MutexSecurity mutexSecurity) in /_/src/libraries/System.Threading.AccessControl/src/System/Threading/ThreadingAclExtensions.cs:line 35\n   at System.Diagnostics.NetFrameworkUtils.EnterMutexWithoutGlobal(String mutexName, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 32\n   at System.Diagnostics.NetFrameworkUtils.EnterMutex(String name, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 20\n   at System.Diagnostics.PerformanceCounterCategory.Create(String categoryName, String categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs:line 222\n   at System.Diagnostics.PerformanceCounterCategory.Create(String categoryName, String categoryHelp, PerformanceCounterCategoryType categoryType, String counterName, String counterHelp) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs:line 192\n   at System.Diagnostics.Tests.Helpers.CreateCategory(String categoryName, String counterName, PerformanceCounterCategoryType categoryType) in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs:line 33\n   at System.Diagnostics.Tests.Helpers.CreateCategory(String categoryName, PerformanceCounterCategoryType categoryType) in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs:line 23\n   at System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_CategoryType_MultiInstance() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterCategoryTests.cs:line 85\n   at System.RuntimeMethodHandle.InvokeMethod(ObjectHandleOnStack target, Void** arguments, ObjectHandleOnStack sig, BOOL isConstructor, ObjectHandleOnStack result)\n   at System.RuntimeMethodHandle.InvokeMethod(ObjectHandleOnStack target, Void** arguments, ObjectHandleOnStack sig, BOOL isConstructor, ObjectHandleOnStack result)\n   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture) in /_/src/libraries/System.Private.CoreLib/src/System/Reflection/RuntimeMethodInfo.cs:line 126\n```\n\nIntroduced with https://github.com/dotnet/runtime/commit/81f1f5ef694b62d801291fb70d86dd5ed9074448.  Perhaps this thread isn\u0027t the one to create the mutex and cannot modify the ACL?\n",
                                           "updatedAt":  "2025-07-14T18:37:51Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_GetCounters Failed",
        "labels":  [
                       "regression-from-last-release",
                       "area-System.Diagnostics.PerformanceCounter",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/116014",
        "createdAt":  "2025-05-27T14:38:17Z",
        "number":  116014,
        "author":  "jakobbotsch",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T22:03:38Z",
        "body":  "## Build Information\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=1051241\nBuild error leg or test failing: System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementByReadOnly\nPull request: https://github.com/dotnet/runtime/pull/115993\n\u003c!-- Error message template  --\u003e\n## Error Message\n\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssueJsonStepByStep.md).\n\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\n\n```json\n{\n  \"ErrorMessage\": [\"System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Increment\", \"System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\"],\n  \"ErrorPattern\": \"\",\n  \"BuildRetry\": false,\n  \"ExcludeConsoleLog\": false\n}\n```\n\n\n\u003c!-- Known issue validation start --\u003e\n ### Known issue validation\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=1051241\n**Error message validated:** `[System.UnauthorizedAccessException : Attempted to perform an unauthorized operation System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementByReadOnly [FAIL]`]\n**Result validation:** :x: Known issue did not match with the provided build.\n**Validation performed at:** 5/27/2025 2:38:43 PM UTC\n\u003c!-- Known issue validation end --\u003e\n\u003c!-- Known issue validation start --\u003e\n ### Known issue validation\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=1051241\n**Error message validated:** `[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementByReadOnly [FAIL]`]\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\n**Validation performed at:** 5/27/2025 2:39:42 PM UTC\n\u003c!-- Known issue validation end --\u003e\n\u003c!-- Known issue validation start --\u003e\n ### Known issue validation\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=1051241\n**Error message validated:** `[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementByReadOnly [FAIL] System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.`]\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\n**Validation performed at:** 5/27/2025 2:40:54 PM UTC\n\u003c!-- Known issue validation end --\u003e\n\u003c!--Known issue error report start --\u003e\n\n### Report\n\n|Build|Definition|Test|Pull Request|\n|---|---|---|---|\n|[1084190](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1084190)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Obsolete_CCD](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1084190\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29503576\u0026resultId=119399)|dotnet/runtime#116082|\n|[1079880](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1079880)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_DeleteCategory_Invalid](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1079880\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29353942\u0026resultId=112974)||\n|[1079461](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1079461)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Decrement](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1079461\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29337362\u0026resultId=126182)|dotnet/runtime#117055|\n|[1079050](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1079050)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementByReadOnly](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1079050\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29328748\u0026resultId=124688)|dotnet/runtime#117037|\n|[1078772](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1078772)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Decrement](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1078772\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29322470\u0026resultId=116922)|dotnet/runtime#117047|\n|[1076781](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1076781)|dotnet/runtime|[System.Diagnostics.Tests.CounterSampleCalculatorTests.CounterSampleCalculator_ElapsedTime](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1076781\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29228412\u0026resultId=116119)|dotnet/runtime#116780|\n|[1076718](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1076718)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_CreateCounter_Count0](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1076718\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29225554\u0026resultId=122987)|dotnet/runtime#116865|\n|[1076517](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1076517)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_DeleteCategory_Invalid](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1076517\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29216124\u0026resultId=118785)||\n|[1073939](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1073939)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Obsolete_CCD](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1073939\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29127122\u0026resultId=111026)|dotnet/runtime#116866|\n|[1072260](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1072260)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Increment_IncrementReadOnly](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1072260\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29048364\u0026resultId=108163)|dotnet/runtime#116806|\n|[1071464](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1071464)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_CreateCounter_MultiInstanceReadOnly](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1071464\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29024628\u0026resultId=112724)|dotnet/runtime#116784|\n#### Summary\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\n|---|---|---|\n|0|0|11|\n\u003c!--Known issue error report end --\u003e\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** \r\n**Result validation:** :warning: Provided build not found. Provide a valid build in the \"**Build:** :mag_right:\" line.\r\n**Validation performed at:** 7/17/2025 8:16:33 PM UTC\r\n\u003c!-- Known issue validation end --\u003e\n\u003c!--Known issue error report start --\u003e\n\n### Report\n\n|Build|Definition|Test|Pull Request|\n|---|---|---|---|\n|[1084190](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1084190)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Obsolete_CCD](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1084190\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29503576\u0026resultId=119399)|dotnet/runtime#116082|\n|[1079880](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1079880)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_DeleteCategory_Invalid](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1079880\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29353942\u0026resultId=112974)||\n|[1079461](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1079461)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Decrement](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1079461\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29337362\u0026resultId=126182)|dotnet/runtime#117055|\n|[1079050](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1079050)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementByReadOnly](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1079050\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29328748\u0026resultId=124688)|dotnet/runtime#117037|\n|[1078772](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1078772)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Decrement](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1078772\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29322470\u0026resultId=116922)|dotnet/runtime#117047|\n|[1076781](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1076781)|dotnet/runtime|[System.Diagnostics.Tests.CounterSampleCalculatorTests.CounterSampleCalculator_ElapsedTime](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1076781\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29228412\u0026resultId=116119)|dotnet/runtime#116780|\n|[1076718](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1076718)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_CreateCounter_Count0](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1076718\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29225554\u0026resultId=122987)|dotnet/runtime#116865|\n|[1076517](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1076517)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_DeleteCategory_Invalid](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1076517\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29216124\u0026resultId=118785)||\n|[1073939](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1073939)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Obsolete_CCD](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1073939\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29127122\u0026resultId=111026)|dotnet/runtime#116866|\n|[1072260](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1072260)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Increment_IncrementReadOnly](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1072260\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29048364\u0026resultId=108163)|dotnet/runtime#116806|\n|[1071464](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1071464)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_CreateCounter_MultiInstanceReadOnly](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1071464\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29024628\u0026resultId=112724)|dotnet/runtime#116784|\n#### Summary\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\n|---|---|---|\n|0|0|11|\n\u003c!--Known issue error report end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n\r\n|Build|Definition|Test|Pull Request|\r\n|---|---|---|---|\r\n|[1152972](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152972)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Increment_IncrementReadOnly](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152972\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31853374\u0026resultId=138806)||\r\n|[1152010](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152010)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementByReadOnly](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152010\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31823924\u0026resultId=126665)|dotnet/runtime#119658|\r\n|[2793173](https://dev.azure.com/dnceng/internal/_build/results?buildId=2793173)|dotnet-runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementBy2](https://dev.azure.com/dnceng//internal/_build/results?buildId=2793173\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=55740895\u0026resultId=111551)||\r\n|[1144943](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144943)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Decrement](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144943\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31585306\u0026resultId=120730)|dotnet/runtime#119447|\r\n|[1144329](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144329)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_CreateCounter_SetReadOnly](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144329\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31562646\u0026resultId=144367)|dotnet/runtime#119516|\r\n|[1139278](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139278)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementByReadOnly](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139278\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31389128\u0026resultId=126325)|dotnet/runtime#119351|\r\n|[1134172](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1134172)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Decrement](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1134172\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31215712\u0026resultId=122016)|dotnet/runtime#119044|\r\n|[2781361](https://dev.azure.com/dnceng/internal/_build/results?buildId=2781361)|dotnet-runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementBy2](https://dev.azure.com/dnceng//internal/_build/results?buildId=2781361\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=55670337\u0026resultId=112324)||\r\n|[1131394](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1131394)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Decrement](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1131394\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31126936\u0026resultId=125837)|dotnet/runtime#119011|\r\n|[1131075](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1131075)|dotnet/runtime|[System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Increment_IncrementReadOnly](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1131075\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31119234\u0026resultId=144226)|dotnet/runtime#119055|\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|3|10|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOxL7S0w==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6tnZqh",
                                           "createdAt":  "2025-05-27T14:43:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-diagnostics-performancecounter\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-05-27T14:43:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6u3WAg",
                                           "createdAt":  "2025-06-03T06:44:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SakeTao",
                                           "body":  "**Failed in:** [runtime-coreclr libraries-jitstressregs 20250601.1](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1056081\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=28465124\u0026resultId=112880\u0026paneView=debug)\n\n**Failed tests:**\n```\nnet10.0-windows-Release-x86-jitstressregs1-Windows.10.Amd64.Open\n    - System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_CategoryType_SingleInstance\n    - System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Obsolete\n    - System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_DeleteCategory\n    - System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_CategoryType_MultiInstance\n    - System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_GetCounters\n    - System.Diagnostics.Tests.CounterSampleCalculatorTests.CounterSampleCalculator_ElapsedTime\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_CreateCounter_MultiInstanceReadOnly\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Increment\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_CreateCounter_SetReadOnly\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Increment_IncrementReadOnly\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_RemoveInstance\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Decrement\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementBy2\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_CreateCounter_Count0\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementByReadOnly\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_NextSample_MultiInstance\n```\n\n**Error message:**\n```\n System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n```\n\n**Stack trace:**\n```\n   at System.Security.AccessControl.Win32.SetSecurityInfo(ResourceType type, String name, SafeHandle handle, SecurityInfos securityInformation, SecurityIdentifier owner, SecurityIdentifier group, GenericAcl sacl, GenericAcl dacl) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/Win32.cs:line 308\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(String name, SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 263\n   at System.Security.AccessControl.MutexSecurity.Persist(SafeWaitHandle handle) in /_/src/libraries/System.Threading.AccessControl/src/System/Security/AccessControl/MutexSecurity.cs:line 178\n   at System.Diagnostics.NetFrameworkUtils.EnterMutexWithoutGlobal(String mutexName, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 32\n   at System.Diagnostics.PerformanceCounterCategory.Delete(String categoryName) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs:line 376\n   at System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_CategoryType_SingleInstance() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterCategoryTests.cs:line 103\n   at System.Reflection.MethodBaseInvoker.InterpretedInvoke_Method(Object obj, IntPtr* args) in /_/src/coreclr/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.CoreCLR.cs:line 36\n   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr) in /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs:line 57\n```",
                                           "updatedAt":  "2025-06-03T06:44:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6xUMd3",
                                           "createdAt":  "2025-06-16T01:31:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SakeTao",
                                           "body":  "**Failed in:** [runtime-coreclr libraries-jitstress2-jitstressregs 20250614.1](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1068255\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=28900914\u0026resultId=114881\u0026paneView=debug)\n\n**Failed tests:**\n```\nnet10.0-windows-Release-x86-jitstress2_jitstressregs2-Windows.10.Amd64.Open\n    - System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Obsolete\n    - System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Invalid\n    - System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_DeleteCategory\n    - System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_CategoryType_MultiInstance\n    - System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_GetCounters\n    - System.Diagnostics.Tests.CounterSampleCalculatorTests.CounterSampleCalculator_ElapsedTime\n```\n\n**Error message:**\n```\n System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n```\n\n**Stack trace:**\n```\n   at System.Security.AccessControl.Win32.SetSecurityInfo(ResourceType type, String name, SafeHandle handle, SecurityInfos securityInformation, SecurityIdentifier owner, SecurityIdentifier group, GenericAcl sacl, GenericAcl dacl) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/Win32.cs:line 308\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(String name, SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 263\n   at System.Security.AccessControl.MutexSecurity.Persist(SafeWaitHandle handle) in /_/src/libraries/System.Threading.AccessControl/src/System/Security/AccessControl/MutexSecurity.cs:line 178\n   at System.Diagnostics.NetFrameworkUtils.EnterMutexWithoutGlobal(String mutexName, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 32\n   at System.Diagnostics.PerformanceCounterCategory.Create(String categoryName, String categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs:line 222\n   at System.Diagnostics.PerformanceCounterCategory.Create(String categoryName, String categoryHelp, String counterName, String counterHelp) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs:line 183\n   at System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Obsolete() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterCategoryTests.cs:line 115\n   at System.Reflection.MethodBaseInvoker.InterpretedInvoke_Method(Object obj, IntPtr* args) in /_/src/coreclr/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.CoreCLR.cs:line 36\n   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr) in /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs:line 57\n```",
                                           "updatedAt":  "2025-06-16T01:31:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6yf7iS",
                                           "createdAt":  "2025-06-23T02:28:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SakeTao",
                                           "body":  "**Failed in:** [runtime-coreclr libraries-jitstressregs 20250622.1](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1074980\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29159658\u0026resultId=115510\u0026paneView=debug)\n\n**Failed tests:**\n```\nnet10.0-windows-Release-x86-jitstressregs1-Windows.10.Amd64.Open\n    - System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Obsolete_CCD\n    - System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_CategoryType_SingleInstance\n    - System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Obsolete\n    - System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_DeleteCategory\n    - System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_CategoryType_MultiInstance\n    - System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_GetCounters\n    - System.Diagnostics.Tests.CounterSampleCalculatorTests.CounterSampleCalculator_ElapsedTime\n```\n\n**Error message:**\n```\n System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n```\n\n**Stack trace:**\n```\n   at System.Security.AccessControl.Win32.SetSecurityInfo(ResourceType type, String name, SafeHandle handle, SecurityInfos securityInformation, SecurityIdentifier owner, SecurityIdentifier group, GenericAcl sacl, GenericAcl dacl) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/Win32.cs:line 308\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(String name, SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 263\n   at System.Security.AccessControl.MutexSecurity.Persist(SafeWaitHandle handle) in /_/src/libraries/System.Threading.AccessControl/src/System/Security/AccessControl/MutexSecurity.cs:line 178\n   at System.Diagnostics.NetFrameworkUtils.EnterMutexWithoutGlobal(String mutexName, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 32\n   at System.Diagnostics.PerformanceCounterCategory.Create(String categoryName, String categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs:line 222\n   at System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Obsolete_CCD() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterCategoryTests.cs:line 132\n   at System.Reflection.MethodBaseInvoker.InterpretedInvoke_Method(Object obj, IntPtr* args) in /_/src/coreclr/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.CoreCLR.cs:line 36\n   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr) in /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs:line 57\n```",
                                           "updatedAt":  "2025-06-23T02:28:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6yuWEv",
                                           "createdAt":  "2025-06-24T01:48:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SakeTao",
                                           "body":  "**Failed in:** [runtime-coreclr libraries-jitstress 20250623.1](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1075293\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29176046\u0026resultId=115018\u0026paneView=debug)\n\n**Failed tests:**\n```\nnet10.0-windows-Release-x86-jitminopts-Windows.10.Amd64.Open\n    - System.Diagnostics.Tests.CounterCreationDataCollectionTests.PerformanceCounterCategory_CreateCategory\n```\n\n**Error message:**\n```\n System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n```\n\n**Stack trace:**\n```\n   at System.Security.AccessControl.Win32.SetSecurityInfo(ResourceType type, String name, SafeHandle handle, SecurityInfos securityInformation, SecurityIdentifier owner, SecurityIdentifier group, GenericAcl sacl, GenericAcl dacl) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/Win32.cs:line 308\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(String name, SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 263\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 368\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(SafeHandle handle, AccessControlSections includeSections) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 361\n   at System.Security.AccessControl.MutexSecurity.Persist(SafeWaitHandle handle) in /_/src/libraries/System.Threading.AccessControl/src/System/Security/AccessControl/MutexSecurity.cs:line 178\n   at System.Threading.ThreadingAclExtensions.SetAccessControl(Mutex mutex, MutexSecurity mutexSecurity) in /_/src/libraries/System.Threading.AccessControl/src/System/Threading/ThreadingAclExtensions.cs:line 35\n   at System.Diagnostics.NetFrameworkUtils.EnterMutexWithoutGlobal(String mutexName, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 32\n   at System.Diagnostics.NetFrameworkUtils.EnterMutex(String name, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 19\n   at System.Diagnostics.PerformanceCounterCategory.Create(String categoryName, String categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs:line 222\n   at System.Diagnostics.Tests.CounterCreationDataCollectionTests.PerformanceCounterCategory_CreateCategory() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/CounterCreationDataCollectionTests.cs:line 118\n   at System.Reflection.MethodBaseInvoker.InterpretedInvoke_Method(Object obj, IntPtr* args) in /_/src/coreclr/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.CoreCLR.cs:line 36\n   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr) in /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs:line 57\n```\n",
                                           "updatedAt":  "2025-06-24T01:48:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6z2x6T",
                                           "createdAt":  "2025-06-30T01:47:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SakeTao",
                                           "body":  "**Failed in:** [runtime-coreclr libraries-pgo 20250629.1](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1081311\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29399040\u0026resultId=112514\u0026paneView=debug)\n\n**Failed tests:**\n```\nnet10.0-windows-Release-x86-syntheticpgo-Windows.10.Amd64.Open\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Increment\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_CreateCounter_SetReadOnly\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Increment_IncrementReadOnly\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_RemoveInstance\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Decrement\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementBy2\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_CreateCounter_Count0\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementByReadOnly\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_NextSample_MultiInstance\n```\n\n**Error message:**\n```\n System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n```\n\n**Stack trace:**\n```\n   at System.Security.AccessControl.Win32.SetSecurityInfo(ResourceType type, String name, SafeHandle handle, SecurityInfos securityInformation, SecurityIdentifier owner, SecurityIdentifier group, GenericAcl sacl, GenericAcl dacl) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/Win32.cs:line 308\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(String name, SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 263\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 368\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(SafeHandle handle, AccessControlSections includeSections) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 361\n   at System.Security.AccessControl.MutexSecurity.Persist(SafeWaitHandle handle) in /_/src/libraries/System.Threading.AccessControl/src/System/Security/AccessControl/MutexSecurity.cs:line 178\n   at System.Threading.ThreadingAclExtensions.SetAccessControl(Mutex mutex, MutexSecurity mutexSecurity) in /_/src/libraries/System.Threading.AccessControl/src/System/Threading/ThreadingAclExtensions.cs:line 35\n   at System.Diagnostics.NetFrameworkUtils.EnterMutexWithoutGlobal(String mutexName, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 32\n   at System.Diagnostics.NetFrameworkUtils.EnterMutex(String name, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 19\n   at System.Diagnostics.PerformanceCounterCategory.Delete(String categoryName) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs:line 376\n   at System.Diagnostics.Tests.Helpers.DeleteCategory(String categoryName) in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs:line 56\n   at System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Increment() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs:line 231\n   at System.RuntimeMethodHandle.InvokeMethod(ObjectHandleOnStack target, Void** arguments, ObjectHandleOnStack sig, BOOL isConstructor, ObjectHandleOnStack result)\n   at System.RuntimeMethodHandle.InvokeMethod(ObjectHandleOnStack target, Void** arguments, ObjectHandleOnStack sig, BOOL isConstructor, ObjectHandleOnStack result)\n   at System.Reflection.MethodBaseInvoker.InterpretedInvoke_Method(Object obj, IntPtr* args) in /_/src/coreclr/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.CoreCLR.cs:line 36\n   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr) in /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs:line 57\n```",
                                           "updatedAt":  "2025-06-30T01:47:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc606DM8",
                                           "createdAt":  "2025-07-04T09:15:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SakeTao",
                                           "body":  "**Failed in:** [runtime-coreclr libraries-jitstress 20250703.1](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=1084793)\n\n**Failed tests:**\n```\nnet10.0-windows-Release-x86-jitminopts-Windows.10.Amd64.Open\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_NextSample_MultiInstance\n```\n\n**Error message:**\n```\nSystem.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n```\n\n**Stack trace:**\n```\n   at System.Security.AccessControl.Win32.SetSecurityInfo(ResourceType type, String name, SafeHandle handle, SecurityInfos securityInformation, SecurityIdentifier owner, SecurityIdentifier group, GenericAcl sacl, GenericAcl dacl) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/Win32.cs:line 308\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(String name, SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 263\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 368\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(SafeHandle handle, AccessControlSections includeSections) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 361\n   at System.Security.AccessControl.MutexSecurity.Persist(SafeWaitHandle handle) in /_/src/libraries/System.Threading.AccessControl/src/System/Security/AccessControl/MutexSecurity.cs:line 178\n   at System.Threading.ThreadingAclExtensions.SetAccessControl(Mutex mutex, MutexSecurity mutexSecurity) in /_/src/libraries/System.Threading.AccessControl/src/System/Threading/ThreadingAclExtensions.cs:line 35\n   at System.Diagnostics.NetFrameworkUtils.EnterMutexWithoutGlobal(String mutexName, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 32\n   at System.Diagnostics.NetFrameworkUtils.EnterMutex(String name, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 19\n   at System.Diagnostics.PerformanceCounterCategory.Create(String categoryName, String categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs:line 222\n   at System.Diagnostics.PerformanceCounterCategory.Create(String categoryName, String categoryHelp, PerformanceCounterCategoryType categoryType, String counterName, String counterHelp) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs:line 192\n   at System.Diagnostics.Tests.Helpers.CreateCategory(String categoryName, String counterName, PerformanceCounterCategoryType categoryType) in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs:line 33\n   at System.Diagnostics.Tests.Helpers.CreateCategory(String categoryName, PerformanceCounterCategoryType categoryType) in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs:line 23\n   at System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_NextSample_MultiInstance() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs:line 309\n   at System.Reflection.MethodBaseInvoker.InterpretedInvoke_Method(Object obj, IntPtr* args) in /_/src/coreclr/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.CoreCLR.cs:line 36\n   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr) in /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs:line 57\n```\n\n",
                                           "updatedAt":  "2025-07-04T09:15:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6210wS",
                                           "createdAt":  "2025-07-14T02:17:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SakeTao",
                                           "body":  "**Failed in:** [runtime-coreclr libraries-jitstress2-jitstressregs 20250712.1](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=1092725)\n\n**Failed tests:**\n```\nnet10.0-windows-Release-x64-jitstress2_jitstressregs1-Windows.10.Amd64.Open\n    - System.Diagnostics.Tests.CounterCreationDataCollectionTests.PerformanceCounterCategory_CreateCategory\n```\n\n**Error message:**\n```\nSystem.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n```\n\n**Stack trace:**\n```\n   at System.Security.AccessControl.Win32.SetSecurityInfo(ResourceType type, String name, SafeHandle handle, SecurityInfos securityInformation, SecurityIdentifier owner, SecurityIdentifier group, GenericAcl sacl, GenericAcl dacl) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/Win32.cs:line 308\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(String name, SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 263\n   at System.Security.AccessControl.MutexSecurity.Persist(SafeWaitHandle handle) in /_/src/libraries/System.Threading.AccessControl/src/System/Security/AccessControl/MutexSecurity.cs:line 178\n   at System.Diagnostics.NetFrameworkUtils.EnterMutexWithoutGlobal(String mutexName, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 32\n   at System.Diagnostics.PerformanceCounterCategory.Create(String categoryName, String categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs:line 222\n   at System.Diagnostics.Tests.CounterCreationDataCollectionTests.PerformanceCounterCategory_CreateCategory() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/CounterCreationDataCollectionTests.cs:line 118\n   at System.Reflection.MethodBaseInvoker.InterpretedInvoke_Method(Object obj, IntPtr* args) in /_/src/coreclr/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.CoreCLR.cs:line 36\n   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr) in /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs:line 57\n```",
                                           "updatedAt":  "2025-07-14T02:17:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc64efnu",
                                           "createdAt":  "2025-07-21T01:32:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SakeTao",
                                           "body":  "**Failed in:** [runtime-coreclr libraries-jitstress2-jitstressregs 20250719.1](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=1099929)\n\n**Failed tests:**\n```\nnet10.0-windows-Release-x86-jitstress2_jitstressregs0x2000-Windows.10.Amd64.Open\n    - System.Diagnostics.Tests.CounterCreationDataCollectionTests.PerformanceCounterCategory_CreateCategory\n```\n\n**Error message:**\n```\nSystem.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n```\n\n**Stack trace:**\n```\n   at System.Security.AccessControl.Win32.SetSecurityInfo(ResourceType type, String name, SafeHandle handle, SecurityInfos securityInformation, SecurityIdentifier owner, SecurityIdentifier group, GenericAcl sacl, GenericAcl dacl) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/Win32.cs:line 308\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(String name, SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 263\n   at System.Security.AccessControl.MutexSecurity.Persist(SafeWaitHandle handle) in /_/src/libraries/System.Threading.AccessControl/src/System/Security/AccessControl/MutexSecurity.cs:line 178\n   at System.Diagnostics.NetFrameworkUtils.EnterMutexWithoutGlobal(String mutexName, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 32\n   at System.Diagnostics.PerformanceCounterCategory.Create(String categoryName, String categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs:line 222\n   at System.Diagnostics.Tests.CounterCreationDataCollectionTests.PerformanceCounterCategory_CreateCategory() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/CounterCreationDataCollectionTests.cs:line 118\n   at System.Reflection.MethodBaseInvoker.InterpretedInvoke_Method(Object obj, IntPtr* args) in /_/src/coreclr/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.CoreCLR.cs:line 36\n   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr) in /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs:line 57\n```\n\n",
                                           "updatedAt":  "2025-07-21T01:32:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc66Rdou",
                                           "createdAt":  "2025-07-28T02:51:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SakeTao",
                                           "body":  "**Failed in:** [runtime-coreclr libraries-jitstress 20250727.1](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=1106803)\n\n**Failed tests:**\n```\nnet10.0-windows-Release-x86-disabler2r-Windows.10.Amd64.Open\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Decrement\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementBy2\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_CreateCounter_Count0\n```\n\n**Error message:**\n```\nSystem.AggregateException : One or more errors occurred. (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.)\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n```\n\n**Stack trace:**\n```\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 54\n   at System.Diagnostics.Tests.Helpers.CreateCategory(String categoryName, String counterName, PerformanceCounterCategoryType categoryType) in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs:line 66\n   at System.Diagnostics.Tests.Helpers.CreateCategory(String categoryName, PerformanceCounterCategoryType categoryType) in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs:line 54\n   at System.Diagnostics.Tests.PerformanceCounterTests.CreateCounterWithCategory(String categoryName, Boolean readOnly, PerformanceCounterCategoryType categoryType)\n   at System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Decrement() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs:line 208\n   at System.RuntimeMethodHandle.InvokeMethod(ObjectHandleOnStack target, Void** arguments, ObjectHandleOnStack sig, BOOL isConstructor, ObjectHandleOnStack result)\n   at System.RuntimeMethodHandle.InvokeMethod(ObjectHandleOnStack target, Void** arguments, ObjectHandleOnStack sig, BOOL isConstructor, ObjectHandleOnStack result)\n   at System.Reflection.MethodBaseInvoker.InterpretedInvoke_Method(Object obj, IntPtr* args) in /_/src/coreclr/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.CoreCLR.cs:line 36\n   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr) in /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs:line 57\n----- Inner Stack Trace #1 (System.UnauthorizedAccessException) -----\n   at System.Security.AccessControl.Win32.SetSecurityInfo(ResourceType type, String name, SafeHandle handle, SecurityInfos securityInformation, SecurityIdentifier owner, SecurityIdentifier group, GenericAcl sacl, GenericAcl dacl) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/Win32.cs:line 308\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(String name, SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 263\n   at System.Security.AccessControl.MutexSecurity.Persist(SafeWaitHandle handle) in /_/src/libraries/System.Threading.AccessControl/src/System/Security/AccessControl/MutexSecurity.cs:line 178\n   at System.Diagnostics.NetFrameworkUtils.EnterMutexWithoutGlobal(String mutexName, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 32\n   at System.Diagnostics.PerformanceCounterCategory.Create(String categoryName, String categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs:line 222\n   at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass10_0.\u003cCreateCategory\u003eb__0() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs:line 68\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 45\n----- Inner Stack Trace #2 (System.UnauthorizedAccessException) -----\n   at System.Security.AccessControl.Win32.SetSecurityInfo(ResourceType type, String name, SafeHandle handle, SecurityInfos securityInformation, SecurityIdentifier owner, SecurityIdentifier group, GenericAcl sacl, GenericAcl dacl) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/Win32.cs:line 308\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(String name, SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/librari\n```",
                                           "updatedAt":  "2025-07-28T02:51:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc67RjrR",
                                           "createdAt":  "2025-08-01T02:21:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SakeTao",
                                           "body":  "**Failed in:** [runtime-coreclr libraries-jitstress 20250731.1](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=1110129)\n\n**Failed tests:**\n```\nnet10.0-windows-Release-x86-jitstress1_tiered-Windows.10.Amd64.Open\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Increment_IncrementReadOnly\n```\n\n**Error message:**\n```\nSystem.AggregateException : One or more errors occurred. (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.)\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n```\n\n**Stack trace:**\n```\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 54\n   at System.Diagnostics.Tests.Helpers.DeleteCategory(String categoryName) in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs:line 93\n   at System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Increment_IncrementReadOnly() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs:line 270\n   at System.RuntimeMethodHandle.InvokeMethod(ObjectHandleOnStack target, Void** arguments, ObjectHandleOnStack sig, BOOL isConstructor, ObjectHandleOnStack result)\n   at System.RuntimeMethodHandle.InvokeMethod(ObjectHandleOnStack target, Void** arguments, ObjectHandleOnStack sig, BOOL isConstructor, ObjectHandleOnStack result)\n   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr) in /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs:line 57\n----- Inner Stack Trace #1 (System.UnauthorizedAccessException) -----\n   at System.Security.AccessControl.Win32.SetSecurityInfo(ResourceType type, String name, SafeHandle handle, SecurityInfos securityInformation, SecurityIdentifier owner, SecurityIdentifier group, GenericAcl sacl, GenericAcl dacl) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/Win32.cs:line 308\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(String name, SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 263\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 368\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(SafeHandle handle, AccessControlSections includeSections) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 361\n   at System.Security.AccessControl.MutexSecurity.Persist(SafeWaitHandle handle) in /_/src/libraries/System.Threading.AccessControl/src/System/Security/AccessControl/MutexSecurity.cs:line 178\n   at System.Threading.ThreadingAclExtensions.SetAccessControl(Mutex mutex, MutexSecurity mutexSecurity) in /_/src/libraries/System.Threading.AccessControl/src/System/Threading/ThreadingAclExtensions.cs:line 35\n   at System.Diagnostics.NetFrameworkUtils.EnterMutexWithoutGlobal(String mutexName, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 32\n   at System.Diagnostics.NetFrameworkUtils.EnterMutex(String name, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 19\n   at System.Diagnostics.PerformanceCounterCategory.Delete(String categoryName) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs:line 376\n   at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass12_0.\u003cDeleteCategory\u003eb__0() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs:line 95\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 45\n----- Inner Stack Trace #2 (System.UnauthorizedAccessException) -----\n   at System.Security.AccessControl.Win32.SetSecurityInfo(ResourceType type, String name, SafeHandle handle, SecurityInfos securityInformation, SecurityIdentifier owner, SecurityIdentifier group, GenericAcl sacl, GenericAcl dacl) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/Win32.cs:line 308\n   at System.Securi\n```",
                                           "updatedAt":  "2025-08-01T02:21:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc67r_UF",
                                           "createdAt":  "2025-08-04T01:25:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SakeTao",
                                           "body":  "**Failed in:** [runtime-coreclr libraries-jitstress2-jitstressregs 20250802.1](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=1111946)\n\n**Failed tests:**\n```\nnet10.0-windows-Release-x86-jitstress2_jitstressregs4-Windows.10.Amd64.Open\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_CreateCounter_MultiInstanceReadOnly\n```\n\n**Error message:**\n```\nSystem.AggregateException : One or more errors occurred. (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.)\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n```\n\n**Stack trace:**\n```\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 54\n   at System.Diagnostics.Tests.Helpers.CreateCategory(String categoryName, String counterName, PerformanceCounterCategoryType categoryType) in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs:line 66\n   at System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_CreateCounter_MultiInstanceReadOnly() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs:line 61\n   at System.Reflection.MethodBaseInvoker.InterpretedInvoke_Method(Object obj, IntPtr* args) in /_/src/coreclr/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.CoreCLR.cs:line 36\n   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr) in /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs:line 57\n----- Inner Stack Trace #1 (System.UnauthorizedAccessException) -----\n   at System.Security.AccessControl.Win32.SetSecurityInfo(ResourceType type, String name, SafeHandle handle, SecurityInfos securityInformation, SecurityIdentifier owner, SecurityIdentifier group, GenericAcl sacl, GenericAcl dacl) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/Win32.cs:line 308\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(String name, SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 263\n   at System.Security.AccessControl.MutexSecurity.Persist(SafeWaitHandle handle) in /_/src/libraries/System.Threading.AccessControl/src/System/Security/AccessControl/MutexSecurity.cs:line 178\n   at System.Diagnostics.NetFrameworkUtils.EnterMutexWithoutGlobal(String mutexName, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 32\n   at System.Diagnostics.PerformanceCounterCategory.Create(String categoryName, String categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs:line 222\n   at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass10_0.\u003cCreateCategory\u003eb__0() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs:line 68\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 45\n----- Inner Stack Trace #2 (System.UnauthorizedAccessException) -----\n   at System.Security.AccessControl.Win32.SetSecurityInfo(ResourceType type, String name, SafeHandle handle, SecurityInfos securityInformation, SecurityIdentifier owner, SecurityIdentifier group, GenericAcl sacl, GenericAcl dacl) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/Win32.cs:line 308\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(String name, SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 263\n   at System.Security.AccessControl.MutexSecurity.Persist(SafeWaitHandle handle) in /_/src/libraries/System.Threading.AccessControl/src/System/Security/AccessControl/MutexSecurity.cs:line 178\n   at System.Diagnostics.NetFrameworkUtils.EnterMutexWithoutGlobal(String mutexName, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 32\n   at System.Diagnostics.PerformanceCounterCategory.Create(String categoryName, String categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData) in /_/src/libr\n```",
                                           "updatedAt":  "2025-08-04T01:25:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc69IRCA",
                                           "createdAt":  "2025-08-11T01:33:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SakeTao",
                                           "body":  "**Failed in:** [runtime-coreclr libraries-jitstress2-jitstressregs 20250809.1](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=1118620)\n\n**Failed tests:**\n```\nnet10.0-windows-Release-x86-jitstress2_jitstressregs3-Windows.10.Amd64.Open\n    - System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_DeleteCategory_Invalid\n```\n\n**Error message:**\n```\nAssert.Throws() Failure: Exception type was not an exact match\nExpected: typeof(System.InvalidOperationException)\nActual:   typeof(System.UnauthorizedAccessException)\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n```\n\n**Stack trace:**\n```\n   at System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_DeleteCategory_Invalid() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterCategoryTests.cs:line 209\n   at System.Reflection.MethodBaseInvoker.InterpretedInvoke_Method(Object obj, IntPtr* args) in /_/src/coreclr/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.CoreCLR.cs:line 36\n   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr) in /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs:line 57\n----- Inner Stack Trace -----\n   at System.Security.AccessControl.Win32.SetSecurityInfo(ResourceType type, String name, SafeHandle handle, SecurityInfos securityInformation, SecurityIdentifier owner, SecurityIdentifier group, GenericAcl sacl, GenericAcl dacl) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/Win32.cs:line 308\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(String name, SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 263\n   at System.Security.AccessControl.MutexSecurity.Persist(SafeWaitHandle handle) in /_/src/libraries/System.Threading.AccessControl/src/System/Security/AccessControl/MutexSecurity.cs:line 178\n   at System.Diagnostics.NetFrameworkUtils.EnterMutexWithoutGlobal(String mutexName, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 32\n   at System.Diagnostics.PerformanceCounterCategory.Delete(String categoryName) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs:line 376\n   at System.Diagnostics.Tests.PerformanceCounterCategoryTests.\u003c\u003ec.\u003cPerformanceCounterCategory_DeleteCategory_Invalid\u003eb__19_0() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterCategoryTests.cs:line 209\n```",
                                           "updatedAt":  "2025-08-11T01:33:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6-bndK",
                                           "createdAt":  "2025-08-18T02:34:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SakeTao",
                                           "body":  "**Failed in:** [runtime-coreclr libraries-jitstress2-jitstressregs 20250816.1](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=1124500)\n\n**Failed tests:**\n```\nnet10.0-windows-Release-x86-jitstress2_jitstressregs1-Windows.10.Amd64.Open\n    - System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_GetCounters\n```\n\n**Error message:**\n```\nSystem.AggregateException : One or more errors occurred. (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.)\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n```\n\n**Stack trace:**\n```\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 54\n   at System.Diagnostics.Tests.Helpers.CreateCategory(String categoryName, String counterName, PerformanceCounterCategoryType categoryType) in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs:line 66\n   at System.Diagnostics.Tests.Helpers.CreateCategory(String categoryName, PerformanceCounterCategoryType categoryType) in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs:line 54\n   at System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_GetCounters() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterCategoryTests.cs:line 234\n   at System.Reflection.MethodBaseInvoker.InterpretedInvoke_Method(Object obj, IntPtr* args) in /_/src/coreclr/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.CoreCLR.cs:line 36\n   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr) in /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs:line 57\n----- Inner Stack Trace #1 (System.UnauthorizedAccessException) -----\n   at System.Security.AccessControl.Win32.SetSecurityInfo(ResourceType type, String name, SafeHandle handle, SecurityInfos securityInformation, SecurityIdentifier owner, SecurityIdentifier group, GenericAcl sacl, GenericAcl dacl) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/Win32.cs:line 308\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(String name, SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 263\n   at System.Security.AccessControl.MutexSecurity.Persist(SafeWaitHandle handle) in /_/src/libraries/System.Threading.AccessControl/src/System/Security/AccessControl/MutexSecurity.cs:line 178\n   at System.Diagnostics.NetFrameworkUtils.EnterMutexWithoutGlobal(String mutexName, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 32\n   at System.Diagnostics.PerformanceCounterCategory.Create(String categoryName, String categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs:line 222\n   at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass10_0.\u003cCreateCategory\u003eb__0() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs:line 68\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 45\n----- Inner Stack Trace #2 (System.UnauthorizedAccessException) -----\n   at System.Security.AccessControl.Win32.SetSecurityInfo(ResourceType type, String name, SafeHandle handle, SecurityInfos securityInformation, SecurityIdentifier owner, SecurityIdentifier group, GenericAcl sacl, GenericAcl dacl) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/Win32.cs:line 308\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(String name, SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 263\n   at System.Security.AccessControl.MutexSecurity.Persist(SafeWaitHandle handle) in /_/src/libraries/System.Threading.AccessControl/src/System/Security/AccessControl/MutexSecurity.cs:line 178\n   at System.Diagnostics.NetFrameworkUtils.EnterMutexWithoutGlobal(String mutexName, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 32\n```",
                                           "updatedAt":  "2025-08-18T02:34:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6_17l7",
                                           "createdAt":  "2025-08-25T01:53:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SakeTao",
                                           "body":  "**Failed in:** [runtime-coreclr libraries-jitstress2-jitstressregs 20250823.1](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=1130374)\n\n**Failed tests:**\n```\nnet10.0-windows-Release-x86-jitstress2_jitstressregs8-Windows.10.Amd64.Open\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_CreateCounter_MultiInstanceReadOnly\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_Increment\n```\n\n**Error message:**\n```\nSystem.AggregateException : One or more errors occurred. (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.)\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n```\n\n**Stack trace:**\n```\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 54\n   at System.Diagnostics.Tests.Helpers.CreateCategory(String categoryName, String counterName, PerformanceCounterCategoryType categoryType) in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs:line 66\n   at System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_CreateCounter_MultiInstanceReadOnly() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs:line 61\n   at System.Reflection.MethodBaseInvoker.InterpretedInvoke_Method(Object obj, IntPtr* args) in /_/src/coreclr/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.CoreCLR.cs:line 36\n   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr) in /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs:line 57\n----- Inner Stack Trace #1 (System.UnauthorizedAccessException) -----\n   at System.Security.AccessControl.Win32.SetSecurityInfo(ResourceType type, String name, SafeHandle handle, SecurityInfos securityInformation, SecurityIdentifier owner, SecurityIdentifier group, GenericAcl sacl, GenericAcl dacl) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/Win32.cs:line 308\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(String name, SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 263\n   at System.Security.AccessControl.MutexSecurity.Persist(SafeWaitHandle handle) in /_/src/libraries/System.Threading.AccessControl/src/System/Security/AccessControl/MutexSecurity.cs:line 178\n   at System.Diagnostics.NetFrameworkUtils.EnterMutexWithoutGlobal(String mutexName, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 32\n   at System.Diagnostics.PerformanceCounterCategory.Create(String categoryName, String categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs:line 222\n   at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass10_0.\u003cCreateCategory\u003eb__0() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs:line 68\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 45\n----- Inner Stack Trace #2 (System.UnauthorizedAccessException) -----\n   at System.Security.AccessControl.Win32.SetSecurityInfo(ResourceType type, String name, SafeHandle handle, SecurityInfos securityInformation, SecurityIdentifier owner, SecurityIdentifier group, GenericAcl sacl, GenericAcl dacl) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/Win32.cs:line 308\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(String name, SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 263\n   at System.Security.AccessControl.MutexSecurity.Persist(SafeWaitHandle handle) in /_/src/libraries/System.Threading.AccessControl/src/System/Security/AccessControl/MutexSecurity.cs:line 178\n   at System.Diagnostics.NetFrameworkUtils.EnterMutexWithoutGlobal(String mutexName, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 32\n   at System.Diagnostics.PerformanceCounterCategory.Create(String categoryName, String categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData) in /_/src/libr\n```",
                                           "updatedAt":  "2025-08-25T01:53:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7BVBlr",
                                           "createdAt":  "2025-09-02T01:27:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SakeTao",
                                           "body":  "**Failed in:** [runtime-coreclr libraries-jitstress 20250901.1](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=1136169)\n\n**Failed tests:**\n```\nnet10.0-windows-Release-x86-jitminopts-Windows.10.Amd64.Open\n    - System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementBy2\n```\n\n**Error message:**\n```\nSystem.AggregateException : One or more errors occurred. (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.)\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n```\n\n**Stack trace:**\n```\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 54\n   at System.Diagnostics.Tests.Helpers.CreateCategory(String categoryName, String counterName, PerformanceCounterCategoryType categoryType) in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs:line 66\n   at System.Diagnostics.Tests.Helpers.CreateCategory(String categoryName, PerformanceCounterCategoryType categoryType) in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs:line 54\n   at System.Diagnostics.Tests.PerformanceCounterTests.CreateCounterWithCategory(String categoryName, Boolean readOnly, PerformanceCounterCategoryType categoryType)\n   at System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementBy2() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterTests.cs:line 238\n   at System.Reflection.MethodBaseInvoker.InterpretedInvoke_Method(Object obj, IntPtr* args) in /_/src/coreclr/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.CoreCLR.cs:line 36\n   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr) in /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs:line 57\n----- Inner Stack Trace #1 (System.UnauthorizedAccessException) -----\n   at System.Security.AccessControl.Win32.SetSecurityInfo(ResourceType type, String name, SafeHandle handle, SecurityInfos securityInformation, SecurityIdentifier owner, SecurityIdentifier group, GenericAcl sacl, GenericAcl dacl) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/Win32.cs:line 308\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(String name, SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 263\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 368\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(SafeHandle handle, AccessControlSections includeSections) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 361\n   at System.Security.AccessControl.MutexSecurity.Persist(SafeWaitHandle handle) in /_/src/libraries/System.Threading.AccessControl/src/System/Security/AccessControl/MutexSecurity.cs:line 178\n   at System.Threading.ThreadingAclExtensions.SetAccessControl(Mutex mutex, MutexSecurity mutexSecurity) in /_/src/libraries/System.Threading.AccessControl/src/System/Threading/ThreadingAclExtensions.cs:line 35\n   at System.Diagnostics.NetFrameworkUtils.EnterMutexWithoutGlobal(String mutexName, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 32\n   at System.Diagnostics.NetFrameworkUtils.EnterMutex(String name, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 19\n   at System.Diagnostics.PerformanceCounterCategory.Create(String categoryName, String categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs:line 222\n   at System.Diagnostics.PerformanceCounterCategory.Create(String categoryName, String categoryHelp, PerformanceCounterCategoryType categoryType, String counterName, String counterHelp) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs:line 192\n   at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass10_0.\u003cCreateCategory\u003eb__0(\n```",
                                           "updatedAt":  "2025-09-02T01:27:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7EHMtH",
                                           "createdAt":  "2025-09-15T02:00:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SakeTao",
                                           "body":  "**Failed in:** [runtime-coreclr libraries-jitstressregs 20250914.1](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=1147674)\n\n**Failed tests:**\n```\nnet10.0-windows-Release-x86-jitstressregs4-Windows.10.Amd64.Open\n    - System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_CategoryType_SingleInstance\n    - System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Obsolete\n    - System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_DeleteCategory\n```\n\n**Error message:**\n```\nSystem.AggregateException : One or more errors occurred. (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.)\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n```\n\n**Stack trace:**\n```\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 54\n   at System.Diagnostics.Tests.Helpers.DeleteCategory(String categoryName) in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs:line 93\n   at System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_CategoryType_SingleInstance() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterCategoryTests.cs:line 103\n   at System.Reflection.MethodBaseInvoker.InterpretedInvoke_Method(Object obj, IntPtr* args) in /_/src/coreclr/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.CoreCLR.cs:line 36\n   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr) in /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs:line 57\n----- Inner Stack Trace #1 (System.UnauthorizedAccessException) -----\n   at System.Security.AccessControl.Win32.SetSecurityInfo(ResourceType type, String name, SafeHandle handle, SecurityInfos securityInformation, SecurityIdentifier owner, SecurityIdentifier group, GenericAcl sacl, GenericAcl dacl) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/Win32.cs:line 308\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(String name, SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 263\n   at System.Security.AccessControl.MutexSecurity.Persist(SafeWaitHandle handle) in /_/src/libraries/System.Threading.AccessControl/src/System/Security/AccessControl/MutexSecurity.cs:line 178\n   at System.Diagnostics.NetFrameworkUtils.EnterMutexWithoutGlobal(String mutexName, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 32\n   at System.Diagnostics.PerformanceCounterCategory.Delete(String categoryName) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs:line 376\n   at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass12_0.\u003cDeleteCategory\u003eb__0() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs:line 95\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 45\n----- Inner Stack Trace #2 (System.UnauthorizedAccessException) -----\n   at System.Security.AccessControl.Win32.SetSecurityInfo(ResourceType type, String name, SafeHandle handle, SecurityInfos securityInformation, SecurityIdentifier owner, SecurityIdentifier group, GenericAcl sacl, GenericAcl dacl) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/Win32.cs:line 308\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(String name, SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 263\n   at System.Security.AccessControl.MutexSecurity.Persist(SafeWaitHandle handle) in /_/src/libraries/System.Threading.AccessControl/src/System/Security/AccessControl/MutexSecurity.cs:line 178\n   at System.Diagnostics.NetFrameworkUtils.EnterMutexWithoutGlobal(String mutexName, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 32\n   at System.Diagnostics.PerformanceCounterCategory.Delete(String categoryName) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs:line 376\n   at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass12_0.\u003cDeleteCategory\u003eb__0() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/Helpers.cs:l\n```",
                                           "updatedAt":  "2025-09-15T02:00:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7EvtLT",
                                           "createdAt":  "2025-09-17T01:11:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SakeTao",
                                           "body":  "**Failed in:** [runtime-coreclr libraries-jitstress 20250916.1](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=1149266)\n\n**Failed tests:**\n```\nnet10.0-windows-Release-x64-jitstress2_tiered-Windows.10.Amd64.Open\n    - System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Obsolete_CCD\n```\n\n**Error message:**\n```\nSystem.AggregateException : One or more errors occurred. (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.) (Attempted to perform an unauthorized operation.)\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n---- System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n```\n\n**Stack trace:**\n```\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 54\n   at System.Diagnostics.Tests.PerformanceCounterCategoryTests.PerformanceCounterCategory_Create_Obsolete_CCD() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterCategoryTests.cs:line 135\n   at System.RuntimeMethodHandle.InvokeMethod(ObjectHandleOnStack target, Void** arguments, ObjectHandleOnStack sig, BOOL isConstructor, ObjectHandleOnStack result)\n   at System.Reflection.MethodBaseInvoker.InterpretedInvoke_Method(Object obj, IntPtr* args) in /_/src/coreclr/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.CoreCLR.cs:line 36\n   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture) in /_/src/libraries/System.Private.CoreLib/src/System/Reflection/RuntimeMethodInfo.cs:line 126\n----- Inner Stack Trace #1 (System.UnauthorizedAccessException) -----\n   at System.Security.AccessControl.Win32.SetSecurityInfo(ResourceType type, String name, SafeHandle handle, SecurityInfos securityInformation, SecurityIdentifier owner, SecurityIdentifier group, GenericAcl sacl, GenericAcl dacl) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/Win32.cs:line 308\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(String name, SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 263\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(SafeHandle handle, AccessControlSections includeSections, Object exceptionContext) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 368\n   at System.Security.AccessControl.NativeObjectSecurity.Persist(SafeHandle handle, AccessControlSections includeSections) in /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs:line 361\n   at System.Security.AccessControl.MutexSecurity.Persist(SafeWaitHandle handle) in /_/src/libraries/System.Threading.AccessControl/src/System/Security/AccessControl/MutexSecurity.cs:line 178\n   at System.Threading.ThreadingAclExtensions.SetAccessControl(Mutex mutex, MutexSecurity mutexSecurity) in /_/src/libraries/System.Threading.AccessControl/src/System/Threading/ThreadingAclExtensions.cs:line 35\n   at System.Diagnostics.NetFrameworkUtils.EnterMutexWithoutGlobal(String mutexName, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 32\n   at System.Diagnostics.NetFrameworkUtils.EnterMutex(String name, Mutex\u0026 mutex) in /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs:line 19\n   at System.Diagnostics.PerformanceCounterCategory.Create(String categoryName, String categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs:line 222\n   at System.Diagnostics.PerformanceCounterCategory.Create(String categoryName, String categoryHelp, CounterCreationDataCollection counterData) in /_/src/libraries/System.Diagnostics.PerformanceCounter/src/System/Diagnostics/PerformanceCounterCategory.cs:line 201\n   at System.Diagnostics.Tests.PerformanceCounterCategoryTests.\u003c\u003ec__DisplayClass11_0.\u003cPerformanceCounterCategory_Create_Obsolete_CCD\u003eb__0() in /_/src/libraries/System.Diagnostics.PerformanceCounter/tests/PerformanceCounterCategoryTests.cs:line 137\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 45\n----- Inner Stack Trace #2 (Syste\n```\n\n",
                                           "updatedAt":  "2025-09-17T01:11:57Z"
                                       }
                                   ],
                         "totalCount":  18
                     },
        "title":  "System.Diagnostics.Tests.PerformanceCounterTests.PerformanceCounter_IncrementBy_IncrementByReadOnly failed with \"Attempted to perform an unauthorized operation\"",
        "labels":  [
                       "blocking-clean-ci",
                       "area-System.Diagnostics.PerformanceCounter",
                       "Known Build Error"
                   ]
    }
]
