[
    {
        "url":  "https://github.com/dotnet/runtime/issues/27774",
        "createdAt":  "2018-10-30T22:14:30Z",
        "number":  27774,
        "author":  "jeremymeng",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOA9JNMw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "StanislavChankov",
                                            "createdAt":  "2019-08-11T05:50:54Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Bluejanis",
                                            "createdAt":  "2020-02-14T08:54:44Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "OzBob",
                                            "createdAt":  "2020-03-04T01:59:06Z"
                                        }
                                    ],
                          "totalCount":  3
                      },
        "updatedAt":  "2024-01-22T02:27:27Z",
        "body":  "1. clone to get the signalr chat sample at https://github.com/aspnet/SignalR-samples/tree/master/ChatSample\r\n2. open the solution, restore nuget package and Ctrl+F5 to run the service\r\n3. clone the webtest repro project at https://github.com/jeremymeng/WebTestRepro\r\n4. open `WebAndLoadTestProject2.sln`, restore then build the project. You will need the web test payload for your visual studio installation to support this type of project.\r\n![image](https://user-images.githubusercontent.com/7583839/47753663-94b4ae00-dc55-11e8-81c5-8f5dbda8f31f.png)\r\n5. notice that the `bin\\Debug` directory has 41 files\r\n6. now open the webtest.webtest file in visual studio. select Debug Test, pause before starting from the drop down\r\n\r\n![image](https://user-images.githubusercontent.com/7583839/47753754-dcd3d080-dc55-11e8-9198-8af3ecd1ee42.png)\r\n\r\n7. under web test solution folder, check the most recent `TestResults\\\u003cuser_machineName timestamp\u003e\\Out` folder. This is where the test is actually running. The folder only has 25 files under it. (This could be a bug in Web Test framework. I already logged a separate internal bug against VSTT team)\r\n8. copy all files from bin\\Debug folder into the Out folder (skip existing)\r\n9. click Run button (the first button) to continue the web test\r\n![image](https://user-images.githubusercontent.com/7583839/47753925-77ccaa80-dc56-11e8-8da4-d5de06723800.png)\r\n\r\n\r\n**Actual:**\r\n```\r\nSystem.IO.InvalidDataException\r\n  HResult=0x80131501\r\n  Message=Invalid negotiation response received.\r\n  Source=Microsoft.AspNetCore.Http.Connections.Common\r\n  StackTrace:\r\n   at Microsoft.AspNetCore.Http.Connections.NegotiateProtocol.ParseResponse(Stream content)\r\n   at Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.\u003cNegotiateAsync\u003ed__45.MoveNext()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.\u003cGetNegotiationResponseAsync\u003ed__52.MoveNext()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.\u003cSelectAndStartTransport\u003ed__44.MoveNext()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.\u003cStartAsyncCore\u003ed__41.MoveNext()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.\u003cStartAsync\u003ed__40.MoveNext()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SignalR.Client.HttpConnectionFactory.\u003cConnectAsync\u003ed__3.MoveNext()\r\n   at Microsoft.AspNetCore.SignalR.Client.HttpConnectionFactory.\u003cConnectAsync\u003ed__3.MoveNext()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.\u003cStartAsyncCore\u003ed__31.MoveNext()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.\u003cStartAsync\u003ed__24.MoveNext()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at iRel8.Service.WebTests.WebtestPlugins.SignalRJoinRoomPlugin.\u003cPreRequest\u003ed__0.MoveNext() in C:\\github\\jeremymeng\\WebTestRepro\\WebAndLoadTestProject2\\SignalRJoinRoomPlugin.cs:line 16\r\n\r\nInner Exception 1:\r\nTypeInitializationException: The type initializer for \u0027JsonArrayPool`1\u0027 threw an exception.\r\n\r\nInner Exception 2:\r\nFileNotFoundException: Could not load file or assembly \u0027System.Buffers, Version=4.0.2.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\u0027 or one of its dependencies. The system cannot find the file specified.\r\n```\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOcWyWmw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQzNDQ4OTkyNw==",
                                           "createdAt":  "2018-10-30T22:15:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeremymeng",
                                           "body":  "I\u0027ve shared a msbuild.binlog at `\\\\scratch2\\scratch\\yumeng\\WebTestRepro\\msbuild.binlog`",
                                           "updatedAt":  "2018-10-30T22:15:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQzNDUwNDgxMQ==",
                                           "createdAt":  "2018-10-30T23:16:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeremymeng",
                                           "body":  "same test code runs find in a 4.7.1 WPF app\r\n```csharp\r\n            var baseUrl = \"http://localhost:15935\";\r\n\r\n            var connection = new HubConnectionBuilder()\r\n                .WithUrl($\"{baseUrl}/chat\")\r\n                .Build();\r\n\r\n            await connection.StartAsync();\r\n```",
                                           "updatedAt":  "2018-10-30T23:16:06Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQzNDU0MzQxNg==",
                                           "createdAt":  "2018-10-31T02:55:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "karelz",
                                           "body":  "cc @joperezr @wtgodbe ",
                                           "updatedAt":  "2018-10-31T02:55:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQzNDY2OTk4OA==",
                                           "createdAt":  "2018-10-31T12:34:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "GSPP",
                                           "body":  "@jeremymeng this could be related to https://github.com/dotnet/corefx/issues/30642. There\u0027s currently a lot of trouble with wrong binding redirects being added by NuGet. I have made a list of related issues: https://github.com/dotnet/standard/issues/481#issuecomment-429643615",
                                           "updatedAt":  "2018-10-31T12:34:13Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQzNDc1NjQ4NQ==",
                                           "createdAt":  "2018-10-31T16:32:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "joperezr",
                                           "body":  "I believe that what might be happening here is that the right binding redirects are not being added as System.Buffers might be an implementation-only dependency. In order to check if this is the case, @jeremymeng do you mind running fuslogvw when the error happens so that we can check who is trying to load System.Buffers? Also, do you have any binding redirects present in your App.config?",
                                           "updatedAt":  "2018-10-31T16:32:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQzNDc2MTc4OQ==",
                                           "createdAt":  "2018-10-31T16:46:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "joperezr",
                                           "body":  "Actually now that I have tried to repro this, I do have a binding redirect created for me for System.Buffers so I can\u0027t really repro this. I\u0027ve also just checked in your binlog and it looks like there was a binding redirect suggested as well for System.Buffers that would have fixed this. Do you have auto binding redirects turned on?",
                                           "updatedAt":  "2018-10-31T16:46:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQzNDc2NjI4NA==",
                                           "createdAt":  "2018-10-31T16:58:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeremymeng",
                                           "body":  "I have tried with auto binding redirects on/off but didn\u0027t see any difference.  Where did you see the binding redirect created? In my webtest project I don\u0027t see any app.config or web.config.",
                                           "updatedAt":  "2018-10-31T16:58:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQzNDc2OTQ4OQ==",
                                           "createdAt":  "2018-10-31T17:07:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeremymeng",
                                           "body":  "fusion logs are shared at `\\\\scratch2\\scratch\\yumeng\\fuslogs`.  The error for System.Buffers\r\n\r\n```\r\nLOG: Attempting download of new URL file:///C:/github/jeremymeng/WebTestRepro/TestResults/yumeng_YU-Z230 2018-10-31 10_03_52/Out/System.Buffers.DLL.\r\nLOG: Assembly download was successful. Attempting setup of file: C:\\github\\jeremymeng\\WebTestRepro\\TestResults\\yumeng_YU-Z230 2018-10-31 10_03_52\\Out\\System.Buffers.dll\r\nLOG: Entering run-from-source setup phase.\r\nLOG: Assembly Name is: System.Buffers, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\r\nWRN: Comparing the assembly name resulted in the mismatch: Build Number\r\nERR: The assembly reference did not match the assembly definition found.\r\nERR: Run-from-source setup phase failed with hr = 0x80131040.\r\n```\r\n\r\n**Edit:** fixed the share location",
                                           "updatedAt":  "2018-10-31T19:07:00Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQzNDc3NDA0Nw==",
                                           "createdAt":  "2018-10-31T17:19:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "joperezr",
                                           "body":  "\u003e Where did you see the bidning redirect created?\r\n\r\nIf you check the ResolveAssemblyReferences target, RAR noticed there was a conflict with the versions of System.Buffers so it suggested a binding redirect that will force the 4.0.3 version to be loaded (which is the one that you found according to the fuslog). If you have auto binding redirects turned on, then we should be adding these binding redirects that RAR suggested into your resulting config file (meaning the one located at bin/Debug. If this is a web project, then when turning auto generate binding redirects on you should get a warning when building telling you you need some redirects, which when double clicking the warning should add them to your web.config.\r\n\r\n![image](https://user-images.githubusercontent.com/13854455/47806664-85863c80-dcf7-11e8-8f8f-58011a27e59d.png)\r\n",
                                           "updatedAt":  "2018-10-31T17:27:11Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQzNDc3ODc5OA==",
                                           "createdAt":  "2018-10-31T17:33:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAmzaLw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "dotus-git",
                                                                               "createdAt":  "2018-11-02T17:08:08Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "matt-augustine",
                                                                               "createdAt":  "2018-12-19T20:22:54Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ashuthinks",
                                                                               "createdAt":  "2019-04-12T08:15:15Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "jeremymeng",
                                           "body":  "My project is a **WebTest** project (Output Type of Class Library).  I don\u0027t get any warnings or errors when building the project in Visual Studio. There are no *.config files under `bin\\Debug` even I have auto generate binding redirects on\r\n\r\n![image](https://user-images.githubusercontent.com/7583839/47806920-10ffcd80-dcf8-11e8-8f25-930d20603563.png)\r\n\r\n```\r\n1\u003eCopyFilesToOutputDirectory:\r\n1\u003e  Copying file from \"obj\\Debug\\WebAndLoadTestProject2.dll\" to \"bin\\Debug\\WebAndLoadTestProject2.dll\".\r\n1\u003e  WebAndLoadTestProject2 -\u003e C:\\github\\jeremymeng\\WebTestRepro\\WebAndLoadTestProject2\\bin\\Debug\\WebAndLoadTestProject2.dll\r\n1\u003e  Copying file from \"obj\\Debug\\WebAndLoadTestProject2.pdb\" to \"bin\\Debug\\WebAndLoadTestProject2.pdb\".\r\n1\u003e\r\n1\u003eBuild succeeded.\r\n1\u003e    0 Warning(s)\r\n1\u003e    0 Error(s)\r\n1\u003e\r\n1\u003eTime Elapsed 00:00:00.41\r\n========== Rebuild All: 1 succeeded, 0 failed, 0 skipped ==========\r\n```\r\nThe config files I saw from fuslog are\r\n```\r\nLOG: Using application configuration file: C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\QTAgent32_40.exe.Config\r\nLOG: Using host configuration file: \r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\config\\machine.config.\r\n```\r\n\r\n",
                                           "updatedAt":  "2018-10-31T17:33:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3ODE4NDAxOA==",
                                           "createdAt":  "2019-03-30T00:02:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mgoldhgb",
                                           "body":  "I am having this exact same problem.  I am running the ASP.NET Core Client code in a Standard 2.0 Library and referencing it from a IIS Web framework application (4.7.2).  I have tried everything from adding binding redirects to removing all references.\r\n\r\nWhen calling SendAsync using ASPNetCore signalr\r\nI\u0027m getting \"Invalid negotiation response received.\"\r\nInner exception:\r\n\"Could not load file or assembly \u0027System.Buffers, Version=4.0.2.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\u0027 or one of its dependencies. The located assembly\u0027s manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\"\r\n\r\nHere is the stack trace:\r\n\r\n\"   at Microsoft.AspNetCore.Http.Connections.NegotiateProtocol.ParseResponse(Stream content)\\r\\n   at Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.\u003cNegotiateAsync\u003ed__44.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.\u003cGetNegotiationResponseAsync\u003ed__51.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.\u003cSelectAndStartTransport\u003ed__43.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.\u003cStartAsyncCore\u003ed__40.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.\u003cStartAsync\u003ed__39.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.SignalR.Client.HttpConnectionFactory.\u003cConnectAsync\u003ed__3.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at Microsoft.AspNetCore.SignalR.Client.HttpConnectionFactory.\u003cConnectAsync\u003ed__3.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.\u003cStartAsyncCore\u003ed__47.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.\u003cStartAsync\u003ed__39.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\\r\\n   at GTA.PushNotifications.SignalRCore.Helpers.SignalRPushNotificationHelper.\u003cNotify\u003ed__4`2.MoveNext()\"\r\n\r\n",
                                           "updatedAt":  "2019-03-30T00:03:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4MjQ4NDIyMw==",
                                           "createdAt":  "2019-04-12T08:19:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ashuthinks",
                                           "body":  "any solution you have got for this? \r\nI\u0027m also facing the same issue.",
                                           "updatedAt":  "2019-04-12T08:19:10Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4MjY0MjM4Ng==",
                                           "createdAt":  "2019-04-12T16:41:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "joperezr",
                                           "body":  "@ashuthinks do you mind sharing your msbuild.binlog so that we can better analyze what is going on? to generate one, please run `msbuild yourProject.csproj /t:rebuild /bl` and I\u0027ll take a look. If you could also share the contents of your App.config file in case you have one, that would be valuable.",
                                           "updatedAt":  "2019-04-12T16:41:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4MjcwNzgzOA==",
                                           "createdAt":  "2019-04-12T20:14:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AleXr64",
                                           "body":  "@ashuthinks try to update all nuget packets in client poject. This worked for me.",
                                           "updatedAt":  "2019-04-12T20:14:52Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUyMDIwMzI4NQ==",
                                           "createdAt":  "2019-08-11T06:11:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "StanislavChankov",
                                           "body":  "I am encountering exactly the same issue with Unity3d client.",
                                           "updatedAt":  "2019-08-11T06:11:47Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU3MDY2MzYwMw==",
                                           "createdAt":  "2020-01-03T18:53:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODO6nBg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Bluejanis",
                                                                               "createdAt":  "2020-02-14T08:48:36Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "linhfpt",
                                                                               "createdAt":  "2021-05-06T04:48:06Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "anooprdesai",
                                                                               "createdAt":  "2021-05-07T05:29:58Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Yojahuang",
                                                                               "createdAt":  "2023-12-08T07:41:31Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "Rakiah",
                                           "body":  "I have the exact same problem, I tried everything I could find on the internet i\u0027m completely clueless now..",
                                           "updatedAt":  "2020-01-03T18:53:10Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5Mzc3NTU3Nw==",
                                           "createdAt":  "2020-03-03T05:31:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBEuLiQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DiskCrasher",
                                                                               "createdAt":  "2020-05-19T18:11:34Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "connectArun2001",
                                           "body":  "Same issue observed on upgrading project to .NET framework 4.7.2 even after upgrading all nuget packages.  \r\n\r\nError:\r\nCould not load file or assembly \u0027System.Buffers, Version=4.0.2.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\u0027 or one of its dependencies. The located assembly\u0027s manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040) Could not load file or assembly \u0027System.Buffers, Version=4.0.2.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\u0027 or one of its dependencies. The located assembly\u0027s manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\r\n\r\n========\r\nEven getting same error after upgrading System.Buffers to available versions on nuget 4.0.0/ 4.3.0 / 4.4.0 / 4.5.0\r\n\r\n============\r\n\r\nBelow is my app.config file\r\n\r\n\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\r\n\u003cconfiguration\u003e\r\n    \u003cconfigSections\u003e\r\n    \u003c/configSections\u003e\r\n\u003cstartup\u003e\u003csupportedRuntime version=\"v4.0\" sku=\".NETFramework,Version=v4.7.2\" /\u003e\u003c/startup\u003e\r\n  \u003cruntime\u003e\r\n    \u003cassemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\"\u003e\r\n      \u003cdependentAssembly\u003e\r\n        \u003cassemblyIdentity name=\"System.Numerics.Vectors\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" /\u003e\r\n        \u003cbindingRedirect oldVersion=\"0.0.0.0-4.1.4.0\" newVersion=\"4.1.4.0\" /\u003e\r\n      \u003c/dependentAssembly\u003e\r\n      \u003cdependentAssembly\u003e\r\n        \u003cassemblyIdentity name=\"System.Runtime.CompilerServices.Unsafe\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" /\u003e\r\n        \u003cbindingRedirect oldVersion=\"0.0.0.0-4.0.6.0\" newVersion=\"4.0.6.0\" /\u003e\r\n      \u003c/dependentAssembly\u003e\r\n      \u003cdependentAssembly\u003e\r\n        \u003cassemblyIdentity name=\"System.Buffers\" publicKeyToken=\"cc7b13ffcd2ddd51\" culture=\"neutral\" /\u003e\r\n        \u003cbindingRedirect oldVersion=\"0.0.0.0-4.0.3.0\" newVersion=\"4.0.3.0\" /\u003e\r\n      \u003c/dependentAssembly\u003e\r\n      \u003cdependentAssembly\u003e\r\n        \u003cassemblyIdentity name=\"System.ValueTuple\" publicKeyToken=\"cc7b13ffcd2ddd51\" culture=\"neutral\" /\u003e\r\n        \u003cbindingRedirect oldVersion=\"0.0.0.0-4.0.3.0\" newVersion=\"4.0.3.0\" /\u003e\r\n      \u003c/dependentAssembly\u003e\r\n      \u003cdependentAssembly\u003e\r\n        \u003cassemblyIdentity name=\"System.Threading.Tasks.Extensions\" publicKeyToken=\"cc7b13ffcd2ddd51\" culture=\"neutral\" /\u003e\r\n        \u003cbindingRedirect oldVersion=\"0.0.0.0-4.2.0.1\" newVersion=\"4.2.0.1\" /\u003e\r\n      \u003c/dependentAssembly\u003e\r\n    \u003c/assemblyBinding\u003e\r\n  \u003c/runtime\u003e\r\n\u003c/configuration\u003e\r\n",
                                           "updatedAt":  "2020-03-03T06:05:07Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5NDA5NzA5Mw==",
                                           "createdAt":  "2020-03-03T18:25:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBAKb1g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "OzBob",
                                                                               "createdAt":  "2020-03-04T01:58:56Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "connectArun2001",
                                                                               "createdAt":  "2020-03-04T07:08:31Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "pederkl",
                                                                               "createdAt":  "2020-03-10T11:45:43Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Bluejanis",
                                                                               "createdAt":  "2020-04-05T09:22:33Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "joperezr",
                                           "body":  "There is a new version of System.Buffers package that will ship some time this month which will make most of these problems go away. Package version will be 4.5.1.",
                                           "updatedAt":  "2020-03-03T18:25:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5NDM2MjU1NA==",
                                           "createdAt":  "2020-03-04T07:11:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "connectArun2001",
                                           "body":  "Same related issue raised by me\r\nGeting Error after Migrate from packages.config to PackageReference #9249",
                                           "updatedAt":  "2020-03-04T07:11:15Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5ODc1OTI1Ng==",
                                           "createdAt":  "2020-03-13T14:53:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "cameron-pascal",
                                           "body":  "\u003e \r\n\u003e \r\n\u003e There is a new version of System.Buffers package that will ship some time this month which will make most of these problems go away. Package version will be 4.5.1.\r\n\r\n@joperezr Is there any information as to why 4.5.0 is causing issues?",
                                           "updatedAt":  "2020-03-13T14:53:53Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5ODgxNDI1NQ==",
                                           "createdAt":  "2020-03-13T16:44:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBVfEww==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "cameron-pascal",
                                                                               "createdAt":  "2020-03-13T18:00:00Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "GSPP",
                                                                               "createdAt":  "2020-03-14T19:04:31Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "OzBob",
                                                                               "createdAt":  "2020-03-15T01:43:55Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "christianrondeau",
                                                                               "createdAt":  "2020-03-24T15:25:51Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "OMason",
                                                                               "createdAt":  "2020-11-02T20:55:57Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "joperezr",
                                           "body":  "\u003e Is there any information as to why 4.5.0 is causing issues?\r\n\r\nThe error people get when they hit this is just a symptom, and unfortunately it is a symptom that may be caused by many different root causes. The most common case why people hit this issue is because they are targetting .NET Framework in their app, and for one reason or another the tooling isn\u0027t fully detecting that System.Buffers implementation targets .NET Standard, or it may detect it but it won\u0027t include the required facades in the bin output folder because of custom project settings. That means that if you try to summarize most problems really happen because System.Buffers implementation targets .NET Standard, so what we did different in 4.5.1 was to provide an implementation in the package that also targets .NET Framework. With this, most projects that were having custom logic or settings causing this problem to arise should be fixed.",
                                           "updatedAt":  "2020-03-13T16:44:00Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwODYxNzI5MA==",
                                           "createdAt":  "2020-04-03T19:25:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "christianrondeau",
                                           "body":  "We tried referencing the System.Buffers 4.5.1 package directly in the ASP.NET web project, and no luck, we still end up with the error. Anything we can do to help diagnose what the problem is? It prevents us from using MessagePack currently and we don\u0027t know how to work around this. When we manually extract the nugget package, the System.Buffers.dll in the net461 folder and the netstandard2.0 folder both fail with `Could not load file or assembly \u0027System.Buffers, Version=4.0.2.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\u0027 or one of its dependencies. The system cannot find the file specified.`). What\u0027s next?",
                                           "updatedAt":  "2020-04-03T19:25:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwODYyMzQ1Nw==",
                                           "createdAt":  "2020-04-03T19:40:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "joperezr",
                                           "body":  "Do you have a simple repro I could take a look at? If you have added a dependency to the new package, then it is possible that there is a problem with 1) the binding redirects are not being generated or 2) the right System.Buffers.dll is not present right next to the application that is trying to be executed. How are you running the app? Is it out of the bin folder or are you doing some sort of deployment?",
                                           "updatedAt":  "2020-04-03T19:40:13Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwOTkwNDY4Mw==",
                                           "createdAt":  "2020-04-06T16:38:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "christianrondeau",
                                           "body":  "@joperezr I have created this project, which contains near the minimum: https://github.com/christianrondeau/dotnet-runtime-issue-27774 - the link include steps to reproduce (I reproduced using an ASP.NET 4.7.2 project since that\u0027s our use case but as far as I know this may also happen with console app)\r\n\r\nThe important part:\r\n- In `project/Project.csproj`:\r\n  - Reference `MessagePack` (`System.Buffers 4.5.0`)\r\n  - Reference `Microsoft.AspNetCore.Http.Extensions` (built-in `System.Buffers`)\r\n- In `web/Web.csproj`\r\n  - Reference `System.Buffers 4.5.1` (or no, it doesn\u0027t seem to change anything)",
                                           "updatedAt":  "2020-04-06T16:38:58Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxMDAyNjAzMg==",
                                           "createdAt":  "2020-04-06T20:42:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "joperezr",
                                           "body":  "@christianrondeau I see what the problem is here. It seems like you need a binding redirect since there are two versions of System.buffers used in your project, 4.0.2.0 and 4.0.3.0 (which the latter is the one that ends up in your bin folder). The problem is that because your project type (web project) isn\u0027t an executable, MSBuild will not generate binding redirects for you by default. If you set the following property in your Web.csproj this issue should be resolved:\r\n```xml\r\n\u003cPropertyGroup\u003e\r\n  \u003cGenerateBindingRedirectsOutputType\u003etrue\u003c/GenerateBindingRedirectsOutputType\u003e\r\n\u003c/PropertyGroup\u003e\r\n```\r\n\r\nDoing this should do that in your web/bin folder, you will now see a Web.dll.config, and this will instruct the loader that if the version 4.0.2.0 of System.Buffers is requested, it should just allow to use 4.0.3.0 instead. Let I don\u0027t have IIS on my machine so I can\u0027t validate this, but please try it and let me know if that works. Also as an aside, it looks like this web project you created is not really a web sdk project which might be why we are not detecting you need binding redirects, a SDK Web project usually starts with: `\u003cProject Sdk=\"Microsoft.NET.Sdk.Web\"\u003e`",
                                           "updatedAt":  "2020-04-06T20:42:27Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxMDA0Mzk1MQ==",
                                           "createdAt":  "2020-04-06T21:22:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "christianrondeau",
                                           "body":  "I tried both  adding the SDK to the Web.csproj and adding the GenerateBindingRedirectsOutputType (pushed in the github repro if you want to double check), same issue...",
                                           "updatedAt":  "2020-04-06T21:22:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxMDA0OTU5NQ==",
                                           "createdAt":  "2020-04-06T21:35:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "joperezr",
                                           "body":  "Then it means that the host process you are using is not respecting the dll.config when loading your assembly. In this case I would recommend using https://docs.microsoft.com/en-us/dotnet/framework/tools/fuslogvw-exe-assembly-binding-log-viewer in order to diagnose who is failing to load the assembly, and why is the dll.config not being taken into account. FusLogVW has all that info and is very easy to use.",
                                           "updatedAt":  "2020-04-06T21:35:14Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxMDEwNDY2NA==",
                                           "createdAt":  "2020-04-07T00:23:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "christianrondeau",
                                           "body":  "@joperezr Thanks for helping. I tried simplifying the project, now it\u0027s simply a web project that references MessagePack and System.Buffers 4.5.1, nothing else. Got the same problem.\r\n\r\nI attached the full log here: https://raw.githubusercontent.com/christianrondeau/dotnet-runtime-issue-27774/master/System.Buffers.4.5.1.Fusion.log\r\n\r\nAs expected, `w3wp.exe` is the executable, and it indeed tries to get the assembly from the `bin` folder. But it fails with:\r\n\r\n```\r\nLOG: Assembly Name is: System.Buffers, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\r\nWRN: Comparing the assembly name resulted in the mismatch: Build Number\r\n```\r\n\r\nIndeed, the error message when opening the web page is `Could not load file or assembly \u0027System.Buffers, Version=4.0.2.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\u0027 or one of its dependencies.`.\r\n\r\nRunning with System.Buffers 4.5.0 instead gives this output: https://raw.githubusercontent.com/christianrondeau/dotnet-runtime-issue-27774/master/System.Buffers.4.5.0.Fusion.log\r\n\r\nThis looks very similar to #27492 and maybe #27470 though I\u0027m not sure. Adding this works:\r\n\r\n```\r\n    \u003cruntime\u003e\r\n        \u003cassemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\"\u003e\r\n            \u003cdependentAssembly\u003e\r\n                \u003cassemblyIdentity name=\"System.Buffers\" publicKeyToken=\"cc7b13ffcd2ddd51\" culture=\"neutral\" /\u003e\r\n                \u003cbindingRedirect oldVersion=\"0.0.0.0-4.0.2.0\" newVersion=\"4.0.3.0\"/\u003e\r\n            \u003c/dependentAssembly\u003e\r\n        \u003c/assemblyBinding\u003e\r\n    \u003c/runtime\u003e\r\n```\r\n\r\nBut as discussed in the other issues, this is normally something we shouldn\u0027t have to do.\r\n\r\nLooking forward to hearing your thoughts. If you want you can check again the reproduction github project, it\u0027s now a single project with two references, and that\u0027s it. Thank you!",
                                           "updatedAt":  "2020-04-07T01:15:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxMDQ5MjI1NQ==",
                                           "createdAt":  "2020-04-07T16:35:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "joperezr",
                                           "body":  "Yeah given that this is a web project, looks like the binding redirect needs to be in the web.config. The property I told you before would only generate that binding redirect on a web.dll.config not on the the web.config file which according to the binlog that is what is being respected. In any case, I think the issue you are hitting is not related to System.Buffers itself, but instead should be logged either in aspnet repo (given that this is something that would only happen on web projects) or on msbuild/sdk repos (given those are the ones that can detect the assembly mismatch problem and perhaps can do something about adding the right binding redirect to the web.config). You happen to hit this with the System.Buffers package, but there is nothing special about it that is causing this, simply that there are two assemblies in your closure that depend on different versions of it, but you could have easily just get a repro the same with other packages like Newtonsoft.Json for example.",
                                           "updatedAt":  "2020-04-07T16:35:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxMDU2MDE0OA==",
                                           "createdAt":  "2020-04-07T18:51:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "christianrondeau",
                                           "body":  "@joperezr that\u0027s possible, I know that we are referencing a _lot_ of projects and only System.Buffers had to be rebound (I attached the list of transitive dependencies here: https://raw.githubusercontent.com/christianrondeau/dotnet-runtime-issue-27774/master/SampleProject.Dependencies.txt)\r\n\r\nThis being said I do not have the knowledge for knowing what issue to open and where, only that an ASP.NET project running in IIS fails automatically rebinding when System.Buffers (at least that\u0027s the only one I could see) is present.\r\n\r\nIf this is normal behavior and it is expected that we do manual rebinding, then that\u0027s what I\u0027ll do and  I guess this is a \"known issue\" working with Asp.Net and .NET Framework 4.7.2 along with netstandard2.0.\r\n\r\nIf this is not normal behavior, then I will need help creating the issue since I\u0027m not clear on the internals; unless you\u0027d like to transfer it yourself. Hopefully the reproduction project is simple enough for experts on your end to identify how to move forward.\r\n\r\nIn any case if I can be of any help, please let me know. At the moment we will move forward with rebinding, but I\u0027m available if there\u0027s something I can do.",
                                           "updatedAt":  "2020-04-07T18:51:53Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyMzM4OTYyMA==",
                                           "createdAt":  "2020-05-04T10:40:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sean-mcl",
                                           "body":  "Okay. We\u0027ve identified a similar problem.\r\n\r\nThe goal was to integrate an ASP.NET Core 2.1 application based on Framework 4.7.2 into our existing application.\r\n\r\nTo do this, we created a project using the ASP.NET Core web application template.\r\n\r\n![grafik](https://user-images.githubusercontent.com/64470948/80955875-58d94680-8e00-11ea-9969-1491f82af391.png)\r\n\r\nWe then converted this into a class library and adapted the output paths.\r\n\r\nWe also added the following entries to the project file:\r\n\r\n```\r\n\u003cAppendTargetFrameworkToOutputPath\u003efalse\u003c/AppendTargetFrameworkToOutputPath\u003e\r\n\u003cAutoGenerateBindingRedirects\u003etrue\u003c/AutoGenerateBindingRedirects\u003e\r\n\u003cGenerateBindingRedirectsOutputType\u003etrue\u003c/GenerateBindingRedirectsOutputType\u003e\r\n```\r\n\r\nWhen starting our application, this class is dynamically loaded and the server will be started.\r\n\r\nIn the \\bin\\debug directory there is also a matching *.dll.config, which maps the redirects of the app properly:\r\n\r\n```\r\n...\r\n    \u003cassemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\"\u003e\r\n      \u003cdependentAssembly\u003e\r\n        \u003cassemblyIdentity name=\"Microsoft.AspNetCore.Mvc.Core\" publicKeyToken=\"adb9793829ddae60\" culture=\"neutral\" /\u003e\r\n        \u003cbindingRedirect oldVersion=\"0.0.0.0-2.1.3.0\" newVersion=\"2.1.3.0\" /\u003e\r\n      \u003c/dependentAssembly\u003e\r\n    \u003c/assemblyBinding\u003e\r\n...\r\n    \u003cassemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\"\u003e\r\n      \u003cdependentAssembly\u003e\r\n        \u003cassemblyIdentity name=\"Newtonsoft.Json\" publicKeyToken=\"30ad4fe6b2a6aeed\" culture=\"neutral\" /\u003e\r\n        \u003cbindingRedirect oldVersion=\"0.0.0.0-12.0.0.0\" newVersion=\"12.0.0.0\" /\u003e\r\n      \u003c/dependentAssembly\u003e\r\n    \u003c/assemblyBinding\u003e\r\n    \u003cassemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\"\u003e\r\n      \u003cdependentAssembly\u003e\r\n        \u003cassemblyIdentity name=\"System.Buffers\" publicKeyToken=\"cc7b13ffcd2ddd51\" culture=\"neutral\" /\u003e\r\n        \u003cbindingRedirect oldVersion=\"0.0.0.0-4.0.3.0\" newVersion=\"4.0.3.0\" /\u003e\r\n      \u003c/dependentAssembly\u003e\r\n    \u003c/assemblyBinding\u003e\r\n...\r\n```\r\n\r\n**Example:**\r\n\r\nIt will still try to load the following assembly:\r\n`System.Buffers, Version=4.0.2.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`\r\n\r\nInstead of:\r\n`System.Buffers, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`\r\n\r\nAnyone have any idea how I can solve this problem?\r\n\r\n",
                                           "updatedAt":  "2020-05-04T10:40:17Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyMzQxNzg1Mw==",
                                           "createdAt":  "2020-05-04T11:51:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBsztTA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "Spaceman1861",
                                                                               "createdAt":  "2020-08-04T11:19:40Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Spaceman1861",
                                                                               "createdAt":  "2020-08-04T11:19:43Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "OMason",
                                                                               "createdAt":  "2020-11-02T20:59:18Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "gorillapower",
                                                                               "createdAt":  "2021-05-31T13:03:38Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "christianrondeau",
                                           "body":  "@sean-mcleish the only way we found was to configure reminding in the Web.config file, like this:\r\n\r\n```xml\r\n\u003cruntime\u003e\r\n\t\u003cassemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\"\u003e\r\n\t\t\u003cdependentAssembly\u003e\r\n\t\t\t\u003cassemblyIdentity name=\"System.Buffers\" publicKeyToken=\"cc7b13ffcd2ddd51\" culture=\"neutral\" /\u003e\r\n\t\t\t\u003cbindingRedirect oldVersion=\"0.0.0.0-4.0.3.0\" newVersion=\"4.0.3.0\"/\u003e\r\n\t\t\u003c/dependentAssembly\u003e\r\n\t\u003c/assemblyBinding\u003e\r\n\t\u003cassemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\"\u003e\r\n\t\t\u003cdependentAssembly\u003e\r\n\t\t\t\u003cassemblyIdentity name=\"System.Threading.Tasks.Extensions\" publicKeyToken=\"cc7b13ffcd2ddd51\" culture=\"neutral\" /\u003e\r\n\t\t\t\u003cbindingRedirect oldVersion=\"0.0.0.0-4.2.0.1\" newVersion=\"4.2.0.1\" /\u003e\r\n\t\t\u003c/dependentAssembly\u003e\r\n\t\u003c/assemblyBinding\u003e\r\n\u003c/runtime\u003e\r\n```",
                                           "updatedAt":  "2020-05-04T11:51:03Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyMzg3MDE3Ng==",
                                           "createdAt":  "2020-05-05T05:59:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sean-mcl",
                                           "body":  "Still not working.\r\nA *.dll.config is generated with the correct bindingRedirects. But it is completely ignored when the assembly is loaded and he still complains about the versions.",
                                           "updatedAt":  "2020-05-05T05:59:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyMzkxMDMwNQ==",
                                           "createdAt":  "2020-05-05T07:52:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODfF1Uw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "rkolka",
                                                                               "createdAt":  "2022-08-23T18:09:45Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "rkolka",
                                                                               "createdAt":  "2022-08-23T18:17:07Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "dhruvusmca",
                                                                               "createdAt":  "2024-04-22T14:32:14Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "sean-mcl",
                                           "body":  "Okay, I found a temporary solution. The problem was that I dynamically loaded my web class library from a main application. The dynamic loading works by searching for all *.dll that implement a certain interface.\r\nThe main application looks at its own *.exe.config and ignores the *.dll.config of the web class library.\r\nThe current fix: add the redirects in the app.config of the main application.\r\nThe desired fix: the main application also considers the *.dll.configs of all applications.\r\nI need to get a little more information about this.",
                                           "updatedAt":  "2020-05-05T07:52:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzMDk5MzMwMQ==",
                                           "createdAt":  "2020-05-19T18:15:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DiskCrasher",
                                           "body":  "Seeing the same error with a project compiled to .NET Framework 4.8. The output folder contains System.Buffers.dll but it\u0027s version 4.6.",
                                           "updatedAt":  "2020-05-19T18:15:54Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3MDM0NDMyNw==",
                                           "createdAt":  "2020-08-07T06:07:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tomrus88",
                                           "body":  "Have same issue with .NET Framework 4.8 project referencing System.Buffers indirectly as dependency of System.IO.Pipelines and System.Memory packages...",
                                           "updatedAt":  "2020-08-07T08:26:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5I_Vcd",
                                           "createdAt":  "2022-08-23T18:30:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rkolka",
                                           "body":  "I was having the System.Buffers, Version=4.0.2.0 problem with add-in that a pre-existing program loads. Finally, it was solved by  @sean-mcl \u0027s idea [here](https://github.com/dotnet/runtime/issues/27774#issuecomment-623910305). When *.exe.config had  the bindingRedirect, then it was solved. Thank you!\r\n[some.exe.config.txt](https://github.com/dotnet/runtime/files/9409675/some.exe.config.txt)\r\n\r\n",
                                           "updatedAt":  "2022-09-01T12:24:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5xbJab",
                                           "createdAt":  "2024-01-22T02:27:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Snailya",
                                           "body":  "\u003e Have same issue with .NET Framework 4.8 project referencing System.Buffers indirectly as dependency of System.IO.Pipelines and System.Memory packages...\r\n\r\nHave you solved this problem? I\u0027ve meet the same issue with .NET Framework 4.8 and indirectly reference. It suddenly not work for deployment but works on both debug and release.",
                                           "updatedAt":  "2024-01-22T02:27:26Z"
                                       }
                                   ],
                         "totalCount":  38
                     },
        "title":  "Error loading System.Buffers, Version=4.0.2.0 when using AspNet Core SignalR C# client in a .NET Framework 4.7.1 Web test",
        "labels":  [
                       "bug",
                       "area-Infrastructure-libraries",
                       "packaging"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/28503",
        "createdAt":  "2019-01-24T20:56:11Z",
        "number":  28503,
        "author":  "ericstj",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-08-06T23:58:43Z",
        "body":  "Some of our libraries need the characteristic that they not require binding redirects when run on desktop (for example, they need to be used in msbuild tasks, or in some other plugin model that doesn\u0027t permit definition of bindingRedirects).\r\n\r\nThis is most often broken by cases where some dependency in the middle of the stack needs to freeze its netstandard version when it moves inbox.  If other parts of the stack underneath this dependency are still moving then they need to version.\r\n\r\nTo accommodate that requirement we may need to add netfx specific builds of libraries when their netstandard version  is frozen.  This is not unlike the [package validation we do for packages which apply to desktop](https://github.com/dotnet/arcade/blob/d25280532a0ee20778460395a73f5b72ba64c5c9/src/Microsoft.DotNet.Build.Tasks.Packaging/src/ValidatePackage.cs#L322-L327) except we can do that down the whole stack.\r\n\r\nThis still doesn\u0027t fix the issue where some customer netstandard component is involved in a dependency graph introducing a lower version, but at least it can alleviate the case where you have only desktop projects consuming corefx packages.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONVIS6Q==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ1NzM1MzM1Ng==",
                                           "createdAt":  "2019-01-24T20:56:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "Related to https://github.com/dotnet/corefx/pull/34813",
                                           "updatedAt":  "2019-01-24T20:56:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41UEWy",
                                           "createdAt":  "2021-08-06T18:50:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@ericstj @joperezr can we close this issue now given that we added .NETFramework configurations to couple of libs?",
                                           "updatedAt":  "2021-08-06T18:50:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41UhLp",
                                           "createdAt":  "2021-08-06T23:58:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "We won\u0027t be doing this in 6.0.  Doing this would be about making sure we have zero bindingRedirects in our .NETFramework packages.  It think it is still interesting to do and not too much work.",
                                           "updatedAt":  "2021-08-06T23:58:43Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Add package testing for desktop that does strict closure validation (exact match) on desktop",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/28888",
        "createdAt":  "2019-03-06T17:12:15Z",
        "number":  28888,
        "author":  "ericstj",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBZDZhA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "yyjdelete",
                                            "createdAt":  "2019-04-12T02:42:26Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "danmoseley",
                                            "createdAt":  "2020-12-07T01:31:55Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2022-11-28T10:07:09Z",
        "body":  "Often times we have builds that cross-compile and have very different implementations.  Our resource conventions don\u0027t force folks to think about this, so the resources are often a superset of all configurations.\r\n\r\nWe should change the defaults so that this isn\u0027t the case.\r\n\r\nI propose the following:\r\n1. By default PartialFacades should not include any resources, unless a project opts-in.  Folks should discover this relatively easily as SR.Foo will fail to work in the partial source.  They can fix it by setting a flag and potentially providing specific resources for that build of the library.\r\n2. By default NotSupported assemblies require a *unique* resx.  We can change the path convention to something like Resources\\NotSupported.resx instead of strings.resx\r\n\r\nAcross all our builds this will save over a MB of unused resources.\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOLIgXHQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4NDE3MzUzOQ==",
                                           "createdAt":  "2019-04-17T16:54:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "joperezr",
                                           "body":  "Is this issue only to track those two cases? We also have the case where some resources are only used in a specific configuration but not in the rest. Of  course fixing that issue would be harder than simply addressing the two cases you discussed above, but just wanted to know the scope of this issue.",
                                           "updatedAt":  "2019-04-17T16:54:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5NzU4OTkxMg==",
                                           "createdAt":  "2019-05-31T06:17:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "ATM this doesn\u0027t account for the per-configuration case since I imagine those have more nuanced requirements.",
                                           "updatedAt":  "2019-05-31T06:17:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDczOTYzODkwMQ==",
                                           "createdAt":  "2020-12-07T03:20:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "\u003e By default PartialFacades should not include any resources, unless a project opts-in. Folks should discover this relatively easily as SR.Foo will fail to work in the partial source. They can fix it by setting a flag and potentially providing specific resources for that build of the library.\r\n\r\nWould this be done by setting \u003cOmitResources\u003e to true (if not already explicitly set to false) if \u003cIsPartialFacadeAssembly\u003e is true, then explicitly setting \u003cOmitResources\u003e to false as needed to fix the build? Where would such a change go -- I could maybe do this if someone can give pointers.",
                                           "updatedAt":  "2020-12-07T03:20:59Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDczOTY5OTkwOA==",
                                           "createdAt":  "2020-12-07T06:29:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "joperezr",
                                           "body":  "Fix for that is trivial, here is where we add the embedded resources to all projects when strings.resx exists: https://github.com/dotnet/runtime/blob/83d19de66a596ff5e0ad0519e48dff62945cc636/eng/resources.targets#L18-L25\r\n\r\nThe way to fix what Eric suggests as point #1 above is to add a line in the property group before this line to say something like:\r\n```xml\r\n\u003cOmitResources Condition=“\u0027$(OmitResources)\u0027 == \u0027\u0027 and \u0027$(IsPartialFacadeAssembly)\u0027 == \u0027true\u0027”\u003etrue\u003c/OmitResources\u003e\r\n```",
                                           "updatedAt":  "2020-12-07T06:29:59Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDczOTcwMTUxNA==",
                                           "createdAt":  "2020-12-07T06:33:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "joperezr",
                                           "body":  "And of course after doing that for any partial facade that breaks the build would need to set OmitResources to false on the csproj for that tfm since it will mean that partial facade still requires the resources which is fine.",
                                           "updatedAt":  "2020-12-07T06:33:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0NzA5MDkzNA==",
                                           "createdAt":  "2020-12-16T22:57:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBaPK8A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2020-12-16T23:04:26Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "With the edit above, after building `build clr+libs -rc release -allconfigurations` these are the projects with errors in one TFM or another\r\n```\r\n\\System.Collections.NonGeneric\\src\\System.Collections.NonGeneric.csproj\r\n\\System.ComponentModel.TypeConverter\\src\\System.ComponentModel.TypeConverter.csproj\r\n\\System.Collections\\src\\System.Collections.csproj\r\n\\System.IO.FileSystem\\src\\System.IO.FileSystem.csproj\r\n\\System.IO.FileSystem.AccessControl\\src\\System.IO.FileSystem.AccessControl.csproj\r\n\\System.Threading\\src\\System.Threading.csproj\r\n\\System.Memory\\src\\System.Memory.csproj\r\n\\System.Security.Permissions\\src\\System.Security.Permissions.csproj\r\n\\System.Security.Cryptography.Primitives\\src\\System.Security.Cryptography.Primitives.csproj\r\n\\System.Transactions.Local\\src\\System.Transactions.Local.csproj\r\n\\System.Runtime.InteropServices\\src\\System.Runtime.InteropServices.csproj\r\n\\System.Reflection.TypeExtensions\\src\\System.Reflection.TypeExtensions.csproj\r\n```",
                                           "updatedAt":  "2020-12-16T22:57:07Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0NzA5NjEzNQ==",
                                           "createdAt":  "2020-12-16T23:11:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "`System.IO.FileSystem.AccessControl.csproj` and `System.Security.Permissions.csproj` are the interesting ones as they multi-target for different TFM families. If you want to go the extra mile (point 2 from the top post), you could save size there as well, by using different resx per TFM group.",
                                           "updatedAt":  "2020-12-16T23:11:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0NzA5ODI2MQ==",
                                           "createdAt":  "2020-12-16T23:16:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "The above leaves 87 projects that have IsPartialFacadeAssembly for at least one TFM but apparently don\u0027t need resources. However, many of those are in the shared framework, so it has no real impact as they\u0027re linked away\r\n\r\n\u003e If you want to go the extra mile (point 2 from the top post), you could save size there as well, by using different resx per TFM group.\r\n\r\nYup",
                                           "updatedAt":  "2020-12-16T23:16:47Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0NzExNjMxNw==",
                                           "createdAt":  "2020-12-17T00:10:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBaQjgA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "joperezr",
                                                                               "createdAt":  "2020-12-17T04:41:36Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "The PF in S.IO.FS.AC only uses 1 string, but there\u0027s only 26, not work special resx perhaps. \r\nS.S.P only has 8 strings total.",
                                           "updatedAt":  "2020-12-17T00:10:58Z"
                                       }
                                   ],
                         "totalCount":  9
                     },
        "title":  "Facades and NotSupported assemblies are bloated with resources they don\u0027t use",
        "labels":  [
                       "enhancement",
                       "area-Infrastructure-libraries",
                       "help wanted"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/950",
        "createdAt":  "2019-03-18T00:43:26Z",
        "number":  950,
        "author":  "danmoseley",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOA5YHjg==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ViktorHofer",
                                            "createdAt":  "2019-03-20T14:16:49Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Gnbrkm41",
                                            "createdAt":  "2019-11-04T06:48:32Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "petarpetrovt",
                                            "createdAt":  "2020-01-18T19:13:41Z"
                                        }
                                    ],
                          "totalCount":  3
                      },
        "updatedAt":  "2021-11-09T20:17:05Z",
        "body":  "Increasingly we are taking changes that use hardware intrinsics to accelerate parts of CoreFX. Without special care, our testing will only ever cover the AVX2 (or AVX) path, not the software path and not any SSE path.\r\n\r\nWe need a way to easily cause selected tests to re-run in each mode so every codepath is exercised.\r\n\r\nIn the ML.NET repo they repeat relevant tests under each of regular, no AVX, and no AVX/SSE using RemoteExec:\r\nhttps://github.com/dotnet/machinelearning/blob/d65af0f755b9cd5739693004f1a8a8964ce23d8a/test/Microsoft.ML.CpuMath.UnitTests.netcoreapp/UnitTests.cs#L140\r\n\r\nWe can do something similar, but centralize the magic environment variables and offer a flag on RemoteExec that tests can set to enumerate over them.\r\n\r\ncc @tannergooding @jkotas @Anipik ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOOX0ktg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwNDc3NTQxMA==",
                                           "createdAt":  "2019-06-23T18:24:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Moving to future as this would be nice to have but not necessarily important for 3.0. That said I will prioritize it correctly and try to work on it as soon as other high prio items are done. I\u0027ll try to do at least a manual run asap to get some data.",
                                           "updatedAt":  "2019-06-23T18:24:22Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1MTAwNTg4Nw==",
                                           "createdAt":  "2019-11-07T09:52:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOA0f1Vg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "danmoseley",
                                                                               "createdAt":  "2019-11-07T10:48:36Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "gfoidl",
                                           "body":  "It would be nice to write tests as\r\n```c#\r\n[Fact]\r\n[HwIntrinsic(Intrinsic.Avx2 | Intrinsic.Ssse3)]\r\npublic void MySuperTest()\r\n{\r\n    // ...\r\n}\r\n```\r\nand then the test-runtime / CI executes the tests with environment variables set (i.e. that the noted intrinsics are disabled) so that the code-path can be verified.\r\n\r\nThe approach with _RemoteExec_ is possible, but it forces us to write some code that could belong to the infrastructure.",
                                           "updatedAt":  "2019-11-07T09:52:17Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU3MjgyOTM3Nw==",
                                           "createdAt":  "2020-01-10T01:15:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Both approaches above assume it\u0027s fairly well defined which tests we need to run this way. As more and more of our code uses intrinsics and particularly if we want some indirect test coverage we might instead want to execute the entire test suite periodically with the various environment variables. \r\n\r\nPerhaps it could be added pairwise into our test matrix, eg., on Centos and Windows Server always go through software mode, etc - if we\u0027re confident it\u0027s an orthogonal parameter.",
                                           "updatedAt":  "2020-01-10T01:15:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc432ETh",
                                           "createdAt":  "2021-10-06T19:03:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "linking to discussion of what the knobs are/should be: https://github.com/dotnet/runtime/issues/11701",
                                           "updatedAt":  "2021-10-06T19:03:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc432Gqz",
                                           "createdAt":  "2021-10-06T19:07:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "@stephentoub @jkotas now that we\u0027re being more thoughtful about our matrix, and more of it is post-commit, would it be reasonable to pairwise one or more of these flags into the mix? Eg., if we test Windows 10 x64 and Windows 11 x64 we could enable COMPlus_EnableHWIntrinsic=0  permanently on one of those. It seems to me vanishingly unlikely that that would mask any OS-specific bugs.\r\n\r\nIt\u0027s not entirely clear which switch/es to set though. COMPlus_EnableHWIntrinsic=0 will force the software path, which in some cases is (still?) exercised for free on Arm64 tests. It may be better to force the SSE2 path, eg.\r\n\r\ncc @safern @tannergooding @BruceForstall   ",
                                           "updatedAt":  "2021-10-06T19:07:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc432HtH",
                                           "createdAt":  "2021-10-06T19:10:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "I just noticed your offer @tannergooding to drive thinking around this. Sounds good to me.",
                                           "updatedAt":  "2021-10-06T19:10:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc432Ukf",
                                           "createdAt":  "2021-10-06T19:39:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "I also can work with @tannergooding on getting this set up (whatever pieces we need to move). ",
                                           "updatedAt":  "2021-10-06T19:39:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc432phW",
                                           "createdAt":  "2021-10-06T20:29:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "Note that we do exhaustive hardware intrinsic switch testing (to force various environments, in combination with JIT stress modes) of the CoreCLR Pri-1 tests for x86 (https://dev.azure.com/dnceng/public/_build/results?buildId=1399897\u0026view=results) and arm64 (https://dev.azure.com/dnceng/public/_build/results?buildId=1399881\u0026view=results).\r\n\r\nAdding a few modes (for x86, x64, and arm64) for libraries tests makes sense.",
                                           "updatedAt":  "2021-10-06T20:29:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc432xFL",
                                           "createdAt":  "2021-10-06T20:47:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB9STFg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "danmoseley",
                                                                               "createdAt":  "2021-10-06T22:27:29Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "tannergooding",
                                           "body":  "\u003e we could enable COMPlus_EnableHWIntrinsic=0 permanently on one of those\r\n\r\n@danmoseley, I don\u0027t think that one in particular is interesting and its somewhat covered already by x86 Linux and ARM32 (where hardware intrinsics aren\u0027t supported).\r\n\r\nNamely, the most interesting setups are probably `AVX=0` and `SSE3=0` given that we require `SSE2` support on x86/x64 and `AdvSimd` support on ARM64.\r\nHowever, this is also a general case that there\u0027s no real benefit to running these tests if the code hasn\u0027t changed and so running them as part of a weekly or monthly outerloop would likely catch any issues that might crop up.\r\n\r\nUsers adding new or touching existing intrinsic code can (and should) explicitly trigger the outerloop jobs against their PR.",
                                           "updatedAt":  "2021-10-06T20:47:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc433-pK",
                                           "createdAt":  "2021-10-07T03:52:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e now that we\u0027re being more thoughtful about our matrix, and more of it is post-commit, would it be reasonable to pairwise one or more of these flags into the mix?\r\n\r\nWhat is the total size of the matrix that would give us full coverage for these?\r\n\r\nI am wondering whether we should set these randomly. It means that the failures won\u0027t be deterministic, but it is not that different from what we are doing to stress the product in general (stress failures are never deterministic).",
                                           "updatedAt":  "2021-10-07T03:52:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc434CE6",
                                           "createdAt":  "2021-10-07T04:28:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "We can also use the same randomized approach for other variables with similar characteristics, like tiered compilation on/off.",
                                           "updatedAt":  "2021-10-07T04:28:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc435Ve8",
                                           "createdAt":  "2021-10-07T13:09:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tannergooding",
                                           "body":  "\u003e What is the total size of the matrix that would give us full coverage for these?\r\n\r\nThe JIT currently tests with these modes for the outerloop: https://github.com/dotnet/runtime/blob/4957f6238cd0c42a33b6892974a79bbb2555ad8b/src/tests/Common/testenvironment.proj#L93-L113\r\nThere are additional variants that combine with the other `JitStress` modes as well, but those probably aren\u0027t as relevant for the library side tests.\r\n\r\nIn particular today, the library code has code paths based on:\r\n* `AVX`\r\n* `AVX2`\r\n* `BMI1`\r\n* `BMI2`\r\n* `FMA`\r\n* `LZCNT`\r\n* `POPCNT`\r\n* `SSE`\r\n* `SSE2`\r\n* `SSSE3`\r\n* `SSE41`\r\n\r\nAnd for ARM:\r\n* `AdvSIMD`\r\n\r\nI don\u0027t think we need to do anything like randomly set the switches. Simply having the same matrix as the JIT as outerloop jobs should be sufficient. PRs that are adding new intrinsic code paths can then explicitly trigger these jobs, just as we do when adding new JIT support via `azp run runtime-coreclr jitstress-isas-x86, runtime-coreclr jitstress-isas-arm`.\r\n\r\nThe outerloop jobs should be plenty sufficient for catching any oddities that come about otherwise, particularly given that the code is rarely touched and any real issues should likely get caught by the JIT side tests first.",
                                           "updatedAt":  "2021-10-07T13:09:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc45fSS2",
                                           "createdAt":  "2021-11-09T20:17:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Linking this interesting example demonstrating that library authors need these flags for their own testing, and of course that means they expect us to run clean. https://github.com/dotnet/runtime/issues/60035#issuecomment-964492880",
                                           "updatedAt":  "2021-11-09T20:17:04Z"
                                       }
                                   ],
                         "totalCount":  13
                     },
        "title":  "Need infrastructure to run tests in varying hardware intrinsic modes",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "help wanted"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/947",
        "createdAt":  "2019-03-27T16:44:30Z",
        "number":  947,
        "author":  "ericstj",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-05-12T08:26:00Z",
        "body":  "CC @danmosemsft could you please provide more details?",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOQuKogA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3NzI1MTYxOQ==",
                                           "createdAt":  "2019-03-27T16:53:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "At the root of corefx, you must use `build.cmd` to build eg `build -build -buildtest -test`. In a leaf, you must use `dotnet build` (or maybe `msbuild`) eg `dotnet build -- /t:build;test`\r\n\r\nIf it was possible to use \"dotnet build\" at the root (presumably with a superset of potential properties) that might make it easier for contributors to learn how to work in the repo.\r\n\r\nPerhaps it\u0027s fine as is though? And `build.cmd` does have the advantage of documenting itself with `-?`. ",
                                           "updatedAt":  "2019-03-27T16:53:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3NzI5ODA4NA==",
                                           "createdAt":  "2019-03-27T18:41:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "It\u0027s already possible to build and test a leaf project with the build script from root. Why isn\u0027t that sufficient? The build script also doesn\u0027t require a globally installed dotnet installation and has the advantage of using the same host for building from root and building individual libraries with it.",
                                           "updatedAt":  "2019-03-27T18:42:10Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3NzM5NzAzMA==",
                                           "createdAt":  "2019-03-28T00:29:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Don\u0027t many people work with their console in the leaf folder itself? I do - I can open the editor there in context, I can do grep, etc. I only really am at the root for the first build. Maybe it\u0027s just me because I\u0027m command line focused?\r\n\r\nI don\u0027t feel strongly about this, so if it\u0027s just me then we can close it...\r\n\r\n@stephentoub ",
                                           "updatedAt":  "2019-03-28T00:29:27Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3NzM5NzY1MQ==",
                                           "createdAt":  "2019-03-28T00:32:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "stephentoub",
                                           "body":  "\u003e Don\u0027t many people work with their console in the leaf folder itself?\r\n\r\nI do.\r\n\r\n\u003e It\u0027s already possible to build and test a leaf project with the build script from root. Why isn\u0027t that sufficient?\r\n\r\nBecause it\u0027s cumbersome.  You have to either:\r\n1. Have multiple windows open, one at the root and one at the leaf.\r\n2. Be in the leaf directory and use `..\\..\\..\\..\\` and so on to get up to the commands at the root.\r\n3. Be in the root directory and need to specify long paths like `src\\System.Net.Security\\tests\\Functional\\` in order to get to files in the leaf.",
                                           "updatedAt":  "2019-03-28T00:33:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3NzU1Mjk4Mg==",
                                           "createdAt":  "2019-03-28T11:16:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "We briefly talked about this offline. What I could think of is a repo tool which wraps the build script. A repo tool is available in the entire repository tree without modifying the path. That would require no global dotnet installation anymore. \r\n\r\nDetails to figure out:\r\n- Mark as optional to not hinder bring up of new distros/environments\r\n- Tightly couple it to corefx or make it configurable so that other repositories can also use it, ie WinForms, WPF, etc.\r\n\r\nI would like to know if that\u0027s something compelling or if we should instead focus on making it easier to use dotnet in a leaf (ie use same dotnet as during root build). ",
                                           "updatedAt":  "2019-03-28T11:16:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxNTMzNDA0MQ==",
                                           "createdAt":  "2020-04-17T16:12:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "just FYI, `dotnet build` and `dotnet restore` now works in the repo root as we added a `Build.proj` repo entrypoint file (which was necessary to have for nuget static graph restore).\r\n\r\nIn example you can now do: `C:\\git\\runtime\u003e dotnet build /p:Subset=clr+libs /p:RuntimeConfiguration=Release`. The supported scenarios are currently limited as Arcade is build script driven.",
                                           "updatedAt":  "2020-04-17T16:12:59Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1NTU5NTU3Nw==",
                                           "createdAt":  "2020-07-08T15:36:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "See https://github.com/dotnet/arcade/issues/5384 which tracks supporting `dotnet \u003cverb\u003e` from the repository root instead of the current script based entrypoints.",
                                           "updatedAt":  "2020-07-08T15:36:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5C4qiA",
                                           "createdAt":  "2022-05-10T09:27:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Since we migrated from the pkgproj to the NuGet Pack feature this should be possible. I just verified this locally and a `dotnet.cmd build /p:Subset=libs` from the repo root does work as expected. That said, the build.sh/ps1 scripts invoke native scripts and handle all the argument parsing, so you probably want to continue using the build.cmd/sh scripts for non trivial use-cases.",
                                           "updatedAt":  "2022-05-10T09:27:29Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "Ability to build at root same as at leaf (or vice versa). Right now I have to learn two commands with different parameters in order to work.",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "dev-innerloop"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/996",
        "createdAt":  "2019-04-04T21:58:30Z",
        "number":  996,
        "author":  "safern",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-31T19:03:27Z",
        "body":  "The ApiCatalog build should just run after the official build and use its artfacts to restore. Also, it should be shared to generate the docs layout that we use for the docs team. I already have some targets to generate the docs layout that I should tweak for this to work for both scenarios.\r\n\r\nhttps://github.com/safern/corefx/commit/099258b357d72c5582ea6b87404a51211cb3e2a6\r\n\r\ncc: @ahsonkhan @ericstj @carlossanlop ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOYVQSnw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4MDA4MDU5NQ==",
                                           "createdAt":  "2019-04-04T22:04:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "cc: @danmosemsft ",
                                           "updatedAt":  "2019-04-04T22:04:15Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5OTE2OTcxMg==",
                                           "createdAt":  "2019-06-05T17:01:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "Quick thoughts on how this can work:\r\n1. See how we construct package versions / flow package versions to the package testing leg.\r\n2. Make a project that consumes all the relevant packages and not the raw binaries.  Consider even generating such a project and saving it as an artifact.\r\n3. Restore and publish that project to the required directories.  Use the PackageId metadata as a means for partitioning inbox vs OOB.\r\n",
                                           "updatedAt":  "2019-06-05T17:01:36Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwMzc0NzQwMQ==",
                                           "createdAt":  "2019-06-19T21:09:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAq5ssw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "safern",
                                                                               "createdAt":  "2019-06-19T21:27:39Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "wtgodbe",
                                           "body":  "Here is the plan @safern and I came up with:\r\n\r\n- Add a step concurrent to `Publish Packages` in the official builds that restores the packages we just built\r\n- Use a project similar to https://github.com/dotnet/corefx/blob/master/pkg/Microsoft.Windows.Compatibility/tests/Microsoft.Windows.Compatibility.Validation.csproj with the just-built Compat package to restore \u0026 publish ref assemblies/.xml files\r\n- Use something like https://github.com/dotnet/corefx/blob/37a56121a88d8e67da75e2e5201f2c1c87c7b551/pkg/test/testPackages.proj#L80 to generate versions\r\n- Replace wildcard package versions (ASPNet.Core, etc) with ToolsetDependencies in `versions.details.xml`, updated by DARC",
                                           "updatedAt":  "2019-06-19T21:09:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5d9_lS",
                                           "createdAt":  "2023-06-05T10:25:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@carlossanlop should this issue be closed now?",
                                           "updatedAt":  "2023-06-05T10:25:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hVBKf",
                                           "createdAt":  "2023-07-12T17:04:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "The docs team needs the following assets from repositories:\r\n- Reference assemblies\r\n- compiler generated XML files (for triple-slash source of truth projects)\r\n\r\nInstead of having an orchestration point (currently apicatalog-infra repo) that bundles all the assets together from different repositories and which is a completely manually process today, we could design a push model. Any repository that needs/wants to participate in the docs team process, would generate their own transport package.\r\n\r\nExample name pattern: `Microsoft.Internal.[SourceRepo].[TargetRepo].Transport.nupkg`\r\n\r\n- [x] dotnet/runtime       -\u003e   Microsoft.Internal.Runtime.DotNetApiDocs.Transport.nupkg https://github.com/dotnet/runtime/pull/89312\r\n- [ ] dotnet/extensions  -\u003e   Microsoft.Internal.Extensions.DotNetApiDocs.Transport.nupkg\r\n- [ ] dotnet/wcf\r\n- [x] dotnet/aspnetcore -\u003e https://github.com/dotnet/aspnetcore/pull/49969\r\n- [x] dotnet/winforms -\u003e The `Microsoft.Private.WinForms` package already contains the necessary assets.",
                                           "updatedAt":  "2023-08-14T17:39:47Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "ApiCatalog build infrastructure should be updated",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/30574",
        "createdAt":  "2019-08-12T13:23:03Z",
        "number":  30574,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOAvor1w==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Wraith2",
                                            "createdAt":  "2019-08-12T23:43:30Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "dagood",
                                            "createdAt":  "2019-08-30T17:48:37Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2023-10-23T15:41:11Z",
        "body":  "Related: https://github.com/dotnet/core-setup/issues/4809 \u0026 https://github.com/dotnet/arcade/issues/2704\r\n\r\nThe current doc (https://github.com/dotnet/corefx/blob/master/Documentation/project-docs/dogfooding.md) is hacky and works around the fact that we don\u0027t have an easy way to consume self-built shared framework bits. I proposed in an offline thread to generate shared framework installers similar to what aspnetcore is already doing. Ideally this would be easier if we can access some of core-setup\u0027s logic or by publishing the shared framework generation logic into an own package (see related issues).\r\n\r\ncc @SteveCarrollMSFT @geoffkizer @ericstj @danmosemsft ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOKMRDJA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUyMTQxNzgxNw==",
                                           "createdAt":  "2019-08-14T21:03:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "krwq",
                                           "body":  "@ViktorHofer on linux this should ideally be as simple as `sudo make install` to match what other open source projects are doing (or `./install.sh`)",
                                           "updatedAt":  "2019-08-14T21:03:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzNDMxNzUwMQ==",
                                           "createdAt":  "2019-09-23T23:00:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "@krwq build and test of a self-built shared framework should not require installing that on the machine.  Supporting direct installation from the build is a different issue (but also a good one).",
                                           "updatedAt":  "2019-09-23T23:00:50Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2MTI1ODYxNg==",
                                           "createdAt":  "2020-07-20T18:28:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Triage: we should update the doc for 5.0 infra changes.",
                                           "updatedAt":  "2020-07-20T18:28:22Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4Mzk1MDg4NA==",
                                           "createdAt":  "2020-08-31T18:27:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "This is documentation only, so I\u0027m moving this into 6.0.",
                                           "updatedAt":  "2020-08-31T18:27:47Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Make it easier to consume self-built shared framework bits",
        "labels":  [
                       "documentation",
                       "area-Infrastructure-libraries",
                       "dev-innerloop"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/31359",
        "createdAt":  "2019-10-31T17:34:44Z",
        "number":  31359,
        "author":  "ericstj",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOA0CMHw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "sbomer",
                                            "createdAt":  "2019-10-31T17:37:46Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "safern",
                                            "createdAt":  "2019-10-31T19:43:18Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2022-05-10T19:15:56Z",
        "body":  "We should avoid defining our own ILLink targets and instead extend/configure the shipping ones.  We still have a lot that is unique to corefx (trimming libraries not apps, diffing the result) but we can avoid bugs by sharing the invokation logic from the official targets.  See https://github.com/dotnet/corefx/pull/42266\r\n\r\n/cc @sbomer @ViktorHofer @eiriktsarpalis ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOQuwbGg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5C4yBU",
                                           "createdAt":  "2022-05-10T09:58:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@ericstj do you still think this is feasible given that we do extensive ILLink testing in [sfx.proj](https://github.com/dotnet/runtime/blob/91ca9c4c0e16ac16479aa178c8869d47ea8c13e0/src/libraries/sfx.proj#L39-L69) and in [oob.proj](https://github.com/dotnet/runtime/blob/91ca9c4c0e16ac16479aa178c8869d47ea8c13e0/src/libraries/oob.proj#L75-L100) in addition to us running the linker in library mode over our compiled assemblies?\r\n\r\nSince this issue was opened, the illink.targets logic grew as it now also handles suppression files and supports the above mentioned cases.",
                                           "updatedAt":  "2022-05-10T09:58:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5C4yDo",
                                           "createdAt":  "2022-05-10T09:58:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "This issue has been marked `needs-author-action` and may be missing some important information.",
                                           "updatedAt":  "2022-05-10T09:58:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5C65Bt",
                                           "createdAt":  "2022-05-10T18:32:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCcIXnw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "sbomer",
                                                                               "createdAt":  "2022-05-10T19:15:59Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ericstj",
                                           "body":  "I\u0027m still do not like maintaining a copy of the target.  It\u0027s ok to have a targets file to contain all of our common customizations, but we should avoid duplicating the target itself.  We don\u0027t keep a copy of the `CoreCompile` target.  Our customizations should be seen as a signal of things users might want to control in their linker usage.  @eerhardt @vitek-karas @sbomer how feasible would it be to remove the customization here and rely on in-build functionality.\r\nhttps://github.com/dotnet/runtime/blob/35f66ed7cb42a3fbcc2c56604c31f8a64dbe119b/eng/illink.targets",
                                           "updatedAt":  "2022-05-10T18:32:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5C7Bsa",
                                           "createdAt":  "2022-05-10T19:15:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sbomer",
                                           "body":  "I don\u0027t see any big problems with it at first glance. It will require a little care to make sure we don\u0027t accidentally pass some unwanted options for our use case. We use the linker in a configuration that we don\u0027t consider a customer scenario (\"library-mode\" trimming), and it\u0027s pretty different from what the SDK does, but I agree that we should see this as a signal of what users might want to do.",
                                           "updatedAt":  "2022-05-10T19:15:56Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Eliminate duplication with shipping ILLink targets",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "needs-further-triage"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/34795",
        "createdAt":  "2020-04-09T23:05:15Z",
        "number":  34795,
        "author":  "Anipik",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBAtRdQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "safern",
                                            "createdAt":  "2020-04-09T23:42:01Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2022-05-10T10:03:48Z",
        "body":  "Currently the intellisense works when we open a libraries project folder in vscode.\r\nBut the intellisense doesnt work if open the entire repo in the vscode.\r\nWe should investigate and fix the failure there.\r\n\r\ncc @ericstj @ViktorHofer @safern ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOJHdAWQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxMTc5NTAzMw==",
                                           "createdAt":  "2020-04-09T23:05:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging @safern, @viktorhofer as an [area owner](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md)",
                                           "updatedAt":  "2020-04-09T23:05:19Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Make Intellisense work from the root in vscode",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "help wanted"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/35112",
        "createdAt":  "2020-04-17T15:39:23Z",
        "number":  35112,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-05-07T07:54:54Z",
        "body":  "Compose the testhost configuration agnostic (don\u0027t encode the configuration in the layout) and allow both Debug and Release built tests to run against it. This removes the necessity of an additional full vertical build for testing on different configurations. Additionally this allows to encode the path to the testhost folder into the .runsettings file to make `dotnet test` _just_ work.\r\n\r\ncc @ericstj @Anipik ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOW6IaxA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxNTMxNTc2Mg==",
                                           "createdAt":  "2020-04-17T15:39:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @safern, @viktorhofer\nNotify danmosemsft if you want to be subscribed.",
                                           "updatedAt":  "2020-04-17T15:39:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxNTM1NjU2Mg==",
                                           "createdAt":  "2020-04-17T16:58:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "So this means that if I build for Debug locally and then for Release, Release build will override the `testhost`. Is that the desired behavior? Our libraries are not Configuration agnostic as we have multiple `Debug.Asserts` and others. ",
                                           "updatedAt":  "2020-04-17T17:12:13Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxNTM2MDYwOQ==",
                                           "createdAt":  "2020-04-17T17:06:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "TestHost would still be OS specific but the idea was that we could eliminate Debug/Release differences and make it last-in-wins.  That would let folks test a mix of debug and release easily.  Today you can only do all debug / all release and as a result you need to do a vertical build for each if you wish to run tests for that configuration.  A hook was added for \"RuntimeConfiguration\" to allow for a different CoreCLR (Release) with libraries (debug). ",
                                           "updatedAt":  "2020-04-17T17:06:17Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxNTM2NTE5NA==",
                                           "createdAt":  "2020-04-17T17:16:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "\u003e TestHost would still be OS specific \r\n\r\nI meant `Configuration` agnostic. \r\n\r\n\u003e  but the idea was that we could eliminate Debug/Release differences and make it last-in-wins.\r\n\r\nBut they\u0027re still different. \r\n\r\n\u003e Today you can only do all debug / all release and as a result you need to do a vertical build for each if you wish to run tests for that configuration.\r\n\r\nEven if we don\u0027t encode the configuration on the layout is the same thing. If I have built for Debug and now want to run against a Release shared framework, I have to do the vertical again and that will override the `Debug` shared framework I had on the testhost, and now I can\u0027t run them both. If I wanted to test product differences in between them, I would have to go and do a full vertical again for `Debug` before been able to run the tests.\r\n\r\nMaybe I\u0027m miss-understanding how would this work.  ",
                                           "updatedAt":  "2020-04-17T17:16:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxNTQwMjg3MA==",
                                           "createdAt":  "2020-04-17T18:40:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "This issue assumes that folks don\u0027t wish to maintain separate debug \u0026 release testhost paths in the same clone.  It presumes that folks would instead prefer a single one.   It sounds like you\u0027re in a different camp.",
                                           "updatedAt":  "2020-04-17T18:40:40Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxNTQxNDAxOQ==",
                                           "createdAt":  "2020-04-17T19:05:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "\u003e It sounds like you\u0027re in a different camp.\r\n\r\nNot really. I agree it would make lives easier in the sense of infra related stuff, but I was just trying to think of scenarios that other people might use/do as this would break those. ",
                                           "updatedAt":  "2020-04-17T19:05:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxNTQzMTYzMA==",
                                           "createdAt":  "2020-04-17T19:43:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "The premise of this issue that the new behavior is \"better\", but I think that\u0027s based on a couple opinions.  @safern you are correct to bring up the fact that the behavior is different.  How do you propose we decide if it\u0027s better?",
                                           "updatedAt":  "2020-04-17T19:43:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxNTQ0MzU5MA==",
                                           "createdAt":  "2020-04-17T20:13:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "\u003e  @safern you are correct to bring up the fact that the behavior is different. How do you propose we decide if it\u0027s better?\r\n\r\nI think we should scout and follow the infra rolling changes if we do it. But I think we could either ask on the teams group, or send an email and also consider gitter for externals. Just to get a sense of how many people actually rely on the fact of building multiple testhost and using them without cleaning.\r\n\r\ncc: @jkotas @stephentoub ",
                                           "updatedAt":  "2020-04-17T20:13:31Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxNTQ2NTEwNw==",
                                           "createdAt":  "2020-04-17T21:10:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "My thoughts:\r\n- Having one testhost location that does not depend on configuration sounds good to me. I think it is the right default option for convenience of the inner dev-loop.\r\n- I think this change should be coupled together with the change to build everything as Release by default when you build from root. Again, I think it is the right default option for convenience of the inner-dev loop.\r\n- There is no clean isolation between Debug and Release today away, e.g. you cannot build Debug and Release in parallel (you will get file sharing violations, etc.). I do not trust the current build environment to place the right bits into the right flavor for me - got burned a few times. If it is easier, it would be fine with me to not have Debug/Release captured in the artifacts paths at all.\r\n- The name of the top level artifacts directory is hardcoded. I would like to have an option to specify my custom top level artifacts directory (e.g. using environment variable) and have it respected, so that I can build e.g. Checked and Release in parallel; or can easily have binaries with change A and change B side-by-side. It is a very common workflow for me and I have to deal with it by having multiple enlistments or renaming artifacts directory back and forth that is easy to get lost in.",
                                           "updatedAt":  "2020-04-17T21:14:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5bmP7I",
                                           "createdAt":  "2023-05-05T20:35:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "khushal1996",
                                           "body":  "I am still facing a similar issue today. I am building clr in debug mode and libraries in release mode but the default command still tries to access the dotnet.exe from the debug directory. \r\n\r\n```\r\n \u0027\"C:\\Users\\kmodi\\Documents\\Git_repos\\runtime\\artifacts\\bin\\testhost\\net8.0-windows-Debug-x64\\dotnet.exe\"\u0027 is not recognized as an internal or external command,\r\n  operable program or batch file.\r\n  ----- end Fri 05/05/2023 13:26:48.83 ----- exit code 9009 ----------------------------------------------------------\r\nC:\\Users\\kmodi\\Documents\\Git_repos\\runtime\\eng\\testing\\tests.targets(184,5): error : One or more tests failed while running tests from \u0027System.Runtime.Tests\u0027. [C:\\Users\\kmodi\\Documents\\Git_repos\\runtime\\src\\libraries\\System.Runtime\\tests\\System.Runtime.Tests.csproj::TargetFramew\r\nork=net8.0-windows]\r\n```",
                                           "updatedAt":  "2023-05-05T20:35:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5bohrE",
                                           "createdAt":  "2023-05-07T07:54:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "You likely invoked `dotnet test` or `dotnet build /t:Test` without the libraries configuration: `-c Release`.",
                                           "updatedAt":  "2023-05-07T07:54:54Z"
                                       }
                                   ],
                         "totalCount":  11
                     },
        "title":  "Build testhost configuration agnostic",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "dev-innerloop"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/35752",
        "createdAt":  "2020-05-02T19:57:16Z",
        "number":  35752,
        "author":  "safern",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-06T17:01:10Z",
        "body":  "```\r\n  Discovering: System.Runtime.Extensions.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Runtime.Extensions.Tests (found 837 of 870 test cases)\r\n  Starting:    System.Runtime.Extensions.Tests (parallel test collections = on, max threads = 2)\r\n    System.Tests.EnvironmentTests.GetFolderPath_UWP_NotEmpty [SKIP]\r\n      Condition(s) not met: \"IsWindows10Version1709OrGreater\", \"IsInAppContainer\"\r\n    System.Tests.EnvironmentTests.GetFolderPath_UWP_ExistAndAccessible [SKIP]\r\n      Condition(s) not met: \"IsWindows10Version1709OrGreater\", \"IsInAppContainer\"\r\n    System.Tests.EnvironmentTests.UserInteractive_WindowsNano [SKIP]\r\n      Condition(s) not met: \"IsWindowsNanoServer\"\r\n   System.Runtime.Extensions.Tests: [Long Running Test] \u0027System.Tests.Environment_Exit.ExitCode_VoidMainAppReturnsSetValue\u0027, Elapsed: 00:02:28\r\n   System.Runtime.Extensions.Tests: [Long Running Test] \u0027System.Tests.Environment_Exit.ExitCode_VoidMainAppReturnsSetValue\u0027, Elapsed: 00:04:28\r\n   System.Runtime.Extensions.Tests: [Long Running Test] \u0027System.Tests.Environment_Exit.ExitCode_VoidMainAppReturnsSetValue\u0027, Elapsed: 00:06:28\r\n   System.Runtime.Extensions.Tests: [Long Running Test] \u0027System.Tests.Environment_Exit.ExitCode_VoidMainAppReturnsSetValue\u0027, Elapsed: 00:08:28\r\n   System.Runtime.Extensions.Tests: [Long Running Test] \u0027System.Tests.Environment_Exit.ExitCode_VoidMainAppReturnsSetValue\u0027, Elapsed: 00:10:28\r\n   System.Runtime.Extensions.Tests: [Long Running Test] \u0027System.Tests.Environment_Exit.ExitCode_VoidMainAppReturnsSetValue\u0027, Elapsed: 00:12:28\r\n   System.Runtime.Extensions.Tests: [Long Running Test] \u0027System.Tests.Environment_Exit.ExitCode_VoidMainAppReturnsSetValue\u0027, Elapsed: 00:14:28\r\n```\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=627022\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=19596708\u0026resultId=183795\u0026paneView=debug\r\n\r\nhttps://helix.dot.net/api/2019-06-17/jobs/6bdbf48d-5deb-436c-8f91-8f96823af464/workitems/System.Runtime.Extensions.Tests/console\r\n\r\nFailed in: \r\nhttps://github.com/dotnet/runtime/pull/35169\r\n\r\nConfiguration: netcoreapp5.0-Windows_NT-Debug-x64-CoreCLR_release-Windows.7.Amd64\r\n\r\ncc: @jkotas @stephentoub ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHON4PtXA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyMzAzNDk4Nw==",
                                           "createdAt":  "2020-05-03T00:42:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "The log is incomplete. This is likely combination of #35451 and infrastructure problem (machine getting recycled or something similar).",
                                           "updatedAt":  "2020-05-03T00:42:11Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyMzA0MzIxNw==",
                                           "createdAt":  "2020-05-03T02:16:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @safern, @viktorhofer\nNotify danmosemsft if you want to be subscribed.",
                                           "updatedAt":  "2020-05-03T02:16:22Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyMzA0NTU2NQ==",
                                           "createdAt":  "2020-05-03T02:47:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "I think when the work item exceeds the helix timeout which is 15 mins helix kills the process, that’s why the log is incomplete, but @MattGal can confirm.",
                                           "updatedAt":  "2020-05-03T02:47:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyMzU3NDMxOQ==",
                                           "createdAt":  "2020-05-04T16:41:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBDGZBw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "safern",
                                                                               "createdAt":  "2020-05-04T16:50:14Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "MattGal",
                                           "body":  "Yes.  This is a timeout.  I\u0027ve had the conversation several times recently, and after investigation we determined that we would have to change the Helix API to make this more obvious,  as adding a new enum would break clients.\r\n\r\nIf you just delete \"/console\" from that URI you get the other log:\r\n`https://helix.dot.net/api/2019-06-17/jobs/6bdbf48d-5deb-436c-8f91-8f96823af464/workitems/System.Runtime.Extensions.Tests` --\u003e [this log](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-35169-merge-6bdbf48d5deb436c8f/System.Runtime.Extensions.Tests/24c41cd4-1b79-41c4-9a13-e6dc6c0b89c8.log?sv=2019-02-02\u0026se=2020-05-12T01%3A00%3A14Z\u0026sr=c\u0026sp=rl\u0026sig=5BQyNys4xyl95z05nuLA0AR%2BiqEqQJKoLBA%2BKrzEwwA%3D)\r\n\r\n... which contains:\r\n```\r\n2020-05-02T01:27:10.589Z\tINFO   \tservicebusrepository(109)\trenew_workitem_lock\tRenewed work item lock. Status Code: 200\r\n2020-05-02T01:27:53.402Z\tINFO   \tjob(39)\tkill\tBegin killing timed-out process(es)\r\n2020-05-02T01:27:53.402Z\tERROR  \tjob(48)\tkill\tJob running for too long. Killing...\r\n2020-05-02T01:27:53.402Z\tINFO   \tjob(54)\tkill\tFinished killing timed-out process(es)\r\n2020-05-02T01:27:53.402Z\tERROR  \texecutor(652)\t_execute_command\tExecutor timed out after 900 seconds and was killed.\r\n2020-05-02T01:27:53.402Z\tINFO   \tevent(42)\tsend\tSending event type WorkItemTimeout\r\n2020-05-02T01:27:53.589Z\tINFO   \tsaferequests(87)\trequest_with_retry\tResponse complete with status code \u0027201\u0027\r\n2020-05-02T01:27:53.589Z\tINFO   \texecutor(618)\t_dump_file_upload\tNo dump files to upload\r\n2020-05-02T01:27:53.589Z\tINFO   \texecutor(674)\t_execute_command\tFinished _execute_command, exit code: -3\r\n2020-05-02T01:27:53.589Z\tINFO   \tlogs(153)\t__exit__\tUploading self-uploading log file C:\\h\\logs\\24c41cd4-1b79-41c4-9a13-e6dc6c0b89c8.log (Client: a002EXQ)\r\n```\r\n\r\nI sympathize with how this isn\u0027t handing you the information you need as directly as you\u0027d like, but if you fix your hangs / slow tests and/or increase your timeouts this will go away.",
                                           "updatedAt":  "2020-05-04T16:41:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyMzU4OTEzNg==",
                                           "createdAt":  "2020-05-04T17:10:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "Well, we cannot fix our hangs unless we know where they are. We need process dumps taken when things are killed due to timeouts like this.",
                                           "updatedAt":  "2020-05-04T17:10:06Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1NTYxMTE3Nw==",
                                           "createdAt":  "2020-07-08T16:04:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@MattGal @davidfowl I believe helix now allows to collect dumps on hangs, is that right?",
                                           "updatedAt":  "2020-07-08T16:04:27Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1NTYxMzU4NQ==",
                                           "createdAt":  "2020-07-08T16:08:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBL8e-w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2020-07-30T14:10:35Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "MattGal",
                                           "body":  "\u003e @MattGal @davidfowl I believe helix now allows to collect dumps on hangs, is that right?\r\n\r\nHelix handles setting up its clients in ways that dumps get created and stored to a common folder, and uploading them alongside the results of a run.  It does not handle making hang dumps directly because this is something the work item itself needs to have some special knowledge of, otherwise the dumps all end up being the entry point which is usually a script interpreter (cmd.exe / bash) and not at all useful for the person trying to debug the hang.  This comes from experience of folks trying to get this sort of thing (e.g. \"dumpling\").\r\n\r\n@davidfowl was working on a way for work items to do this within the context of the work item; I\u0027ll defer to him as to where we\u0027re at with that work.",
                                           "updatedAt":  "2020-07-08T16:08:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2NjM4ODM0MA==",
                                           "createdAt":  "2020-07-30T14:10:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Will be fixed with https://github.com/dotnet/runtime/pull/39923.",
                                           "updatedAt":  "2020-07-30T14:10:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5OTA2OTI2OA==",
                                           "createdAt":  "2020-09-25T17:56:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "I am getting another kind of timeout from `coreclr Windows NT x64 Debug` leg in #42583, where no test failure is shown in logs, but Helix SDK reports:\r\n\r\n\u003e .packages\\microsoft.dotnet.helix.sdk\\5.0.0-beta.20471.1\\tools\\Microsoft.DotNet.Helix.Sdk.MultiQueue.targets(54,5): error MSB4181: (NETCORE_ENGINEERING_TELEMETRY=Build) The \"WaitForHelixJobCompletion\" task returned false but did not log an error.\r\n\r\nand the executing DevOps agent reports:\r\n\r\n\u003e ##[error]The job running on agent NetCorePublic-Pool 95 ran longer than the maximum time of 150 minutes.\r\n\r\n@ViktorHofer, will #39923 also cover these kind of timeouts to help getting info on the rootcause (info like, which test is taking forever)?",
                                           "updatedAt":  "2020-09-25T17:56:32Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5OTA3MTQ4NA==",
                                           "createdAt":  "2020-09-25T18:00:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBRlCWA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2020-09-25T18:02:10Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e @ViktorHofer, will #39923 also cover these kind of timeouts to help getting info on the rootcause (info like, which test is taking forever)?\r\n\r\nYes, that PR will abort long running tests and create a dump. In this case, the timeout is likely an infra issue where not enough Helix clients are available to run the tests in time.",
                                           "updatedAt":  "2020-09-25T18:10:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc43g-1c",
                                           "createdAt":  "2021-09-30T14:49:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "krwq",
                                           "body":  "Is this still an issue? I\u0027m seeing that https://github.com/dotnet/runtime/issues/35451 is closed but https://github.com/dotnet/runtime/pull/39923 which was supposed to fix the issue was not merged",
                                           "updatedAt":  "2021-09-30T14:49:07Z"
                                       }
                                   ],
                         "totalCount":  11
                     },
        "title":  "Tests timing out with incomplete log",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/37953",
        "createdAt":  "2020-06-16T10:20:14Z",
        "number":  37953,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCDyvRw==",
                          "nodes":  [
                                        {
                                            "content":  "EYES",
                                            "user":  "tmds",
                                            "createdAt":  "2020-09-23T06:21:12Z"
                                        },
                                        {
                                            "content":  "EYES",
                                            "user":  "PRIMETSS",
                                            "createdAt":  "2021-11-23T22:37:44Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2022-07-20T17:01:41Z",
        "body":  "Today we support two different test runners: `xunit.console` and `VSTest`. The former is used when invoking the test target `dotnet msbuild /t:Test` and when running on CI. The latter is used when using VS Test Explorer, F5, the `dotnet msbuild /t:Run` target or when invoking `dotnet test`. To leverage the new crash dump / hang dump features that @davidfowl is driving in partnership with the VSTest team (cc @nohwnd), we should switch to VSTest and remove xunit.console entirely.\r\n\r\nThis issue only tracks the libraries side for non-mobile and non-WASM configurations. Mobile and WASM use a different harness called xharness which is out-of-scope at the moment.\r\n\r\n1. Remove xunit.console:\r\n- https://github.com/dotnet/runtime/blob/master/eng/testing/xunit/xunit.console.targets\r\n- https://github.com/dotnet/runtime/blob/master/eng/testing/xunit/xunit.targets#L17\r\n\r\n2. Remove runner templates for non-mobile and non-wasm:\r\n- https://github.com/dotnet/runtime/blob/master/eng/testing/RunnerTemplate.cmd\r\n- https://github.com/dotnet/runtime/blob/master/eng/testing/RunnerTemplate.sh\r\n- https://github.com/dotnet/runtime/commit/85bfbfcf5451463d285fd1ccd0b3ac0d8be7b949#diff-e7bc39410f7a119e7adb69b17006c452\r\n- https://github.com/dotnet/runtime/blob/master/eng/testing/tests.targets#L22-L25\r\n\r\n3. Revert https://github.com/dotnet/runtime/commit/85bfbfcf5451463d285fd1ccd0b3ac0d8be7b949#diff-e7bc39410f7a119e7adb69b17006c452\r\n\r\n4. Condition the RunTemplate and Test target logic on TargetsMobile and WASM:\r\n- https://github.com/dotnet/runtime/blob/master/eng/testing/tests.targets#L109-L112\r\n- https://github.com/dotnet/runtime/blob/master/eng/testing/tests.targets#L40-L104\r\n\r\n5. Use `dotnet test` in CI instead of RunTests.cmd/sh for non-mobile and non-wasm:\r\n- https://github.com/dotnet/runtime/blob/132be64c3c4781106b8da4328d39dcd0c696921d/src/libraries/sendtohelix.proj#L69-L70\r\n\r\n6. Fix failing tests (ie Microsoft.Extensions.DependencyModel.Tests) and make sure that code coverage works.\r\n\r\n7. Optional: use `dotnet publish` instead of the `ArchiveTests` target:\r\n- https://github.com/dotnet/runtime/blob/master/eng/testing/tests.targets#L27-L38\r\n\r\ncc @Anipik @ericstj @safern ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHORvYJ1w==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY0NDY3NDkwOA==",
                                           "createdAt":  "2020-06-16T10:20:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @safern, @viktorhofer\nNotify danmosemsft if you want to be subscribed.",
                                           "updatedAt":  "2020-06-16T10:20:19Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2ODc1NzU5Mg==",
                                           "createdAt":  "2020-08-04T18:33:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Blocked until 5.0 P8 SDK is released.",
                                           "updatedAt":  "2020-08-04T18:33:40Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5NzE2MTIwNA==",
                                           "createdAt":  "2020-09-23T06:27:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBRc04w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "davidfowl",
                                                                               "createdAt":  "2020-09-23T06:47:04Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2020-09-24T14:46:04Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "danmoseley",
                                                                               "createdAt":  "2020-09-24T17:44:57Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "danmoseley",
                                                                               "createdAt":  "2020-09-24T17:44:58Z"
                                                                           },
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "danmoseley",
                                                                               "createdAt":  "2020-09-24T17:45:00Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "tmds",
                                           "body":  "I\u0027m interested in this because it will make long running tests produce a coredump.\r\nOn our rhel8 arm64 CI machine, occasionally we see some long running tests, and having these coredumps will help debug them.",
                                           "updatedAt":  "2020-09-23T06:27:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwNzExNTE3NA==",
                                           "createdAt":  "2020-10-12T13:18:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tmds",
                                           "body":  "@ViktorHofer is this something you\u0027ll be working on short term? I\u0027ve been ignoring failures from long running tests on our arm64 rhel8 ci machine because having coredumps from `vstest` will make it easier to debug them.",
                                           "updatedAt":  "2020-10-12T13:18:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwNzExNjY2OQ==",
                                           "createdAt":  "2020-10-12T13:21:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBTMPJA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "tmds",
                                                                               "createdAt":  "2020-10-12T14:09:20Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@tmds https://github.com/dotnet/runtime/pull/39923 is finally ready. It should be merged as soon as I discussed the new device bring-up scenario offline with my colleagues.",
                                           "updatedAt":  "2020-10-12T13:21:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46P5Eb",
                                           "createdAt":  "2021-11-23T22:48:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "PRIMETSS",
                                           "body":  "Spent the last few days trying to get v6 \u0026 v5 building locally to look at SerialPort Libs and kept having issue where build seemed to break with open files errors. Traced it to xunit.console.exe is not terminating if run `dotnet build /t:test`\r\nSeems related to [https://github.com/xunit/xunit/issues/1811](url) Cant even KILL the process, have to reboot!\r\nBegs the question, how does one Test Libs LOCALLY?? Is everyone using the CI only? (guess it runs in Container and gets wiped out each build cycle so runs clean?) Will try JUST using VS to run tests, as this might work if you dont mix running tests in CLI.\r\nJust baffled how this isn\u0027t a more common question? (me?)",
                                           "updatedAt":  "2021-11-23T22:49:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5G9gnX",
                                           "createdAt":  "2022-07-20T17:01:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Blocked by https://github.com/microsoft/vstest/issues/3595",
                                           "updatedAt":  "2022-07-20T17:01:36Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "Remove xunit.console and make VSTest the default runner both locally and in CI",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "blocked",
                       "dev-innerloop"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/38034",
        "createdAt":  "2020-06-17T15:33:36Z",
        "number":  38034,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-07-12T16:48:57Z",
        "body":  "externals.csproj is the remaining depproj file that we want to get rid of and replace it with using live assets where applicable. The project is currently responsible for:\r\n\r\n- Binplacing the `Microsoft.DiaSymReader.Native` package into the shared framework.\r\n~~- Restoring the host packages and binplace them into the testhost and runtime folder.~~\r\n- Copy runtime (coreclr \u0026 mono) assets into the testhost and runtime folder.\r\n- Swap IL version of corelib with native one.\r\n\r\nMost/all of this work could be replaced by leveraging the same infrastructure that the installer tests use to assemble the test layout to test against. Also see discussion in  https://github.com/dotnet/runtime/pull/40172/files#r465090284.\r\n\r\ncc @ericstj @jkoritzinsky @akoeplinger @safern @Anipik ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONc5hdA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY0NTQ0OTAxMg==",
                                           "createdAt":  "2020-06-17T15:33:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Dotnet-GitSync-Bot",
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. Please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2020-06-17T15:33:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY0NTQ0OTMwNw==",
                                           "createdAt":  "2020-06-17T15:34:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @safern, @viktorhofer\nNotify danmosemsft if you want to be subscribed.",
                                           "updatedAt":  "2020-06-17T15:34:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41vNZa",
                                           "createdAt":  "2021-08-19T02:51:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "@ViktorHofer, @jkoritzinsky, \r\n\r\nBackground\r\n\r\nI have an LTTng tracing test that requires `dotnet(1)` in the helix environment to load assembly, because corerun has some issues with the debug build (#56888) that is not reproducible with corehost\u0027s debug build. The corerun issue can be fixed in future but it feels like there is still a potential benefit of testing at least some scenarios under `src/tests` (if not all) with the actual shipping host; corehost.\r\n\r\nCurrent Situation\r\n\r\nCurrently the test infrastructure for `src/tests` provides `CORE_ROOT`in the default test script template. Most tests use the template and run on corerun. The script also provides a way for test project to provide a hook script, which gets called by the template and has `CORE_ROOT` at its disposal; this is done by `CLRCustomTestLauncher` mechanism.\r\n\r\nHowever, if the test requires corehost (`dotnet(1)` and friends) instead of corerun, currently there is no first-class, OOTB facility provided for it. AFAIK, (and please CMIIW) the `dotnet` in helix environment\u0027s PATH is apparently not the one which was live-built, it is \u0027some\u0027 previous version. For example, `src/tests/BuildWasmApps/Wasm.Build.Tests/data/RunScriptTemplate.sh` works around this problem by obtaining a fixed corehost from xharness, and overwriting some files to test the latest bits (which were built with same commit as test) reliably.\r\n\r\nQuestion\r\n\r\nIs there a plan to provide opt-in mechanism for helix tests to package with dotnet, instead of corerun? so the author of test project can chose using something like `\u003cRequiresCorehost\u003etrue\u003c/RequiresCorehost\u003e`, and the \u0027send-to-helix\u0027 package will pack corehost instead of corerun (and complain if the host/pack subsets weren\u0027t built).",
                                           "updatedAt":  "2021-08-19T02:51:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41zmF0",
                                           "createdAt":  "2021-08-20T14:06:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB3LIlQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2021-08-20T14:20:37Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@am11 this issue tracks using live assets to construct the testhost which is what our libraries tests under src/libraries run against. It\u0027s very similar to how the src/installer tests work but underneath a fundamentally different infrastructure is used to assemble the testhost / vs the bundle layout (installer).\r\n\r\nIn src/libraries we don\u0027t use corerun, we use the shipping corehost (dotnet.dll). To discuss replacing corerun with corehost for runtime tests, please open a new issue to keep this one libraries specific. Tbh I don\u0027t understand why we still have three different layouts that we test against: libraries testhost, runtime tests CORE_ROOT, installer tests bundle layout.",
                                           "updatedAt":  "2021-08-20T14:06:51Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Use live assets to construct the testhost",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/38036",
        "createdAt":  "2020-06-17T15:39:30Z",
        "number":  38036,
        "author":  "eerhardt",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-05-10T10:12:29Z",
        "body":  "System.SR has a mechanism for not using the full exception message string, but instead just returning the \"resource key\" as the exception message. See:\r\n\r\nhttps://github.com/dotnet/runtime/blob/d734c7ee32add0fbdd9fedcacc3cadd03b369de2/src/libraries/Common/src/System/SR.cs#L13-L27\r\n\r\nThis allows for size savings by allowing trimming the full exception messages from the System.* assemblies.\r\n\r\nHowever, this can be confusing to people. When UsingResourceKeys is enabled, we should also add a link to a web page that explains:\r\n* Why the exception looks like this\r\n* How to convert the resource key into the real exception message\r\n    - We can just put the resource key as a query parameter on the URL, and the web page should be able to display the exception message directly\r\n* How to turn this behavior off\r\n\r\n@MichalStrehovsky @vitek-karas @joperezr ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOJ7F9Gg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY0NTQ1MjI3Mw==",
                                           "createdAt":  "2020-06-17T15:39:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Dotnet-GitSync-Bot",
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. Please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2020-06-17T15:39:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY0NTQ2MTkzOA==",
                                           "createdAt":  "2020-06-17T15:56:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @safern, @viktorhofer\nNotify danmosemsft if you want to be subscribed.",
                                           "updatedAt":  "2020-06-17T15:56:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2NTk0MzMyMg==",
                                           "createdAt":  "2020-07-29T21:39:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Suggest we move to Future. It seems that we could just document it, and folks will be able to re-deploy with full messages if they want to.",
                                           "updatedAt":  "2020-07-29T21:39:56Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "System.SR UsingResourceKeys should contain a link to docs",
        "labels":  [
                       "documentation",
                       "area-Infrastructure-libraries",
                       "linkable-framework"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/38276",
        "createdAt":  "2020-06-23T15:27:43Z",
        "number":  38276,
        "author":  "Anipik",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBKAaAw==",
                          "nodes":  [
                                        {
                                            "content":  "HEART",
                                            "user":  "danmoseley",
                                            "createdAt":  "2020-07-10T15:27:38Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2022-07-06T17:02:14Z",
        "body":  "This issue is to provide ci protection against some basic scenarios regarding building individual project\r\n- Simple src,ref, test build.\r\n- Simple Solution Build.\r\n- Build for a specific tfm or os\r\n- run tests for an individual project.\r\n\r\nWe can run these commands on a list of projects after a vertical build.\r\n\r\ncc @safern @ViktorHofer @ericstj @danmosemsft ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOJyvf9w==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY0ODIzNzg1NA==",
                                           "createdAt":  "2020-06-23T15:27:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Dotnet-GitSync-Bot",
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. Please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2020-06-23T15:27:46Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY0ODQ1ODI3Nw==",
                                           "createdAt":  "2020-06-23T22:19:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @ViktorHofer\nNotify danmosemsft if you want to be subscribed.",
                                           "updatedAt":  "2020-06-23T22:19:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1NzE4NjgwNw==",
                                           "createdAt":  "2020-07-12T07:37:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @safern, @viktorhofer\nNotify danmosemsft if you want to be subscribed.",
                                           "updatedAt":  "2020-07-12T07:37:30Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Adding Ci protection for Building Individual Projects",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/38281",
        "createdAt":  "2020-06-23T15:39:09Z",
        "number":  38281,
        "author":  "Anipik",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBJZLRg==",
                          "nodes":  [
                                        {
                                            "content":  "CONFUSED",
                                            "user":  "ViktorHofer",
                                            "createdAt":  "2020-06-23T15:41:09Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Gnbrkm41",
                                            "createdAt":  "2020-07-05T11:27:22Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2022-05-12T08:23:20Z",
        "body":  "The purpose here to provide list of properties that developers can use to build different scenarios,\r\n\r\neg TargetOS, TargetArchitecture, Tfm, BuildTargetFramework, etc.\r\n\r\n\r\ncc @safern @ViktorHofer @ericstj ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOJqTgrA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY0ODI0NDg0Mw==",
                                           "createdAt":  "2020-06-23T15:39:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @safern, @viktorhofer\nNotify danmosemsft if you want to be subscribed.",
                                           "updatedAt":  "2020-06-23T15:39:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY0ODI0NTk5NA==",
                                           "createdAt":  "2020-06-23T15:41:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "How does a developer know that the `help` target exists? If the developer already has to read the docs to find out about it, why wouldn\u0027t we prefer that place over a help target to document these properties?",
                                           "updatedAt":  "2020-06-23T15:41:06Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY0ODI4MzY0OQ==",
                                           "createdAt":  "2020-06-23T16:46:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "We thought that adding `/t:help` might be really helpful for people to remember what is available for that specific project. Based on project type we could expand available common targets, how to run tests, what properties are available, etc. ",
                                           "updatedAt":  "2020-06-23T16:46:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY0ODMwNjA4Mg==",
                                           "createdAt":  "2020-06-23T17:29:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "So again, how would a developer know that the help target exists without finding it in the docs? I don\u0027t see much value in doing that and would instead want to focus on improving the existing docs, which contains documents that are super long and hard to read.",
                                           "updatedAt":  "2020-06-23T17:29:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY0ODMxNTQyMQ==",
                                           "createdAt":  "2020-06-23T17:45:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "I don\u0027t know whether I\u0027m a representative user, but I am confident I can remember `/t:help`, but will certainly forget the various names of the properties and their possible values (viz: the recent discussion about how to build for FreeBSD). And they may change in future.\r\n\r\nThe docs are important, but for simple mainstream commands I\u0027d like to get the job done quickly without heading to look at docs., This is exactly what we did for build.cmd/sh and it was so useful.\r\n\r\nI imagine it would give 5-6 key examples/sets of parameters and point to the markdown for anything else.\r\n",
                                           "updatedAt":  "2020-06-23T17:45:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY0ODMyNDQ4NA==",
                                           "createdAt":  "2020-06-23T18:00:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "So I probably missed the point. I though this is about improving the first time contributor scenario.",
                                           "updatedAt":  "2020-06-23T18:00:27Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY0ODMzMTc4MA==",
                                           "createdAt":  "2020-06-23T18:14:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBITAdw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "safern",
                                                                               "createdAt":  "2020-06-23T18:28:53Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "The first time contributor is inevitably going to have to walk through the docs. The idea behind something like this is to try to reduce the number of times they have to return to those docs, I guess.",
                                           "updatedAt":  "2020-06-23T18:14:37Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY0ODMzOTYyOA==",
                                           "createdAt":  "2020-06-23T18:30:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBJZLSA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Anipik",
                                                                               "createdAt":  "2020-06-28T06:06:41Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Gnbrkm41",
                                                                               "createdAt":  "2020-07-05T11:27:24Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "safern",
                                           "body":  "Yeah the point of this is once you know how the repo build works, you already read the docs, so that you don’t have to go back to the docs and just remember about /t:help and that will help you without having to leave the terminal at all.\n\nA lot of people reach out why doesn’t /p:TargetArch work, because they forget it is /p:TargetArchitecture. Also they forget various combinations to cross compile, how to make a project that has iOS specific configs use that OS, etc.",
                                           "updatedAt":  "2020-06-23T18:30:53Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "Adding dotnet build /t:help  support for individual effects",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "dev-innerloop"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/40237",
        "createdAt":  "2020-08-02T09:39:33Z",
        "number":  40237,
        "author":  "marek-safar",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-05-12T08:21:57Z",
        "body":  "Try to build an individual project using command line like\r\n\r\n```\r\n./build.sh --arch wasm --os Browser --configuration release --projects \u003cpath-to-some-project-like-/src/libraries/System.Net.Http/src/System.Net.Http.csproj\u003e\r\n```\r\n\r\nThe build produces output for all System.Net.Http targets",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOKaHVfA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2NzY1MTY0OA==",
                                           "createdAt":  "2020-08-02T09:39:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Dotnet-GitSync-Bot",
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2020-08-02T09:39:36Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2NzY1MTY3Nw==",
                                           "createdAt":  "2020-08-02T09:39:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @safern, @viktorhofer\nSee info in area-owners.md if you want to be subscribed.",
                                           "updatedAt":  "2020-08-02T09:39:50Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5ODQ0MDA4MA==",
                                           "createdAt":  "2020-09-24T16:06:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "We don\u0027t filter based on `TargetOS` or `TargetArchitecture` but on `BuildTargetFramework` which is derived from `TargetFramework`: https://github.com/dotnet/arcade/blob/b5f1c06d542d947d38ead87640040d81d55a0290/src/Microsoft.DotNet.Build.Tasks.TargetFramework.Sdk/src/build/Microsoft.DotNet.Build.Tasks.TargetFramework.Sdk.targets#L14.\r\n\r\nIn this case, as no `BuildTargetFramework` is set, no filtering happens.\r\n\r\n@Anipik is this something that we want to support? We would need to change the condition to also respect `TargetOS` and make filtering possible without a target framework specified.\r\n\r\ncc @ericstj ",
                                           "updatedAt":  "2020-09-24T16:06:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5ODQ1MDk2Nw==",
                                           "createdAt":  "2020-09-24T16:26:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "I guess we need to consider what the `build.sh` script does.  Normally it will filter to `netcoreappcurrent` when `-allconfigurations` isn\u0027t specified, but it\u0027s not doing that here.  I suspect folks don\u0027t really want the behavior of \"build all possible TargetFrameworks that have this arch\" when they are invoking build.sh in this way.",
                                           "updatedAt":  "2020-09-24T16:26:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5ODQ1NzkyMw==",
                                           "createdAt":  "2020-09-24T16:40:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e I suspect folks don\u0027t really want the behavior of \"build all possible TargetFrameworks that have this arch\" when they are invoking build.sh in this way.\r\n\r\nThis isn\u0027t isolated to build.sh or build.cmd. This happens when invoking `dotnet build` on a project as well when supplying `TargetOS`. Regarding build.cmd/sh, I would even remove the `--projects` switch as we have our dotnet.cmd/sh helper scripts in the repo root which we advertise and support.",
                                           "updatedAt":  "2020-09-24T16:40:05Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5ODQ2NzQ4Mw==",
                                           "createdAt":  "2020-09-24T16:58:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "The interface to a project is TargetFramework | TargetFrameworks.  If we wanted to provide a shortcut for OS it should probably assume some TargetFramework (NetCoreAppCurrent).  Note that what you are calling filtering is not actually filtering for _many TargetFrameworks_, it is actually _best applicable TargetFramework_ .  The best TargetFramework for browser might actually be a TargetFramework that doesn\u0027t target browser.  The best TargetFramework for all possible browser TargetFrameworks might actually be all TargetFrameworks in the project.  This is why we would need to assume some TargetFramework.",
                                           "updatedAt":  "2020-09-24T16:58:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5ODQ3MTgwNA==",
                                           "createdAt":  "2020-09-24T17:07:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "That makes sense. I don\u0027t think we should have diverging behaviors between `build.cmd/sh -projects` and `dotnet build`. Are we fine with requiring devs to filter based on the `TargetFramework`, in this case `dotnet build -f net5.0-Browser`? I\u0027m unsure if we should support other inputs besides `TargetFramework`.",
                                           "updatedAt":  "2020-09-24T17:07:27Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "Build --project setting does not respect --os or --arch settings",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "dev-innerloop"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/40557",
        "createdAt":  "2020-08-07T23:52:23Z",
        "number":  40557,
        "author":  "danmoseley",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-05-10T10:21:26Z",
        "body":  "\r\nThis section is out of date. Is it even relevant anymore? (The first section is now up to date)\r\nhttps://github.com/dotnet/runtime/blob/master/docs/workflow/using-dotnet-cli.md#update-using-runtime-nuget-package \r\n\r\nThis document is also out of date and needs update\r\nhttps://github.com/dotnet/runtime/blob/master/docs/workflow/testing/using-your-build.md",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOKG9QeQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3MDc4ODM0Mg==",
                                           "createdAt":  "2020-08-07T23:52:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Dotnet-GitSync-Bot",
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2020-08-07T23:52:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3MDc4ODM2Mw==",
                                           "createdAt":  "2020-08-07T23:52:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @safern, @viktorhofer\nSee info in area-owners.md if you want to be subscribed.",
                                           "updatedAt":  "2020-08-07T23:52:32Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3ODM4MzczNw==",
                                           "createdAt":  "2020-08-21T16:39:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "It\u0027d be good to clean this stuff up.  cc @jkoritzinsky @ViktorHofer ",
                                           "updatedAt":  "2020-08-21T16:39:58Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Updates to docs/workflow/using-*md",
        "labels":  [
                       "documentation",
                       "area-Infrastructure-libraries",
                       "help wanted"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/40570",
        "createdAt":  "2020-08-08T13:41:01Z",
        "number":  40570,
        "author":  "alefranz",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBfGWWA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "vcsjones",
                                            "createdAt":  "2020-08-08T13:54:44Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "danmoseley",
                                            "createdAt":  "2020-08-09T04:19:01Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "gfoidl",
                                            "createdAt":  "2020-08-09T10:04:49Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "SingleAccretion",
                                            "createdAt":  "2020-08-09T11:51:42Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "omariom",
                                            "createdAt":  "2020-08-09T13:36:04Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "zmj",
                                            "createdAt":  "2020-08-10T19:43:26Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ViktorHofer",
                                            "createdAt":  "2020-08-24T18:16:13Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "quixoticaxis",
                                            "createdAt":  "2021-02-05T21:40:50Z"
                                        }
                                    ],
                          "totalCount":  8
                      },
        "updatedAt":  "2022-08-08T15:07:50Z",
        "body":  "Hello,\r\n\r\nI would like to bring to your attention my experience in trying to work on the libraries, in the hope that it could be valuable feedback.\r\n\r\nSince the moved to the monorepo, contributing or simply building libraries like Microsoft.Extensions.* has become more challenging and time consuming due to the need to build the clr.\r\nI understand the benefits for the core team to work with a monorepo and that probably the core devs use powerfull workstations or VMs, however I believe the dev loop is quite taxing and if we could improve it, it would make easier to contributors to join the project.\r\n\r\n------\r\n\r\nTo get started building a library, it now requires to install more SDKs and tools and a bit of setup, however that part is well document and although it requires more disk space, it is a one-off operation.\r\n\r\nThe troubles start when you actually want to run the build.\r\n\r\nThe recommended way to build to be able to work on the libraries is:\r\n```\r\ngit clean -xfd\r\n.\\build.cmd -subset clr+libs -runtimeConfiguration Release\r\n```\r\nThis command on a well specced current gen laptop would take over 10 mins. During this time the laptop would be totally unresponsive (not even able to type) and it will overheat (so not be able to type on it for a while once completed)\r\n\r\nOnce you managed to build it, you can use a helper to open the solution in Visual Studio\r\n``` ./build.cmd -vs SolutionName```\r\nhowever, if you do this as first thing, as recommended in the guide, if will generally fail to build\r\n\r\nYou could build from the command line, however the steps described in the guide do not specify that you have to modify your enviroments variables to use the local setup of the dotnet sdks. To do that I use:\r\n```\r\n    $env:DOTNET_INSTALL_DIR = \"$pwd\\.dotnet\"\r\n    $env:DOTNET_MULTILEVEL_LOOKUP = 0\r\n    $env:DOTNET_SKIP_FIRST_TIME_EXPERIENCE = 1\r\n    $env:Path = $env:DOTNET_INSTALL_DIR + \";\" + $env:Path\r\n```\r\nit would be nice to have a helper in place like the activate script in the AspNetCore repo.\r\nIf you forget to set the environment variables the build will fail.\r\nYou also need to kill every `dotnet.exe` process with `taskkill /IM dotnet.exe /F` after changing the environment or it will not build correctly.\r\n\r\n**The most problematic thing is that if you build in Visual Studio too early or with a wrong dotnet SDK version, you build will break irreparably and the only solution I found to recover it is to do a git cleanand full build .**\r\n\r\nOn top of that, there are sometimes commit not properly building, so you generally end up having to git clean and then build 2-3 times, assuming you did something wrong, then trying to move a few commits back and repeat until I get a working version.\r\nThis means every time you rebase a branch, even if you are one day behind, you would easily spend an our just to have a working build of the library again.\r\n\r\n----\r\n\r\nI think it worth discussing what could be done to improve the dev loop for libraries contributors.\r\nIdeally, it would be nice to get a lightweight build that get a prebuilt CLR from CI and maybe even prebuilt shared libraries, to get to the same experience it was before the monorepo move.\r\n\r\nMaybe I\u0027m just really unlucky or the documentation is out of date and there are already tricks to simplify the process.\r\nI\u0027m happy to test all your suggestion and contribute to the docs if that is the case.\r\n\r\nThank you for your time,\r\n Alessio\r\n\r\n\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOR4XcOg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3MDkzMDQ5Mg==",
                                           "createdAt":  "2020-08-08T13:41:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Dotnet-GitSync-Bot",
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2020-08-08T13:41:08Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3MDk5Mzk4Mg==",
                                           "createdAt":  "2020-08-09T01:46:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @safern, @viktorhofer\nSee info in area-owners.md if you want to be subscribed.",
                                           "updatedAt":  "2020-08-09T01:46:42Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3MDk5NjIyMw==",
                                           "createdAt":  "2020-08-09T02:19:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "Thanks for the great valuable feedback, we really appreciate it and want to hear this to improve your experience.\n\n\u003e it would be nice to get a lightweight build that get a prebuilt CLR from CI and maybe even prebuilt shared libraries,\n\nI\u0027m currently on my phone and can\u0027t reply to all the concerns.\n\nFWIW given the timeline and that we\u0027re trying to burn down 5.0 issues down, I haven\u0027t been able to fund much time for this, but I did start looking into this as a prove of concept to see how feasible that would be, so stay tuned. 😃 ",
                                           "updatedAt":  "2020-08-09T02:19:04Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3MDk5OTY0Ng==",
                                           "createdAt":  "2020-08-09T03:09:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidfowl",
                                           "body":  "@alefranz agreed. I was trying to make a change to dependency injection and I couldn\u0027t make anything work inside of VS so I just gave up and built from the command line while using VS code",
                                           "updatedAt":  "2020-08-09T03:09:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3ODM4MjUyOQ==",
                                           "createdAt":  "2020-08-21T16:37:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBOKDgQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "alefranz",
                                                                               "createdAt":  "2020-08-22T16:44:38Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ericstj",
                                           "body":  "We have done some recent changes to make it easier to approach the repo and just build libraries.\r\n\r\nToday the build of the CLR+LIbs is still a requirement to run tests since we don\u0027t want folks running on an LKG framework.\r\n\r\nI\u0027ve assigned @ViktorHofer to take a look at this as he has recently made a ton of changes to improve this experience and I want to make sure he has a chance to look at your feedback.",
                                           "updatedAt":  "2020-08-21T16:37:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4NDA4Nzk2NA==",
                                           "createdAt":  "2020-08-31T23:05:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBc71_Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "alefranz",
                                                                               "createdAt":  "2020-09-01T06:20:29Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "vcsjones",
                                                                               "createdAt":  "2021-01-19T16:32:02Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Hello @alefranz, thanks for the detailed feedback. I\u0027ll try to respond to all of it.\r\n\r\n\u003e This command on a well specced current gen laptop would take over 10 mins. During this time the laptop would be totally unresponsive (not even able to type) and it will overheat (so not be able to type on it for a while once completed)\r\n\r\nYou are right with building the runtime part of the repository takes a considerable amount of time. During that, we fan out the CPU so that it builds as fast as possible but with the caveat of making the machine unresponsive during the build. @jkoritzinsky and others were looking into speeding up the coreclr build without fanning out the CPU in such an extreme manner (ie with Ninja). We should continue this discussion in https://github.com/dotnet/runtime/issues/41637.\r\n\r\n\u003e Once you managed to build it, you can use a helper to open the solution in Visual Studio\r\n./build.cmd -vs SolutionName\r\n\r\nThe -vs switch is no requirement, it\u0027s a convenience wrapper to open Visual Studio with the repo local SDK. If you have a matching SDK installed globally, you don\u0027t need the -vs switch at all (make sure that you restored/built the solution once with the CLI to avoid NuGet issues).\r\n\r\n\u003e however, if you do this as first thing, as recommended in the guide, if will generally fail to build\r\n\r\nYou are right that building inside Visual Studio isn\u0027t supported until you have built at least once from the repo root. Usually a `build.cmd libs` should be sufficient to just build the libraries part. Note that you might want to build coreclr as well if you intend to run tests: `build.cmd clr+libs -rc Release`. I definitely see room for improvement here, possibly by supporting one of all of these features:\r\n- Represent the Microsoft.NETCore.App shared framework as a single msbuild project file which can be referenced from OOB libraries (with incremental build support and low evaluation time) and use ProjectReference items to define dependencies between shared framework libraries instead of current named references to allow building transitive dependencies as well.\r\n- Layer the runtime (coreclr/mono) dependency as a ProjectReference with incremental build support so that building a test app also stages the test environment.\r\n- Allow to download and stage prebuilts from a last known good (LKG) so that the coreclr/mono/libraries build can be skipped.\r\n\r\n\u003e You could build from the command line, however the steps described in the guide do not specify that you have to modify your enviroments variables to use the local setup of the dotnet sdks. To do that I use:\r\nit would be nice to have a helper in place like the activate script in the AspNetCore repo.\r\nIf you forget to set the environment variables the build will fail.\r\nYou also need to kill every dotnet.exe process with taskkill /IM dotnet.exe /F after changing the environment or it will not build correctly.\r\n\r\nThanks again for the feedback here. Our goal is to make building/testing possible without any environment changes (like what aspnetcore does with their active scripts). As mentioned above, using Visual Studio should _just_ work after an intial root build. Maybe you can provide more data on why this isn\u0027t working for you.\r\n\r\n\u003e The most problematic thing is that if you build in Visual Studio too early or with a wrong dotnet SDK version, you build will break irreparably and the only solution I found to recover it is to do a git cleanand full build .\r\n\r\nI\u0027m interested in how this breaks irreparably. Can you please provide more data so that I can follow-up?\r\n\r\n\u003e On top of that, there are sometimes commit not properly building, so you generally end up having to git clean and then build 2-3 times, assuming you did something wrong, then trying to move a few commits back and repeat until I get a working version.\r\nThis means every time you rebase a branch, even if you are one day behind, you would easily spend an our just to have a working build of the library again.\r\n\r\n100% agree. Note that this recently started to happen and is tracked in https://github.com/dotnet/runtime/issues/40778. I\u0027m working on a fix right now.\r\n\r\n\u003e I think it worth discussing what could be done to improve the dev loop for libraries contributors.\r\nIdeally, it would be nice to get a lightweight build that get a prebuilt CLR from CI and maybe even prebuilt shared libraries, to get to the same experience it was before the monorepo move.\r\nMaybe I\u0027m just really unlucky or the documentation is out of date and there are already tricks to simplify the process.\r\nI\u0027m happy to test all your suggestion and contribute to the docs if that is the case.\r\n\r\n@alefranz thanks again for the feedback. Let\u0027s make sure that we follow-up on each individual issue that you reported. Note that we did some recent work that should allow building and testing a library for a non NetCoreAppCurrent (currently net6.0 in master) configuration from a fresh clone.\r\n\r\nBuilding netstandard2.0: `dotnet.cmd build -f netstandard2.0 src\\libraries\\Microsoft.Extensions.Configuration.FileExtensions\\tests\\`.\r\nTesting against net461: `dotnet.cmd test -f net461 src\\libraries\\Microsoft.Extensions.Configuration.FileExtensions\\tests\\`.\r\n\r\nWith the option to use prebuilts (ie as an option in dotnet.cmd/dotnet.sh) we should be able to make building and testing for any configuration work from a fresh clone in a reasonable amount of time. That said, even without the prebuilt option we should be able to sequence the runtime and shared framework dependency into the right place to remove any needed upfront restore/build steps.\r\n\r\n//edit: Moving to 6.0 as any optimizations would target master.",
                                           "updatedAt":  "2020-09-26T08:08:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4NDA4ODMxMw==",
                                           "createdAt":  "2020-08-31T23:06:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @ViktorHofer\nSee info in area-owners.md if you want to be subscribed.",
                                           "updatedAt":  "2020-08-31T23:06:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3NDMwOTA5Mw==",
                                           "createdAt":  "2021-02-05T21:54:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "quixoticaxis",
                                           "body":  "There\u0027s a similar [issue](https://github.com/dotnet/runtime/issues/1885).\nBeing able to download at least native artifacts would be a great help. While the space taken by the compilers/SDKs/Cmake/etc. is probably not an issue, the installation could be, if the user\u0027s computer is managed by an organisation/needs to comply to some regulations.\nIt\u0027s probably not a stopper, but, for example, I had to wait for a week (to get back to my home PC,) because I cannot install additional dependecies on my work machine. And all I wanted was to benchmark some changes in System.Collections.Immutable.",
                                           "updatedAt":  "2021-02-05T21:54:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Hhdw6",
                                           "createdAt":  "2022-07-29T21:23:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nHello,\r\n\r\nI would like to bring to your attention my experience in trying to work on the libraries, in the hope that it could be valuable feedback.\r\n\r\nSince the moved to the monorepo, contributing or simply building libraries like Microsoft.Extensions.* has become more challenging and time consuming due to the need to build the clr.\r\nI understand the benefits for the core team to work with a monorepo and that probably the core devs use powerfull workstations or VMs, however I believe the dev loop is quite taxing and if we could improve it, it would make easier to contributors to join the project.\r\n\r\n------\r\n\r\nTo get started building a library, it now requires to install more SDKs and tools and a bit of setup, however that part is well document and although it requires more disk space, it is a one-off operation.\r\n\r\nThe troubles start when you actually want to run the build.\r\n\r\nThe recommended way to build to be able to work on the libraries is:\r\n```\r\ngit clean -xfd\r\n.\\build.cmd -subset clr+libs -runtimeConfiguration Release\r\n```\r\nThis command on a well specced current gen laptop would take over 10 mins. During this time the laptop would be totally unresponsive (not even able to type) and it will overheat (so not be able to type on it for a while once completed)\r\n\r\nOnce you managed to build it, you can use a helper to open the solution in Visual Studio\r\n``` ./build.cmd -vs SolutionName```\r\nhowever, if you do this as first thing, as recommended in the guide, if will generally fail to build\r\n\r\nYou could build from the command line, however the steps described in the guide do not specify that you have to modify your enviroments variables to use the local setup of the dotnet sdks. To do that I use:\r\n```\r\n    $env:DOTNET_INSTALL_DIR = \"$pwd\\.dotnet\"\r\n    $env:DOTNET_MULTILEVEL_LOOKUP = 0\r\n    $env:DOTNET_SKIP_FIRST_TIME_EXPERIENCE = 1\r\n    $env:Path = $env:DOTNET_INSTALL_DIR + \";\" + $env:Path\r\n```\r\nit would be nice to have a helper in place like the activate script in the AspNetCore repo.\r\nIf you forget to set the environment variables the build will fail.\r\nYou also need to kill every `dotnet.exe` process with `taskkill /IM dotnet.exe /F` after changing the environment or it will not build correctly.\r\n\r\n**The most problematic thing is that if you build in Visual Studio too early or with a wrong dotnet SDK version, you build will break irreparably and the only solution I found to recover it is to do a git cleanand full build .**\r\n\r\nOn top of that, there are sometimes commit not properly building, so you generally end up having to git clean and then build 2-3 times, assuming you did something wrong, then trying to move a few commits back and repeat until I get a working version.\r\nThis means every time you rebase a branch, even if you are one day behind, you would easily spend an our just to have a working build of the library again.\r\n\r\n----\r\n\r\nI think it worth discussing what could be done to improve the dev loop for libraries contributors.\r\nIdeally, it would be nice to get a lightweight build that get a prebuilt CLR from CI and maybe even prebuilt shared libraries, to get to the same experience it was before the monorepo move.\r\n\r\nMaybe I\u0027m just really unlucky or the documentation is out of date and there are already tricks to simplify the process.\r\nI\u0027m happy to test all your suggestion and contribute to the docs if that is the case.\r\n\r\nThank you for your time,\r\n Alessio\r\n\r\n\r\n\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ealefranz\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`, `area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e7.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-07-29T21:23:42Z"
                                       }
                                   ],
                         "totalCount":  9
                     },
        "title":  "Improve dev loop for libraries contributors",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "dev-innerloop"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/41804",
        "createdAt":  "2020-09-03T15:37:18Z",
        "number":  41804,
        "author":  "safern",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBPXWdg==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ViktorHofer",
                                            "createdAt":  "2020-09-03T16:17:18Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2022-07-20T16:56:02Z",
        "body":  "https://github.com/dotnet/runtime/pull/41712#discussion_r483025139\r\n\r\nAn example would be removing this line: \r\n```\r\n\u003cBuildTargetFramework Condition=\"\u0027$(TestPackages)\u0027 != \u0027true\u0027\"\u003e$([MSBuild]::ValueOrDefault(\u0027$(BuildTargetFramework)\u0027, \u0027$(NetCoreAppCurrent)\u0027))\u003c/BuildTargetFramework\u003e\r\n```\r\n\r\ncc: @ViktorHofer ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOKOxT3Q==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4NjU3NjYwNQ==",
                                           "createdAt":  "2020-09-03T15:37:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @safern, @viktorhofer\nSee info in area-owners.md if you want to be subscribed.",
                                           "updatedAt":  "2020-09-03T15:37:21Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Consider adding a libraries.helix subset to avoid duplicating logic that we already have in root entry points",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/42106",
        "createdAt":  "2020-09-11T02:46:40Z",
        "number":  42106,
        "author":  "CircuitRCAY",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-07-14T13:52:42Z",
        "body":  "\u003c!--This is just a template - feel free to delete any and all of it and replace as appropriate.--\u003e\r\n\r\n### Description\r\n\r\n\u003c!--\r\n* Please share a clear and concise description of the problem.\r\n* Include minimal steps to reproduce the problem if possible. E.g.: the smallest possible code snippet; or a small repo to clone, with steps to run it.\r\n* What behavior are you seeing, and what behavior would you expect?\r\n  --\u003e\r\nCross-compiling with the Android NDK is in \"bits and pieces\", and the `build-android-rootfs.sh` script in `eng/common/cross` is not exactly up to date, instead having to use a different set of subsets.\r\n\r\n#### Build Steps\r\n```\r\n./eng/common/cross/build-android-rootfs.sh arm64 # on the root directory\r\nROOTFS_DIR=$(realpath ~/runtime/.tools/android-rootfs/android-ndk-r21/sysroot) ./build.sh --cross --arch arm64 --subset Libs\r\n```\r\n\r\n#### Expected Behaviour\r\n- Compiles successfully without any issues or missing libraries.\r\n\r\n#### Observed Behaviour\r\n- Fails and errors on missing `libSystem.IO.Ports.so` library.\r\n\r\n### Configuration\r\n\r\n\u003c!--\r\n* Which version of .NET is the code running on?\r\n* What OS and version, and what distro if applicable?\r\n* What is the architecture (x64, x86, ARM, ARM64)?\r\n* Do you know whether it is specific to that configuration?\r\n  --\u003e\r\n- **.NET Version**: N/A\r\n- **OS**: `Linux innovare 5.8.7-arch1-1 #1 SMP PREEMPT Sat, 05 Sep 2020 12:31:32 +0000 x86_64 GNU/Linux`\r\n- **Architecture**: \r\n    - Host: x86_64\r\n    - Guest: arm64\r\n\r\n### Regression?\r\n\r\n\u003c!--\r\n* Did this work in a previous build or release of .NET Core, or from .NET Framework? If you can try a previous release or build to find out, that can help us narrow down the problem. If you don\u0027t know, that\u0027s OK.\r\n  --\u003e\r\nN/A\r\n\r\n### Other information\r\n\r\n\u003c!--\r\n* Please include any relevant stack traces or error messages. If possible please include text as text rather than images (so it shows up in searches).\r\n* If you have an idea where the problem might lie, let us know that here. Please include any pointers to code, relevant changes, or related issues you know of.\r\n* Do you know of any workarounds?\r\n  --\u003e\r\nLog of the build: https://haste.soulja-boy-told.me/udacegifim.txt\r\nRelated issues: These commands were partially modified from #33237. ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOKVXbdw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5MDg0MDQyNg==",
                                           "createdAt":  "2020-09-11T02:46:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Dotnet-GitSync-Bot",
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2020-09-11T02:46:42Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5MTE1ODA1Mg==",
                                           "createdAt":  "2020-09-11T15:20:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @directhex\nSee info in area-owners.md if you want to be subscribed.",
                                           "updatedAt":  "2020-09-11T15:20:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5MzQ4Mjg3NA==",
                                           "createdAt":  "2020-09-16T15:28:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @safern, @viktorhofer\nSee info in area-owners.md if you want to be subscribed.",
                                           "updatedAt":  "2020-09-16T15:28:47Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5MzQ5MjU5OQ==",
                                           "createdAt":  "2020-09-16T15:44:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "cc: @akoeplinger ",
                                           "updatedAt":  "2020-09-16T15:44:03Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Building subset \"Libs\" does not work when cross compiling with the Android NDK",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "os-android"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/42814",
        "createdAt":  "2020-09-28T15:03:15Z",
        "number":  42814,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-11-14T14:22:28Z",
        "body":  "The `TestRuntime` property determines if code coverage should instrument System.Private.CoreLib. The `TestRuntime` property was added to projects that test code that resides in System.Private.CoreLib. The problem is that this property is static and hasn\u0027t be updated or added to newer projects.\r\n\r\nThis property should be replaced by checking if a ProjectReference to CoreLib exists.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHORvX-Kg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwMDA2NDg2Mw==",
                                           "createdAt":  "2020-09-28T15:03:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @safern, @viktorhofer\nSee info in area-owners.md if you want to be subscribed.",
                                           "updatedAt":  "2020-09-28T15:03:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5G9f4q",
                                           "createdAt":  "2022-07-20T16:58:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "cc @carlossanlop as you might wanna take a look at this after .NET 7.",
                                           "updatedAt":  "2022-07-20T16:58:41Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "TestRuntime property in test projects is static and not up-to-date",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "help wanted"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/42815",
        "createdAt":  "2020-09-28T15:06:24Z",
        "number":  42815,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCZV8-Q==",
                          "nodes":  [
                                        {
                                            "content":  "HEART",
                                            "user":  "vcsjones",
                                            "createdAt":  "2020-09-28T15:39:10Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "danmoseley",
                                            "createdAt":  "2020-10-11T01:44:39Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ManickaP",
                                            "createdAt":  "2022-04-22T15:49:38Z"
                                        }
                                    ],
                          "totalCount":  3
                      },
        "updatedAt":  "2022-07-20T16:54:58Z",
        "body":  "Currently test assemblies that test inbox libraries don\u0027t build the leaf\u0027s source project. We have seen numerous cases where devs are jumping between building the source project and then building and invoking the test project. We should optimize this case by (incrementally) building the source project and its dependencies as well.\r\n\r\nIf developers only interact with a test project and don\u0027t want any incremental build to happen, they can pass `--no-dependencies` onto the CLI.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOKbor8A==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwMDA2NjgwMA==",
                                           "createdAt":  "2020-09-28T15:06:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @safern, @viktorhofer\nSee info in area-owners.md if you want to be subscribed.",
                                           "updatedAt":  "2020-09-28T15:06:27Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Building a test project should also build the leaf\u0027s source project",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "dev-innerloop"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/43335",
        "createdAt":  "2020-10-12T23:07:43Z",
        "number":  43335,
        "author":  "eerhardt",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-01-17T21:31:01Z",
        "body":  "### Repro steps\r\n\r\n* dotnet build .\\src\\libraries\\Microsoft.Extensions.Hosting\\tests\\\r\n* .\\build.cmd -vs .\\src\\libraries\\Microsoft.Extensions.Hosting\\Microsoft.Extensions.Hosting.sln\r\n* Open the Test Explorer window\r\n* Run all tests\r\n\r\n### Expected results\r\n\r\nAll tests should pass clean\r\n\r\n### Actual results\r\n\r\n![image](https://user-images.githubusercontent.com/8291187/95797575-75ce4b80-0cb5-11eb-922d-aedd1c2b41ef.png)\r\n\r\nTests that depend on EventLog fail with:\r\n\r\n```\r\nSystem.PlatformNotSupportedException : EventLog access is not supported on this platform.\r\n\r\n  Stack Trace: \r\n    EventLog.ctor(String logName, String machineName, String source) line 30\r\n    WindowsEventLog.ctor(String logName, String machineName, String sourceName) line 20\r\n    EventLogSettings.CreateDefaultEventLog() line 61\r\n    EventLogSettings.get_EventLog() line 39\r\n    EventLogLogger.ctor(String name, EventLogSettings settings, IExternalScopeProvider externalScopeProvider) line 37\r\n    EventLogLoggerProvider.CreateLogger(String name) line 50\r\n    LoggerInformation.ctor(ILoggerProvider provider, String category) line 72\r\n    LoggerFactory.CreateLoggers(String categoryName) line 199\r\n    LoggerFactory.CreateLogger(String categoryName) line 131\r\n    Logger`1.ctor(ILoggerFactory factory) line 29\r\n```\r\n\r\n### Analysis\r\n\r\nIt appears the Test Explorer window is not respecting the TFMs in Hosting:\r\n\r\nhttps://github.com/dotnet/runtime/blob/671f99b4f00e6c47926b09e3dcf899f154ca5d31/src/libraries/Microsoft.Extensions.Hosting/tests/UnitTests/Microsoft.Extensions.Hosting.Unit.Tests.csproj#L4\r\n\r\nIt should only be running the tests for `$(NetCoreAppCurrent)-Windows_NT`, but it looks like it is running for both `$(NetCoreAppCurrent)-Windows_NT` and `$(NetCoreAppCurrent)`\r\n\r\ncc @ViktorHofer ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOUp3bZQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwNzM4ODk2Mw==",
                                           "createdAt":  "2020-10-12T23:07:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @safern, @viktorhofer\nSee info in area-owners.md if you want to be subscribed.",
                                           "updatedAt":  "2020-10-12T23:07:46Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwNzM5MDI5OA==",
                                           "createdAt":  "2020-10-12T23:12:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "@ViktorHofer ",
                                           "updatedAt":  "2020-10-12T23:12:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyNzU5MTkzNA==",
                                           "createdAt":  "2020-11-15T15:54:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@Anipik, test configurations aren\u0027t filtered in VS.",
                                           "updatedAt":  "2020-11-15T15:54:31Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc4NDIwNjI1OQ==",
                                           "createdAt":  "2021-02-23T13:34:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@Anipik you are assigned to this issue. Can you please take a look?",
                                           "updatedAt":  "2021-02-23T13:34:04Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc4NDcwMTE4NA==",
                                           "createdAt":  "2021-02-24T02:25:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBhPX0w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2021-02-24T17:39:01Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Anipik",
                                           "body":  "\u003e @Anipik you are assigned to this issue. Can you please take a look?\r\n\r\ni will try to take a look at this tomorrow",
                                           "updatedAt":  "2021-02-24T02:25:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5C443j",
                                           "createdAt":  "2022-05-10T10:27:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@carlossanlop @ericstj as you have an offline thread going on with the VS Test Explorer team. Is this related?",
                                           "updatedAt":  "2022-05-10T10:27:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5C61yA",
                                           "createdAt":  "2022-05-10T18:18:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "The internal tracking issue is https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1169002, not sure if @carlossanlop filed another here.  He noticed it initially.",
                                           "updatedAt":  "2022-05-10T18:18:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5DCP6e",
                                           "createdAt":  "2022-05-12T08:06:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Are you certain that this issue is the same as https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1169002? If yes, then we should add the `tracking-external-issue` label so that I can skip it when I do backlog reviews.",
                                           "updatedAt":  "2022-05-12T08:06:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Sndtl",
                                           "createdAt":  "2023-01-17T21:31:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "smaglio81",
                                           "body":  "I\u0027m wondering if this issue might be larger than a VS Test _Explorer_ issue?\r\n\r\n* https://stackoverflow.com/questions/74472659/exception-info-system-platformnotsupportedexception-eventlog-access-is-not-sup",
                                           "updatedAt":  "2023-01-17T21:31:01Z"
                                       }
                                   ],
                         "totalCount":  9
                     },
        "title":  "Extensions.Hosting tests failing in VS Test Explorer",
        "labels":  [
                       "bug",
                       "area-Infrastructure-libraries",
                       "tracking-external-issue",
                       "dev-innerloop"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/43503",
        "createdAt":  "2020-10-16T09:26:12Z",
        "number":  43503,
        "author":  "marek-safar",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-07-12T16:41:54Z",
        "body":  "We should run additional checks to ensure the output we ship is actually valid IL. It can be done as an additional test configuration which would catch any problems in C# compiler or ILLinker which run during libraries build.\r\n\r\nWe could use in-repo available ilverify tool for this and this could also be a good test for the tool itself. Though the tool would need to implement #37391 first.\r\n\r\n@jkotas ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOL7h_Yw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwOTkzNTA0OQ==",
                                           "createdAt":  "2020-10-16T09:26:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @safern, @viktorhofer\nSee info in area-owners.md if you want to be subscribed.",
                                           "updatedAt":  "2020-10-16T09:26:17Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcxMDAxOTQ4OQ==",
                                           "createdAt":  "2020-10-16T12:37:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "stephentoub",
                                           "body":  "Seems like a good idea, to help confirm the quality of the tools we\u0027re using on a large codebase. Related, @jaredpar was also discussing options for compiling dotnet/runtime as part of some CI leg in dotnet/roslyn.",
                                           "updatedAt":  "2020-10-16T12:37:32Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcxMDcwMDA5OQ==",
                                           "createdAt":  "2020-10-16T23:48:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "I agree this is a good idea. We\u0027ve done this in the past, for example when we added nullable annotations, we added some tests to make sure the compiler respected the NullablePublicOnly attribute we add to our assemblies to not preserve nullable metadata on non visible members outside of the assembly. Then, adding that attribute caused a regression in some of our shims and we added a test to make sure our shims only contain typeforwards.\r\n\r\nhttps://github.com/dotnet/runtime/blob/5d702f87681f35cb019560075374346992bbde14/src/libraries/System.Runtime/tests/System/NullableMetadataTests.cs",
                                           "updatedAt":  "2020-10-16T23:48:53Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcxMjM2Nzg2OQ==",
                                           "createdAt":  "2020-10-19T18:40:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jaredpar",
                                           "body":  "\u003e Seems like a good idea, to help confirm the quality of the tools we\u0027re using on a large codebase. \r\n\r\nAgree. The compiler team would love to use `ilverify` in the same way we use `peverify` today. Last time we looked into it though it seemed like there was still significant investment needed before we could use it. Has that changed? \r\n\r\n\u003e Related, @jaredpar was also discussing options for compiling dotnet/runtime as part of some CI leg in dotnet/roslyn.\r\n\r\nMy goal here is to treat `dotnet/runtime` similar to how we treat Visual Studio. Essentially compile it once a day with the latest drop of `dotnet/roslyn`. That has struck a good balance with the Visual Studio repo and think it\u0027s the right spot for `dotnet/runtime` as well. \r\n",
                                           "updatedAt":  "2020-10-19T18:40:47Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcxMjQwMjA5NA==",
                                           "createdAt":  "2020-10-19T19:46:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "CoffeeFlux",
                                           "body":  "When I last checked, ILVerify is still missing support for some newer language features and requires additional investment to be useful. We\u0027d love to have it for usage in Mono as well. cc: @MichalStrehovsky for the specifics",
                                           "updatedAt":  "2020-10-19T19:46:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcxMjc5MDkwNA==",
                                           "createdAt":  "2020-10-20T11:43:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichalStrehovsky",
                                           "body":  "\u003e cc: @MichalStrehovsky for the specifics\r\n\r\nRight, getting the tool running the way we need requires funding. It\u0027s weeks, up to months of work. ILVerify is pretty much a community project. It would need to be brought up to the management same as any other major feature work.\r\n\r\nILVerify benefits a lot from the fact that it\u0027s built on the same tech as crossgen2, but e.g. the default interface methods are not implemented in the shared managed type system. The impact of this missing on crossgen2 hasn\u0027t been significant enough to justify the work (crossgen2 can always just punt to the JIT). There will be bits and pieces like this, on top of adding the actual validation rules that are missing.",
                                           "updatedAt":  "2020-10-20T11:43:19Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgwMDYyMDM4Nw==",
                                           "createdAt":  "2021-03-16T21:32:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rodar21",
                                           "body":  "Here at Synergex, we use peverify on all of our Synergy/DE .Net Compiler tests. We are also Interested in having ILVerify do the same, albeit non verifiable code ( we don\u0027t generate \u0027safe\u0027 verifiable code).  We find that we cant even ILVerify our C# generated runtime ( using code common to .NET framework) so there is a long way to go.",
                                           "updatedAt":  "2021-03-16T21:32:17Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "Verify that output produced by libraries build is valid IL",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/44226",
        "createdAt":  "2020-11-03T22:20:15Z",
        "number":  44226,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-20T16:53:23Z",
        "body":  "https://github.com/dotnet/arcade/blob/b5b61c1f0b76c0789a961039413c2cef98cef234/src/Microsoft.DotNet.XUnitExtensions/src/TestPlatforms.cs#L22\r\n\r\nWe have a lot of tests using `TestPlatforms.AnyUnix`. What should we do about this?\r\n\r\n@akoeplinger @ericstj @stephentoub @safern ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOKwBERw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMTQwNDE4OQ==",
                                           "createdAt":  "2020-11-03T22:20:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Dotnet-GitSync-Bot",
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2020-11-03T22:20:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMTQwNTU3MQ==",
                                           "createdAt":  "2020-11-03T22:23:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "stephentoub",
                                           "body":  "Is this why my `[PlatformSpecific(~TestPlatforms.Browser)]` didn\u0027t actually take effect?  Or if that\u0027s not the issue, what is the issue? :smile:",
                                           "updatedAt":  "2020-11-03T22:24:42Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMTQwODU4Mg==",
                                           "createdAt":  "2020-11-03T22:32:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "I\u0027m not sure if that\u0027s related, just something that I wanted to have logged to discuss.\r\n\r\n\u003e Or if that\u0027s not the issue, what is the issue? 😄\r\n\r\nDon\u0027t know yet. Will let @safern take a closer look.",
                                           "updatedAt":  "2020-11-03T22:32:16Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMTQxMTI2Mw==",
                                           "createdAt":  "2020-11-03T22:39:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "We\u0027ve been using `[PlatformSpecific(TestPlatforms.AnyUnix \u0026 ~TestPlatforms.Browser)]` in other places to disable a test on Browser when using PlatformSpecific.\r\n\r\nI agree that ideally AnyUnix shouldn\u0027t include Browser, we\u0027ve discussed that elsewhere in the past.",
                                           "updatedAt":  "2020-11-03T22:39:42Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMTQxMjM4NA==",
                                           "createdAt":  "2020-11-03T22:42:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "so here\u0027s your answer @stephentoub :)",
                                           "updatedAt":  "2020-11-03T22:42:47Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMTQxMzIwNQ==",
                                           "createdAt":  "2020-11-03T22:44:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "stephentoub",
                                           "body":  "\u003e so here\u0027s your answer\r\n\r\nIt is?",
                                           "updatedAt":  "2020-11-03T22:44:54Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMTQxNDMzMw==",
                                           "createdAt":  "2020-11-03T22:48:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e We\u0027ve been using [PlatformSpecific(TestPlatforms.AnyUnix \u0026 ~TestPlatforms.Browser)] in other places to disable a test on Browser when using PlatformSpecific.\r\n\r\nI interpret this as Alex and colleagues know about Browser not being excluded unless `TestPlatforms.AnyUnix \u0026 ~TestPlatforms.Browser` is specified when using the `PlatformSpecificAttribute`.",
                                           "updatedAt":  "2020-11-03T22:48:13Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMTQxNDgwOA==",
                                           "createdAt":  "2020-11-03T22:49:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "stephentoub",
                                           "body":  "I was doing `[PlatformSpecific(~TestPlatforms.Browser)]`, which would include Windows.  `[PlatformSpecific(TestPlatforms.AnyUnix \u0026 ~TestPlatforms.Browser)]` is just saying also don\u0027t run on Windows.",
                                           "updatedAt":  "2020-11-03T22:49:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMTQyMTEwMQ==",
                                           "createdAt":  "2020-11-03T23:07:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "Ah yeah that should still work of course, otherwise this would be broken already: https://github.com/dotnet/runtime/blob/6072e4d3a7a2a1493f514cdf4be75a3d56580e84/src/libraries/System.Console/tests/Color.cs#L15 😄 ",
                                           "updatedAt":  "2020-11-03T23:07:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMTQzNjQyMQ==",
                                           "createdAt":  "2020-11-03T23:56:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "@akoeplinger -- it seems like it was intentionally added: https://github.com/dotnet/arcade/blob/b5b61c1f0b76c0789a961039413c2cef98cef234/src/Microsoft.DotNet.XUnitExtensions/src/TestPlatforms.cs#L22\r\n\r\nhttps://github.com/dotnet/arcade/commit/e91c8d04275eab1cc57ee8f8a7db530c99429d2d\r\n\r\nbut it seems like an oversight when adding it as it just included all platforms that were added on that commit.",
                                           "updatedAt":  "2020-11-03T23:56:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMTQzNjgyMw==",
                                           "createdAt":  "2020-11-03T23:57:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Earlier in net5 Browser derived from Unix which is why this made sense.",
                                           "updatedAt":  "2020-11-03T23:57:40Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMTQzNzUxNQ==",
                                           "createdAt":  "2020-11-04T00:00:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "\u003e Earlier in net5 Browser derived from Unix which is why this made sense.\r\n\r\nRight, which was a bad assumption to begin with. I might have time to tackle this one... assigning myself and in the case I can\u0027t I\u0027ll ping the issue. ",
                                           "updatedAt":  "2020-11-04T00:00:15Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMTQzNzU4OA==",
                                           "createdAt":  "2020-11-04T00:00:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @ViktorHofer\nSee info in area-owners.md if you want to be subscribed.",
                                           "updatedAt":  "2020-11-04T00:00:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMTQzNzY0MA==",
                                           "createdAt":  "2020-11-04T00:00:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @safern, @viktorhofer\nSee info in area-owners.md if you want to be subscribed.",
                                           "updatedAt":  "2020-11-04T00:00:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMTQzNzc2Nw==",
                                           "createdAt":  "2020-11-04T00:01:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Thanks 👍",
                                           "updatedAt":  "2020-11-04T00:01:08Z"
                                       }
                                   ],
                         "totalCount":  15
                     },
        "title":  "TestPlatforms.AnyUnix includes Browser",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "help wanted"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/44257",
        "createdAt":  "2020-11-04T20:11:52Z",
        "number":  44257,
        "author":  "Anipik",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBVxF3w==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ViktorHofer",
                                            "createdAt":  "2020-11-04T20:20:12Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "safern",
                                            "createdAt":  "2020-11-05T02:06:24Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2024-07-22T12:04:55Z",
        "body":  "We are no longer removing the platform from the targetFrameworkString for net5.0 and above, this results in sdk adding \r\n```SupportedOSPlatformAttribute``` \u0026 ```TargetPlatformAttribute``` to the assemblyInfo file.  This conflicts with the attributes that we are adding on the api level.\r\n\r\nWe should define a repo wide policy going forward. \r\n\r\nThere is currently no flag in the sdk to disable writing this attribute while writing this assembly level attriibute. asking sdk team to provide a flag will also be helpful here.\r\n\r\ncc @ViktorHofer @ericstj @buyaa-n @safern ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONTrMjg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMTk1MDAxMg==",
                                           "createdAt":  "2020-11-04T20:11:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Dotnet-GitSync-Bot",
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2020-11-04T20:11:59Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMTk1NDQyNw==",
                                           "createdAt":  "2020-11-04T20:21:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e We should define a repo wide policy going forward.\r\n\r\nDoes this even matter outside of libraries?",
                                           "updatedAt":  "2020-11-04T20:21:08Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyMTk1NDUyNg==",
                                           "createdAt":  "2020-11-04T20:21:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @safern, @viktorhofer\nSee info in area-owners.md if you want to be subscribed.",
                                           "updatedAt":  "2020-11-04T20:21:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyNTY1NzUyNA==",
                                           "createdAt":  "2020-11-11T20:57:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@buyaa-n @jeffhandley what are your thoughts on this? The SDK by default adds the in the top post mentioned attributes. Is there a reason to not have them? Presumably the `TargetPlatformAttribute` is less of a concern?",
                                           "updatedAt":  "2020-11-11T20:58:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyNTcxNjYwNA==",
                                           "createdAt":  "2020-11-11T23:21:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Another thought, are we concerned about the assembly metadata difference: `SupportedOSPlatform` (dotnet/runtime specific and already shipped with 5.0) vs `SupportedOSPlatformAttribute` (sdk style)?",
                                           "updatedAt":  "2020-11-11T23:22:11Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDczMDY4NzgxNw==",
                                           "createdAt":  "2020-11-19T22:55:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "buyaa-n",
                                           "body":  "\u003e  The SDK by default adds the in the top post mentioned attributes. Is there a reason to not have them? \r\n\r\nThe reason for not having them is false positives mentioned in [this issue](https://github.com/dotnet/runtime/issues/44231), I have no good way (non-hack like) of handling those, the question if it could happen outside of runtime, if not i thinke its just better to keep disabling the sdk logic cc @terrajobst \r\n\r\n\u003e  Presumably the TargetPlatformAttribute is less of a concern?\r\n\r\nI don\u0027t think there is a concern, the analyzer not using that attribute at all",
                                           "updatedAt":  "2020-11-19T22:55:58Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDczNTk2OTQyMg==",
                                           "createdAt":  "2020-11-30T18:43:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBYY-iA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2020-11-30T19:01:48Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "buyaa-n",
                                           "body":  "I think we should reenable SupportedOSPlatformAttribute attributes added by sdk, most of the warning are found in Browser build which i think is the only target we should disable/remove adding the attribute. The details how to handle the warnings introduced are [commented here](https://github.com/dotnet/runtime/issues/44231#issuecomment-735356976). By enabling the sdk attribute back \r\n\r\n- We will have the attribute for windows build from sdk, which we added to suppress warnings on windows build https://github.com/dotnet/runtime/blob/059e6bb3d476bccb6034b2bd89fdfca592195a9a/eng/versioning.targets#L26-L29\r\n- We will have the attribute for other build targets like linux, ios etc. For now we have no any APIs attributed with those platforms but they are [coming soon](https://github.com/dotnet/runtime/issues/45193), so having corresponding attributes added by MSBuild would help with seeing warning for existing platform inconsistency and suppress warnings for proper usage of platform specific APIs in runtime repo \r\n",
                                           "updatedAt":  "2020-11-30T18:49:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1NjQxNTI0Mg==",
                                           "createdAt":  "2021-01-07T22:03:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "buyaa-n",
                                           "body":  "@ViktorHofer @Anipik I see the TFM targets platforms other than `windows` is not really working, for non-runtime env, for example with simple console app i cannot use `Browser or ios or Linux, Android` platforms as a target. The error message: `C:\\Program Files\\dotnet\\sdk\\5.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.TargetFrameworkInference.targets(109,5): error NETSDK1139: The target platform identifier iOS was not recognized.` How/why it is able to work in runtime?",
                                           "updatedAt":  "2021-01-07T22:03:13Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1NjQ1NjA5Ng==",
                                           "createdAt":  "2021-01-07T23:49:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "buyaa-n",
                                           "body":  "Never mind i see the new identifiers added here https://github.com/dotnet/runtime/blob/805e288baff174a3d8cdd4bf4c7f1bc9985f4767/eng/targetframeworksuffix.props#L8-L12",
                                           "updatedAt":  "2021-01-08T18:00:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41OsLG",
                                           "createdAt":  "2021-08-04T23:32:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Anipik",
                                           "body":  "@buyaa-n  is this still an issue ?",
                                           "updatedAt":  "2021-08-04T23:32:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41OsyO",
                                           "createdAt":  "2021-08-04T23:38:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB1JwHw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Anipik",
                                                                               "createdAt":  "2021-08-04T23:44:55Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "buyaa-n",
                                           "body":  "There is nothing more left until https://github.com/dotnet/sdk/issues/14836 implemented and using that feature for disabling TFM attribute in test projects",
                                           "updatedAt":  "2021-08-04T23:38:30Z"
                                       }
                                   ],
                         "totalCount":  11
                     },
        "title":  "Use Sdks assembly Level Attributes for supported and unsupported platforms.",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/47424",
        "createdAt":  "2021-01-25T19:39:25Z",
        "number":  47424,
        "author":  "ericstj",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBdn6-A==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ViktorHofer",
                                            "createdAt":  "2021-01-25T20:08:16Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2022-05-10T10:34:35Z",
        "body":  "Copying from https://github.com/dotnet/runtime/issues/45665\r\n\r\nThe suggestion was made to run the ILLinker to trim dead code from all libraries, not just those libraries that make up the shared framework.  Here\u0027s an excerpt of the discussion.\r\n\r\n\u003e It was a scoping decision back when we first added it. Folks weren\u0027t willing to test the output of things that weren\u0027t going in the shared framework (eg: UAP assemblies, packages that would be used by desktop, etc) so we constrained it to only the shared framework. Folks were confident that we had better test coverage of the shared framework since that\u0027s what we were shipping at the time. We could broaden that scope but we\u0027d probably want to make sure such a change had decent test coverage + auditing of the new assemblies it touched across all their supported frameworks.\r\n\r\nThis still applies, we don\u0027t test all package configurations.  I think the linker is much more stable now and we could enable it.  I think when doing so we\u0027d want to audit what it does to non-tested configurations.  That could be done with Assembly diffing.  If the changes the linker made matched those made to the netcoreapp build we could be reasonably confident that the netcoreapp build would remain a good proxy for the downlevel builds.  If we noticed any significant differences we could do targeted testing / investigation to ensure we have correct linker configurations for those configurations.  This will also enable the linker on completely OOB assemblies where it never ran before (CodeDom, System.Management, MEF, etc) and where we haven\u0027t invested in test coverage.  We\u0027d want to do some manual diffing of these to validate that removals are safe, potentially adding test coverage to touch impacted codepaths.\r\n\r\nDo folks think this effort is worth the cost?",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOMgF0Gw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NzA2NTE1Ng==",
                                           "createdAt":  "2021-01-25T19:39:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @safern, @viktorhofer\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nCopying from https://github.com/dotnet/runtime/issues/45665\r\n\r\nThe suggestion was made to run the ILLinker to trim dead code from all libraries, not just those libraries that make up the shared framework.  Here\u0027s an excerpt of the discussion.\r\n\r\n\u003e It was a scoping decision back when we first added it. Folks weren\u0027t willing to test the output of things that weren\u0027t going in the shared framework (eg: UAP assemblies, packages that would be used by desktop, etc) so we constrained it to only the shared framework. Folks were confident that we had better test coverage of the shared framework since that\u0027s what we were shipping at the time. We could broaden that scope but we\u0027d probably want to make sure such a change had decent test coverage + auditing of the new assemblies it touched across all their supported frameworks.\r\n\r\nThis still applies, we don\u0027t test all package configurations.  I think the linker is much more stable now and we could enable it.  I think when doing so we\u0027d want to audit what it does to non-tested configurations.  That could be done with Assembly diffing.  If the changes the linker made matched those made to the netcoreapp build we could be reasonably confident that the netcoreapp build would remain a good proxy for the downlevel builds.  If we noticed any significant differences we could do targeted testing / investigation to ensure we have correct linker configurations for those configurations.  This will also enable the linker on completely OOB assemblies where it never ran before (CodeDom, System.Management, MEF, etc) and where we haven\u0027t invested in test coverage.  We\u0027d want to do some manual diffing of these to validate that removals are safe, potentially adding test coverage to touch impacted codepaths.\r\n\r\nDo folks think this effort is worth the cost?\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eericstj\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-01-25T19:39:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NzA2OTg5Mg==",
                                           "createdAt":  "2021-01-25T19:47:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "One thought that I have in this area is: If we think it is valuable for our libraries outside of the shared framework, it is also valuable to libraries outside of `dotnet/runtime`. Which, to me, sounds like it should be a feature in the official product.\r\n\r\ncc @sbomer @vitek-karas ",
                                           "updatedAt":  "2021-01-25T19:47:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NzA4MTczMg==",
                                           "createdAt":  "2021-01-25T20:08:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "cc @stephentoub as he was the one who asked the question of why we don\u0027t run ILLink on all tfms.",
                                           "updatedAt":  "2021-01-25T20:08:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NzA4NDIzMA==",
                                           "createdAt":  "2021-01-25T20:13:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "\u003e sounds like it should be a feature in the official product.\r\n\r\nTechnically I think you could set up something similar using the real product.  I think the question of productizing dead-code trimming is a different issue and I\u0027d not like to fork this issue to have that discussion.  @eerhardt if you\u0027d like to make such a request please file a different issue.\r\n\r\nLets leave this issue to address the question of enabling dead-code trimming on all the libs produced by dotnet/runtime.",
                                           "updatedAt":  "2021-01-25T20:13:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NzE1Nzc0NA==",
                                           "createdAt":  "2021-01-25T22:34:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "stephentoub",
                                           "body":  "\u003e Do folks think this effort is worth the cost?\r\n\r\nI think it\u0027d be worthwhile to do so, even if it\u0027s piecemeal.  For example, some of the assemblies ship as part of Microsoft.AspNetCore.App, and would contribute similar benefits to why we trim for Microsoft.NETCore.App.  For pure OOBs, I also think there\u0027s a reasonable benefit, even if smaller.",
                                           "updatedAt":  "2021-01-25T22:34:26Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NzE2MDYwNg==",
                                           "createdAt":  "2021-01-25T22:41:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "Projects can opt-in today piecemeal by setting ILLinkTrimAssembly = true.\r\n\r\nIn addition to that libraries can enable assembly diffing to see what it does:\r\nhttps://github.com/dotnet/runtime/blob/220bf9714248cca8ef18cb4175ae83b1cf210a70/eng/illink.targets#L335-L338\r\n\r\nWe have a public AsmDiff now.  It\u0027d be nice to clean that up and make it easier, cc @Anipik ",
                                           "updatedAt":  "2021-01-25T22:41:40Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NzE2MjA2MQ==",
                                           "createdAt":  "2021-01-25T22:45:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "stephentoub",
                                           "body":  "\u003e Projects can opt-in today piecemeal by setting ILLinkTrimAssembly = true.\r\n\r\nThen maybe that\u0027s how we start.  Ala nullable where we incrementally added `#nullable enable` and then deleted them all when we were able to flip the whole assembly, we could go assembly by assembly turning it on and validating the diff is expected and things work correctly, and then flip it for the whole repo if/when we get there.  We could start with the Microsoft.Extensions.* assemblies and others that ship in the ASP.NET shared framework.",
                                           "updatedAt":  "2021-01-25T22:45:14Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NzE2NTk3NA==",
                                           "createdAt":  "2021-01-25T22:55:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "Yeah, I\u0027d want to provide the tooling for folks to do this safely though.  I\u0027d like to get that diffing in place before opening this up for folks to do it blind. ",
                                           "updatedAt":  "2021-01-25T22:55:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NzE3ODQyNg==",
                                           "createdAt":  "2021-01-25T23:27:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027linkable-framework\u0027: @eerhardt, @vitek-karas, @LakshanF, @tannergooding\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nCopying from https://github.com/dotnet/runtime/issues/45665\r\n\r\nThe suggestion was made to run the ILLinker to trim dead code from all libraries, not just those libraries that make up the shared framework.  Here\u0027s an excerpt of the discussion.\r\n\r\n\u003e It was a scoping decision back when we first added it. Folks weren\u0027t willing to test the output of things that weren\u0027t going in the shared framework (eg: UAP assemblies, packages that would be used by desktop, etc) so we constrained it to only the shared framework. Folks were confident that we had better test coverage of the shared framework since that\u0027s what we were shipping at the time. We could broaden that scope but we\u0027d probably want to make sure such a change had decent test coverage + auditing of the new assemblies it touched across all their supported frameworks.\r\n\r\nThis still applies, we don\u0027t test all package configurations.  I think the linker is much more stable now and we could enable it.  I think when doing so we\u0027d want to audit what it does to non-tested configurations.  That could be done with Assembly diffing.  If the changes the linker made matched those made to the netcoreapp build we could be reasonably confident that the netcoreapp build would remain a good proxy for the downlevel builds.  If we noticed any significant differences we could do targeted testing / investigation to ensure we have correct linker configurations for those configurations.  This will also enable the linker on completely OOB assemblies where it never ran before (CodeDom, System.Management, MEF, etc) and where we haven\u0027t invested in test coverage.  We\u0027d want to do some manual diffing of these to validate that removals are safe, potentially adding test coverage to touch impacted codepaths.\r\n\r\nDo folks think this effort is worth the cost?\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eericstj\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`Discussion`, `area-Infrastructure-libraries`, `linkable-framework`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e6.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-01-25T23:27:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NzE4OTg5Mw==",
                                           "createdAt":  "2021-01-25T23:59:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBdpmIw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ericstj",
                                                                               "createdAt":  "2021-01-26T00:42:49Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "Are we sure we need to address this in 6.0? I see it is in the 6.0 milestone.\r\n\r\nI can\u0027t see prioritizing this work higher than a \"P2\" at this point, as it doesn\u0027t affect any of the scenarios we are targeting for the trimming effort (WASM and Xamarin).",
                                           "updatedAt":  "2021-01-25T23:59:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzODk1NjA1OQ==",
                                           "createdAt":  "2021-05-11T18:26:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "Moving to \u0027Future\u0027 as this isn\u0027t high priority to get into 6.0.",
                                           "updatedAt":  "2021-05-11T18:26:13Z"
                                       }
                                   ],
                         "totalCount":  11
                     },
        "title":  "Enable ILLink for all library configurations",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "help wanted",
                       "discussion",
                       "linkable-framework"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/49124",
        "createdAt":  "2021-02-19T11:28:02Z",
        "number":  49124,
        "author":  "marek-safar",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-20T16:53:07Z",
        "body":  "The runtime pack SDKs authors will be the first non-runtime users with who we could work to enable linker trimming analysis warning. We should make it easy for them to enable it in their builds and not require copying pieces from https://github.com/dotnet/runtime/blob/master/src/libraries/illink-sharedframework.targets to figure out how to use linker in their runtime pack builds.\r\n\r\nThis would be best to behave this available as part of Arcade target.\r\n\r\n@agocke @sbomer @vitek-karas  ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHORh8wDA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc4MjAxNjIxMA==",
                                           "createdAt":  "2021-02-19T11:28:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one area label.",
                                           "updatedAt":  "2021-02-19T11:28:05Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5MDUyMjIzNw==",
                                           "createdAt":  "2021-03-04T10:49:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-03-04T10:49:36Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5MDUyMjMxMg==",
                                           "createdAt":  "2021-03-04T10:49:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @safern, @viktorhofer, @anipik\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThe runtime pack SDKs authors will be the first non-runtime users with who we could work to enable linker trimming analysis warning. We should make it easy for them to enable it in their builds and not require copying pieces from https://github.com/dotnet/runtime/blob/master/src/libraries/illink-sharedframework.targets to figure out how to use linker in their runtime pack builds.\r\n\r\nThis would be best to behave this available as part of Arcade target.\r\n\r\n@agocke @sbomer @vitek-karas  \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003emarek-safar\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-03-04T10:49:44Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5MDY4MTM1Mw==",
                                           "createdAt":  "2021-03-04T15:02:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e The runtime pack SDKs authors\r\n\r\nCurious, who are runtime pack SDK authors? How would they build targeting and runtime packs? Via the Shared Framework SDK which lives in Arcade?",
                                           "updatedAt":  "2021-03-04T15:02:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5MDY5NDI5Ng==",
                                           "createdAt":  "2021-03-04T15:19:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vitek-karas",
                                           "body":  "\u003e Curious, who are runtime pack SDK authors? \r\n\r\nXamarin, Blazor, ...",
                                           "updatedAt":  "2021-03-04T15:19:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5MDcwMDA2OA==",
                                           "createdAt":  "2021-03-04T15:27:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "marek-safar",
                                           "body":  "\u003e How would they build targeting and runtime packs\r\n\r\nThey are already building them and have already or could have access to Arcade",
                                           "updatedAt":  "2021-03-04T15:27:44Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5MDcwMjYzOQ==",
                                           "createdAt":  "2021-03-04T15:31:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e They are already building them\r\n\r\nIMHO every shared framework SDK author should use https://github.com/dotnet/arcade/tree/master/src/Microsoft.DotNet.SharedFramework.Sdk. That\u0027s the tooling that implements the shared framework contract (ie PlatformManifest, FrameworkList, etc). Curious, can you please let us know who are the teams (and people that we can talk to) that already build custom shared frameworks to make sure that they use the common tooling?\r\n\r\nImplementing trimming on top of the shared framework SDK should be relatively easy.",
                                           "updatedAt":  "2021-03-04T15:32:03Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5MDc5OTYwNQ==",
                                           "createdAt":  "2021-03-04T17:40:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "marek-safar",
                                           "body":  "\u003ecan you please let us know who are the teams\r\n\r\n@ViktorHofer for the main shared framework with trimming support now use the following contacts\r\n\r\n- aspnetcore/blazor @pranavkm \r\n- apple - @rolfbjarne \r\n- android - @pjcollins ",
                                           "updatedAt":  "2021-03-04T17:40:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5MDgwNDMxOA==",
                                           "createdAt":  "2021-03-04T17:47:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Thanks Marek. I will start an offline discussion to make sure that people are aware of the Shared Framework SDK that lives in arcade.",
                                           "updatedAt":  "2021-03-04T17:47:47Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgwNjAzMjk0OQ==",
                                           "createdAt":  "2021-03-24T17:49:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Based on the discussion I believe what this issue tracks is:\r\n1. Add linking feature to the shared framework\r\n2. Add linking analyzer feature to the shared framework\r\n\r\nDoes that make sense?",
                                           "updatedAt":  "2021-03-24T17:49:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgwNjA3MzAyNA==",
                                           "createdAt":  "2021-03-24T18:51:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "marek-safar",
                                           "body":  "@ViktorHofer I don\u0027t know if we want to add them to shared framework, it should probably go to the arcade as we already ship the tooling with SDK.",
                                           "updatedAt":  "2021-03-24T18:51:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GHzAM",
                                           "createdAt":  "2022-07-06T16:48:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "carlossanlop",
                                           "body":  "@marek-safar should we move this to 8.0?",
                                           "updatedAt":  "2022-07-06T16:48:42Z"
                                       }
                                   ],
                         "totalCount":  12
                     },
        "title":  "Make it easy for runtime pack authors to enable linker trimming analyzer",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/48655",
        "createdAt":  "2021-02-23T17:19:18Z",
        "number":  48655,
        "author":  "marek-safar",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-03-24T17:32:13Z",
        "body":  "The runtime packs build as part of libraries build don\u0027t use output produced by ILLinker even if it\u0027s run during the build. The ILLink produces fully trimmed runtime packs into `/artifacts/bin/ILLinkTrimAssembly/{version}/trimmed-runtimepack/`. This is not optimal for few reasons\r\n\r\n- They are bigger than they need to be (although they diff is small)\r\n- They ship with additional unneeded dependencies which makes it harder to work with in some scenarios (e.g. AOT)\r\n- They don\u0027t match the shared framework build which AFAIK ships trimmed libraries\r\n\r\n@ViktorHofer @eerhardt \r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOLsNB_g==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc4NDM2NDM2Mg==",
                                           "createdAt":  "2021-02-23T17:19:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-02-23T17:19:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc4NDM2NDQ1NA==",
                                           "createdAt":  "2021-02-23T17:19:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @safern, @viktorhofer\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThe runtime packs build as part of libraries build don\u0027t use output produced by ILLinker even if it\u0027s run during the build. The ILLink produces fully trimmed runtime packs into `/artifacts/bin/ILLinkTrimAssembly/{version}/trimmed-runtimepack/`. This is not optimal for few reasons\r\n\r\n- They are bigger than they need to be (although they diff is small)\r\n- They ship with additional unneeded dependencies which makes it harder to work with in some scenarios (e.g. AOT)\r\n- They don\u0027t match the shared framework build which AFAIK ships trimmed libraries\r\n\r\n@ViktorHofer @eerhardt \r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003emarek-safar\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-02-23T17:19:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc4NDM3MTEwMQ==",
                                           "createdAt":  "2021-02-23T17:29:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e They don\u0027t match the shared framework build which AFAIK ships trimmed libraries\r\n\r\nI don\u0027t know about if the shared framework packages contain trimmed or untrimmed assets but we don\u0027t even test on crossgend bits today in libraries. The required work to fix the overall issue is to depend on the Microsoft.NETCore.App bundle that lives in the installer partition instead of depending on the fake shared framework that we currently generated in libraries.\r\n\r\n That will make sure that we test with the \"exact\" same bits that flow into dotnet/sdk.",
                                           "updatedAt":  "2021-02-23T17:29:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc4NDM3MTIzMA==",
                                           "createdAt":  "2021-02-23T17:29:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "cc @jkoritzinsky @jkotas",
                                           "updatedAt":  "2021-02-23T17:29:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc4NDM3NDc0Mw==",
                                           "createdAt":  "2021-02-23T17:34:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "Isn\u0027t this the same discussion that was rejected in https://github.com/dotnet/runtime/issues/31712?\r\n\r\nThe libraries in the runtime packs get ILLink run on them in isolation as part of their build and that output is placed in the runtimepack. We discard the output of ILLink that sees the complete shared framework because of the reasons outlined in https://github.com/dotnet/runtime/issues/31712#issuecomment-581930749 - the effect this has on the inner dev loop.\r\n\r\ncc @stephentoub ",
                                           "updatedAt":  "2021-02-23T17:34:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc4NDM3OTg0Nw==",
                                           "createdAt":  "2021-02-23T17:42:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "This was also discussed in https://github.com/dotnet/runtime/issues/487. As @ViktorHofer said, the libraries tests do not run against shipping bits today that is a glaring test hole.\r\n\r\nThe inner dev loop can continue to use non-trimmed non-crossgened bits like it does today. https://github.com/dotnet/runtime/issues/31712#issuecomment-616844904 . I understand that there are concerns some types of failures may not get detected in the inner dev loop if we do this; but I do not see any other better solution to fix the test hole.",
                                           "updatedAt":  "2021-02-23T17:42:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc4NDUyNTY3MA==",
                                           "createdAt":  "2021-02-23T21:29:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBhHgCw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkotas",
                                                                               "createdAt":  "2021-02-23T23:51:29Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "marek-safar",
                                           "body":  "\u003e We discard the output of ILLink that sees the complete shared framework \r\n\r\nIsn\u0027t that quite wasteful? We run the whole trimming process on runtime pack and generate 160 libraries for 40 or so runtime packs to achieve what exactly?\r\n\r\nDoes this also mean we cannot use linker in libraries build to produce platform or architecture-specific assemblies?",
                                           "updatedAt":  "2021-02-23T21:29:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc4NDU0ODM1MA==",
                                           "createdAt":  "2021-02-23T22:09:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "\u003e We run the whole trimming process on runtime pack and generate 160 libraries for 40 or so runtime packs to achieve what exactly?\r\n\r\nWe get the ILLink warnings from it and baseline the existing warnings. See https://github.com/dotnet/runtime/issues/38033.\r\n\r\nWe are then burning down the warnings in https://github.com/dotnet/runtime/issues/45623.\r\n\r\n\u003e Does this also mean we cannot use linker in libraries build to produce platform or architecture-specific assemblies?\r\n\r\nFor the libraries outside of System.Private.CoreLib, this is correct. That was also discussed in #31712.",
                                           "updatedAt":  "2021-02-23T22:09:17Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "Runtime packs don\u0027t use trimmed binaries",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/51120",
        "createdAt":  "2021-04-12T15:14:56Z",
        "number":  51120,
        "author":  "antonfirsov",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-04-21T16:33:49Z",
        "body":  "Currently there is no CI guarantee to make sure these projects are not broken. PR #49706 fixed such a regression, but in a few weeks the build got broken again (#51117) with a reason that is far from being obvious.\r\n\r\nWe should consider running build-only variants of [`stress/http.yml`](https://github.com/dotnet/runtime/blob/main/eng/pipelines/libraries/stress/http.yml), [`stress/ssl.yml`](https://github.com/dotnet/runtime/blob/main/eng/pipelines/libraries/stress/ssl.yml) and [`enterprise/linux.yml`](https://github.com/dotnet/runtime/blob/main/eng/pipelines/libraries/enterprise/linux.yml) as a mandatory PR checks.\r\n\r\nThe lack of such an automation makes it really hard to keep these projects functional while the underlying infrastructure is being refactored.\r\n\r\ncc @ViktorHofer \r\n\r\n\r\n**Edit 1:** An alternative could be an agreement to run those pipelines on infrastructure changes.\r\n**Edit 2:** The root cause of #51117 was a library bug (#51141) breaking the SDK, meaning that guarding the infra changes only might be insufficient, but this looks like an exceptional case.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOMSBGsg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgxNzg5NjI2NQ==",
                                           "createdAt":  "2021-04-12T15:14:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-04-12T15:14:58Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgxNzg5NjUwOQ==",
                                           "createdAt":  "2021-04-12T15:15:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @Anipik, @safern, @ViktorHofer\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nCurrently there is no CI guarantee to make sure these projects are not broken. PR #49706 fixed such a regression, but in a few weeks the build got broken again (#51117) with a reason that is far from being obvious.\r\n\r\nWe should consider running build-only variants of [`stress/http.yml`](https://github.com/dotnet/runtime/blob/main/eng/pipelines/libraries/stress/http.yml), [`stress/ssl.yml`](https://github.com/dotnet/runtime/blob/main/eng/pipelines/libraries/stress/ssl.yml) and [`enterprise/linux.yml`](https://github.com/dotnet/runtime/blob/main/eng/pipelines/libraries/enterprise/linux.yml) as a mandatory PR checks.\r\n\r\nThe lack of such an automation makes it really hard to keep these projects functional while the underlying infrastructure is being refactored.\r\n\r\ncc @ViktorHofer \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eantonfirsov\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-04-12T15:15:17Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgyNDE5ODgzNA==",
                                           "createdAt":  "2021-04-21T16:33:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Some thoughts we just had during triaging:\r\n- We need to keep resources in mind (these are limited)\r\n- We don\u0027t want to run the tests on every CI, but just build the tests\r\n- Added complexity of docker containers?\r\n\r\nFeel free to submit a PR to add the leg to build as part of CI. Will move this to future meanwhile.",
                                           "updatedAt":  "2021-04-21T16:33:40Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Consider adding the build of NCL stress and enterprise tests to the mandatory legs of the CI",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/52493",
        "createdAt":  "2021-05-08T02:26:07Z",
        "number":  52493,
        "author":  "srxqds",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-07-12T16:51:45Z",
        "body":  "hi, https://github.com/dotnet/runtime/blob/main/docs/workflow/testing/libraries/testing-android.md https://github.com/dotnet/runtime/blob/main/docs/workflow/testing/libraries/testing-apple.md \r\nthese two docs said the AOT and Interpreter modes are not supported yet on android, Interpreter is not enabled yet on iOS.\r\n\r\ndo these limitations exist now, any thing should be updated?\r\n ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOYVPXSg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzNDk3NzU0MA==",
                                           "createdAt":  "2021-05-08T02:26:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @Anipik, @safern, @ViktorHofer\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nhi, https://github.com/dotnet/runtime/blob/main/docs/workflow/testing/libraries/testing-android.md https://github.com/dotnet/runtime/blob/main/docs/workflow/testing/libraries/testing-apple.md \r\nthese two docs said the AOT and Interpreter modes are not supported yet on android, Interpreter is not enabled yet on iOS.\r\n\r\ndo these limitations exist now, any thing should be updated?\r\n \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003esrxqds\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-05-08T02:26:11Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzNTA1MzcxNg==",
                                           "createdAt":  "2021-05-08T03:41:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "cc: @steveisok @akoeplinger ",
                                           "updatedAt":  "2021-05-08T03:41:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzNTA1NTM2Nw==",
                                           "createdAt":  "2021-05-08T03:43:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "Yes, we should definitely give them an update ",
                                           "updatedAt":  "2021-05-08T03:43:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hU4n2",
                                           "createdAt":  "2023-07-12T16:36:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@steveisok would you know if the docs still need an update?",
                                           "updatedAt":  "2023-07-12T16:36:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hU9dK",
                                           "createdAt":  "2023-07-12T16:51:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "Yes, they do need a more substantial update.",
                                           "updatedAt":  "2023-07-12T16:51:45Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "android/iOS doc should be updated?",
        "labels":  [
                       "documentation",
                       "area-Infrastructure-libraries",
                       "os-android",
                       "os-ios"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/52562",
        "createdAt":  "2021-05-10T20:18:17Z",
        "number":  52562,
        "author":  "ericstj",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOB1ch4Q==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ViktorHofer",
                                            "createdAt":  "2021-08-06T18:43:12Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2023-07-05T16:43:31Z",
        "body":  "Today we publish a shared framework package for ASP.NET and include an arbitrary set of files: https://github.com/dotnet/runtime/blob/4e2e990229f27b4200249f08e6789f1fe3dbd54c/src/libraries/Microsoft.AspNetCore.Internal.Transport/pkg/Microsoft.AspNetCore.Internal.Transport.pkgproj#L12-L13\r\n\r\nNothing guarantees that we aren\u0027t omitting dependencies here, and that isn\u0027t validated until the transport package reaches ASP.NET.\r\n\r\nWe do validate dependencies for our own shared framework:\r\nhttps://github.com/dotnet/arcade/blob/44324e2d3563921f60b1522fccf3fef45dcfe636/src/Microsoft.DotNet.SharedFramework.Sdk/targets/sharedfx.targets#L437-L464\r\n\r\nWe could do this for the ASP.NET transport package as well, ensuring we pass the files that are part of the base shared framework as candidates.  We could do the same for a WindowsDesktop transport package, should we produce one in the future.\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOOLr1-w==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzNzI3MjAyMQ==",
                                           "createdAt":  "2021-05-10T20:18:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-05-10T20:18:19Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzNzI3Mjg1Mw==",
                                           "createdAt":  "2021-05-10T20:18:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @Anipik, @safern, @ViktorHofer\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nToday we publish a shared framework package for ASP.NET and include an arbitrary set of files: https://github.com/dotnet/runtime/blob/4e2e990229f27b4200249f08e6789f1fe3dbd54c/src/libraries/Microsoft.AspNetCore.Internal.Transport/pkg/Microsoft.AspNetCore.Internal.Transport.pkgproj#L12-L13\r\n\r\nNothing guarantees that we aren\u0027t omitting dependencies here, and that isn\u0027t validated until the transport package reaches ASP.NET.\r\n\r\nWe do validate dependencies for our own shared framework:\r\nhttps://github.com/dotnet/arcade/blob/44324e2d3563921f60b1522fccf3fef45dcfe636/src/Microsoft.DotNet.SharedFramework.Sdk/targets/sharedfx.targets#L437-L464\r\n\r\nWe could do this for the ASP.NET transport package as well, ensuring we pass the files that are part of the base shared framework as candidates.  We could do the same for a WindowsDesktop transport package, should we produce one in the future.\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eericstj\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-05-10T20:18:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44uvX7",
                                           "createdAt":  "2021-10-26T09:58:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e Today we publish a shared framework package for ASP.NET and include an arbitrary set of files\r\n\r\nSince this was opened another transport package for WindowsDesktop was added and there underlying infrastructure was changed from binplacing and pkgproj to NuGet Pack Task and ProjectReferences. Based on the P2P protocol what you describe is now probably less of an issue but it would still be great to add closure validation at some point.\r\n\r\nDefinitely not a high prio IMO. ",
                                           "updatedAt":  "2021-10-26T09:58:08Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "We can validate closure of our shared framework transport packages",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/53900",
        "createdAt":  "2021-06-08T21:33:35Z",
        "number":  53900,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-09-11T10:13:42Z",
        "body":  "System.Data.Odbc has a big number of platform specific configurations. As those are now shipping as part of https://github.com/dotnet/runtime/pull/53439, it might make sense to review and see if some of these configurations could be collapsed together.\r\n\r\nSystem.Text.Encodings.Web targets a Browser even though it doesn\u0027t use any platform specific APIs. Apparently this is so that the linker can trim out Vector128\u003cT\u003e on browser-wasm: https://github.com/dotnet/runtime/pull/53439#discussion_r643263009. We should see if there\u0027s a better way to make this work without the platform specific configuration.\r\n\r\nEDIT:\r\n**In addition to that, we need to make sure that all dependencies from the platform TFMs are represented in the platform agnostic TFM.**\r\n\r\ncc @ericstj @eerhardt @MichalStrehovsky @marek-safar @ajcvickers ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOTz7gIQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NzE3NDk3MQ==",
                                           "createdAt":  "2021-06-08T21:33:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @Anipik, @safern, @ViktorHofer\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nSystem.Data.Odbc has a big number of platform specific configurations. As those are now shipping as part of https://github.com/dotnet/runtime/pull/53439, it might make sense to review and see if some of these configurations could be collapsed together.\r\n\r\nSystem.Text.Encodings.Web targets a Browser even though it doesn\u0027t use any platform specific APIs. Apparently this is so that the linker can trim out Vector128\u003cT\u003e on browser-wasm: https://github.com/dotnet/runtime/pull/53439#discussion_r643263009. We should see if there\u0027s a better way to make this work without the platform specific configuration.\r\n\r\nThere are probably more of these cases and I will add a list of packages to review at a later point.\r\n\r\ncc @ericstj @eerhardt @MichalStrehovsky @marek-safar @ajcvickers \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e6.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-06-08T21:33:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NzIwNDI1NA==",
                                           "createdAt":  "2021-06-08T22:04:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "cc @GrabYourPitchforks for the System.Text.Encodings.Web part as well.",
                                           "updatedAt":  "2021-06-08T22:04:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5POcu3",
                                           "createdAt":  "2022-11-28T14:16:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Here\u0027s a list of projects that are packable and multi-target based on the TargetFramework and TargetPlatform, ordered by the number of assemblies in the correspnding package when we ship .NET 8:\r\n- **System.Data.Odbc.csproj (25)**\r\n- **System.DirectoryServices.Protocols.csproj (13)**\r\n- **System.IO.Ports.csproj (11)**\r\n- System.Security.Cryptography.Pkcs.csproj (9)\r\n- Microsoft.Win32.Registry.AccessControl.csproj (8)\r\n- Microsoft.Win32.SystemEvents.csproj (8)\r\n- System.Data.OeDb.csproj (8)\r\n- System.Diagnostics.EventLog.csproj (8)\r\n- System.Diagnostics.PerformanceCounter.csproj (8)\r\n- System.Net.Http.WinHttpHandler.csproj (8)\r\n- System.Text.Encoding.CodePages.csproj (8)\r\n- System.Text.Encodings.Web.csproj (8)\r\n- System.Threading.AccessControl.csproj (8)\r\n- System.Security.Cryptography.ProtectedData.csproj (8)\r\n- System.ServiceProcess.ServiceController.csproj (8)\r\n- System.DirectoryServices.csproj (7)\r\n- System.DirectoryServices.AccountManagement.csproj (7)\r\n- System.Management.csproj (7)\r\n- System.Runtime.Caching.csproj (7)\r\n- System.Speech.csproj (7)\r\n- System.Windows.Extensions.csproj (6)",
                                           "updatedAt":  "2023-09-11T10:13:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5PPuAh",
                                           "createdAt":  "2022-11-28T18:02:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "One library in the list that surprises me is `System.Runtime.Caching`. It doesn\u0027t seem like it should need to be target platform-specific.",
                                           "updatedAt":  "2022-11-28T18:02:04Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Review NetCoreAppCurrent libraries configurations which are platform specific",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/53924",
        "createdAt":  "2021-06-09T10:04:34Z",
        "number":  53924,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-20T16:50:41Z",
        "body":  "Using a batched build for measurements: https://dnceng.visualstudio.com/public/_build/results?buildId=1178181\u0026view=logs\u0026j=be745447-21d7-5722-3f01-3e5709978455\u0026t=80dd1e14-d738-5614-f259-51a0bdabd48b\r\n\r\nBuilding .NET Framework libraries and tests currently takes 6 minutes. Running the tests on Helix takes 25 minutes and presumably the time it takes to run the .NET Framework tests (either sequentially or in parallel) is far less than that. As .NET Framework tests already run on the same OS as they are built on (Windows 10 x64/x86) the value of using Helix here is questionable.\r\n\r\nReducing the amount of Helix usage helps both us in regards to build times, dependencies and with that reliability and the core-eng team in regards to machine consumption. If I\u0027m not mistaken, the uploading of the test results would need to be taken care of in the yml but that should be straightforward as that\u0027s a functionality on the common path.\r\n\r\ncc @safern @Anipik @ericstj ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOMyHS6g==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NzU2NDI2Mg==",
                                           "createdAt":  "2021-06-09T10:04:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @Anipik, @safern, @ViktorHofer\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nUsing a batched build for measurements: https://dnceng.visualstudio.com/public/_build/results?buildId=1178181\u0026view=logs\u0026j=be745447-21d7-5722-3f01-3e5709978455\u0026t=80dd1e14-d738-5614-f259-51a0bdabd48b\r\n\r\nBuilding .NET Framework libraries and tests currently takes 6 minutes. Running the tests on Helix takes 25 minutes and presumably the time it takes to run the .NET Framework tests (either sequentially or in parallel) is far less than that. As .NET Framework tests already run on the same OS as they are built on (Windows 10 x64/x86) the value of using Helix here is questionable.\r\n\r\nIf I\u0027m not mistaken, the uploading of the test results would need to be taken care of in the yml but that should be straightforward as that\u0027s a functionality on the common path.\r\n\r\ncc @safern @Anipik @ericstj \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`Design Discussion`, `area-Infrastructure-libraries`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e6.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-06-09T10:04:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1Nzg1NDY5OA==",
                                           "createdAt":  "2021-06-09T16:35:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBuLHhw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2021-06-10T10:51:40Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "safern",
                                           "body":  "I think it makes sense to try it. Even if it takes the same amount of time to run them, it is better to avoid all the uploads and dependencies, etc to make the build more reliable. Given that the netfx tests just run in a single helix queue, I think we don\u0027t gain much from using helix.",
                                           "updatedAt":  "2021-06-09T16:35:29Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Consider running .NET Framework tests on build agent instead of on Helix",
        "labels":  [
                       "design-discussion",
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/54639",
        "createdAt":  "2021-06-23T19:09:55Z",
        "number":  54639,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC6TfjQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "CarnaViire",
                                            "createdAt":  "2024-08-19T12:23:28Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2024-06-09T14:49:47Z",
        "body":  "From https://github.com/dotnet/runtime/pull/54636\r\n\r\nfrom @eerhardt \r\n\u003e @ericstj @ViktorHofer - this is another case where we are splitting \".NET Core 3.1\" build with \".NET Current\" build. (I had to do that in order to use ComWrappers, because that API came in 5.0.) This means we are going to be missing test coverage for all of these COM interop scenarios for System.Drawing.Common v6.0.0 when running on .NET Core 3.1.\r\n\r\nfrom @ericstj \r\n\u003e @ViktorHofer what if this was opt-in per test? A test project could decide to add a configuration for netcore3.1-Windows and we could have one of the build legs (either windows or all-configurations) create the helix work items. Would this require more capacity than a single test additional test assembly?\r\n\r\nThe overall issue isn\u0027t specific to Windows, we need coverage on as many OSs that a library supports, as possible. The cost that I\u0027m concerned about isn\u0027t observable in the amount of build agents but in the number of Helix clients that accept work items.\r\n\r\nI imagine support for testing on older .NETCoreApp configurations could be implemented in the following way in order:\r\n- Downgrade the TestUtilities.csproj to use `$(NetCoreAppMinimum)`.\r\n- Add infra support for running .NETCoreApp tests without a live built testhost (same as for .NETFramework testing) [here](https://github.com/dotnet/runtime/tree/main/eng/testing).\r\n- Add CI legs previous .NET versions that build the respective TFMs and submit jobs to helix for all OSs. Consider adding a new pipeline for that so that it can be scheduled (i.e. nightly).\r\n- Add `NetCoreAppMinimum` / `NetCoreAppPrevious` TFMs to the OOB test projects either everywhere or on a per project basis where it makes sense.\r\n- Make sure that the new pipeline is monitored to catch regressions in the older .NETCoreApp TFM assets.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOM8iybQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2NzA5MDAwNw==",
                                           "createdAt":  "2021-06-23T19:09:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @Anipik, @safern, @ViktorHofer\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nFrom https://github.com/dotnet/runtime/pull/54636\r\n\r\nfrom @eerhardt \r\n\u003e @ericstj @ViktorHofer - this is another case where we are splitting \".NET Core 3.1\" build with \".NET Current\" build. (I had to do that in order to use ComWrappers, because that API came in 5.0.) This means we are going to be missing test coverage for all of these COM interop scenarios for System.Drawing.Common v6.0.0 when running on .NET Core 3.1.\r\n\r\nfrom @ericstj \r\n\u003e @ViktorHofer what if this was opt-in per test? A test project could decide to add a configuration for netcore3.1-Windows and we could have one of the build legs (either windows or all-configurations) create the helix work items. Would this require more capacity than a single test additional test assembly?\r\n\r\nThe overall issue isn\u0027t specific to Windows, we need coverage on as many OSs that a library supports, as possible. The cost that I\u0027m concerned about isn\u0027t observable in the amount of build agents but in the number of Helix clients that accept work items.\r\n\r\nI imagine support for testing on older .NETCoreApp configurations could be implemented in the following way in order:\r\n- Downgrade the TestUtilities.csproj to netcoreapp3.1 (use `$(NetCoreAppMinimum)` which will be introduced soon).\r\n- Add infra support for running .NETCoreApp tests without a testhost (same as for .NETFramework testing) [here](https://github.com/dotnet/runtime/tree/main/eng/testing).\r\n- Add two legs (or as an optimization only one leg) for netcoreapp3.1 and net5.0 that build the respective configuration and submit jobs to helix for all OSs. Consider adding a new pipeline for that so that it can be scheduled (i.e. nightly).\r\n- Add netcoreapp3.1/net5.0 TFMs in the OOB test projects either everywhere or on a per project basis where it makes sense (I think the former would make more sense).\r\n- Make sure that the new pipeline is monitored to catch regressions in the older .NETCoreApp TFM assets.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-06-23T19:09:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2ODcyNzkwNw==",
                                           "createdAt":  "2021-06-25T17:39:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "from @safern:\r\n\r\n\u003e @ViktorHofer do we have a lot of projects that would run on previous versions of .NET Core? What if we start small and run them on Ubuntu, Windows and macOS on the build agent without using helix? If there aren\u0027t may projects that would want to do this, we could get away without using helix and running them on the build agent.\r\n\r\nEvery OOB project that today targets $(NetCoreAppCurrent) will need to continue to test for net6.0 when we change main to target net7.0. Basically that means every OOB that isn\u0027t .NETFramework specific (95% of all OOBs).\r\n\r\n\u003e What if we start small and run them on Ubuntu, Windows and macOS on the build agent without using helix?\r\n\r\nThat was my idea as well but ideally we would have a plan for the long run as well to be able to test for all compatible OSs, i.e. Browser as well. I\u0027m fine with starting on build agents but is there a reason to not use Helix for it if it\u0027s just a nightly job?\r\n\r\n",
                                           "updatedAt":  "2021-06-25T17:39:16Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2ODc5MDg5Mw==",
                                           "createdAt":  "2021-06-25T19:37:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "\u003e  I\u0027m fine with starting on build agents but is there a reason to not use Helix for it if it\u0027s just a nightly job?\r\n\r\nThat\u0027s fine as well, however that would be yet another pipeline to take a look at. ",
                                           "updatedAt":  "2021-06-25T19:37:27Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Support testing previous non-current .NETCoreApp targeted libraries",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/54920",
        "createdAt":  "2021-06-29T19:08:15Z",
        "number":  54920,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-07-12T20:17:00Z",
        "body":  "See https://dev.azure.com/dnceng/public/_build/results?buildId=1211661\u0026view=logs\u0026jobId=9bd06b96-2bdb-52e1-9716-7806e46fa22b\u0026j=9bd06b96-2bdb-52e1-9716-7806e46fa22b\u0026t=a3f0b638-9032-505e-73db-bdcb5f500afb which was failing during restore but after the product build.\r\n\r\nBy moving to an up-front restore of the (generated) trimming test project, restore is bundled together with the rest of the product restore and NuGet can either fail early or succeed. Also restoring everything in one go makes the overall restore much more efficient. Failing late in the build makes both a poor local developer experience and wastes resources on CI.\r\n\r\ncc @joperezr @safern @eerhardt ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOM-gw0Q==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3MDg0NDgwNQ==",
                                           "createdAt":  "2021-06-29T19:08:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @Anipik, @safern, @ViktorHofer\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nSee https://dev.azure.com/dnceng/public/_build/results?buildId=1211661\u0026view=logs\u0026jobId=9bd06b96-2bdb-52e1-9716-7806e46fa22b\u0026j=9bd06b96-2bdb-52e1-9716-7806e46fa22b\u0026t=a3f0b638-9032-505e-73db-bdcb5f500afb which was failing during restore but after the product build.\r\n\r\nBy moving to an up-front restore of the (generated) trimming test project, restore is bundled together with the rest of the product restore and NuGet can either fail early or succeed. Also restoring everything in one go makes the overall restore much more efficient. Failing late in the build makes both a poor local developer experience and wastes resources on CI.\r\n\r\ncc @joperezr @safern @eerhardt \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-06-29T19:08:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3MDg0OTA3MA==",
                                           "createdAt":  "2021-06-29T19:14:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "How can we be able to restore generated trimming projects upfront? Do you plan on restoring just it\u0027s dependencies so that they are on the cache? Or were you thinking generating them first, then restore the product? ",
                                           "updatedAt":  "2021-06-29T19:14:40Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3MDg1NDg2NQ==",
                                           "createdAt":  "2021-06-29T19:24:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e Or were you thinking generating them first, then restore the product?\r\n\r\nYes. A target could be added to the InitialTargets of tests.proj that would make sure that test projects are incrementally generated and ProjectReferences point to them. That should do the job.",
                                           "updatedAt":  "2021-06-29T19:24:36Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Trimming tests should restore upfront instead of after the product build",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/55702",
        "createdAt":  "2021-07-15T01:59:22Z",
        "number":  55702,
        "author":  "danmoseley",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-10-26T15:19:06Z",
        "body":  "Eg., from a crash in a unit test run on Linux:\r\n```\r\n----- end Wed Jul 14 21:46:14 UTC 2021 ----- exit code 134 ----------------------------------------------------------\r\nexit code 134 means SIGABRT Abort. Managed or native assert, or runtime check such as heap corruption, caused call to abort(). Core dumped.\r\nulimit -c value: unlimited\r\n...\r\nWaiting a few seconds for any dump to be written..\r\ncat /proc/sys/kernel/core_pattern: /home/helixbot/dotnetbuild/dumps/core.%u.%p\r\ncat /proc/sys/kernel/core_uses_pid: 0\r\ncat: /proc/sys/kernel/coredump_filter: No such file or directory\r\ncat /proc/sys/kernel/coredump_filter:\r\nLooking around for any Linux dump..\r\n... found no dump in /root/helix/work/workitem\r\n```\r\n\r\nThe script we use to run unit tests tries to find any core dump, crack it with gdb, dump all threads\u0027 stacks, then make a copy in case it\u0027s useful. This is broken, because it\u0027s looking in the current directory for the dump, and it\u0027s nowadays found in /home/helixbot/dotnetbuild/dumps/. It needs to read core_pattern so it knows to look there.\r\n\r\nNote, Helix gathers the dump just fine because it uses core_pattern (in fact it set that). It would be nice to fix this so that we also dump some free info in the log.\r\n\r\ncc fyi @MattGal ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOOL8TqQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg4MDMyOTMzNA==",
                                           "createdAt":  "2021-07-15T01:59:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @tommcdon\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nEg., from a crash in a unit test run on Linux:\r\n```\r\n----- end Wed Jul 14 21:46:14 UTC 2021 ----- exit code 134 ----------------------------------------------------------\r\nexit code 134 means SIGABRT Abort. Managed or native assert, or runtime check such as heap corruption, caused call to abort(). Core dumped.\r\nulimit -c value: unlimited\r\n...\r\nWaiting a few seconds for any dump to be written..\r\ncat /proc/sys/kernel/core_pattern: /home/helixbot/dotnetbuild/dumps/core.%u.%p\r\ncat /proc/sys/kernel/core_uses_pid: 0\r\ncat: /proc/sys/kernel/coredump_filter: No such file or directory\r\ncat /proc/sys/kernel/coredump_filter:\r\nLooking around for any Linux dump..\r\n... found no dump in /root/helix/work/workitem\r\n```\r\n\r\nThe script we use to run unit tests tries to find any core dump, crack it with gdb, dump all threads\u0027 stacks, then make a copy in case it\u0027s useful. This is broken, because it\u0027s looking in the current directory for the dump, and it\u0027s nowadays found in /home/helixbot/dotnetbuild/dumps/. It needs to read core_pattern so it knows to look there.\r\n\r\nNote, Helix gathers the dump just fine because it uses core_pattern (in fact it set that). It would be nice to fix this so that we also dump some free info in the log.\r\n\r\ncc fyi @MattGal \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003edanmoseley\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Diagnostics-coreclr`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-07-15T01:59:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44used",
                                           "createdAt":  "2021-10-26T09:41:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "I think that the most of the RunnerTemplate logic for Unix is outdated and can probably be removed. At least the parts [here](https://github.com/dotnet/runtime/blob/main/eng/testing/RunnerTemplate.sh#L64-L127) and the other ones at the bottom of the script.",
                                           "updatedAt":  "2021-10-26T09:41:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44voTr",
                                           "createdAt":  "2021-10-26T14:40:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Really none of this need be repo specific right? Arcade spoils have any dump cracking logic.",
                                           "updatedAt":  "2021-10-26T14:40:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44vpL9",
                                           "createdAt":  "2021-10-26T14:44:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Exactly. I don\u0027t think any of that logic is important for local testing either.",
                                           "updatedAt":  "2021-10-26T14:44:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44vtbr",
                                           "createdAt":  "2021-10-26T15:02:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Would you perhaps be able to open an issue in Arcade pointing to where the logic should go? ",
                                           "updatedAt":  "2021-10-26T15:02:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44vxOp",
                                           "createdAt":  "2021-10-26T15:19:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "The way dotnet/runtime, more specifically libraries, execute tests is still very much repo specific. I don\u0027t think it makes sense to move this into Arcade. IMO we can just remove parts of that code and no one will notice.",
                                           "updatedAt":  "2021-10-26T15:19:06Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "Unix tests\u0027 core-cracking script looks in the wrong place for core dumps",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/57489",
        "createdAt":  "2021-08-16T11:50:06Z",
        "number":  57489,
        "author":  "adamsitnik",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCzmlDw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Kezzo",
                                            "createdAt":  "2023-10-27T10:28:46Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2022-05-12T07:59:58Z",
        "body":  "When trying to fix a flaky test, I usually need to run it for a while before I am able to reproduce the problem.\r\n\r\nSample command:\r\n\r\n```cmd\r\n.\\dotnet.cmd build /t:Test .\\src\\libraries\\System.Diagnostics.Process\\tests\\System.Diagnostics.Process.Tests.csproj /p:Configuration=Debug /p:TargetArchitecture=x86 /p:XunitMethodName=System.Diagnostics.Tests.ProcessModuleTests.LongModuleFileNamesAreSupported\r\n```\r\n\r\n@ViktorHofer @safern Do we have any built-in way of requesting given test to be run until it fails? If not, would a PR that adds such possibility to `dotnet.cmd|sh` script be welcomed?\r\n\r\nUsually I hack `dotnet.cmd` and do the following:\r\n\r\n```diff\r\n+:Loop\r\ncall \"%dotnetPath%\\dotnet.exe\" %*\r\n+if %ERRORLEVEL% equ 0 goto :Loop\r\n```\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOOLq5tg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc41nHpH",
                                           "createdAt":  "2021-08-16T11:50:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @Anipik, @safern, @ViktorHofer\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nWhen trying to fix a flaky test, I usually need to run it for a while before I am able to reproduce the problem.\r\n\r\nSample command:\r\n\r\n```cmd\r\n.\\dotnet.cmd build /t:Test .\\src\\libraries\\System.Diagnostics.Process\\tests\\System.Diagnostics.Process.Tests.csproj /p:Configuration=Debug /p:TargetArchitecture=x86 /p:XunitMethodName=System.Diagnostics.Tests.ProcessModuleTests.LongModuleFileNamesAreSupported\r\n```\r\n\r\n@ViktorHofer @safern Do we have any built-in way of requesting given test to be run until it fails? If not, would a PR that adds such possibility to `dotnet.cmd|sh` script be welcomed?\r\n\r\nUsually I hack `dotnet.cmd` and do the following:\r\n\r\n```diff\r\n+:Loop\r\ncall \"%dotnetPath%\\dotnet.exe\" %*\r\n+if %ERRORLEVEL% equ 0 goto :Loop\r\n```\r\n\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eadamsitnik\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`question`, `area-Infrastructure-libraries`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003eFuture\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-08-16T11:50:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41nIdg",
                                           "createdAt":  "2021-08-16T11:56:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@adamsitnik is there a reason why you use `dotnet build /t:Test` and not `dotnet test`? Just curious.\r\n\r\n\u003e @ViktorHofer @safern Do we have any built-in way of requesting given test to be run until it fails? If not, would a PR that adds such possibility to dotnet.cmd|sh script be welcomed?\r\n\r\nWe don\u0027t today. If the proposed solution works cross-plat and is scoped to test execution only and works with both `dotnet test` and `dotnet build /t:Test` (which uses the legacy unsupported xunit.console runner) then for sure. What makes this tricky is that `dotnet test` doesn\u0027t run as part of a cmd/sh script, it invokes dotnet.dll directly.",
                                           "updatedAt":  "2021-08-16T11:56:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41nJYy",
                                           "createdAt":  "2021-08-16T12:02:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB2fPeA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2021-08-16T15:06:27Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "adamsitnik",
                                           "body":  "\u003e is there a reason why you use dotnet build /t:Test and not dotnet test? Just curious\r\n\r\n@ViktorHofer I can\u0027t get it working for x86:\r\n\r\n```cmd\r\n .\\dotnet.cmd test .\\src\\libraries\\System.Diagnostics.Process\\tests\\System.Diagnostics.Process.Tests.csproj /p:Configuration=Debug /p:TargetArchitecture=x86 /p:XunitMethodName=System.Diagnostics.Tests.ProcessModuleTests.LongModuleFileNamesAreSupported\r\n```\r\n\r\n```log\r\nA total of 1 test files matched the specified pattern.\r\nTesthost process exited with error: Unhandled exception. System.BadImageFormatException: Could not load file or assembly \u0027D:\\projects\\runtime\\artifacts\\bin\\System.Diagnostics.Process.Tests\\net6.0-windows-Debug\\testhost.dll\u0027. An attempt was made to load a program with an incorrect format.\r\nFile name: \u0027D:\\projects\\runtime\\artifacts\\bin\\System.Diagnostics.Process.Tests\\net6.0-windows-Debug\\testhost.dll\u0027\r\n. Please check the diagnostic logs for more information.\r\n```\r\n\r\n\r\n```cmd\r\n.\\dotnet.cmd test .\\src\\libraries\\System.Diagnostics.Process\\tests\\System.Diagnostics.Process.Tests.csproj /p:Configuration=Debug /p:XunitMethodName=System.Diagnostics.Tests.ProcessModuleTests.LongModuleFileNamesAreSupported\r\n```\r\n\r\n```log\r\nStarting test execution, please wait...\r\nA total of 1 test files matched the specified pattern.\r\nFailed to launch testhost with error: System.AggregateException: One or more errors occurred. (An error occurred trying to start process \u0027D:\\projects\\runtime\\artifacts\\bin\\testhost\\net6.0-windows-Debug-x64\\dotnet.exe\u0027 with working directory \u0027D:\\projects\\runtime\\artifacts\\bin\\System.Diagnostics.Process.Tests\\net6.0-windows-Debug\u0027. The system cannot find the file specified.)\r\n ---\u003e System.ComponentModel.Win32Exception (2): An error occurred trying to start process \u0027D:\\projects\\runtime\\artifacts\\bin\\testhost\\net6.0-windows-Debug-x64\\dotnet.exe\u0027 with working directory \u0027D:\\projects\\runtime\\artifacts\\bin\\System.Diagnostics.Process.Tests\\net6.0-windows-Debug\u0027. The system cannot find the file specified.\r\n   at System.Diagnostics.Process.StartWithCreateProcess(ProcessStartInfo startInfo)\r\n   at System.Diagnostics.Process.Start()\r\n   at Microsoft.VisualStudio.TestPlatform.PlatformAbstractions.ProcessHelper.LaunchProcess(String processPath, String arguments, String workingDirectory, IDictionary`2 envVariables, Action`2 errorCallback, Action`1 exitCallBack, Action`2 outputCallBack)\r\n   at Microsoft.VisualStudio.TestPlatform.CrossPlatEngine.Hosting.DotnetTestHostManager.LaunchHost(TestProcessStartInfo testHostStartInfo, CancellationToken cancellationToken)\r\n   at Microsoft.VisualStudio.TestPlatform.CrossPlatEngine.Hosting.DotnetTestHostManager.\u003c\u003ec__DisplayClass38_0.\u003cLaunchTestHostAsync\u003eb__0()\r\n   at System.Threading.Tasks.Task`1.InnerInvoke()\r\n   at System.Threading.Tasks.Task.\u003c\u003ec.\u003c.cctor\u003eb__271_0(Object obj)\r\n   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location ---\r\n   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task\u0026 currentTaskSlot, Thread threadPoolThread)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.VisualStudio.TestPlatform.CrossPlatEngine.Hosting.DotnetTestHostManager.LaunchTestHostAsync(TestProcessStartInfo testHostStartInfo, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)\r\n   at System.Threading.Tasks.Task`1.get_Result()\r\n   at Microsoft.VisualStudio.TestPlatform.CrossPlatEngine.Client.ProxyOperationManager.SetupChannel(IEnumerable`1 sources, String runSettings)\r\n```",
                                           "updatedAt":  "2021-08-16T12:02:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41nlsR",
                                           "createdAt":  "2021-08-16T14:46:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOELC6IA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "adamsitnik",
                                                                               "createdAt":  "2021-08-17T07:51:47Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2021-10-26T09:35:01Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "exyi",
                                                                               "createdAt":  "2025-03-22T21:32:57Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "EgorBo",
                                           "body":  "Unrelated: it\u0027d be nice to have an ability to run any (all) tests some fixed number of times - most tests never reach tier1 so we never test optimized codegen (promoted naturally from tier0) on them with PGO/GDV.\r\n\r\n",
                                           "updatedAt":  "2021-08-16T14:49:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41rqd7",
                                           "createdAt":  "2021-08-17T21:20:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB2xNFQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "adamsitnik",
                                                                               "createdAt":  "2021-08-18T07:21:40Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "AndyAyersMS",
                                           "body":  "One trick you can play if you\u0027re trying to repro manually is to find the underlying command line and pass the test assembly multiple times, eg\r\n```\r\n;; run tests once \r\ndotnet.exe exec --runtimeconfig System.Net.Security.Tests.runtimeconfig.json --depsfile System.Net.Security.Tests.deps.json xunit.console.dll System.Net.Security.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing\r\n\r\n;; run tests twice\r\ndotnet.exe exec --runtimeconfig System.Net.Security.Tests.runtimeconfig.json --depsfile System.Net.Security.Tests.deps.json xunit.console.dll  System.Net.Security.Tests.dll  System.Net.Security.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing\r\n```\r\n\r\nI went up to 32x in some of my recent repro attempts (30 being the magic threshold for Tiered Comp).",
                                           "updatedAt":  "2021-08-17T21:20:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44urm2",
                                           "createdAt":  "2021-10-26T09:36:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD7VAsw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "safern",
                                                                               "createdAt":  "2021-10-26T14:17:15Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MichelZ",
                                                                               "createdAt":  "2024-11-18T09:04:37Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "We probably want to make this work. It would be good to tackle this when we have time to clean-up our test runner scripts (use the Arcade provided templating package, add dotnet test to it, merge back the other runner scripts to use the same infrastructure underneath).",
                                           "updatedAt":  "2021-10-26T09:36:59Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "How to run the test until it fails?",
        "labels":  [
                       "question",
                       "area-Infrastructure-libraries",
                       "dev-innerloop"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/58163",
        "createdAt":  "2021-08-26T09:15:12Z",
        "number":  58163,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCfvDpA==",
                          "nodes":  [
                                        {
                                            "content":  "HEART",
                                            "user":  "danmoseley",
                                            "createdAt":  "2021-08-26T14:05:43Z"
                                        },
                                        {
                                            "content":  "ROCKET",
                                            "user":  "danmoseley",
                                            "createdAt":  "2021-08-26T14:05:44Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "danmoseley",
                                            "createdAt":  "2021-08-26T14:05:46Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "eerhardt",
                                            "createdAt":  "2021-08-26T15:51:09Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "tannergooding",
                                            "createdAt":  "2021-08-26T21:10:28Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "tannergooding",
                                            "createdAt":  "2021-08-26T21:10:30Z"
                                        },
                                        {
                                            "content":  "ROCKET",
                                            "user":  "tannergooding",
                                            "createdAt":  "2021-08-26T21:10:30Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ericstj",
                                            "createdAt":  "2021-08-30T16:00:58Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Nirmal4G",
                                            "createdAt":  "2021-09-03T15:37:28Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "safern",
                                            "createdAt":  "2021-10-29T20:44:33Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "omariom",
                                            "createdAt":  "2021-11-01T07:01:31Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "reijerh",
                                            "createdAt":  "2022-01-04T09:54:57Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "AaronRobinsonMSFT",
                                            "createdAt":  "2022-06-01T18:12:54Z"
                                        }
                                    ],
                          "totalCount":  13
                      },
        "updatedAt":  "2025-07-26T10:39:09Z",
        "body":  "Packages produced by dotnet/runtime targeting NET6 and upwards don\u0027t contain reference assemblies anymore. The existing targeting packs `Microsoft.NETCore.App.Ref`, `Microsoft.AspNetCore.App.Ref` and `Microsoft.WindowsDesktop.App.Ref` are the only shipping assets which still contain reference assemblies (by design). That said, [reference assemblies are general goodness as leveraging them improves incremental build performance](https://github.com/dotnet/sdk/issues/2521) which is why they are emitted by the SDK by default since .NET 5.\r\n\r\n## Problem statement\r\n\r\nReference assemblies in dotnet/runtime are currently generated via dedicated reference projects which expose various downsides:\r\n1. Having dedicated reference projects is confusing first time contributors as such a concept rarely exists in any other .NET solution or repository.\r\n2. The reference and source project files need to be kept in sync, i.e. TargetFrameworks, references, **public APIs** and any other input that impacts the project\u0027s output. This makes versioning and reving to a new major version harder.\r\n3. Since .NET 6, out-of-band reference assemblies like `Microsoft.Extensions.*` don\u0027t ship to customers anymore as they aren\u0027t part of the generated packages. Their sole purpose today is infrastructure only needs (ApiCompat and GenFacades).\r\n4. As reference projects need to be restored (as any other `Microsoft.NET.Sdk` project), they contribute to the overall restore performance. NuGet creates intermediate files per project and tfm: i.e. `project.assets.json`, `$(MSBuildProjectName).nuget.g.props`, `$(MSBuildProjectName).nuget.g.targets`. Removing reference projects will result in a faster repo per project restore, as less computation (traversing the graph) and less IO operations are necessary.\r\n5. Reference projects enlarge the dependency graph that tools like msbuild or Visual Studio need to care about. Every msbuild project needs to be parsed and evaluated which adds onto the overall build and tool performance. They also bloat solution files which are checked into the repository.\r\n6. Reference assemblies are [_an implementation detail_](https://github.com/dotnet/msbuild/issues/6543#issuecomment-861612099) and aren\u0027t expected to be surfaced as a primary output. With dedicated projects to generate reference assemblies, a contract needs to be established between the source and the reference project to make other projects that reference the source project use the reference assembly instead of the implementation assembly (for build perf reasons as explained above). This is very customized infrastructure in dotnet/runtime and required sequencing into a specific point in the build to make this happen. It\u0027s not guaranteed that this will continue to work as it\u0027s far from the the common path.\r\n\r\n## Solution\r\n\r\nAs of time of writing, there are 227 libraries under `src/libraries` and 63 of those are partial or full façade assemblies. Presumably, the 164 libraries which don\u0027t use [GenFacade\u0027s `\u003cIsPartialFacadeAssembly /\u003e` feature](https://github.com/dotnet/arcade/tree/main/src/Microsoft.DotNet.GenFacades) could leverage [Roslyn\u0027s RefOut feature](https://github.com/dotnet/roslyn/blob/main/docs/features/refout.md) to generate reference assemblies as a secondary build output of the source project.\r\n\r\nTo make this work, the following work needs to be done (in no particular order):\r\n\r\n- [x] ApiCompat needs to compare the emitted reference assembly against the implementation assemblies to make sure that the public api surface matches between rids of the same base TFM. This is already handled by package validation but we want this coverage for libraries which aren\u0027t packable (i.e. most of what\u0027s inside the shared framework) as well and we want validation errors to fail the build during inner loop development.\r\n- [x] Use PackageValidation to make sure the API surface matches between compatible TFMs (ie netstandard2.0 and net6.0).\r\n- [ ] Leverage a tool like GenAPI to record the public api surface area for each TFM. Put that file into `src\\$(MSBuildProjectName).$(TargetFramework).ref.cs` and exclude that file from being added as a compile source when the `\u003cEnableDefaultItems /\u003e` or `\u003cEnableDefaultCompileItems /\u003e` properties are set to true. Update the bot which warns about public API changes to also watch for changes in that location.\r\n- [ ] Stretch goal: Teach GenAPI to emit the public api surface area of all TFMs combined in one C# file. \r\n- [ ] Diff the produced reference assemblies (roslyn vs runtime) and teach Roslyn to emit as optimized reference assemblies as the ones, runtime produces via dedicated reference projects.\r\n\r\n### Partial façade assemblies\r\n\r\nFor the remaining 63 assemblies, `GenFacades` is used to add type forward attributes to the project\u0027s compilation input (via a generated `Compile` item) for public API that is missing from the compilation sources, but which is available in any of the referenced assemblies (`ReferencePath`). Missing is defined as an API that is available in the reference assembly but not in the implementation compilation sources.\r\nAs an example, the `System.AppContext` type is exposed in the System.Runtime.dll reference assembly but its implementation is found in System.Private.CoreLib.dll and not in the System.Runtime.dll implementation assembly. The implementation assembly instead contains a type forward attribute that indicates that the type is exposed in another assembly.\r\n\r\nIt\u0027s yet unclear how to generate these type forwards without having a reference assembly available that represents the public API surface area. A possible solution to that could be to check in the type forwards, adding them to the compilation input and making sure that they are kept up to date. The problem with that is that Roslyn keeps passed-in type forward attributes in reference assemblies instead of following the type and replacing the attribute with the actual type. We should sync up with the Roslyn team to see if supporting this scenario is feasible.\r\n\r\n### PlatformNotSupportedException assemblies (PNSEs)\r\n\r\nSome libraries generate `PlatformNotSupportedException` assemblies (via one of [these two switches](https://github.com/dotnet/arcade/blob/474307e526160c813c9fd58060eb8356ccca6099/src/Microsoft.DotNet.GenFacades/build/Microsoft.DotNet.GenFacades.targets#L10-L11)). The PNSE logic takes the reference project\u0027s source files as an input and [transforms them to throw PNSEs instead of returning null](https://github.com/dotnet/arcade/blob/474307e526160c813c9fd58060eb8356ccca6099/src/Microsoft.DotNet.GenFacades/NotSupportedAssemblyGenerator.cs#L37).\r\n\r\nIt\u0027s yet unclear which input would be used without a reference project being existent. One option would be to feed in the generated reference source (which only acts as an output) as an input to keep the existing logic as-is. The obvious downside of that is that the PNSE logic would depend on the reference source file being up-to-date, which only other inner builds (which run in parallel) make sure of.\r\n\r\nAlternatively the TFM that is responsible for generating the PNSE could leverage the `RefOnly` Roslyn switch to generate the reference assembly only, generate the reference source file from it and then invoke the existing PNSE logic an feed in that just generated reference source file. Ideally we would not depend on the reference source file which is considered as an output, at all and explore if it\u0027s possible to use the linker to transform the reference assembly to a PNSE one.\r\n\r\n### Public API differences\r\nThere is a list of public APIs that is intentionally different between the reference and the runtime assemblies. The major difference for all libraries is that the following set of attributes is not exposed in the reference assemblies: https://github.com/dotnet/runtime/blob/main/eng/DefaultGenApiDocIds.txt.\r\nIn addition to that, libraries exist which differ in other public APIs as well, i.e. for System.Runtime: https://github.com/dotnet/runtime/blob/main/src/libraries/System.Runtime/src/MatchingRefApiCompatBaseline.txt.\r\n\r\nTo being able to leverage Roslyn to generate the reference assemblies, we would need to make it possible to exclude these APIs from the reference assembly.\r\n\r\ncc @danmoseley @jaredpar @ericstj @stephentoub @eerhardt ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONgQRng==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc42BBGe",
                                           "createdAt":  "2021-08-26T09:15:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @Anipik, @safern, @ViktorHofer\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nPackages produce in NET6 and onwards don\u0027t contain reference assemblies anymore. The existing targeting packs `Microsoft.NETCore.App.Ref`, `Microsoft.AspNetCore.App.Ref` and `Microsoft.WindowsDesktop.App.Ref` are the only shipping assets which still contain reference assemblies (by design). That said, [reference assemblies are general goodness as leveraging them improves incremental build performance](https://github.com/dotnet/sdk/issues/2521) which is why they are emitted by the SDK by default since .NET 5.\r\n\r\n## Problem statement\r\n\r\nReference assemblies in dotnet/runtime are currently generated via dedicated reference projects which expose various downsides:\r\n1. Having dedicated reference projects is confusing first time contributors as such a concept rarely exists in any other .NET solution or repository.\r\n2. The reference and source project files need to be kept in sync, i.e. TargetFrameworks, references, **public APIs** any other input that impacts the project\u0027s output. This makes versioning and reving to a new major version harder.\r\n3. As reference projects need to be restored (as any other `Microsoft.NET.Sdk` project), they contribute to the overall restore performance. NuGet creates intermediate files per project and tfm: i.e. `project.assets.json`, `$(MSBuildProjectName).nuget.g.props`, `$(MSBuildProjectName).nuget.g.targets`. Removing reference projects will result in a faster repo per project restore, as less computation (traversing the graph) and less IO operations are necessary.\r\n4. Reference projects enlarge the dependency graph that tools like msbuild or Visual Studio need to care about. Every msbuild project needs to be parsed and evaluated which adds onto the overall build and tool performance. They also bloat solution files which are checked into the repository.\r\n5. Reference assemblies are [_an implementation detail_](https://github.com/dotnet/msbuild/issues/6543#issuecomment-861612099) and aren\u0027t expected to be surfaced as a primary output. With dedicated projects to generate reference assemblies, a contract needs to be established between the source and the reference project to make other projects that reference the source project use the reference assembly instead of the implementation assembly (for build perf reasons as explained above). This is very customized infrastructure in dotnet/runtime and required sequencing into a specific point in the build to make this happen. It\u0027s not guaranteed that this will continue to work as it\u0027s far from the the common path.\r\n\r\n## Solution\r\n\r\nAs of time of writing, there are 227 libraries under `src/libraries` and 63 of those are partial or full façade assemblies. Presuambly, \r\nthe 164 libraries which don\u0027t use [GenFacade\u0027s `\u003cIsPartialFacadeAssembly /\u003e` feature](https://github.com/dotnet/arcade/tree/main/src/Microsoft.DotNet.GenFacades) could leverage [Roslyn\u0027s RefOut feature](https://github.com/dotnet/roslyn/blob/main/docs/features/refout.md) to generate reference assemblies as a secondary build output of the source project.\r\n\r\nTo make this work, the following work needs to be done (in no particular order):\r\n\r\n- [ ] ApiCompat needs to compare the emitted reference assembly against the implementation assemblies to make sure that the public api surface matches between rids of the same base TFM. This is already handled by package validation but we want this coverage for libraries which aren\u0027t packable (i.e. most of what\u0027s inside the shared framework) and we want this validation to fail the build for inner loop development.\r\n- [x] Use PackageValidation to make sure the api surface matches between compatible TFMs (ie netstandard2.0 and net6.0).\r\n- [ ] Leverage a tool like GenAPI to emit the public api surface area of all TFMs combined in one C# file. Put that file into `src\\$(MSBuildProjectName).ref.cs` and exclude that file from being imported when the `\u003cEnableDefaultItems /\u003e` or `\u003cEnableDefaultCompileItems /\u003e` properties are set to true. Update the to that warns about public API changes to also watch for changes to that file.\r\n- [ ] Diff the produced reference assemblies (roslyn vs runtime) and teach Roslyn to emit as beautiful reference assemblies as the ones runtime produces via dedicated reference projects.\r\n\r\n### Partial façade assemblies\r\n\r\nFor the remaining 63 assemblies, `GenFacades` is used to add type forward attributes to the project\u0027s compilation input (via a generated `Compile` item) for public API that is missing from the compilation sources but which is available in any of the referenced assemblies (`ReferencePath`). Missing is defined as an API that is available in the reference assembly but not in the implementation compilation sources.\r\nAs an example, the `System.AppContext` type is exposed in the System.Runtime.dll reference assembly but its implementation is found in System.Private.CoreLib.dll and not in the System.Runtime.dll implementation assembly. The implementation assembly instead contains a type forward attribute that indicates that the type is exposed in another assembly.\r\n\r\nIt\u0027s yet unclear how to generate these type forwards without having a reference assembly available that represents the public API surface area. A possible solution to that could be to check in the type forwards, adding them to the compilation input and making sure that they are kept up-to-date. The problem with that is that Roslyn keeps passed-in type forward attributes in reference assemblies instead of following the type and replacing the attribute with the actual type. We should sync up with the Roslyn team to see if supporting this scenario is feasible.\r\n\r\ncc @danmoseley @jaredpar @ericstj @stephentoub @eerhardt \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e7.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-08-26T09:15:16Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Let roslyn generate reference assemblies from source projects and remove reference projects",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/61451",
        "createdAt":  "2021-11-11T03:18:09Z",
        "number":  61451,
        "author":  "kg",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC22j0A==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "MichalStrehovsky",
                                            "createdAt":  "2022-06-17T08:21:30Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "AntonLapounov",
                                            "createdAt":  "2022-07-25T22:23:37Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "matouskozak",
                                            "createdAt":  "2024-03-28T12:21:59Z"
                                        }
                                    ],
                          "totalCount":  3
                      },
        "updatedAt":  "2024-12-07T21:19:50Z",
        "body":  "Over the last few weeks I\u0027ve intermittently had my checkouts enter a bad state where builds always fail with these errors:\r\n\r\n```\r\n/home/kate/Projects/dotnet-runtime-wasm/.dotnet/sdk/6.0.100-rc.2.21505.57/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027/home/kate/Projects/dotnet-runtime-wasm/artifacts/bin/microsoft.netcore.app.ref/data/PlatformManifest.txt\u0027 because it did not exist. [/home/kate/Projects/dotnet-runtime-wasm/src/libraries/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.csproj]\r\n/home/kate/Projects/dotnet-runtime-wasm/.dotnet/sdk/6.0.100-rc.2.21505.57/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027/home/kate/Projects/dotnet-runtime-wasm/artifacts/bin/microsoft.netcore.app.ref/data/PlatformManifest.txt\u0027 because it did not exist. [/home/kate/Projects/dotnet-runtime-wasm/src/libraries/System.Numerics.Tensors/ref/System.Numerics.Tensors.csproj]\r\n/home/kate/Projects/dotnet-runtime-wasm/.dotnet/sdk/6.0.100-rc.2.21505.57/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027/home/kate/Projects/dotnet-runtime-wasm/artifacts/bin/microsoft.netcore.app.ref/data/PlatformManifest.txt\u0027 because it did not exist. [/home/kate/Projects/dotnet-runtime-wasm/src/libraries/System.Threading.AccessControl/ref/System.Threading.AccessControl.csproj]\r\n/home/kate/Projects/dotnet-runtime-wasm/.dotnet/sdk/6.0.100-rc.2.21505.57/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027/home/kate/Projects/dotnet-runtime-wasm/artifacts/bin/microsoft.netcore.app.ref/data/PlatformManifest.txt\u0027 because it did not exist. [/home/kate/Projects/dotnet-runtime-wasm/src/libraries/System.Windows.Extensions/ref/System.Windows.Extensions.csproj]\r\n/home/kate/Projects/dotnet-runtime-wasm/.dotnet/sdk/6.0.100-rc.2.21505.57/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027/home/kate/Projects/dotnet-runtime-wasm/artifacts/bin/microsoft.netcore.app.ref/data/PlatformManifest.txt\u0027 because it did not exist. [/home/kate/Projects/dotnet-runtime-wasm/src/libraries/Microsoft.Extensions.FileProviders.Physical/ref/Microsoft.Extensions.FileProviders.Physical.csproj]\r\n```\r\n\r\nI\u0027m using the repo-local ```.dotnet``` folder to build and nuking that folder doesn\u0027t fix it, neither does nuking the ```.nuget``` in my homedir. ```git clean -xffd``` also doesn\u0027t fix it. I\u0027m not actually sure how I fixed it last time but now my checkout seems to be busted for good.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOloU7LA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc45k0XW",
                                           "createdAt":  "2021-11-11T03:18:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @Anipik, @safern, @ViktorHofer\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nOver the last few weeks I\u0027ve intermittently had my checkouts enter a bad state where builds always fail with these errors:\r\n\r\n```\r\n/home/kate/Projects/dotnet-runtime-wasm/.dotnet/sdk/6.0.100-rc.2.21505.57/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027/home/kate/Projects/dotnet-runtime-wasm/artifacts/bin/microsoft.netcore.app.ref/data/PlatformManifest.txt\u0027 because it did not exist. [/home/kate/Projects/dotnet-runtime-wasm/src/libraries/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.csproj]\r\n/home/kate/Projects/dotnet-runtime-wasm/.dotnet/sdk/6.0.100-rc.2.21505.57/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027/home/kate/Projects/dotnet-runtime-wasm/artifacts/bin/microsoft.netcore.app.ref/data/PlatformManifest.txt\u0027 because it did not exist. [/home/kate/Projects/dotnet-runtime-wasm/src/libraries/System.Numerics.Tensors/ref/System.Numerics.Tensors.csproj]\r\n/home/kate/Projects/dotnet-runtime-wasm/.dotnet/sdk/6.0.100-rc.2.21505.57/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027/home/kate/Projects/dotnet-runtime-wasm/artifacts/bin/microsoft.netcore.app.ref/data/PlatformManifest.txt\u0027 because it did not exist. [/home/kate/Projects/dotnet-runtime-wasm/src/libraries/System.Threading.AccessControl/ref/System.Threading.AccessControl.csproj]\r\n/home/kate/Projects/dotnet-runtime-wasm/.dotnet/sdk/6.0.100-rc.2.21505.57/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027/home/kate/Projects/dotnet-runtime-wasm/artifacts/bin/microsoft.netcore.app.ref/data/PlatformManifest.txt\u0027 because it did not exist. [/home/kate/Projects/dotnet-runtime-wasm/src/libraries/System.Windows.Extensions/ref/System.Windows.Extensions.csproj]\r\n/home/kate/Projects/dotnet-runtime-wasm/.dotnet/sdk/6.0.100-rc.2.21505.57/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027/home/kate/Projects/dotnet-runtime-wasm/artifacts/bin/microsoft.netcore.app.ref/data/PlatformManifest.txt\u0027 because it did not exist. [/home/kate/Projects/dotnet-runtime-wasm/src/libraries/Microsoft.Extensions.FileProviders.Physical/ref/Microsoft.Extensions.FileProviders.Physical.csproj]\r\n```\r\n\r\nI\u0027m using the repo-local ```.dotnet``` folder to build and nuking that folder doesn\u0027t fix it, neither does nuking the ```.nuget``` in my homedir. ```git clean -xffd``` also doesn\u0027t fix it. I\u0027m not actually sure how I fixed it last time but now my checkout seems to be busted for good.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ekg\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-11-11T03:18:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc45pwpa",
                                           "createdAt":  "2021-11-12T16:31:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kg",
                                           "body":  "If I do a regular build.sh instead of the build I\u0027m trying to do, the wasm build I\u0027m trying to do starts failing with this instead:\r\n```\r\n/home/kate/.nuget/packages/microsoft.dotnet.sharedframework.sdk/7.0.0-beta.21555.2/targets/sharedfx.targets(476,5): error : Assembly \u0027netstandard\u0027 is missing dependency \u0027System.Xml.ReaderWriter\u0027 [/home/kate/Projects/dotnet-runtime-wasm/src/installer/pkg/sfx/Microsoft.NETCore.App/Microsoft.NETCore.App.Runtime.sfxproj]\r\n/home/kate/.nuget/packages/microsoft.dotnet.sharedframework.sdk/7.0.0-beta.21555.2/targets/sharedfx.targets(476,5): error : Assembly \u0027netstandard\u0027 is missing dependency \u0027System.Xml.XDocument\u0027 [/home/kate/Projects/dotnet-runtime-wasm/src/installer/pkg/sfx/Microsoft.NETCore.App/Microsoft.NETCore.App.Runtime.sfxproj]\r\n/home/kate/.nuget/packages/microsoft.dotnet.sharedframework.sdk/7.0.0-beta.21555.2/targets/sharedfx.targets(476,5): error : Assembly \u0027netstandard\u0027 is missing dependency \u0027System.Xml.XmlSerializer\u0027 [/home/kate/Projects/dotnet-runtime-wasm/src/installer/pkg/sfx/Microsoft.NETCore.App/Microsoft.NETCore.App.Runtime.sfxproj]\r\n/home/kate/.nuget/packages/microsoft.dotnet.sharedframework.sdk/7.0.0-beta.21555.2/targets/sharedfx.targets(476,5): error : Assembly \u0027netstandard\u0027 is missing dependency \u0027System.Xml.XPath.XDocument\u0027 [/home/kate/Projects/dotnet-runtime-wasm/src/installer/pkg/sfx/Microsoft.NETCore.App/Microsoft.NETCore.App.Runtime.sfxproj]\r\n/home/kate/.nuget/packages/microsoft.dotnet.sharedframework.sdk/7.0.0-beta.21555.2/targets/sharedfx.targets(476,5): error : Assembly \u0027netstandard\u0027 is missing dependency \u0027System.Xml.XPath\u0027 [/home/kate/Projects/dotnet-runtime-wasm/src/installer/pkg/sfx/Microsoft.NETCore.App/Microsoft.NETCore.App.Runtime.sfxproj]\r\n```",
                                           "updatedAt":  "2021-11-12T16:31:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc45qAv5",
                                           "createdAt":  "2021-11-12T18:07:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "cc: @jkoritzinsky any ideas? ",
                                           "updatedAt":  "2021-11-12T18:07:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc45qA_M",
                                           "createdAt":  "2021-11-12T18:09:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "This might be due to the PlatformManifest caching in the SDK if they\u0027re switching between commits before and after us using the RC2 SDK. Other than that, I\u0027m not sure what it would be",
                                           "updatedAt":  "2021-11-12T18:09:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc45qDos",
                                           "createdAt":  "2021-11-12T18:26:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kg",
                                           "body":  "I\u0027ve been switching commits, yes. How do I properly flush things? Simply cleaning the repo and nuking my .nuget has not been sufficient. Eventually after an hour or two of building random targets and deleting things I tend to get it to work, but I haven\u0027t come up with a set of steps.",
                                           "updatedAt":  "2021-11-12T18:26:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc45qToP",
                                           "createdAt":  "2021-11-12T19:32:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "Try deleting your .dotnet folder when you switch between commits. If you have the RC2 sdk in that folder, it will be used when you\u0027re on a commit that has RC1 mentioned in global.json.",
                                           "updatedAt":  "2021-11-12T19:32:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc45rwgc",
                                           "createdAt":  "2021-11-13T03:33:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kg",
                                           "body":  "\u003e \r\n\u003e Try deleting your .dotnet folder when you switch between commits. If you have the RC2 sdk in that folder, it will be used when you\u0027re on a commit that has RC1 mentioned in global.json.\r\n\r\nI\u0027ve definitely been doing that, unfortunately. Is there anywhere else it might be tucking things?",
                                           "updatedAt":  "2021-11-13T03:33:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc45rwyk",
                                           "createdAt":  "2021-11-13T03:44:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "@jkoritzinsky I guess it could be some sort of switching in between branches and the RC2 SDK being present but the build scripts not having the switch to disable the SDK Targeting Pack cache and that\u0027s why it can\u0027t find the PlatformManifest.txt (probably cached from a previous test build?) when building the sources? Or even running `dotnet build` on a test project with the RC2 SDK and that caching the result on an MSBuild node, then switching to a branch that doesn\u0027t contain the env vars to disable caching on the build script and building again with the RC2 SDK because the `.dotnet` folder was persisted? ",
                                           "updatedAt":  "2021-11-13T03:44:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc45rxGO",
                                           "createdAt":  "2021-11-13T03:55:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kg",
                                           "body":  "Could a compiler server process be sticking around with bad state? Do I need to make sure to pkill something?",
                                           "updatedAt":  "2021-11-13T03:55:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc455gbg",
                                           "createdAt":  "2021-11-17T09:06:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kg",
                                           "body":  "The most recent time I hit this, it was from rebasing forward by a few dozen commits. I attempted this to fix it:\r\n```\r\nkate@reeir-debian2:~/Projects/dotnet-runtime-wasm$ pkill -9 dotnet\r\nkate@reeir-debian2:~/Projects/dotnet-runtime-wasm$ rm -rf .dotnet\r\nkate@reeir-debian2:~/Projects/dotnet-runtime-wasm$ rm -rf artifacts\r\nkate@reeir-debian2:~/Projects/dotnet-runtime-wasm$ rm -rf ~/.nuget\r\n```\r\nAnd it worked. The pkill is the new part, so I think maybe the compiler server is caching old stuff.",
                                           "updatedAt":  "2021-11-17T09:06:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc457K2Y",
                                           "createdAt":  "2021-11-17T17:45:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "More than the compiler server I believe it is MSBuild nodes that are caching the Targeting Pack assets. You can disable this entirely in your machine by setting: \r\n```\r\nexport DOTNETSDK_ALLOW_TARGETING_PACK_CACHING=0\r\n```\r\n\r\nThat way we will disable that feature, that I\u0027m 99% sure it is causing this problem as you are switching between branches and the error is coming from the SDK that added that feature.",
                                           "updatedAt":  "2021-11-17T17:45:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46F5AF",
                                           "createdAt":  "2021-11-20T09:33:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kg",
                                           "body":  "I\u0027m now randomly getting this without even changing commits, I\u0027ll do a successful build and then later I do another and my repo no longer builds. Would this be *caused* in some cases by deleting the artifacts folder?",
                                           "updatedAt":  "2021-11-20T09:33:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46GIYR",
                                           "createdAt":  "2021-11-20T17:46:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "It shouldn\u0027t. Did you try setting the env var I suggested? \n\nBtw do you have a binlog to share?",
                                           "updatedAt":  "2021-11-20T17:46:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46GOdq",
                                           "createdAt":  "2021-11-20T21:00:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kg",
                                           "body":  "Will upload a binlog next time and try the env var. The set of 4 commands worked again, which is at least something.",
                                           "updatedAt":  "2021-11-20T21:00:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46gHJf",
                                           "createdAt":  "2021-11-29T10:20:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCEbUNw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kg",
                                                                               "createdAt":  "2021-11-29T18:10:09Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "adamsitnik",
                                           "body":  "I am now getting the same error on Windows, after `git clean -xfd`:\r\n\r\n\u003cdetails\u003e\r\n\r\n```log\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027D:\\projects\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\u0027 because it did not exist. [D:\\projects\\runtime\\src\\libraries\\Microsoft.Extensions.DependencyInjection.Abstractions\\ref\\Microsoft.Extensions.DependencyInjection.Abstractions.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027D:\\projects\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\u0027 because it did not exist. [D:\\projects\\runtime\\src\\libraries\\System.ComponentModel.Composition\\ref\\System.ComponentModel.Composition.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027D:\\projects\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\u0027 because it did not exist. [D:\\projects\\runtime\\src\\libraries\\Microsoft.Win32.Registry.AccessControl\\ref\\Microsoft.Win32.Registry.AccessControl.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027D:\\projects\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\u0027 because it did not exist. [D:\\projects\\runtime\\src\\libraries\\System.Runtime.Caching\\ref\\System.Runtime.Caching.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027D:\\projects\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\u0027 because it did not exist. [D:\\projects\\runtime\\src\\libraries\\System.Formats.Cbor\\ref\\System.Formats.Cbor.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027D:\\projects\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\u0027 because it did not exist. [D:\\projects\\runtime\\src\\libraries\\System.Security.Cryptography.Xml\\ref\\System.Security.Cryptography.Xml.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027D:\\projects\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\u0027 because it did not exist. [D:\\projects\\runtime\\src\\libraries\\System.Security.Cryptography.Pkcs\\ref\\System.Security.Cryptography.Pkcs.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027D:\\projects\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\u0027 because it did not exist. [D:\\projects\\runtime\\src\\libraries\\System.Speech\\ref\\System.Speech.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027D:\\projects\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\u0027 because it did not exist. [D:\\projects\\runtime\\src\\libraries\\System.IO.Ports\\ref\\System.IO.Ports.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027D:\\projects\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\u0027 because it did not exist. [D:\\projects\\runtime\\src\\libraries\\System.Data.Odbc\\ref\\System.Data.Odbc.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027D:\\projects\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\u0027 because it did not exist. [D:\\projects\\runtime\\src\\libraries\\Microsoft.Win32.SystemEvents\\ref\\Microsoft.Win32.SystemEvents.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027D:\\projects\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\u0027 because it did not exist. [D:\\projects\\runtime\\src\\libraries\\System.Diagnostics.PerformanceCounter\\ref\\System.Diagnostics.PerformanceCounter.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027D:\\projects\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\u0027 because it did not exist. [D:\\projects\\runtime\\src\\libraries\\System.Numerics.Tensors\\ref\\System.Numerics.Tensors.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027D:\\projects\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\u0027 because it did not exist. [D:\\projects\\runtime\\src\\libraries\\System.DirectoryServices.Protocols\\ref\\System.DirectoryServices.Protocols.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027D:\\projects\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\u0027 because it did not exist. [D:\\projects\\runtime\\src\\libraries\\System.ServiceModel.Syndication\\ref\\System.ServiceModel.Syndication.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027D:\\projects\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\u0027 because it did not exist. [D:\\projects\\runtime\\src\\libraries\\System.Security.Permissions\\ref\\System.Security.Permissions.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027D:\\projects\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\u0027 because it did not exist. [D:\\projects\\runtime\\src\\libraries\\Microsoft.Extensions.Configuration.Abstractions\\ref\\Microsoft.Extensions.Configuration.Abstractions.csproj]\r\n```\r\n\r\n\u003c/details\u003e\r\n\r\nEdit 1: after:\r\n\r\n```cmd\r\n$env:DOTNETSDK_ALLOW_TARGETING_PACK_CACHING=0\r\n```\r\n\r\nI am getting only one error:\r\n\r\n```log\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027D:\\projects\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\u0027 because it did not exist. [D:\\projects\\runtime\\src\\libraries\\System.Net.Quic\\ref\\System.Net.Quic.cspro\r\n```\r\n\r\nEdit 2: after `taskkill /IM \"dotnet.exe\" /F` I was able to build everything without a single error",
                                           "updatedAt":  "2021-11-29T10:48:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46lIh3",
                                           "createdAt":  "2021-11-30T16:40:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "I think this is becoming an issue in between using `dotnet build` on source projects where the caching feature is not disabled as the env var is only set on the build scripts and then using `dotnet build` or `dotnet test` on a test project where the platform manifest is needed.\r\n\r\n@rainersigwald is it possible that we can also support an MSBuild property to disable the targeting pack caching? ",
                                           "updatedAt":  "2021-11-30T16:40:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46lJN6",
                                           "createdAt":  "2021-11-30T16:43:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCEm5mA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "safern",
                                                                               "createdAt":  "2021-11-30T16:45:30Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "rainersigwald",
                                           "body":  "Yeah, we can add an input to the task and pass a property through to it. It would require an SDK update. @marcpopMSFT would you have any objection to adding such a feature to an SDK task when the only expected consumer is the runtime build? I personally don\u0027t . . .",
                                           "updatedAt":  "2021-11-30T16:43:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46lN_f",
                                           "createdAt":  "2021-11-30T17:04:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCFOqwg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "safern",
                                                                               "createdAt":  "2021-11-30T17:06:25Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kg",
                                                                               "createdAt":  "2021-12-04T09:23:18Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "rainersigwald",
                                           "body":  "Let\u0027s have that discussion in https://github.com/dotnet/sdk/issues/22834.\r\n\r\n@kg the cache in question is in an MSBuild worker process so `pkill -9 dotnet` (or even the subset of them that are running a command line with `MSBuild.dll` in it) should be all you need (and faster than deleting/regenerating `.dotnet`).\r\n\r\nAnother possibility for a workaround that could be checked in is a `Directory.Build.rsp` with `-nodeReuse:false` in it. That would slow down builds (every build has to pay process-creation overhead for MSBuild workers and starts with clean memory caches) but should eliminate this caching problem.",
                                           "updatedAt":  "2021-11-30T17:04:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46sxD8",
                                           "createdAt":  "2021-12-02T16:56:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "I\u0027ve hit this as well when switching from the `main` to `release/6.0` branch. ",
                                           "updatedAt":  "2021-12-02T16:56:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46xSFT",
                                           "createdAt":  "2021-12-04T09:24:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kg",
                                           "body":  "In the long run it could make sense to have a special command that just specifically kills any msbuild compiler server processes that have cached info for a given repository. We could do that once at the start of every build for runtime so that this problem is automatically avoided (we\u0027ll only have to start a few workers, right?), or perhaps only do it if the repo SHA has changed.",
                                           "updatedAt":  "2021-12-04T09:24:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4-HMbC",
                                           "createdAt":  "2022-02-16T19:23:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCPIMiQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "adamsitnik",
                                                                               "createdAt":  "2022-02-17T09:28:09Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "deeprobin",
                                           "body":  "I can verify this build failure.\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: PlatformManifest konnte nicht von \"E:\\external\\dotnet\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\" geladen werden, weil es nicht vorhanden ist. [E:\\external\\dotnet\\runtime\\src\\libraries\\Microsoft.Extensions.DependencyInjection.Abstractions\\ref\\Microsoft.Extensions.DependencyInjection.Abstractions.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: PlatformManifest konnte nicht von \"E:\\external\\dotnet\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\" geladen werden, weil es nicht vorhanden ist. [E:\\external\\dotnet\\runtime\\src\\libraries\\Microsoft.Extensions.Logging.Abstractions\\ref\\Microsoft.Extensions.Logging.Abstractions.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: PlatformManifest konnte nicht von \"E:\\external\\dotnet\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\" geladen werden, weil es nicht vorhanden ist. [E:\\external\\dotnet\\runtime\\src\\libraries\\Microsoft.Extensions.FileProviders.Composite\\ref\\Microsoft.Extensions.FileProviders.Composite.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: PlatformManifest konnte nicht von \"E:\\external\\dotnet\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\" geladen werden, weil es nicht vorhanden ist. [E:\\external\\dotnet\\runtime\\src\\libraries\\System.Drawing.Common\\ref\\System.Drawing.Common.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: PlatformManifest konnte nicht von \"E:\\external\\dotnet\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\" geladen werden, weil es nicht vorhanden ist. [E:\\external\\dotnet\\runtime\\src\\libraries\\System.DirectoryServices.AccountManagement\\ref\\System.DirectoryServices.AccountManagement.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: PlatformManifest konnte nicht von \"E:\\external\\dotnet\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\" geladen werden, weil es nicht vorhanden ist. [E:\\external\\dotnet\\runtime\\src\\libraries\\System.Formats.Cbor\\ref\\System.Formats.Cbor.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: PlatformManifest konnte nicht von \"E:\\external\\dotnet\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\" geladen werden, weil es nicht vorhanden ist. [E:\\external\\dotnet\\runtime\\src\\libraries\\System.IO.Packaging\\ref\\System.IO.Packaging.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: PlatformManifest konnte nicht von \"E:\\external\\dotnet\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\" geladen werden, weil es nicht vorhanden ist. [E:\\external\\dotnet\\runtime\\src\\libraries\\System.IO.Pipelines\\ref\\System.IO.Pipelines.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: PlatformManifest konnte nicht von \"E:\\external\\dotnet\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\" geladen werden, weil es nicht vorhanden ist. [E:\\external\\dotnet\\runtime\\src\\libraries\\System.Resources.Extensions\\ref\\System.Resources.Extensions.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: PlatformManifest konnte nicht von \"E:\\external\\dotnet\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\" geladen werden, weil es nicht vorhanden ist. [E:\\external\\dotnet\\runtime\\src\\libraries\\System.Numerics.Tensors\\ref\\System.Numerics.Tensors.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: PlatformManifest konnte nicht von \"E:\\external\\dotnet\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\" geladen werden, weil es nicht vorhanden ist. [E:\\external\\dotnet\\runtime\\src\\libraries\\System.Security.Cryptography.ProtectedData\\ref\\System.Security.Cryptography.ProtectedData.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: PlatformManifest konnte nicht von \"E:\\external\\dotnet\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\" geladen werden, weil es nicht vorhanden ist. [E:\\external\\dotnet\\runtime\\src\\libraries\\System.ServiceModel.Syndication\\ref\\System.ServiceModel.Syndication.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: PlatformManifest konnte nicht von \"E:\\external\\dotnet\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\" geladen werden, weil es nicht vorhanden ist. [E:\\external\\dotnet\\runtime\\src\\libraries\\Microsoft.Extensions.Configuration.Ini\\ref\\Microsoft.Extensions.Configuration.Ini.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: PlatformManifest konnte nicht von \"E:\\external\\dotnet\\runtime\\artifacts\\bin\\microsoft.netcore.app.ref\\data\\PlatformManifest.txt\" geladen werden, weil es nicht vorhanden ist. [E:\\external\\dotnet\\runtime\\src\\libraries\\Microsoft.Extensions.Configuration.Json\\ref\\Microsoft.Extensions.Configuration.Json.csproj]\r\n```\r\n\r\nI can verify Adams workaround using `taskkill /IM \"dotnet.exe\" /F`.\r\n\r\n`dotnet build-server shutdown` might also work (but I haven\u0027t tested this - credits @Wraith2)",
                                           "updatedAt":  "2022-02-16T19:29:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4-HlLU",
                                           "createdAt":  "2022-02-16T20:21:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Why not just generate the PlatformManifest early enough so that the environment variable isn\u0027t necessary in the first place?",
                                           "updatedAt":  "2022-02-16T20:21:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5iAMzv",
                                           "createdAt":  "2023-07-20T16:20:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "The remaining work is to make sure the platform manifest is generated as part of the \"libs.sfx\" subset, not in \"libs.pretest\" which runs after OOBs are built, and remove the environment variable that disabled changing.\r\n\r\nNot important atm, moving to Future.",
                                           "updatedAt":  "2023-07-20T16:20:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6WhTss",
                                           "createdAt":  "2024-12-07T21:19:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AaronRobinsonMSFT",
                                           "body":  "For some reason, I\u0027m hitting this regularly on macOS. I\u0027ve done a rebuild from a clean repo several times.\n\n```\n.../src/runtime/.dotnet/sdk/9.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027.../src/runtime/artifacts/bin/microsoft.netcore.app.ref/data/PlatformManifest.txt\u0027 because it did not exist. [.../src/runtime/src/libraries/System.Diagnostics.EventLog/ref/System.Diagnostics.EventLog.csproj::TargetFramework=net10.0]\n.../src/runtime/.dotnet/sdk/9.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027.../src/runtime/artifacts/bin/microsoft.netcore.app.ref/data/PlatformManifest.txt\u0027 because it did not exist. [.../src/runtime/src/libraries/Microsoft.Bcl.Cryptography/src/Microsoft.Bcl.Cryptography.csproj::TargetFramework=net10.0]\n.../src/runtime/.dotnet/sdk/9.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027.../src/runtime/artifacts/bin/microsoft.netcore.app.ref/data/PlatformManifest.txt\u0027 because it did not exist. [.../src/runtime/src/libraries/System.Speech/ref/System.Speech.csproj::TargetFramework=net10.0]\n.../src/runtime/.dotnet/sdk/9.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027.../src/runtime/artifacts/bin/microsoft.netcore.app.ref/data/PlatformManifest.txt\u0027 because it did not exist. [.../src/runtime/src/libraries/System.ServiceModel.Syndication/ref/System.ServiceModel.Syndication.csproj::TargetFramework=net10.0]\n.../src/runtime/.dotnet/sdk/9.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027.../src/runtime/artifacts/bin/microsoft.netcore.app.ref/data/PlatformManifest.txt\u0027 because it did not exist. [.../src/runtime/src/libraries/System.Formats.Nrbf/ref/System.Formats.Nrbf.csproj::TargetFramework=net10.0]\n.../src/runtime/.dotnet/sdk/9.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027.../src/runtime/artifacts/bin/microsoft.netcore.app.ref/data/PlatformManifest.txt\u0027 because it did not exist. [.../src/runtime/src/libraries/System.Net.ServerSentEvents/ref/System.Net.ServerSentEvents.csproj::TargetFramework=net10.0]\n.../src/runtime/.dotnet/sdk/9.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027.../src/runtime/artifacts/bin/microsoft.netcore.app.ref/data/PlatformManifest.txt\u0027 because it did not exist. [.../src/runtime/src/libraries/System.DirectoryServices/ref/System.DirectoryServices.csproj::TargetFramework=net10.0]\n.../src/runtime/.dotnet/sdk/9.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027.../src/runtime/artifacts/bin/microsoft.netcore.app.ref/data/PlatformManifest.txt\u0027 because it did not exist. [.../src/runtime/src/libraries/Microsoft.Extensions.Logging.Configuration/ref/Microsoft.Extensions.Logging.Configuration.csproj::TargetFramework=net10.0]\n.../src/runtime/.dotnet/sdk/9.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.ConflictResolution.targets(40,5): error NETSDK1042: Could not load PlatformManifest from \u0027.../src/runtime/artifacts/bin/microsoft.netcore.app.ref/data/PlatformManifest.txt\u0027 because it did not exist. [.../src/runtime/src/libraries/Microsoft.Extensions.Logging.EventSource/src/Microsoft.Extensions.Logging.EventSource.csproj::TargetFramework=net10.0]\n```",
                                           "updatedAt":  "2024-12-07T21:19:49Z"
                                       }
                                   ],
                         "totalCount":  24
                     },
        "title":  "Intermittent build failures caused by missing PlatformManifest.txt",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/66090",
        "createdAt":  "2022-03-02T15:58:02Z",
        "number":  66090,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-07-12T20:19:16Z",
        "body":  "Reference source files under \"src/libraries/*/ref\" are generated and updated on demand via the [GenAPI](https://github.com/dotnet/arcade/blob/main/src/Microsoft.DotNet.GenAPI) tooling. GenAPI inspects the API surface area of a library\u0027s intermediate assembly and based on different inputs, emits the reference source file. One of the inputs to GenAPI is an attribute exclusion list to make it possible to avoid certain attributes from the reference source file. This option is used by our libraries and configured via this file: https://github.com/dotnet/runtime/blob/main/eng/DefaultGenApiDocIds.txt.\r\n\r\nThis means that the libraries\u0027 reference assemblies do **not** contain any of these attributes (unless someone manually updates the reference source file) and by that diverge from their counterpart (implementation assembly).\r\n\r\nAdmittedly, this makes implementing https://github.com/dotnet/runtime/issues/58163 much harder but **there\u0027s a more important present issue**:\r\nSince .NET 6, reference assemblies aren\u0027t part of our out-of-band packages anymore. That means that our customers when consuming our packages, bind/compile against the package\u0027s implementation assembly and not its reference assembly. Therefore the API surface area that we carefully maintain via the reference source files isn\u0027t the actual API surface area that our customers target. \r\n\r\nAs an example, the `ObsoleteAttribute` and `EditorBrowsableAttribute` types were until [just recently](https://github.com/dotnet/runtime/commit/e18a77feff92fe6cdf8b891aa3b44fb1acb972d1) not in sync between the reference and the implementation assembly and some of the recent obsoletion changes potentially didn\u0027t reach customers.\r\n\r\nNote that Roslyn\u0027s RefOut/RefOnly feature doesn\u0027t omit attributes and the public api surface area of their emitted reference assemblies match their implementation assembly as closely as possible.\r\n\r\nI suggest that we stop omitting attributes from the reference source so that we have an honest representation of the public api surface area that our customers bind on. FWIW [as soon as we start leveraging Roslyn to generate our reference assemblies](https://github.com/dotnet/runtime/pull/65775) we won\u0027t be able to omit attributes anymore.\r\n\r\n@eerhardt @ericstj ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOPwhgFQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc4_AeYT",
                                           "createdAt":  "2022-03-02T15:58:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nReference source files under \"src/libraries/*/ref\" are generated and updated on demand via the [GenAPI](https://github.com/dotnet/arcade/blob/main/src/Microsoft.DotNet.GenAPI) tooling. GenAPI inspects the API surface area of a library\u0027s intermediate assembly and based on different inputs, emits the reference source file. One of the inputs to GenAPI is an attribute exclusion list to make it possible to avoid certain attributes from the reference source file. This option is used by our libraries and configured via this file: https://github.com/dotnet/runtime/blob/main/eng/DefaultGenApiDocIds.txt.\r\n\r\nThis means that the libraries\u0027 reference assemblies do **not** contain any of these attributes (unless someone manually updates the reference source file) and by that diverge from their counterpart (implementation assembly).\r\n\r\nAdmittedly, this makes implementing https://github.com/dotnet/runtime/issues/58163 much harder but **there\u0027s a more important present issue**:\r\nSince .NET 6, reference assemblies aren\u0027t part of our out-of-band packages anymore. That means that our customers when consuming our packages, bind/compile against the package\u0027s implementation assembly and not its reference assembly. Therefore the API surface area that we carefully maintain via the reference source files isn\u0027t the actual API surface area that our customers target. \r\n\r\nAs an example, the `ObsoleteAttribute` and `EditorBrowsableAttribute` types were until [just recently](https://github.com/dotnet/runtime/commit/e18a77feff92fe6cdf8b891aa3b44fb1acb972d1) not in sync between the reference and the implementation assembly.\r\n\r\nNote that Roslyn\u0027s RefOut/RefOnly feature doesn\u0027t omit attributes and the public api surface area of their emitted reference assemblies match their implementation assembly as closely as possible.\r\n\r\nI suggest that we stop omitting attributes from the reference source so that we have an honest representation of the public api surface area that our customers bind on. FWIW [as soon as we start leveraging Roslyn to generate our reference assemblies](https://github.com/dotnet/runtime/pull/65775) we won\u0027t be able to omit attributes anymore.\r\n\r\n@eerhardt @ericstj \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`Design Discussion`, `area-Infrastructure-libraries`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e7.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-03-02T15:58:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_Af-R",
                                           "createdAt":  "2022-03-02T16:04:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCRGl1w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkotas",
                                                                               "createdAt":  "2022-03-02T16:15:22Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "bartonjs",
                                                                               "createdAt":  "2022-03-02T18:01:08Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "stephentoub",
                                           "body":  "\u003e I suggest that we stop omitting attributes from the reference source\r\n\r\nNo :smile:\r\n\r\nReference source is for the public surface area.  For better or worse, there are many attributes that are about implementation detail and not about public surface area.  Such attributes must not be in the refs. It\u0027s effectively then guaranteeing implementation publicly, causing unnecessary churn in the public refs when private details change and all the fallout that yields, etc. ",
                                           "updatedAt":  "2022-03-02T16:12:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_AnmL",
                                           "createdAt":  "2022-03-02T16:34:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Did you see the part where I\u0027m explaining that the implementation assembly is the contract when a reference assembly doesn\u0027t exist? In example all the out of band packages that we ship.\n\nAspNetCore\u0027s reference assemblies are generated by roslyn which doesn\u0027t omit such attributes. Customers who ship their library via nuget packages don\u0027t include reference assemblies and even if they did, these attributes would be present. Are you saying that our partners and customers are all incorrectly authoring their contract and leaking implementation details? ",
                                           "updatedAt":  "2022-03-02T16:34:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_An_r",
                                           "createdAt":  "2022-03-02T16:36:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "stephentoub",
                                           "body":  "\u003e Did you see the part where I\u0027m explaining that the implementation assembly is the contract when a reference assembly doesn\u0027t exist?\r\n\r\nYes\r\n\r\n\u003e Are you saying that our partners and customers are all incorrectly authoring their contract and leaking implementation details?\r\n\r\nI\u0027m saying that we have a much higher bar than most, and if we\u0027re going to use reference assemblies at all, we should do it right.  Including implementation details in reference assemblies is not doing it right. And, yes, anyone including attributes like MemberNotNull(_privateField) in their ref assemblies is leaking implementation details; that\u0027s not an opinion, that\u0027s a fact.",
                                           "updatedAt":  "2022-03-02T16:38:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_Au1r",
                                           "createdAt":  "2022-03-02T16:57:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "That means that all the libraries that don\u0027t ship a reference assembly (all out of band libraries) must not use attributes which are leaking implementation details like the one discussed.\n\nAlso as the issue title suggests, we should decide if we want our **reference source** file to represent the public API surface area that consumers bind on or a theoretical optimized contract which isn\u0027t used anywhere.\n\nDon\u0027t get me wrong, I absolutely agree with your statement that a contract shouldn\u0027t leak implementation details but it also sounds like the entire ecosystem isn\u0027t honoring these principals which is irritating.\n\nIn addition to that it sounds like Roslyn isn\u0027t authoring contract assemblies correctly as they leak implementation details.",
                                           "updatedAt":  "2022-03-02T16:57:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_Awmr",
                                           "createdAt":  "2022-03-02T17:05:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "stephentoub",
                                           "body":  "\u003e That means that all the libraries that don\u0027t ship a reference assembly (all out of band libraries) must not use attributes which are leaking implementation details like the one discussed.\r\n\r\nNo, it doesn\u0027t mean that; it means by not shipping a reference assembly we\u0027re apparently choosing to leak implementation details.  It doesn\u0027t mean we should start leaking implementation details everywhere else.",
                                           "updatedAt":  "2022-03-02T17:05:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_BFt6",
                                           "createdAt":  "2022-03-02T18:33:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Thanks for the responses so far.\n\n@stephentoub @eerhardt @bartonjs @ericstj is anyone actually concerned  that the reference source doesn\u0027t represent the libraries\u0027 public API surface area when they ship without a reference assembly (ie packages)?\n\nAsking because if not, I will just close this issue and not think about it any further. I believed that we want the checked in reference source to be the actual contract but after this discussion I\u0027m not so sure about that anymore.",
                                           "updatedAt":  "2022-03-02T18:33:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_BcEG",
                                           "createdAt":  "2022-03-02T20:20:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "stephentoub",
                                           "body":  "\u003e I believed that we want the checked in reference source to be the actual contract\r\n\r\nThe purpose of checked in reference source is to be the actual contract.  That\u0027s its raison d\u0027etre.  Which is why you see me pushing back on including things that aren\u0027t part of the contract.\r\n\r\n\u003e is anyone actually concerned that the reference source doesn\u0027t represent the libraries\u0027 public API surface area when they ship without a reference assembly\r\n\r\nIn an ideal world, I think we should have reference assemblies for everything we ship, and they should contain the contract, the whole contract, and nothing but the contract.  We\u0027ve skimped on that in the case of some of our assemblies.  We could choose to say that for cost reasons we\u0027re not going to fix that, or for concerns about download size we\u0027re not going to fix that, or whatever, and that may be fine.  If we stay on that path, however, we shouldn\u0027t use that as an argument to then sacrifice the correctness of the contract in places where we do ship one.",
                                           "updatedAt":  "2022-03-02T20:20:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_CGAV",
                                           "createdAt":  "2022-03-02T23:45:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bartonjs",
                                           "body":  "For the packages that ship without being rid-split, I don\u0027t have any real issue with using the normal \"the lib is the ref\" model.  It\u0027s what most packages that most people ship will do, and is fine.  (I\u0027d actually prefer that we used intentional ref DLLs in those packages, too, but I can buy both the \"it\u0027s not normal\" and \"it\u0027s not free\" (increases the size of the nupkg) arguments)\r\n\r\nOnce there\u0027s a RID-split then it\u0027s important to understand what\u0027s \"the contract\" vs the implementation (not to mention that we need something in the AnyOS slot anyways).  Anywhere we have those in our OOB packages (System.Security.Cryptography.Pkcs springs to mind) we need the ref.  And many of our inbox assemblies also are \"RID\" split, and so having the separate contract assembly provides for the one true view for the build.\r\n\r\n\u003e is anyone actually concerned that the reference source doesn\u0027t represent the libraries\u0027 public API surface area when they ship without a reference assembly\r\n\r\nYes, and no.\r\n\r\nThe best way to explain my position here is \"the ref.cs file represents anything that has made it through the API review process\".  Looking at its history for any particular assembly shows the customer-visible changes over time... we added this, we obsoleted that... etc.  `[MemberNotNull]` has no bearing on that unless it\u0027s for protected/public fields... and we don\u0027t have those (and our guidance to others is to not have them, either).\r\n\r\nSo the ref.cs should absolutely have anything in it that might make an impact on our docs (obsoletion, the member existing, etc), and should represent the idealized customer view.  We don\u0027t include private members in it, because they don\u0027t matter.  Any attributes that were feeding data to source generators wouldn\u0027t matter.  Things that don\u0027t matter wouldn\u0027t go to API Review, and therefore shouldn\u0027t be in the file.\r\n\r\nIn a perfect world, the things that don\u0027t matter also wouldn\u0027t be in the reference assembly that the customer used, either. ",
                                           "updatedAt":  "2022-03-02T23:45:06Z"
                                       }
                                   ],
                         "totalCount":  9
                     },
        "title":  "Reference source files aren\u0027t representing the public api contract that customers bind on",
        "labels":  [
                       "design-discussion",
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/66201",
        "createdAt":  "2022-03-04T17:26:43Z",
        "number":  66201,
        "author":  "ericstj",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCRfspw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "joperezr",
                                            "createdAt":  "2022-03-04T17:30:06Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2022-12-05T21:58:53Z",
        "body":  "See discussion in https://github.com/dotnet/runtime/pull/66176 as well as https://github.com/dotnet/runtime/issues/28796.  Since this package was introduced we\u0027ve never had coverage of it since it\u0027s the only library package we build that requires runtime-specific packages as dependencies.\r\n\r\nThis has caused regressions numerous times because the package is \"special\" and often overlooked and that special-ness has made it exempt from testing which makes this worse.\r\n\r\nThis issue could be moot depending on the resolution of https://github.com/dotnet/iot/issues/1797, but I\u0027d like to file it to track the concern since we\u0027ve broken Ports multiple times since it was introduced.\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOT8Oupg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc4_JK9W",
                                           "createdAt":  "2022-03-04T17:26:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nSee discussion in https://github.com/dotnet/runtime/pull/66176 as well as https://github.com/dotnet/runtime/issues/28796.  Since this package was introduced we\u0027ve never had coverage of it since it\u0027s the only library package we build that requires runtime-specific packages as dependencies.\r\n\r\nThis has caused regressions numerous times because the package is \"special\" and often overlooked and that special-ness has made it exempt from testing which makes this worse.\r\n\r\nThis issue could be moot depending on the resolution of https://github.com/dotnet/iot/issues/1797, but I\u0027d like to file it to track the concern since we\u0027ve broken Ports multiple times since it was introduced.\r\n\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eericstj\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-03-04T17:26:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CvKAz",
                                           "createdAt":  "2022-05-06T14:03:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@ericstj since you opened this, what are your thoughts on how to enable package validation for runtime.native.System.IO.Ports?",
                                           "updatedAt":  "2022-05-06T14:03:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5PHajR",
                                           "createdAt":  "2022-11-25T11:12:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "gentle ping @ericstj regarding my above question.",
                                           "updatedAt":  "2022-11-25T11:12:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Pw66m",
                                           "createdAt":  "2022-12-05T21:51:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "We\u0027d need to test it after running the platform specific build legs, as a join later in the build.  At one point we did package testing in this way, but it was expensive since it waited on everything to complete and took a long time to run.  We\u0027ve gotten faster at this testing, since we don\u0027t do all the RID specific restores any more so it might be feasible to do it, but I\u0027m not sure we have any step today that is a join after vertical legs and allConfigurations.\r\n\r\nAnother (different) way to test this would just be some redundancy around the expected packages for each leg.  Something declaring what packages we\u0027d expect the build to produce as a safegaurd to catch if those were accidentally removed through refactoring.  Such a test could just maintain a checked in baseline and fail the build if it changes asking the developer to check in their change to the baseline if it was intentional.",
                                           "updatedAt":  "2022-12-05T21:58:53Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "No package validation coverage for runtime.native.System.IO.Ports",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/67089",
        "createdAt":  "2022-03-24T10:01:38Z",
        "number":  67089,
        "author":  "ManickaP",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-05-06T17:05:07Z",
        "body":  "ATM, msquic uses script that downloads necessary payloads from Helix. To get to them, the script must parse log files from AzDO, which is fragile and might break any moment anything changes in our CI.\r\nThe current script [`get-last-quic-tests.sh`](https://gist.github.com/ManickaP/82175f8dc653b6116b6fed7a308c6104).\r\n\r\nThe better solution is to publish both runtime (testhost) and potentially S.N.Quic tests binaries directly in our [pipeline](https://dev.azure.com/dnceng/public/_build?definitionId=686) artifacts. So far we publish:\r\n- `libraries_test_assets_${os}_${arch}_${conf}`: contains zip with all libraries test, i.e.: ~500MB\r\n- `libraries_bin_${os}_${arch}_${conf}`: contains some parts of testhost, it\u0027s missing some coreclr parts, cannot be used as-is as testhost\r\n- `CoreCLRProduct__${os}_${arch}_${conf}`: contains coreclr binaries, within coreclr/sharedFramework seem to be missing parts for the testhost\r\n\r\nThe last two artifacts seemingly comprising testhost are in our pipeline combined via https://github.com/dotnet/runtime/blob/main/src/libraries/pretest.proj, which does much more than just copy and it would be to hard to replicate in a script.\r\n\r\nBut there\u0027s a step in our pipeline which should produce the whole runtime: `Installer Build and Test coreclr ${os}_${arch} ${conf}`, e.g.: [\" Installer Build and Test coreclr  Linux_x64 Release\"](https://dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_apis/build/builds/1678628/logs/1123), where it should be possible to publish an artifact with a usable runtime.\r\n\r\nSo 2 things:\r\n- publish a runtime usable for the test to run\r\n- either download whole ~500MB of tests and pick S.N.Quic or also publish just S.N.Quic tests on its own\r\n\r\ncc: @nibanks\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOQr8Z9g==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5AOI9i",
                                           "createdAt":  "2022-03-24T10:01:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nATM, msquic uses script that downloads necessary payloads from Helix. To get to them, the script must parse log files from AzDO, which is fragile and might break any moment anything changes in our CI.\r\nThe current script [`get-last-quic-tests.sh`](https://gist.github.com/ManickaP/82175f8dc653b6116b6fed7a308c6104).\r\n\r\nThe better solution is to publish both runtime (testhost) and potentially S.N.Quic tests binaries directly in our [pipeline](https://dev.azure.com/dnceng/public/_build?definitionId=686) artifacts. So far we publish:\r\n- `libraries_test_assets_${os}_${arch}_${conf}`: contains zip with all libraries test, i.e.: ~500MB\r\n- `libraries_bin_${os}_${arch}_${conf}`: contains some parts of testhost, it\u0027s missing some coreclr parts, cannot be used as-is as testhost\r\n- `CoreCLRProduct__${os}_${arch}_${conf}`: contains coreclr binaries, within coreclr/sharedFramework seem to be missing parts for the testhost\r\n\r\nThe last two artifacts seemingly comprising testhost are in our pipeline combined via https://github.com/dotnet/runtime/blob/main/src/libraries/pretest.proj, which does much more than just copy and it would be to hard to replicate in a script.\r\n\r\nBut there\u0027s a step in our pipeline which should produce the whole runtime: `Installer Build and Test coreclr ${os}_${arch} ${conf}`, e.g.: [\" Installer Build and Test coreclr  Linux_x64 Release\"](https://dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_apis/build/builds/1678628/logs/1123), where it should be possible to publish an artifact with a usable runtime.\r\n\r\nSo 2 things:\r\n- publish a runtime usable for the test to run\r\n- either download whole ~500MB of tests and pick S.N.Quic or also publish just S.N.Quic tests on its own\r\n\r\ncc: @nibanks\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eManickaP\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-03-24T10:01:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5AP-oW",
                                           "createdAt":  "2022-03-24T18:38:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nATM, msquic uses script that downloads necessary payloads from Helix. To get to them, the script must parse log files from AzDO, which is fragile and might break any moment anything changes in our CI.\r\nThe current script [`get-last-quic-tests.sh`](https://gist.github.com/ManickaP/82175f8dc653b6116b6fed7a308c6104).\r\n\r\nThe better solution is to publish both runtime (testhost) and potentially S.N.Quic tests binaries directly in our [pipeline](https://dev.azure.com/dnceng/public/_build?definitionId=686) artifacts. So far we publish:\r\n- `libraries_test_assets_${os}_${arch}_${conf}`: contains zip with all libraries test, i.e.: ~500MB\r\n- `libraries_bin_${os}_${arch}_${conf}`: contains some parts of testhost, it\u0027s missing some coreclr parts, cannot be used as-is as testhost\r\n- `CoreCLRProduct__${os}_${arch}_${conf}`: contains coreclr binaries, within coreclr/sharedFramework seem to be missing parts for the testhost\r\n\r\nThe last two artifacts seemingly comprising testhost are in our pipeline combined via https://github.com/dotnet/runtime/blob/main/src/libraries/pretest.proj, which does much more than just copy and it would be to hard to replicate in a script.\r\n\r\nBut there\u0027s a step in our pipeline which should produce the whole runtime: `Installer Build and Test coreclr ${os}_${arch} ${conf}`, e.g.: [\" Installer Build and Test coreclr  Linux_x64 Release\"](https://dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_apis/build/builds/1678628/logs/1123), where it should be possible to publish an artifact with a usable runtime.\r\n\r\nSo 2 things:\r\n- publish a runtime usable for the test to run\r\n- either download whole ~500MB of tests and pick S.N.Quic or also publish just S.N.Quic tests on its own\r\n\r\ncc: @nibanks\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eManickaP\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-03-24T18:38:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CvJdf",
                                           "createdAt":  "2022-05-06T14:01:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e publish a runtime usable for the test to run\r\n\r\nWe had been doing that but because of storage limitations we had to disable it for PRs. For official builds you should already be able to access the runtime and targeting packs from the AzDO pipeline artifacts and from the dotnet7 feed.",
                                           "updatedAt":  "2022-05-06T14:01:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CvJfo",
                                           "createdAt":  "2022-05-06T14:01:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "This issue has been marked `needs-author-action` and may be missing some important information.",
                                           "updatedAt":  "2022-05-06T14:01:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CvpHP",
                                           "createdAt":  "2022-05-06T16:20:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ManickaP",
                                           "body":  "Where exactly? I haven\u0027t found a usable runtime on the public pipeline.",
                                           "updatedAt":  "2022-05-06T16:20:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Cvvbm",
                                           "createdAt":  "2022-05-06T16:52:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Official builds don\u0027t run in the public but in the internal pipeline: https://dnceng.visualstudio.com/internal/_build?definitionId=679.\r\n\r\nNaive question but why can\u0027t you pick the nightly released bits instead, which get published? As an alternative, if you just want to run the System.Net.Quic tests, I would recommend to publish them as self-contained, if that\u0027s possible for an xunit test library.",
                                           "updatedAt":  "2022-05-06T16:52:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CvwMf",
                                           "createdAt":  "2022-05-06T16:57:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ManickaP",
                                           "body":  "\u003e Official builds don\u0027t run in the public but in the internal pipeline: https://dnceng.visualstudio.com/internal/_build?definitionId=679.\r\n\r\nI was trying to avoid the internal pipeline to avoid authentication token handling.\r\n\r\n\u003e Naive question but why can\u0027t you pick the nightly released bits instead, which get published?\r\n\r\nBecause we want to run the corresponding bits together, the same way we run them in our pipeline.",
                                           "updatedAt":  "2022-05-06T16:57:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Cvxn2",
                                           "createdAt":  "2022-05-06T17:04:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e Because we want to run the corresponding bits together, the same way we run them in our pipeline.\r\n\r\nIn that case, self-contained sounds like the best approach.",
                                           "updatedAt":  "2022-05-06T17:05:07Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "[QUIC] Publish S.N.Quic tests and runtime in our public pipeline artifacts",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "needs-further-triage"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/68707",
        "createdAt":  "2022-04-29T17:09:59Z",
        "number":  68707,
        "author":  "tarekgh",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-05-10T11:03:51Z",
        "body":  "We have msbuild property `UseSystemResourceKeys` which can be used to strip out all string resources from the libraries. When enabling it, when requesting any string resource value, we\u0027ll just return the resource key instead as the library will not have the actual resources. The libraries can contain some string resources which are not for exception messages but can have some special meaning and logic. One example of this is the type converter which can contain resource values affect the runtime behavior of the conversion. [CultureInfoConverter doesn\u0027t work correctly with UseSystemResourceKeys=true](https://github.com/dotnet/runtime/issues/68651) is a good example of that.\r\n\r\nThe request here is we need to have the capability enabling `UseSystemResourceKeys` on the libraries tests to validate no library is going to fail with this mode. We may need to have this as a leg in `CI` at least be opt-in run capability.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOQr7rSw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5CXz5W",
                                           "createdAt":  "2022-04-29T17:10:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nWe have msbuild property `UseSystemResourceKeys` which can be used to strip out all string resources from the libraries. When enabling it, when requesting any string resource value, we\u0027ll just return the resource key instead as the library will not have the actual resources. The libraries can contain some string resources which are not for exception messages but can have some special meaning and logic. One example of this is the type converter which can contain resource values affect the runtime behavior of the conversion. [CultureInfoConverter doesn\u0027t work correctly with UseSystemResourceKeys=true](https://github.com/dotnet/runtime/issues/68651) is a good example of that.\r\n\r\nThe request here is we need to have the capability enabling `UseSystemResourceKeys` on the libraries tests to validate no library is going to fail with this mode. We may need to have this as a leg in `CI` at least be opt-in run capability.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003etarekgh\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-04-29T17:10:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CX1oy",
                                           "createdAt":  "2022-04-29T17:17:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nWe have msbuild property `UseSystemResourceKeys` which can be used to strip out all string resources from the libraries. When enabling it, when requesting any string resource value, we\u0027ll just return the resource key instead as the library will not have the actual resources. The libraries can contain some string resources which are not for exception messages but can have some special meaning and logic. One example of this is the type converter which can contain resource values affect the runtime behavior of the conversion. [CultureInfoConverter doesn\u0027t work correctly with UseSystemResourceKeys=true](https://github.com/dotnet/runtime/issues/68651) is a good example of that.\r\n\r\nThe request here is we need to have the capability enabling `UseSystemResourceKeys` on the libraries tests to validate no library is going to fail with this mode. We may need to have this as a leg in `CI` at least be opt-in run capability.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003etarekgh\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`, `area-Infrastructure`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-04-29T17:17:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CvDUX",
                                           "createdAt":  "2022-05-06T13:35:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@tarekgh this can be achieved by adding a new pipeline that can be triggered via an `/azp run` command. Here are the steps that should make this possible:\r\n\r\nPerform the steps below in an upstream branch, not on your fork. Otherwise you can\u0027t associate the pipeline with the yml file until it got merged into main.\r\n\r\n1. Copy an [existing pipeline](https://github.com/dotnet/runtime/blob/main/eng/pipelines/runtime-linker-tests.yml) and remove the non relevant parts from it (extraStepsTemplate, extraStepsParameters, schedules).\r\n2. Set the msbuild property in the `buildArgs` arg.\r\n3. Add a pipeline in the [AzDO UI](https://dnceng.visualstudio.com/public/_build) pointing to the newly created yml. Name it similar to the existing pipelines, i.e. runtime-systemresourcekeys.\r\n4. After the pipeline is created, change the triggers in the UI settings so that it only runs when someone posts a comment.\r\n5. Invoke the pipeline in your PR via the `azp run` command and see if everything runs as expected.\r\n\r\nDo you have all the instructions that you need from us?",
                                           "updatedAt":  "2022-05-06T13:55:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CvDvN",
                                           "createdAt":  "2022-05-06T13:37:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "This issue has been marked `needs-author-action` and may be missing some important information.",
                                           "updatedAt":  "2022-05-06T13:37:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CvqJj",
                                           "createdAt":  "2022-05-06T16:25:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tarekgh",
                                           "body":  "@ViktorHofer thanks for the instructions. I am not expected to get into this any time soon. So, if we can get some help doing it would be appreciated. Thanks!",
                                           "updatedAt":  "2022-05-06T16:25:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CvuJP",
                                           "createdAt":  "2022-05-06T16:45:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCboL6g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "tarekgh",
                                                                               "createdAt":  "2022-05-06T16:47:43Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Unfortunately I can\u0027t guarantee that any of the infrastructure-libraries area owners will be able to help with this in the near future given that Santi and Anirudh left and @carlossanlop is ramping up...",
                                           "updatedAt":  "2022-05-06T16:45:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CvutL",
                                           "createdAt":  "2022-05-06T16:48:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCboPrQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2022-05-06T16:53:51Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "tarekgh",
                                           "body":  "ok, I am moving it to the future for now and if I can get any chance in near future, we can bring it back. ",
                                           "updatedAt":  "2022-05-06T16:48:53Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "Support running the libraries tests with `UseSystemResourceKeys=true`",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/69555",
        "createdAt":  "2022-05-19T13:06:24Z",
        "number":  69555,
        "author":  "directhex",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-06-01T17:04:03Z",
        "body":  "### Description\n\nThere are cases where we might want to do a build on a Linux/Mac system, but the Helix queue for execution is Windows (or vice versa). In fact, this is already the case for Android, where our device queue is on Windows but are builds are all on Linux, or Wasm where our builds are on Linux but the browser queue is Windows. However, for these cases, we rely on the Helix SDK to generate run scripts (e.g. submitting a list of APK files to Helix and allowing Helix to decide what the test runner scripts should be).\r\n\r\nThere may be cases where we need to generate a script, as we do for most test runner cases, but build/submit a script which doesn\u0027t match the build OS. Rudimentary support for this is included in https://github.com/dotnet/runtime/pull/66147 but relies on a yaml parameter to switch behaviour.\r\n\r\nIMHO we should probably always generate _both_ .sh and .cmd test scripts for all cases where that could make sense (e.g. Android)\n\n### Reproduction Steps\n\nBuild tests subset for Android, look in a test directory\n\n### Expected behavior\n\nTest runner script for both Windows and Mac/Linux, so the test can be easily run on a second machine\n\n### Actual behavior\n\nOnly Runtests.sh exists\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOQ4Z0NQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5Dc9fu",
                                           "createdAt":  "2022-05-19T13:06:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\n\nThere are cases where we might want to do a build on a Linux/Mac system, but the Helix queue for execution is Windows (or vice versa). In fact, this is already the case for Android, where our device queue is on Windows but are builds are all on Linux, or Wasm where our builds are on Linux but the browser queue is Windows. However, for these cases, we rely on the Helix SDK to generate run scripts (e.g. submitting a list of APK files to Helix and allowing Helix to decide what the test runner scripts should be).\r\n\r\nThere may be cases where we need to generate a script, as we do for most test runner cases, but build/submit a script which doesn\u0027t match the build OS. Rudimentary support for this is included in https://github.com/dotnet/runtime/pull/66147 but relies on a yaml parameter to switch behaviour.\r\n\r\nIMHO we should probably always generate _both_ .sh and .cmd test scripts for all cases where that could make sense (e.g. Android)\n\n### Reproduction Steps\n\nBuild tests subset for Android, look in a test directory\n\n### Expected behavior\n\nTest runner script for both Windows and Mac/Linux, so the test can be easily run on a second machine\n\n### Actual behavior\n\nOnly Runtests.sh exists\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003edirecthex\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-05-19T13:06:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Dd4wz",
                                           "createdAt":  "2022-05-19T16:02:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@directhex I wonder - some of the coreclr tests have native components that need to be built on Unix. How would you handle that aspect if you wanted to build the managed stuff and generate the scripts on Windows?",
                                           "updatedAt":  "2022-05-19T16:02:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5DhnQ1",
                                           "createdAt":  "2022-05-20T13:12:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "directhex",
                                           "body":  "Good question. Not sure!",
                                           "updatedAt":  "2022-05-20T13:12:10Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Cannot easily generate bash RunTests scripts from Windows, and vice versa",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/71251",
        "createdAt":  "2022-06-24T09:50:20Z",
        "number":  71251,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-20T16:48:50Z",
        "body":  "## Problem statement\r\n\r\nThe platform compatibility analyzer depends on a set of msbuild items as inputs based on the [platform exclusion spec](https://github.com/dotnet/designs/blob/main/accepted/2020/platform-exclusion/platform-exclusion.md). \r\n\r\nFrom the spec:\r\n\r\n\u003e In order to indicate which platforms the analyzer should warn about, we\u0027re adding some metadata to MSBuild: `\u003cSupportedPlatform Include=\"...\" /\u003e`\r\n\r\nBased on the spec, the `SupportedPlatform` item defines the list of platforms that the platform compatibility analyzer should warn about. \r\n\r\n[The SDK unconditionally adds supported platforms](https://github.com/dotnet/sdk/blob/a30e465a2e2ea4e2550f319a2dc088daaafe5649/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.SupportedPlatforms.props#L16-L18) and one of those is Windows. The SDK itself doesn\u0027t make it possible to only target platforms like macOS or Linux via a target platform, but we in dotnet/runtime allow that via the Microsoft.DotNet.TargetFramework.Sdk.\r\n\r\nAs reported in https://github.com/dotnet/runtime/pull/69980#discussion_r904947975, the warnings are currently not correct in certain cases, i.e. when a target framework is platform agnostic.\r\n\r\n[Here](https://github.com/dotnet/runtime/blob/b1221494186e7b8e5199d892dae76481a52f5935/eng/versioning.targets#L79) you can see that the `SupportedPlatform` metadata is added for Browser when the platform is Browser, or when it\u0027s agnostic and the library doesn\u0027t have a Browser specific implementation.\r\n\r\nI think we would want the same for Unix and for any other platform.\r\n\r\n## Possible solution\r\n\r\nPlease see https://github.com/ViktorHofer/runtime/pull/2 (my fork, just to get feedback). That logic calculates the SupportedPlatforms items correctly based on the RID graph. This implementation is completely static but solves the noted issues.\r\n\r\nTo make this dynamic, an msbuild task in the TargetFramework.Sdk would be required that takes the build rid graph (OSGroups.json), TargetFrameworks, TargetFramework and TargetPlatformIdentifier as an input and outputs the SupportedPlatform item to be added.\r\n\r\ncc @buyaa-n @jeffhandley @ericstj",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHORX4k3A==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5Fdq2Y",
                                           "createdAt":  "2022-06-24T09:50:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nMoving this discussion out from https://github.com/dotnet/runtime/pull/69980#discussion_r904947975.\r\n\r\n\u003e @buyaa-n @ViktorHofer the File.SetUnixFileMode method is marked as [System.Runtime.Versioning.UnsupportedOSPlatformAttribute(\"windows\")] and this particular C# file is compiled only for Unix:\r\n\r\n[The SDK unconditionally adds supported platforms](https://github.com/dotnet/sdk/blob/a30e465a2e2ea4e2550f319a2dc088daaafe5649/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.SupportedPlatforms.props#L16-L18) and one of those is Windows. The SDK itself doesn\u0027t make it possible to only target Windows, macOS or Linux via a target platform, but we in dotnet/runtime allow that via the Microsoft.DotNet.TargetFramework.Sdk.\r\n\r\nBecause of that, we would need to remove these unconditionally set `SupportedPlatform` items and instead add them conditionally similar to how it is done for Browser.\r\n\r\n[Here](https://github.com/dotnet/runtime/blob/b1221494186e7b8e5199d892dae76481a52f5935/eng/versioning.targets#L79) you can see that the `SupportedPlatform` metadata is added for Browser when the platform is Browser, or when it\u0027s agnostic and the library doesn\u0027t have a Browser specific implementation.\r\n\r\nI think we would want the same for Unix and for any other platform.\r\n\r\n**EDIT:**\r\nPlease see https://github.com/ViktorHofer/runtime/pull/2 (my fork, just to get feedback). That logic calculates the SupportedPlatforms items correctly based on the RID graph. This implementation is completely static but solves the noted issues.\r\n\r\nTo make this dynamic, an msbuild task in the TargetFramework.Sdk would be required that takes the build rid graph (OSGroups.json), TargetFrameworks, TargetFramework and TargetPlatformIdentifier as an input and outputs the SupportedPlatform item to be added.\r\n\r\ncc @buyaa-n @jeffhandley @ericstj\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-06-24T09:50:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FdsQw",
                                           "createdAt":  "2022-06-24T09:57:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCjo6sg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "buyaa-n",
                                                                               "createdAt":  "2022-06-24T18:56:35Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@buyaa-n commented on the related issue:\r\n\r\n\u003e SDK supported platforms cause warnings only for cross platform targets, has no effect targeted builds. I might missing something but still do not understand why we could not use Linux or Unix targets for the above mentioned build and keep the $(NetCoreAppCurrent) only for real cross platform targets.\r\n\r\nI tried to explain that in the related issue:\r\n\r\n\u003e Some libraries intentionally define a TargetPlatform agnostic target framework which serves as the default configuration to reduce the number of inner builds in the build graph. Such a TargetPlatform agnostic target framework is either truly platform agnostic or it targets a specific platform that is believed to be a good default (in most / all cases Unix).\r\n\r\nIf you would introduce a `net7.0-Unix` tfm in https://github.com/dotnet/runtime/blob/911da6859fa3b792cd4b13ffab4ca15ddb6e1a32/src/libraries/System.IO.Compression.ZipFile/src/System.IO.Compression.ZipFile.csproj#L4, you would also need a platform agnostic tfm: `net7.0` as that\u0027s required to compose the shared framework.\r\n\r\nThat would increase the inner builds from two (net7.0-windows, net7.0) to three (net7.0-windows, net7.0-Unix, net7.0). In projects which also ship via packages, you would increase the number of inner builds further, because of net6.0 which would need to follow the same pattern. For that project, we chose Unix to be the default implementation: net7.0.",
                                           "updatedAt":  "2022-06-24T09:57:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FdtCJ",
                                           "createdAt":  "2022-06-24T10:01:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@ericstj commented on the PR:\r\n\r\n\u003e Is the problem that TargetPlatformIdentifier isn\u0027t set at this point of the evaluation? If so - could we move these to a target?\r\n\r\nNo, in the context of versioning.targets, the TargetPlatformIdentifier property is fully evaluated, that\u0027s not the problem. Please see the top post in which I tried to explain the existing issue.  ",
                                           "updatedAt":  "2022-06-24T10:01:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Fe0Tg",
                                           "createdAt":  "2022-06-24T15:52:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "I see.\r\n\u003e To make this dynamic, an msbuild task in the TargetFramework.Sdk would be required that takes the build rid graph (OSGroups.json), TargetFrameworks, TargetFramework and TargetPlatformIdentifier as an input and outputs the SupportedPlatform item to be added.\r\n\r\nIs that enough?  Don\u0027t we also need to know what items in that set are actual support vs which are PNSEs?  I imagine we\u0027re trying to apply these SupportedFramework items on the RID-less configuration and the reference assembly so that there is some design time checking of support.\r\n\r\nOne solution could be to evaluate the best `TargetFramework` value for each known supported platform value we might include, then call a target in the project evaluated for that `TargetFramework` to determine if it\u0027s a PNSE or not.\r\n\r\nPerhaps another way might be to change how we represent PNSEs so that they can be known statically from the outer build (EG: represent them as a list that\u0027s a subset of `TargetFrameworks`).",
                                           "updatedAt":  "2022-06-24T15:52:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FfiTc",
                                           "createdAt":  "2022-06-24T20:01:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "buyaa-n",
                                           "body":  "@ViktorHofer thanks for the explanation, question: are all TFMs like `\u003cTargetFrameworks\u003e$(NetCoreAppCurrent)-windows;$(NetCoreAppCurrent)\u003c/TargetFrameworks\u003e` are equivalent to `\u003cTargetFrameworks\u003e$(NetCoreAppCurrent)-windows;$(NetCoreAppCurrent)-Unix\u003c/TargetFrameworks\u003e`? \r\n\r\nI assume there is a case for a real cross platform target/assembly, what will be the TFM for that case? `\u003cTargetFrameworks\u003e$(NetCoreAppCurrent)\u003c/TargetFrameworks\u003e`?",
                                           "updatedAt":  "2022-06-24T20:01:34Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "SupportedPlatform calculation for platform compatibility analyzer is wrong",
        "labels":  [
                       "design-discussion",
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/77004",
        "createdAt":  "2022-10-13T13:21:26Z",
        "number":  77004,
        "author":  "MichaelSimons",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCq_eeQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ViktorHofer",
                                            "createdAt":  "2022-10-13T19:11:04Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2023-07-20T16:02:16Z",
        "body":  "Currently the Microsoft.Private.Intellisense documentation package is treated as a [text-only reference package for source-build](https://github.com/dotnet/source-build-reference-packages/tree/main/src/textOnlyPackages/src/microsoft.private.intellisense/7.0.0-preview-20220916.1).  This pattern works well when package versions are fairly static for a release.  Every time the package version changes, the source-build reference package must be updated otherwise it will cause a prebuilt in source-build.  Because the Microsoft.Private.Intellisense package changes regularly, this causes maintenance burden.  It would be preferred if we can find a more friendly way to handle this package.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOYVf2GQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5MJrLd",
                                           "createdAt":  "2022-10-13T13:21:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nCurrently the Microsoft.Private.Intellisense documentation package is treated as a [text-only reference package for source-build](https://github.com/dotnet/source-build-reference-packages/tree/main/src/textOnlyPackages/src/microsoft.private.intellisense/7.0.0-preview-20220916.1).  This pattern works well when package versions are fairly static for a release.  Every time the package version changes, the source-build reference package must be updated otherwise it will cause a prebuilt in source-build.  Because the Microsoft.Private.Intellisense package changes regularly, this causes maintenance burden.  It would be preferred if we can find a more friendly way to handle this package.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eMichaelSimons\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-10-13T13:21:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5MLbJi",
                                           "createdAt":  "2022-10-13T19:10:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "cc @carlossanlop @jeffhandley @ericstj",
                                           "updatedAt":  "2022-10-13T19:10:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ML8f_",
                                           "createdAt":  "2022-10-13T21:30:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "Seems like the build for this package should be something that could be done in source build, right?  Or are there non-source build friendly tools involved with packing the data in https://github.com/dotnet/dotnet-api-docs?",
                                           "updatedAt":  "2022-10-13T21:30:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5MMCAC",
                                           "createdAt":  "2022-10-13T22:01:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichaelSimons",
                                           "body":  "\u003e Seems like the build for this package should be something that could be done in source build, right?\r\n\r\nYes that would be a good solution.\r\n\r\n\u003e Or are there non-source build friendly tools involved with packing the data in https://github.com/dotnet/dotnet-api-docs?\r\n\r\nI\u0027m not finding the infrastructure logic in the repo that handles the packaging of the ref doc into Microsoft.Private.Intellisense.nupkg.  I do see a dependency on buildcore which I am unfamiliar with.  Who is familiar with how the build works?  Aside from the build details, my first thought is this would have to be added to [source-build-externals](https://github.com/dotnet/source-build-externals/) given it doesn\u0027t utilize arcade to build.",
                                           "updatedAt":  "2022-10-13T22:01:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5MMRqg",
                                           "createdAt":  "2022-10-13T23:37:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "carlossanlop",
                                           "body":  "We use an internal pipeline from the Docs Portal to generate the nupkg. I\u0027ll send you the details via chat.",
                                           "updatedAt":  "2022-10-13T23:37:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hV_YZ",
                                           "createdAt":  "2023-07-12T20:21:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "This package continues to be non source build friendly. The ideal path forward is making progress on the triple-slash XML source-of-truth effort in runtime to make the package\u0027s usage obsolete. Meanwhile, we will probably need to add SBRP for it throughout the release.",
                                           "updatedAt":  "2023-07-12T20:21:09Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "Microsoft.Private.Intellisense package is not source-build friendly",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/82579",
        "createdAt":  "2023-02-24T01:56:09Z",
        "number":  82579,
        "author":  "wfurt",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-07-20T16:22:07Z",
        "body":  "We have random crypto test failures on `Server2022.ES` queues. This described in #74838 and  #70320.\r\nTo stabilize CI, the test runs were disabled by #82578.\r\n\r\nThe current suspicion is that this is cased by Azure Security Monitor: (thanks @MattGal for the link) \r\nhttps://github.com/dotnet/runtime/issues/74838#issuecomment-1442317205\r\n\r\nWe should enable and possibly investigate when the external [issue](https://msazure.visualstudio.com/One/_workitems/edit/15594051) is resolved. \r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOYgDStw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5V_Z-X",
                                           "createdAt":  "2023-02-24T01:56:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nWe have random crypto test failures on `Server2022.ES` queues. This described in #74838 and  #70320.\r\nTo stabilize CI, the test runs were disabled by #82578.\r\n\r\nThe current suspicion is that this is cased by Azure Security Monitor: (thanks @MattGal for the link) \r\nhttps://github.com/dotnet/runtime/issues/74838#issuecomment-1442317205\r\n\r\nWe should enable and possibly investigate when the external [issue](https://msazure.visualstudio.com/One/_workitems/edit/15594051) is resolved. \r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ewfurt\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`, `tracking-external-issue`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-02-24T01:56:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5V_eWF",
                                           "createdAt":  "2023-02-24T02:18:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC2q3aQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "wfurt",
                                                                               "createdAt":  "2023-02-24T02:24:53Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "carlossanlop",
                                           "body":  "I\u0027ll add the 8.0 milestone, hoping the external issue gets resolved before shipping.",
                                           "updatedAt":  "2023-02-24T02:18:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5iANK3",
                                           "createdAt":  "2023-07-20T16:21:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Moving to future as the external issue hasn\u0027t yet been worked on.",
                                           "updatedAt":  "2023-07-20T16:21:27Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "add tests runs with Spanish (or other) locale",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "tracking-external-issue"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/84104",
        "createdAt":  "2023-03-30T01:02:02Z",
        "number":  84104,
        "author":  "stephentoub",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-04-13T11:58:06Z",
        "body":  "Our root .editorconfig lists *.notsupported.cs as being consider auto-generated, but for some reason that .editorconfig isn\u0027t being passed to csc when building those assemblies, e.g. Microsoft.Win32.Registry.  As a result, analyzers are running on the auto-generated .notsupported.cs file there.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOWdAhXg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5YyIoO",
                                           "createdAt":  "2023-03-30T01:02:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nOur root .editorconfig lists *.notsupported.cs as being consider auto-generated, but for some reason that .editorconfig isn\u0027t being passed to csc when building those assemblies, e.g. Microsoft.Win32.Registry.  As a result, analyzers are running on the auto-generated .notsupported.cs file there.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003estephentoub\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-03-30T01:02:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ZulSJ",
                                           "createdAt":  "2023-04-12T14:31:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Roslyn\u0027s msbuild targets auto-discover editorconfig files based on the compile items defined: https://github.com/dotnet/roslyn/blob/3b23723934d3c7d0b3c1a0165def4a7f0e6e3a19/src/Compilers/Core/MSBuildTask/Microsoft.Managed.Core.targets#L125-L140\r\n\r\nTFMs that are pure PNSEs don\u0027t have any compile items defined at evaluation time. The compile item that is generated by `GenFacades` which is called `NotSupported.cs` doesn\u0027t exist at evaluation time and hence the logic is skipped.\r\n\r\nTo fix this for PNSE projects (which are a dotnet/runtime only concept), we could trigger the auto-discovery based on the project file instead. That could be accomplished here: https://github.com/dotnet/arcade/blob/17d9eee32f20a6af0ebb620254a22f601d159578/src/Microsoft.DotNet.GenFacades/build/Microsoft.DotNet.GenFacades.NotSupported.targets#L20\r\n\r\n@carlossanlop @ericstj this is another refcount on issues with our PNSE custom infrastructure (in addition to the `///` xml comment source of truth issue with PNSEs).",
                                           "updatedAt":  "2023-04-12T14:59:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ZzdPa",
                                           "createdAt":  "2023-04-13T09:39:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Filed https://github.com/dotnet/roslyn/issues/67793 as the auto-discovery doesn\u0027t work either for projects which define their compile items outside of the project file, in a Directory.Build.targets file. Adding the `tracking-external-issue` label.",
                                           "updatedAt":  "2023-04-13T11:58:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Z0CFe",
                                           "createdAt":  "2023-04-13T11:37:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "stephentoub",
                                           "body":  "Thanks, @ViktorHofer ",
                                           "updatedAt":  "2023-04-13T11:37:03Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Determine why analyzers are running on generated not supported assemblies auto-generated files",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "tracking-external-issue"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/84142",
        "createdAt":  "2023-03-30T19:28:32Z",
        "number":  84142,
        "author":  "ericstj",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-05-03T16:59:35Z",
        "body":  "### Description\n\nhttps://github.com/dotnet/runtime/issues/84031 represents a regression in servicing that we could have caught with API Compat.\r\n\r\nWe should consider the following new APICompat comparisons:\r\n1. Servicing branch to future framework / packages.\r\n2. Current branch to previous serviced packages (don\u0027t limit the baseline to GA).  This will catch things after they ship, but will catch them before our customers do.\r\n3. *Consider* enabling strict mode in servicing for all packages.  Determine an assembly version rule that might be acceptable in this case but not too noisy. \n\n### Reproduction Steps\n\nMake a breaking change in servicing that makes a serviced package incompatible with a newer version of that package.\n\n### Expected behavior\n\nAPICompat catches this and raises an error.\n\n### Actual behavior\n\nNo error was raised.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOWNwwSQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5Y3DBJ",
                                           "createdAt":  "2023-03-30T19:28:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\n\nhttps://github.com/dotnet/runtime/issues/84031 represents a regression in servicing that we could have caught with API Compat.\r\n\r\nWe should consider the following new APICompat comparisons:\r\n1. Servicing branch to future framework / packages.\r\n2. Current branch to previous serviced packages (don\u0027t limit the baseline to GA).  This will catch things after they ship, but will catch them before our customers do.\r\n3. *Consider* enabling strict mode in servicing for all packages.  Determine an assembly version rule that might be acceptable in this case but not too noisy. \n\n### Reproduction Steps\n\nMake a breaking change in servicing that makes a serviced package incompatible with a newer version of that package.\n\n### Expected behavior\n\nAPICompat catches this and raises an error.\n\n### Actual behavior\n\nNo error was raised.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eericstj\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-03-30T19:28:42Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "APICompat doesn\u0027t capture all changes that might happen during servicing",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/84508",
        "createdAt":  "2023-04-08T00:01:44Z",
        "number":  84508,
        "author":  "sbomer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-05-03T17:04:45Z",
        "body":  "[verify-so.sh](https://github.com/dotnet/runtime/blob/main/src/native/libs/verify-so.sh) runs `ldd` on some of our build outputs (used for System.Globalization.Native and System.Security.Cryptography.Native.OpenSsl) to ensure that there are no undefined symbols, but it always uses `ldd` on the build host. We should find way to perform the same check when cross-building.\r\n\r\nI think we may be able to run `ldd` inside of the rootfs chroot, for example.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOWXbxgA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5Zc1dq",
                                           "createdAt":  "2023-04-08T00:01:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n[verify-so.sh](https://github.com/dotnet/runtime/blob/main/src/native/libs/verify-so.sh) runs `ldd` on some of our build outputs (used for System.Globalization.Native and System.Security.Cryptography.Native.OpenSsl) to ensure that there are no undefined symbols, but it always uses `ldd` on the build host. We should find way to perform the same check when cross-building.\r\n\r\nI think we may be able to run `ldd` inside of the rootfs chroot, for example.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003esbomer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-04-08T00:01:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ZdfJF",
                                           "createdAt":  "2023-04-08T14:22:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "This script was added in CoreFX in 2016 for sanity testing when OpenSSL shim was added, so it\u0027s a nop in cross scenario since the beginning. The `ldd -r` command sees `not a dynamic executable` line and returns without raising any warning. We can use chroot/qemu to run cross `ldd` which may require couple of other considerations, or replace `ldd -r` with `llvm-nm -Cu` which handles all archs without chroot.. but before we explore these avenues, lets take a step back and look at what are we trying to solve..\r\n\r\nHave we ever seen this script failing when executed via cmake OR \"can\" it ever fail? I\u0027d say \"no\", because it runs `ldd -r SomeBinary` on the same machine where `SomeBinary` was _just_  built; so the way this script is executed, it can never fail in the CI but the actual binary \"can\" still fail to load on the user system due to missing symbols in the dependency lib. This script is not verifying or helping with anything.\r\n\r\nmy 0.2 - instead of fixing something which has not caught any bugs in past seven years, just delete it. 🙂",
                                           "updatedAt":  "2023-04-08T14:22:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Zdt5W",
                                           "createdAt":  "2023-04-08T19:33:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "When I was onboarding the AddressSanitizer support, this script caught that the ASAN runtime isn\u0027t linked in. That particular case is a false-positive, but it was still useful to ensure that all the symbols we expect to be resolvable are resolved by the loader.",
                                           "updatedAt":  "2023-04-08T19:33:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ZdvGA",
                                           "createdAt":  "2023-04-08T20:00:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "This linux-specific script is only used by 2 out of ~38 libs build by the repo. Plus it doesn\u0027t work with cross-build. Missing symbols are typically reported during the link-time, which is usually enough.",
                                           "updatedAt":  "2023-04-08T20:13:02Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Enhance verify-so.sh to handle cross-build scenarios",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/84570",
        "createdAt":  "2023-04-10T16:24:10Z",
        "number":  84570,
        "author":  "layomia",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-11-24T09:24:00Z",
        "body":  "The [`AddNETStandardCompatErrorFileForPackaging`](https://github.com/dotnet/runtime/blob/d20c29eb7aca08a6e3e26d890c9fe4584a301c86/eng/packaging.targets#L197) target infra to emit a warning for unsupported NuGet package consuming TFMs causes source generator targets (for Roslyn version multitargeting, and for enabling/disabling generators) to get dropped for unsupported TFMs. This is undesirable and can lead to undefined behavior.\r\n\r\nPR https://github.com/dotnet/runtime/pull/84379/commits/9eab1ce30ed16f8f6f46ab9f461170002401592a fixes this issue for the config binding generator, enforcing that the enabling target runs for all TFMs \u0026 also emitting the compat warning for unsupported TFMs. This fix is hardcoded for now. We should also fix it for the other source-generator targets for multi-targeting and disabling, and come up with the right templating across all the targets \u0026 packages.\r\n\r\ncc @ViktorHofer @ericstj ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHObMz4SQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5ZhxMf",
                                           "createdAt":  "2023-04-10T16:24:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThe [`AddNETStandardCompatErrorFileForPackaging`](https://github.com/dotnet/runtime/blob/d20c29eb7aca08a6e3e26d890c9fe4584a301c86/eng/packaging.targets#L197) target infra to emit a warning for unsupported NuGet package consuming TFMs causes source generator targets (for Roslyn version multitargeting, and for enabling/disabling generators) to get dropped for unsupported TFMs. This is undesirable and can lead to undefined behavior.\r\n\r\nPR https://github.com/dotnet/runtime/pull/84379/commits/9eab1ce30ed16f8f6f46ab9f461170002401592a fixes this issue for the config binding generator, enforcing that the enabling target runs for all TFMs \u0026 also emitting the compat warning for unsupported TFMs. This fix is hardcoded for now. We should also fix it for the other source-generator targets for multi-targeting and disabling, and come up with the right templating across all the targets \u0026 packages.\r\n\r\ncc @ViktorHofer @ericstj \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003elayomia\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e8.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-04-10T16:24:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5szPhJ",
                                           "createdAt":  "2023-11-24T09:23:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "KalleOlaviNiemitalo",
                                           "body":  "The way Microsoft.Extensions.Configuration.Binder checks target framework compatibility in \u003chttps://github.com/dotnet/runtime/pull/84379\u003e does not look compatible with target framework aliases.  So even if \u003chttps://github.com/NuGet/Home/issues/5154\u003e is fixed at the NuGet side, aliases still would not work with this package, unless the consuming project sets the SuppressTfmSupportBuildWarnings property.\r\n\r\nI guess fixing that would mean changing\r\n\r\n\u003chttps://github.com/dotnet/runtime/blob/5535e31a712343a63f5d7d796cd874e563e5ac14/src/libraries/Microsoft.Extensions.Configuration.Binder/src/buildTransitive/Microsoft.Extensions.Configuration.Binder.targets#L19-L26\u003e\r\n\r\nto\r\n\r\n```XML\r\n            \u003c_Microsoft_Extensions_Configuration_Binder_Compatible_TargetFramework\r\n                Condition=\"\u0027$(TargetFrameworkIdentifier)\u0027 == \u0027.NETCoreApp\u0027 AND\r\n                           $([MSBuild]::VersionGreaterThanOrEquals(\u0027$(TargetFrameworkVersion)\u0027, \u00272.0\u0027)) AND\r\n                           !$([MSBuild]::VersionGreaterThanOrEquals(\u0027$(TargetFrameworkVersion)\u0027, \u00276.0\u0027))\"\r\n                \u003enet6.0\u003c/_Microsoft_Extensions_Configuration_Binder_Compatible_TargetFramework\u003e\r\n            \u003c_Microsoft_Extensions_Configuration_Binder_Compatible_TargetFramework\r\n                Condition=\"\u0027$(TargetFrameworkIdentifier)\u0027 == \u0027.NETFramework\u0027 AND\r\n                           $([MSBuild]::VersionGreaterThanOrEquals(\u0027$(TargetFrameworkVersion)\u0027, \u00274.6.1\u0027)) AND\r\n                           !$([MSBuild]::VersionGreaterThanOrEquals(\u0027$(TargetFrameworkVersion)\u0027, \u00274.6.2\u0027))\"\r\n                \u003enet462\u003c/_Microsoft_Extensions_Configuration_Binder_Compatible_TargetFramework\u003e\r\n```\r\n\r\nFortunately, `[MSBuild]::IsTargetFrameworkCompatible` is not used in any other packages from dotnet/runtime.",
                                           "updatedAt":  "2023-11-24T09:23:59Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Source generator targets (from NuGet packages) not running on unsupported TFMs",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/86160",
        "createdAt":  "2023-05-12T16:40:51Z",
        "number":  86160,
        "author":  "steveharter",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-07-20T16:01:08Z",
        "body":  "This could be a doc issue, as the official doc doesn\u0027t cover the scenario used to update the ref files when adding classes to System.Private.CoreLib: https://github.com/dotnet/runtime/blob/main/docs/coding-guidelines/updating-ref-source.md.\r\n\r\nThe doc is also specifying `GenerateReferenceAssemblySource` and not `GenerateReferenceSource` which I believe most people are using, so the process is not clear.\r\n\r\nConsider this scenario from a clean build (no artifacts yet) where we want to add a new `System.Reflection` class. Due to the interactions between `System.Runtime` and `System.Private.CoreLib` this process is not intuitive. Just adding new members in general works as expected, however:\r\n**1)** Add a new `src\\libraries\\System.Private.CoreLib\\src\\System.Reflection\\Foo.cs` file:\r\n```cs\r\nnamespace System.Reflection\r\n{\r\n    public class Foo\r\n    {\r\n        public static string Method1() {return \"\";}\r\n    }\r\n}\r\n```\r\nUpdate `src\\libraries\\System.Private.CoreLib\\src\\System.Private.CoreLib.Shared.projitems` by adding:\r\n```\r\n    \u003cCompile Include=\"$(MSBuildThisFileDirectory)System\\Reflection\\Foo.cs\" /\u003e\r\n```\r\nUpdate `src\\libraries\\System.Reflection\\ref\\System.Reflection.Forwards.cs` by adding:\r\n```\r\n[assembly: System.Runtime.CompilerServices.TypeForwardedTo(typeof(System.Reflection.Foo))]\r\n```\r\n\r\n**2)** Build the clr from the root: `build -s clr -c release`. We get the expected API compat errors:\r\n```\r\nC:\\Users\\\u003cNAME\u003e\\.nuget\\packages\\microsoft.dotnet.apicompat.task\\8.0.100-preview.2.23107.1\\build\\Microsoft.DotNet.ApiCompat.ValidateAssemblies.Common.targets(16,5): error : API compatibility errors between \u0027ref/net8.0/System.Private.CoreLib.dll\u0027 (left\r\n) and \u0027lib/net8.0/System.Private.CoreLib.dll\u0027 (right): [C:\\git\\runtime\\src\\coreclr\\System.Private.CoreLib\\System.Private.CoreLib.csproj]\r\nC:\\Users\\\u003cNAME\u003e\\.nuget\\packages\\microsoft.dotnet.apicompat.task\\8.0.100-preview.2.23107.1\\build\\Microsoft.DotNet.ApiCompat.ValidateAssemblies.Common.targets(16,5): error CP0001: Type \u0027System.Foo\u0027 exists on lib/net8.0/System.Private.CoreLib.dll but no\r\nt on ref/net8.0/System.Private.CoreLib.dll [C:\\git\\runtime\\src\\coreclr\\System.Private.CoreLib\\System.Private.CoreLib.csproj]\r\n```\r\nand `System.Private.CoreLib.dll` and `System.Runtime.dll` are not created.\r\n**3)** Re-run by disabling API compat: `build -s clr -c release /p:ApiCompatValidateAssemblies=false`. `System.Private.CoreLib` now contains the `Foo` class.\r\n**4)** Build libs: `build -s libs -c release`. We get an error due to type forwarding:\r\n```\r\nC:\\git\\runtime\\src\\libraries\\System.Reflection\\ref\\System.Reflection.Forwards.cs(7,85): error CS0234: The type or namespace name \u0027Foo\u0027 does not exist in the namespace \u0027System.Reflection\u0027 (are you missing an assembly reference?) [C:\\git\\runtime10\\src\r\n\\libraries\\System.Reflection\\ref\\System.Reflection.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\8.0.100-preview.3.23178.7\\Microsoft.Common.CurrentVersion.targets(2073,5): error MSB4181: The \"MSBuild\" task returned false but did not log an error. [C:\\git\\runtime10\\src\\libraries\\sfx.proj]\r\n```\r\n**5)** To unblock, comment out the type forwarding LOC and re-build libs; we also need to disable API compat when doing that. The build should succeed.\r\n**6)** Now we want to generate the ref file for `System.Runtime`. If we try to generate from either `System.Runtime` or `System.Reflection`, the generated ref files will not contain `Foo`.\r\n**7**) As a workaround, manually modify `System.Runtime`\u0027s ref file to add a simple \"stub\" class to the \"System.Reflection\" namespace like `public class Foo {}`. Build that ref file from the `ref` folder: `dotnet build /p:Configuration=Release`.\r\n**8** From the `System.Reflection` `src` folder, re-apply the type forwarding LOC and build: `dotnet build /p:Configuration=Release /p:ApiCompatValidateAssemblies=false`.\r\n**9)** Still from the `System.Reflection` `src` folder, generate the ref file: `dotnet build /t:GenerateReferenceSource /p:Configuration=Release /p:ApiCompatValidateAssemblies=false`\r\n**10)** From that generated ref file, manually copy the generated `Foo` class to the `System.Runtime`\u0027s ref file. Then delete the `System.Reflection` generated ref file.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOXCeTYA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5cJkhp",
                                           "createdAt":  "2023-05-12T16:40:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThis could be a doc issue, as the official doc doesn\u0027t cover the scenario used to update the ref files when adding classes to System.Private.CoreLib: https://github.com/dotnet/runtime/blob/main/docs/coding-guidelines/updating-ref-source.md.\r\n\r\nThe doc is also specifying `GenerateReferenceAssemblySource` and not `GenerateReferenceSource` which I believe most people are using, so the process is not clear.\r\n\r\nConsider this scenario from a clean build (no artifacts yet) where we want to add a new `System.Reflection` class. Due to the interactions between `System.Runtime` and `System.Private.CoreLib` this process is not intuitive. Just adding new members in general works as expected, however:\r\n**1)** Add a new `src\\libraries\\System.Private.CoreLib\\src\\System.Reflection\\Foo.cs` file:\r\n```cs\r\nnamespace System.Reflection\r\n{\r\n    public class Foo\r\n    {\r\n        public static string Method1() {return \"\";}\r\n    }\r\n}\r\n```\r\nUpdate `src\\libraries\\System.Private.CoreLib\\src\\System.Private.CoreLib.Shared.projitems` by adding:\r\n```\r\n    \u003cCompile Include=\"$(MSBuildThisFileDirectory)System\\Reflection\\Foo.cs\" /\u003e\r\n```\r\nUpdate `src\\libraries\\System.Reflection\\ref\\System.Reflection.Forwards.cs` by adding:\r\n```\r\n[assembly: System.Runtime.CompilerServices.TypeForwardedTo(typeof(System.Reflection.Foo))]\r\n```\r\n\r\n**2)** Build the clr+libs: from the root: `build -s clr -c release`. We get the expected API compat errors:\r\n```\r\nC:\\Users\\\u003cNAME\u003e\\.nuget\\packages\\microsoft.dotnet.apicompat.task\\8.0.100-preview.2.23107.1\\build\\Microsoft.DotNet.ApiCompat.ValidateAssemblies.Common.targets(16,5): error : API compatibility errors between \u0027ref/net8.0/System.Private.CoreLib.dll\u0027 (left\r\n) and \u0027lib/net8.0/System.Private.CoreLib.dll\u0027 (right): [C:\\git\\runtime\\src\\coreclr\\System.Private.CoreLib\\System.Private.CoreLib.csproj]\r\nC:\\Users\\\u003cNAME\u003e\\.nuget\\packages\\microsoft.dotnet.apicompat.task\\8.0.100-preview.2.23107.1\\build\\Microsoft.DotNet.ApiCompat.ValidateAssemblies.Common.targets(16,5): error CP0001: Type \u0027System.Foo\u0027 exists on lib/net8.0/System.Private.CoreLib.dll but no\r\nt on ref/net8.0/System.Private.CoreLib.dll [C:\\git\\runtime\\src\\coreclr\\System.Private.CoreLib\\System.Private.CoreLib.csproj]\r\n```\r\nand `System.Private.CoreLib.dll` and `System.Runtime.dll` are not created.\r\n**3)** Re-run by disabling API compat: `build -s clr -c release /p:ApiCompatValidateAssemblies=false`. `System.Private.CoreLib` now contains the `Foo` class.\r\n**4)** Build libs: `build -s libs -c release`. We get an error due to type forwarding:\r\n```\r\nC:\\git\\runtime\\src\\libraries\\System.Reflection\\ref\\System.Reflection.Forwards.cs(7,85): error CS0234: The type or namespace name \u0027Foo\u0027 does not exist in the namespace \u0027System.Reflection\u0027 (are you missing an assembly reference?) [C:\\git\\runtime10\\src\r\n\\libraries\\System.Reflection\\ref\\System.Reflection.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\8.0.100-preview.3.23178.7\\Microsoft.Common.CurrentVersion.targets(2073,5): error MSB4181: The \"MSBuild\" task returned false but did not log an error. [C:\\git\\runtime10\\src\\libraries\\sfx.proj]\r\n```\r\n**5)** To unblock, comment out the type forwarding LOC and re-build libs; we also need to disable API compat when doing that. The build should succeed.\r\n**6)** Now we want to generate the ref file for `System.Runtime`. If we try to generate from either `System.Runtime` or `System.Reflection`, the generated ref files will not contain `Foo`.\r\n**7**) As a workaround, manually modify `System.Runtime`\u0027s ref file to add a simple \"stub\" class to the \"System.Reflection\" namespace like `public class Foo {}`. Build that ref file from the `ref` folder: `dotnet build /p:Configuration=Release`.\r\n**8** From the `System.Reflection` `src` folder, re-apply the type forwarding LOC and build: `dotnet build /p:Configuration=Release /p:ApiCompatValidateAssemblies=false`.\r\n**9)** Still from the `System.Reflection` `src` folder, generate the ref file: `dotnet build /t:GenerateReferenceSource /p:Configuration=Release /p:ApiCompatValidateAssemblies=false`\r\n**10)** From that generated ref file, manually copy the generated `Foo` class to the `System.Runtime`\u0027s ref file. Then delete the `System.Reflection` generated ref file.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003esteveharter\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-05-12T16:40:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5cJx6O",
                                           "createdAt":  "2023-05-12T17:32:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e 2) Build the clr from the root: build -s clr -c release. We get the expected API compat errors:\r\n\r\nThat\u0027s an actual valid error which indicates that a type is public in CoreLib\u0027s implementation but not in its reference assembly. That\u0027s so as the new API is exposed in ref/System.Reflection.Forwards.cs which is a pure facade assembly and not considered as an input to System.Private.CoreLib\u0027s reference assembly: https://github.com/dotnet/runtime/blob/93a811f1ef273e64bd2a2280bce50dfdd8be6fc9/src/libraries/System.Private.CoreLib/ref/System.Private.CoreLib.csproj#L22-L46\r\n\r\nWe shouldn\u0027t expose new API in full facade/shim assemblies. Instead you could add it to ref/System.Runtime.cs instead (as all existent types in System.Reflection.Forwards.cs actually live in ref/System.Runtime.cs).\r\n\r\n@akoeplinger do we have documentation on System.Private.CoreLib\u0027s reference assembly\u0027s build and its reference source?  ",
                                           "updatedAt":  "2023-05-12T17:32:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5cJ5Ng",
                                           "createdAt":  "2023-05-12T18:01:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThis could be a doc issue, as the official doc doesn\u0027t cover the scenario used to update the ref files when adding classes to System.Private.CoreLib: https://github.com/dotnet/runtime/blob/main/docs/coding-guidelines/updating-ref-source.md.\r\n\r\nThe doc is also specifying `GenerateReferenceAssemblySource` and not `GenerateReferenceSource` which I believe most people are using, so the process is not clear.\r\n\r\nConsider this scenario from a clean build (no artifacts yet) where we want to add a new `System.Reflection` class. Due to the interactions between `System.Runtime` and `System.Private.CoreLib` this process is not intuitive. Just adding new members in general works as expected, however:\r\n**1)** Add a new `src\\libraries\\System.Private.CoreLib\\src\\System.Reflection\\Foo.cs` file:\r\n```cs\r\nnamespace System.Reflection\r\n{\r\n    public class Foo\r\n    {\r\n        public static string Method1() {return \"\";}\r\n    }\r\n}\r\n```\r\nUpdate `src\\libraries\\System.Private.CoreLib\\src\\System.Private.CoreLib.Shared.projitems` by adding:\r\n```\r\n    \u003cCompile Include=\"$(MSBuildThisFileDirectory)System\\Reflection\\Foo.cs\" /\u003e\r\n```\r\nUpdate `src\\libraries\\System.Reflection\\ref\\System.Reflection.Forwards.cs` by adding:\r\n```\r\n[assembly: System.Runtime.CompilerServices.TypeForwardedTo(typeof(System.Reflection.Foo))]\r\n```\r\n\r\n**2)** Build the clr from the root: `build -s clr -c release`. We get the expected API compat errors:\r\n```\r\nC:\\Users\\\u003cNAME\u003e\\.nuget\\packages\\microsoft.dotnet.apicompat.task\\8.0.100-preview.2.23107.1\\build\\Microsoft.DotNet.ApiCompat.ValidateAssemblies.Common.targets(16,5): error : API compatibility errors between \u0027ref/net8.0/System.Private.CoreLib.dll\u0027 (left\r\n) and \u0027lib/net8.0/System.Private.CoreLib.dll\u0027 (right): [C:\\git\\runtime\\src\\coreclr\\System.Private.CoreLib\\System.Private.CoreLib.csproj]\r\nC:\\Users\\\u003cNAME\u003e\\.nuget\\packages\\microsoft.dotnet.apicompat.task\\8.0.100-preview.2.23107.1\\build\\Microsoft.DotNet.ApiCompat.ValidateAssemblies.Common.targets(16,5): error CP0001: Type \u0027System.Foo\u0027 exists on lib/net8.0/System.Private.CoreLib.dll but no\r\nt on ref/net8.0/System.Private.CoreLib.dll [C:\\git\\runtime\\src\\coreclr\\System.Private.CoreLib\\System.Private.CoreLib.csproj]\r\n```\r\nand `System.Private.CoreLib.dll` and `System.Runtime.dll` are not created.\r\n**3)** Re-run by disabling API compat: `build -s clr -c release /p:ApiCompatValidateAssemblies=false`. `System.Private.CoreLib` now contains the `Foo` class.\r\n**4)** Build libs: `build -s libs -c release`. We get an error due to type forwarding:\r\n```\r\nC:\\git\\runtime\\src\\libraries\\System.Reflection\\ref\\System.Reflection.Forwards.cs(7,85): error CS0234: The type or namespace name \u0027Foo\u0027 does not exist in the namespace \u0027System.Reflection\u0027 (are you missing an assembly reference?) [C:\\git\\runtime10\\src\r\n\\libraries\\System.Reflection\\ref\\System.Reflection.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\8.0.100-preview.3.23178.7\\Microsoft.Common.CurrentVersion.targets(2073,5): error MSB4181: The \"MSBuild\" task returned false but did not log an error. [C:\\git\\runtime10\\src\\libraries\\sfx.proj]\r\n```\r\n**5)** To unblock, comment out the type forwarding LOC and re-build libs; we also need to disable API compat when doing that. The build should succeed.\r\n**6)** Now we want to generate the ref file for `System.Runtime`. If we try to generate from either `System.Runtime` or `System.Reflection`, the generated ref files will not contain `Foo`.\r\n**7**) As a workaround, manually modify `System.Runtime`\u0027s ref file to add a simple \"stub\" class to the \"System.Reflection\" namespace like `public class Foo {}`. Build that ref file from the `ref` folder: `dotnet build /p:Configuration=Release`.\r\n**8** From the `System.Reflection` `src` folder, re-apply the type forwarding LOC and build: `dotnet build /p:Configuration=Release /p:ApiCompatValidateAssemblies=false`.\r\n**9)** Still from the `System.Reflection` `src` folder, generate the ref file: `dotnet build /t:GenerateReferenceSource /p:Configuration=Release /p:ApiCompatValidateAssemblies=false`\r\n**10)** From that generated ref file, manually copy the generated `Foo` class to the `System.Runtime`\u0027s ref file. Then delete the `System.Reflection` generated ref file.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003esteveharter\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-05-12T18:01:33Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "GenerateReferenceSource workflow when adding new classes to System.Private.CoreLib",
        "labels":  [
                       "documentation",
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/86829",
        "createdAt":  "2023-05-27T07:37:34Z",
        "number":  86829,
        "author":  "MichalStrehovsky",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-16T12:47:09Z",
        "body":  "https://github.com/dotnet/runtime/pull/86781#discussion_r1207000325\r\n\r\nWe have tryrun.cmake that is mostly used for `-cross` builds.\r\n\r\nThen we have similar things in [runtime/src/native/libs/configure.cmake](https://github.com/dotnet/runtime/blob/c5256458235e00c4bc4634c3cc389fefdd4c10d8/src/native/libs/configure.cmake#L572-L605) and https://github.com/dotnet/runtime/blob/main/eng/native/tryrun_ios_tvos.cmake.\r\n\r\nWe should reconcile this.\r\n\r\nRelated: #56622",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOg6yLrw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5dS9-a",
                                           "createdAt":  "2023-05-27T07:37:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nhttps://github.com/dotnet/runtime/pull/86781#discussion_r1207000325\r\n\r\nWe have tryrun.cmake that is mostly used for `-cross` builds.\r\n\r\nThen we have similar things in [runtime/src/native/libs/configure.cmake](https://github.com/dotnet/runtime/blob/c5256458235e00c4bc4634c3cc389fefdd4c10d8/src/native/libs/configure.cmake#L572-L605) and https://github.com/dotnet/runtime/blob/main/eng/native/tryrun_ios_tvos.cmake.\r\n\r\nWe should reconcile this.\r\n\r\nRelated: #56622\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eMichalStrehovsky\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`, `os-android`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-05-27T07:37:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5db0vU",
                                           "createdAt":  "2023-05-29T22:49:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@MichalStrehovsky the `tryrun.cmake` contains values for cross build that the configure.cmake would detect if the build was executed on the target OS. It is used only for checks that execute code, so they cannot be evaluated on the build hosting OS. This is a cmake concept - the `tryrun.cmake` is meant to be separate, as it is loaded by cmake as an initialization of its cache.\r\nIt is not clear to me how we could reasonably unify these.",
                                           "updatedAt":  "2023-05-29T22:49:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5db3_c",
                                           "createdAt":  "2023-05-29T23:12:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichalStrehovsky",
                                           "body":  "\u003e @MichalStrehovsky the `tryrun.cmake` contains values for cross build that the configure.cmake would detect if the build was executed on the target OS. It is used only for checks that execute code, so they cannot be evaluated on the build hosting OS.\r\n\r\nYes, it\u0027s the same thing that the quoted part of configure.cmake is also doing. It\u0027s not clear why we spread these around the codebase",
                                           "updatedAt":  "2023-05-29T23:12:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5db4to",
                                           "createdAt":  "2023-05-29T23:19:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC8rTiQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MichalStrehovsky",
                                                                               "createdAt":  "2023-05-30T00:20:05Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Oh, I am surprised to see it in the configure.cmake in libraries. The ones in coreclr don\u0027t have that, they use the tryrun.cmake. ",
                                           "updatedAt":  "2023-05-29T23:19:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5iAOnS",
                                           "createdAt":  "2023-07-20T16:25:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@akoeplinger as you are assigned, should this stay in 8.0.0 or be moved?",
                                           "updatedAt":  "2023-07-20T16:25:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5iAYZf",
                                           "createdAt":  "2023-07-20T16:54:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "@ViktorHofer it can stay in 8.0 for now",
                                           "updatedAt":  "2023-07-20T16:54:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6DqFIX",
                                           "createdAt":  "2024-07-04T12:23:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ilonatommy",
                                           "body":  "@akoeplinger, this looks like a fast cleanup issue, will you have capacity for it?",
                                           "updatedAt":  "2024-07-04T12:23:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6DrIuv",
                                           "createdAt":  "2024-07-04T14:25:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "Hopefully 😄 ",
                                           "updatedAt":  "2024-07-04T14:25:11Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "Unify tryrun scripts",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "os-android"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/86906",
        "createdAt":  "2023-05-30T16:47:29Z",
        "number":  86906,
        "author":  "carlossanlop",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCwY3jw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ViktorHofer",
                                            "createdAt":  "2023-05-30T17:38:11Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2023-06-28T17:16:18Z",
        "body":  "We are inconsistent in keeping or removing the unnecessary comments that are automatically added by Visyual Studio at the beginning of resx files.\r\n\r\nIt\u0027s not clear if we would open an issue in another repo, but we can manually address this in dotnet/runtime if we want.\r\n\r\nHere is the full conversation where the details were discussed: https://github.com/dotnet/runtime/pull/85491#discussion_r1205003142",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOXgqVig==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5dgVGq",
                                           "createdAt":  "2023-05-30T16:47:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nWe are inconsistent in keeping or removing the unnecessary comments that are automatically added by Visyual Studio at the beginning of resx files.\r\n\r\nIt\u0027s not clear if we would open an issue in another repo, but we can manually address this in dotnet/runtime if we want.\r\n\r\nHere is the full conversation where the details were discussed: https://github.com/dotnet/runtime/pull/85491#discussion_r1205003142\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ecarlossanlop\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-05-30T16:47:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5dg-DS",
                                           "createdAt":  "2023-05-30T18:57:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC84D8Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "martincostello",
                                                                               "createdAt":  "2023-05-31T07:44:16Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkoritzinsky",
                                                                               "createdAt":  "2023-05-31T23:11:52Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "Note that we shouldn\u0027t do this unless VS stops adding it to the .resx file. I hate \"fighting\" VS. It would be really annoying to have to manually delete this section every time I changed a .resx file in a PR.",
                                           "updatedAt":  "2023-05-30T18:57:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5eCpWK",
                                           "createdAt":  "2023-06-06T01:12:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Yes unfortunately this realistically needs to be fixed in VS first. And VS probably uses the .NET Framework ResourceWriter, which can\u0027t reasonably be changed now, so it would have to do some tricks like editing the file before saving it.\n\nMore power to anyone who has a go at driving that on the VS side. 🙂",
                                           "updatedAt":  "2023-06-06T01:12:32Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Consider removing all the resx schema unnecessary comments auto added by Visual Studio",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "tracking-external-issue"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/87667",
        "createdAt":  "2023-06-16T04:53:46Z",
        "number":  87667,
        "author":  "agocke",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-07-20T16:24:55Z",
        "body":  "Ever since we onboarded AlmaLinux in https://github.com/dotnet/runtime/pull/86342 the `Libraries Test Run release coreclr linux x64 Release` and `Libraries Test Run release mono linux x64 Release` runs have been timing out. Likely some interaction in the tests themselves.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOYgDmkw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5fA_bV",
                                           "createdAt":  "2023-06-16T04:53:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nEver since we onboarded AlmaLinux in https://github.com/dotnet/runtime/pull/86342 the `Libraries Test Run release coreclr linux x64 Release` and `Libraries Test Run release mono linux x64 Release` runs have been timing out. Likely some interaction in the tests themselves.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eagocke\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-06-16T04:53:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5fFbyu",
                                           "createdAt":  "2023-06-16T20:15:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "agocke",
                                           "body":  "This appears to be an issue with MSBuild in this configuration. When I run the System.Diagnostics.Process tests manually, they run and complete successfully, but the MSBuild `Exec` call never finishes.\r\n\r\nI\u0027ve attached a binlog of the issue.\r\n[msbuild.zip](https://github.com/dotnet/runtime/files/11774679/msbuild.zip)\r\n\r\n@rainersigwald @dsplaisted Any ideas? Anything I could do to narrow down the hang?\r\n\r\nThis is in a docker container that was a pretty big pain to setup, so I can help run commands.",
                                           "updatedAt":  "2023-06-16T20:15:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5fFfFW",
                                           "createdAt":  "2023-06-16T20:29:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "The `Libraries Test Run` legs don\u0027t invoke msbuild. They just execute the RunTests.cmd/sh scripts on the helix clients.",
                                           "updatedAt":  "2023-06-16T20:29:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5fFfaf",
                                           "createdAt":  "2023-06-16T20:31:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "agocke",
                                           "body":  "Hmm. Is there a good way to mimic the behavior of running all the tests locally? So I can figure out which one is failing?",
                                           "updatedAt":  "2023-06-16T20:31:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5fFiQG",
                                           "createdAt":  "2023-06-16T20:38:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "agocke",
                                           "body":  "Or to get this info from Helix? All I see in the helix log is this: https://[helix.dot.net/api/jobs/6eeb06e8-f3e5-4897-bd0b-70e966604916/details?api-version=2019-06-17](https://helix.dot.net/api/jobs/6eeb06e8-f3e5-4897-bd0b-70e966604916/details?api-version=2019-06-17)",
                                           "updatedAt":  "2023-06-16T20:38:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5fFvAH",
                                           "createdAt":  "2023-06-16T21:32:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Unfortunately, I don\u0027t know the answer to that. I would defer to MattGal or Santi but they aren\u0027t part of the team anymore. What I know is that there isn\u0027t a way to reproduce how tests are run on Helix, locally - aside from manually executing the RunTests scripts after the test assemblies are built (`libs.tests` subset).",
                                           "updatedAt":  "2023-06-16T21:32:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5gEcgL",
                                           "createdAt":  "2023-06-28T16:58:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@agocke have you had time to reproduce the timeouts locally on an AlmaLinux container?",
                                           "updatedAt":  "2023-06-28T16:58:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5gEwGj",
                                           "createdAt":  "2023-06-28T18:04:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "agocke",
                                           "body":  "I tried, no luck. My initial results where that it looked like both System.Diagnostics.Process and something else (sorry, left on another computer) were timing out.",
                                           "updatedAt":  "2023-06-28T18:04:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5iAOaT",
                                           "createdAt":  "2023-07-20T16:24:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "There\u0027s not really much that we can do at this point without spending a ton of time on this. Moving to Future.",
                                           "updatedAt":  "2023-07-20T16:24:51Z"
                                       }
                                   ],
                         "totalCount":  9
                     },
        "title":  "Libraries tests timing out on AlmaLinux",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/90000",
        "createdAt":  "2023-08-04T08:43:57Z",
        "number":  90000,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-09-19T16:02:38Z",
        "body":  "Follow-up on https://github.com/dotnet/sdk/pull/34279, see discussion in https://github.com/dotnet/runtime/pull/92211",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOY6038g==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5jQbXj",
                                           "createdAt":  "2023-08-04T08:44:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nFollow-up on https://github.com/dotnet/sdk/pull/34279\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`, `blocking-release`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e8.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-08-04T08:44:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5jQcjK",
                                           "createdAt":  "2023-08-04T08:46:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "cc @tmds @MichaelSimons @dsplaisted",
                                           "updatedAt":  "2023-08-04T08:46:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5jRtBA",
                                           "createdAt":  "2023-08-04T13:09:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dsplaisted",
                                           "body":  "Do we want to delete this entirely?  The SDK still consumes and includes the old runtime graph from dotnet/runtime, and projects can opt in to using it by setting `UseRidGraph` to true.",
                                           "updatedAt":  "2023-08-04T13:09:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5jSAVR",
                                           "createdAt":  "2023-08-04T14:04:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODDUw5w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "carlossanlop",
                                                                               "createdAt":  "2023-08-10T16:13:56Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "We don\u0027t want anyone to mutate the current runtime.json RID graph anymore. It\u0027s de-facto frozen. I was under the impression that the full RID graph already moved to the SDK with your recent change. I think we should do that.",
                                           "updatedAt":  "2023-08-04T14:04:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5jSM0S",
                                           "createdAt":  "2023-08-04T14:35:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dsplaisted",
                                           "body":  "No, so far only the trimmed-down, portable graph has been moved to the SDK.  The full RID graph still comes from runtime.",
                                           "updatedAt":  "2023-08-04T14:35:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5jSTwA",
                                           "createdAt":  "2023-08-04T14:55:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODCwhiw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkoritzinsky",
                                                                               "createdAt":  "2023-08-05T02:04:14Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "I see, thanks for the clarification. Any objection to moving it over? We don\u0027t want to ship new versions of Microsoft.NetCore.Platforms anymore, nor do we want to have a transport package, only to carry over a checked-in, frozen asset to the sdk repository.",
                                           "updatedAt":  "2023-08-04T14:55:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5jit9X",
                                           "createdAt":  "2023-08-08T17:46:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "gentle ping @dsplaisted. Whatever we do, we should do it asap as the cut-off for RC1 is approaching. Would you mind adding the full RID graph into the sdk repository and removing the dependency on Microsoft.NETCore.Platforms?",
                                           "updatedAt":  "2023-08-08T17:46:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5jj9MJ",
                                           "createdAt":  "2023-08-08T22:06:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dsplaisted",
                                           "body":  "I would prefer to wait until .NET 9 to make the changes to runtime if that\u0027s OK.  The RID changes are coming in kind of late for .NET 8, and I\u0027d prefer to avoid extra churn.  This shouldn\u0027t affect any runtime or SDK behavior, right, it\u0027s just about simplifying the runtime build?",
                                           "updatedAt":  "2023-08-08T22:06:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5jozcN",
                                           "createdAt":  "2023-08-09T15:36:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "We want to stop shipping the Microsoft.NETCore.Platforms package to make it clear that the graph is frozen. The package today appears on nuget.org. While we could just make it a transport package for the current release, I wonder if it wouldn\u0027t be easier to just move the graph into the sdk repo. I\u0027m fine with either option for .NET 8.",
                                           "updatedAt":  "2023-08-09T15:36:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5jrTfy",
                                           "createdAt":  "2023-08-09T23:08:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODDQ2kA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2023-08-10T06:36:22Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "dsplaisted",
                                           "body":  "I would prefer for .NET 8 to just mark it as a transport package, and then remove it for .NET 9.",
                                           "updatedAt":  "2023-08-09T23:08:22Z"
                                       }
                                   ],
                         "totalCount":  10
                     },
        "title":  "Delete the non portable RID graph in a future release of .NET",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/91698",
        "createdAt":  "2023-09-06T22:13:11Z",
        "number":  91698,
        "author":  "tarekgh",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-26T10:45:26Z",
        "body":  "Today it is manual process to include the source gen projects into the [transport package](https://github.com/dotnet/runtime/blob/913a8447ae0cb0300ba91077988dbc0ab40301a7/src/libraries/Microsoft.Internal.Runtime.AspNetCore.Transport/src/Microsoft.Internal.Runtime.AspNetCore.Transport.proj). This issue tracks if we can improve this process. \r\n\r\n**Viktor Hofer**\r\nIf the expectation is to include the entire package content, then we can just define a package dependency from Microsoft.DotNet.Runtime.AspNetCore.Transport -\u003e i.e. Microsoft.Extensions.Configuration.Binder. That will cause troubles during servicing though. In servicing, we always create the transport packages for the partner teams but libraries packages like System.Text.Json are only created and published on-demand (when something in them changes).\r\nAlso, that would mean that we hand-off more assemblies and package assets to partner teams than today.\r\nI.e. the aspnetcore team would then also get the netstandard2.x and net462 assemblies, all the other roslyn version targeted source generators (roslyn3.11, roslyn4.0, ...) and other potential assets from our packages. This would enlargen our current contract and I\u0027m not sure if that\u0027s what we want.\r\nToday, our transport packages are hand-tailored, meaning that they only include what\u0027s needed: all the reference assemblies, source assemblies and source generator assemblies (for the current roslyn version).\r\nIf we want to change that, please file an issue. Note that the current state (including how to add a source generator) is documented here: [runtime/docs/coding-guidelines/libraries-packaging.md at main · dotnet/runtime (github.com)](https://github.com/dotnet/runtime/blob/main/docs/coding-guidelines/libraries-packaging.md#microsoftinternalruntimetargetrepositorynametransport)\r\n\r\n**Eric St. John**\r\nViktor Hofer I wonder if we could drive the generator project references in the transport package off a list in NetCoreAppLibrary.props instead (EG: NetCoreAppAnalyzer, AspNetCoreAppAnalyzer).\r\nThen when we build a package, we could see if that package includes a generator and the library is in NetCoreAppLibrary or AspNetCoreAppLibrary, but the generator is missing from the respective list NetCoreAppAnalyzer or AspNetCoreAppAnalyzer.  If missing we could raise a suppressible error.\r\n\r\n**Viktor Hofer**\r\nHow would you identify the generators that should be added to the transport package? Most of our source generator aware packages include multiple ones, for different compiler versions. \r\n\r\n**Eric St. John**\r\nGood point, I think it would need to be an \"Any\" vs \"None\" check.\r\n\r\n**Viktor Hofer**\r\nI only NuGet would allow a dependency to not be promoted to a package dependency without making it non transitive. That would allow the latest targeting source generator to be a transitive dependency without promoting it as a package dependency...\r\n\r\n**Eric St. John**\r\nWe could create our own extension to project-reference protocol to flow transitive source generators.\r\n\r\n**Eric St. John**\r\nIn metadata that only we look at.\r\n\r\n**Viktor Hofer**\r\nNuGet calculates transitives and package dependencies based on the project\u0027s project.assets.json file. AFAIK it\u0027s not possible to adjust that algorithm.\r\n\r\n**Eric St. John**\r\nBut don\u0027t we already use build targets to compose those transport packages, since we\u0027re redistributing project references?\r\n\r\n**Eric St. John**\r\nSo it doesn\u0027t really matter what NuGet does, all we need to do is change the content we provide from the project reference.\r\n\r\n**Viktor Hofer**\r\nCorrect. But the transport package still needs the source generator project dependency. The source generator dependency is marked as PrivateAssets=\"all\" in the source project that distributes it which results in it not being listed in the transport package\u0027s project.assets.json.\r\n\r\n**Viktor Hofer**\r\nYour proposal above works. I was saying that it would be nice to not have to list source generators dependency and automatically receive it as transitive of the referenced source project.\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOZeVpWg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5l4EHm",
                                           "createdAt":  "2023-09-06T22:13:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nToday it is manual process to include the source gen projects into the [transitive package](https://github.com/dotnet/runtime/blob/913a8447ae0cb0300ba91077988dbc0ab40301a7/src/libraries/Microsoft.Internal.Runtime.AspNetCore.Transport/src/Microsoft.Internal.Runtime.AspNetCore.Transport.proj). This issue tracks if we can improve this process. \r\n\r\n**Viktor Hofer**\r\nIf the expectation is to include the entire package content, then we can just define a package dependency from Microsoft.DotNet.Runtime.AspNetCore.Transport -\u003e i.e. Microsoft.Extensions.Configuration.Binder. That will cause troubles during servicing though. In servicing, we always create the transport packages for the partner teams but libraries packages like System.Text.Json are only created and published on-demand (when something in them changes).\r\nAlso, that would mean that we hand-off more assemblies and package assets to partner teams than today.\r\nI.e. the aspnetcore team would then also get the netstandard2.x and net462 assemblies, all the other roslyn version targeted source generators (roslyn3.11, roslyn4.0, ...) and other potential assets from our packages. This would enlargen our current contract and I\u0027m not sure if that\u0027s what we want.\r\nToday, our transport packages are hand-tailored, meaning that they only include what\u0027s needed: all the reference assemblies, source assemblies and source generator assemblies (for the current roslyn version).\r\nIf we want to change that, please file an issue. Note that the current state (including how to add a source generator) is documented here: [runtime/docs/coding-guidelines/libraries-packaging.md at main · dotnet/runtime (github.com)](https://github.com/dotnet/runtime/blob/main/docs/coding-guidelines/libraries-packaging.md#microsoftinternalruntimetargetrepositorynametransport)\r\n\r\n**Eric St. John**\r\nViktor Hofer I wonder if we could drive the generator project references in the transport package off a list in NetCoreAppLibrary.props instead (EG: NetCoreAppAnalyzer, AspNetCoreAppAnalyzer).\r\nThen when we build a package, we could see if that package includes a generator and the library is in NetCoreAppLibrary or AspNetCoreAppLibrary, but the generator is missing from the respective list NetCoreAppAnalyzer or AspNetCoreAppAnalyzer.  If missing we could raise a suppressible error.\r\n\r\n**Viktor Hofer**\r\nHow would you identify the generators that should be added to the transport package? Most of our source generator aware packages include multiple ones, for different compiler versions. \r\n\r\n**Eric St. John**\r\nGood point, I think it would need to be an \"Any\" vs \"None\" check.\r\n\r\n**Viktor Hofer**\r\nI only NuGet would allow a dependency to not be promoted to a package dependency without making it non transitive. That would allow the latest targeting source generator to be a transitive dependency without promoting it as a package dependency...\r\n\r\n**Eric St. John**\r\nWe could create our own extension to project-reference protocol to flow transitive source generators.\r\n\r\n**Eric St. John**\r\nIn metadata that only we look at.\r\n\r\n**Viktor Hofer**\r\nNuGet calculates transitives and package dependencies based on the project\u0027s project.assets.json file. AFAIK it\u0027s not possible to adjust that algorithm.\r\n\r\n**Eric St. John**\r\nBut don\u0027t we already use build targets to compose those transport packages, since we\u0027re redistributing project references?\r\n\r\n**Eric St. John**\r\nSo it doesn\u0027t really matter what NuGet does, all we need to do is change the content we provide from the project reference.\r\n\r\n**Viktor Hofer**\r\nCorrect. But the transport package still needs the source generator project dependency. The source generator dependency is marked as PrivateAssets=\"all\" in the source project that distributes it which results in it not being listed in the transport package\u0027s project.assets.json.\r\n\r\n**Viktor Hofer**\r\nYour proposal above works. I was saying that it would be nice to not have to list source generators dependency and automatically receive it as transitive of the referenced source project.\r\n\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003etarekgh\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-09-06T22:13:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5l4WAI",
                                           "createdAt":  "2023-09-06T23:51:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "\u003e Your proposal above works. I was saying that it would be nice to not have to list source generators dependency and automatically receive it as transitive of the referenced source project.\r\n\r\nAgreed.  I think if we just flow them automatically we don\u0027t need any additional state. We just need to make sure that whatever pattern we use to include in the package will also do this flowing to transport package. ",
                                           "updatedAt":  "2023-09-06T23:51:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5l5Wla",
                                           "createdAt":  "2023-09-07T06:11:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "But that requires NuGet tooling support. Today, we decorate the source generator P2Ps in the source projects with `PrivateAssets=all` to avoid them being promoted to package dependencies. But with that, we also stop them being treated as transitive dependencies of the source project.",
                                           "updatedAt":  "2023-09-07T06:11:26Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Automate including the source gen projects in the transport package",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/93877",
        "createdAt":  "2023-10-23T16:00:27Z",
        "number":  93877,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-26T10:43:05Z",
        "body":  "Currently inbox source projects use `\u003cReference /\u003e` items instead of `\u003cProjectReference /\u003e` items. That design dates back to .NET Core 2.0 days, when dependencies were represented differently. With the continuous work over the last years bringing us closer to the customer path, we should consider updating these to use P2Ps instead.\r\n\r\nHere are just some advantages:\r\n- Dependencies are incrementally built\r\n- Inbox projects can be built from a fresh clone without any up-front work (!)\r\n- Faster root builds as a separate reference source projects build isn\u0027t necessary anymore.\r\n\r\nBlocked on https://github.com/NuGet/NuGet.Client/pull/5452",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOadRPyQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5p1E_J",
                                           "createdAt":  "2023-10-23T16:00:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nCurrently inbox source projects use `\u003cReference /\u003e` items instead of `\u003cProjectReference /\u003e` items. That design dates back to .NET Core 2.0 days, when dependencies were represented differently. With the continuous work over the last years bringing us closer to the customer path, we should consider updating these to use P2Ps instead.\r\n\r\nHere are just some advantages:\r\n- Dependencies are incrementally built\r\n- Inbox projects can be built from a fresh clone without any up-front work (!)\r\n- Faster root builds as a separate reference source projects build isn\u0027t necessary anymore.\r\n\r\nBlocked on https://github.com/NuGet/NuGet.Client/pull/5452\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-10-23T16:00:36Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Use ProjectReferences for inbox libraries source projects",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "in-pr",
                       "dev-innerloop"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/97984",
        "createdAt":  "2024-02-05T15:06:38Z",
        "number":  97984,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC1p-9Q==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "pavelsavara",
                                            "createdAt":  "2024-02-05T15:18:47Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-09-12T15:21:40Z",
        "body":  "Reported in https://github.com/dotnet/runtime/pull/97969\r\n\r\nWhen building System.Private.CoreLib as a dependency of i.e. `System.Threading.csproj`, the `Platform` global property is always set to AnyCPU even though dotnet/runtime sets it to `TargetArchitecture`: https://github.com/dotnet/runtime/blob/cb0e160e50593ab014064a2e675b8d2e54ca3107/src/coreclr/Directory.Build.props#L3\r\n\r\nLooking at a full fidelity binlog created by the project system tools, I can see that this is related to our custom Microsoft.DotNet.Build.Tasks.TargetFramework component:\r\n\r\n![image](https://github.com/dotnet/runtime/assets/7412651/b4fd50d7-fd89-43b4-bc99-2e287f8a1a49)\r\n\r\nThe target from our custom component is slightly different than what is inbox in msbuild: https://github.com/dotnet/msbuild/blob/bea6b4aebe6548d714ca643db9107162965b94d5/src/Tasks/Microsoft.Common.CurrentVersion.targets#L1755-L1951\r\n\r\nProbably most relevant is that our custom target doesn\u0027t support the `EnableDynamicPlatformResolution` setting which might be the reason why SetPlatform is passed in with a value of \"AnyCPU\".\r\n\r\nThis causes builds to fail, i.e. `.\\build.cmd -os browser -subset mono+libs \u0026\u0026 .\\build.cmd -vs src\\libraries\\System.Runtime.InteropServices.JavaScript\\System.Runtime.InteropServices.JavaScript.sln -rf Mono -os browser`:\r\n\r\n![image](https://github.com/dotnet/runtime/assets/7412651/ec1d205a-c2d5-454d-8fae-26a0c205a552)\r\n\r\ncc @ericstj",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOw9fppw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5y3u0w",
                                           "createdAt":  "2024-02-05T15:06:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nReported in https://github.com/dotnet/runtime/pull/97969\r\n\r\nWhen building System.Private.CoreLib as a dependency of i.e. `System.Threading.csproj`, the `Platform` global property is always set to AnyCPU even though dotnet/runtime sets it to `TargetArchitecture`: https://github.com/dotnet/runtime/blob/cb0e160e50593ab014064a2e675b8d2e54ca3107/src/coreclr/Directory.Build.props#L3\r\n\r\nLooking at a full fidelity binlog created by the project system tools, I can see that this is related to our custom Microsoft.DotNet.Build.Tasks.TargetFramework component:\r\n\r\n![image](https://github.com/dotnet/runtime/assets/7412651/b4fd50d7-fd89-43b4-bc99-2e287f8a1a49)\r\n\r\nThe target from our custom component is slightly different than what is inbox in msbuild: https://github.com/dotnet/msbuild/blob/bea6b4aebe6548d714ca643db9107162965b94d5/src/Tasks/Microsoft.Common.CurrentVersion.targets#L1755-L1951\r\n\r\nProbably most relevant is that our custom target doesn\u0027t support the `EnableDynamicPlatformResolution` setting which might be the reason why SetPlatform is passed in with a value of \"AnyCPU\".\r\n\r\nThis causes builds to fail, i.e.:\r\n![image](https://github.com/dotnet/runtime/assets/7412651/ec1d205a-c2d5-454d-8fae-26a0c205a552)\r\n\r\ncc @ericstj\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2024-02-05T15:06:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5zEfeH",
                                           "createdAt":  "2024-02-06T18:49:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "Seems like you\u0027re on to something.  IIRC the way the TargetFramework selection works is we run a target early to calculate the TargetFramework properties ourselves, then we set `SkipGetTargetFrameworkProperties` on those projects to apply the TFM.\r\n\r\nI noticed this:\r\nhttps://github.com/dotnet/msbuild/blob/bea6b4aebe6548d714ca643db9107162965b94d5/src/Tasks/Microsoft.Common.CurrentVersion.targets#L1834-L1860\r\n\r\nThe second call when `\u0027$(EnableDynamicPlatformResolution)\u0027 == \u0027true\u0027\"` removes additional properties `Platform;Configuration;`\r\n\r\n@ViktorHofer - maybe give a try of modifying https://github.com/dotnet/arcade/blob/8cfc9489d3e51071fedec9dcb99071dc912718bd/src/Microsoft.DotNet.Build.Tasks.TargetFramework/src/build/Microsoft.DotNet.Build.Tasks.TargetFramework.targets#L43-L54 to do this and see if it fixes the issue?",
                                           "updatedAt":  "2024-02-06T18:49:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6FsGoy",
                                           "createdAt":  "2024-07-22T13:13:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-07-22T13:13:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6FsI-Q",
                                           "createdAt":  "2024-07-22T13:17:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "We don\u0027t opt into using `EnableDynamicPlatformResolution` in runtime. That second call in the Common.targets from the link above can be ignored.",
                                           "updatedAt":  "2024-07-22T13:17:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7D1-mn",
                                           "createdAt":  "2025-09-12T15:21:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "I suspect the problem here is more to do with \n\u003e  even though dotnet/runtime sets it to TargetArchitecture:\n\nRather than\n\u003e related to our custom Microsoft.DotNet.Build.Tasks.TargetFramework component\n\nWe could test that theory by doing something similar to what is done in https://github.com/dotnet/runtime/blob/5878338c8cdd5e3f299c4ef95797f9466cfb4464/eng/OSArch.props#L33\nIn a normal user project and see what happens in SLN build.  I suspect that would do the same thing.\n\nSLN builds do require top level knowledge of the platform for every project, and this gets passed in as a global property to the project evaluation.  This is how you have a sln platform be a mix of Platform values without some sophisticated compatibility system in the build - its just a mapping table.\n\nIdeally we could just have VS / VSCode / C# DevKit not pass platform at all, but that might not be possible.  If not, then we might have to workaround that but unsetting the global property.  One trick might be to treat as local in OSArch.props and also consider a value of \"AnyCPU\" in the same way we treat \"\".  If that doesn\u0027t work, then we\u0027ll need to muck with how the PlatformProperty flows across project-references.",
                                           "updatedAt":  "2025-09-12T15:21:40Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "System.Private.CoreLib\u0027s \"Platform\" is always set to AnyCPU when building inside Visual Studio which causes build failures",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "dev-innerloop"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/98132",
        "createdAt":  "2024-02-07T22:25:43Z",
        "number":  98132,
        "author":  "danmoseley",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-22T11:51:10Z",
        "body":  "see context in https://github.com/dotnet/runtime/pull/97624\r\n\r\nwe want to dump the last few minutes/few tens of lines of the system log when unit tests terminate with an error. `dmesg` works on Linux, but gets this on macOS\r\n```\r\nUnable to obtain kernel buffer: Operation not permitted\r\nusage: sudo dmesg\r\n```\r\n@am11 offered to make it use `log` on macOS (I don\u0027t have hardware to verify on). ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOdnIseg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5zOBi6",
                                           "createdAt":  "2024-02-07T22:41:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nsee context in https://github.com/dotnet/runtime/pull/97624\r\n\r\nwe want to dump the last few minutes/few tens of lines of the system log when unit tests terminate with an error. `dmesg` works on Linux, but gets this on macOS\r\n```\r\nUnable to obtain kernel buffer: Operation not permitted\r\nusage: sudo dmesg\r\n```\r\n@am11 offered to make it use `log` on macOS (I don\u0027t have hardware to verify on). \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003edanmoseley\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003eam11\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2024-02-07T22:41:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5zOBpt",
                                           "createdAt":  "2024-02-07T22:42:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "@jkoritzinsky I know the test infra has changed in this repo. Is there any other place that dmesg/log should be called?",
                                           "updatedAt":  "2024-02-07T22:42:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5zOcNp",
                                           "createdAt":  "2024-02-08T00:27:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "For the libraries tests that\u0027s the place to add it.\r\n\r\nIf we want to add it for the runtime tests, then adding it in helixpublishwitharcade.proj would probably be the best place.",
                                           "updatedAt":  "2024-02-08T00:27:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc52b6MB",
                                           "createdAt":  "2024-03-10T00:52:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "@Am11 do you expect to have cycles to throw up a PR?",
                                           "updatedAt":  "2024-03-10T00:52:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc52cix6",
                                           "createdAt":  "2024-03-10T11:31:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "I\u0027ll need to figure out how to test it locally. Will try. 😅",
                                           "updatedAt":  "2024-03-10T11:31:49Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "dump system log on macos when test run terminates unexpectedly",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "help wanted"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/101750",
        "createdAt":  "2024-04-30T23:14:23Z",
        "number":  101750,
        "author":  "jaredpar",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-26T10:47:07Z",
        "body":  "### Description\n\nThe runtime ships versioned analyzers in NuPkg. Essentially different versions of an analyzer / generator for different versions of the Roslyn API. This results in NuPkg that have the following file layout:\r\n\r\n```\r\nanalyzers\\dotnet\\roslyn3.11\\cs\\Microsoft.Extensions.Logging.Abstractions.dll\r\nanalyzers\\dotnet\\roslyn4.0\\cs\\Microsoft.Extensions.Logging.Abstractions.dll\r\n```\r\n\r\nThese analyzers are functionally very different but maintain the same strong name. This creates problems in build because if both are passed to the C# compiler, particularly on desktop, then it forces a VBCSCompiler restart. There is no way for the compiler to load both into the same `AppDomain`, there is an inherent conflict so the server must restart.\n\n### Reproduction Steps\n\nUse a `\u003cPackageReference\u003e` to Microsoft.Extensions.Logging.Abstractions in an old style project. \n\n### Expected behavior\n\nThe expected behavior is that the build system should never send both of these to the compiler. The design of our SDK essentially guarantees we\u0027ll pick only one of the versions. \r\n\r\nHowever that is only true for new style projects. For projects running on the traditional MSBuild SDK versioned analyzers are not supported. Our analyzer packages compensate for this by shipping .targets files that detect older SDKs and do some post processing that effectively pick the analyzer targeting the lower version of roslyn. In this case that is the roslyn3.11 version.\r\n\r\nThat is a problem when a solution has a mix of old and new style projects. The new style projects will send the roslyn4.0 version while the old style projects will send the roslyn3.11 version of analyzers to the compiler. That creates conflicts which cause the server to restart and result in a significant increase in build times.\r\n\n\n### Actual behavior\n\nThe references with different functionality should have different strong names. \n\n### Regression?\n\nMaybe\n\n### Known Workarounds\n\nThe known work arounds:\r\n\r\n1. Customers convert all their projects to new style SDK projects. This is not always feasible. \r\n2. Customers should use `dotnet build` as `AssemblyLoadContext` allows us to avoid this problem.\r\n3. MSBuild magic to mess with analyzers\r\n\r\n\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhgyLdw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc58b6QA",
                                           "createdAt":  "2024-04-30T23:14:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-04-30T23:14:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6FX3lo",
                                           "createdAt":  "2024-07-18T21:13:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "@eiriktsarpalis, @tarekgh - this applies to JSON, Logging, and Options generators.  I think the suggestion here would be that they get different file names per roslyn version or perhaps different versions somehow.\r\n\r\nI don\u0027t think this applies to our framework source generators, since those will have a different major version per framework.  @jaredpar can you confirm?",
                                           "updatedAt":  "2024-07-18T21:13:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Fe5JT",
                                           "createdAt":  "2024-07-19T15:31:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jaredpar",
                                           "body":  "\u003e I don\u0027t think this applies to our framework source generators, since those will have a different major version per framework.\r\n\r\nAre they strong named signed? If so then diff major versions is enough. ",
                                           "updatedAt":  "2024-07-19T15:31:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6FtP03",
                                           "createdAt":  "2024-07-22T15:24:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "FWIW here\u0027s the code path in the sdk that parses analyzer assemblies from nuget packages: https://github.com/dotnet/sdk/blob/1a84d18ec99eec5c48830bdee2be3476789fb123/src/Tasks/Microsoft.NET.Build.Tasks/ResolvePackageAssets.cs#L935-L1111\r\n\r\nLooks like different assembly names would be fine. Different version should be possible as well, i.e. `9.3.11.0` for roslyn3.11.",
                                           "updatedAt":  "2024-07-22T15:24:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6GDIt3",
                                           "createdAt":  "2024-07-24T21:59:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jaredpar",
                                           "body":  "\u003e FWIW here\u0027s the code path in the sdk that parses analyzer assemblies from nuget packages\r\n\r\nThat is only one of the implementations. There are others \r\n\r\nhttps://github.com/dotnet/NuGet.BuildTasks/blob/2342ea5526c954d8cab77c30a290a82bd5cc6b44/src/Microsoft.NuGet.Build.Tasks/ResolveNuGetPackageAssets.cs#L360\r\n",
                                           "updatedAt":  "2024-07-24T21:59:26Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Generators for different roslyn versions need different strong names",
        "labels":  [
                       "enhancement",
                       "area-Infrastructure-libraries",
                       "source-generator"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/102837",
        "createdAt":  "2024-05-29T19:12:31Z",
        "number":  102837,
        "author":  "steveharter",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-26T10:47:08Z",
        "body":  "When trimming tests are added to an OOB assembly, such as `System.Data.OleDb`, the build\\test command results in error messages like this due to the source assembly not being found. This is due to missing target architecture in the path:\r\n```\r\nC:\\git\\ComponentModel\\.dotnet\\sdk\\9.0.100-preview.3.24204.13\\Microsoft.Common.CurrentVersion.targets(4983,5): error MSB3030: Could not copy the file \"C:\\git\\ComponentModel\\artifacts\\bin\\System.Data.Odbc\\Release\\net9.0\\System.Data.\r\nOdbc.dll\" because it was not found. [C:\\git\\ComponentModel\\artifacts\\bin\\trimmingTests\\projects\\System.Data.Odbc.TrimmingTests\\OdbcParameterTest\\win-x64\\project.csproj]\r\n```\r\nIn this case, there is no `net9.0` subfolder, but there is `net9.0-windows`, `net9.0-unix`, etc.\r\n\r\nFWIW adding trimming tests include:\r\n- Adding a `ILLink.Descriptors.xml` file to the library\u0027s `tests` folder with a reference to that in the test\u0027s `cproj` file like this:\r\n  -  `\u003cTrimmerRootDescriptor Include=\"$(MSBuildThisFileDirectory)ILLink.Descriptors.xml\" /\u003e`\r\n- Adding a ` TrimmingTests` folder to the library\u0027s `tests` folder which includes a `.proj` file as well as `.cs` files for the tests.\r\n- Building like this:\r\n  - `build.cmd -s libs.tests /p:TestAssemblies=false /p:TestTrimming=true`\r\n\r\nLinking https://github.com/dotnet/runtime/issues/102244 for the need to add OOB trimming tests.\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOf-gXVQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5_cLLa",
                                           "createdAt":  "2024-05-29T19:12:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-05-29T19:12:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5_cgCL",
                                           "createdAt":  "2024-05-29T20:06:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-05-29T20:06:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5_6BdV",
                                           "createdAt":  "2024-06-03T19:01:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "I wonder if this is due to how the test is referencing the src library?  @steveharter could you share the change you tried that didn\u0027t work here?\r\n\r\nFWIW, I see the product test uses the following frameworks.\r\nhttps://github.com/dotnet/runtime/blob/a4407a106f883a6593105a660d44da6f8fa4017c/src/libraries/System.Data.OleDb/tests/System.Data.OleDb.Tests.csproj#L3\r\n\r\nI could imagine if the trimming test wasn\u0027t using the same it might hit a case where the assembly it needed wasn\u0027t built in a vertical build - since the vertical build will only build a subset of the frameworks.\r\n\r\n",
                                           "updatedAt":  "2024-06-03T19:01:31Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Unable to add trimming tests for OOB assemblies",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "linkable-framework",
                       "needs-further-triage"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/103190",
        "createdAt":  "2024-06-08T02:44:48Z",
        "number":  103190,
        "author":  "stephentoub",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-26T10:50:33Z",
        "body":  "Coverage is working fine on some assemblies, e.g. `dotnet build /t:test /p:Coverage` on channels:\r\n```\r\n    Discovering: System.Threading.Channels.Tests (method display = ClassAndMethod, method display options = None)\r\n    Discovered:  System.Threading.Channels.Tests (found 538 test cases)\r\n    Starting:    System.Threading.Channels.Tests (parallel test collections = on [12 threads], stop on fail = off)\r\n      System.Threading.Channels.Tests.StressTests.CanceledReads [SKIP]\r\n        Condition(s) not met: \"IsStressModeEnabled\"\r\n      System.Threading.Channels.Tests.StressTests.ReadWriteVariations [SKIP]\r\n        Condition(s) not met: \"IsStressModeEnabled\"\r\n    Finished:    System.Threading.Channels.Tests\r\n  === TEST EXECUTION SUMMARY ===\r\n     System.Threading.Channels.Tests  Total: 1362, Errors: 0, Failed: 0, Skipped: 2, Time: 10.065s\r\n\r\n  Calculating coverage result...\r\n    Generating report \u0027D:\\repos\\runtime\\artifacts\\bin\\System.Threading.Channels.Tests\\Debug\\net9.0\\coverage.opencover.xml\u0027\r\n  +---------------------------+--------+--------+--------+\r\n  | Module                    | Line   | Branch | Method |\r\n  +---------------------------+--------+--------+--------+\r\n  | System.Threading.Channels | 97.74% | 96.7%  | 97.44% |\r\n  +---------------------------+--------+--------+--------+\r\n\r\n  +---------+--------+--------+--------+\r\n  |         | Line   | Branch | Method |\r\n  +---------+--------+--------+--------+\r\n  | Total   | 97.74% | 96.7%  | 97.44% |\r\n  +---------+--------+--------+--------+\r\n  | Average | 97.74% | 96.7%  | 97.44% |\r\n  +---------+--------+--------+--------+\r\n```\r\n\r\nBut on others, it\u0027s failing to produce any data, e.g. on immutable collections:\r\n```\r\n    Discovering: System.Collections.Immutable.Tests (method display = ClassAndMethod, method display options = None)\r\n    Discovered:  System.Collections.Immutable.Tests (found 4287 of 4392 test cases)\r\n    Starting:    System.Collections.Immutable.Tests (parallel test collections = on [12 threads], stop on fail = off)\r\n    Finished:    System.Collections.Immutable.Tests\r\n  === TEST EXECUTION SUMMARY ===\r\n     System.Collections.Immutable.Tests  Total: 20604, Errors: 0, Failed: 0, Skipped: 0, Time: 5.713s\r\n\r\n  Calculating coverage result...\r\n    Generating report \u0027D:\\repos\\runtime\\artifacts\\bin\\System.Collections.Immutable.Tests\\Debug\\net9.0\\coverage.opencover.xml\u0027\r\n  +------------------------------+------+--------+--------+\r\n  | Module                       | Line | Branch | Method |\r\n  +------------------------------+------+--------+--------+\r\n  | System.Collections.Immutable | 0%   | 0%     | 0%     |\r\n  +------------------------------+------+--------+--------+\r\n\r\n  +---------+------+--------+--------+\r\n  |         | Line | Branch | Method |\r\n  +---------+------+--------+--------+\r\n  | Total   | 0%   | 0%     | 0%     |\r\n  +---------+------+--------+--------+\r\n  | Average | 0%   | 0%     | 0%     |\r\n  +---------+------+--------+--------+\r\n```\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOgLP7EA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6AfoQF",
                                           "createdAt":  "2024-06-08T02:45:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-06-08T02:45:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6AqGMF",
                                           "createdAt":  "2024-06-10T14:26:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e But on others, it\u0027s failing to produce any data, e.g. on immutable collections:\r\n\r\nIs there any information available in a log on why? Is the assembly instrumented correctly before running? Here are some docs / env var settings on how to get more detailed logs: https://github.com/coverlet-coverage/coverlet/blob/master/Documentation/Troubleshooting.md#enable-injected-tracker-log",
                                           "updatedAt":  "2024-06-10T14:26:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6As_sQ",
                                           "createdAt":  "2024-06-10T21:02:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "stephentoub",
                                           "body":  "\u003e \u003e But on others, it\u0027s failing to produce any data, e.g. on immutable collections:\n\u003e \n\u003e Is there any information available in a log on why? Is the assembly instrumented correctly before running? Here are some docs / env var settings on how to get more detailed logs: https://github.com/coverlet-coverage/coverlet/blob/master/Documentation/Troubleshooting.md#enable-injected-tracker-log\n\nNothing I saw that suggested what the problem was, but I\u0027d appreciate you trying. ",
                                           "updatedAt":  "2024-06-10T21:02:58Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Code coverage fails on some assemblies",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "needs-further-triage"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/104033",
        "createdAt":  "2024-06-26T13:50:40Z",
        "number":  104033,
        "author":  "eiriktsarpalis",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-09T18:00:00Z",
        "body":  "When building this repo with an `-arch` parameter unspecified, the default value will be resolved from the architecture of the currently running process:\r\n\r\nhttps://github.com/dotnet/runtime/blob/5c53e8ec9ca1a06a31c45936d3058fd6b1dc5961/eng/build.ps1#L14\r\n\r\nI use bash on Windows ARM which for the moment doesn\u0027t have a native arm64 build. For this reason, I always need to explicitly specify and `-arch arm64` parameter to build the runtime using the native architecture. It would be really nice if we could configure the default build architecture using a dedicated environment variable.\r\n\r\n**EDIT** See https://github.com/dotnet/runtime/issues/104033#issuecomment-2217141845 for a workaround.\r\n\r\ncc @ViktorHofer ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhDj3mg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6Co6Sm",
                                           "createdAt":  "2024-06-26T13:51:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-06-26T13:51:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Co-dw",
                                           "createdAt":  "2024-06-26T13:57:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vcsjones",
                                           "body":  "+1. I have the same situation with SSHing in to WoA because the SSH DevTunnel agent uses x86 emulation on ARM.\n\n",
                                           "updatedAt":  "2024-06-26T13:57:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6CpJUk",
                                           "createdAt":  "2024-06-26T14:15:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eiriktsarpalis",
                                           "body":  "Here\u0027s a sketch implementation:\r\n\r\nhttps://github.com/eiriktsarpalis/runtime/commit/f2c4e6b87d88e7022c5fcd2b6fc1ad9db25ddda5\r\n\r\nDo we need this for `build.sh`? The default is being resolved somewhat differently there and I\u0027m assuming there isn\u0027t an explicit need to configure this.",
                                           "updatedAt":  "2024-06-26T14:16:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Cp0C9",
                                           "createdAt":  "2024-06-26T15:29:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eiriktsarpalis",
                                           "body":  "Any suggestions on the name? I started with `DOTNET_RUNTIME_REPO_DEFAULT_ARCH` but not aware of any prior art in naming convention used for environment variables in infrastructure.",
                                           "updatedAt":  "2024-06-26T15:29:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6EJuZV",
                                           "createdAt":  "2024-07-09T09:24:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eiriktsarpalis",
                                           "body":  "Similar to https://github.com/dotnet/runtime/issues/104548#issuecomment-2214581797 one workaround is using the registry to set a preferred architecture for powershell.exe:\r\n\r\n* `HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\powershell.exe\\PreferredMachine`\r\n\r\nas a DWORD set to the hex value of `aa64`.",
                                           "updatedAt":  "2024-07-09T09:24:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6EOPea",
                                           "createdAt":  "2024-07-09T17:56:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODpBMrA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "eiriktsarpalis",
                                                                               "createdAt":  "2024-07-09T18:16:39Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkotas",
                                           "body":  "Updated title to reflect more general design discussed in https://github.com/dotnet/runtime/pull/104474 : Introduce `DOTNET_RUNTIME_BUILD_ARGS` environment that can be used to specify defaults for all `build.cmd/.sh` parameters that can be specified just once. For example `DOTNET_RUNTIME_BUILD_ARGS=-arch arm64 -c Release` would make the build.cmd/.sh scripts to produce release build for arm64 architecture by default.",
                                           "updatedAt":  "2024-07-09T18:00:00Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "Support configuring the default build.cmd/.sh parameters using an environment variable",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/105138",
        "createdAt":  "2024-07-19T10:14:10Z",
        "number":  105138,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-26T10:50:37Z",
        "body":  "This is from a fully no-op build of a reference source project that doesn\u0027t have any dependencies:\r\n\r\n```\r\nC:\\git\\runtime4\u003e.\\.dotnet\\dotnet.exe msbuild /t:Build /v:minimal /clp:performancesummary C:\\git\\runtime4\\src\\libraries\\System.Runtime\\ref\\System.Runtime.csproj\r\n\r\n  System.Runtime -\u003e C:\\git\\runtime4\\artifacts\\bin\\System.Runtime\\ref\\Debug\\net9.0\\System.Runtime.dll\r\n\r\nProject Evaluation Performance Summary:\r\n      557 ms  C:\\git\\runtime4\\src\\libraries\\System.Runtime\\ref\\System.Runtime.csproj   1 calls\r\n\r\nProject Performance Summary:\r\n      347 ms  C:\\git\\runtime4\\src\\libraries\\System.Runtime\\ref\\System.Runtime.csproj   1 calls\r\n                347 ms  Build                                      1 calls\r\n\r\nTarget Performance Summary:\r\n        0 ms  ResGen                                     1 calls\r\n        0 ms  PrepareResourceNames                       1 calls\r\n        0 ms  PrepareResources                           1 calls\r\n        0 ms  AfterResGen                                1 calls\r\n        0 ms  BeforeResGen                               1 calls\r\n        0 ms  ResolvePackageDependenciesForBuild         1 calls\r\n        0 ms  GetReferenceAssemblyPaths                  1 calls\r\n        0 ms  CreateCustomManifestResourceNames          1 calls\r\n        0 ms  ValidateCommandLineProperties              1 calls\r\n        0 ms  GenerateSourceLinkFile                     1 calls\r\n        0 ms  InitializeSourceControlInformation         1 calls\r\n        0 ms  CreateSatelliteAssemblies                  1 calls\r\n        0 ms  BeforeCompile                              1 calls\r\n        0 ms  ConfigureGenerators                        1 calls\r\n        0 ms  AfterBuild                                 1 calls\r\n        0 ms  _CopySourceItemsToOutputDirectory          1 calls\r\n        0 ms  GetFrameworkPaths                          1 calls\r\n        0 ms  CoreBuild                                  1 calls\r\n        0 ms  SetWin32ManifestProperties                 1 calls\r\n        0 ms  BeforeBuild                                1 calls\r\n        0 ms  GenerateMSBuildEditorConfigFile            1 calls\r\n        0 ms  Deploy                                     1 calls\r\n        0 ms  AfterCompile                               1 calls\r\n        0 ms  BeforeResolveReferences                    1 calls\r\n        0 ms  Compile                                    1 calls\r\n        0 ms  BuildOnlySettings                          1 calls\r\n        0 ms  ResolveLockFileAnalyzers                   1 calls\r\n        0 ms  EnableIntermediateOutputPathMismatchWarning   1 calls\r\n        0 ms  _CustomizeResourceNames                    1 calls\r\n        0 ms  PrepareProjectReferences                   1 calls\r\n        0 ms  PrepareForRun                              1 calls\r\n        0 ms  IncludeTransitiveProjectReferences         1 calls\r\n        0 ms  GenerateAssemblyInfo                       1 calls\r\n        0 ms  BinPlace                                   1 calls\r\n        0 ms  GetTargetPath                              1 calls\r\n        0 ms  _AddOutputPathToGlobalPropertiesToRemove   1 calls\r\n        0 ms  Build                                      1 calls\r\n        0 ms  AfterResolveReferences                     1 calls\r\n        0 ms  _SetTargetFrameworkMonikerAttribute        1 calls\r\n        0 ms  ResolveReferences                          1 calls\r\n        0 ms  VerifyBuildFlags                           1 calls\r\n        0 ms  _PopulateCommonStateForGetCopyToOutputDirectoryItems   1 calls\r\n        0 ms  _DefaultMicrosoftNETPlatformLibrary        1 calls\r\n        0 ms  _CheckForUnsupportedHostingUsage           1 calls\r\n        0 ms  _ComputeNETCoreBuildOutputFiles            1 calls\r\n        0 ms  CopyAdditionalFiles                        1 calls\r\n        0 ms  _ComputeUserRuntimeAssemblies              1 calls\r\n        0 ms  IgnoreJavaScriptOutputAssembly             1 calls\r\n        0 ms  _BeforeVBCSCoreCompile                     1 calls\r\n        0 ms  _GenerateResxSource                        1 calls\r\n        0 ms  _CheckAndUnsetUnsupportedPrefer32Bit       1 calls\r\n        0 ms  _CheckForObsoleteDotNetCliToolReferences   1 calls\r\n        0 ms  ShimReferencePathsWhenCommonTargetsDoesNotUnderstandReferenceAssemblies   1 calls\r\n        0 ms  _CheckForUnsupportedCppNETCoreVersion      1 calls\r\n        0 ms  UseTargetingPackForAssemblySearchPaths     1 calls\r\n        0 ms  FindReferenceAssembliesForReferences       1 calls\r\n        0 ms  _CheckForUnsupportedArtifactsPath          1 calls\r\n        0 ms  ResolveLockFileCopyLocalFiles              1 calls\r\n        0 ms  ResolveSDKReferences                       1 calls\r\n        0 ms  AddOSPlatformAttributes                    1 calls\r\n        0 ms  GetAssemblyVersion                         1 calls\r\n        0 ms  RemoveSupportedOSTargetPlatformAttributeFromProjects   1 calls\r\n        0 ms  ExpandSDKReferences                        1 calls\r\n        0 ms  GenerateMSBuildEditorConfigFileShouldRun   1 calls\r\n        0 ms  AddImplicitDefineConstants                 1 calls\r\n        0 ms  _SplitProjectReferencesByFileExistence     1 calls\r\n        0 ms  _BatchGenerateResxSource                   1 calls\r\n        0 ms  GetTargetPathWithTargetPlatformMoniker     1 calls\r\n        0 ms  _InitializeAssemblyVersion                 1 calls\r\n        0 ms  _ComputeReferenceAssemblies                1 calls\r\n        0 ms  _CheckForLanguageAndFeatureCombinationSupport   1 calls\r\n        0 ms  CoreResGen                                 1 calls\r\n        0 ms  _ComputeSkipAnalyzers                      1 calls\r\n        0 ms  _GenerateCompileInputs                     1 calls\r\n        0 ms  _GetProjectJsonPath                        1 calls\r\n        0 ms  _CheckContainersPackage                    1 calls\r\n        0 ms  _GenerateSatelliteAssemblyInputs           1 calls\r\n        0 ms  _CheckForCompileOutputs                    1 calls\r\n        0 ms  ValidateReferenceAssemblyProjectReferencesAndTargetFramework   1 calls\r\n        0 ms  _GetCopyToOutputDirectoryItemsFromThisProject   1 calls\r\n        0 ms  AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisCSharpCodeStyle   1 calls\r\n        0 ms  ResolveProjectReferences                   1 calls\r\n        1 ms  ResolveAssemblyReferences                  1 calls\r\n        1 ms  _CheckForUnsupportedNETCoreVersion         1 calls\r\n        1 ms  _BlockWinMDsOnUnsupportedTFMs              1 calls\r\n        1 ms  GetBinPlaceItems                           1 calls\r\n        1 ms  _GetCopyToOutputDirectoryItemsFromTransitiveProjectReferences   1 calls\r\n        1 ms  FlagNetStandard1xDependencies              1 calls\r\n        1 ms  ResolveKeySource                           1 calls\r\n        1 ms  ResolveLockFileReferences                  1 calls\r\n        1 ms  _ComputePackageReferencePublish            1 calls\r\n        1 ms  GetAssemblyAttributes                      1 calls\r\n        1 ms  SplitResourcesByCulture                    1 calls\r\n        1 ms  GenerateBuildDependencyFile                1 calls\r\n        1 ms  _TouchLastBuildWithSkipAnalyzers           1 calls\r\n        2 ms  CoreGenerateAssemblyInfo                   1 calls\r\n        2 ms  CoreCompile                                1 calls\r\n        2 ms  AssignTargetPaths                          1 calls\r\n        2 ms  CheckForImplicitPackageReferenceOverrides   1 calls\r\n        2 ms  IncrementalClean                           1 calls\r\n        2 ms  ValidateExecutableReferences               1 calls\r\n        2 ms  _GenerateCompileDependencyCache            1 calls\r\n        2 ms  _GetRestoreProjectStyle                    1 calls\r\n        2 ms  CheckForDuplicateItems                     1 calls\r\n        3 ms  UpdateAspNetToFrameworkReference           1 calls\r\n        3 ms  GenerateNETCompatibleDefineConstants       1 calls\r\n        3 ms  ApplyImplicitVersions                      1 calls\r\n        3 ms  GenerateTargetFrameworkMonikerAttribute    1 calls\r\n        3 ms  _HandlePackageFileConflicts                1 calls\r\n        3 ms  CreateGeneratedAssemblyInfoInputsCacheFile   1 calls\r\n        4 ms  _CheckForInvalidConfigurationAndPlatform   1 calls\r\n        4 ms  _SetEmbeddedWin32ManifestProperties        1 calls\r\n        4 ms  _ComputeToolPackInputsToProcessFrameworkReferences   1 calls\r\n        5 ms  BinPlaceFiles                              2 calls\r\n        6 ms  _CleanGetCurrentAndPriorFileWrites         1 calls\r\n        6 ms  CopyFilesToOutputDirectory                 1 calls\r\n        7 ms  ResolvePackageAssets                       1 calls\r\n        7 ms  GenerateMSBuildEditorConfigFileCore        1 calls\r\n        9 ms  CollectPackageReferences                   1 calls\r\n       12 ms  GetCopyToOutputDirectoryItems              1 calls\r\n       22 ms  _CollectTargetFrameworkForTelemetry        1 calls\r\n       42 ms  _GetProjectReferenceTargetFrameworkProperties   1 calls\r\n       45 ms  PrepareForBuild                            1 calls\r\n      102 ms  GetBinPlaceTargetFramework                 1 calls\r\n\r\nTask Performance Summary:\r\n        0 ms  AssignCulture                              1 calls\r\n        0 ms  CheckForUnsupportedWinMDReferences         1 calls\r\n        0 ms  ConvertToAbsolutePath                      1 calls\r\n        0 ms  Delete                                     1 calls\r\n        0 ms  ResolveKeySource                           1 calls\r\n        0 ms  FindAppConfigFile                          1 calls\r\n        0 ms  ApplyImplicitVersions                      1 calls\r\n        0 ms  JoinItems                                  1 calls\r\n        1 ms  RemoveDuplicates                           2 calls\r\n        1 ms  SetRidAgnosticValueForProjects             1 calls\r\n        1 ms  MSBuild                                    1 calls\r\n        1 ms  Touch                                      1 calls\r\n        1 ms  ValidateExecutableReferences               1 calls\r\n        1 ms  CheckForDuplicateNuGetItemsTask            1 calls\r\n        1 ms  CheckForImplicitPackageReferenceOverrides   1 calls\r\n        1 ms  AssignTargetPath                           6 calls\r\n        1 ms  ReadLinesFromFile                          1 calls\r\n        1 ms  Hash                                       2 calls\r\n        2 ms  CheckIfPackageReferenceShouldBeFrameworkReference   2 calls\r\n        2 ms  GetRestoreProjectStyleTask                 1 calls\r\n        2 ms  CheckForDuplicateItems                     3 calls\r\n        2 ms  FindUnderPath                              5 calls\r\n        2 ms  ResolvePackageFileConflicts                1 calls\r\n        2 ms  Message                                    5 calls\r\n        3 ms  WriteLinesToFile                           2 calls\r\n        3 ms  GenerateMSBuildEditorConfig                1 calls\r\n        3 ms  GetFrameworkPath                           1 calls\r\n        4 ms  AllowEmptyTelemetry                        1 calls\r\n        5 ms  ResolvePackageAssets                       1 calls\r\n        7 ms  MakeDir                                    1 calls\r\n        8 ms  CallTarget                                 2 calls\r\n        8 ms  Copy                                       3 calls\r\n       99 ms  ChooseBestTargetFrameworksTask             1 calls\r\n```\r\n\r\nCode path: https://github.com/dotnet/arcade/blob/6d13437862aac429c56ab1516ac0a434ef9a2b94/src/Microsoft.DotNet.Build.Tasks.TargetFramework/src/build/BinPlace.targets#L76-L82\r\n\r\nBinlog details:\r\n![image](https://github.com/user-attachments/assets/a7cb8a87-b548-460c-aa16-b7cabc89822c)\r\n\r\n---\r\n\r\nA few observations:\r\n1. Reference source projects never target OS specific TFMs. All inbox libraries target `$(NetCoreAppCurrent)` already so this entire calculation is unnecessary.\r\n2. There might be an opportunity to skip this entire logic. Neither the `GetBinPlaceTargetFramework` nor the `BinPlaceFiles` targets define inputs \u0026 outputs so they always run. I wonder if the entry point target `BinPlace` could already define appropriate inputs \u0026 outputs.\r\n3. The time it takes to evaluate the project is extremely high. I will file a separate issue for that: https://github.com/dotnet/runtime/issues/105139\r\n\r\n@dotnet/area-infrastructure-libraries ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhXMZEQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6FcgLg",
                                           "createdAt":  "2024-07-19T10:18:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-07-19T10:18:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6FcxkR",
                                           "createdAt":  "2024-07-19T11:05:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Disabling the `BinPlace` target reduces the overall build time from 175ms to 125ms so a ~30% improvement.",
                                           "updatedAt":  "2024-07-19T11:05:49Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "No-op build spends an unreasonable amount of time in the ChooseBestTargetFrameworksTask task",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/105139",
        "createdAt":  "2024-07-19T10:15:56Z",
        "number":  105139,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-26T10:50:37Z",
        "body":  "This is from a fully no-op build of a reference source project that doesn\u0027t have any dependencies:\r\n\r\n```\r\nC:\\git\\runtime4\u003e.\\.dotnet\\dotnet.exe msbuild /t:Build /v:minimal /clp:performancesummary C:\\git\\runtime4\\src\\libraries\\System.Runtime\\ref\\System.Runtime.csproj\r\n\r\n  System.Runtime -\u003e C:\\git\\runtime4\\artifacts\\bin\\System.Runtime\\ref\\Debug\\net9.0\\System.Runtime.dll\r\n\r\nProject Evaluation Performance Summary:\r\n      557 ms  C:\\git\\runtime4\\src\\libraries\\System.Runtime\\ref\\System.Runtime.csproj   1 calls\r\n```\r\n\r\nWe should ETW trace this by following the guidance here: https://github.com/dotnet/msbuild/blob/main/documentation/specs/event-source.md\r\n\r\nThis impacts everything:\r\n- Tooling performance (VS, VSCode, everything that uses the project system and msbuild underneath)\r\n- CLI performance: Restore, Build, Pack, ...\r\n\r\ncc @dotnet/area-infrastructure-libraries ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhXL_Uw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6Fcfcs",
                                           "createdAt":  "2024-07-19T10:16:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-07-19T10:16:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Fcm1d",
                                           "createdAt":  "2024-07-19T10:34:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Non-surprisingly, ETW traces show that MSBuild spends the most time during evaluation in phase 1 (Evaluate imports and properties) and 3 (Evaluate items):\r\n\r\n```\r\nEvent Name                        \t    TimeStamp (Trace Local)\tTime MSec                  \tProcess Name\tRest                \r\nMicrosoft-Build/EvaluatePass1/Stop\t      7/19/2024 12:27:01 PM\t736.650                    \tProcess(2568) (2568)\tThreadID=\"19,988\" ProcessorNumber=\"2\" DURATION_MSEC=\"220.259\" projectFile=\"C:\\git\\runtime4\\src\\libraries\\System.Runtime\\ref\\System.Runtime.csproj\"\r\n```\r\n\r\n```\r\nEvent Name                        \t    TimeStamp (Trace Local)\tTime MSec                  \tProcess Name\tRest                \r\nMicrosoft-Build/EvaluatePass3/Stop\t      7/19/2024 12:27:01 PM\t819.127                    \tProcess(2568) (2568)\tThreadID=\"19,988\" ProcessorNumber=\"6\" DURATION_MSEC=\"81.219\" projectFile=\"C:\\git\\runtime4\\src\\libraries\\System.Runtime\\ref\\System.Runtime.csproj\" \r\n```",
                                           "updatedAt":  "2024-07-19T10:34:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6FcuTA",
                                           "createdAt":  "2024-07-19T10:56:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "As we already knew, resolving the Microsoft.DotNet.Arcade.Sdk and then evaluating it is a big part.\r\n\r\n```\r\nEvent Name                                             \t    TimeStamp (Trace Local)\tTime MSec                  \tProcess Name\tRest                \r\nMicrosoft-Build/CachedSdkResolverServiceResolveSdk/Stop\t      7/19/2024 12:27:01 PM\t518.254                    \tProcess(2568) (2568)\tThreadID=\"19,988\" ProcessorNumber=\"4\" DURATION_MSEC=\"0.562\" sdkName=\"Microsoft.NET.Sdk\" solutionPath=\"\" projectPath=\"C:\\git\\runtime4\\src\\libraries\\System.Runtime\\ref\\System.Runtime.csproj\" success=\"True\" wasResultCached=\"False\" \r\nMicrosoft-Build/CachedSdkResolverServiceResolveSdk/Stop\t      7/19/2024 12:27:01 PM\t624.613                    \tProcess(2568) (2568)\tThreadID=\"19,988\" ProcessorNumber=\"0\" DURATION_MSEC=\"93.476\" sdkName=\"Microsoft.DotNet.Arcade.Sdk\" solutionPath=\"\" projectPath=\"C:\\git\\runtime4\\src\\libraries\\System.Runtime\\ref\\System.Runtime.csproj\" success=\"True\" wasResultCached=\"False\" \r\nMicrosoft-Build/CachedSdkResolverServiceResolveSdk/Stop\t      7/19/2024 12:27:01 PM\t657.686                    \tProcess(2568) (2568)\tThreadID=\"19,988\" ProcessorNumber=\"0\" DURATION_MSEC=\"0.019\" sdkName=\"Microsoft.NET.Sdk\" solutionPath=\"\" projectPath=\"C:\\git\\runtime4\\src\\libraries\\System.Runtime\\ref\\System.Runtime.csproj\" success=\"True\" wasResultCached=\"True\" \r\nMicrosoft-Build/CachedSdkResolverServiceResolveSdk/Stop\t      7/19/2024 12:27:01 PM\t706.200                    \tProcess(2568) (2568)\tThreadID=\"19,988\" ProcessorNumber=\"2\" DURATION_MSEC=\"0.009\" sdkName=\"Microsoft.DotNet.Arcade.Sdk\" solutionPath=\"\" projectPath=\"C:\\git\\runtime4\\src\\libraries\\System.Runtime\\ref\\System.Runtime.csproj\" success=\"True\" wasResultCached=\"True\" \r\n```",
                                           "updatedAt":  "2024-07-19T11:08:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Fcv9T",
                                           "createdAt":  "2024-07-19T11:01:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Every project imports Subsets.props which is quite huge, uses globbing and lazy item expansion. Removing its import results in an 8% improvement from in average 305ms to 280ms.",
                                           "updatedAt":  "2024-07-19T11:08:41Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Poor project evaluation performance for project at least under src/libraries",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/106088",
        "createdAt":  "2024-08-07T17:32:03Z",
        "number":  106088,
        "author":  "steveharter",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T03:02:04Z",
        "body":  "## Build Information\r\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=768643\r\nBuild error leg or test failing: Build / linux-arm64 Debug Mono_MiniJIT_LibrariesTests / Build product\r\nPull request: https://github.com/dotnet/runtime/pull/105776\r\n\u003c!-- Error message template  --\u003e\r\n## Error Message\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssueJsonStepByStep.md).\r\n\r\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": \"\",\r\n  \"ErrorPattern\": \"\u0027Unable to cast object of type \u0027Microsoft.CodeAnalysis.CSharp.Symbols.PublicModel.NonErrorNamedTypeSymbol\u0027 to type \u0027Microsoft.CodeAnalysis.IMethodSymbol\u0027.\u0027.\",\r\n  \"BuildRetry\": false,\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\n\r\n\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=768643\r\n**Error message validated:** `[\u0027Unable to cast object of type \u0027Microsoft.CodeAnalysis.CSharp.Symbols.PublicModel.NonErrorNamedTypeSymbol\u0027 to type \u0027Microsoft.CodeAnalysis.IMethodSymbol\u0027.\u0027.`]\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 8/7/2024 5:32:23 PM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|0|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOi7yZvg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6HiiuW",
                                           "createdAt":  "2024-08-07T17:32:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-08-07T17:32:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6HithF",
                                           "createdAt":  "2024-08-07T17:56:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "carlossanlop",
                                           "body":  "This issue will track the failures in PRs to mark them as known build errors, but I think we also need to notify the creator (or most recent modifier) of this analyzer either in roslyn or in roslyn-analyzers (wherever the analyzer lives).",
                                           "updatedAt":  "2024-08-07T17:56:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6HiuYH",
                                           "createdAt":  "2024-08-07T17:58:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "carlossanlop",
                                           "body":  "This analyzer is from dotnet/roslyn: https://github.com/dotnet/roslyn/blob/969c5177a3fe0a13171c561b45b2d808b9659e56/src/Compilers/CSharp/Portable/Symbols/PublicModel/NonErrorNamedTypeSymbol.cs#L11\r\n\r\n@jaredpar do you know who can triage this failure so we can decide on the milestone for the issue?\r\n",
                                           "updatedAt":  "2024-08-07T17:58:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Hi1U4",
                                           "createdAt":  "2024-08-07T18:16:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jaredpar",
                                           "body":  "Is this a one off failure or a persistent one? If it\u0027s a one off then it\u0027s possible it\u0027s another dupe of #105572. That can also manifest as cast exceptions. ",
                                           "updatedAt":  "2024-08-07T18:16:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6HjBkM",
                                           "createdAt":  "2024-08-07T18:39:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "carlossanlop",
                                           "body":  "So far there\u0027s only been one hit, according to the KnownBuildError table in this issue description.",
                                           "updatedAt":  "2024-08-07T18:39:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6LvIzi",
                                           "createdAt":  "2024-09-11T18:28:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODx34CA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "jaredpar",
                                                                               "createdAt":  "2024-09-11T18:29:46Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jeffschwMSFT",
                                           "body":  "removing \u0027blocking-clean-ci\u0027 as it has not failed in 30 days\r\n\r\n24-Hour Hit Count | 7-Day Hit Count | 1-Month Count\r\n-- | -- | --\r\n0 | 0 | 0\r\n",
                                           "updatedAt":  "2024-09-11T18:28:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6LvJm-",
                                           "createdAt":  "2024-09-11T18:30:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODx38Zw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jeffschwMSFT",
                                                                               "createdAt":  "2024-09-11T18:38:29Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jaredpar",
                                           "body":  "@jeffschwMSFT given the primary bug was fixed and it\u0027s 30 days clean should we close the issue? ",
                                           "updatedAt":  "2024-09-11T18:30:28Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "Analyzer \u0027Microsoft.NetCore.CSharp.Analyzers.Performance.CSharpConstantExpectedAnalyzer\u0027 threw an exception of type \u0027System.InvalidCastException`",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "code-analyzer",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/106628",
        "createdAt":  "2024-08-19T13:21:45Z",
        "number":  106628,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-26T10:50:39Z",
        "body":  "https://github.com/dotnet/runtime/blob/15cc21af90a7109f9c9157b87987d24db70741a9/src/libraries/apicompat/ApiCompatBaseline.netstandard2.0.xml#L4-L9\r\n\r\nThe \"right\" entry means that the type couldn\u0027t be found on the right side (NetCoreAppCurrent). We should investigate why.\r\n\r\ncc @dotnet/area-infrastructure-libraries ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOiOlJUw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6I4tdP",
                                           "createdAt":  "2024-08-19T13:22:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-08-19T13:22:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6I6UlT",
                                           "createdAt":  "2024-08-19T16:38:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "It should have a typeforward for this: https://github.com/dotnet/runtime/blob/b1908e291f8b3c48572507419be0f0b5c9f5c9f6/src/libraries/System.ComponentModel.Composition/src/TypeForwards.cs#L4\r\n\r\nI double checked that the preview 7 package has this typeforward for all target frameworks.  `netstandard2.0` version points to `netstandard`, `net*.0` points to `System.Runtime`.  Seems to me like this might be either an APIcompat bug, or we\u0027re not giving all the references for comparison.\r\n\r\n",
                                           "updatedAt":  "2024-08-19T16:38:48Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Investigate System.Lazy\u003c,\u003e type not found when comparing netstandard2.0 against NetCoreAppCurrent",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "needs-further-triage"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/111721",
        "createdAt":  "2025-01-22T20:25:28Z",
        "number":  111721,
        "author":  "steveharter",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-01-23T16:45:39Z",
        "body":  "The ability to run all library tests locally without failures should be supported, even though it is time-consuming and somewhat rare to want to do this.\n\nI would like to do this before and after making lower-level changes such as for reflection or other runtime-overlapping changes. There are other reasons to want this including verifying that the environment is correct.\n\nWithout this, I depend on CI to catch library test failures (and runtime test failures - more on this later).\n\n**Expect**: add test and CI infrastructure to run all inner loop library tests as a single unit in order to emulate the local results. Perhaps this would run in the outerloop pipeline since it is time consuming. Having CI support is necessary to prevent future breaks. This should also be done in a non-elevated command prompt. In some cases, having multiple test projects run at the same time can result in conflicts -- especially networking tests -- so there may still be flakiness if we don\u0027t have a way to prevent that from occurring. \n\n\nCurrently for me, running this on Windows\n```\nbuild -s clr+libs+libs.tests -rc release -test \n```\n\nresults in several failures and a hang:\n```\nSystem.DirectoryServices.Tests  Total: 255, Errors: 0, Failed: 1, Skipped: 29, Time: 2.878s\nSystem.Net.Quic.Functional.Tests  Total: 441, Errors: 0, Failed: 1, Skipped: 1, Time: 189.488s\nSystem.Security.Cryptography.Tests  Total: 10125, Errors: 0, Failed: 19, Skipped: 114, Time: 71.050s\nSystem.Net.Security.Tests  Total: 5177, Errors: 0, Failed: 27, Skipped: 21, Time: 50.719s\n\n(and then a hang on HttpListener.Tests)\nSystem.Net.HttpListener.Tests: [Long Running Test] \u0027System.Net.Tests.HttpListenerResponseHeadersTests.StatusDescription_GetWithCustomStatusCode_ReturnsExpected\u0027, Elapsed: 00:02:07\n(running again I get another hang)\nSystem.Net.HttpListener.Tests: [Long Running Test] \u0027System.Net.Tests.HttpListenerRequestTests.ProtocolVersion_GetProperty_ReturnsExpected\u0027, Elapsed: 00:08:03\n```\n\n### Longer-term\n\nThe ideal solution would be to easily specify a \"smokescreen\" set of tests. For starting, this would be projects that catch lower-level runtime issues, which me for would include specific libraries including `System.Runtime`, `System.Text.Json`, `System.Runtime.Serialization`, `System.ComponentModel.TypeConverter` and `Microsoft.Extensions.DependencyInjection`. Today, this can be emulated using `\u0026\u0026` to combine multiple commands, but perhaps this could be done in a single command that would allow parallelization.\n\nEven better, the ability to specify a set of runtime tests along with this would be convenient, although today the runtime test infrastructure is different from the library test infrastructure -- e.g. how to build, how to run, and concepts such as [test priority](https://github.com/dotnet/runtime/blob/main/docs/workflow/testing/coreclr/testing.md#test-priorities). So doing this in an integrated way may not be feasible unless we have a way to share or wrap these two test infrastructures with similar commands.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOm5dsig==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6bdeow",
                                           "createdAt":  "2025-01-22T20:25:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-01-22T20:25:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6bdftb",
                                           "createdAt":  "2025-01-22T20:28:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "In discussions with @steveharter we were suggesting that it\u0027d be nice if we had a build validation leg that would protect this (not using helix) and we could mark a subset of our tests as part of this default set.  @ViktorHofer is this something we could add to dev-inner-loop?",
                                           "updatedAt":  "2025-01-22T20:28:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6bdjxW",
                                           "createdAt":  "2025-01-22T20:38:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "How long does it take to execute all tests in average? IIRC we never exercised this in CI because it would take hours and hours. Unsure if that\u0027s still accurate.\n\nI assume we wouldn\u0027t upload the test results to AzDO, or would we? Sounds like we just want to make sure that the invocation doesn\u0027t return a negative exit code. What about flaky tests during execution? I assume those would make the leg turn red.\n\nAdding a leg to exercise to our dev-innerloop pipeline is trivial. Copy this block and change the command: https://github.com/dotnet/runtime/blob/00c8751584d58ffc2b906b3b55f756b9bd28babe/eng/pipelines/global-build.yml#L84-L100",
                                           "updatedAt":  "2025-01-22T20:38:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6bl2yK",
                                           "createdAt":  "2025-01-23T16:45:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveharter",
                                           "body":  "\u003e How long does it take to execute all tests in average? \n\nDoing a full build including running all tests on my machine is about one hour although that is difficult to measure now due to hangs.",
                                           "updatedAt":  "2025-01-23T16:45:38Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Ability to verify that all library tests can be run locally without failures",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "feature-request"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/112368",
        "createdAt":  "2025-02-10T21:41:24Z",
        "number":  112368,
        "author":  "mstefarov",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC-9Jug==",
                          "nodes":  [
                                        {
                                            "content":  "EYES",
                                            "user":  "dotMorten",
                                            "createdAt":  "2025-02-10T21:43:41Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-07-26T09:39:51Z",
        "body":  "Would moving a public property up to a base class be considered a breaking change, in any sense?\n\nThe [breaking-change-rules doc](https://github.com/dotnet/runtime/blob/main/docs/coding-guidelines/breaking-change-rules.md#members) mentions that moving methods up is allowed. It seems like moving properties should be allowed too.  But the [Microsoft.DotNet.PackageValidation tool](https://github.com/dotnet/sdk/tree/main/src/Compatibility/ApiCompat/Microsoft.DotNet.PackageValidation) flags this as a breaking change.\n\nAnd while we\u0027re at it, how about public events and indexers?\n\nIt would be good to get a definitive answer, and to have the doc and the validation tool in sync as well.\n\n@jnm2 @stephentoub ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOug9bYQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6d6VMz",
                                           "createdAt":  "2025-02-10T21:46:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mstefarov",
                                           "body":  "Related: https://github.com/dotnet/runtime/issues/29637\nThe doc previously said that moving _members_ is allowed, but this was changed to _methods_ after concerns were raised about moving public fields.",
                                           "updatedAt":  "2025-02-10T21:46:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6d6V3v",
                                           "createdAt":  "2025-02-10T21:47:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jnm2",
                                           "body":  "It might also be good to mention nested types for clarity, since \"members\" of a type can include types. I would assume it\u0027s a breaking change to move a nested type to be nested in `Base` instead of `Derived`.",
                                           "updatedAt":  "2025-02-10T21:47:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6d6t7S",
                                           "createdAt":  "2025-02-10T22:38:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-meta\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-02-10T22:38:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6d8Evp",
                                           "createdAt":  "2025-02-11T04:24:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "stephentoub",
                                           "body":  "It should be fine to move properties from a derived type to a base type.\ncc: @bartonjs ",
                                           "updatedAt":  "2025-02-11T04:24:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6d8GOu",
                                           "createdAt":  "2025-02-11T04:31:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotMorten",
                                           "body":  "In that case the package validation tools are broken",
                                           "updatedAt":  "2025-02-11T04:31:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6eDJUH",
                                           "createdAt":  "2025-02-11T18:08:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bartonjs",
                                           "body":  "The compiler turns property reads/writes into calls to the get_ and set_ methods that are generated for the property (or, if you\u0027re writing IL, that you wrote and bound to the property).  Methods, as we know, can move toward object. And the compiler at build time will certainly read properties from base types.\n\nSo, yeah, I can\u0027t think of any way (other than reflection) that moving a property toward object will break things.",
                                           "updatedAt":  "2025-02-11T18:08:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc66D1th",
                                           "createdAt":  "2025-07-26T09:39:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-07-26T09:39:51Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "Clarify breaking-change rules for properties",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/113285",
        "createdAt":  "2025-03-08T00:13:43Z",
        "number":  113285,
        "author":  "personnumber3377",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-21T19:21:57Z",
        "body":  "### Description\n\nAfter building dotnet with `./build.sh -subset clr+libs -configuration Release -runtimeConfiguration Debug` and then trying to run `dotnet build` with the compiled binary in the fuzzers directory, I am hit with the following error:\n\n```\n~/runtime/src/libraries/Fuzzing/DotnetFuzzing$ dotnet build\n\n  Determining projects to restore...\n  Restored /home/oof/runtime/src/libraries/System.Reflection.Metadata/src/System.Reflection.Metadata.csproj (in 390 ms).\n  Restored /home/oof/runtime/src/tools/illink/src/ILLink.Tasks/ILLink.Tasks.csproj (in 377 ms).\n  Restored /home/oof/runtime/src/libraries/System.Runtime.InteropServices/gen/Microsoft.Interop.SourceGeneration/Microsoft.Interop.SourceGeneration.csproj (in 379 ms).\n  Restored /home/oof/runtime/src/libraries/System.Collections.Immutable/src/System.Collections.Immutable.csproj (in 390 ms).\n  Restored /home/oof/runtime/src/libraries/System.Formats.Nrbf/src/System.Formats.Nrbf.csproj (in 389 ms).\n  Restored /home/oof/runtime/src/libraries/System.Collections.Immutable/ref/System.Collections.Immutable.csproj (in 377 ms).\n  Restored /home/oof/runtime/src/tools/illink/src/linker/Mono.Linker.csproj (in 377 ms).\n  Restored /home/oof/runtime/src/libraries/System.Reflection.Metadata/ref/System.Reflection.Metadata.csproj (in 377 ms).\n  Restored /home/oof/runtime/src/libraries/System.Runtime.InteropServices/gen/ComInterfaceGenerator/ComInterfaceGenerator.csproj (in 379 ms).\n  Restored /home/oof/runtime/src/tools/illink/src/linker/ref/Mono.Linker.csproj (in 377 ms).\n  Restored /home/oof/runtime/src/libraries/System.Collections/ref/System.Collections.csproj (in 377 ms).\n  Restored /home/oof/runtime/src/libraries/System.Runtime.InteropServices/gen/LibraryImportGenerator/LibraryImportGenerator.csproj (in 379 ms).\n  Restored /home/oof/runtime/src/libraries/System.Runtime/ref/System.Runtime.csproj (in 3 ms).\n  Restored /home/oof/runtime/src/tools/illink/src/ILLink.CodeFix/ILLink.CodeFixProvider.csproj (in 8 ms).\n  Restored /home/oof/runtime/src/tools/illink/src/ILLink.RoslynAnalyzer/ILLink.RoslynAnalyzer.csproj (in 10 ms).\n  Restored /home/oof/runtime/src/libraries/System.Formats.Nrbf/ref/System.Formats.Nrbf.csproj (in 24 ms).\n  Restored /home/oof/runtime/src/libraries/Fuzzing/DotnetFuzzing/DotnetFuzzing.csproj (in 25 ms).\n  Restored /home/oof/runtime/src/libraries/System.Runtime.InteropServices/gen/DownlevelLibraryImportGenerator/DownlevelLibraryImportGenerator.csproj (in 8 ms).\n/home/oof/runtime/.dotnet/sdk/10.0.100-preview.3.25125.5/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(515,5): error NETSDK1112: The runtime pack for Microsoft.NETCore.App.Runtime.win-x64 was not downloaded. Try running a NuGet restore with the RuntimeIdentifier \u0027win-x64\u0027. [/home/oof/runtime/src/libraries/Fuzzing/DotnetFuzzing/DotnetFuzzing.csproj]\n\nBuild FAILED.\n\n/home/oof/runtime/.dotnet/sdk/10.0.100-preview.3.25125.5/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(515,5): error NETSDK1112: The runtime pack for Microsoft.NETCore.App.Runtime.win-x64 was not downloaded. Try running a NuGet restore with the RuntimeIdentifier \u0027win-x64\u0027. [/home/oof/runtime/src/libraries/Fuzzing/DotnetFuzzing/DotnetFuzzing.csproj]\n    0 Warning(s)\n    1 Error(s)\n\nTime Elapsed 00:00:03.22\n```\n\nThe runtime isn\u0027t finding the sdk for some reason.\n\n### Reproduction Steps\n\nRepro explained in previous step\n\n### Expected behavior\n\nShould compile fuzzers succesfully\n\n### Actual behavior\n\nDoesn\u0027t compile succesfully. Exits with error.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOuKVIbg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6hZ292",
                                           "createdAt":  "2025-03-08T02:33:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MihaZupan",
                                           "body":  "The setup is currently specific to Windows.\n\nSee note in https://github.com/dotnet/runtime/tree/main/src/libraries/Fuzzing readme\n\n\u003e [!NOTE]\n\u003e The instructions assume you are running on Windows as that is what the continuous fuzzing runs currently use.",
                                           "updatedAt":  "2025-03-08T02:33:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6hbtws",
                                           "createdAt":  "2025-03-08T17:03:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-03-08T17:03:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6hbvI-",
                                           "createdAt":  "2025-03-08T17:18:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Is it something fixable @MihaZupan ",
                                           "updatedAt":  "2025-03-08T17:18:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6hbyAr",
                                           "createdAt":  "2025-03-08T17:47:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MihaZupan",
                                           "body":  "Sure, it should be possible, it\u0027s \"just work\".\nHaving the option to run with AFL or similar could also be interesting (we\u0027re using libFuzzer currently).\n\nOther than dev inner loop for Linux, I don\u0027t think there\u0027s a pressing need for it given that the things we\u0027re currently testing shouldn\u0027t differ much by OS.",
                                           "updatedAt":  "2025-03-08T17:47:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6hd26L",
                                           "createdAt":  "2025-03-09T16:53:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "personnumber3377",
                                           "body":  "I mean the readme just says that it assumes that you are running windows, not that the fuzzer is windows only. I think it is poorly worded. I am new to dotnet development and I don\u0027t really know how to make it work with linux. And I agree that this isn\u0027t really needed, but this would be convenient because you don\u0027t need to work with visual studio etc. on linux platforms.",
                                           "updatedAt":  "2025-03-09T16:53:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc64pUhu",
                                           "createdAt":  "2025-07-21T17:52:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-07-21T17:52:42Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "DotnetFuzzing doesn\u0027t compile on linux succesfully",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/113984",
        "createdAt":  "2025-03-27T19:10:46Z",
        "number":  113984,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODAmVSQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "am11",
                                            "createdAt":  "2025-03-28T08:47:40Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-07-26T10:56:36Z",
        "body":  "The checked-in PackageOverrides.txt file can easily become stale when a new library that also ships as a package gets added to the shared framework. We should look into auto-generating parts of PackageOverrides.txt or add validation to avoid a stale list.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOqDwDlA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6oPAK4",
                                           "createdAt":  "2025-04-22T21:17:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-04-22T21:17:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6oPAOU",
                                           "createdAt":  "2025-04-22T21:17:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "NikolaMilosavljevic",
                                           "body":  "[Triage] It seems that libraries team is the most appropriate to own this generation process.",
                                           "updatedAt":  "2025-04-22T21:17:57Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Auto-generate parts of the PackageOverrides.txt file",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/114359",
        "createdAt":  "2025-04-03T13:40:51Z",
        "number":  114359,
        "author":  "michmela44",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-04-08T12:07:10Z",
        "body":  "I\u0027m encountering issues while trying to ship a .NET 8 application *without* bundling additional platform binaries—relying entirely on the presence of the system-installed .NET runtime.\n\nHowever, due to NuGet package versioning, I’m forced to include assemblies that require newer runtime components than what may be present—even when targeting .NET 8 LTS.\n\nWe are preparing to release an application that has been migrated from .NET Framework 4.8 to .NET 8.0, and we are unsure how distribution should be handled given these scenarios.\n\n---\n\n**Example 1: `System.Formats.Nrbf`**\n\n- Target framework: **.NET 8**\n- We use `System.Formats.Nrbf` for .NET Framework 4.8 migration compatibility.\n- Package version is **9.0.3**, which depends on:\n  - `System.Reflection.Metadata` ≥ 9.0.3\n  - which in turn depends on `System.Collections.Immutable` ≥ 9.0.3\n\nThis results in the app requiring framework components that may not exist on a machine with only the base .NET 8.0.10 install, unless those assemblies are explicitly bundled.\n\n---\n\n**Example 2: `Microsoft.Extensions.Logging`**\n\n- In a plain .NET 8 app (non-ASP.NET), referencing `Microsoft.Extensions.Logging` leads to similar issues, including dependencies like `System.Diagnostics.DiagnosticSource`.\n- Even patch-level mismatches (e.g., built on 8.0.13, deployed on 8.0.10) have caused runtime failures unless assemblies are manually shipped.\n\n---\n\n**Attempts to Work Around:**\n\n- I’ve tried stripping DLLs from the output to allow the runtime to resolve them from the shared framework. However, patch-level mismatches often cause the app to fail to start.\n- Maintaining an ever-growing list of DLLs to exclude from the installer has proven fragile and difficult.\n\n---\n\n**Key Questions:**\n\n1. Is there a supported way to use .NET 8 NuGet packages **without** bundling newer framework binaries?\n2. Are patch versions (e.g., 8.0.10 vs. 8.0.13) guaranteed to be runtime-compatible?\n3. What is Microsoft’s intended guidance for compatibility when consuming packages like `System.Formats.Nrbf` or `Microsoft.Extensions.Logging`?\n4. Should developers avoid packages outside the shared framework if they want to avoid shipping DLLs?\n5. Or is it expected that if you use anything beyond the base shared framework, a self-contained or framework-dependent deployment (with copied DLLs) is required?\n\n---\n\nThank you!\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOphJUGg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6l_VbQ",
                                           "createdAt":  "2025-04-07T21:53:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "marcpopMSFT",
                                           "body":  "Asking @ericstj to answer these questions as it\u0027s really about library dependency chains and the shared framework.",
                                           "updatedAt":  "2025-04-07T21:53:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6l_Z6c",
                                           "createdAt":  "2025-04-07T23:35:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOENR8NA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2025-04-08T05:27:20Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ericstj",
                                           "body":  "\u003eIs there a supported way to use .NET 8 NuGet packages without bundling newer framework binaries?\n\nThe SDK will compare what\u0027s in the framework to what you reference.  If what you reference is newer then they become app-local.  \nIn past SDKs we were very conservative about this calculation where most comparisons were done against GA version of the framework (for framework dependent) since that\u0027s what the SDK would have you target.\nIn 10.0 SDK this improves a bit as we made a blanket adjustment to prune overlapping packages of the same major.minor version -- https://github.com/dotnet/sdk/issues/44566.\nYou can always force the package to be ignored with `ExcludeAssets`\n \n\u003eAre patch versions (e.g., 8.0.10 vs. 8.0.13) guaranteed to be runtime-compatible?\n\nYes.  When a package overlaps with the framework we *fix* it\u0027s assembly version and surface area.  Packages of the same major.minor version will have the same assembly version and API when targeting the overlapping framework.\n \n\u003e What is Microsoft’s intended guidance for compatibility when consuming packages like System.Formats.Nrbf or Microsoft.Extensions.Logging?\n\nWhen referencing packages that overlap with the framework and you care about servicing bands, choose the package versions that match the servicing band you wish to remain in.\n\nIf instead you prefer features over servicing bands - you can reference newer packages - these will become app-local since then are from a newer framework release.  You can safely use these so long as your target framework is in  support.  If the release the packages\u0027 came from (eg: 9.0) goes out of support before your target framework (eg: net8.0) you may need to update to a new package release (eg:10.0).  This is the cost of taking newer features from newer releases.\n \n\u003e Should developers avoid packages outside the shared framework if they want to avoid shipping DLLs?\n\nPrefer the API from the target framework over the package - if it is present.  If you need the new API / package - you can use it.  Plan to remove it when that API is back in the framework (and you no longer need newer API).  \n\nAs I mentioned above - this does get better in 10.0 SDK with package pruning.\n\n\u003e Or is it expected that if you use anything beyond the base shared framework, a self-contained or framework-dependent deployment (with copied DLLs) is required?\n\nOnly dependencies you need are copied app-local - whether your app is framework dependent or self-contained.\n\ncc @richlander @ViktorHofer",
                                           "updatedAt":  "2025-04-07T23:35:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6mElQa",
                                           "createdAt":  "2025-04-08T12:06:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "michmela44",
                                           "body":  "\u003e The SDK will compare what\u0027s in the framework to what you reference. If what you reference is newer then they become app-local.\n\nI\u0027m not sure I understand the \"what you reference\" part. Our target framework is either \"net8.0\" or \"net8.0-windows\" across all of our projects, with a mix of either `Sdk=\"Microsoft.NET.Sdk.Web\"` or ` Sdk=\"Microsoft.NET.Sdk\"`\n\nAre you saying that as long as the package falls within the 8.0.x version, you expect it to not become app-local?\n\nOur experience has been that, while it\u0027s hard to track down exactly which packages have caused it, we end up with a lot of packages like `System.Memory`, `System.Buffers`, `Microsoft.Bcl.AsyncInterfaces`, `System.Diagnostics.DiagnosticSource`, etc in the output directory.\n\nIn one case, we saw that when referencing 8.0.13 versions of some of the nuget packages, stripping SDK-included packages from the output would cause the application to fail if a lower version of the runtime was installed, like 8.0.10.\n\nI\u0027ll try to gather one of the examples where I get SDK dlls in the output. In that case, would attaching the projct.assets.json help?\n\n\n\u003e When referencing packages that overlap with the framework and you care about servicing bands, choose the package versions that match the servicing band you wish to remain in.\n\u003e \n\u003e If instead you prefer features over servicing bands - you can reference newer packages - these will become app-local since then are from a newer framework release. You can safely use these so long as your target framework is in support. If the release the packages\u0027 came from (eg: 9.0) goes out of support before your target framework (eg: net8.0) you may need to update to a new package release (eg:10.0). This is the cost of taking newer features from newer releases.\n\nIn general, we try to keep everything referenced within the same major version. The `System.Formats.Nrbf` is an exception because we needed to look at getting rid of the `BinaryFormatter`, and there\u0027s no option with an 8.0.x version number.\n\nThe bigger concern is for things where we are referencing within the same major version, and still getting framework dlls in the output. If that behavior is not expected, then perhaps there is an issue on our side that needs addressing? Maybe we need to pin version numbers for transitive packages or something?\n\nI\u0027ll try to get a better example. The only current one I can find has to do with the Azure Client SDK and related packages including `Microsoft.Bcl.AsyncInterfaces` and other `6.0.x` base libraries, that end up making it to the output folder. \n\nThis happens, though, for any library that is targeted NetStandard as well, and is another contributing factor that makes all of these dependencies difficult to manage.\n\n",
                                           "updatedAt":  "2025-04-08T12:06:50Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Difficulty maintaining compatibility with installed .NET versions due to NuGet package versioning",
        "labels":  [
                       "question",
                       "area-Infrastructure-libraries",
                       "needs-further-triage"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/114390",
        "createdAt":  "2025-04-08T17:32:22Z",
        "number":  114390,
        "author":  "BruceForstall",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-26T10:56:37Z",
        "body":  "I build dotnet/runtime on Windows using:\n```\nbuild.cmd clr+libs -arch x64 -c Release\n```\nand see all these warnings (I don\u0027t recall seeing them before):\n```\n  Could not resolve reference \u0027System.Private.Uri.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\bin\\System.Diagnostics.TraceSource\\ref\\Release\\net10.0\\System.Diagnostics.TraceSource.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Private.Uri.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Diagnostics.TraceSource\\Release\\net10.0\\System.Diagnostics.TraceSource.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Memory.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Diagnostics.TraceSource\\Release\\net10.0\\System.Diagnostics.TraceSource.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.ComponentModel.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Diagnostics.TraceSource\\Release\\net10.0\\System.Diagnostics.TraceSource.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.ObjectModel.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Diagnostics.TraceSource\\Release\\net10.0\\System.Diagnostics.TraceSource.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Private.Uri.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\bin\\System.Diagnostics.StackTrace\\ref\\Release\\net10.0\\System.Diagnostics.StackTrace.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Private.Uri.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Diagnostics.StackTrace\\Release\\net10.0\\System.Diagnostics.StackTrace.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Runtime.InteropServices.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Diagnostics.StackTrace\\Release\\net10.0\\System.Diagnostics.StackTrace.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Memory.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Diagnostics.StackTrace\\Release\\net10.0\\System.Diagnostics.StackTrace.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Runtime.InteropServices.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Diagnostics.StackTrace\\Release\\net10.0\\System.Diagnostics.StackTrace.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Linq.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Diagnostics.StackTrace\\Release\\net10.0\\System.Diagnostics.StackTrace.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Collections.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Diagnostics.StackTrace\\Release\\net10.0\\System.Diagnostics.StackTrace.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Memory.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Diagnostics.StackTrace\\Release\\net10.0\\System.Diagnostics.StackTrace.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Threading.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Diagnostics.StackTrace\\Release\\net10.0\\System.Diagnostics.StackTrace.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Collections.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Diagnostics.StackTrace\\Release\\net10.0\\System.Diagnostics.StackTrace.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.IO.Compression.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Diagnostics.StackTrace\\Release\\net10.0\\System.Diagnostics.StackTrace.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Threading.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Diagnostics.StackTrace\\Release\\net10.0\\System.Diagnostics.StackTrace.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.IO.MemoryMappedFiles.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Diagnostics.StackTrace\\Release\\net10.0\\System.Diagnostics.StackTrace.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Text.Encoding.Extensions.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Diagnostics.StackTrace\\Release\\net10.0\\System.Diagnostics.StackTrace.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Private.Uri.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\bin\\System.Reflection.Emit\\ref\\Release\\net10.0\\System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Private.Uri.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Reflection.Emit\\Release\\net10.0\\System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Runtime.InteropServices.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Reflection.Emit\\Release\\net10.0\\System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Memory.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Reflection.Emit\\Release\\net10.0\\System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Runtime.InteropServices.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Reflection.Emit\\Release\\net10.0\\System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Linq.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Reflection.Emit\\Release\\net10.0\\System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Collections.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Reflection.Emit\\Release\\net10.0\\System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Memory.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Reflection.Emit\\Release\\net10.0\\System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Threading.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Reflection.Emit\\Release\\net10.0\\System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Collections.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Reflection.Emit\\Release\\net10.0\\System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.IO.Compression.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Reflection.Emit\\Release\\net10.0\\System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Threading.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Reflection.Emit\\Release\\net10.0\\System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.IO.MemoryMappedFiles.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Reflection.Emit\\Release\\net10.0\\System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Text.Encoding.Extensions.dll\u0027 directly or transitively referenced by \u0027C:\\gh\\runtime2\\artifacts\\obj\\System.Reflection.Emit\\Release\\net10.0\\System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n```\n\nIt doesn\u0027t fail the build and is not listed as a build warning in the final summary:\n```\nBuild succeeded.\n    0 Warning(s)\n    0 Error(s)\n```\n\n@ViktorHofer Same as https://github.com/dotnet/runtime/issues/113083, https://github.com/dotnet/sdk/issues/46236?\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOrMzDIw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6mITLI",
                                           "createdAt":  "2025-04-08T17:35:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-04-08T17:35:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6mWAjk",
                                           "createdAt":  "2025-04-09T19:29:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOENmTGg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "carlossanlop",
                                                                               "createdAt":  "2025-04-09T19:39:27Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Spot on Bruce. Sorry for the extra noise when building. The messages should be ignored. I intend to fix this for APICompat in the next weeks.",
                                           "updatedAt":  "2025-04-09T19:29:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6sywYY",
                                           "createdAt":  "2025-05-21T19:21:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kg",
                                           "body":  "I\u0027m seeing a similar set of errors in build on windows and linux the past week plus:\n```\n  Microsoft.Win32.Primitives -\u003e /home/kate/Projects/dotnet-runtime-wasm/artifacts/bin/Microsoft.Win32.Primitives/Release/net10.0/Microsoft.Win32.Primitives.dll\n  Could not resolve reference \u0027System.Private.Uri.dll\u0027 directly or transitively referenced by \u0027/home/kate/Projects/dotnet-runtime-wasm/artifacts/bin/System.Reflection.Emit/ref/Release/net10.0/System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Private.Uri.dll\u0027 directly or transitively referenced by \u0027/home/kate/Projects/dotnet-runtime-wasm/artifacts/obj/System.Reflection.Emit/Release/net10.0/System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Runtime.InteropServices.dll\u0027 directly or transitively referenced by \u0027/home/kate/Projects/dotnet-runtime-wasm/artifacts/obj/System.Reflection.Emit/Release/net10.0/System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Memory.dll\u0027 directly or transitively referenced by \u0027/home/kate/Projects/dotnet-runtime-wasm/artifacts/obj/System.Reflection.Emit/Release/net10.0/System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Runtime.InteropServices.dll\u0027 directly or transitively referenced by \u0027/home/kate/Projects/dotnet-runtime-wasm/artifacts/obj/System.Reflection.Emit/Release/net10.0/System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Linq.dll\u0027 directly or transitively referenced by \u0027/home/kate/Projects/dotnet-runtime-wasm/artifacts/obj/System.Reflection.Emit/Release/net10.0/System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Collections.dll\u0027 directly or transitively referenced by \u0027/home/kate/Projects/dotnet-runtime-wasm/artifacts/obj/System.Reflection.Emit/Release/net10.0/System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Memory.dll\u0027 directly or transitively referenced by \u0027/home/kate/Projects/dotnet-runtime-wasm/artifacts/obj/System.Reflection.Emit/Release/net10.0/System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Threading.dll\u0027 directly or transitively referenced by \u0027/home/kate/Projects/dotnet-runtime-wasm/artifacts/obj/System.Reflection.Emit/Release/net10.0/System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Collections.dll\u0027 directly or transitively referenced by \u0027/home/kate/Projects/dotnet-runtime-wasm/artifacts/obj/System.Reflection.Emit/Release/net10.0/System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.IO.Compression.dll\u0027 directly or transitively referenced by \u0027/home/kate/Projects/dotnet-runtime-wasm/artifacts/obj/System.Reflection.Emit/Release/net10.0/System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Threading.dll\u0027 directly or transitively referenced by \u0027/home/kate/Projects/dotnet-runtime-wasm/artifacts/obj/System.Reflection.Emit/Release/net10.0/System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.IO.MemoryMappedFiles.dll\u0027 directly or transitively referenced by \u0027/home/kate/Projects/dotnet-runtime-wasm/artifacts/obj/System.Reflection.Emit/Release/net10.0/System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n  Could not resolve reference \u0027System.Text.Encoding.Extensions.dll\u0027 directly or transitively referenced by \u0027/home/kate/Projects/dotnet-runtime-wasm/artifacts/obj/System.Reflection.Emit/Release/net10.0/System.Reflection.Emit.dll\u0027 in any of the provided search directories.\n  System.Reflection.Emit -\u003e /home/kate/Projects/dotnet-runtime-wasm/artifacts/bin/System.Reflection.Emit/Release/net10.0/System.Reflection.Emit.dll\n```",
                                           "updatedAt":  "2025-05-21T19:21:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6szMMj",
                                           "createdAt":  "2025-05-21T20:03:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOETFKDA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kg",
                                                                               "createdAt":  "2025-05-21T21:20:51Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Yes, I still haven\u0027t fixed this in APICompat.",
                                           "updatedAt":  "2025-05-21T20:03:31Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Build warnings: \"Could not resolve reference...\"",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/116364",
        "createdAt":  "2025-06-06T07:35:22Z",
        "number":  116364,
        "author":  "srxqds",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-06-24T02:06:33Z",
        "body":  "we have a browser-wasm project, it don\u0027t generate bcl library pdb file:\n\n![Image](https://github.com/user-attachments/assets/32cda6ff-2fc5-48d7-9ddd-8b169f659f98)\n\nhow can we do it?",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOsrnoPg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6vvNz7",
                                           "createdAt":  "2025-06-06T07:45:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "huoyaoyuan",
                                           "body":  "BCL is distributed in compiled binaries without pdb. You can\u0027t \"generate\" it.\n\nTo get the pdb, try [dotnet-symbol](https://learn.microsoft.com/dotnet/core/diagnostics/dotnet-symbol).",
                                           "updatedAt":  "2025-06-06T07:45:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6vwLcV",
                                           "createdAt":  "2025-06-06T09:26:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "srxqds",
                                           "body":  "\u003e BCL is distributed in compiled binaries without pdb. You can\u0027t \"generate\" it.\n\u003e \n\u003e To get the pdb, try [dotnet-symbol](https://learn.microsoft.com/dotnet/core/diagnostics/dotnet-symbol).\n\nwe build runtime local and set by `MicrosoftNetCoreAppRuntimePackRidDir `：\n\n```\n\u003cMicrosoftNetCoreAppRuntimePackRidDir Condition=\"\u0027$(_IsBrowser)\u0027 == \u0027true\u0027\"\u003e./dist/dotnet/runtime/9.0.3/mono.browser-wasm/Release\u003c/MicrosoftNetCoreAppRuntimePackRidDir\u003e \n```",
                                           "updatedAt":  "2025-06-06T09:26:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6vw9Tv",
                                           "createdAt":  "2025-06-06T10:41:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "huoyaoyuan",
                                           "body":  "I don\u0027t think it\u0027s a standard process for the SDK to include symbols from from shared BCL package. You need to write your own logic for it.\n\nhttps://github.com/dotnet/sdk/blob/9e76ea7a1e6f06c90ef0d50325ac424e0834c6cd/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Publish.targets#L537-L543",
                                           "updatedAt":  "2025-06-06T10:41:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6x2jmE",
                                           "createdAt":  "2025-06-18T11:46:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "maraf",
                                           "body":  "@srxqds There isn\u0027t an easy way to include BCL symbols in build output \u0026 get them loaded in the browser. What is your use-case?",
                                           "updatedAt":  "2025-06-18T11:46:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6x3hGa",
                                           "createdAt":  "2025-06-18T13:01:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "srxqds",
                                           "body":  "\u003e [@srxqds](https://github.com/srxqds) There isn\u0027t an easy way to include BCL symbols in build output \u0026 get them loaded in the browser. What is your use-case?\n\nwe need pdb file for exception stacktrace file and line number recovery. ",
                                           "updatedAt":  "2025-06-18T13:01:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6yphqD",
                                           "createdAt":  "2025-06-23T17:06:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "maraf",
                                           "body":  "Do you need to PDBs to be loaded into the browser? If so, the best option would probably be hooking into the build before target `ResolveWasmOutputs` and adding PDBs manually into the `@(ReferenceCopyLocalPaths)`. Let me know if I can help further.",
                                           "updatedAt":  "2025-06-23T17:06:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6yueg-",
                                           "createdAt":  "2025-06-24T02:06:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "srxqds",
                                           "body":  "\u003e Do you need to PDBs to be loaded into the browser? If so, the best option would probably be hooking into the build before target `ResolveWasmOutputs` and adding PDBs manually into the `@(ReferenceCopyLocalPaths)`. Let me know if I can help further.\n\nIt is not necessary, but it is best to have.\nI could not found the pdb file after illink trim step.\n",
                                           "updatedAt":  "2025-06-24T02:06:20Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "dotnet publish how to generate bcl library pdb file.",
        "labels":  [
                       "question",
                       "arch-wasm",
                       "area-Infrastructure-libraries",
                       "needs-further-triage",
                       "os-browser"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/116604",
        "createdAt":  "2025-06-12T20:35:50Z",
        "number":  116604,
        "author":  "vcsjones",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODD0VAA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ViktorHofer",
                                            "createdAt":  "2025-06-13T07:52:27Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-07-14T17:49:19Z",
        "body":  "If you run `dotnet test` against `Microsoft.Bcl.Cryptography`, the .NET Framework tests will not print any output of the test execution.\n\nSteps to reproduce on Windows:\n\n1. Check out `main`\n2. Do a build `.\\build.cmd -rc Release -s clr+libs`\n3. Run `.\\dotnet.cmd test .\\src\\libraries\\Microsoft.Bcl.Cryptography\\tests\\`\n\nObserve that it does run the .NET 10 tests, and the output for the building the tests for .NET Framework, but does not actually print the output for the test execution itself\n\n\n```plain\nResults File: E:\\code\\runtime\\artifacts\\bin\\Microsoft.Bcl.Cryptography.Tests\\Debug\\net10.0\\TestResults\\vcsjones_KEVINJONES078C_2025-06-12_16_32_26.trx\nHtml test results file : E:\\code\\runtime\\artifacts\\bin\\Microsoft.Bcl.Cryptography.Tests\\Debug\\net10.0\\TestResults\\TestResult_vcsjones_KEVINJONES078C_20250612_163227.html\n\nFailed:     0, Passed:  1484, Skipped:    12, Total:  1496, Duration: 1 s - Microsoft.Bcl.Cryptography.Tests.dll (net10.0)\n  Microsoft.Interop.SourceGeneration -\u003e E:\\code\\runtime\\artifacts\\bin\\Microsoft.Interop.SourceGeneration\\Debug\\netstandard2.0\\Microsoft.Interop.SourceGeneration.dll\n  DownlevelLibraryImportGenerator -\u003e E:\\code\\runtime\\artifacts\\bin\\DownlevelLibraryImportGenerator\\Debug\\netstandard2.0\\Microsoft.Interop.LibraryImportGenerator.Downlevel.dll\n  TestUtilities -\u003e E:\\code\\runtime\\artifacts\\bin\\TestUtilities\\Debug\\net481\\TestUtilities.dll\n  System.Formats.Asn1 -\u003e E:\\code\\runtime\\artifacts\\bin\\System.Formats.Asn1\\ref\\Debug\\net462\\System.Formats.Asn1.dll\n  System.Formats.Asn1 -\u003e E:\\code\\runtime\\artifacts\\bin\\System.Formats.Asn1\\Debug\\net462\\System.Formats.Asn1.dll\n  Microsoft.Bcl.Cryptography -\u003e E:\\code\\runtime\\artifacts\\bin\\Microsoft.Bcl.Cryptography\\Debug\\net462\\Microsoft.Bcl.Cryptography.dll\n  System.Security.Cryptography.Pkcs -\u003e E:\\code\\runtime\\artifacts\\bin\\System.Security.Cryptography.Pkcs\\ref\\Debug\\net462\\System.Security.Cryptography.Pkcs.dll\n  System.Security.Cryptography.Pkcs -\u003e E:\\code\\runtime\\artifacts\\bin\\System.Security.Cryptography.Pkcs\\Debug\\net462\\System.Security.Cryptography.Pkcs.dll\n  Microsoft.Bcl.Cryptography.Tests -\u003e E:\\code\\runtime\\artifacts\\bin\\Microsoft.Bcl.Cryptography.Tests\\Debug\\net481\\Microsoft.Bcl.Cryptography.Tests.dll\n\nWhere is the text execution?\n\nPS E:\\code\\runtime\u003e \n\n```\n\nIt will print the output if you explicitly pass the framework like `.\\dotnet.cmd test .\\src\\libraries\\Microsoft.Bcl.Cryptography\\tests\\ -f net481`\n\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOs-jPMw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6w6X3E",
                                           "createdAt":  "2025-06-12T20:36:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-06-12T20:36:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6w_fck",
                                           "createdAt":  "2025-06-13T07:51:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEWg5eQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "vcsjones",
                                                                               "createdAt":  "2025-06-13T12:29:26Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "So the binlog tells me that the net481 tests run but for some reasons they don\u0027t get printed to the console:\n\n![Image](https://github.com/user-attachments/assets/191d2d8e-0cd6-4ba9-b470-aa6abb5e44c8)\n\n@Youssef1313 can you please take a look? Could be a vstest regression. Note that runtime doesn\u0027t use the terminal logger.",
                                           "updatedAt":  "2025-06-13T07:52:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6w_g8v",
                                           "createdAt":  "2025-06-13T07:54:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "It\u0027s indeed tied to the terminal logger being disabled. If I delete the root `Directory.Build.rsp` file I get the following:\n\n```\nC:\\git\\runtime\u003e.\\.dotnet\\dotnet test src\\libraries\\Microsoft.Bcl.AsyncInterfaces\\tests\\ -c Release /bl\nRestore complete (1.3s)\n  TestUtilities net8.0 succeeded (0.2s) → artifacts\\bin\\TestUtilities\\Release\\net8.0\\TestUtilities.dll\n  ILLink.RoslynAnalyzer succeeded (0.1s) → artifacts\\bin\\ILLink.RoslynAnalyzer\\Release\\netstandard2.0\\ILLink.RoslynAnalyzer.dll\n  ILLink.CodeFixProvider succeeded (0.1s) → artifacts\\bin\\ILLink.CodeFixProvider\\Release\\netstandard2.0\\ILLink.CodeFixProvider.dll\n  Mono.Linker succeeded (0.2s) → artifacts\\bin\\Mono.Linker\\ref\\Release\\net10.0\\illink.dll\n  Mono.Linker succeeded (0.2s) → artifacts\\bin\\Mono.Linker\\Release\\net10.0\\illink.dll\n  ILLink.Tasks net10.0 succeeded (0.2s) → artifacts\\bin\\ILLink.Tasks\\Release\\net\\ILLink.Tasks.dll\n  Microsoft.Interop.SourceGeneration succeeded (0.2s) → artifacts\\bin\\Microsoft.Interop.SourceGeneration\\Release\\netstandard2.0\\Microsoft.Interop.SourceGeneration.dll\n  DownlevelLibraryImportGenerator succeeded (0.2s) → artifacts\\bin\\DownlevelLibraryImportGenerator\\Release\\netstandard2.0\\Microsoft.Interop.LibraryImportGenerator.Downlevel.dll\n  Microsoft.Bcl.AsyncInterfaces netstandard2.1 succeeded (0.2s) → artifacts\\bin\\Microsoft.Bcl.AsyncInterfaces\\Release\\netstandard2.1\\Microsoft.Bcl.AsyncInterfaces.dll\n  Microsoft.Bcl.AsyncInterfaces.Tests net10.0 succeeded (0.2s) → artifacts\\bin\\Microsoft.Bcl.AsyncInterfaces.Tests\\Release\\net10.0\\Microsoft.Bcl.AsyncInterfaces.Tests.dll\nA total of 1 test files matched the specified pattern.\n[xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v3.0.2+dd36e86129 (64-bit .NET 10.0.0-dev)\n[xUnit.net 00:00:00.11]   Discovering: Microsoft.Bcl.AsyncInterfaces.Tests (app domain = off, method display = ClassAndMethod, method display options = None)\n[xUnit.net 00:00:00.15]   Discovered:  Microsoft.Bcl.AsyncInterfaces.Tests (30 test cases to be run)\n[xUnit.net 00:00:00.18]   Starting:    Microsoft.Bcl.AsyncInterfaces.Tests (parallel test collections = on [8 threads], stop on fail = off, explicit = off)\n[xUnit.net 00:00:01.83]   Finished:    Microsoft.Bcl.AsyncInterfaces.Tests\nResults File: C:\\git\\runtime\\artifacts\\bin\\Microsoft.Bcl.AsyncInterfaces.Tests\\Release\\net10.0\\TestResults\\vihofer_DESKTOP-CC8UHUD_2025-06-13_09_53_23.trx\nHtml test results file : C:\\git\\runtime\\artifacts\\bin\\Microsoft.Bcl.AsyncInterfaces.Tests\\Release\\net10.0\\TestResults\\TestResult_vihofer_DESKTOP-CC8UHUD_20250613_095324.html\n\nPassed!  - Failed:     0, Passed:    55, Skipped:     0, Total:    55, Duration: 1 s - Microsoft.Bcl.AsyncInterfaces.Tests.dll (net10.0)\n  Microsoft.Bcl.AsyncInterfaces.Tests test net10.0 succeeded (3.2s)\n  TestUtilities net481 succeeded (0.1s) → artifacts\\bin\\TestUtilities\\Release\\net481\\TestUtilities.dll\n  Microsoft.Bcl.AsyncInterfaces net462 succeeded (0.1s) → artifacts\\bin\\Microsoft.Bcl.AsyncInterfaces\\Release\\net462\\Microsoft.Bcl.AsyncInterfaces.dll\n  Microsoft.Bcl.AsyncInterfaces.Tests net481 succeeded (0.1s) → artifacts\\bin\\Microsoft.Bcl.AsyncInterfaces.Tests\\Release\\net481\\Microsoft.Bcl.AsyncInterfaces.Tests.dll\nA total of 1 test files matched the specified pattern.\n[xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v3.0.2+dd36e86129 (64-bit .NET Framework 4.8.9310.0)\n[xUnit.net 00:00:00.58]   Discovering: Microsoft.Bcl.AsyncInterfaces.Tests (app domain = on [no shadow copy], method display = ClassAndMethod, method display options = None)\n[xUnit.net 00:00:00.69]   Discovered:  Microsoft.Bcl.AsyncInterfaces.Tests (11 test cases to be run)\n[xUnit.net 00:00:00.77]   Starting:    Microsoft.Bcl.AsyncInterfaces.Tests (parallel test collections = on [8 threads], stop on fail = off, explicit = off)\n[xUnit.net 00:00:01.13]   Finished:    Microsoft.Bcl.AsyncInterfaces.Tests\nResults File: C:\\git\\runtime\\artifacts\\bin\\Microsoft.Bcl.AsyncInterfaces.Tests\\Release\\net481\\TestResults\\vihofer_DESKTOP-CC8UHUD_2025-06-13_09_53_27.trx\nHtml test results file : C:\\git\\runtime\\artifacts\\bin\\Microsoft.Bcl.AsyncInterfaces.Tests\\Release\\net481\\TestResults\\TestResult_vihofer_DESKTOP-CC8UHUD_20250613_095327.html\n\nPassed!  - Failed:     0, Passed:    15, Skipped:     0, Total:    15, Duration: 258 ms - Microsoft.Bcl.AsyncInterfaces.Tests.dll (net481)\n  Microsoft.Bcl.AsyncInterfaces.Tests test net481 succeeded (2.5s)\n\nTest summary: total: 70, failed: 0, succeeded: 70, skipped: 0, duration: 6.2s\nBuild succeeded in 10.6s\n```",
                                           "updatedAt":  "2025-06-13T07:54:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6w_vIP",
                                           "createdAt":  "2025-06-13T08:17:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Youssef1313",
                                           "body":  "@nohwnd will have the most context on this.",
                                           "updatedAt":  "2025-06-13T08:17:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6x5AgP",
                                           "createdAt":  "2025-06-18T14:44:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@nohwnd can you please help us understand this issue when not using terminal logger? See the repro steps in the initial post.",
                                           "updatedAt":  "2025-06-18T14:44:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6x8bsa",
                                           "createdAt":  "2025-06-18T19:08:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "nohwnd",
                                           "body":  "I was looking at this and then it got lost to context switch. Putting on my board.",
                                           "updatedAt":  "2025-06-18T19:08:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6yGKDi",
                                           "createdAt":  "2025-06-19T12:37:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "nohwnd",
                                           "body":  "I now remember why I did not investigate further, I could not  build because of this cmake error: \n\n![Image](https://github.com/user-attachments/assets/af5e25cc-0ba2-40fc-84b9-01c9f4be2503)\n\nEven though I have the cmake tool installed via VS. Any tips on fixing that? I did not find it in the repo manual.",
                                           "updatedAt":  "2025-06-19T12:37:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6yIM9X",
                                           "createdAt":  "2025-06-19T15:28:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vcsjones",
                                           "body":  "\u003e Any tips on fixing that? I did not find it in the repo manual.\n\nIt looks like it is finding Cmake but not a linker. Do you have the MSVC build tools and C++ installed in your Visual Studio workload?",
                                           "updatedAt":  "2025-06-19T15:28:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6z6M8z",
                                           "createdAt":  "2025-06-30T09:07:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "nohwnd",
                                           "body":  "![Image](https://github.com/user-attachments/assets/59f1b255-92c0-46b5-acd9-b2caa9a246b2)\n\n\n![Image](https://github.com/user-attachments/assets/5723e83f-07af-434a-b8ea-bfb105006358)\nyes I belive I do. ",
                                           "updatedAt":  "2025-06-30T09:07:56Z"
                                       }
                                   ],
                         "totalCount":  9
                     },
        "title":  "`dotnet test` does not print output for .NET Framework tests for Microsoft.Bcl.Cryptography",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "tracking-external-issue",
                       "regression-from-last-release"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/118215",
        "createdAt":  "2025-07-30T18:39:15Z",
        "number":  118215,
        "author":  "BrennanConroy",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-31T18:18:36Z",
        "body":  "We just updated aspnetcore to include the commit hash for the dotnet/aspnetcore repo that the VMR build is based on (roughly) in the assembly metadata. See https://github.com/dotnet/dotnet/pull/1572\n\nIt\u0027d be nice if the runtime repo did this as well. It will help scenarios like benchmarking where we gather the commit hashes of assemblies to help find where a regression (or improvement) occurred.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOu7k5rg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc67AgFe",
                                           "createdAt":  "2025-07-30T18:48:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-07-30T18:48:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc67uTmu",
                                           "createdAt":  "2025-08-04T07:41:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeffhandley",
                                           "body":  "@ViktorHofer Is this feasible for you to pull into .NET 10?",
                                           "updatedAt":  "2025-08-04T07:41:01Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Add RepoOriginalSourceRevisionId as assembly metadata",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/119076",
        "createdAt":  "2025-08-25T19:48:31Z",
        "number":  119076,
        "author":  "billvolt",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-31T17:59:55Z",
        "body":  "### Description\n\nThe version numbers internal to the assemblies of System.Diagnostics.DiagnosticSource e.g. version 9.0.8.0 do not reflect version 9.0.8.0 but rather either 9.0.0.0 or 9.0.0.8.\n\nBinding of the dependent assemblies by the expected version (9.0.8.0) results in warning MSB3277.\n\nOther System.* NuGet version 9.0.8.0 packages show similar version errors when examined with JetBrains DotPeek: System.Configuration.ConfigurationManager, System.Memory.Data.\n\n### Reproduction Steps\n\nAdd NuGet System.Diagnostics.DiagnosticSource to your project.\n\nUpdate App.config as follows:\n```\n\u003cruntime\u003e\n\u003cassemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\"\u003e\n\u003cdependentAssembly\u003e\n\u003cassemblyIdentity name=\"System.Diagnostics.DiagnosticSource\" publicKeyToken=\"cc7b13ffcd2ddd51\" culture=\"neutral\" /\u003e\n\u003cbindingRedirect oldVersion=\"0.0.0.0-9.0.8.0\" newVersion=\"9.0.8.0\" /\u003e\n\u003c/dependentAssembly\u003e\n\u003c/assemblyBinding\u003e\n\u003c/runtime\u003e\n\n```\n\nBuild.\nReview Build output.\n\n### Expected behavior\n\nBuild shows no errors related to the System.Diagnostics.DiagnosticSource.\n\n### Actual behavior\n\nBuild shows warning \n\n`MSB3277: There was a conflict between \"System.Diagnostics.DiagnosticSource, Version=9.0.0.8, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\" and \"System.Diagnostics.DiagnosticSource, Version=9.0.8.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\".`\n\n### Regression?\n\nUnknown.\n\n### Known Workarounds\n\nBinding to the assembly\u0027s actual (wrong) internal version number eliminates the warning.\n\nUpdate App.config as follows:\n```\n\u003cruntime\u003e\n\u003cassemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\"\u003e\n\u003cdependentAssembly\u003e\n\u003cassemblyIdentity name=\"System.Diagnostics.DiagnosticSource\" publicKeyToken=\"cc7b13ffcd2ddd51\" culture=\"neutral\" /\u003e\n\u003cbindingRedirect oldVersion=\"0.0.0.0-9.0.8.0\" newVersion=\"9.0.0.8\" /\u003e\n\u003c/dependentAssembly\u003e\n\u003c/assemblyBinding\u003e\n\u003c/runtime\u003e\n\n```\n\n### Configuration\n\nWhich version of .NET is the code running on?\nFramework 4.8\n\nWhat OS and version, and what distro if applicable?\nWindows 10\n\nWhat is the architecture (x64, x86, ARM, ARM64)?\nx64\n\nDo you know whether it is specific to that configuration?\nUnknown\n\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOwL-QHg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc7ABOTU",
                                           "createdAt":  "2025-08-25T19:52:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "billvolt",
                                           "body":  "Here is what DotPeek shows for a few System.* version 9.0.8.0 NuGet packages:\n\n\u003cimg width=\"985\" height=\"587\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ae7a839e-00fc-493d-9e52-ceefcde5faf0\" /\u003e\n\nNote that within a single package, the internal version numbers vary by target framework, but none of these match the NuGet package version.",
                                           "updatedAt":  "2025-08-25T19:52:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7ABYzH",
                                           "createdAt":  "2025-08-25T20:09:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vcsjones",
                                           "body":  "\u003e Note that within a single package, the internal version numbers vary by target framework\n\nThis is expected. See https://github.com/dotnet/runtime/issues/92486#issuecomment-1733963757 for why. It\u0027s for a different package, but the same reasoning and logic apply. .NET Framework always versions the assembly versions, whereas .NET Core and .NET Standard do not.\n\nAs for why .NET Framework uses the revision instead of the build for the assembly version, I am not clear on. @ericstj or @ViktorHofer may know?",
                                           "updatedAt":  "2025-08-25T20:09:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7ABZyy",
                                           "createdAt":  "2025-08-25T20:10:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-meta\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-08-25T20:10:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7AC54A",
                                           "createdAt":  "2025-08-25T22:58:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "\u003e As for why .NET Framework uses the revision instead of the build for the assembly version, I am not clear on. [@ericstj](https://github.com/ericstj) or [@ViktorHofer](https://github.com/ViktorHofer) may know?\n\nSome history in \nhttps://github.com/dotnet/runtime/issues/119076\nhttps://github.com/dotnet/corefx/pull/32200 cc @wtgodbe \n\nI\u0027d say historical convention.  There was a time where we insisted that Major.Minor.Build == API or contract version.  So we used revision to indicate implementation only changes.  Then we started applying major.minor changes to assembly version as part of branding and things changed but we never changed this part of our conventions.\n\nI think we could change that so that whenever we increment assembly version we make it match the package version.  That would certainly simplify things and should be acceptable for new releases.  I don\u0027t think we should do it for older releases (8.0, 9.0).\n\n@ViktorHofer what do you think?\nhttps://github.com/dotnet/runtime/blob/8a3c2e413eee85cc3e58d6f478aa19989b7ecb3e/src/libraries/Directory.Build.targets#L73-L80",
                                           "updatedAt":  "2025-08-25T22:58:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7AGaqE",
                                           "createdAt":  "2025-08-26T07:09:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e I think we could change that so that whenever we increment assembly version we make it match the package version. That would certainly simplify things and should be acceptable for new releases. I don\u0027t think we should do it for older releases (8.0, 9.0).\n\nI don\u0027t see any reason why not. It would certainly make this more consistent and easier to follow. ",
                                           "updatedAt":  "2025-08-26T07:09:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7Av5Ae",
                                           "createdAt":  "2025-08-28T14:40:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-08-28T14:40:18Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "System.Diagnostics.DiagnosticSource and other System.* NuGet packages have jumbled version numbers e.g. 9.0.8.0 -\u003e 9.0.0.8 or 9.0.0.0",
        "labels":  [
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/119358",
        "createdAt":  "2025-09-04T17:58:57Z",
        "number":  119358,
        "author":  "SingleAccretion",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-10T13:01:02Z",
        "body":  "Writing this purely in the spirit of https://github.com/dotnet/runtime/issues/94183#issuecomment-3254389607, feel free to close / move this issue.\n\nCurrently if you try to do:\n```\ndotnet test /p:TargetOS=wasi /p:TargetArchitecture=wasm .\\tests\\System.Collections.Specialized.Tests.csproj\n```\nIt will fail with:\n```\nSettings file provided does not conform to required format. An error occurred while loading the settings.  Error: Invalid setting \u0027RunConfiguration\u0027. Invalid value \u0027wasm\u0027 specified for \u0027TargetPlatform\u0027..\nUnhandled exception. System.TypeInitializationException: The type initializer for \u0027Microsoft.VisualStudio.TestPlatform.Client.TestPlatform\u0027 threw an exception.\n ---\u003e Microsoft.VisualStudio.TestPlatform.ObjectModel.SettingsException: Invalid settings \u0027RunConfiguration\u0027.  Invalid value \u0027wasm\u0027 specified for \u0027TargetPlatform\u0027.\n   at Microsoft.VisualStudio.TestPlatform.ObjectModel.RunConfiguration.FromXml(XmlReader reader) in /_/src/vstest/src/Microsoft.TestPlatform.ObjectModel/RunSettings/RunConfiguration.cs:line 781\n   at Microsoft.VisualStudio.TestPlatform.ObjectModel.Utilities.XmlRunSettingsUtilities.GetNodeValue[T](String settingsXml, String nodeName, Func`2 nodeParser) in /_/src/vstest/src/Microsoft.TestPlatform.ObjectModel/Utilities/XmlRunSettingsUtilities.cs:line 377\n   at Microsoft.VisualStudio.TestPlatform.ObjectModel.Utilities.XmlRunSettingsUtilities.GetRunConfigurationNode(String settingsXml) in /_/src/vstest/src/Microsoft.TestPlatform.ObjectModel/Utilities/XmlRunSettingsUtilities.cs:line 136\n   at Microsoft.VisualStudio.TestPlatform.Client.TestPlatform.AddExtensionAssembliesFromExtensionDirectory() in /_/src/vstest/src/Microsoft.TestPlatform.Client/TestPlatform.cs:line 283\n   --- End of inner exception stack trace ---\n```\n`dotnet msbuild /t:Test` works as expected:\n```\ndotnet msbuild /p:TargetOS=wasi /p:TargetArchitecture=wasm /t:Test .\\tests\\System.Collections.Specialized.Tests.csproj\n\n...\n  info: === TEST EXECUTION SUMMARY ===\n  info: Tests run: 2131 Passed: 2123 Inconclusive: 0 Failed: 0 Ignored: 0 Skipped: 8\n...\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOwzLEDg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc7CAbtN",
                                           "createdAt":  "2025-09-04T17:59:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-09-04T17:59:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7CAcLA",
                                           "createdAt":  "2025-09-04T18:00:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-09-04T18:00:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7Cwzkt",
                                           "createdAt":  "2025-09-08T19:04:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEhqStw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "akoeplinger",
                                                                               "createdAt":  "2025-09-10T12:59:29Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "maraf",
                                           "body":  "This is more of a VSTest issue. MSTest or xunit does work with wasm. It\u0027s interesting in terms of Microsoft.Testing.Platform which allows to switch between test frameworks and integrates with `dotnet test`.",
                                           "updatedAt":  "2025-09-08T19:04:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7DMsQO",
                                           "createdAt":  "2025-09-10T13:01:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "yeah we\u0027d need to move to MTP first. we also use our own threadless xunit runner for single-threaded wasm, not sure if that would need adjustments as well",
                                           "updatedAt":  "2025-09-10T13:01:01Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "`dotnet test` does not work for WASM libraries tests",
        "labels":  [
                       "arch-wasm",
                       "area-Infrastructure-libraries"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/119604",
        "createdAt":  "2025-09-11T22:28:59Z",
        "number":  119604,
        "author":  "ericstj",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-12T16:42:04Z",
        "body":  "This might be more of a VS Code / C# DevKit compatibility thing.\n\nThe way it tries to invoke build for our tests causes an error:\n```\n *  Executing task: dotnet: build /workspaces/runtime/src/libraries/System.DirectoryServices.Protocols/tests/System.DirectoryServices.Protocols.Tests.csproj \n\ndotnet build /workspaces/runtime/src/libraries/System.DirectoryServices.Protocols/tests/System.DirectoryServices.Protocols.Tests.csproj /property:GenerateFullPaths=true /consoleloggerparameters:NoSummary /p:Configuration=Debug /p:Platform=\"AnyCPU\" \nC# extension build result service is available.\n\n  Determining projects to restore...\n  All projects are up-to-date for restore.\n  Microsoft.Interop.SourceGeneration -\u003e /workspaces/runtime/artifacts/bin/Microsoft.Interop.SourceGeneration/Debug/netstandard2.0/Microsoft.Interop.SourceGeneration.dll\n  TestUtilities -\u003e /workspaces/runtime/artifacts/bin/TestUtilities/Debug/net8.0/TestUtilities.dll\n  DownlevelLibraryImportGenerator -\u003e /workspaces/runtime/artifacts/bin/DownlevelLibraryImportGenerator/Debug/netstandard2.0/Microsoft.Interop.LibraryImportGenerator.Downlevel.dll\n  TestUtilities -\u003e /workspaces/runtime/artifacts/bin/TestUtilities/Debug/net481/TestUtilities.dll\n  ILLink.RoslynAnalyzer -\u003e /workspaces/runtime/artifacts/bin/ILLink.RoslynAnalyzer/Debug/netstandard2.0/ILLink.RoslynAnalyzer.dll\n  ILLink.CodeFixProvider -\u003e /workspaces/runtime/artifacts/bin/ILLink.CodeFixProvider/Debug/netstandard2.0/ILLink.CodeFixProvider.dll\n  System.DirectoryServices.Protocols.Tests -\u003e /workspaces/runtime/artifacts/bin/System.DirectoryServices.Protocols.Tests/Debug/net481/System.DirectoryServices.Protocols.Tests.dll\n  Mono.Linker -\u003e /workspaces/runtime/artifacts/bin/Mono.Linker/ref/Debug/net10.0/illink.dll\n  Mono.Linker -\u003e /workspaces/runtime/artifacts/bin/Mono.Linker/Debug/net10.0/illink.dll\n  ILLink.Tasks -\u003e /workspaces/runtime/artifacts/bin/ILLink.Tasks/Debug/net/ILLink.Tasks.dll\n  System.DirectoryServices.Protocols -\u003e /workspaces/runtime/artifacts/bin/System.DirectoryServices.Protocols/ref/Debug/net10.0/System.DirectoryServices.Protocols.dll\n  System.DirectoryServices.Protocols -\u003e /workspaces/runtime/artifacts/bin/System.DirectoryServices.Protocols/Debug/net10.0-windows/System.DirectoryServices.Protocols.dll\n  System.Private.CoreLib.Generators -\u003e /workspaces/runtime/artifacts/bin/System.Private.CoreLib.Generators/Debug/netstandard2.0/System.Private.CoreLib.Generators.dll\n  System.Private.CoreLib -\u003e /workspaces/runtime/artifacts/bin/System.Private.CoreLib/ref/Debug/net10.0/System.Private.CoreLib.dll\n  LibraryImportGenerator -\u003e /workspaces/runtime/artifacts/bin/LibraryImportGenerator/Debug/netstandard2.0/Microsoft.Interop.LibraryImportGenerator.dll\n/workspaces/runtime/src/libraries/System.Private.CoreLib/src/System/Runtime/InteropServices/RuntimeInformation.cs(50,8): error CS1029: #error: \u0027Unknown Architecture\u0027 [/workspaces/runtime/src/coreclr/System.Private.CoreLib/System.Private.CoreLib.csproj]\n\nBuild FAILED.\n```\n\nI think the problem has to do with `/p:Platform=\"AnyCPU\"`  If I remove that it builds successfully.  We\u0027ll need to see why the devkit uses this when launching tests.  I suspect that it\u0027s due to the structure of our SLNX files.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOw9sVTg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc7DrCiT",
                                           "createdAt":  "2025-09-11T22:34:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MihuBot",
                                           "body":  "I\u0027m a bot. Here is a possible related and/or duplicate issue (I may be wrong):\n- https://github.com/dotnet/runtime/issues/97984",
                                           "updatedAt":  "2025-09-11T22:34:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7D13Iy",
                                           "createdAt":  "2025-09-12T15:13:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "We can workaround this with \n\n\u003cimg width=\"1524\" height=\"160\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a6a6e150-4110-4a78-ba84-2fde335a64f2\" /\u003e\n\nNormal build from the SLN works fine, as does build from the terminal window.\n\nI suspect this is the same root cause as #97984.",
                                           "updatedAt":  "2025-09-12T15:13:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7D2xVO",
                                           "createdAt":  "2025-09-12T16:16:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-09-12T16:16:58Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "[Codespaces] Trying to debug tests in codespaces fails to build",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "untriaged"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/119706",
        "createdAt":  "2025-09-15T07:50:35Z",
        "number":  119706,
        "author":  "tmds",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-15T14:57:26Z",
        "body":  "Our Fedora 43 CI shows some issues when trying to compile runtime repo with clang 21.1\n\n```\n  /home/tester/workdir/runtime/src/native/libs/System.Net.Security.Native/pal_gssapi.c:247:11: error: implicit conversion when initializing \u0027char *\u0027 with an expression of type \u0027void *\u0027 is not permitted in C++ [-Werror,-Wimplicit-void-ptr-cast]\n    247 |     char* ptrSlash = memchr(inputName, \u0027/\u0027, inputNameLen);\n        |           ^          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n```\n\n```\n  /home/tester/workdir/runtime/src/native/libs/System.Native/pal_networking.c:396:17: error: jump from this goto statement to its label is incompatible with C++ [-Werror,-Wjump-misses-init]\n    396 |                 goto cleanup;\n        |                 ^\n  /home/tester/workdir/runtime/src/native/libs/System.Native/pal_networking.c:411:10: note: jump bypasses variable initialization\n    411 |     bool includeIPv6Loopback = true;\n        |          ^\n  /home/tester/workdir/runtime/src/native/libs/System.Native/pal_networking.c:410:10: note: jump bypasses variable initialization\n    410 |     bool includeIPv4Loopback = true;\n        |          ^\n```\n\n```\n  /home/tester/workdir/runtime/src/native/libs/System.Native/pal_networking.c:1518:34: error: implicit conversion when assigning to \u0027uint8_t *\u0027 (aka \u0027unsigned char *\u0027) from type \u0027void *\u0027 is not permitted in C++ [-Werror,-Wimplicit-void-ptr-cast]\n   1518 |     messageHeader-\u003eControlBuffer = (void*)buffer;\n        |                                  ^ ~~~~~~~~~~~~~\n```\n\ncc @jkotas @omajid ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOxEF3IQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc7EMt8i",
                                           "createdAt":  "2025-09-15T11:22:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-09-15T11:22:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7ENjgd",
                                           "createdAt":  "2025-09-15T12:20:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tmds",
                                           "body":  "From https://releases.llvm.org/21.1.0/tools/clang/docs/ReleaseNotes.html, the C compiler is now emitting some warnings for C++ incompatibilities (`-Wc++-compat`), like `-Wimplicit-void-ptr-cast` and `-Wjump-misses-init`.\n\nWhen I ignore those with `-Wno-c++-compat`, then it issues one more error for:\n\nhttps://github.com/dotnet/runtime/blob/c1b153ab708c9ff6469c6fcb828055718ad336c3/src/coreclr/debug/di/rspriv.h#L6380\n\n```\n  /root/runtime/src/coreclr/debug/di/rspriv.h:6380:36: error: in-class initializer for static data member is not a constant expression\n   6380 |     static const CorDebugUserState kInvalidUserState = CorDebugUserState(-1);\n        |                                    ^                   ~~~~~~~~~~~~~~~~~~~~~\n  /root/runtime/src/coreclr/debug/di/rspriv.h:6380:56: note: integer value -1 is outside the valid range of values [0, 511] for the enumeration type \u0027CorDebugUserState\u0027\n   6380 |     static const CorDebugUserState kInvalidUserState = CorDebugUserState(-1);\n        |                                                        \n```",
                                           "updatedAt":  "2025-09-15T12:20:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7EOtP8",
                                           "createdAt":  "2025-09-15T13:32:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "omajid",
                                           "body":  "Duplicate of #116997 ?",
                                           "updatedAt":  "2025-09-15T13:32:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7EQXch",
                                           "createdAt":  "2025-09-15T14:57:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEiUIqQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "omajid",
                                                                               "createdAt":  "2025-09-15T16:50:46Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "tmds",
                                           "body":  "\nYes. It might have been reported for an older clang. I didn\u0027t run into the `CorDebugUserState` error until after addressing the 21.1 c++-compat warnings.\n\nThese are the changes I made to deal with the compiler errors:\n```diff\ndiff --git a/eng/native/configurecompiler.cmake b/eng/native/configurecompiler.cmake\nindex d54d9b6803b..9438cb5af7e 100644\n--- a/eng/native/configurecompiler.cmake\n+++ b/eng/native/configurecompiler.cmake\n@@ -574,6 +574,7 @@ if (CLR_CMAKE_HOST_UNIX OR CLR_CMAKE_HOST_WASI)\n   add_compile_options(-Wno-unused-function)\n   add_compile_options(-Wno-tautological-compare)\n   add_compile_options(-Wno-unknown-pragmas)\n+  add_compile_options(-Wno-c++-compat)\n \n   # Explicitly enabled warnings\n   check_c_compiler_flag(-Wimplicit-fallthrough COMPILER_SUPPORTS_W_IMPLICIT_FALLTHROUGH)\ndiff --git a/src/coreclr/pal/prebuilt/inc/cordebug.h b/src/coreclr/pal/prebuilt/inc/cordebug.h\nindex 78b86c69ee9..1672d602d99 100644\n--- a/src/coreclr/pal/prebuilt/inc/cordebug.h\n+++ b/src/coreclr/pal/prebuilt/inc/cordebug.h\n@@ -10042,6 +10042,7 @@ EXTERN_C const IID IID_ICorDebugRegisterSet2;\n typedef\n enum CorDebugUserState\n     {\n+        CORDEBUG_INVALID = -1,\n         USER_STOP_REQUESTED = 0x1,\n         USER_SUSPEND_REQUESTED  = 0x2,\n         USER_BACKGROUND = 0x4,\n```",
                                           "updatedAt":  "2025-09-15T14:57:26Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "clang 21.1 compilation issues",
        "labels":  [
                       "area-Infrastructure-libraries",
                       "untriaged"
                   ]
    }
]
