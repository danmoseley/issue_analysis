[
    {
        "url":  "https://github.com/dotnet/runtime/issues/36135",
        "createdAt":  "2020-05-08T18:51:44Z",
        "number":  36135,
        "author":  "safern",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-11-10T18:06:52Z",
        "body":  "### Console Log Summary\r\n\r\n### Builds\r\n|Build|Pull Request | Test Failure Count|\r\n| --- | --- | --- |\r\n|[#634139](https://dev.azure.com/dnceng/public/_build/results?buildId=634139)|#35818|1|\r\n|[#636227](https://dev.azure.com/dnceng/public/_build/results?buildId=636227)|#35857|1|\r\n|[#636339](https://dev.azure.com/dnceng/public/_build/results?buildId=636339)|#36102|1|\r\n|[#636552](https://dev.azure.com/dnceng/public/_build/results?buildId=636552)|#35573|1|\r\n|[#636741](https://dev.azure.com/dnceng/public/_build/results?buildId=636741)|#36111|1|\r\n|[#636785](https://dev.azure.com/dnceng/public/_build/results?buildId=636785)|#36115|1|\r\n|[#636821](https://dev.azure.com/dnceng/public/_build/results?buildId=636821)|#35936|1|\r\n|[#636842](https://dev.azure.com/dnceng/public/_build/results?buildId=636842)|#35790|1|\r\n|[#636870](https://dev.azure.com/dnceng/public/_build/results?buildId=636870)|#36116|2|\r\n### Configurations\r\n- net5.0-Windows_NT-Debug-x64-CoreCLR_release-Windows.10.Amd64.Server19H1.ES.Open\r\n- net5.0-Windows_NT-Debug-x64-Mono_release-Windows.10.Amd64.Server19H1.ES.Open\r\n- net5.0-Windows_NT-Release-x86-CoreCLR_release-Windows.10.Amd64.Server19H1.ES.Open\r\n### Helix Logs\r\n|Build|Pull Request|Console|Core|Test Results|Run Client|\r\n| --- | --- | --- | --- | --- | --- |\r\n|[#634139](https://dev.azure.com/dnceng/public/_build/results?buildId=634139)|#35818|[console.log](https://helix.dot.net/api/2019-06-17/jobs/d58a0f21-8d4d-4626-843b-a8561098c6a0/workitems/System.Diagnostics.EventLog.Tests/files/console.a1c3005b.log)||[testResults.xml](https://helix.dot.net/api/2019-06-17/jobs/d58a0f21-8d4d-4626-843b-a8561098c6a0/workitems/System.Diagnostics.EventLog.Tests/files/testResults.xml)|[run_client.py](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-35818-merge-d58a0f218d4d462684/System.Diagnostics.EventLog.Tests/1ff6fbb1-3f80-4551-b7c2-0f55da9d5331.log?sv=2019-02-02\u0026se=2020-05-28T17%3A58%3A43Z\u0026sr=c\u0026sp=rl\u0026sig=%2FaHecw872cdQqLG7HR0kDlLgMyc36boFp%2FSDqpSroyk%3D)|\r\n|[#636227](https://dev.azure.com/dnceng/public/_build/results?buildId=636227)|#35857|[console.log](https://helix.dot.net/api/2019-06-17/jobs/c3920dc6-3448-4ebb-a2b9-e30163e9e463/workitems/System.Diagnostics.EventLog.Tests/files/console.5938375d.log)||[testResults.xml](https://helix.dot.net/api/2019-06-17/jobs/c3920dc6-3448-4ebb-a2b9-e30163e9e463/workitems/System.Diagnostics.EventLog.Tests/files/testResults.xml)|[run_client.py](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-35857-merge-c3920dc634484ebba2/System.Diagnostics.EventLog.Tests/a098f861-5683-4073-bc19-385ca7939fef.log?sv=2019-02-02\u0026se=2020-05-28T06%3A09%3A28Z\u0026sr=c\u0026sp=rl\u0026sig=96FRD4uEI6Gc6Mldq9pFPh92cXl9QI7mbIGqE9vZ1Nk%3D)|\r\n|[#636339](https://dev.azure.com/dnceng/public/_build/results?buildId=636339)|#36102|[console.log](https://helix.dot.net/api/2019-06-17/jobs/3ba692db-f206-426f-b5d4-9a9fab7a0e67/workitems/System.Diagnostics.EventLog.Tests/files/console.06c44d6e.log)||[testResults.xml](https://helix.dot.net/api/2019-06-17/jobs/3ba692db-f206-426f-b5d4-9a9fab7a0e67/workitems/System.Diagnostics.EventLog.Tests/files/testResults.xml)|[run_client.py](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-36102-merge-3ba692dbf206426fb5/System.Diagnostics.EventLog.Tests/bdb311ec-47be-40a4-9bbe-884d9f023232.log?sv=2019-02-02\u0026se=2020-05-28T07%3A52%3A31Z\u0026sr=c\u0026sp=rl\u0026sig=2DvStncnQYoxcPDZ%2FXHkIQNuLYYXkE36XSz%2B12FdXFU%3D)|\r\n|[#636552](https://dev.azure.com/dnceng/public/_build/results?buildId=636552)|#35573|[console.log](https://helix.dot.net/api/2019-06-17/jobs/4977b7af-1489-465c-8ef1-54bcb75ec955/workitems/System.Diagnostics.EventLog.Tests/files/console.bfc69ca7.log)||[testResults.xml](https://helix.dot.net/api/2019-06-17/jobs/4977b7af-1489-465c-8ef1-54bcb75ec955/workitems/System.Diagnostics.EventLog.Tests/files/testResults.xml)|[run_client.py](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-35573-merge-4977b7af1489465c8e/System.Diagnostics.EventLog.Tests/176f175e-3eae-47c8-b0a4-83aeba1696ee.log?sv=2019-02-02\u0026se=2020-05-28T11%3A58%3A38Z\u0026sr=c\u0026sp=rl\u0026sig=pkqeX%2F8UX83%2Fx6hIlphfy8yrfoRUibtJwuGoEmQODoU%3D)|\r\n|[#636741](https://dev.azure.com/dnceng/public/_build/results?buildId=636741)|#36111|[console.log](https://helix.dot.net/api/2019-06-17/jobs/0ba321eb-dc71-45d0-837f-b5f52e62176a/workitems/System.Diagnostics.EventLog.Tests/files/console.07b4e2c6.log)||[testResults.xml](https://helix.dot.net/api/2019-06-17/jobs/0ba321eb-dc71-45d0-837f-b5f52e62176a/workitems/System.Diagnostics.EventLog.Tests/files/testResults.xml)|[run_client.py](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-36111-merge-0ba321ebdc7145d083/System.Diagnostics.EventLog.Tests/5f076f73-6b44-4e08-889f-cf9f58ef080f.log?sv=2019-02-02\u0026se=2020-05-28T15%3A07%3A41Z\u0026sr=c\u0026sp=rl\u0026sig=KxPoTOeZoXeNUXpglTfVFujiOu3XfzUqGVAY9OwuGNU%3D)|\r\n|[#636785](https://dev.azure.com/dnceng/public/_build/results?buildId=636785)|#36115|[console.log](https://helix.dot.net/api/2019-06-17/jobs/34b7b8cc-7802-4162-9f26-5e454117b77f/workitems/System.Diagnostics.EventLog.Tests/files/console.7c21395c.log)||[testResults.xml](https://helix.dot.net/api/2019-06-17/jobs/34b7b8cc-7802-4162-9f26-5e454117b77f/workitems/System.Diagnostics.EventLog.Tests/files/testResults.xml)|[run_client.py](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-36115-merge-34b7b8cc780241629f/System.Diagnostics.EventLog.Tests/268081ba-31da-48c2-9197-2e9680f5a84c.log?sv=2019-02-02\u0026se=2020-05-28T15%3A57%3A11Z\u0026sr=c\u0026sp=rl\u0026sig=qNILi%2B5hWWdkpQd3%2FsIjZj1TGjsqwxNY1U8dg5JDQC0%3D)|\r\n|[#636821](https://dev.azure.com/dnceng/public/_build/results?buildId=636821)|#35936|[console.log](https://helix.dot.net/api/2019-06-17/jobs/2615a61f-99ee-46be-a7c0-c44243b51369/workitems/System.Diagnostics.EventLog.Tests/files/console.6fa9ed0f.log)||[testResults.xml](https://helix.dot.net/api/2019-06-17/jobs/2615a61f-99ee-46be-a7c0-c44243b51369/workitems/System.Diagnostics.EventLog.Tests/files/testResults.xml)|[run_client.py](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-35936-merge-2615a61f99ee46bea7/System.Diagnostics.EventLog.Tests/2b17efd3-fa7b-43b7-9242-135b5923f647.log?sv=2019-02-02\u0026se=2020-05-28T16%3A41%3A08Z\u0026sr=c\u0026sp=rl\u0026sig=n%2FtA9QvcYG4xQqVRJQsLID35g3UDLoh9wTIRBOskWk4%3D)|\r\n|[#636842](https://dev.azure.com/dnceng/public/_build/results?buildId=636842)|#35790|[console.log](https://helix.dot.net/api/2019-06-17/jobs/bf4e7623-5cf0-402e-83ae-afdaf2900040/workitems/System.Diagnostics.EventLog.Tests/files/console.7ae54fd2.log)||[testResults.xml](https://helix.dot.net/api/2019-06-17/jobs/bf4e7623-5cf0-402e-83ae-afdaf2900040/workitems/System.Diagnostics.EventLog.Tests/files/testResults.xml)|[run_client.py](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-35790-merge-bf4e76235cf0402e83/System.Diagnostics.EventLog.Tests/e1c02bec-8032-4898-8093-447e9efc2afe.log?sv=2019-02-02\u0026se=2020-05-28T17%3A14%3A49Z\u0026sr=c\u0026sp=rl\u0026sig=Z5NqDfj%2FvgMWPq1%2FDcBFwdCWSVmz49c%2Fh2E5U7A%2BgAE%3D)|\r\n|[#636870](https://dev.azure.com/dnceng/public/_build/results?buildId=636870)|#36116|[console.log](https://helix.dot.net/api/2019-06-17/jobs/ce270e96-0946-43db-b172-39c1ebc71d77/workitems/System.Diagnostics.EventLog.Tests/files/console.cd883cad.log)||[testResults.xml](https://helix.dot.net/api/2019-06-17/jobs/ce270e96-0946-43db-b172-39c1ebc71d77/workitems/System.Diagnostics.EventLog.Tests/files/testResults.xml)|[run_client.py](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-36116-merge-ce270e96094643dbb1/System.Diagnostics.EventLog.Tests/fe9c1769-277f-4b7f-9ead-dc0e4ccc4f1e.log?sv=2019-02-02\u0026se=2020-05-28T17%3A30%3A00Z\u0026sr=c\u0026sp=rl\u0026sig=1IZ18hCxTQita9mLZcYOGXpoFpeIId%2Frry3USn7tk3I%3D)|\r\n|[#636870](https://dev.azure.com/dnceng/public/_build/results?buildId=636870)|#36116|[console.log](https://helix.dot.net/api/2019-06-17/jobs/cbd39488-3404-45fd-83e3-721ba13cc19f/workitems/System.Diagnostics.EventLog.Tests/files/console.7bad0392.log)||[testResults.xml](https://helix.dot.net/api/2019-06-17/jobs/cbd39488-3404-45fd-83e3-721ba13cc19f/workitems/System.Diagnostics.EventLog.Tests/files/testResults.xml)|[run_client.py](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-36116-merge-cbd39488340445fd83/System.Diagnostics.EventLog.Tests/7c1a5538-5edc-41b5-84ed-36742a7ad644.log?sv=2019-02-02\u0026se=2020-05-28T17%3A31%3A17Z\u0026sr=c\u0026sp=rl\u0026sig=dRwe3oeYtD%2FnN%2BP6tOSE%2FR3kefKEH8GFxXRcbufj8T0%3D)|\r\n\r\nI will put up a PR to disable the test.\r\n\r\ncc: @dotnet/runtime-infrastructure ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOLE5mkw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyNTk2Mzg3MQ==",
                                           "createdAt":  "2020-05-08T18:51:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @ViktorHofer\nNotify danmosemsft if you want to be subscribed.",
                                           "updatedAt":  "2020-05-08T18:51:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyNTk2NDAyMQ==",
                                           "createdAt":  "2020-05-08T18:52:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @tommcdon, @krwq\nNotify danmosemsft if you want to be subscribed.",
                                           "updatedAt":  "2020-05-08T18:52:07Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyNTk3NTA3Nw==",
                                           "createdAt":  "2020-05-08T19:18:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "stephentoub",
                                           "body":  "Presumably this was caused by https://github.com/dotnet/runtime/pull/35911 ?",
                                           "updatedAt":  "2020-05-08T19:18:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyNTk3NTYyNA==",
                                           "createdAt":  "2020-05-08T19:19:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "Hmm, yeah looks suspicious. \r\n\r\nThese tests intention was to not run them on CI. According to: https://github.com/dotnet/runtime/commit/48a222cbbbee6c39d622a9daee86f8f185263d5f\r\n\r\nbut given this is potential break, should we reconsider that? ",
                                           "updatedAt":  "2020-05-08T19:19:58Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyNTk3OTMzNw==",
                                           "createdAt":  "2020-05-08T19:28:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e but given this is potential break, should we reconsider that?\r\n\r\n@danmosemsft ",
                                           "updatedAt":  "2020-05-08T19:28:40Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyNTk4MTQ4Nw==",
                                           "createdAt":  "2020-05-08T19:33:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "Also, another point: 48a222c -- was in February 18th, and I don\u0027t think these tests that were left enabled have failed ever since until now. ",
                                           "updatedAt":  "2020-05-08T19:33:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyNTk4NDU0MQ==",
                                           "createdAt":  "2020-05-08T19:40:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "cc: @tarekgh ",
                                           "updatedAt":  "2020-05-08T19:40:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyNTk4NzYzMw==",
                                           "createdAt":  "2020-05-08T19:47:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tarekgh",
                                           "body":  "I\u0027ll revert #35911. it is good we have a test catch such issues.",
                                           "updatedAt":  "2020-05-08T19:47:37Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyNTk4ODIxOA==",
                                           "createdAt":  "2020-05-08T19:48:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "stephentoub",
                                           "body":  "\u003e it is good we have a test catch such issues.\r\n\r\nUnfortunately that test is being made to not run in CI in https://github.com/dotnet/runtime/pull/36138.  How often are these tests run locally?",
                                           "updatedAt":  "2020-05-08T19:48:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyNTk4ODQ1MA==",
                                           "createdAt":  "2020-05-08T19:49:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tarekgh",
                                           "body":  "could someone approve https://github.com/dotnet/runtime/pull/36143 and merge to unblock?",
                                           "updatedAt":  "2020-05-08T19:49:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyNTk4ODc1Mg==",
                                           "createdAt":  "2020-05-08T19:50:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tarekgh",
                                           "body":  "\u003e How often are these tests run locally?\r\n\r\nI have no idea about these tests. @Anipik @maryamariyan may know better.",
                                           "updatedAt":  "2020-05-08T19:50:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyNTk5MzE2NQ==",
                                           "createdAt":  "2020-05-08T20:00:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tarekgh",
                                           "body":  "how often this test used to fail before https://github.com/dotnet/runtime/commit/48a222cbbbee6c39d622a9daee86f8f185263d5f?",
                                           "updatedAt":  "2020-05-08T21:20:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyNjAzMTkxOQ==",
                                           "createdAt":  "2020-05-08T21:36:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "Looking at the kusto data now and I’ll update the issue.",
                                           "updatedAt":  "2020-05-08T21:36:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyNjA0MjkxNA==",
                                           "createdAt":  "2020-05-08T22:11:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "It seems like it has had its hicups, some failures on 4/26, some on 2/13-2/16 and the ones today. Will keep looking at the data to make sure the revert fixed it, let\u0027s leave it enabled for now and see how it behaves.\r\n\r\nWill leave the issue open to track the data.",
                                           "updatedAt":  "2020-05-08T22:11:47Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyNjA0MzgyNA==",
                                           "createdAt":  "2020-05-08T22:14:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "Actually closing the issue and if we see it again we can reopen. ",
                                           "updatedAt":  "2020-05-08T22:14:53Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyNjg0NzEyMg==",
                                           "createdAt":  "2020-05-11T17:37:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "I found an interesting pattern.\r\n\r\nIt seems like there is a test that is corrupting a machine to get in a weird state and when this test runs in that particular machine after that it fails every time. So until that Machine is recycled to a new one if the test happens to run again on that machine it will fail.\r\n\r\nThis test has had 4 bad days since February, and all days that we have had a failure it shows the same pattern, it always fails only on the same machine.\r\n\r\ncc: @Anipik",
                                           "updatedAt":  "2020-05-11T17:37:14Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyNzcwMDgyMQ==",
                                           "createdAt":  "2020-05-13T02:07:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "Test failing again with the same pattern... always fails on the same machine and only in that machine:\r\n\r\n### Console Log Summary\r\n\r\n### Builds\r\n|Build|Pull Request | Test Failure Count|\r\n| --- | --- | --- |\r\n|[#639597](https://dev.azure.com/dnceng/public/_build/results?buildId=639597)|#35683|1|\r\n|[#640835](https://dev.azure.com/dnceng/public/_build/results?buildId=640835)|#35573|1|\r\n|[#640869](https://dev.azure.com/dnceng/public/_build/results?buildId=640869)|#35734|1|\r\n|[#640943](https://dev.azure.com/dnceng/public/_build/results?buildId=640943)|#36268|2|\r\n|[#641098](https://dev.azure.com/dnceng/public/_build/results?buildId=641098)|#36277|1|\r\n|[#641423](https://dev.azure.com/dnceng/public/_build/results?buildId=641423)|#36116|1|\r\n|[#641432](https://dev.azure.com/dnceng/public/_build/results?buildId=641432)|#35961|1|\r\n|[#641450](https://dev.azure.com/dnceng/public/_build/results?buildId=641450)|#36141|1|\r\n|[#641673](https://dev.azure.com/dnceng/public/_build/results?buildId=641673)|#36002|1|\r\n|[#641676](https://dev.azure.com/dnceng/public/_build/results?buildId=641676)|#36257|2|\r\n|[#642180](https://dev.azure.com/dnceng/public/_build/results?buildId=642180)|#36315|1|\r\n### Configurations\r\n- net5.0-Windows_NT-Debug-x64-CoreCLR_release-Windows.10.Amd64.Server19H1.ES.Open\r\n- net5.0-Windows_NT-Debug-x64-Mono_release-Windows.10.Amd64.Server19H1.ES.Open\r\n- net5.0-Windows_NT-Release-x86-CoreCLR_release-Windows.10.Amd64.Server19H1.ES.Open\r\n### Helix Logs\r\n|Build|Pull Request|Console|Core|Test Results|Run Client|\r\n| --- | --- | --- | --- | --- | --- |\r\n|[#639597](https://dev.azure.com/dnceng/public/_build/results?buildId=639597)|#35683|[console.log](https://helix.dot.net/api/2019-06-17/jobs/1a97f746-b566-484f-8e3f-22b407b63bd4/workitems/System.Diagnostics.EventLog.Tests/files/console.40744437.log)||[testResults.xml](https://helix.dot.net/api/2019-06-17/jobs/1a97f746-b566-484f-8e3f-22b407b63bd4/workitems/System.Diagnostics.EventLog.Tests/files/testResults.xml)|[run_client.py](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-35683-merge-1a97f746b566484f8e/System.Diagnostics.EventLog.Tests/82fad409-beca-40cf-92c4-bd0c55d42525.log?sv=2019-02-02\u0026se=2020-05-31T17%3A13%3A58Z\u0026sr=c\u0026sp=rl\u0026sig=DMp19ALYB%2Bb%2B7%2BGl1LZeHdzWKC3ZDqzt2ZOv14%2BnWoM%3D)|\r\n|[#640835](https://dev.azure.com/dnceng/public/_build/results?buildId=640835)|#35573|[console.log](https://helix.dot.net/api/2019-06-17/jobs/429e8eee-6e7b-485b-8c00-07872481274d/workitems/System.Diagnostics.EventLog.Tests/files/console.2deba2c8.log)||[testResults.xml](https://helix.dot.net/api/2019-06-17/jobs/429e8eee-6e7b-485b-8c00-07872481274d/workitems/System.Diagnostics.EventLog.Tests/files/testResults.xml)|[run_client.py](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-35573-merge-429e8eee6e7b485b8c/System.Diagnostics.EventLog.Tests/a2662411-a9e3-4c53-9e29-4acb88784767.log?sv=2019-02-02\u0026se=2020-06-01T05%3A46%3A37Z\u0026sr=c\u0026sp=rl\u0026sig=FsKehLKXl75%2BqyjWKf7hfUcKN%2FJO1yzrHY9NfKPj10M%3D)|\r\n|[#640869](https://dev.azure.com/dnceng/public/_build/results?buildId=640869)|#35734|[console.log](https://helix.dot.net/api/2019-06-17/jobs/a7c923ff-16df-4489-b58a-d53512c3b289/workitems/System.Diagnostics.EventLog.Tests/files/console.e75a760e.log)||[testResults.xml](https://helix.dot.net/api/2019-06-17/jobs/a7c923ff-16df-4489-b58a-d53512c3b289/workitems/System.Diagnostics.EventLog.Tests/files/testResults.xml)|[run_client.py](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-35734-merge-a7c923ff16df4489b5/System.Diagnostics.EventLog.Tests/095b7591-0a76-4fd2-9628-0fbdff8fc3a2.log?sv=2019-02-02\u0026se=2020-06-01T06%3A27%3A09Z\u0026sr=c\u0026sp=rl\u0026sig=nfjnOJQBFr851h9mS4%2B5Qe15aKU%2FAyiB0Xrrs2IgfpQ%3D)|\r\n|[#640943](https://dev.azure.com/dnceng/public/_build/results?buildId=640943)|#36268|[console.log](https://helix.dot.net/api/2019-06-17/jobs/6db0be16-02bb-4793-8260-4031b170154e/workitems/System.Diagnostics.EventLog.Tests/files/console.f4248957.log)||[testResults.xml](https://helix.dot.net/api/2019-06-17/jobs/6db0be16-02bb-4793-8260-4031b170154e/workitems/System.Diagnostics.EventLog.Tests/files/testResults.xml)|[run_client.py](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-36268-merge-6db0be1602bb479382/System.Diagnostics.EventLog.Tests/6f063d08-4825-4fc1-aeee-b9250f374699.log?sv=2019-02-02\u0026se=2020-06-01T08%3A10%3A51Z\u0026sr=c\u0026sp=rl\u0026sig=L0PYhtmwon91DuKvZoMLW9LJS8juiMAPh1GpKKlVgq8%3D)|\r\n|[#640943](https://dev.azure.com/dnceng/public/_build/results?buildId=640943)|#36268|[console.log](https://helix.dot.net/api/2019-06-17/jobs/3d3843c6-5083-4651-b6c2-ed30f1295078/workitems/System.Diagnostics.EventLog.Tests/files/console.656a0753.log)||[testResults.xml](https://helix.dot.net/api/2019-06-17/jobs/3d3843c6-5083-4651-b6c2-ed30f1295078/workitems/System.Diagnostics.EventLog.Tests/files/testResults.xml)|[run_client.py](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-36268-merge-3d3843c650834651b6/System.Diagnostics.EventLog.Tests/16819fc8-931d-4ad3-98e4-37ab8a25d8c5.log?sv=2019-02-02\u0026se=2020-06-01T08%3A11%3A39Z\u0026sr=c\u0026sp=rl\u0026sig=IGsaxgrPjxYVtFYdIy1zB6DiVoZTtK1ZTZ5%2FupkBZ8k%3D)|\r\n|[#641098](https://dev.azure.com/dnceng/public/_build/results?buildId=641098)|#36277|[console.log](https://helix.dot.net/api/2019-06-17/jobs/f25b3609-cbd0-4a46-a208-33cad7e00b33/workitems/System.Diagnostics.EventLog.Tests/files/console.4352ff61.log)||[testResults.xml](https://helix.dot.net/api/2019-06-17/jobs/f25b3609-cbd0-4a46-a208-33cad7e00b33/workitems/System.Diagnostics.EventLog.Tests/files/testResults.xml)|[run_client.py](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-36277-merge-f25b3609cbd04a46a2/System.Diagnostics.EventLog.Tests/8f8069ae-a6b5-4e68-92f5-5a7ca0015bfd.log?sv=2019-02-02\u0026se=2020-06-01T12%3A17%3A54Z\u0026sr=c\u0026sp=rl\u0026sig=cK1%2FiuhEuk8KDJi8I%2FSG63htpmQ%2BdX%2F3F0YQxUjc4H0%3D)|\r\n|[#641423](https://dev.azure.com/dnceng/public/_build/results?buildId=641423)|#36116|[console.log](https://helix.dot.net/api/2019-06-17/jobs/9f4e5bca-1617-41e6-950d-4ee8865846f4/workitems/System.Diagnostics.EventLog.Tests/files/console.34d31cb3.log)||[testResults.xml](https://helix.dot.net/api/2019-06-17/jobs/9f4e5bca-1617-41e6-950d-4ee8865846f4/workitems/System.Diagnostics.EventLog.Tests/files/testResults.xml)|[run_client.py](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-36116-merge-9f4e5bca161741e695/System.Diagnostics.EventLog.Tests/c0cac38d-5897-40f1-b8a8-983aad2427f7.log?sv=2019-02-02\u0026se=2020-06-01T16%3A51%3A30Z\u0026sr=c\u0026sp=rl\u0026sig=2HCMXdMWJwnNJ%2BBiAI1c4JJNk0TnZWTqOWRd5NaDKjM%3D)|\r\n|[#641432](https://dev.azure.com/dnceng/public/_build/results?buildId=641432)|#35961|[console.log](https://helix.dot.net/api/2019-06-17/jobs/4d04138e-6976-4e49-ae64-3bc8393c073b/workitems/System.Diagnostics.EventLog.Tests/files/console.ce7d963e.log)||[testResults.xml](https://helix.dot.net/api/2019-06-17/jobs/4d04138e-6976-4e49-ae64-3bc8393c073b/workitems/System.Diagnostics.EventLog.Tests/files/testResults.xml)|[run_client.py](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-35961-merge-4d04138e69764e49ae/System.Diagnostics.EventLog.Tests/baa4b928-b574-475d-b57a-fb16c06a35d7.log?sv=2019-02-02\u0026se=2020-06-01T17%3A05%3A14Z\u0026sr=c\u0026sp=rl\u0026sig=%2B4fzE377sn%2BzJ1ljUDJSY84FkkNKP3BMmHFGhIYGvdU%3D)|\r\n|[#641450](https://dev.azure.com/dnceng/public/_build/results?buildId=641450)|#36141|[console.log](https://helix.dot.net/api/2019-06-17/jobs/1e7411b6-94db-46be-97cb-5a796b504722/workitems/System.Diagnostics.EventLog.Tests/files/console.605e2f96.log)||[testResults.xml](https://helix.dot.net/api/2019-06-17/jobs/1e7411b6-94db-46be-97cb-5a796b504722/workitems/System.Diagnostics.EventLog.Tests/files/testResults.xml)|[run_client.py](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-36141-merge-1e7411b694db46be97/System.Diagnostics.EventLog.Tests/e93dab11-d475-474c-b831-d2af12ffafc0.log?sv=2019-02-02\u0026se=2020-06-01T17%3A07%3A42Z\u0026sr=c\u0026sp=rl\u0026sig=OQ4yGOHfXLyuGauYP5HXhreDLwZaD21BfCCxf6RWJAU%3D)|\r\n|[#641673](https://dev.azure.com/dnceng/public/_build/results?buildId=641673)|#36002|[console.log](https://helix.dot.net/api/2019-06-17/jobs/e8d955c7-091b-4beb-b5c2-b90da1c88770/workitems/System.Diagnostics.EventLog.Tests/files/console.c714381f.log)||[testResults.xml](https://helix.dot.net/api/2019-06-17/jobs/e8d955c7-091b-4beb-b5c2-b90da1c88770/workitems/System.Diagnostics.EventLog.Tests/files/testResults.xml)|[run_client.py](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-36002-merge-e8d955c7091b4bebb5/System.Diagnostics.EventLog.Tests/bef67c20-b346-45e4-b694-c8cd4a1ec796.log?sv=2019-02-02\u0026se=2020-06-01T19%3A37%3A23Z\u0026sr=c\u0026sp=rl\u0026sig=XCxbI%2FqPXT3ANSnU9DtoaM0VDdVJWdw8PxNQGNzTOqU%3D)|\r\n|[#641676](https://dev.azure.com/dnceng/public/_build/results?buildId=641676)|#36257|[console.log](https://helix.dot.net/api/2019-06-17/jobs/e6164911-a287-4ddf-b158-08e9dab02c77/workitems/System.Diagnostics.EventLog.Tests/files/console.de03f940.log)||[testResults.xml](https://helix.dot.net/api/2019-06-17/jobs/e6164911-a287-4ddf-b158-08e9dab02c77/workitems/System.Diagnostics.EventLog.Tests/files/testResults.xml)|[run_client.py](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-36257-merge-e6164911a2874ddfb1/System.Diagnostics.EventLog.Tests/d5919acf-8879-439b-8f12-62c6697fe7d7.log?sv=2019-02-02\u0026se=2020-06-01T19%3A47%3A11Z\u0026sr=c\u0026sp=rl\u0026sig=eTa84zu1M1QmSUDAbhWtlfJonnS%2Bvl0Og6vpe5L%2B8YY%3D)|\r\n|[#641676](https://dev.azure.com/dnceng/public/_build/results?buildId=641676)|#36257|[console.log](https://helix.dot.net/api/2019-06-17/jobs/d8fff2c4-f301-49db-8021-6f19249b6019/workitems/System.Diagnostics.EventLog.Tests/files/console.ee3535f5.log)||[testResults.xml](https://helix.dot.net/api/2019-06-17/jobs/d8fff2c4-f301-49db-8021-6f19249b6019/workitems/System.Diagnostics.EventLog.Tests/files/testResults.xml)|[run_client.py](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-36257-merge-d8fff2c4f30149db80/System.Diagnostics.EventLog.Tests/6c0ac76c-7ea0-44a9-9f1e-bc1712c1dda2.log?sv=2019-02-02\u0026se=2020-06-01T19%3A48%3A16Z\u0026sr=c\u0026sp=rl\u0026sig=MtJIyeAVpxtZ%2FApDSaCVaI6pYgjFAEZNUPsifTx0R5w%3D)|\r\n|[#642180](https://dev.azure.com/dnceng/public/_build/results?buildId=642180)|#36315|[console.log](https://helix.dot.net/api/2019-06-17/jobs/4dae6f51-00dc-4f80-89f8-e1fbfe654685/workitems/System.Diagnostics.EventLog.Tests/files/console.2afd4797.log)||[testResults.xml](https://helix.dot.net/api/2019-06-17/jobs/4dae6f51-00dc-4f80-89f8-e1fbfe654685/workitems/System.Diagnostics.EventLog.Tests/files/testResults.xml)|[run_client.py](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-36315-merge-4dae6f5100dc4f8089/System.Diagnostics.EventLog.Tests/4e29235b-a339-4df6-8e04-6d6d62c68b9f.log?sv=2019-02-02\u0026se=2020-06-02T01%3A00%3A25Z\u0026sr=c\u0026sp=rl\u0026sig=cQEEfiHcI3FiGH7OvFc0A6ZkCykESMV6bxZFkU%2BUxGI%3D)|",
                                           "updatedAt":  "2020-05-13T02:07:05Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyNzcwMTExNg==",
                                           "createdAt":  "2020-05-13T02:08:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "I re-opened: https://github.com/dotnet/runtime/pull/36138",
                                           "updatedAt":  "2020-05-13T02:08:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzNjUxMzA4Nw==",
                                           "createdAt":  "2020-05-31T18:57:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "@Anipik @safern I saw this failure in a couple one-off runs I\u0027m doing:\r\n\r\nhttps://helix.dot.net/api/2019-06-17/jobs/9b2efc67-36d9-4a8e-9e98-0b969f156ce4/workitems/System.Diagnostics.EventLog.Tests/console\r\nhttps://helix.dot.net/api/2019-06-17/jobs/1e37a2d2-e11d-4f8d-9d31-b4c4740c0695/workitems/System.Diagnostics.EventLog.Tests/console\r\n\r\nBoth look to be on DDARM64S-026\r\n",
                                           "updatedAt":  "2020-05-31T18:57:08Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzNjk5NTkzMA==",
                                           "createdAt":  "2020-06-01T17:17:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "So @Anipik it seems like your fix didn’t mitigate the issue and the machine is somehow still getting busted and subsequent runs fail in that machine?",
                                           "updatedAt":  "2020-06-01T17:17:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzNzI2NTY1OA==",
                                           "createdAt":  "2020-06-02T04:33:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Anipik",
                                           "body":  "@MattGal would it be possible to get hold of this machine ?",
                                           "updatedAt":  "2020-06-02T04:33:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzNzYwNTA2Nw==",
                                           "createdAt":  "2020-06-02T15:09:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MattGal",
                                           "body":  "\u003e @MattGal would it be possible to get hold of this machine ?\r\n\r\nIt\u0027s possible but something we generally avoid.  I\u0027d prefer we have someone from DDFUN or the First Responders team check it out to ensure the Helix client isn\u0027t affected as part of investigation. You\u0027ll also need access to corpnet as the only way onto these machines is over a local KVM device.\r\n\r\nIf you think you know what\u0027s wrong with the machine, we should probably just have DDFUN fix that.  Otherwise ping me on Teams and we can coordinate something. ",
                                           "updatedAt":  "2020-06-02T15:09:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzNzgwOTg5NA==",
                                           "createdAt":  "2020-06-02T21:13:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "@Anipik happened again:\r\n\r\nhttps://helix.dot.net/api/2019-06-17/jobs/5c44ceea-3ad0-4bfc-b0ff-d9a95d342440/workitems/System.Diagnostics.EventLog.Tests/console\r\n\r\nWill go ahead and revert the change that re-enabled the tests. ",
                                           "updatedAt":  "2020-06-02T21:13:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0Mjk5NDM4NA==",
                                           "createdAt":  "2020-12-11T06:10:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "I don\u0027t suppose anyone happened to capture the logged failure?  All the links in this issue are now dead.",
                                           "updatedAt":  "2020-12-11T06:10:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0MzI5ODE2OA==",
                                           "createdAt":  "2020-12-11T16:37:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MattGal",
                                           "body":  "\u003e I don\u0027t suppose anyone happened to capture the logged failure? All the links in this issue are now dead.\r\n\r\nCan confirm all the Helix-side stuff is long deleted. ",
                                           "updatedAt":  "2020-12-11T16:37:54Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0MzMxMjg3NQ==",
                                           "createdAt":  "2020-12-11T17:04:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBZuDiA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MattGal",
                                                                               "createdAt":  "2020-12-11T17:06:26Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jaredpar",
                                           "body":  "No failures in last 21 days. Should probably close. Can re-open if it happens again. ",
                                           "updatedAt":  "2020-12-11T17:04:22Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0MzMzNDUwNA==",
                                           "createdAt":  "2020-12-11T17:47:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "No failures because the test is active-issued. :-/",
                                           "updatedAt":  "2020-12-11T17:47:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0MzMzNTU3MQ==",
                                           "createdAt":  "2020-12-11T17:50:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "https://github.com/dotnet/runtime/blob/6072e4d3a7a2a1493f514cdf4be75a3d56580e84/src/libraries/System.Diagnostics.EventLog/tests/EventLogTests/EventLogSourceCreationTests.cs\r\n\r\nI suspect this is file-in use on the log file, failure to delete, then future tests fail to recreate.  These tests are writing to a custom log name which will result in a new file.  I might see if I can refactor the tests a bit to avoid this (like using a unique log name).",
                                           "updatedAt":  "2020-12-11T17:50:14Z"
                                       }
                                   ],
                         "totalCount":  28
                     },
        "title":  "System.Diagnostics.Tests.EventLogSourceCreationTests failing on PRs",
        "labels":  [
                       "bug",
                       "disabled-test",
                       "area-System.Diagnostics.EventLog"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/49320",
        "createdAt":  "2021-03-08T19:37:43Z",
        "number":  49320,
        "author":  "dhhoang",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-20T16:44:16Z",
        "body":  "\u003c!--This is just a template - feel free to delete any and all of it and replace as appropriate.--\u003e\r\n\r\n### Description\r\nUsing `EventLog.Exists` on a log such as \"ForwardedEvents\" or \"Setup\" return `false`, event though those logs are available on the machine.\r\n\r\n### Configuration\r\n* Which version of .NET is the code running on? .NET 5\r\n* What OS and version, and what distro if applicable? Windows 10 2020H2\r\n* What is the architecture (x64, x86, ARM, ARM64)? x64\r\n* Do you know whether it is specific to that configuration? No, it is not.\r\n* If you\u0027re using Blazor, which web browser(s) do you see this issue in? N/A\r\n\r\n\r\n### Regression?\r\nUnsure\r\n\r\n### Other information\r\nIt looks like `EventLog.Exists` looks for information in the registry, which cannot detect the existence of non-classical logs.\r\n\r\n`EventLog.Exists` return `false` on all logs with `IsClassicLog=false` attribute, according to https://devblogs.microsoft.com/scripting/use-powershell-to-review-the-setup-event-log/ .\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOOKFBHQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5MzAxOTQ5OA==",
                                           "createdAt":  "2021-03-08T19:37:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-03-08T19:37:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41MhET",
                                           "createdAt":  "2021-08-04T08:34:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dhhoang",
                                           "body":  "Is there any updates on this issue?   \r\nOne way to implement this correctly would be to use the implementation of `Get-WinEvent`: https://github.com/PowerShell/PowerShell/blob/master/src/Microsoft.PowerShell.Commands.Diagnostics/GetEventCommand.cs  \r\nI can create a PR for this if this is confirmed to be the expected behavior",
                                           "updatedAt":  "2021-08-04T08:34:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41rOoA",
                                           "createdAt":  "2021-08-17T18:14:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Anipik",
                                           "body":  "Are you running with appropriate permissions ?\r\n\r\n\u003e https://github.com/PowerShell/PowerShell/blob/master/src/Microsoft.PowerShell.Commands.Diagnostics/GetEventCommand.cs\r\n\r\nNo, thats not the correct way. if there is a bug that would likely be related to the underlying windows api.",
                                           "updatedAt":  "2021-08-17T18:14:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44Q6lL",
                                           "createdAt":  "2021-10-15T03:33:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dhhoang",
                                           "body":  "\u003e Are you running with appropriate permissions ?\r\n\u003e \r\n\u003e \u003e https://github.com/PowerShell/PowerShell/blob/master/src/Microsoft.PowerShell.Commands.Diagnostics/GetEventCommand.cs\r\n\u003e \r\n\u003e No, thats not the correct way. if there is a bug that would likely be related to the underlying windows api.\r\n\r\nYes I tried to run as Admin. `EventLog.Exists` returns false for logs such as `PowershellCore/Operational` or `OpenSSH/Operational`.\r\n\r\nI don\u0027t believe that this is a bug but more like an issue about where the API looks for event logs. From the code (https://github.com/dotnet/runtime/blob/main/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/EventLog.cs) \r\nit seems like the API simply consider the set of keys in \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog\", which doesn\u0027t contain said logs.",
                                           "updatedAt":  "2021-10-15T03:33:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44RNcx",
                                           "createdAt":  "2021-10-15T06:27:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Anipik",
                                           "body":  "\u003e Yes I tried to run as Admin. EventLog.Exists returns false for logs such as PowershellCore/Operational or OpenSSH/Operational.\r\n\r\nare these logs present in the registry ? if yes we can expose a new api which can take path to the key as in input as well",
                                           "updatedAt":  "2021-10-15T06:27:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44SYs2",
                                           "createdAt":  "2021-10-15T14:23:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dhhoang",
                                           "body":  "I did a registry search and did not find these keys in the registry.\r\nThe physical location of these logs are at `C:\\WINDOWS\\System32\\winevt\\Logs\\`",
                                           "updatedAt":  "2021-10-15T14:23:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44jrUv",
                                           "createdAt":  "2021-10-21T18:07:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Anipik",
                                           "body":  "\u003e The physical location of these logs are at C:\\WINDOWS\\System32\\winevt\\Logs\\\r\n\r\nThen these wont be found by eventlog apis",
                                           "updatedAt":  "2021-10-21T18:07:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44oR59",
                                           "createdAt":  "2021-10-23T05:35:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Robo210",
                                           "body":  ".Net has two sets of Event Log APIs - one for the NT 3-through-XP era and since-deprecated OpenEventLog/ReportEvent APIs (System.Diagnostics.EventLog), and one for the newer Evt* APIs (System.Diagnostics.Eventing.Reader).\r\n\r\nThe legacy APIs can only interact with classic channels, and the only method of enumerating the classic channels (without using the newer APIs) is to enumerate HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog (note: not every subkey under there is a channel, and some keys are ACLed much more strongly than others). The EventLog class, since it is using these legacy APIs, is working as intended by only scanning these registry keys. I do not recommend trying to extend this class with new APIs, because it is built on a bad foundation and already has a 15 year old replacement (frankly, if the class was just straight up removed the world would be a better place).\r\n\r\nThe modern APIs can interact with any channel type, and the method of enumerating the channels is through EvtOpenChannelEnum. This is what anybody writing code after 2005 should be using.\r\n\r\nWhen it comes to the Powershell cmdlets, get-eventlog is built around the legacy APIs, and get-winevent is built around the modern APIs.\r\n\r\nAccessing the files in C:\\Windows\\system32\\winevt\\logs when the Event Log service is running is never safe.",
                                           "updatedAt":  "2021-10-23T05:35:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44oUEd",
                                           "createdAt":  "2021-10-23T05:53:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dhhoang",
                                           "body":  "\u003e .Net has two sets of Event Log APIs - one for the NT 3-through-XP era and since-deprecated OpenEventLog/ReportEvent APIs (System.Diagnostics.EventLog), and one for the newer Evt* APIs (System.Diagnostics.Eventing.Reader).\r\n\u003e \r\n\u003e The legacy APIs can only interact with classic channels, and the only method of enumerating the classic channels (without using the newer APIs) is to enumerate HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog (note: not every subkey under there is a channel, and some keys are ACLed much more strongly than others). The EventLog class, since it is using these legacy APIs, is working as intended by only scanning these registry keys. I do not recommend trying to extend this class with new APIs, because it is built on a bad foundation and already has a 15 year old replacement (frankly, if the class was just straight up removed the world would be a better place).\r\n\u003e \r\n\u003e The modern APIs can interact with any channel type, and the method of enumerating the channels is through EvtOpenChannelEnum. This is what anybody writing code after 2005 should be using.\r\n\u003e \r\n\u003e When it comes to the Powershell cmdlets, get-eventlog is built around the legacy APIs, and get-winevent is built around the modern APIs.\r\n\u003e \r\n\u003e Accessing the files in C:\\Windows\\system32\\winevt\\logs when the Event Log service is running is never safe.\r\n\r\n@Robo210 Thanks for providing the context.  \r\nI think that\u0027s okay now that we are aware of it, we can use the newer API to interact with event logs and we can close this issue. I personally think it\u0027d be better if the API has documentation to indicate this behavior. The only documentation I could find about it right now is a 9 year-old blog.",
                                           "updatedAt":  "2021-10-23T05:53:15Z"
                                       }
                                   ],
                         "totalCount":  9
                     },
        "title":  "EventLog.Exists returns false for some event logs",
        "labels":  [
                       "area-System.Diagnostics.EventLog"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/50853",
        "createdAt":  "2021-04-07T16:24:59Z",
        "number":  50853,
        "author":  "vsfeedback",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-20T16:44:53Z",
        "body":  "_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/EventLogEntry-Message-Property-getter-ha/1222634)._\n\n---\n\u003cp\u003eReading the Event Message from a certain EventLogEntry hangs infinite. When using a 32-bit Application it throws a OutOfMemoryException after minutes:\u003c/p\u003e\u003cp\u003eSystem.OutOfMemoryException: Eine Ausnahme vom Typ \u0026quot;System.OutOfMemoryException\u0026quot; wurde ausgelöst.\u003cbr\u003e   bei System.Number.FormatInt32(Int32 value, String format, NumberFormatInfo info)\u003cbr\u003e   bei System.Int32.ToString()\u003cbr\u003e   bei System.String.Concat(Object arg0, Object arg1)\u003cbr\u003e   bei System.Diagnostics.EventLog.TryFormatMessage(SafeLibraryHandle hModule, UInt32 messageNum, String[] insertionStrings)\u003cbr\u003e   bei System.Diagnostics.EventLogInternal.FormatMessageWrapper(String dllNameList, UInt32 messageNum, String[] insertionStrings)\u003cbr\u003e   bei System.Diagnostics.EventLogEntry.get_Message()\u003cbr\u003e   bei WITecCreateSupportZipApp.WindowsEventHelper.writeWindowsEventsToStream(String aEventLogName, StreamWriter sw, ProgressReportSteps aReportSteps)\u003c/p\u003e\n\u003cp\u003eUnfortunately this happens only on a certain customer pc, so I can’t reproduce it with my own event log.\u003cbr\u003e\nI created a dump file and the thread hangs when accessing the EventLogEntry.Message property (in System.Diagnostics.EventLog.TryFormatMessage()).\u003c/p\u003e\n\n---\n### Original Comments\n\n#### Henning Dampel on 10/15/2020, 06:44 AM: \n\n(private comment, text removed)\n#### Feedback Bot on 10/15/2020, 07:44 PM: \n\n\u003cp\u003eWe have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.\u003c/p\u003e\n\n#### Tarek Mahmoud Sayed [MSFT] on 10/21/2020, 00:37 PM: \n\n\u003cp\u003eThanks for reporting the issue. Unfortunately it is hard to know what is going on using the provided information. Out of memory exception means there is something consuming a lot of memory and not necessary what you have in the stack is the root cause.\u003cbr\u003e\nAlso, it is not clear what you mean by \u003ccode\u003eI created a dump file and the thread hangs when accessing the EventLogEntry.Message property (in System.Diagnostics.EventLog.TryFormatMessage()).\u003c/code\u003e. How did you know from the dump is the thread is hanging? or do you mean something else?\u003c/p\u003e\n\u003cp\u003eI would suggest to you is either create a full dump when the problem happen and share it or you can run any memory profiler on the process when the problem occur which can help telling which part allocating a lot of memory.\u003cbr\u003e\nLast, this may be limitation on x86 process when opening a very big events log file. we cannot tell for sure without more information here. Thanks.\u003c/p\u003e\n\n#### Henning Dampel on 11/25/2020, 06:42 AM: \n\n(private comment, text removed)\n#### Henning Dampel on 10/22/2020, 01:09 AM: \n\n(private comment, text removed)\n#### Tarek Mahmoud Sayed [MSFT] on 11/2/2020, 02:56 PM: \n\n\u003cp\u003e\u003ca target=\u0027_blank\u0027 href=\"https://aka.ms/dc/u?aid=44267\"\u003eHenning Dampel\u003c/a\u003e I have looked at the dump file you shared. I am seeing the only thread has CLR in the stack is\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"hljs-number\"\u003e11\u003c/span\u003e  \u003cspan class=\"hljs-symbol\"\u003eId:\u003c/span\u003e \u003cspan class=\"hljs-number\"\u003e4\u003c/span\u003ea8.\u003cspan class=\"hljs-number\"\u003e5\u003c/span\u003ec8 \u003cspan class=\"hljs-symbol\"\u003eSuspend:\u003c/span\u003e \u003cspan class=\"hljs-number\"\u003e0\u003c/span\u003e \u003cspan class=\"hljs-symbol\"\u003eTeb:\u003c/span\u003e \u003cspan class=\"hljs-number\"\u003e00000000\u003c/span\u003e\u003cspan class=\"hljs-string\"\u003e`00d56000 Unfrozen\n # Child-SP          RetAddr           Call Site\n00 00000000`\u003c/span\u003e\u003cspan class=\"hljs-number\"\u003e0621\u003c/span\u003eee14 \u003cspan class=\"hljs-number\"\u003e4\u003c/span\u003ed93411\u003cspan class=\"hljs-number\"\u003e0\u003c/span\u003e\u003cspan class=\"hljs-string\"\u003e`1910fd00 clr!GetMetaDataPublicInterfaceFromInternal+0x100b4\n01 00000000`\u003c/span\u003e\u003cspan class=\"hljs-number\"\u003e0621\u003c/span\u003eee1c \u003cspan class=\"hljs-number\"\u003e00000020\u003c/span\u003e\u003cspan class=\"hljs-string\"\u003e`0621eea4 0x4d934110`\u003c/span\u003e\u003cspan class=\"hljs-number\"\u003e1910\u003c/span\u003efd0\u003cspan class=\"hljs-number\"\u003e0\u003c/span\u003e\n\u003cspan class=\"hljs-number\"\u003e02\u003c/span\u003e \u003cspan class=\"hljs-number\"\u003e00000000\u003c/span\u003e\u003cspan class=\"hljs-string\"\u003e`0621ee24 0621eea0`\u003c/span\u003e\u003cspan class=\"hljs-number\"\u003e0621\u003c/span\u003eeeb\u003cspan class=\"hljs-number\"\u003e0\u003c/span\u003e \u003cspan class=\"hljs-number\"\u003e0x00000020\u003c/span\u003e\u003cspan class=\"hljs-string\"\u003e`0621eea4\n03 00000000`\u003c/span\u003e\u003cspan class=\"hljs-number\"\u003e0621\u003c/span\u003eee2c \u003cspan class=\"hljs-number\"\u003e0621\u003c/span\u003eeec\u003cspan class=\"hljs-number\"\u003e0\u003c/span\u003e\u003cspan class=\"hljs-string\"\u003e`0621eeac 0x0621eea0`\u003c/span\u003e\u003cspan class=\"hljs-number\"\u003e0621\u003c/span\u003eeeb\u003cspan class=\"hljs-number\"\u003e0\u003c/span\u003e\n\u003cspan class=\"hljs-number\"\u003e04\u003c/span\u003e \u003cspan class=\"hljs-number\"\u003e00000000\u003c/span\u003e\u003cspan class=\"hljs-string\"\u003e`0621ee34 1913f9fc`\u003c/span\u003e\u003cspan class=\"hljs-number\"\u003e6\u003c/span\u003ec5def85 \u003cspan class=\"hljs-number\"\u003e0x0621eec0\u003c/span\u003e\u003cspan class=\"hljs-string\"\u003e`0621eeac\n05 00000000`\u003c/span\u003e\u003cspan class=\"hljs-number\"\u003e0621\u003c/span\u003eee3c \u003cspan class=\"hljs-number\"\u003e6\u003c/span\u003ec5d925\u003cspan class=\"hljs-number\"\u003e0\u003c/span\u003e\u003cspan class=\"hljs-string\"\u003e`00000001 0x1913f9fc`\u003c/span\u003e\u003cspan class=\"hljs-number\"\u003e6\u003c/span\u003ec5def85\n\u003cspan class=\"hljs-number\"\u003e06\u003c/span\u003e \u003cspan class=\"hljs-number\"\u003e00000000\u003c/span\u003e\u003cspan class=\"hljs-string\"\u003e`0621ee44 00000000`\u003c/span\u003e\u003cspan class=\"hljs-number\"\u003e00000000\u003c/span\u003e \u003cspan class=\"hljs-number\"\u003e0x6c5d9250\u003c/span\u003e\u003cspan class=\"hljs-string\"\u003e`00000001\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003ewhich means .NET is not in any other stacks and I am not seeing any EventLog calls which is telling it is hanging there.\u003c/p\u003e\n\u003cp\u003eDid you share the right dump? I am seeing the executable used is\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"hljs-attr\"\u003e0\u003c/span\u003e:\u003cspan class=\"hljs-string\"\u003e000\u0026gt; |\u003c/span\u003e\n\u003cspan class=\"hljs-meta\"\u003e.\u003c/span\u003e  \u003cspan class=\"hljs-string\"\u003e0\tid: 4a8\texamine\tname: C:\\Users\\Witec\\Desktop\\CreateSupportZIP5.3_TEST\\WITec.CreateSupportZipApp.exe\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWe need to have a better dump file showing the problem when it is hanging in EventLog to be able to assist. Or at least the dump should show the .NET is used there.\u003c/p\u003e\n\n#### Feedback Bot on 11/10/2020, 07:27 PM: \n\nWe will close this report in 14 days because we don’t have enough information to investigate further. To keep the problem open, please provide the requested details.\n\n#### Henning Dampel on 11/25/2020, 06:47 AM: \n\n(private comment, text removed)\n#### Henning Dampel on 11/25/2020, 06:55 AM: \n\n(private comment, text removed)\n#### Henning Dampel on 2/8/2021, 08:51 AM: \n\n(private comment, text removed)\n#### Tarek Mahmoud Sayed [MSFT] on 2/8/2021, 09:36 AM: \n\n\u003cblockquote\u003e\n\u003cp\u003eDid you look at all threads??\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThe dump file that you shared on Nov 25, 2020 was not showing any thread in the CLR stack as I indicated in previous comments.\u003cbr\u003e\nNow I cannot access the dump file again as the ftp server looks unavailable any more. If you have a dump showing a thread with the stack you mentioned, please share it again and we’ll take another look.\u003c/p\u003e\n\n#### Henning Dampel on 2/9/2021, 01:19 AM: \n\n(private comment, text removed)\n#### Tarek Mahmoud Sayed [MSFT] on 2/9/2021, 04:05 PM: \n\n\u003cp\u003e\u003ca target=\u0027_blank\u0027 href=\"https://developercommunity2.visualstudio.com/user/8ffa3d53-67e0-4cab-a4f2-ead7ca3945fc/profile\"\u003eHenning Dampel\u003c/a\u003e thanks for resending the dump file link.  I am able to get it and seeing what you are seeing. Looking at the thread 1480 which you are saying it is hanging and I am seeing this thread is not really hanging but it is busy formatting the log entry. Basically, your code is calling EventLogEntry.Message to get the log entry message. The message is coming with %100790275 which is a huge number. and then will execute the code\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e            \u003cspan class=\"hljs-keyword\"\u003eif\u003c/span\u003e (largestNumber \u0026gt; insertionStrings.Length) {\n                \u003cspan class=\"hljs-built_in\"\u003estring\u003c/span\u003e[] newStrings = \u003cspan class=\"hljs-keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"hljs-built_in\"\u003estring\u003c/span\u003e[largestNumber];\n                Array.Copy(insertionStrings, newStrings, insertionStrings.Length);\n                \u003cspan class=\"hljs-keyword\"\u003efor\u003c/span\u003e (\u003cspan class=\"hljs-keyword\"\u003eint\u003c/span\u003e i = insertionStrings.Length; i \u0026lt; newStrings.Length; i++) {\n                    newStrings[i] = \u003cspan class=\"hljs-string\"\u003e\"%\"\u003c/span\u003e + (i + \u003cspan class=\"hljs-number\"\u003e1\u003c/span\u003e);\n                }\n \n                insertionStrings = newStrings;\n            }\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003elargestNumber is what we parsed from the message and will be equal to \u003ccode\u003e100,790,275\u003c/code\u003e. First it allocate the newStrings array which will be a huge array and then will try to fill that string. the value of \u003ccode\u003ei\u003c/code\u003e in the dump you have shared is \u003ccode\u003ei =16,482,572\u003c/code\u003e\twhich means the loop is busy at counter \u003ccode\u003e16,482,572\u003c/code\u003e and will expected to exit when the counter is \u003ccode\u003e100,790,275\u003c/code\u003e and with every iteration is formatting a new string \u003ccode\u003e\u0026quot;%\u0026quot; + (i + 1)\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eThe question now is why the logging sending entry with that huge number \u003ccode\u003e100,790,275\u003c/code\u003e. who is producing these logs you are listening to?\u003c/p\u003e\n\u003cp\u003eeventually the loop will exit (if we don’t run out of memory of course).\u003c/p\u003e\n\n#### Henning Dampel on 2/10/2021, 01:02 AM: \n\n(private comment, text removed)\n#### Tarek Mahmoud Sayed [MSFT] on 2/10/2021, 09:20 AM: \n\n\u003cp\u003e\u003ca target=\u0027_blank\u0027 href=\"https://developercommunity2.visualstudio.com/user/8ffa3d53-67e0-4cab-a4f2-ead7ca3945fc/profile\"\u003eHenning Dampel\u003c/a\u003e thanks again. From what I saw I am not seeing any problem in the .NET side and .NET is doing what is supposes to do. Anyway, if you get some more info in the future and feel it is .NET problem, feel free to ping us back and we’ll be happy to look at that.\u003c/p\u003e\n\n\n---\n### Original Solutions\n\n#### Feedback Bot solved on 2/25/2021, 00:51 AM, 0 votes: \n\nWe are unable to investigate this issue further without the additional information requested. If you are able to provide more information, you can request the issue being reactivate below. See our [guidelines](https://aka.ms/vsfeedbackguidelines) for further information about our process.\n\n#### Roland, Mario on 3/31/2021, 00:51 AM: \n\n(private comment, text removed)\n#### Tarek Mahmoud Sayed [MSFT] on 3/31/2021, 07:32 PM: \n\n\u003cp\u003ePlease attach a debugger dump when the problem happens so we can look what is going on. we’ll not be able to tell without a repro or debugger dump. Note that could be a different issue than what is originally reported. Thanks.\u003c/p\u003e\n\n#### Roland, Mario on 4/6/2021, 00:27 AM: \n\n(private comment, text removed)\n#### Tarek Mahmoud Sayed [MSFT] on 4/6/2021, 04:11 PM: \n\n\u003cp\u003e\u003ca target=\u0027_blank\u0027 href=\"https://developercommunity2.visualstudio.com/user/464f5a8a-2b33-69bf-b35d-2783c2fbb1b5/profile\"\u003eRoland, Mario\u003c/a\u003e Thanks a lot for sharing the dump and the code. I ran the code locally but couldn’t repro the hang nor the OOM. But this could be because of the difference in the machine configuration and the amount of the logs you are reading from this machine.\u003c/p\u003e\n\u003cp\u003eLooking at your dump, I am seeing it is not hanging but busy formatting some data:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e00\u003cspan class=\"hljs-selector-tag\"\u003eafe9c0\u003c/span\u003e 77992\u003cspan class=\"hljs-selector-tag\"\u003ef5c\u003c/span\u003e \u003cspan class=\"hljs-selector-attr\"\u003e[HelperMethodFrame_PROTECTOBJ: 00afe9c0]\u003c/span\u003e \u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.Number\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.FormatInt32\u003c/span\u003e(\u003cspan class=\"hljs-selector-tag\"\u003eInt32\u003c/span\u003e, \u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.String\u003c/span\u003e, \u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.Globalization\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.NumberFormatInfo\u003c/span\u003e)\n00\u003cspan class=\"hljs-selector-tag\"\u003eafeb4c\u003c/span\u003e 718\u003cspan class=\"hljs-selector-tag\"\u003ece1e8\u003c/span\u003e \u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.Int32\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.ToString\u003c/span\u003e() \u003cspan class=\"hljs-selector-attr\"\u003e[f:\\dd\\ndp\\clr\\src\\BCL\\system\\int32.cs @ 94]\u003c/span\u003e\n00\u003cspan class=\"hljs-selector-tag\"\u003eafeb58\u003c/span\u003e 718\u003cspan class=\"hljs-selector-tag\"\u003ece1b9\u003c/span\u003e \u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.String\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.Concat\u003c/span\u003e(\u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.Object\u003c/span\u003e, \u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.Object\u003c/span\u003e) \u003cspan class=\"hljs-selector-attr\"\u003e[f:\\dd\\ndp\\clr\\src\\BCL\\system\\string.cs @ 3068]\u003c/span\u003e\n00\u003cspan class=\"hljs-selector-tag\"\u003eafeb68\u003c/span\u003e 70\u003cspan class=\"hljs-selector-tag\"\u003eff744c\u003c/span\u003e \u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.Diagnostics\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.EventLog\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.TryFormatMessage\u003c/span\u003e(\u003cspan class=\"hljs-selector-tag\"\u003eMicrosoft\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.Win32\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.SafeHandles\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.SafeLibraryHandle\u003c/span\u003e, \u003cspan class=\"hljs-selector-tag\"\u003eUInt32\u003c/span\u003e, \u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.String\u003c/span\u003e\u003cspan class=\"hljs-selector-attr\"\u003e[]\u003c/span\u003e) \u003cspan class=\"hljs-selector-attr\"\u003e[f:\\dd\\NDP\\fx\\src\\services\\monitoring\\system\\diagnosticts\\EventLog.cs @ 1270]\u003c/span\u003e\n00\u003cspan class=\"hljs-selector-tag\"\u003eafeba0\u003c/span\u003e 70\u003cspan class=\"hljs-selector-tag\"\u003eff9321\u003c/span\u003e \u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.Diagnostics\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.EventLogInternal\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.FormatMessageWrapper\u003c/span\u003e(\u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.String\u003c/span\u003e, \u003cspan class=\"hljs-selector-tag\"\u003eUInt32\u003c/span\u003e, \u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.String\u003c/span\u003e\u003cspan class=\"hljs-selector-attr\"\u003e[]\u003c/span\u003e) \u003cspan class=\"hljs-selector-attr\"\u003e[f:\\dd\\NDP\\fx\\src\\services\\monitoring\\system\\diagnosticts\\EventLogInternal.cs @ 858]\u003c/span\u003e\n00\u003cspan class=\"hljs-selector-tag\"\u003eafebe0\u003c/span\u003e 70\u003cspan class=\"hljs-selector-tag\"\u003effbebc\u003c/span\u003e \u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.Diagnostics\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.EventLogEntry\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.get_Message\u003c/span\u003e() \u003cspan class=\"hljs-selector-attr\"\u003e[f:\\dd\\NDP\\fx\\src\\services\\monitoring\\system\\diagnosticts\\EventLogEntry.cs @ 225]\u003c/span\u003e\n00\u003cspan class=\"hljs-selector-tag\"\u003eafec00\u003c/span\u003e 00\u003cspan class=\"hljs-selector-tag\"\u003ebe0c09\u003c/span\u003e \u003cspan class=\"hljs-selector-tag\"\u003eWindowsEventRead\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.Program\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.CreateWindowsEventsLog\u003c/span\u003e()\n00\u003cspan class=\"hljs-selector-tag\"\u003eafed3c\u003c/span\u003e 00\u003cspan class=\"hljs-selector-tag\"\u003ebe0870\u003c/span\u003e \u003cspan class=\"hljs-selector-tag\"\u003eWindowsEventRead\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.Program\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.Main\u003c/span\u003e(\u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.String\u003c/span\u003e\u003cspan class=\"hljs-selector-attr\"\u003e[]\u003c/span\u003e)\n00\u003cspan class=\"hljs-selector-tag\"\u003eafeeec\u003c/span\u003e 7327\u003cspan class=\"hljs-selector-tag\"\u003ef036\u003c/span\u003e \u003cspan class=\"hljs-selector-attr\"\u003e[GCFrame: 00afeeec]\u003c/span\u003e   \n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eI looked at the heap status and I am seeing the biggest allocations is coming from the type\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e71512\u003cspan class=\"hljs-selector-tag\"\u003ed74\u003c/span\u003e       44    403162576 \u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.String\u003c/span\u003e\u003cspan class=\"hljs-selector-attr\"\u003e[]\u003c/span\u003e   \n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003elooking at the root of the allocation of this string is coming from:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"hljs-attr\"\u003e0\u003c/span\u003e:\u003cspan class=\"hljs-string\"\u003e000\u0026gt; !GCRoot 06361010\u003c/span\u003e\n\u003cspan class=\"hljs-attr\"\u003eThread\u003c/span\u003e \u003cspan class=\"hljs-string\"\u003e414c:\u003c/span\u003e\n    \u003cspan class=\"hljs-attr\"\u003e00afeb68\u003c/span\u003e \u003cspan class=\"hljs-string\"\u003e70ff744c System.Diagnostics.EventLog.TryFormatMessage(Microsoft.Win32.SafeHandles.SafeLibraryHandle, UInt32, System.String[]) [f:\\dd\\NDP\\fx\\src\\services\\monitoring\\system\\diagnosticts\\EventLog.cs @ 1270]\u003c/span\u003e\n        \u003cspan class=\"hljs-attr\"\u003eedi\u003c/span\u003e: \u003cspan class=\"hljs-string\"\u003e\u003c/span\u003e\n            \u003cspan class=\"hljs-meta\"\u003e-\u0026gt;\u003c/span\u003e  \u003cspan class=\"hljs-string\"\u003e06361010 System.String[]\u003c/span\u003e\n\n\u003cspan class=\"hljs-attr\"\u003eFound\u003c/span\u003e \u003cspan class=\"hljs-string\"\u003e1 unique roots (run \u0027!GCRoot -all\u0027 to see all roots).   \u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThese all allocated from the EventLogEntry.Message calls. The huge allocation is done because of the size of the logs existed in the machine (especially from Application logs).\u003c/p\u003e\n\u003cp\u003eLooks your machine has limited memory and in same time has a lot of logs to process. That is why processing the logs putting a lot of pressure on the memory. In normal cases, this allocated memory will get garbage collected and cleaned up by GC. But in your case because you have limited memory, you run to OOM.\u003c/p\u003e\n\u003cp\u003eThe possible workaround is trying to avoid reading the whole logs at one shot. I am seeing from the code you are reading the logs of last 20 days. You may try to wrap the whole code inside a method which read the logs for only one day. and then you cann call this method like 20 times for each day of last 20 days. After each call, you call GC.Collect to ensure collecting un-needed objects to reduce the pressure on the GC and the heap.\u003c/p\u003e\n\u003cp\u003eCould you please share your machine configuration too? how much memory it has?\u003c/p\u003e\n\u003cp\u003eThanks for your report.\u003c/p\u003e\n\n#### Roland, Mario on 4/7/2021, 05:40 AM: \n\n\u003cp\u003eI have reengeniered the problem with code from Microsoft.\u003cbr\u003e\nIt seems that the problem is in the event message itself. Perhaps only in the localized one. Because in the method System.Diagnostics.EventLog.TryFormatMessage the code:\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e// If you pass in an empty array UnsafeTryFormatMessage will just pull out the message.\u003cbr\u003e\nstring formatString = UnsafeTryFormatMessage(hModule, messageNum, new string[0]);\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003ereturns for the libary “C:\\Windows\\System32\\gpprefcl.dll” the german message text:\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e“Die clientseitige Erweiterung konnte die %2-Richtlinieneinstellungen für %3 nicht %1. Fehlercode: %4%%100790275”\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThis text leads to that the local variable \u003cem\u003elargestNumber\u003c/em\u003e is 100790275.\u003cbr\u003e\nWhich in turn leads to a large memory allocation at the end of the method.\u003c/p\u003e\n\u003cp\u003eI’ve attached the sample program so you should be able to reproduce it. At least for a German localization.\u003cbr\u003e\n\u003ca target=\u0027_blank\u0027 href=\"https://aka.ms/dc/file?name=B9f0be80b96cf4b008e05f71336675c42637533959183566774_WindowsEventRead2.zip\u0026amp;tid=9f0be80b96cf4b008e05f71336675c42637533959183566774\"\u003eWindowsEventRead2.zip\u003c/a\u003e\u003c/p\u003e\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOMJSvyg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgxNTA0OTQ5OA==",
                                           "createdAt":  "2021-04-07T16:25:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @GrabYourPitchForks, @carlossanlop\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/EventLogEntry-Message-Property-getter-ha/1222634)._\n\n---\n\u003cp\u003eReading the Event Message from a certain EventLogEntry hangs infinite. When using a 32-bit Application it throws a OutOfMemoryException after minutes:\u003c/p\u003e\u003cp\u003eSystem.OutOfMemoryException: Eine Ausnahme vom Typ \u0026quot;System.OutOfMemoryException\u0026quot; wurde ausgelöst.\u003cbr\u003e   bei System.Number.FormatInt32(Int32 value, String format, NumberFormatInfo info)\u003cbr\u003e   bei System.Int32.ToString()\u003cbr\u003e   bei System.String.Concat(Object arg0, Object arg1)\u003cbr\u003e   bei System.Diagnostics.EventLog.TryFormatMessage(SafeLibraryHandle hModule, UInt32 messageNum, String[] insertionStrings)\u003cbr\u003e   bei System.Diagnostics.EventLogInternal.FormatMessageWrapper(String dllNameList, UInt32 messageNum, String[] insertionStrings)\u003cbr\u003e   bei System.Diagnostics.EventLogEntry.get_Message()\u003cbr\u003e   bei WITecCreateSupportZipApp.WindowsEventHelper.writeWindowsEventsToStream(String aEventLogName, StreamWriter sw, ProgressReportSteps aReportSteps)\u003c/p\u003e\n\u003cp\u003eUnfortunately this happens only on a certain customer pc, so I can’t reproduce it with my own event log.\u003cbr\u003e\nI created a dump file and the thread hangs when accessing the EventLogEntry.Message property (in System.Diagnostics.EventLog.TryFormatMessage()).\u003c/p\u003e\n\n---\n### Original Comments\n\n#### Henning Dampel on 10/15/2020, 06:44 AM: \n\n(private comment, text removed)\n#### Feedback Bot on 10/15/2020, 07:44 PM: \n\n\u003cp\u003eWe have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.\u003c/p\u003e\n\n#### Tarek Mahmoud Sayed [MSFT] on 10/21/2020, 00:37 PM: \n\n\u003cp\u003eThanks for reporting the issue. Unfortunately it is hard to know what is going on using the provided information. Out of memory exception means there is something consuming a lot of memory and not necessary what you have in the stack is the root cause.\u003cbr\u003e\nAlso, it is not clear what you mean by \u003ccode\u003eI created a dump file and the thread hangs when accessing the EventLogEntry.Message property (in System.Diagnostics.EventLog.TryFormatMessage()).\u003c/code\u003e. How did you know from the dump is the thread is hanging? or do you mean something else?\u003c/p\u003e\n\u003cp\u003eI would suggest to you is either create a full dump when the problem happen and share it or you can run any memory profiler on the process when the problem occur which can help telling which part allocating a lot of memory.\u003cbr\u003e\nLast, this may be limitation on x86 process when opening a very big events log file. we cannot tell for sure without more information here. Thanks.\u003c/p\u003e\n\n#### Henning Dampel on 11/25/2020, 06:42 AM: \n\n(private comment, text removed)\n#### Henning Dampel on 10/22/2020, 01:09 AM: \n\n(private comment, text removed)\n#### Tarek Mahmoud Sayed [MSFT] on 11/2/2020, 02:56 PM: \n\n\u003cp\u003e\u003ca target=\u0027_blank\u0027 href=\"https://aka.ms/dc/u?aid=44267\"\u003eHenning Dampel\u003c/a\u003e I have looked at the dump file you shared. I am seeing the only thread has CLR in the stack is\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"hljs-number\"\u003e11\u003c/span\u003e  \u003cspan class=\"hljs-symbol\"\u003eId:\u003c/span\u003e \u003cspan class=\"hljs-number\"\u003e4\u003c/span\u003ea8.\u003cspan class=\"hljs-number\"\u003e5\u003c/span\u003ec8 \u003cspan class=\"hljs-symbol\"\u003eSuspend:\u003c/span\u003e \u003cspan class=\"hljs-number\"\u003e0\u003c/span\u003e \u003cspan class=\"hljs-symbol\"\u003eTeb:\u003c/span\u003e \u003cspan class=\"hljs-number\"\u003e00000000\u003c/span\u003e\u003cspan class=\"hljs-string\"\u003e`00d56000 Unfrozen\n # Child-SP          RetAddr           Call Site\n00 00000000`\u003c/span\u003e\u003cspan class=\"hljs-number\"\u003e0621\u003c/span\u003eee14 \u003cspan class=\"hljs-number\"\u003e4\u003c/span\u003ed93411\u003cspan class=\"hljs-number\"\u003e0\u003c/span\u003e\u003cspan class=\"hljs-string\"\u003e`1910fd00 clr!GetMetaDataPublicInterfaceFromInternal+0x100b4\n01 00000000`\u003c/span\u003e\u003cspan class=\"hljs-number\"\u003e0621\u003c/span\u003eee1c \u003cspan class=\"hljs-number\"\u003e00000020\u003c/span\u003e\u003cspan class=\"hljs-string\"\u003e`0621eea4 0x4d934110`\u003c/span\u003e\u003cspan class=\"hljs-number\"\u003e1910\u003c/span\u003efd0\u003cspan class=\"hljs-number\"\u003e0\u003c/span\u003e\n\u003cspan class=\"hljs-number\"\u003e02\u003c/span\u003e \u003cspan class=\"hljs-number\"\u003e00000000\u003c/span\u003e\u003cspan class=\"hljs-string\"\u003e`0621ee24 0621eea0`\u003c/span\u003e\u003cspan class=\"hljs-number\"\u003e0621\u003c/span\u003eeeb\u003cspan class=\"hljs-number\"\u003e0\u003c/span\u003e \u003cspan class=\"hljs-number\"\u003e0x00000020\u003c/span\u003e\u003cspan class=\"hljs-string\"\u003e`0621eea4\n03 00000000`\u003c/span\u003e\u003cspan class=\"hljs-number\"\u003e0621\u003c/span\u003eee2c \u003cspan class=\"hljs-number\"\u003e0621\u003c/span\u003eeec\u003cspan class=\"hljs-number\"\u003e0\u003c/span\u003e\u003cspan class=\"hljs-string\"\u003e`0621eeac 0x0621eea0`\u003c/span\u003e\u003cspan class=\"hljs-number\"\u003e0621\u003c/span\u003eeeb\u003cspan class=\"hljs-number\"\u003e0\u003c/span\u003e\n\u003cspan class=\"hljs-number\"\u003e04\u003c/span\u003e \u003cspan class=\"hljs-number\"\u003e00000000\u003c/span\u003e\u003cspan class=\"hljs-string\"\u003e`0621ee34 1913f9fc`\u003c/span\u003e\u003cspan class=\"hljs-number\"\u003e6\u003c/span\u003ec5def85 \u003cspan class=\"hljs-number\"\u003e0x0621eec0\u003c/span\u003e\u003cspan class=\"hljs-string\"\u003e`0621eeac\n05 00000000`\u003c/span\u003e\u003cspan class=\"hljs-number\"\u003e0621\u003c/span\u003eee3c \u003cspan class=\"hljs-number\"\u003e6\u003c/span\u003ec5d925\u003cspan class=\"hljs-number\"\u003e0\u003c/span\u003e\u003cspan class=\"hljs-string\"\u003e`00000001 0x1913f9fc`\u003c/span\u003e\u003cspan class=\"hljs-number\"\u003e6\u003c/span\u003ec5def85\n\u003cspan class=\"hljs-number\"\u003e06\u003c/span\u003e \u003cspan class=\"hljs-number\"\u003e00000000\u003c/span\u003e\u003cspan class=\"hljs-string\"\u003e`0621ee44 00000000`\u003c/span\u003e\u003cspan class=\"hljs-number\"\u003e00000000\u003c/span\u003e \u003cspan class=\"hljs-number\"\u003e0x6c5d9250\u003c/span\u003e\u003cspan class=\"hljs-string\"\u003e`00000001\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003ewhich means .NET is not in any other stacks and I am not seeing any EventLog calls which is telling it is hanging there.\u003c/p\u003e\n\u003cp\u003eDid you share the right dump? I am seeing the executable used is\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"hljs-attr\"\u003e0\u003c/span\u003e:\u003cspan class=\"hljs-string\"\u003e000\u0026gt; |\u003c/span\u003e\n\u003cspan class=\"hljs-meta\"\u003e.\u003c/span\u003e  \u003cspan class=\"hljs-string\"\u003e0\tid: 4a8\texamine\tname: C:\\Users\\Witec\\Desktop\\CreateSupportZIP5.3_TEST\\WITec.CreateSupportZipApp.exe\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWe need to have a better dump file showing the problem when it is hanging in EventLog to be able to assist. Or at least the dump should show the .NET is used there.\u003c/p\u003e\n\n#### Feedback Bot on 11/10/2020, 07:27 PM: \n\nWe will close this report in 14 days because we don’t have enough information to investigate further. To keep the problem open, please provide the requested details.\n\n#### Henning Dampel on 11/25/2020, 06:47 AM: \n\n(private comment, text removed)\n#### Henning Dampel on 11/25/2020, 06:55 AM: \n\n(private comment, text removed)\n#### Henning Dampel on 2/8/2021, 08:51 AM: \n\n(private comment, text removed)\n#### Tarek Mahmoud Sayed [MSFT] on 2/8/2021, 09:36 AM: \n\n\u003cblockquote\u003e\n\u003cp\u003eDid you look at all threads??\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThe dump file that you shared on Nov 25, 2020 was not showing any thread in the CLR stack as I indicated in previous comments.\u003cbr\u003e\nNow I cannot access the dump file again as the ftp server looks unavailable any more. If you have a dump showing a thread with the stack you mentioned, please share it again and we’ll take another look.\u003c/p\u003e\n\n#### Henning Dampel on 2/9/2021, 01:19 AM: \n\n(private comment, text removed)\n#### Tarek Mahmoud Sayed [MSFT] on 2/9/2021, 04:05 PM: \n\n\u003cp\u003e\u003ca target=\u0027_blank\u0027 href=\"https://developercommunity2.visualstudio.com/user/8ffa3d53-67e0-4cab-a4f2-ead7ca3945fc/profile\"\u003eHenning Dampel\u003c/a\u003e thanks for resending the dump file link.  I am able to get it and seeing what you are seeing. Looking at the thread 1480 which you are saying it is hanging and I am seeing this thread is not really hanging but it is busy formatting the log entry. Basically, your code is calling EventLogEntry.Message to get the log entry message. The message is coming with %100790275 which is a huge number. and then will execute the code\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e            \u003cspan class=\"hljs-keyword\"\u003eif\u003c/span\u003e (largestNumber \u0026gt; insertionStrings.Length) {\n                \u003cspan class=\"hljs-built_in\"\u003estring\u003c/span\u003e[] newStrings = \u003cspan class=\"hljs-keyword\"\u003enew\u003c/span\u003e \u003cspan class=\"hljs-built_in\"\u003estring\u003c/span\u003e[largestNumber];\n                Array.Copy(insertionStrings, newStrings, insertionStrings.Length);\n                \u003cspan class=\"hljs-keyword\"\u003efor\u003c/span\u003e (\u003cspan class=\"hljs-keyword\"\u003eint\u003c/span\u003e i = insertionStrings.Length; i \u0026lt; newStrings.Length; i++) {\n                    newStrings[i] = \u003cspan class=\"hljs-string\"\u003e\"%\"\u003c/span\u003e + (i + \u003cspan class=\"hljs-number\"\u003e1\u003c/span\u003e);\n                }\n \n                insertionStrings = newStrings;\n            }\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003elargestNumber is what we parsed from the message and will be equal to \u003ccode\u003e100,790,275\u003c/code\u003e. First it allocate the newStrings array which will be a huge array and then will try to fill that string. the value of \u003ccode\u003ei\u003c/code\u003e in the dump you have shared is \u003ccode\u003ei =16,482,572\u003c/code\u003e\twhich means the loop is busy at counter \u003ccode\u003e16,482,572\u003c/code\u003e and will expected to exit when the counter is \u003ccode\u003e100,790,275\u003c/code\u003e and with every iteration is formatting a new string \u003ccode\u003e\u0026quot;%\u0026quot; + (i + 1)\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eThe question now is why the logging sending entry with that huge number \u003ccode\u003e100,790,275\u003c/code\u003e. who is producing these logs you are listening to?\u003c/p\u003e\n\u003cp\u003eeventually the loop will exit (if we don’t run out of memory of course).\u003c/p\u003e\n\n#### Henning Dampel on 2/10/2021, 01:02 AM: \n\n(private comment, text removed)\n#### Tarek Mahmoud Sayed [MSFT] on 2/10/2021, 09:20 AM: \n\n\u003cp\u003e\u003ca target=\u0027_blank\u0027 href=\"https://developercommunity2.visualstudio.com/user/8ffa3d53-67e0-4cab-a4f2-ead7ca3945fc/profile\"\u003eHenning Dampel\u003c/a\u003e thanks again. From what I saw I am not seeing any problem in the .NET side and .NET is doing what is supposes to do. Anyway, if you get some more info in the future and feel it is .NET problem, feel free to ping us back and we’ll be happy to look at that.\u003c/p\u003e\n\n\n---\n### Original Solutions\n\n#### Feedback Bot solved on 2/25/2021, 00:51 AM, 0 votes: \n\nWe are unable to investigate this issue further without the additional information requested. If you are able to provide more information, you can request the issue being reactivate below. See our [guidelines](https://aka.ms/vsfeedbackguidelines) for further information about our process.\n\n#### Roland, Mario on 3/31/2021, 00:51 AM: \n\n(private comment, text removed)\n#### Tarek Mahmoud Sayed [MSFT] on 3/31/2021, 07:32 PM: \n\n\u003cp\u003ePlease attach a debugger dump when the problem happens so we can look what is going on. we’ll not be able to tell without a repro or debugger dump. Note that could be a different issue than what is originally reported. Thanks.\u003c/p\u003e\n\n#### Roland, Mario on 4/6/2021, 00:27 AM: \n\n(private comment, text removed)\n#### Tarek Mahmoud Sayed [MSFT] on 4/6/2021, 04:11 PM: \n\n\u003cp\u003e\u003ca target=\u0027_blank\u0027 href=\"https://developercommunity2.visualstudio.com/user/464f5a8a-2b33-69bf-b35d-2783c2fbb1b5/profile\"\u003eRoland, Mario\u003c/a\u003e Thanks a lot for sharing the dump and the code. I ran the code locally but couldn’t repro the hang nor the OOM. But this could be because of the difference in the machine configuration and the amount of the logs you are reading from this machine.\u003c/p\u003e\n\u003cp\u003eLooking at your dump, I am seeing it is not hanging but busy formatting some data:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e00\u003cspan class=\"hljs-selector-tag\"\u003eafe9c0\u003c/span\u003e 77992\u003cspan class=\"hljs-selector-tag\"\u003ef5c\u003c/span\u003e \u003cspan class=\"hljs-selector-attr\"\u003e[HelperMethodFrame_PROTECTOBJ: 00afe9c0]\u003c/span\u003e \u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.Number\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.FormatInt32\u003c/span\u003e(\u003cspan class=\"hljs-selector-tag\"\u003eInt32\u003c/span\u003e, \u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.String\u003c/span\u003e, \u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.Globalization\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.NumberFormatInfo\u003c/span\u003e)\n00\u003cspan class=\"hljs-selector-tag\"\u003eafeb4c\u003c/span\u003e 718\u003cspan class=\"hljs-selector-tag\"\u003ece1e8\u003c/span\u003e \u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.Int32\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.ToString\u003c/span\u003e() \u003cspan class=\"hljs-selector-attr\"\u003e[f:\\dd\\ndp\\clr\\src\\BCL\\system\\int32.cs @ 94]\u003c/span\u003e\n00\u003cspan class=\"hljs-selector-tag\"\u003eafeb58\u003c/span\u003e 718\u003cspan class=\"hljs-selector-tag\"\u003ece1b9\u003c/span\u003e \u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.String\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.Concat\u003c/span\u003e(\u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.Object\u003c/span\u003e, \u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.Object\u003c/span\u003e) \u003cspan class=\"hljs-selector-attr\"\u003e[f:\\dd\\ndp\\clr\\src\\BCL\\system\\string.cs @ 3068]\u003c/span\u003e\n00\u003cspan class=\"hljs-selector-tag\"\u003eafeb68\u003c/span\u003e 70\u003cspan class=\"hljs-selector-tag\"\u003eff744c\u003c/span\u003e \u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.Diagnostics\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.EventLog\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.TryFormatMessage\u003c/span\u003e(\u003cspan class=\"hljs-selector-tag\"\u003eMicrosoft\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.Win32\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.SafeHandles\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.SafeLibraryHandle\u003c/span\u003e, \u003cspan class=\"hljs-selector-tag\"\u003eUInt32\u003c/span\u003e, \u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.String\u003c/span\u003e\u003cspan class=\"hljs-selector-attr\"\u003e[]\u003c/span\u003e) \u003cspan class=\"hljs-selector-attr\"\u003e[f:\\dd\\NDP\\fx\\src\\services\\monitoring\\system\\diagnosticts\\EventLog.cs @ 1270]\u003c/span\u003e\n00\u003cspan class=\"hljs-selector-tag\"\u003eafeba0\u003c/span\u003e 70\u003cspan class=\"hljs-selector-tag\"\u003eff9321\u003c/span\u003e \u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.Diagnostics\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.EventLogInternal\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.FormatMessageWrapper\u003c/span\u003e(\u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.String\u003c/span\u003e, \u003cspan class=\"hljs-selector-tag\"\u003eUInt32\u003c/span\u003e, \u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.String\u003c/span\u003e\u003cspan class=\"hljs-selector-attr\"\u003e[]\u003c/span\u003e) \u003cspan class=\"hljs-selector-attr\"\u003e[f:\\dd\\NDP\\fx\\src\\services\\monitoring\\system\\diagnosticts\\EventLogInternal.cs @ 858]\u003c/span\u003e\n00\u003cspan class=\"hljs-selector-tag\"\u003eafebe0\u003c/span\u003e 70\u003cspan class=\"hljs-selector-tag\"\u003effbebc\u003c/span\u003e \u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.Diagnostics\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.EventLogEntry\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.get_Message\u003c/span\u003e() \u003cspan class=\"hljs-selector-attr\"\u003e[f:\\dd\\NDP\\fx\\src\\services\\monitoring\\system\\diagnosticts\\EventLogEntry.cs @ 225]\u003c/span\u003e\n00\u003cspan class=\"hljs-selector-tag\"\u003eafec00\u003c/span\u003e 00\u003cspan class=\"hljs-selector-tag\"\u003ebe0c09\u003c/span\u003e \u003cspan class=\"hljs-selector-tag\"\u003eWindowsEventRead\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.Program\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.CreateWindowsEventsLog\u003c/span\u003e()\n00\u003cspan class=\"hljs-selector-tag\"\u003eafed3c\u003c/span\u003e 00\u003cspan class=\"hljs-selector-tag\"\u003ebe0870\u003c/span\u003e \u003cspan class=\"hljs-selector-tag\"\u003eWindowsEventRead\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.Program\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.Main\u003c/span\u003e(\u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.String\u003c/span\u003e\u003cspan class=\"hljs-selector-attr\"\u003e[]\u003c/span\u003e)\n00\u003cspan class=\"hljs-selector-tag\"\u003eafeeec\u003c/span\u003e 7327\u003cspan class=\"hljs-selector-tag\"\u003ef036\u003c/span\u003e \u003cspan class=\"hljs-selector-attr\"\u003e[GCFrame: 00afeeec]\u003c/span\u003e   \n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eI looked at the heap status and I am seeing the biggest allocations is coming from the type\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e71512\u003cspan class=\"hljs-selector-tag\"\u003ed74\u003c/span\u003e       44    403162576 \u003cspan class=\"hljs-selector-tag\"\u003eSystem\u003c/span\u003e\u003cspan class=\"hljs-selector-class\"\u003e.String\u003c/span\u003e\u003cspan class=\"hljs-selector-attr\"\u003e[]\u003c/span\u003e   \n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003elooking at the root of the allocation of this string is coming from:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"hljs-attr\"\u003e0\u003c/span\u003e:\u003cspan class=\"hljs-string\"\u003e000\u0026gt; !GCRoot 06361010\u003c/span\u003e\n\u003cspan class=\"hljs-attr\"\u003eThread\u003c/span\u003e \u003cspan class=\"hljs-string\"\u003e414c:\u003c/span\u003e\n    \u003cspan class=\"hljs-attr\"\u003e00afeb68\u003c/span\u003e \u003cspan class=\"hljs-string\"\u003e70ff744c System.Diagnostics.EventLog.TryFormatMessage(Microsoft.Win32.SafeHandles.SafeLibraryHandle, UInt32, System.String[]) [f:\\dd\\NDP\\fx\\src\\services\\monitoring\\system\\diagnosticts\\EventLog.cs @ 1270]\u003c/span\u003e\n        \u003cspan class=\"hljs-attr\"\u003eedi\u003c/span\u003e: \u003cspan class=\"hljs-string\"\u003e\u003c/span\u003e\n            \u003cspan class=\"hljs-meta\"\u003e-\u0026gt;\u003c/span\u003e  \u003cspan class=\"hljs-string\"\u003e06361010 System.String[]\u003c/span\u003e\n\n\u003cspan class=\"hljs-attr\"\u003eFound\u003c/span\u003e \u003cspan class=\"hljs-string\"\u003e1 unique roots (run \u0027!GCRoot -all\u0027 to see all roots).   \u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThese all allocated from the EventLogEntry.Message calls. The huge allocation is done because of the size of the logs existed in the machine (especially from Application logs).\u003c/p\u003e\n\u003cp\u003eLooks your machine has limited memory and in same time has a lot of logs to process. That is why processing the logs putting a lot of pressure on the memory. In normal cases, this allocated memory will get garbage collected and cleaned up by GC. But in your case because you have limited memory, you run to OOM.\u003c/p\u003e\n\u003cp\u003eThe possible workaround is trying to avoid reading the whole logs at one shot. I am seeing from the code you are reading the logs of last 20 days. You may try to wrap the whole code inside a method which read the logs for only one day. and then you cann call this method like 20 times for each day of last 20 days. After each call, you call GC.Collect to ensure collecting un-needed objects to reduce the pressure on the GC and the heap.\u003c/p\u003e\n\u003cp\u003eCould you please share your machine configuration too? how much memory it has?\u003c/p\u003e\n\u003cp\u003eThanks for your report.\u003c/p\u003e\n\n#### Roland, Mario on 4/7/2021, 05:40 AM: \n\n\u003cp\u003eI have reengeniered the problem with code from Microsoft.\u003cbr\u003e\nIt seems that the problem is in the event message itself. Perhaps only in the localized one. Because in the method System.Diagnostics.EventLog.TryFormatMessage the code:\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e// If you pass in an empty array UnsafeTryFormatMessage will just pull out the message.\u003cbr\u003e\nstring formatString = UnsafeTryFormatMessage(hModule, messageNum, new string[0]);\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003ereturns for the libary “C:\\Windows\\System32\\gpprefcl.dll” the german message text:\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e“Die clientseitige Erweiterung konnte die %2-Richtlinieneinstellungen für %3 nicht %1. Fehlercode: %4%%100790275”\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThis text leads to that the local variable \u003cem\u003elargestNumber\u003c/em\u003e is 100790275.\u003cbr\u003e\nWhich in turn leads to a large memory allocation at the end of the method.\u003c/p\u003e\n\u003cp\u003eI’ve attached the sample program so you should be able to reproduce it. At least for a German localization.\u003cbr\u003e\n\u003ca target=\u0027_blank\u0027 href=\"https://aka.ms/dc/file?name=B9f0be80b96cf4b008e05f71336675c42637533959183566774_WindowsEventRead2.zip\u0026amp;tid=9f0be80b96cf4b008e05f71336675c42637533959183566774\"\u003eWindowsEventRead2.zip\u003c/a\u003e\u003c/p\u003e\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003evsfeedback\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-System.Memory`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-04-07T16:25:05Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgxNTA1MDY5OA==",
                                           "createdAt":  "2021-04-07T16:26:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tarekgh",
                                           "body":  "Note the external ticket has more helpful information https://developercommunity.visualstudio.com/t/eventlogentry-message-property-getter-hangs/1222634?from=email\u0026viewtype=all#T-ND1392465",
                                           "updatedAt":  "2021-04-07T16:26:40Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "EventLogEntry Message Property getter hangs",
        "labels":  [
                       "area-System.Diagnostics.EventLog"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/58829",
        "createdAt":  "2021-09-08T20:21:32Z",
        "number":  58829,
        "author":  "wfurt",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-08-12T19:27:24Z",
        "body":  "https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-58570-merge-82d3210ae65b4c7bab/System.Diagnostics.EventLog.Tests/1/console.22fc633f.log?sv=2019-07-07\u0026se=2021-09-28T19%3A09%3A59Z\u0026sr=c\u0026sp=rl\u0026sig=c9WGUmQHt%2FIcFz23yiVBOPIXos7SuYjCtPHDRupOcxA%3D\r\n\r\n```\r\nC:\\h\\w\\B1F40A27\\w\\A62108FB\\e\u003e\"C:\\h\\w\\B1F40A27\\p\\dotnet.exe\" exec --runtimeconfig System.Diagnostics.EventLog.Tests.runtimeconfig.json --depsfile System.Diagnostics.EventLog.Tests.deps.json xunit.console.dll System.Diagnostics.EventLog.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing  \r\n  Discovering: System.Diagnostics.EventLog.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Diagnostics.EventLog.Tests (found 90 of 122 test cases)\r\n  Starting:    System.Diagnostics.EventLog.Tests (parallel test collections = on, max threads = 2)\r\n    System.Diagnostics.Tests.EventLogConfigurationTests.SetProperties_SaveChanges_NotAdmin_Throws [SKIP]\r\n      Condition(s) not met: \"NotElevatedAndSupportsEventLogs\"\r\n    System.Diagnostics.Tests.EventLogRecordTests.ExceptionOnce [FAIL]\r\n      System.Diagnostics.Eventing.Reader.EventLogException : The system cannot find message text for message number 0x%1 in the message file for %2.\r\n      Stack Trace:\r\n        /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/EventLogException.cs(46,0): at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode)\r\n        /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/NativeWrapper.cs(916,0): at System.Diagnostics.Eventing.Reader.NativeWrapper.EvtFormatMessageRenderName(EventLogHandle pmHandle, EventLogHandle eventHandle, EvtFormatMessageFlags flag)\r\n        /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadataCachedInformation.cs(239,0): at System.Diagnostics.Eventing.Reader.ProviderMetadataCachedInformation.GetTaskDisplayName(String ProviderName, EventLogHandle eventHandle)\r\n        /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/EventLogRecord.cs(353,0): at System.Diagnostics.Eventing.Reader.EventLogRecord.get_TaskDisplayName()\r\n        /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/EventLogRecordTests.cs(104,0): at System.Diagnostics.Tests.EventLogRecordTests.\u003c\u003ec__DisplayClass4_1.\u003cExceptionOnce\u003eb__2()\r\n        /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/EventLogRecordTests.cs(116,0): at System.Diagnostics.Tests.EventLogRecordTests.ThrowsMaxOnce[T](Action action)\r\n        /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/EventLogRecordTests.cs(104,0): at System.Diagnostics.Tests.EventLogRecordTests.ExceptionOnce()\r\n    System.Diagnostics.Tests.ProviderMetadataTests.ProviderNameTests(noProviderName: True) [FAIL]\r\n      System.Diagnostics.Eventing.Reader.EventLogNotFoundException : The system cannot find the file specified.\r\n      Stack Trace:\r\n        /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/EventLogException.cs(25,0): at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode)\r\n        /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/NativeWrapper.cs(144,0): at System.Diagnostics.Eventing.Reader.NativeWrapper.EvtOpenEventMetadataEnum(EventLogHandle ProviderMetadata, Int32 flags)\r\n        /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs(495,0): at System.Diagnostics.Eventing.Reader.ProviderMetadata.get_Events()\r\n        /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/ProviderMetadataTests.cs(40,0): at System.Diagnostics.Tests.ProviderMetadataTests.ProviderNameTests(Boolean noProviderName)\r\n    System.Diagnostics.Tests.ProviderMetadataTests.ProviderNameTests(noProviderName: False) [FAIL]\r\n      System.Diagnostics.Eventing.Reader.EventLogNotFoundException : The system cannot find the file specified.\r\n      Stack Trace:\r\n        /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/EventLogException.cs(25,0): at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode)\r\n        /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/NativeWrapper.cs(144,0): at System.Diagnostics.Eventing.Reader.NativeWrapper.EvtOpenEventMetadataEnum(EventLogHandle ProviderMetadata, Int32 flags)\r\n        /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs(495,0): at System.Diagnostics.Eventing.Reader.ProviderMetadata.get_Events()\r\n        /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/ProviderMetadataTests.cs(40,0): at System.Diagnostics.Tests.ProviderMetadataTests.ProviderNameTests(Boolean noProviderName)\r\n  Finished:    System.Diagnostics.EventLog.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Diagnostics.EventLog.Tests  Total: 106, Errors: 0, Failed: 3, Skipped: 1, Time: 40.801s\r\n\r\n```\r\n\r\nlocally, I was able to reproduce only on failure on Insider Preview build.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSFO2Vw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc42koc4",
                                           "createdAt":  "2021-09-08T21:08:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "We already added 2 new ones in https://github.com/dotnet/runtime/pull/57804\r\n\r\nLooks like we now need to add ERROR_MR_MID_NOT_FOUND\r\n\r\n@dotnet/area-system-diagnostics-eventlog if this is consistent on Windows 11, it might be a 6.0 candidate.",
                                           "updatedAt":  "2021-09-08T21:08:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42kozv",
                                           "createdAt":  "2021-09-08T21:10:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Not sure what is special about these two tests..?",
                                           "updatedAt":  "2021-09-08T21:10:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42kzhg",
                                           "createdAt":  "2021-09-08T22:32:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wfurt",
                                           "body":  "I don\u0027t know either. This is not my area so I\u0027m disabling the failing tests in https://github.com/dotnet/runtime/pull/58570 so we can at least add the new test queue. ",
                                           "updatedAt":  "2021-09-08T22:32:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42k6Pm",
                                           "createdAt":  "2021-09-08T23:43:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Sounds good. It sounds like you ran all our tests on Win11 not just networking (cc @jeffhandley ) -- appreciate you doing that. Seems we\u0027re largely in a good state.",
                                           "updatedAt":  "2021-09-08T23:43:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42k6ch",
                                           "createdAt":  "2021-09-08T23:45:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "I believe we just need someone to do a PR with ERROR_MR_MID_NOT_FOUND added next to these two lines: https://github.com/dotnet/runtime/search?q=ERROR_EVT_MESSAGE_NOT_FOUND\r\n\r\nPresumably by someone with Windows 11 installed so they can verify and undisable the test.",
                                           "updatedAt":  "2021-09-08T23:45:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42ooYG",
                                           "createdAt":  "2021-09-10T04:26:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "@wfurt I don\u0027t have Windows 11. Do you have a few minutes to try the change above? I am happy to make the PR if it works on your machine.",
                                           "updatedAt":  "2021-09-10T04:26:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42o_uJ",
                                           "createdAt":  "2021-09-10T08:08:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wfurt",
                                           "body":  "I\u0027m not 100% what the value should be. I made the suggested change and I get \r\n```\r\n      System.Diagnostics.Tests.EventLogRecordTests.ExceptionOnce [FAIL]\r\n        System.Diagnostics.Eventing.Reader.EventLogException : Invalid access to memory location\r\n        Stack Trace:\r\n             at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode)\r\n             at System.Diagnostics.Eventing.Reader.NativeWrapper.EvtFormatMessageRenderName(EventLogHandle pmHandle, EventLogHandle eventHandle, EvtFormatMessageFlags flag)\r\n             at System.Diagnostics.Eventing.Reader.ProviderMetadataCachedInformation.GetLevelDisplayName(String ProviderName, EventLogHandle eventHandle)\r\n             at System.Diagnostics.Eventing.Reader.EventLogRecord.get_LevelDisplayName()\r\n          C:\\Users\\test\\github\\wfurt-runtime\\src\\libraries\\System.Diagnostics.EventLog\\tests\\System\\Diagnostics\\Reader\\EventLogRecordTests.cs(102,0): at System.Diagnostics.Tests.EventLogRecordTests.\u003c\u003ec__DisplayClass4_1.\u003cExceptionOnce\u003eb__0()\r\n          C:\\Users\\test\\github\\wfurt-runtime\\src\\libraries\\System.Diagnostics.EventLog\\tests\\System\\Diagnostics\\Reader\\EventLogRecordTests.cs(116,0): at System.Diagnostics.Tests.EventLogRecordTests.ThrowsMaxOnce[T](Action action)\r\n          C:\\Users\\test\\github\\wfurt-runtime\\src\\libraries\\System.Diagnostics.EventLog\\tests\\System\\Diagnostics\\Reader\\EventLogRecordTests.cs(102,0): at System.Diagnostics.Tests.EventLogRecordTests.ExceptionOnce()\r\n```\r\nI\u0027d be happy to run more tests if you need me to @danmoseley \r\n\r\nYou can also create exact VM [here](https://ms.portal.azure.com/#@microsoft.onmicrosoft.com/resource/subscriptions/a4fc5514-21a9-4296-bfaf-5c7ee7fa35d1/resourceGroups/HelixReproVMs/providers/Microsoft.DevTestLab/labs/HelixReproVMs/overview).\r\nWith few clicks not as easy as old repro tool but still pretty slick. \r\n",
                                           "updatedAt":  "2021-09-10T08:08:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42qIXI",
                                           "createdAt":  "2021-09-10T15:54:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Oh, too bad (and suggests Windows 11 bug). Well, this will need investigation. Since most of the tests are passing -  it may not be to concerning right now.",
                                           "updatedAt":  "2021-09-10T15:54:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42qIvm",
                                           "createdAt":  "2021-09-10T15:56:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "BTW I created a new os-windows11 label that might help us keep track of issues specific to this OS",
                                           "updatedAt":  "2021-09-10T15:56:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44oU4Z",
                                           "createdAt":  "2021-10-23T06:02:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Robo210",
                                           "body":  "IIRC, ERROR_MR_MID_NOT_FOUND is not an expected return code from EvtRender or EvtFormatMessage. There is a known issue in Windows Server 2022 where this error code could incorrectly be returned, but that has been fixed via Windows Update. I am not aware of any similar issues in Windows 11, so feel free to reach out to the ETW team within MS and we can investigate and track the issue further from the Windows side.",
                                           "updatedAt":  "2021-10-23T06:02:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc495lD8",
                                           "createdAt":  "2022-02-14T00:48:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mdh1418",
                                           "body":  "Hit the first exception `System.Diagnostics.Tests.EventLogRecordTests.ExceptionOnce` in an unrelated PR https://github.com/dotnet/runtime/pull/64952 on lane `Libraries Test Run release coreclr windows x86 Release`\r\nBuild: https://dev.azure.com/dnceng/public/_build/results?buildId=1606293\u0026view=logs\u0026j=457f7e88-dfa2-5bd9-f871-fdf124c2477d\u0026t=bfe52dfb-2099-5c7f-ee52-70a1d81c544e\u0026s=96ac2280-8cb4-5df5-99de-dd2da759617d\r\nLog: https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64952-merge-bb663c35c087459bb8/System.Diagnostics.EventLog.Tests/1/console.6fde3b12.log?sv=2019-07-07\u0026se=2022-03-03T01%3A58%3A49Z\u0026sr=c\u0026sp=rl\u0026sig=8twS3bwRjJKf0aJthzMSrl8XnyO1gthfCqRNFarRKm0%3D",
                                           "updatedAt":  "2022-02-14T00:50:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4-HYbB",
                                           "createdAt":  "2022-02-16T20:13:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "elinor-fung",
                                           "body":  "Hit the `System.Diagnostics.Tests.EventLogRecordTests.ExceptionOnce` failure in another run on Windows Server 2022: https://dev.azure.com/dnceng/public/_build/results?buildId=1616198\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=44972004\u0026resultId=123558\u0026paneView=dotnet-dnceng.dnceng-build-release-tasks.helix-test-information-tab\r\n```\r\nSystem.Diagnostics.Tests.EventLogRecordTests.ExceptionOnce [FAIL]\r\n  System.Diagnostics.Eventing.Reader.EventLogException : The system cannot find message text for message number 0x%1 in the message file for %2.\r\n  Stack Trace:\r\n    /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/EventLogException.cs(46,0): at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode)\r\n    /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/NativeWrapper.cs(926,0): at System.Diagnostics.Eventing.Reader.NativeWrapper.EvtFormatMessageRenderName(EventLogHandle pmHandle, EventLogHandle eventHandle, EvtFormatMessageFlags flag)\r\n    /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadataCachedInformation.cs(239,0): at System.Diagnostics.Eventing.Reader.ProviderMetadataCachedInformation.GetTaskDisplayName(String ProviderName, EventLogHandle eventHandle)\r\n    /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/EventLogRecord.cs(353,0): at System.Diagnostics.Eventing.Reader.EventLogRecord.get_TaskDisplayName()\r\n    /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/EventLogRecordTests.cs(105,0): at System.Diagnostics.Tests.EventLogRecordTests.\u003c\u003ec__DisplayClass4_0.\u003cExceptionOnce\u003eb__2()\r\n    /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/EventLogRecordTests.cs(117,0): at System.Diagnostics.Tests.EventLogRecordTests.ThrowsMaxOnce[T](Action action)\r\n    /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/EventLogRecordTests.cs(105,0): at System.Diagnostics.Tests.EventLogRecordTests.ExceptionOnce()\r\n```\r\n[Console log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-heads-main-e585591a09e241e29b/System.Diagnostics.EventLog.Tests/1/console.b4508213.log?sv=2019-07-07\u0026se=2022-03-08T17%3A30%3A33Z\u0026sr=c\u0026sp=rl\u0026sig=VlE0eFTjK88yDgmfxkkztj8E55gZPOE%2BqXNon%2B67TIw%3D)",
                                           "updatedAt":  "2022-02-16T20:13:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4-JQ6h",
                                           "createdAt":  "2022-02-17T06:26:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "elinor-fung",
                                           "body":  "The failure in `System.Diagnostics.Tests.EventLogRecordTests.ExceptionOnce` is being hit a decent amount on Windows Server 2022. Kusto data is showing 25 failures in the last 7 days.\r\n\r\n@dotnet/area-system-diagnostics-eventlog I just realized that that test was disabled for Windows 11. Is there any more information on what was happening? Should we also disable for Windows Server 2022?\r\n\r\n```kusto\r\nTestResults\r\n| where Result == \"Fail\"\r\n| where Type == \"System.Diagnostics.Tests.EventLogRecordTests\" and Method == \"ExceptionOnce\"\r\n| where Message contains \"The system cannot find message text\"\r\n| join kind=inner Jobs on JobId\r\n| where Queued \u003e ago(7d)\r\n| project\r\n  QueueName, Queued,\r\n  Type, Method, Message,\r\n  PhaseName = tostring(parse_json(Properties)[\"System.PhaseName\"]),\r\n  Pipeline = tostring(parse_json(Properties).DefinitionName),\r\n  Source,\r\n  Build = tostring(parse_json(Properties).BuildNumber)\r\n| order by Queued desc\r\n```",
                                           "updatedAt":  "2022-02-17T06:26:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5IU7ZX",
                                           "createdAt":  "2022-08-12T19:27:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Disabled test, no evidence of major issue. moving to Future.",
                                           "updatedAt":  "2022-08-12T19:27:24Z"
                                       }
                                   ],
                         "totalCount":  14
                     },
        "title":  "EventLog tests failing on Windows 11 and Windows Server 2022",
        "labels":  [
                       "disabled-test",
                       "test-run-core",
                       "area-System.Diagnostics.EventLog",
                       "os-windows11"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/64153",
        "createdAt":  "2022-01-23T05:41:45Z",
        "number":  64153,
        "author":  "runfoapp",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-07-31T18:02:01Z",
        "body":  "\u003c!-- runfo report start --\u003e\r\nRunfo Tracking Issue: [system.diagnostics.tests.providermetadatatests.getprovidernames_assertproperties](https://runfo.azurewebsites.net/tracking/issue/254)\r\n|Build|Definition|Kind|Run Name|\r\n|---|---|---|---|\r\n\r\n\r\n\r\nBuild Result Summary\r\n|Day Hit Count|Week Hit Count|Month Hit Count|\r\n|---|---|---|\r\n|0|0|0|\r\n\r\n\u003c!-- runfo report end --\u003e\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSkLjPQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc48wxWX",
                                           "createdAt":  "2022-01-23T05:41:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2022-01-23T05:41:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc48xYfw",
                                           "createdAt":  "2022-01-23T22:15:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @tommcdon\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n\u003c!-- runfo report start --\u003e\r\nRunfo Creating Tracking Issue (data being generated)\r\n\u003c!-- runfo report end --\u003e\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003erunfoapp[bot]\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-System.Diagnostics`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-01-23T22:15:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc49XbvA",
                                           "createdAt":  "2022-02-04T01:21:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sbomer",
                                           "body":  "This showed up in the latest rolling build and has been hitting in PRs. @tommcdon Is someone available to investigate?\r\n```\r\n System.Diagnostics.Tests.ProviderMetadataTests.GetProviderNames_AssertProperties [FAIL]\r\n      System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\r\n      Stack Trace:\r\n           at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode)\r\n           at System.Diagnostics.Eventing.Reader.NativeWrapper.EvtOpenProviderMetadata(EventLogHandle session, String ProviderId, String logFilePath, Int32 locale, Int32 flags)\r\n           at System.Diagnostics.Eventing.Reader.ProviderMetadata..ctor(String providerName, EventLogSession session, CultureInfo targetCultureInfo, String logFilePath)\r\n        /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/ProviderMetadataTests.cs(104,0): at System.Diagnostics.Tests.ProviderMetadataTests.GetProviderNames_AssertProperties()\r\n```",
                                           "updatedAt":  "2022-02-04T01:21:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc49Xbw_",
                                           "createdAt":  "2022-02-04T01:21:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-diagnostics-eventlog\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n\u003c!-- runfo report start --\u003e\r\nRunfo Tracking Issue: [system.diagnostics.tests.providermetadatatests.getprovidernames_assertproperties](https://runfo.azurewebsites.net/tracking/issue/254)\r\n|Build|Definition|Kind|Run Name|Console|Core Dump|Test Results|Run Client|\r\n|---|---|---|---|---|---|---|---|\r\n|[1589973](https://dev.azure.com/dnceng/public/_build/results?buildId=1589973)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64500](https://github.com/dotnet/runtime/pull/64500)|net7.0-windows-Debug-x86-CoreCLR_checked-Windows.10.Amd64.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64500-merge-c6c67b7a6975489396/System.Diagnostics.EventLog.Tests/1/console.5b779fe0.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-23T18%25253A22%25253A40Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DveGAM2mY9TMnO%25252FZegOFeZNnWCiqA2%25252BfRKaGS%25252BHDnp5o%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64500-merge-c6c67b7a6975489396/System.Diagnostics.EventLog.Tests/add52aff-9d61-435a-b3dd-57559d41d62a.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-23T18%25253A22%25253A40Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DveGAM2mY9TMnO%25252FZegOFeZNnWCiqA2%25252BfRKaGS%25252BHDnp5o%25253D)|\r\n|[1589694](https://dev.azure.com/dnceng/public/_build/results?buildId=1589694)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64748](https://github.com/dotnet/runtime/pull/64748)|net7.0-windows-Debug-x64-CoreCLR_checked-Windows.10.Amd64.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64748-merge-39623c34075642be8d/System.Diagnostics.EventLog.Tests/1/console.98d5bceb.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-23T16%25253A53%25253A43Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DMWJy1F%25252BAnJSxakn4iLgSrSBPnKqMnQDGo5aiJ9wddpk%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64748-merge-39623c34075642be8d/System.Diagnostics.EventLog.Tests/03a98966-2101-4170-b4f4-0a2788dd5ed3.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-23T16%25253A53%25253A43Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DMWJy1F%25252BAnJSxakn4iLgSrSBPnKqMnQDGo5aiJ9wddpk%25253D)|\r\n|[1589636](https://dev.azure.com/dnceng/public/_build/results?buildId=1589636)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64567](https://github.com/dotnet/runtime/pull/64567)|net48-windows-Release-x86-Windows.10.Amd64.Client21H1.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64567-merge-c2580d51c492408491/System.Diagnostics.EventLog.Tests/1/console.7ad6dba1.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-23T15%25253A13%25253A31Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DUgM1RnDyUHLb66uFoitrGlxhAR448aHf%25252FTs4Znrehhc%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64567-merge-c2580d51c492408491/System.Diagnostics.EventLog.Tests/e3c20b5f-4673-45d6-839a-34895acafe59.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-23T15%25253A13%25253A31Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DUgM1RnDyUHLb66uFoitrGlxhAR448aHf%25252FTs4Znrehhc%25253D)|\r\n|[1589626](https://dev.azure.com/dnceng/public/_build/results?buildId=1589626)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64678](https://github.com/dotnet/runtime/pull/64678)|net7.0-windows-Debug-x64-CoreCLR_checked-Windows.10.Amd64.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64678-merge-548a84cbcf584ab69c/System.Diagnostics.EventLog.Tests/1/console.0aac0be6.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-23T15%25253A58%25253A37Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DTmBCpj1FkXpdtvNVC58BuoBBjiZRpXVA0IDF1zQE8D0%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64678-merge-548a84cbcf584ab69c/System.Diagnostics.EventLog.Tests/0272ea5b-30da-4c0d-84e3-8d179ab5c6c9.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-23T15%25253A58%25253A37Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DTmBCpj1FkXpdtvNVC58BuoBBjiZRpXVA0IDF1zQE8D0%25253D)|\r\n|[1587902](https://dev.azure.com/dnceng/public/_build/results?buildId=1587902)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64530](https://github.com/dotnet/runtime/pull/64530)|net7.0-windows-Debug-x64-CoreCLR_checked-Windows.10.Amd64.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64530-merge-7a4864ea52de42bc8b/System.Diagnostics.EventLog.Tests/1/console.4a3752a6.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-22T21%25253A54%25253A25Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DcjVOMUpu2ddJbQrF8ZdwnQuIgA3Tqh%25252F9%25252F6eCYuS4ZR4%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64530-merge-7a4864ea52de42bc8b/System.Diagnostics.EventLog.Tests/f2762e0c-6b66-46e4-b047-c0a0a05b4bf7.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-22T21%25253A54%25253A25Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DcjVOMUpu2ddJbQrF8ZdwnQuIgA3Tqh%25252F9%25252F6eCYuS4ZR4%25253D)|\r\n|[1586950](https://dev.azure.com/dnceng/public/_build/results?buildId=1586950)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64625](https://github.com/dotnet/runtime/pull/64625)|net48-windows-Release-x86-Windows.10.Amd64.Client19H1.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64625-merge-583e6b8bc2f04db1a3/System.Diagnostics.EventLog.Tests/1/console.1252c9cc.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-22T15%25253A14%25253A56Z%2526sr%253Dc%2526sp%253Drl%2526sig%253Db6MX8c93nHNKq4ycuGl2QrCdEUMCHv%25252BrxB5SQ8LDSK8%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64625-merge-583e6b8bc2f04db1a3/System.Diagnostics.EventLog.Tests/b208312b-2f1e-42b1-92d2-9cd6fbb7d910.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-22T15%25253A14%25253A56Z%2526sr%253Dc%2526sp%253Drl%2526sig%253Db6MX8c93nHNKq4ycuGl2QrCdEUMCHv%25252BrxB5SQ8LDSK8%25253D)|\r\n|[1586842](https://dev.azure.com/dnceng/public/_build/results?buildId=1586842)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64670](https://github.com/dotnet/runtime/pull/64670)|net48-windows-Release-x86-Windows.10.Amd64.Client19H1.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64670-merge-ce41dee829b849fe98/System.Diagnostics.EventLog.Tests/1/console.5704923f.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-22T13%25253A52%25253A45Z%2526sr%253Dc%2526sp%253Drl%2526sig%253Dy2jqrBLKoDUomWenF1cbSrv5LsLV03O9jYt5dwStkJ0%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64670-merge-ce41dee829b849fe98/System.Diagnostics.EventLog.Tests/e6969540-28b6-4ae9-9ea0-b7227afba167.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-22T13%25253A52%25253A45Z%2526sr%253Dc%2526sp%253Drl%2526sig%253Dy2jqrBLKoDUomWenF1cbSrv5LsLV03O9jYt5dwStkJ0%25253D)|\r\n|[1586186](https://dev.azure.com/dnceng/public/_build/results?buildId=1586186)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64661](https://github.com/dotnet/runtime/pull/64661)|net7.0-windows-Debug-x64-CoreCLR_checked-Windows.10.Amd64.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64661-merge-67b1bbc79f284877a0/System.Diagnostics.EventLog.Tests/1/console.24033827.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-22T05%25253A03%25253A23Z%2526sr%253Dc%2526sp%253Drl%2526sig%253D0GIYbsXtuMr5iFtRmLJiBi6s16czX2%25252B2S8vlFFQuBwQ%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64661-merge-67b1bbc79f284877a0/System.Diagnostics.EventLog.Tests/51c68902-dc18-43f3-837c-f994184375c8.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-22T05%25253A03%25253A23Z%2526sr%253Dc%2526sp%253Drl%2526sig%253D0GIYbsXtuMr5iFtRmLJiBi6s16czX2%25252B2S8vlFFQuBwQ%25253D)|\r\n|[1586074](https://dev.azure.com/dnceng/public/_build/results?buildId=1586074)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 62499](https://github.com/dotnet/runtime/pull/62499)|net48-windows-Release-x86-Windows.10.Amd64.Client19H1.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-62499-merge-4a12bf8a5e9f4739ac/System.Diagnostics.EventLog.Tests/1/console.e0a8c85d.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-22T02%25253A51%25253A03Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DZ72t219xrvu%25252Fd2AEmylNVUXVlnnf5m7An6lBRvdat00%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-62499-merge-4a12bf8a5e9f4739ac/System.Diagnostics.EventLog.Tests/cc50ba12-af84-49d4-9d1c-e417b56840ca.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-22T02%25253A51%25253A03Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DZ72t219xrvu%25252Fd2AEmylNVUXVlnnf5m7An6lBRvdat00%25253D)|\r\n|[1585074](https://dev.azure.com/dnceng/public/_build/results?buildId=1585074)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64644](https://github.com/dotnet/runtime/pull/64644)|net6.0-windows-Release-x86-CoreCLR_checked-Windows.10.Amd64.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64644-merge-1e179c957ede419c9a/System.Diagnostics.EventLog.Tests/1/console.d2a97fa1.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-21T21%25253A47%25253A00Z%2526sr%253Dc%2526sp%253Drl%2526sig%253D1v4OCqlM%25252BznY1vRuj1hTuweRc0vSAKGqkKZMqN8Q8oQ%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64644-merge-1e179c957ede419c9a/System.Diagnostics.EventLog.Tests/343cfb68-ea6c-48cf-a38b-9765a1106e77.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-21T21%25253A47%25253A00Z%2526sr%253Dc%2526sp%253Drl%2526sig%253D1v4OCqlM%25252BznY1vRuj1hTuweRc0vSAKGqkKZMqN8Q8oQ%25253D)|\r\n|[1579644](https://dev.azure.com/dnceng/public/_build/results?buildId=1579644)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64279](https://github.com/dotnet/runtime/pull/64279)|net7.0-windows-Debug-x86-CoreCLR_checked-Windows.10.Amd64.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-6592cd7c34534101b5/System.Diagnostics.EventLog.Tests/1/console.76a2de90.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T04%25253A07%25253A51Z%2526sr%253Dc%2526sp%253Drl%2526sig%253D2s2vTnCDe4dEXqdQ7lOY1uA5fRDdUoNrrfENOvdoJ4E%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-6592cd7c34534101b5/System.Diagnostics.EventLog.Tests/6f99c713-27b9-47e7-8f42-20f6f66182c5.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T04%25253A07%25253A51Z%2526sr%253Dc%2526sp%253Drl%2526sig%253D2s2vTnCDe4dEXqdQ7lOY1uA5fRDdUoNrrfENOvdoJ4E%25253D)|\r\n|[1579644](https://dev.azure.com/dnceng/public/_build/results?buildId=1579644)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64279](https://github.com/dotnet/runtime/pull/64279)|net7.0-windows-Debug-x64-CoreCLR_release-Windows.81.Amd64.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-7b375d7b86494fa5a9/System.Diagnostics.EventLog.Tests/1/console.190857f0.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T04%25253A12%25253A33Z%2526sr%253Dc%2526sp%253Drl%2526sig%253D8JjvsekeOgiCsrBw0G6pZA1MVq6G7%25252FNZ1%25252BuxCEmIN8g%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-7b375d7b86494fa5a9/System.Diagnostics.EventLog.Tests/4b77be10-5231-4c9f-a75a-b96bd245095b.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T04%25253A12%25253A33Z%2526sr%253Dc%2526sp%253Drl%2526sig%253D8JjvsekeOgiCsrBw0G6pZA1MVq6G7%25252FNZ1%25252BuxCEmIN8g%25253D)|\r\n|[1579644](https://dev.azure.com/dnceng/public/_build/results?buildId=1579644)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64279](https://github.com/dotnet/runtime/pull/64279)|net7.0-windows-Debug-x64-CoreCLR_release-Windows.10.Amd64.Server19H1.ES.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-8028c29b3b5a4ac2b7/System.Diagnostics.EventLog.Tests/1/console.2c03e2d5.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T04%25253A12%25253A35Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DiOPASs%25252FpA41ndcVT0gmSaXufeulElL1mEB5b2AkQIm8%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-8028c29b3b5a4ac2b7/System.Diagnostics.EventLog.Tests/1d984080-7014-4a9b-bf01-4762b32920b9.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T04%25253A12%25253A35Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DiOPASs%25252FpA41ndcVT0gmSaXufeulElL1mEB5b2AkQIm8%25253D)|\r\n|[1579644](https://dev.azure.com/dnceng/public/_build/results?buildId=1579644)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64279](https://github.com/dotnet/runtime/pull/64279)|net7.0-windows-Debug-x64-CoreCLR_release-Windows.11.Amd64.ClientPre.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-1d297efb2e1f4cfeb0/System.Diagnostics.EventLog.Tests/1/console.871ebd62.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T04%25253A12%25253A37Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DoyJIJweMeW7NV3wDaqeLRVpm5eSvF7gG1S2xUjMWFL0%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-1d297efb2e1f4cfeb0/System.Diagnostics.EventLog.Tests/c41a5de5-e632-4ecf-bc4e-8bbe479990fd.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T04%25253A12%25253A37Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DoyJIJweMeW7NV3wDaqeLRVpm5eSvF7gG1S2xUjMWFL0%25253D)|\r\n|[1579644](https://dev.azure.com/dnceng/public/_build/results?buildId=1579644)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64279](https://github.com/dotnet/runtime/pull/64279)|net7.0-windows-Debug-x64-CoreCLR_checked-Windows.10.Amd64.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-7bd39d0733794f60b1/System.Diagnostics.EventLog.Tests/1/console.f8fb65fe.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T04%25253A16%25253A01Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DL1mAgZZjkmrsS9vvBQzHJndtzL0KmJylIxWJCzr27Gs%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-7bd39d0733794f60b1/System.Diagnostics.EventLog.Tests/1a769190-39e5-40aa-9f55-3d1e39c70d81.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T04%25253A16%25253A01Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DL1mAgZZjkmrsS9vvBQzHJndtzL0KmJylIxWJCzr27Gs%25253D)|\r\n|[1579644](https://dev.azure.com/dnceng/public/_build/results?buildId=1579644)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64279](https://github.com/dotnet/runtime/pull/64279)|net7.0-windows-Release-x86-CoreCLR_release-Windows.10.Amd64.Server19H1.ES.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-232a5fc4a2f5419da9/System.Diagnostics.EventLog.Tests/1/console.00a4035f.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T04%25253A18%25253A33Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DPIioN%25252Fm4lmg37on31ce2Fe%25252FG%25252Fha9aDo0GaUoaIsbu2s%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-232a5fc4a2f5419da9/System.Diagnostics.EventLog.Tests/2e171ea9-b238-4e12-ad7d-f75eb6dae7a4.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T04%25253A18%25253A33Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DPIioN%25252Fm4lmg37on31ce2Fe%25252FG%25252Fha9aDo0GaUoaIsbu2s%25253D)|\r\n|[1579644](https://dev.azure.com/dnceng/public/_build/results?buildId=1579644)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64279](https://github.com/dotnet/runtime/pull/64279)|net7.0-windows-Release-x86-CoreCLR_release-Windows.7.Amd64.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-8ea456c292b1439e96/System.Diagnostics.EventLog.Tests/1/console.32e2d727.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T04%25253A18%25253A34Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DXwJTt%25252B8snSOLbCsfWIgqQO9kqoFlREt%25252Flqz9qDJOKMA%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-8ea456c292b1439e96/System.Diagnostics.EventLog.Tests/3ecd3209-ad56-402c-b63c-c28f4bc4d1f3.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T04%25253A18%25253A34Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DXwJTt%25252B8snSOLbCsfWIgqQO9kqoFlREt%25252Flqz9qDJOKMA%25253D)|\r\n|[1579471](https://dev.azure.com/dnceng/public/_build/results?buildId=1579471)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64279](https://github.com/dotnet/runtime/pull/64279)|net7.0-windows-Debug-x64-CoreCLR_release-Windows.81.Amd64.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-ac95c12c5c18423eae/System.Diagnostics.EventLog.Tests/1/console.269a4837.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T01%25253A58%25253A01Z%2526sr%253Dc%2526sp%253Drl%2526sig%253D%25252Fg8RYbosoKTrZofQ9i89in9ielA1ZWM7lu1jmFqNnow%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-ac95c12c5c18423eae/System.Diagnostics.EventLog.Tests/6e799914-4134-4a38-a8d7-34779a186403.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T01%25253A58%25253A01Z%2526sr%253Dc%2526sp%253Drl%2526sig%253D%25252Fg8RYbosoKTrZofQ9i89in9ielA1ZWM7lu1jmFqNnow%25253D)|\r\n|[1579471](https://dev.azure.com/dnceng/public/_build/results?buildId=1579471)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64279](https://github.com/dotnet/runtime/pull/64279)|net7.0-windows-Debug-x64-CoreCLR_release-Windows.10.Amd64.Server19H1.ES.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-bb04b6ecbfd54ecd92/System.Diagnostics.EventLog.Tests/1/console.3bb132de.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T01%25253A58%25253A02Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DEz8sMe4taX1b4KRMz7QfMuBaGl2WQ4J6qdfBs3GsZtg%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-bb04b6ecbfd54ecd92/System.Diagnostics.EventLog.Tests/1aa10998-2fab-4778-bacc-cb1705af2fae.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T01%25253A58%25253A02Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DEz8sMe4taX1b4KRMz7QfMuBaGl2WQ4J6qdfBs3GsZtg%25253D)|\r\n|[1579471](https://dev.azure.com/dnceng/public/_build/results?buildId=1579471)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64279](https://github.com/dotnet/runtime/pull/64279)|net7.0-windows-Debug-x64-CoreCLR_release-Windows.11.Amd64.ClientPre.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-1687ad26b7ec43d1bc/System.Diagnostics.EventLog.Tests/1/console.202d10b3.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T01%25253A58%25253A03Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DfS3Hw7AQ%25252BJA%25252FcvNSi%25252BUkbZfLicUYfucsAvnEs6gDFqw%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-1687ad26b7ec43d1bc/System.Diagnostics.EventLog.Tests/fa0c3772-cc63-4f35-a1d5-75354374eca7.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T01%25253A58%25253A03Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DfS3Hw7AQ%25252BJA%25252FcvNSi%25252BUkbZfLicUYfucsAvnEs6gDFqw%25253D)|\r\n|[1579471](https://dev.azure.com/dnceng/public/_build/results?buildId=1579471)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64279](https://github.com/dotnet/runtime/pull/64279)|net7.0-windows-Debug-x86-CoreCLR_checked-Windows.10.Amd64.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-2478f64a203b482f86/System.Diagnostics.EventLog.Tests/1/console.0fc89bc2.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T01%25253A59%25253A14Z%2526sr%253Dc%2526sp%253Drl%2526sig%253Dlk57gYS10Qm7FwzuNCUJwvkzZVZYtTLX889vIsLW%25252BIs%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-2478f64a203b482f86/System.Diagnostics.EventLog.Tests/637353e2-4baa-459f-b52e-5a438173b569.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T01%25253A59%25253A14Z%2526sr%253Dc%2526sp%253Drl%2526sig%253Dlk57gYS10Qm7FwzuNCUJwvkzZVZYtTLX889vIsLW%25252BIs%25253D)|\r\n|[1579471](https://dev.azure.com/dnceng/public/_build/results?buildId=1579471)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64279](https://github.com/dotnet/runtime/pull/64279)|net7.0-windows-Release-x86-CoreCLR_release-Windows.10.Amd64.Server19H1.ES.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-00197ed18b1143b3b2/System.Diagnostics.EventLog.Tests/1/console.eabb1a10.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T02%25253A00%25253A54Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DbJ7a%25252F9q%25252FAXeyTh62jUicQUHDKDhOM6qtdl53nwj2uTo%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-00197ed18b1143b3b2/System.Diagnostics.EventLog.Tests/efef4cb6-3bef-4242-b583-40b8c3bb3478.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T02%25253A00%25253A54Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DbJ7a%25252F9q%25252FAXeyTh62jUicQUHDKDhOM6qtdl53nwj2uTo%25253D)|\r\n|[1579471](https://dev.azure.com/dnceng/public/_build/results?buildId=1579471)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64279](https://github.com/dotnet/runtime/pull/64279)|net7.0-windows-Release-x86-CoreCLR_release-Windows.7.Amd64.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-b0ea35146c8d4958ae/System.Diagnostics.EventLog.Tests/1/console.7ef23f4a.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T02%25253A00%25253A56Z%2526sr%253Dc%2526sp%253Drl%2526sig%253Do%25252BH7VZKt7dj1LYjhp8wNK2oCO6s2dtpM5qjnSCFWA%25252BA%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-b0ea35146c8d4958ae/System.Diagnostics.EventLog.Tests/ef77777c-88e3-4849-a0b6-e4401ddadf69.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T02%25253A00%25253A56Z%2526sr%253Dc%2526sp%253Drl%2526sig%253Do%25252BH7VZKt7dj1LYjhp8wNK2oCO6s2dtpM5qjnSCFWA%25252BA%25253D)|\r\n|[1579471](https://dev.azure.com/dnceng/public/_build/results?buildId=1579471)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64279](https://github.com/dotnet/runtime/pull/64279)|net7.0-windows-Debug-x64-CoreCLR_checked-Windows.10.Amd64.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-73c9fc3badb3455da8/System.Diagnostics.EventLog.Tests/1/console.536a1899.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T02%25253A04%25253A47Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DUGs9e0oLqabO6O%25252B4B3Dl0ANwgueq%25252B5HVIjZgwf3seMo%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-73c9fc3badb3455da8/System.Diagnostics.EventLog.Tests/a54c1411-25f2-4e2d-973d-72f1f3c3e843.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-18T02%25253A04%25253A47Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DUGs9e0oLqabO6O%25252B4B3Dl0ANwgueq%25252B5HVIjZgwf3seMo%25253D)|\r\n|[1573849](https://dev.azure.com/dnceng/public/_build/results?buildId=1573849)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64279](https://github.com/dotnet/runtime/pull/64279)|net7.0-windows-Release-x86-CoreCLR_release-Windows.10.Amd64.Server19H1.ES.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-5b8a1881efd140299a/System.Diagnostics.EventLog.Tests/1/console.54be1148.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-15T18%25253A48%25253A44Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DvCYKGQLKN8OIEw9GUCSNECoQJxuECG2Gov7Q9GV5rSs%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-5b8a1881efd140299a/System.Diagnostics.EventLog.Tests/14e37164-888c-4878-900e-ba8c1df46743.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-15T18%25253A48%25253A44Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DvCYKGQLKN8OIEw9GUCSNECoQJxuECG2Gov7Q9GV5rSs%25253D)|\r\n|[1573849](https://dev.azure.com/dnceng/public/_build/results?buildId=1573849)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64279](https://github.com/dotnet/runtime/pull/64279)|net7.0-windows-Release-x86-CoreCLR_release-Windows.7.Amd64.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-6f936d7ec3ae434499/System.Diagnostics.EventLog.Tests/1/console.fb5c332d.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-15T18%25253A48%25253A47Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DRViOFTCQ45e%25252FzKzcdvOvMBdnxC%25252Fl%25252BA%25252FegX5HmPj3DfU%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-6f936d7ec3ae434499/System.Diagnostics.EventLog.Tests/93f5a07e-ad51-46a6-a129-35a695fde797.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-15T18%25253A48%25253A47Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DRViOFTCQ45e%25252FzKzcdvOvMBdnxC%25252Fl%25252BA%25252FegX5HmPj3DfU%25253D)|\r\n|[1573849](https://dev.azure.com/dnceng/public/_build/results?buildId=1573849)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64279](https://github.com/dotnet/runtime/pull/64279)|net7.0-windows-Debug-x86-CoreCLR_checked-Windows.10.Amd64.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-fd7086989af942c3a4/System.Diagnostics.EventLog.Tests/1/console.77f933e8.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-15T19%25253A10%25253A56Z%2526sr%253Dc%2526sp%253Drl%2526sig%253Dz5Qh48OT%25252F%25252Fz%25252BSt6A0fYfpkrSVXoAzufjss5%25252BQZ%25252Bklqk%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-fd7086989af942c3a4/System.Diagnostics.EventLog.Tests/6350802f-caf2-4c71-b3b5-584f66c251ed.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-15T19%25253A10%25253A56Z%2526sr%253Dc%2526sp%253Drl%2526sig%253Dz5Qh48OT%25252F%25252Fz%25252BSt6A0fYfpkrSVXoAzufjss5%25252BQZ%25252Bklqk%25253D)|\r\n|[1573849](https://dev.azure.com/dnceng/public/_build/results?buildId=1573849)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64279](https://github.com/dotnet/runtime/pull/64279)|net7.0-windows-Debug-x64-CoreCLR_release-Windows.81.Amd64.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-cbd21158843447489b/System.Diagnostics.EventLog.Tests/1/console.f8c31283.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-15T19%25253A11%25253A09Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DxxRRr%25252BRCLXc3XepxLFypZhD98xEAjmqI0tbt5IIkFaU%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-cbd21158843447489b/System.Diagnostics.EventLog.Tests/5a8a31c8-c068-4937-9cdc-59548ea79099.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-15T19%25253A11%25253A09Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DxxRRr%25252BRCLXc3XepxLFypZhD98xEAjmqI0tbt5IIkFaU%25253D)|\r\n|[1573849](https://dev.azure.com/dnceng/public/_build/results?buildId=1573849)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64279](https://github.com/dotnet/runtime/pull/64279)|net7.0-windows-Debug-x64-CoreCLR_release-Windows.10.Amd64.Server19H1.ES.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-08cd217d27d4463e95/System.Diagnostics.EventLog.Tests/1/console.82e83abf.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-15T19%25253A11%25253A10Z%2526sr%253Dc%2526sp%253Drl%2526sig%253Dff1wNGGjHTeF%25252FwIngbgB9E0d51ETlXYKUytOxEschS8%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-08cd217d27d4463e95/System.Diagnostics.EventLog.Tests/76105e58-34ab-4031-bd7f-f184f13a80d0.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-15T19%25253A11%25253A10Z%2526sr%253Dc%2526sp%253Drl%2526sig%253Dff1wNGGjHTeF%25252FwIngbgB9E0d51ETlXYKUytOxEschS8%25253D)|\r\n|[1573849](https://dev.azure.com/dnceng/public/_build/results?buildId=1573849)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64279](https://github.com/dotnet/runtime/pull/64279)|net7.0-windows-Debug-x64-CoreCLR_release-Windows.11.Amd64.ClientPre.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-356c01bf1f0e42ed82/System.Diagnostics.EventLog.Tests/1/console.60d16fdd.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-15T19%25253A11%25253A11Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DmnhpgeODroa6id0iJ9cGXVJ%25252B6Ep8C8c0nBieDMHfjHM%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-356c01bf1f0e42ed82/System.Diagnostics.EventLog.Tests/143acfb4-212a-4a64-b337-5e2190ffbb4e.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-15T19%25253A11%25253A11Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DmnhpgeODroa6id0iJ9cGXVJ%25252B6Ep8C8c0nBieDMHfjHM%25253D)|\r\n|[1573849](https://dev.azure.com/dnceng/public/_build/results?buildId=1573849)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64279](https://github.com/dotnet/runtime/pull/64279)|net7.0-windows-Debug-x64-CoreCLR_checked-Windows.10.Amd64.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-393540951ba94c6cad/System.Diagnostics.EventLog.Tests/1/console.130d1940.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-15T19%25253A21%25253A54Z%2526sr%253Dc%2526sp%253Drl%2526sig%253D28OGbOfWUElH3%25252Fkk1A36Bx1CU%25252FcOUrWerSmUrwXUk%25252BI%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64279-merge-393540951ba94c6cad/System.Diagnostics.EventLog.Tests/37691c7b-4c7f-46c5-b09c-ec3d7735b6d7.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-15T19%25253A21%25253A54Z%2526sr%253Dc%2526sp%253Drl%2526sig%253D28OGbOfWUElH3%25252Fkk1A36Bx1CU%25252FcOUrWerSmUrwXUk%25252BI%25253D)|\r\n|[1573167](https://dev.azure.com/dnceng/public/_build/results?buildId=1573167)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64281](https://github.com/dotnet/runtime/pull/64281)|net7.0-windows-Debug-x64-CoreCLR_release-Windows.11.Amd64.ClientPre.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64281-merge-f810ebc87a704c2fa4/System.Diagnostics.EventLog.Tests/1/console.2a1d3139.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-15T12%25253A28%25253A14Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DGXuLA%25252BDRaLbMGei4QitDhOlciDCfu3sJAzXCvBpxNH4%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64281-merge-f810ebc87a704c2fa4/System.Diagnostics.EventLog.Tests/99dbb6b2-6ef2-4ecb-ac27-6cb7b9a44d2b.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-15T12%25253A28%25253A14Z%2526sr%253Dc%2526sp%253Drl%2526sig%253DGXuLA%25252BDRaLbMGei4QitDhOlciDCfu3sJAzXCvBpxNH4%25253D)|\r\n|[1569589](https://dev.azure.com/dnceng/public/_build/results?buildId=1569589)|[runtime](https://dnceng.visualstudio.com/public/_build?definitionId=686)|[PR 64105](https://github.com/dotnet/runtime/pull/64105)|net7.0-windows-Debug-x64-CoreCLR_release-Windows.11.Amd64.ClientPre.Open|[console.log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64105-merge-ec20540644894565b9/System.Diagnostics.EventLog.Tests/1/console.2574d663.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-13T23%25253A53%25253A31Z%2526sr%253Dc%2526sp%253Drl%2526sig%253D81MAFDBh3fPP71qqS1Jq1zdyzbESWn8ivUpja2bq1ko%25253D)|||[runclient.py](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-64105-merge-ec20540644894565b9/System.Diagnostics.EventLog.Tests/46b163cc-f40b-4f69-8110-91b12ce212fa.log?%3F%253Fsv%253D2019-07-07%2526se%253D2022-02-13T23%25253A53%25253A31Z%2526sr%253Dc%2526sp%253Drl%2526sig%253D81MAFDBh3fPP71qqS1Jq1zdyzbESWn8ivUpja2bq1ko%25253D)|\r\n\r\n\r\n\r\nBuild Result Summary\r\n|Day Hit Count|Week Hit Count|Month Hit Count|\r\n|---|---|---|\r\n|4|12|15|\r\n\r\n\u003c!-- runfo report end --\u003e\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003erunfoapp[bot]\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-System.Diagnostics`, `area-System.Diagnostics.EventLog`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003eFuture\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-02-04T01:21:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc49-VQT",
                                           "createdAt":  "2022-02-15T01:21:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "elinor-fung",
                                           "body":  "The runtime-extra-platforms rolling build just hit this too: https://dev.azure.com/dnceng/public/_build/results?buildId=1612202\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=44896660\u0026resultId=118843\u0026paneView=debug",
                                           "updatedAt":  "2022-02-15T01:21:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc49-VpQ",
                                           "createdAt":  "2022-02-15T01:24:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "Added blocking clean ci because it is blocking extra-platforms and main pipeline. Can we perhaps disable the test? ",
                                           "updatedAt":  "2022-02-15T01:24:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5B9v6j",
                                           "createdAt":  "2022-04-22T17:11:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Removing blocking - it was disabled\r\nhttps://github.com/dotnet/runtime/blob/0e6d607015bbf9b42c8914873071fecbd6dfacf0/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/ProviderMetadataTests.cs#L94\r\n\r\nAh, but it was not disabled for Arm64, and it\u0027s continuing to fail there. Needs disabling for that. \r\n\r\n\u003c!-- csl: https://engsrvprod.kusto.windows.net/engineeringdata --\u003e\r\n```kusto\r\nTestResults\r\n//| join kind=inner WorkItems on WorkItemId\r\n| join kind=inner Jobs on JobId\r\n| where Finished \u003e= now(-120d)\r\n| where Result == \"Fail\"\r\n| where Type == \"System.Diagnostics.Tests.ProviderMetadataTests\"\r\n//| where WorkItemFriendlyName startswith \"System.Diagnostics\"\r\n//| where  Method == \"GetProviderNames_AssertProperties\"\r\n//| where Source !startswith \"pr/\"\r\n| project \r\n  Pipeline = tostring(parse_json(Properties).DefinitionName),Result,\r\n  //Pipeline_Configuration = tostring(parse_json(Properties).configuration),\r\n  OS = QueueName,\r\n  Arch = tostring(parse_json(Properties).architecture),\r\n  //Test = Type1,\r\n  //Result,\r\n  Finished,\r\n  //Duration,\r\n  Method,\r\n  //Build = tostring(parse_json(Properties).BuildNumber),\r\n  Message, StackTrace\r\n  | where Pipeline startswith \"runtime\"\r\n  | summarize count() by Arch, Message, Method, StackTrace\r\n```\r\n\r\n|Arch|Message|Method|StackTrace|count_|\r\n|---|---|---|---|---|\r\n|x64|System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.|GetProviderNames_AssertProperties|   at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/EventLogException.cs:line 39\u003cbr\u003e   at System.Diagnostics.Tests.ProviderMetadataTests.GetProviderNames_AssertProperties() in /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/ProviderMetadataTests.cs:line 96|2|\r\n|x64|System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.|GetProviderNames_AssertProperties|   at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/EventLogException.cs:line 39\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.NativeWrapper.EvtGetObjectArraySize(EventLogHandle objectArray) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/NativeWrapper.cs:line 135\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.GetProviderListProperty(EventLogHandle providerHandle, EvtPublisherMetadataPropertyId metadataProperty) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 304\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.get_Keywords() in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 465\u003cbr\u003e   at System.Diagnostics.Tests.ProviderMetadataTests.GetProviderNames_AssertProperties() in /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/ProviderMetadataTests.cs:line 106|2|\r\n|x86|System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.|GetProviderNames_AssertProperties|   at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/EventLogException.cs:line 39\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.NativeWrapper.EvtGetObjectArraySize(EventLogHandle objectArray) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/NativeWrapper.cs:line 135\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.GetProviderListProperty(EventLogHandle providerHandle, EvtPublisherMetadataPropertyId metadataProperty) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 304\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.get_Keywords() in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 465\u003cbr\u003e   at System.Diagnostics.Tests.ProviderMetadataTests.GetProviderNames_AssertProperties() in /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/ProviderMetadataTests.cs:line 106|7|\r\n|x64|System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.|GetProviderNames_AssertProperties|   at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode)\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.NativeWrapper.EvtGetObjectArraySize(EventLogHandle objectArray)\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.GetProviderListProperty(EventLogHandle providerHandle, EvtPublisherMetadataPropertyId metadataProperty)\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.get_Keywords()\u003cbr\u003e   at System.Diagnostics.Tests.ProviderMetadataTests.GetProviderNames_AssertProperties() in /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/ProviderMetadataTests.cs:line 103|1|\r\n|x64|System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.|GetProviderNames_AssertProperties|   at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode)\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.NativeWrapper.EvtGetObjectArraySize(EventLogHandle objectArray)\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.GetProviderListProperty(EventLogHandle providerHandle, EvtPublisherMetadataPropertyId metadataProperty)\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.get_Keywords()\u003cbr\u003e   at System.Diagnostics.Tests.ProviderMetadataTests.GetProviderNames_AssertProperties() in /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/ProviderMetadataTests.cs:line 106|2|\r\n|x64|System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.|GetProviderNames_AssertProperties|   at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/EventLogException.cs:line 46\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.NativeWrapper.EvtGetObjectArraySize(EventLogHandle objectArray) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/NativeWrapper.cs:line 136\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.GetProviderListProperty(EventLogHandle providerHandle, EvtPublisherMetadataPropertyId metadataProperty) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 304\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.get_Keywords() in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 469\u003cbr\u003e   at System.Diagnostics.Tests.ProviderMetadataTests.GetProviderNames_AssertProperties() in /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/ProviderMetadataTests.cs:line 106|1|\r\n|x86|System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.|GetProviderNames_AssertProperties|   at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/EventLogException.cs:line 39\u003cbr\u003e   at System.Diagnostics.Tests.ProviderMetadataTests.GetProviderNames_AssertProperties() in /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/ProviderMetadataTests.cs:line 96|1|\r\n|arm64|System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.|GetProviderNames_AssertProperties|   at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/EventLogException.cs:line 39\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.NativeWrapper.EvtGetObjectArraySize(EventLogHandle objectArray) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/NativeWrapper.cs:line 135\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.GetProviderListProperty(EventLogHandle providerHandle, EvtPublisherMetadataPropertyId metadataProperty) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 304\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.get_Keywords() in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 465\u003cbr\u003e   at System.Diagnostics.Tests.ProviderMetadataTests.GetProviderNames_AssertProperties() in /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/ProviderMetadataTests.cs:line 108|3|\r\n|arm64|System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.|GetProviderNames_AssertProperties|   at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/EventLogException.cs:line 46\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.GetProviderListProperty(EventLogHandle providerHandle, EvtPublisherMetadataPropertyId metadataProperty) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 419\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.get_Keywords() in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 469\u003cbr\u003e   at System.Diagnostics.Tests.ProviderMetadataTests.GetProviderNames_AssertProperties() in /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/ProviderMetadataTests.cs:line 184|1|\r\n|arm64|System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.|GetProviderNames_AssertProperties|   at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/EventLogException.cs:line 39\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.NativeWrapper.EvtGetObjectArraySize(EventLogHandle objectArray) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/NativeWrapper.cs:line 135\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.GetProviderListProperty(EventLogHandle providerHandle, EvtPublisherMetadataPropertyId metadataProperty) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 304\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.get_Keywords() in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 465\u003cbr\u003e   at System.Diagnostics.Tests.ProviderMetadataTests.GetProviderNames_AssertProperties() in /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/ProviderMetadataTests.cs:line 108\u003cbr\u003e   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\u003cbr\u003e   at System.Reflection.RuntimeMethodInfo.InvokeNonEmitUnsafe(Object obj, IntPtr* arguments, Span`1 argsForTemporaryMonoSupport, BindingFlags invokeAttr) in /_/src/coreclr/System.Private.CoreLib/src/System/Reflection/RuntimeMethodInfo.CoreCLR.cs:line 379|9|\r\n|arm64|System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.|GetProviderNames_AssertProperties|   at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/EventLogException.cs:line 39\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.GetProviderListProperty(EventLogHandle providerHandle, EvtPublisherMetadataPropertyId metadataProperty) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 304\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.get_Keywords() in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 465\u003cbr\u003e   at System.Diagnostics.Tests.ProviderMetadataTests.GetProviderNames_AssertProperties() in /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/ProviderMetadataTests.cs:line 108\u003cbr\u003e   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\u003cbr\u003e   at System.Reflection.RuntimeMethodInfo.InvokeNonEmitUnsafe(Object obj, IntPtr* arguments, Span`1 argsForTemporaryMonoSupport, BindingFlags invokeAttr) in /_/src/coreclr/System.Private.CoreLib/src/System/Reflection/RuntimeMethodInfo.CoreCLR.cs:line 379|7|\r\n|arm64|System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.|GetProviderNames_AssertProperties|   at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/EventLogException.cs:line 46\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.NativeWrapper.EvtGetObjectArraySize(EventLogHandle objectArray) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/NativeWrapper.cs:line 136\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.GetProviderListProperty(EventLogHandle providerHandle, EvtPublisherMetadataPropertyId metadataProperty) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 419\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.get_Keywords() in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 469\u003cbr\u003e   at System.Diagnostics.Tests.ProviderMetadataTests.GetProviderNames_AssertProperties() in /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/ProviderMetadataTests.cs:line 184\u003cbr\u003e   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\u003cbr\u003e   at System.Reflection.RuntimeMethodInfo.InvokeNonEmitUnsafe(Object obj, IntPtr* arguments, Span`1 argsForTemporaryMonoSupport, BindingFlags invokeAttr) in /_/src/coreclr/System.Private.CoreLib/src/System/Reflection/RuntimeMethodInfo.CoreCLR.cs:line 383|2|\r\n|arm64|System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.|GetProviderNames_AssertProperties|   at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/EventLogException.cs:line 46\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.GetProviderListProperty(EventLogHandle providerHandle, EvtPublisherMetadataPropertyId metadataProperty) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 419\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.get_Keywords() in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 469\u003cbr\u003e   at System.Diagnostics.Tests.ProviderMetadataTests.GetProviderNames_AssertProperties() in /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/ProviderMetadataTests.cs:line 184\u003cbr\u003e   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\u003cbr\u003e   at System.Reflection.RuntimeMethodInfo.InvokeNonEmitUnsafe(Object obj, IntPtr* arguments, Span`1 argsForTemporaryMonoSupport, BindingFlags invokeAttr) in /_/src/coreclr/System.Private.CoreLib/src/System/Reflection/RuntimeMethodInfo.CoreCLR.cs:line 383|4|\r\n|arm64|System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.|GetProviderNames_AssertProperties|   at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/EventLogException.cs:line 39\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.GetProviderListProperty(EventLogHandle providerHandle, EvtPublisherMetadataPropertyId metadataProperty) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 419\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.get_Keywords() in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 469\u003cbr\u003e   at System.Diagnostics.Tests.ProviderMetadataTests.GetProviderNames_AssertProperties() in /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/ProviderMetadataTests.cs:line 184\u003cbr\u003e   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\u003cbr\u003e   at System.Reflection.RuntimeMethodInfo.InvokeNonEmitUnsafe(Object obj, IntPtr* arguments, Span`1 argsForTemporaryMonoSupport, BindingFlags invokeAttr) in /_/src/coreclr/System.Private.CoreLib/src/System/Reflection/RuntimeMethodInfo.CoreCLR.cs:line 379|1|\r\n|arm64|System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.|GetProviderNames_AssertProperties|   at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/EventLogException.cs:line 39\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.GetProviderListProperty(EventLogHandle providerHandle, EvtPublisherMetadataPropertyId metadataProperty) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 419\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.get_Keywords() in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 469\u003cbr\u003e   at System.Diagnostics.Tests.ProviderMetadataTests.GetProviderNames_AssertProperties() in /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/ProviderMetadataTests.cs:line 184\u003cbr\u003e   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\u003cbr\u003e   at System.Reflection.RuntimeMethodInfo.InvokeNonEmitUnsafe(Object obj, IntPtr* arguments, Span`1 argsForTemporaryMonoSupport, BindingFlags invokeAttr) in /_/src/coreclr/System.Private.CoreLib/src/System/Reflection/RuntimeMethodInfo.CoreCLR.cs:line 383|1|\r\n|arm64|System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.|GetProviderNames_AssertProperties|   at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/EventLogException.cs:line 39\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.NativeWrapper.EvtGetObjectArraySize(EventLogHandle objectArray) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/NativeWrapper.cs:line 135\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.GetProviderListProperty(EventLogHandle providerHandle, EvtPublisherMetadataPropertyId metadataProperty) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 304\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.get_Keywords() in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 465\u003cbr\u003e   at System.Diagnostics.Tests.ProviderMetadataTests.GetProviderNames_AssertProperties() in /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/ProviderMetadataTests.cs:line 108\u003cbr\u003e   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\u003cbr\u003e   at System.Reflection.RuntimeMethodInfo.InvokeNonEmitUnsafe(Object obj, IntPtr* arguments, Span`1 argsForTemporaryMonoSupport, BindingFlags invokeAttr)|9|\r\n|arm64|System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.|GetProviderNames_AssertProperties|   at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/EventLogException.cs:line 39\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.GetProviderListProperty(EventLogHandle providerHandle, EvtPublisherMetadataPropertyId metadataProperty) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 419\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.get_Keywords() in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 469\u003cbr\u003e   at System.Diagnostics.Tests.ProviderMetadataTests.GetProviderNames_AssertProperties() in /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/ProviderMetadataTests.cs:line 184\u003cbr\u003e   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\u003cbr\u003e   at System.Reflection.RuntimeMethodInfo.InvokeNonEmitUnsafe(Object obj, IntPtr* arguments, Span`1 argsForTemporaryMonoSupport, BindingFlags invokeAttr)|2|\r\n|arm64|System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.|GetProviderNames_AssertProperties|   at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/EventLogException.cs:line 39\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.GetProviderListProperty(EventLogHandle providerHandle, EvtPublisherMetadataPropertyId metadataProperty) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 304\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.get_Keywords() in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 465\u003cbr\u003e   at System.Diagnostics.Tests.ProviderMetadataTests.GetProviderNames_AssertProperties() in /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/ProviderMetadataTests.cs:line 108\u003cbr\u003e   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\u003cbr\u003e   at System.Reflection.RuntimeMethodInfo.InvokeNonEmitUnsafe(Object obj, IntPtr* arguments, Span`1 argsForTemporaryMonoSupport, BindingFlags invokeAttr)|6|\r\n|arm64|System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.|GetProviderNames_AssertProperties|   at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/EventLogException.cs:line 46\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.GetProviderListProperty(EventLogHandle providerHandle, EvtPublisherMetadataPropertyId metadataProperty) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 419\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.get_Keywords() in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 469\u003cbr\u003e   at System.Diagnostics.Tests.ProviderMetadataTests.GetProviderNames_AssertProperties() in /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/ProviderMetadataTests.cs:line 184\u003cbr\u003e   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\u003cbr\u003e   at System.Reflection.RuntimeMethodInfo.InvokeNonEmitUnsafe(Object obj, IntPtr* arguments, Span`1 argsForTemporaryMonoSupport, BindingFlags invokeAttr)|3|\r\n|arm64|System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.|GetProviderNames_AssertProperties|   at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/EventLogException.cs:line 39\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.NativeWrapper.EvtGetObjectArraySize(EventLogHandle objectArray) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/NativeWrapper.cs:line 135\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.GetProviderListProperty(EventLogHandle providerHandle, EvtPublisherMetadataPropertyId metadataProperty) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 304\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.get_Keywords() in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 465\u003cbr\u003e   at System.Diagnostics.Tests.ProviderMetadataTests.GetProviderNames_AssertProperties() in /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/ProviderMetadataTests.cs:line 184\u003cbr\u003e   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\u003cbr\u003e   at System.Reflection.RuntimeMethodInfo.InvokeNonEmitUnsafe(Object obj, IntPtr* arguments, Span`1 argsForTemporaryMonoSupport, BindingFlags invokeAttr)|1|\r\n|arm64|System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.|GetProviderNames_AssertProperties|   at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/EventLogException.cs:line 46\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.NativeWrapper.EvtGetObjectArraySize(EventLogHandle objectArray) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/NativeWrapper.cs:line 136\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.GetProviderListProperty(EventLogHandle providerHandle, EvtPublisherMetadataPropertyId metadataProperty) in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 419\u003cbr\u003e   at System.Diagnostics.Eventing.Reader.ProviderMetadata.get_Keywords() in /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/Reader/ProviderMetadata.cs:line 469\u003cbr\u003e   at System.Diagnostics.Tests.ProviderMetadataTests.GetProviderNames_AssertProperties() in /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/ProviderMetadataTests.cs:line 184\u003cbr\u003e   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\u003cbr\u003e   at System.Reflection.RuntimeMethodInfo.InvokeNonEmitUnsafe(Object obj, IntPtr* arguments, Span`1 argsForTemporaryMonoSupport, BindingFlags invokeAttr)|1|\r\n|x86|Assert.Contains() Failure\u003cbr\u003eNot found: (filter expression)\u003cbr\u003eIn value:  String[] [\"EventLogMessages.dll\", \"System.Diagnostics.EventLog.Messages.dll\"]|ProviderNameTests|   at System.Diagnostics.Tests.ProviderMetadataTests.ProviderNameTests(Boolean noProviderName) in /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/ProviderMetadataTests.cs:line 73|1|\r\n|x64|Assert.Contains() Failure\u003cbr\u003eNot found: (filter expression)\u003cbr\u003eIn value:  String[] [\"EventLogMessages.dll\", \"System.Diagnostics.EventLog.Messages.dll\"]|ProviderNameTests|   at System.Diagnostics.Tests.ProviderMetadataTests.ProviderNameTests(Boolean noProviderName) in /_/src/libraries/System.Diagnostics.EventLog/tests/System/Diagnostics/Reader/ProviderMetadataTests.cs:line 73|1|\r\n",
                                           "updatedAt":  "2022-04-22T17:11:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5B-upc",
                                           "createdAt":  "2022-04-22T22:44:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "test now fully disabled.",
                                           "updatedAt":  "2022-04-22T22:44:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5KQuM9",
                                           "createdAt":  "2022-09-13T20:04:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeffhandley",
                                           "body":  "@carlossanlop Do we still need this in the 7.0.0 milestone?",
                                           "updatedAt":  "2022-09-13T20:04:04Z"
                                       }
                                   ],
                         "totalCount":  9
                     },
        "title":  "system.diagnostics.tests.providermetadatatests.getprovidernames_assertproperties",
        "labels":  [
                       "disabled-test",
                       "area-System.Diagnostics.EventLog"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/73778",
        "createdAt":  "2022-08-11T14:59:06Z",
        "number":  73778,
        "author":  "DaneSpiritGOD",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-08-17T16:42:17Z",
        "body":  "As we can see in the implementation, there is no call to `Dispose(false)`. In general, there should be `~EventLogWatcher` to call it.\r\nThe for loop is unreachable and `eventBuffer` would never be released.\r\nAnother thing that is worth noting is there is a same piece of code (aka. for loop) at the end of `StopSubscribing()` method.\r\nMaybe they are duplicated.\r\n\r\n``` cs\r\nprotected virtual void Dispose(bool disposing)\r\n{\r\n    if (disposing)\r\n    {\r\n        StopSubscribing();\r\n        return;\r\n    }\r\n\r\n    for (int i = 0; i \u003c _numEventsInBuffer; i++)\r\n    {\r\n\r\n        if (_eventsBuffer[i] != IntPtr.Zero)\r\n        {\r\n            NativeWrapper.EvtClose(_eventsBuffer[i]);\r\n            _eventsBuffer[i] = IntPtr.Zero;\r\n        }\r\n    }\r\n\r\n    _numEventsInBuffer = 0;\r\n}\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSHq1mg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5IP1Qx",
                                           "createdAt":  "2022-08-11T14:59:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2022-08-11T14:59:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5IP1YD",
                                           "createdAt":  "2022-08-11T14:59:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DaneSpiritGOD",
                                           "body":  "I have received.",
                                           "updatedAt":  "2022-08-11T14:59:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5IP3OA",
                                           "createdAt":  "2022-08-11T15:05:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-diagnostics-eventlog\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nAs we can see in the implementation, there is no call to `Dispose(false)`. In general, there should be `~EventLogWatcher` to call it.\r\nThe for loop is unreachable and `eventBuffer` would never be released.\r\n\r\n``` cs\r\nprotected virtual void Dispose(bool disposing)\r\n{\r\n    if (disposing)\r\n    {\r\n        StopSubscribing();\r\n        return;\r\n    }\r\n\r\n    for (int i = 0; i \u003c _numEventsInBuffer; i++)\r\n    {\r\n\r\n        if (_eventsBuffer[i] != IntPtr.Zero)\r\n        {\r\n            NativeWrapper.EvtClose(_eventsBuffer[i]);\r\n            _eventsBuffer[i] = IntPtr.Zero;\r\n        }\r\n    }\r\n\r\n    _numEventsInBuffer = 0;\r\n}\r\n```\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eDaneSpiritGOD\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`untriaged`, `area-System.Diagnostics.EventLog`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-08-11T15:05:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Ieg-H",
                                           "createdAt":  "2022-08-15T22:58:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "This does appear to be an existing issue in `EventLogWatcher`.  The same bug was present in .NETFramework: https://referencesource.microsoft.com/#System.Core/System/Diagnostics/Eventing/Reader/EventLogWatcher.cs,275\r\n\r\n@DaneSpiritGOD has this caused an issue for you in your application or did you just notice it through code inspection?",
                                           "updatedAt":  "2022-08-15T22:59:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5IerWa",
                                           "createdAt":  "2022-08-16T00:07:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "DaneSpiritGOD",
                                           "body":  "\u003e This does appear to be an existing issue in `EventLogWatcher`. The same bug was present in .NETFramework: https://referencesource.microsoft.com/#System.Core/System/Diagnostics/Eventing/Reader/EventLogWatcher.cs,275\r\n\u003e \r\n\u003e @DaneSpiritGOD has this caused an issue for you in your application or did you just notice it through code inspection?\r\n\r\nThank you for your reply. I just noticed it through reading source code.",
                                           "updatedAt":  "2022-08-16T00:07:53Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "EventLogWatcher\u0027s Dispose has unreachable code which will lead to resource leak",
        "labels":  [
                       "bug",
                       "area-System.Diagnostics.EventLog"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/79515",
        "createdAt":  "2022-12-12T01:29:27Z",
        "number":  79515,
        "author":  "reveillesoftware",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-02-06T18:28:45Z",
        "body":  "### Discussed in https://github.com/dotnet/runtime/discussions/79510\r\n\r\n\u003cdiv type=\u0027discussions-op-text\u0027\u003e\r\n\r\n\u003csup\u003eOriginally posted by **reveillesoftware** December 11, 2022\u003c/sup\u003e\r\nReceive this error on Windows 2022 Server with all current Windows Server updates:  ERROR : We do not have 18 variants given for the UnsafeNativeMethods.EvtRenderFlags.EvtRenderEventValues flag. (System Properties)\u003cbr /\u003e at System.Diagnostics.Eventing.Reader.NativeWrapper.EvtRenderBufferWithContextSystem(EventLogHandle contextHandle, EventLogHandle eventHandle, EvtRenderFlags flag, SystemProperties systemProperties, Int32 SYSTEM_PROPERTY_COUNT) at System.Diagnostics.Eventing.Reader.EventLogRecord.PrepareSystemData() at System.Diagnostics.Eventing.Reader.EventLogRecord.get_TimeCreated() at ReveilleAPI.EventLogging.Client.CheckNewEventLog(String inComputerName, String inLog, String inSourceName, String inEventIDs, EventLogEntryTypeEx inEventType, Int32 inSecondsOld, String separator, Boolean\u0026 anyMessagesFound)\r\n\r\nThis was fixed in last year for WIndows 11, when will this be ported for Windows server 2022?  \r\n\r\nSee - https://github.com/dotnet/runtime/issues/60740\r\n\r\nThis prevents monitoring of the Windows Event log in Windows Server 2022 by 3rd party tools that use Windows API.\u003c/div\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOUJYrVQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5QNmbC",
                                           "createdAt":  "2022-12-12T01:29:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-diagnostics-eventlog\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Discussed in https://github.com/dotnet/runtime/discussions/79510\r\n\r\n\u003cdiv type=\u0027discussions-op-text\u0027\u003e\r\n\r\n\u003csup\u003eOriginally posted by **reveillesoftware** December 11, 2022\u003c/sup\u003e\r\nReceive this error on Windows 2022 Server with all current Windows Server updates:  ERROR : We do not have 18 variants given for the UnsafeNativeMethods.EvtRenderFlags.EvtRenderEventValues flag. (System Properties)\u003cbr /\u003e at System.Diagnostics.Eventing.Reader.NativeWrapper.EvtRenderBufferWithContextSystem(EventLogHandle contextHandle, EventLogHandle eventHandle, EvtRenderFlags flag, SystemProperties systemProperties, Int32 SYSTEM_PROPERTY_COUNT) at System.Diagnostics.Eventing.Reader.EventLogRecord.PrepareSystemData() at System.Diagnostics.Eventing.Reader.EventLogRecord.get_TimeCreated() at ReveilleAPI.EventLogging.Client.CheckNewEventLog(String inComputerName, String inLog, String inSourceName, String inEventIDs, EventLogEntryTypeEx inEventType, Int32 inSecondsOld, String separator, Boolean\u0026 anyMessagesFound)\r\n\r\nThis was fixed in last year for WIndows 11, when will this be ported for Windows server 2022?  \r\n\r\nSee - https://github.com/dotnet/runtime/issues/60740\r\n\r\nThis prevents monitoring of the Windows Event log in Windows Server 2022 by 3rd party tools that use Windows API.\u003c/div\u003e\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ereveillesoftware\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-System.Diagnostics.EventLog`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-12-12T01:29:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5QO_Ia",
                                           "createdAt":  "2022-12-12T08:50:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "from @Robo210:\r\n\r\n\u003e I can\u0027t personally provide any official support nor details about internal decisions. I can say, however, that if you have an avenue to make formal support requests to Microsoft, please do so and let them know that you are still waiting for this fix.\r\n\r\n@reveillesoftware can you please file an official support ticket? We don\u0027t have any control over when a corresponding patch will be released for Windows Server 2022.",
                                           "updatedAt":  "2022-12-12T08:50:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5QO_ML",
                                           "createdAt":  "2022-12-12T08:50:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "This issue has been marked `needs-author-action` and may be missing some important information.",
                                           "updatedAt":  "2022-12-12T08:50:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5QQNFv",
                                           "createdAt":  "2022-12-12T12:35:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "reveillesoftware",
                                           "body":  "Yes, we did file a MSFT support ticket via MSFT Azure team and they then indicated to post here.  What is the proper channel to open an official support ticket?",
                                           "updatedAt":  "2022-12-12T12:35:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5QQdSa",
                                           "createdAt":  "2022-12-12T13:23:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e What is the proper channel to open an official support ticket?\r\n\r\n@ericstj @danmoseley might know that",
                                           "updatedAt":  "2022-12-12T13:23:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5QQ158",
                                           "createdAt":  "2022-12-12T14:20:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Through standard product support channels.\n\nhttps://support.microsoft.com/en-us\n\n@robo210 do you have any update?",
                                           "updatedAt":  "2022-12-12T14:20:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5QQ4kx",
                                           "createdAt":  "2022-12-12T14:27:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "reveillesoftware",
                                           "body":  "Ok, we just looked at that support channel and it is asking for $499 US to create a .NET framework support case.  Given this is a known defect with a known solution that needs to be ported to Windows 2022, interesting it requires payment to simply open a separate product support case given we already pay for Azure developer support, Visual Studio plans, Microsoft Partner portal subscriptions, etc.\r\n\r\nThank You for the assistance.",
                                           "updatedAt":  "2022-12-12T14:27:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5QSdCI",
                                           "createdAt":  "2022-12-12T18:24:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "@reveillesoftware yeah, fair point. Reaching out internally to Windows folks.",
                                           "updatedAt":  "2022-12-12T18:24:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Qlaas",
                                           "createdAt":  "2022-12-14T18:54:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "reveillesoftware",
                                           "body":  "@danmoseley -thank you, appreciate if you receive feedback from your reach out.",
                                           "updatedAt":  "2022-12-14T18:54:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5QlitV",
                                           "createdAt":  "2022-12-14T19:14:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODbjAEA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "reveillesoftware",
                                                                               "createdAt":  "2022-12-14T19:22:13Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2022-12-14T20:03:02Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "prakashguru",
                                                                               "createdAt":  "2024-03-22T13:28:18Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "What I learned is that it\u0027s being considered for servicing at the moment but there\u0027s no decision or date to share. And there\u0027s no need to do anything special to +1 it. Posting or thumbs up on this issue is enough. I\u0027ll update here promptly if I learn more that I can share.",
                                           "updatedAt":  "2022-12-14T19:14:51Z"
                                       }
                                   ],
                         "totalCount":  10
                     },
        "title":  "System.Diagnostics.Eventing.Reader.EventLogRecord throws an InvalidOperationException on Windows 2022 Server with .NET 4.8 runtime",
        "labels":  [
                       "tracking-external-issue",
                       "area-System.Diagnostics.EventLog"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/89515",
        "createdAt":  "2023-07-26T17:40:04Z",
        "number":  89515,
        "author":  "sourdig",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-07-31T11:55:01Z",
        "body":  "### Description\n\nThis windows service is migrated recently from .Net framework 4.8 to .Net core (6.0). \r\nThe service is crashing on the system shutdown or reboot. This issue was not seen before migrating to .Net 6.0.\r\nThe crash is happening in System.Diagnostics.EventLog.dll. Details are added below.\r\n\n\n### Reproduction Steps\n\nAs mentioned above\n\n### Expected behavior\n\nThe windows service should not crash\n\n### Actual behavior\n\nThe windows service is crashing\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n.Net 6.0, Windows 10\r\nWindows Service architecture : x86\n\n### Other information\n\nCall Stack after Crash -\r\n \r\n  KERNELBASE.dll!75e1d8a2()\tUnknown\r\n  [Frames below may be incorrect and/or missing, no symbols loaded for KERNELBASE.dll]\t\r\n  [Managed to Native Transition]\t\r\n\u003eSystem.Diagnostics.EventLog.dll!System.Diagnostics.EventLogInternal.InternalWriteEvent(uint eventID, ushort category, \r\n  System.Diagnostics.EventLogEntryType type, string[] strings, byte[] rawData, string currentMachineName) Line 1397\t\r\n  System.Diagnostics.EventLog.dll!System.Diagnostics.EventLogInternal.WriteEntry(string message, \r\n  System.Diagnostics.EventLogEntryType type, int eventID, short category, byte[] rawData) Line 1317\t\r\n  System.Diagnostics.EventLog.dll!System.Diagnostics.EventLog.WriteEntry(string message, \r\n  System.Diagnostics.EventLogEntryType type) Line 988\t\r\n  System.ServiceProcess.ServiceController.dll!System.ServiceProcess.ServiceBase.WriteLogEntry(string message, \r\n  System.Diagnostics.EventLogEntryType type)\t\r\n  System.ServiceProcess.ServiceController.dll!System.ServiceProcess.ServiceBase.DeferredShutdown()\t\r\nSystem.ServiceProcess.ServiceController.dll!System.ServiceProcess.ServiceBase.ServiceCommandCallback.AnonymousMethod__3(object _)\t\r\n \tSystem.Private.CoreLib.dll!System.Threading.QueueUserWorkItemCallbackDefaultContext.Execute()\t\r\n \tSystem.Private.CoreLib.dll!System.Threading.ThreadPoolWorkQueue.Dispatch()\t\r\n \tSystem.Private.CoreLib.dll!System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart()\t\r\n \tSystem.Private.CoreLib.dll!System.Threading.Thread.StartCallback()\t\r\n \t[Native to Managed Transition]\t\r\n \tkernel32.dll!75b800c9()\t\r\n \tntdll.dll!776f7b4e()\t\r\n \tntdll.dll!776f7b1e()\t\r\n\r\nUnhandled exception at 0x75E1D8A2 (KERNELBASE.dll) ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOYtZ2pg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5iey_z",
                                           "createdAt":  "2023-07-26T17:40:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-diagnostics-eventlog\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\n\nThis windows service is migrated recently from .Net framework 4.8 to .Net core (6.0). \r\nThe service is crashing on the system shutdown or reboot. This issue was not seen before migrating to .Net 6.0.\r\nThe crash is happening in System.Diagnostics.EventLog.dll. Details are added below.\r\n\n\n### Reproduction Steps\n\nAs mentioned above\n\n### Expected behavior\n\nThe windows service should not crash\n\n### Actual behavior\n\nThe windows service is crashing\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n.Net 6.0, Windows 10\r\nWindows Service architecture : x86\n\n### Other information\n\nCall Stack after Crash -\r\n \r\n  KERNELBASE.dll!75e1d8a2()\tUnknown\r\n  [Frames below may be incorrect and/or missing, no symbols loaded for KERNELBASE.dll]\t\r\n  [Managed to Native Transition]\t\r\n\u003eSystem.Diagnostics.EventLog.dll!System.Diagnostics.EventLogInternal.InternalWriteEvent(uint eventID, ushort category, \r\n  System.Diagnostics.EventLogEntryType type, string[] strings, byte[] rawData, string currentMachineName) Line 1397\t\r\n  System.Diagnostics.EventLog.dll!System.Diagnostics.EventLogInternal.WriteEntry(string message, \r\n  System.Diagnostics.EventLogEntryType type, int eventID, short category, byte[] rawData) Line 1317\t\r\n  System.Diagnostics.EventLog.dll!System.Diagnostics.EventLog.WriteEntry(string message, \r\n  System.Diagnostics.EventLogEntryType type) Line 988\t\r\n  System.ServiceProcess.ServiceController.dll!System.ServiceProcess.ServiceBase.WriteLogEntry(string message, \r\n  System.Diagnostics.EventLogEntryType type)\t\r\n  System.ServiceProcess.ServiceController.dll!System.ServiceProcess.ServiceBase.DeferredShutdown()\t\r\nSystem.ServiceProcess.ServiceController.dll!System.ServiceProcess.ServiceBase.ServiceCommandCallback.AnonymousMethod__3(object _)\t\r\n \tSystem.Private.CoreLib.dll!System.Threading.QueueUserWorkItemCallbackDefaultContext.Execute()\t\r\n \tSystem.Private.CoreLib.dll!System.Threading.ThreadPoolWorkQueue.Dispatch()\t\r\n \tSystem.Private.CoreLib.dll!System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart()\t\r\n \tSystem.Private.CoreLib.dll!System.Threading.Thread.StartCallback()\t\r\n \t[Native to Managed Transition]\t\r\n \tkernel32.dll!75b800c9()\t\r\n \tntdll.dll!776f7b4e()\t\r\n \tntdll.dll!776f7b1e()\t\r\n\r\nUnhandled exception at 0x75E1D8A2 (KERNELBASE.dll) \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003esourdig\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`untriaged`, `area-System.Diagnostics.EventLog`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-07-26T17:40:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ifyz0",
                                           "createdAt":  "2023-07-26T21:11:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "carlossanlop",
                                           "body":  "Thanks for reporting, @sourdig. Some questions:\r\n- Are you able to repro this using .NET 8?\r\n- Any chance you can share code with a minimal repro?",
                                           "updatedAt":  "2023-07-26T21:11:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ify3p",
                                           "createdAt":  "2023-07-26T21:12:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "This issue has been marked `needs-author-action` and may be missing some important information.",
                                           "updatedAt":  "2023-07-26T21:12:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ihuyh",
                                           "createdAt":  "2023-07-27T06:49:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sourdig",
                                           "body":  "@carlossanlop I haven\u0027t tried to repro this issue on .NET 8 as we just completed the .NET 6 migration for this component. I am uploading the crash dump for this issue, hope this will be helpful in further analysis.  \r\nCrash Dump Link - https://drive.google.com/file/d/1WVxbgrVVQSiB3M88v1Mtxcpet5T910V1/view?usp=sharing\r\n",
                                           "updatedAt":  "2023-07-27T06:49:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5irhOR",
                                           "createdAt":  "2023-07-28T12:09:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sourdig",
                                           "body":  "@carlossanlop One more thing to consider is, we are using ServiceBase class (from .Net Framework) for this windows service and not the BackgroundService class which is used to create a new windows service in .Net core. The reason being, we have migrated this binary from .Net framework to .Net core. ",
                                           "updatedAt":  "2023-07-28T12:09:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5isWVO",
                                           "createdAt":  "2023-07-28T14:32:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "@sourdig  as well as trying on 7.0 or 8.0 it would also be good if you can simplify the service code down to the minimum required to repro the crash. It will likely be small enough to share here.",
                                           "updatedAt":  "2023-07-28T14:32:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5itRB5",
                                           "createdAt":  "2023-07-28T17:13:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sourdig",
                                           "body":  "Hi @danmoseley , @carlossanlop \r\nI am trying to create a sample service to reproduce this issue which can be shared here, but I am not able to repro the issue in the sample. Also we cannot move this service immediately to .Net 7 or 8 due to some constraints. Is it possible to deduce anything from the crash dump provided above? Is there any difference in the way service is handled at the time of shutdown between .Net 4.8 vs .Net 6 ? Any other inputs could be really helpful.",
                                           "updatedAt":  "2023-07-28T17:13:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5i1nam",
                                           "createdAt":  "2023-07-31T11:54:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sourdig",
                                           "body":  "@danmoseley , @carlossanlop \r\nIn .Net 6.0 CoreClr code, EventLogInternal.cs -\u003e InternalWriteEvent(), following code is causing the failure in writing the event log in case of system shutdown. Any idea why it would throw exception with advapi32.dll function to log event ?\r\n\r\n                bool success = Interop.Advapi32.ReportEvent(writeHandle, (short)type, category, eventID,\r\n                                                     sid, (short)strings.Length, rawData.Length, stringsRootHandle.AddrOfPinnedObject(), rawData);\r\n                if (!success)\r\n                {\r\n                    throw new Win32Exception();\r\n                }",
                                           "updatedAt":  "2023-07-31T11:55:01Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  ".Net 6.0 Windows service crashing on system shutdown or reboot",
        "labels":  [
                       "needs-further-triage",
                       "area-System.Diagnostics.EventLog"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/99997",
        "createdAt":  "2024-03-20T08:36:17Z",
        "number":  99997,
        "author":  "f-camera",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC2p7aA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "PablitoPaul",
                                            "createdAt":  "2024-03-20T10:49:49Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2024-07-23T09:48:28Z",
        "body":  "### Description\n\nThe file **System.Diagnostics.EventLog.Messages.dl** as present in NuGet package (e.g.) https://www.nuget.org/packages/System.Diagnostics.EventLog/8.0.0 is missing every detail. Since we need to include this in our product setup, this is an issue.\r\n```\r\nPS C:\\\u003e (Get-Item .\\System.Diagnostics.EventLog.Messages.dll).VersionInfo\r\n\r\nProductVersion   FileVersion      FileName\r\n--------------   -----------      --------\r\n                                  System.Diagnostics.EventLog.Messages.dll\r\n```\r\nby comparison, the other dll in the same package\r\n```\r\nPS C:\\\u003e (Get-Item .\\System.Diagnostics.EventLog.dll).VersionInfo\r\n\r\nProductVersion   FileVersion      FileName\r\n--------------   -----------      --------\r\n8.0.0+5535e31... 8.0.23.53103     System.Diagnostics.EventLog.dll\r\n```\r\n\r\nIs it possible to have the dll marked with the corresponding resources?\r\nAlternatively, is there a way to \"patch\" the file without breaking it?\r\nThanks.\n\n### Reproduction Steps\n\n1. Download the released package (e.g. https://www.nuget.org/packages/System.Diagnostics.EventLog/8.0.0 ),\r\n2. unpack it\r\n3. inspect dll details\n\n### Expected behavior\n\ndlls have correct File Version\n\n### Actual behavior\n\n System.Diagnostics.EventLog.Messages.dl doesn\u0027t have \n\n### Regression?\n\nI sampled older releases (e.g. 7.0.0 and 6.0.0) and in those packages the dll doesn\u0027t have the File version. So I think it can\u0027t be claimed being a regression.\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhcwwvQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc53v4FR",
                                           "createdAt":  "2024-03-20T08:40:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-diagnostics-eventlog\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-03-20T08:40:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc53wEbV",
                                           "createdAt":  "2024-03-20T09:13:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichalStrehovsky",
                                           "body":  "This DLL is built here: https://github.com/dotnet/runtime/tree/main/src/libraries/System.Diagnostics.EventLog/src/Messages\r\n\r\nThe build of it is convoluted due to the reasons explained there. Because the CSPROJ file specifies a Win32Resource element, the C# compiler doesn\u0027t generate the file version info. It\u0027s probably not entirely trivial to add the version info.\r\n\r\n\u003e Alternatively, is there a way to \"patch\" the file without breaking it?\r\n\r\nIf you\u0027re okay with patching it (and invalidating the Authenticode signature on the file), you can use a tool such as ResHacker. In ResHacker, open the System.Diagnostics.EventLog.dll file and save the Version info resource to a RES file. Then open System.Diagnostics.EventLog.Messages.dll in ResHacker and add the version info resource from the RES file. Click save, done.",
                                           "updatedAt":  "2024-03-20T09:13:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc53-3MQ",
                                           "createdAt":  "2024-03-21T16:46:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "f-camera",
                                           "body":  "Thanks @MichalStrehovsky !\r\nI\u0027m not much an expert, but let me ask one more question: would it be feasible to have the Messages dll have at least fixed version numbers instead of nothing at all?\r\n\r\nI didn\u0027t try myself, but could the https://github.com/dotnet/runtime/blob/main/src/libraries/System.Diagnostics.EventLog/src/Messages/EventLogMessages.rc file have effective version blocks?",
                                           "updatedAt":  "2024-03-21T16:46:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc53-9PM",
                                           "createdAt":  "2024-03-21T16:53:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichalStrehovsky",
                                           "body":  "\u003e Thanks @MichalStrehovsky ! I\u0027m not much an expert, but let me ask one more question: would it be feasible to have the Messages dll have at least fixed version numbers instead of nothing at all?\r\n\u003e \r\n\u003e I didn\u0027t try myself, but could the https://github.com/dotnet/runtime/blob/main/src/libraries/System.Diagnostics.EventLog/src/Messages/EventLogMessages.rc file have effective version blocks?\r\n\r\nI assume you have a requirement to include a version number in all files you ship for a reason. Would a dummy version number that doesn\u0027t match the `AssemblyFileVersionAttribute` inside the assembly (that has the actual version) be an improvement?",
                                           "updatedAt":  "2024-03-21T16:53:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc54IWf5",
                                           "createdAt":  "2024-03-22T16:25:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "f-camera",
                                           "body":  "\u003e Would a dummy version number that doesn\u0027t match the `AssemblyFileVersionAttribute` inside the assembly (that has the actual version) be an improvement?\r\n\r\nIt would improve a lot, thanks. The case here is a strict check from a setup framework: it is required to have FileVersion.\r\nWe are adopting the files packaged in https://www.nuget.org/packages/System.Diagnostics.EventLog/8.0.0 ",
                                           "updatedAt":  "2024-03-22T16:25:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc54Ptc0",
                                           "createdAt":  "2024-03-25T07:32:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichalStrehovsky",
                                           "body":  "\u003e \u003e Would a dummy version number that doesn\u0027t match the `AssemblyFileVersionAttribute` inside the assembly (that has the actual version) be an improvement?\r\n\u003e \r\n\u003e It would improve a lot, thanks. The case here is a strict check from a setup framework: it is required to have FileVersion. We are adopting the files packaged in https://www.nuget.org/packages/System.Diagnostics.EventLog/8.0.0\r\n\r\nHonest question: if a non-sensical version is okay with your setup framework policies, why is a version needed at all? If the setup framework sees two _different_ binaries that have the _same version_, would it know to do the right thing? And if so, why it can\u0027t do the same thing if the version is not present at all?",
                                           "updatedAt":  "2024-03-25T07:32:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6FYbHj",
                                           "createdAt":  "2024-07-18T23:28:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "I think we could give it a hardcoded version if that\u0027s helpful.  We\u0027d just need to add the version resource to the RC and regenerate it.  If we ever needed to regenerate it, we could include incrementing that version in our process.  It would be \"lying\" about version in that rebuilds wouldn\u0027t have new versions, but it might be better than no version at all.\r\n\r\nIt\u0027s a bummer CSC can\u0027t merge resources.  We have hacky ways of getting a version resource that updates - see https://github.com/dotnet/runtime/blob/57f870f909dbfad35142e5aaa6e681464de4f439/src/coreclr/.nuget/Microsoft.NET.Sdk.IL/Microsoft.NET.Sdk.IL.targets.template#L71-L111\r\nBut since we\u0027d need to both have that version *and* have the native binary section we\u0027d probably need to write our own tool to do that.\r\n",
                                           "updatedAt":  "2024-07-18T23:28:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6FzDC9",
                                           "createdAt":  "2024-07-23T09:48:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "andrewimcclement",
                                           "body":  "In a similar vein, I see that System.Diagnostics.EventLog.Messages.dll is missing copyright (mentioned as \"additional resources\" in the original post).",
                                           "updatedAt":  "2024-07-23T09:48:28Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "System.Diagnostics.EventLog.Messages.dll doesn\u0027t have fileversion and other resources",
        "labels":  [
                       "enhancement",
                       "area-System.Diagnostics.EventLog"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/104053",
        "createdAt":  "2024-06-26T17:44:14Z",
        "number":  104053,
        "author":  "omajid",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-18T16:22:27Z",
        "body":  "https://github.com/dotnet/runtime/blob/9317db0695918f74d8e2308bbe4c2f06cc3dea49/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/EventLog.cs#L651-L664\r\n\r\nIn the two conditions, we save the just-created `log` object. Should we call `log.Dispose()` if neither of those branches are taken?",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhVY7_g==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6Cq69E",
                                           "createdAt":  "2024-06-26T17:44:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-diagnostics-eventlog\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-06-26T17:44:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6FVi34",
                                           "createdAt":  "2024-07-18T16:20:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "If we create a disposable object and don\u0027t return it, then we should dispose it.  If we still return it, then it should be the caller\u0027s responsibility to dispose.\r\n\r\nHere we create it but don\u0027t expose it, so it could be disposed.  Perhaps the original authors here \"knew\" that no disposable resources would be created.  \r\n\r\nI don\u0027t see any disposable resources created in https://github.com/dotnet/runtime/blob/351926a4e39179592432e59caa6a61e00f0bcb92/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/EventLogInternal.cs#L112-L129\r\n\r\nSo probably this isn\u0027t an actual leak, but could be updated.  @omajid did you notice any actual leak here?",
                                           "updatedAt":  "2024-07-18T16:20:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6FVjv-",
                                           "createdAt":  "2024-07-18T16:22:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "omajid",
                                           "body":  "\u003e did you notice any actual leak here?\r\n\r\nNo. It was flagged by a code scanner.",
                                           "updatedAt":  "2024-07-18T16:22:26Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Should we dispose EventLog if there was an Interop.Errors.ERROR_INVALID_PARAMETER?",
        "labels":  [
                       "question",
                       "needs-further-triage",
                       "area-System.Diagnostics.EventLog"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/119153",
        "createdAt":  "2025-08-27T23:28:36Z",
        "number":  119153,
        "author":  "JulieLeeMSFT",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-08T15:35:35Z",
        "body":  "Failed in: [runtime-coreclr libraries-pgo](https://dev.azure.com/dnceng-public/public/_build?definitionId=145\u0026_a=summary)/[20250824.1](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1130689)\n\nFailed tests:\n```\nnet10.0-windows-Release-x86-jitosr_stress-Windows.10.Amd64.Open\n- System.Diagnostics.Tests.EventLogWriteEntryTests.WriteWithoutExistingSource\n- System.Diagnostics.Tests.EventLogWriteEntryTests.WriteEventMessageValues_OutOfRange\n```\n\nError message:\n```\nStarting:    System.Diagnostics.EventLog.Tests (parallel test collections = on [4 threads], stop on fail = off)\n    System.Diagnostics.Tests.EventLogWriteEntryTests.WriteWithoutExistingSource [FAIL]\n      System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n      Stack Trace:\n        /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/Win32.cs(308,0): at System.Security.AccessControl.Win32.SetSecurityInfo(ResourceType type, String name, SafeHandle handle, SecurityInfos securityInformation, SecurityIdentifier owner, SecurityIdentifier group, GenericAcl sacl, GenericAcl dacl)\n        /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs(263,0): at System.Security.AccessControl.NativeObjectSecurity.Persist(String name, SafeHandle handle, AccessControlSections includeSections, Object exceptionContext)\n        /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs(32,0): at System.Diagnostics.NetFrameworkUtils.EnterMutexWithoutGlobal(String mutexName, Mutex\u0026 mutex)\n        /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs(19,0): at System.Diagnostics.NetFrameworkUtils.EnterMutex(String name, Mutex\u0026 mutex)\n        /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/EventLog.cs(446,0): at System.Diagnostics.EventLog.DeleteEventSource(String source, String machineName)\n        /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/EventLog.cs(433,0): at System.Diagnostics.EventLog.DeleteEventSource(String source)\n        /_/src/libraries/System.Diagnostics.EventLog/tests/EventLogTests/EventLogWriteEntryTests.cs(392,0): at System.Diagnostics.Tests.EventLogWriteEntryTests.WriteWithoutExistingSource()\n        /_/src/coreclr/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.CoreCLR.cs(36,0): at System.Reflection.MethodBaseInvoker.InterpretedInvoke_Method(Object obj, IntPtr* args)\n        /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs(57,0): at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)\n    System.Diagnostics.Tests.EventLogWriteEntryTests.WriteEventMessageValues_OutOfRange [FAIL]\n      System.AggregateException : One or more errors occurred. (Assert.Throws() Failure: Exception type was not an exact match\n      Expected: typeof(System.ArgumentException)\n      Actual:   typeof(System.UnauthorizedAccessException)) (Assert.Throws() Failure: Exception type was not an exact match\n    ...\n    Stack Trace:\n        /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs(54,0): at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName)\n        /_/src/libraries/System.Diagnostics.EventLog/tests/Helpers.cs(40,0): at System.Diagnostics.Tests.Helpers.Retry[T](Func`1 func)\n        /_/src/libraries/System.Diagnostics.EventLog/tests/EventLogTests/EventLogWriteEntryTests.cs(378,0): at System.Diagnostics.Tests.EventLogWriteEntryTests.WriteEventMessageValues_OutOfRange()\n           at System.RuntimeMethodHandle.InvokeMethod(ObjectHandleOnStack target, Void** arguments, ObjectHandleOnStack sig, BOOL isConstructor, ObjectHandleOnStack result)\n           at System.RuntimeMethodHandle.InvokeMethod(ObjectHandleOnStack target, Void** arguments, ObjectHandleOnStack sig, BOOL isConstructor, ObjectHandleOnStack result)\n        /_/src/coreclr/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.CoreCLR.cs(36,0): at System.Reflection.MethodBaseInvoker.InterpretedInvoke_Method(Object obj, IntPtr* args)\n        /_/src/libraries/System.Private.CoreLib/src/System/Reflection/RuntimeMethodInfo.cs(126,0): at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\n        ----- Inner Stack Trace #1 (Xunit.Sdk.ThrowsException) -----\n        /_/src/libraries/System.Diagnostics.EventLog/tests/EventLogTests/EventLogWriteEntryTests.cs(378,0): at System.Diagnostics.Tests.EventLogWriteEntryTests.\u003c\u003ec__DisplayClass19_0.\u003cWriteEventMessageValues_OutOfRange\u003eb__0()\n        /_/src/libraries/System.Diagnostics.EventLog/tests/Helpers.cs(42,0): at System.Diagnostics.Tests.Helpers.\u003c\u003ec__DisplayClass10_0`1.\u003cRetry\u003eb__0()\n        /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs(45,0): at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName)\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOwoD0bQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc7Ah6ka",
                                           "createdAt":  "2025-08-27T23:30:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-diagnostics-eventlog\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-08-27T23:30:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7CTtEV",
                                           "createdAt":  "2025-09-05T22:40:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AndyAyersMS",
                                           "body":  "Similar to https://github.com/dotnet/runtime/issues/116014.\n\n@tommcdon @noahfalk any ideas on what this could be? It seems to be x86 only.",
                                           "updatedAt":  "2025-09-05T22:40:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7CgPRt",
                                           "createdAt":  "2025-09-06T21:26:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "noahfalk",
                                           "body":  "Not sure offhand. This is an old wrapper for the win32 EventLog API that @jeffhandley\u0027s team owns. The test is marked as only running elevated but I assume something is still out of sync between the permissions it has and the permissions it needs to call the API successfully.\n\n@dotnet/area-system-diagnostics-eventlog - can you take a look at this?",
                                           "updatedAt":  "2025-09-06T21:26:54Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Failed test: System.Diagnostics.Tests.EventLogWriteEntryTests.WriteWithoutExistingSource",
        "labels":  [
                       "blocking-clean-ci-optional",
                       "area-System.Diagnostics.EventLog"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/119478",
        "createdAt":  "2025-09-09T02:23:45Z",
        "number":  119478,
        "author":  "elinor-fung",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T22:04:36Z",
        "body":  "## Build Information\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=1142533\nBuild error leg or test failing: System.Diagnostics.Tests.EventLogSessionTests.ClearLog_LogExists_Success\nPull request: https://github.com/dotnet/runtime/pull/119473\n\n```\nSystem.Diagnostics.Tests.EventLogMessagesTests.CanReadAndWriteMessages [FAIL]\n  System.UnauthorizedAccessException : Attempted to perform an unauthorized operation.\n  Stack Trace:\n    /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/Win32.cs(308,0): at System.Security.AccessControl.Win32.SetSecurityInfo(ResourceType type, String name, SafeHandle handle, SecurityInfos securityInformation, SecurityIdentifier owner, SecurityIdentifier group, GenericAcl sacl, GenericAcl dacl)\n    /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs(263,0): at System.Security.AccessControl.NativeObjectSecurity.Persist(String name, SafeHandle handle, AccessControlSections includeSections, Object exceptionContext)\n    /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs(368,0): at System.Security.AccessControl.NativeObjectSecurity.Persist(SafeHandle handle, AccessControlSections includeSections, Object exceptionContext)\n    /_/src/libraries/System.Security.AccessControl/src/System/Security/AccessControl/NativeObjectSecurity.cs(361,0): at System.Security.AccessControl.NativeObjectSecurity.Persist(SafeHandle handle, AccessControlSections includeSections)\n    /_/src/libraries/System.Threading.AccessControl/src/System/Security/AccessControl/MutexSecurity.cs(178,0): at System.Security.AccessControl.MutexSecurity.Persist(SafeWaitHandle handle)\n    /_/src/libraries/System.Threading.AccessControl/src/System/Threading/ThreadingAclExtensions.cs(35,0): at System.Threading.ThreadingAclExtensions.SetAccessControl(Mutex mutex, MutexSecurity mutexSecurity)\n    /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs(32,0): at System.Diagnostics.NetFrameworkUtils.EnterMutexWithoutGlobal(String mutexName, Mutex\u0026 mutex)\n    /_/src/libraries/Common/src/System/Diagnostics/NetFrameworkUtils.cs(19,0): at System.Diagnostics.NetFrameworkUtils.EnterMutex(String name, Mutex\u0026 mutex)\n    /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/EventLog.cs(446,0): at System.Diagnostics.EventLog.DeleteEventSource(String source, String machineName)\n    /_/src/libraries/System.Diagnostics.EventLog/src/System/Diagnostics/EventLog.cs(433,0): at System.Diagnostics.EventLog.DeleteEventSource(String source)\n    /_/src/libraries/System.Diagnostics.EventLog/tests/EventLogMessagesTests.cs(82,0): at System.Diagnostics.Tests.EventLogMessagesTests.CanReadAndWriteMessages()\n    /_/src/coreclr/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.CoreCLR.cs(36,0): at System.Reflection.MethodBaseInvoker.InterpretedInvoke_Method(Object obj, IntPtr* args)\n    /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs(57,0): at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)\n```\n\u003c!-- Error message template  --\u003e\n## Error Message\n\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssueJsonStepByStep.md).\n\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\n\n```json\n{\n  \"ErrorMessage\": [\"System.Diagnostics.Tests.EventLog\", \"System.UnauthorizedAccessException : Attempted to perform an unauthorized operation\"],\n  \"BuildRetry\": false,\n  \"ExcludeConsoleLog\": false\n}\n```\n\n\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142533\r\n**Error message validated:** `[System.Diagnostics.Tests.EventLog System.UnauthorizedAccessException : Attempted to perform an unauthorized operation`]\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 9/9/2025 2:24:07 AM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n\r\n|Build|Definition|Test|Pull Request|\r\n|---|---|---|---|\r\n|[1142533](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142533)|dotnet/runtime|[System.Diagnostics.Tests.EventLogMessagesTests.CanReadAndWriteMessages](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142533\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31497124\u0026resultId=120755)|dotnet/runtime#119473|\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|1|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOwtNfZQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc7C01wl",
                                           "createdAt":  "2025-09-09T02:24:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-security, @bartonjs, @vcsjones\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-09-09T02:24:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7C016D",
                                           "createdAt":  "2025-09-09T02:25:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "elinor-fung",
                                           "body":  "Likely related to or the same as https://github.com/dotnet/runtime/issues/116014",
                                           "updatedAt":  "2025-09-09T02:25:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7C019l",
                                           "createdAt":  "2025-09-09T02:25:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-diagnostics-eventlog\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-09-09T02:25:14Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "System.Diagnostics.Tests.EventLog tests failing with System.UnauthorizedAccessException : Attempted to perform an unauthorized operation",
        "labels":  [
                       "blocking-clean-ci",
                       "untriaged",
                       "area-System.Diagnostics.EventLog",
                       "Known Build Error"
                   ]
    }
]
