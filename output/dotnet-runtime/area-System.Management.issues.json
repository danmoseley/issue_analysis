[
    {
        "url":  "https://github.com/dotnet/runtime/issues/23918",
        "createdAt":  "2017-10-21T16:11:13Z",
        "number":  23918,
        "author":  "4creators",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC2thvA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "KamranShahid",
                                            "createdAt":  "2018-12-19T11:26:27Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "surfmuggle",
                                            "createdAt":  "2019-02-12T14:55:52Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "lynnboy",
                                            "createdAt":  "2019-05-21T08:02:11Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "M05pr1mty",
                                            "createdAt":  "2019-07-18T14:12:05Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "reflectronic",
                                            "createdAt":  "2020-01-31T14:19:26Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Jinjinov",
                                            "createdAt":  "2020-04-04T15:35:54Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "pedoc",
                                            "createdAt":  "2020-09-21T09:11:48Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Greg-Smulko",
                                            "createdAt":  "2022-11-03T11:16:09Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "milochen0418",
                                            "createdAt":  "2024-03-22T09:34:49Z"
                                        }
                                    ],
                          "totalCount":  9
                      },
        "updatedAt":  "2025-05-22T08:58:47Z",
        "body":  "Effort to bring System.Management to .NET Core is bringing it\u0027s first results see PR dotnet/corefx#24719 and it could be a good opportunity to investigate possibility to support this library on Linux. This is becoming possible due to continuous work on implementing CIM and WMI infrastructure in Linux kernel see [Windows Management Instrumentation Now A Formal Bus With Linux 4.13](https://www.phoronix.com/scan.php?page=news_item\u0026px=Windows-WMI-Linux-4.13). The requests for hardware query APIs are not that uncommon see dotnet/runtime#22948 ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOrOEzmA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMzOTA1MDkzNw==",
                                           "createdAt":  "2017-10-24T16:31:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODbhc9Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "milochen0418",
                                                                               "createdAt":  "2024-03-22T09:34:52Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "We would potentially be interested in contributions to add Linux support for the existing WMI surface area. We don\u0027t plan to modify the surface area though: this is quite an old API.",
                                           "updatedAt":  "2017-10-24T16:31:19Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMzOTIyNzc0NQ==",
                                           "createdAt":  "2017-10-25T06:26:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "4creators",
                                           "body":  "Linking issue to umbrella System.Managment porting issue dotnet/runtime#19785 ",
                                           "updatedAt":  "2017-10-25T06:26:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM0NDMwMTk0Mw==",
                                           "createdAt":  "2017-11-14T15:50:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeff-powell",
                                           "body":  "It would definitely be nice to have the ability to issue remote WQLs for performance monitoring, etc. from a Linux system.  .Net really only provides a couple options, CimSession (in MS.Mgmt.Infrastructure) or ManagementScope here in System.Management.\r\n\r\nI would be willing to jump in and help build this out; does anyone have an ideal of what level of involvement this will require?",
                                           "updatedAt":  "2017-11-14T15:50:13Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ0Nzc2MzkyOQ==",
                                           "createdAt":  "2018-12-17T08:40:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODbhdJQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "KamranShahid",
                                                                               "createdAt":  "2018-12-19T11:34:18Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "M05pr1mty",
                                                                               "createdAt":  "2019-07-18T14:12:09Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "walljm",
                                                                               "createdAt":  "2023-10-05T17:41:24Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "milochen0418",
                                                                               "createdAt":  "2024-03-22T09:35:05Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "tomfricker",
                                           "body":  "Support for WMI in Linux would be extremely useful for a current project. Currently creating a console based app that scans a network looking for management information to investigate security flaws, such as out of date software. Linux was first choice due to lightweight server deployment with no need for front end.",
                                           "updatedAt":  "2018-12-17T08:40:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ0ODU2ODk2NA==",
                                           "createdAt":  "2018-12-19T11:55:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB3Cq1A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "surfmuggle",
                                                                               "createdAt":  "2019-02-12T18:05:41Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "AdamCaviness",
                                                                               "createdAt":  "2021-08-19T17:12:22Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "KamranShahid",
                                           "body":  "Some one know any third party module/nuget package which will help extracting hardware info of linux system?",
                                           "updatedAt":  "2018-12-19T11:55:59Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ0ODYzMzUyMw==",
                                           "createdAt":  "2018-12-19T15:23:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "I have seen two requests in this area \r\n1. Run WMI queries across a network from an app running on Linux\r\n1. Use WMI to interrogate Linux hardware /OS\r\n\r\nCan someone more familiar with the various 3rd party libraries, kernel support etc tell me whether those should be tracked as separate issues?",
                                           "updatedAt":  "2018-12-19T15:23:53Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ0ODY1NjE5MQ==",
                                           "createdAt":  "2018-12-19T16:24:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODIwSuQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "walljm",
                                                                               "createdAt":  "2023-10-05T17:41:38Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "tomfricker",
                                           "body":  "\u003e I have seen two requests in this area\r\n\u003e \r\n\u003e 1. Run WMI queries across a network from an app running on Linux\r\n\u003e 2. Use WMI to interrogate Linux hardware /OS\r\n\u003e \r\n\u003e Can someone more familiar with the various 3rd party libraries, kernel support etc tell me whether those should be tracked as separate issues?\r\n\r\nJust to confirm my request is for no. 1 out of these two options.",
                                           "updatedAt":  "2018-12-19T16:24:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ0ODY3NDQ3OA==",
                                           "createdAt":  "2018-12-19T17:16:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBAJF_g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "KamranShahid",
                                                                               "createdAt":  "2018-12-20T10:12:09Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "TheLastRar",
                                                                               "createdAt":  "2018-12-20T10:15:03Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "qadeemakhtar",
                                                                               "createdAt":  "2019-02-22T06:35:23Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "gerwim",
                                                                               "createdAt":  "2019-02-22T11:12:08Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "joao-r-reis",
                                                                               "createdAt":  "2019-02-22T14:12:24Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "mletterle",
                                                                               "createdAt":  "2019-07-18T20:07:49Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "glmcz",
                                                                               "createdAt":  "2019-11-28T16:53:50Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jozefchmelar",
                                                                               "createdAt":  "2019-12-13T07:27:53Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Jinjinov",
                                                                               "createdAt":  "2020-04-04T15:37:22Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  9
                                                         },
                                           "author":  "jongleur1983",
                                           "body":  "I\u0027d like to see no. 2.",
                                           "updatedAt":  "2018-12-19T17:16:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ0ODk0NDk1Nw==",
                                           "createdAt":  "2018-12-20T10:13:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBAJGBQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Jinjinov",
                                                                               "createdAt":  "2020-04-04T15:37:37Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "KamranShahid",
                                           "body":  "I would also like to see no. 2. Even if somebody point me to third party nuget package then it will also be helpful",
                                           "updatedAt":  "2018-12-20T10:18:00Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ2NjM2MjQxMg==",
                                           "createdAt":  "2019-02-22T11:13:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCZYv_w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "dpo007",
                                                                               "createdAt":  "2020-01-29T18:28:52Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Jinjinov",
                                                                               "createdAt":  "2020-04-04T15:37:34Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Aymendje",
                                                                               "createdAt":  "2022-04-22T21:07:41Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "gerwim",
                                           "body":  "Same here. Having a platform independent package to query hardware information would be great.",
                                           "updatedAt":  "2019-02-22T11:13:00Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUxMjgzMzI4Mg==",
                                           "createdAt":  "2019-07-18T14:12:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODIwSzg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "HighlanderPL",
                                                                               "createdAt":  "2019-08-27T15:26:21Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "KamranShahid",
                                                                               "createdAt":  "2019-11-20T08:41:43Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "waltronix",
                                                                               "createdAt":  "2019-11-26T16:35:11Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "glmcz",
                                                                               "createdAt":  "2019-11-28T16:53:32Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jozefchmelar",
                                                                               "createdAt":  "2019-12-13T07:27:49Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "dpo007",
                                                                               "createdAt":  "2020-01-29T18:28:46Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "apoulet1234",
                                                                               "createdAt":  "2020-03-04T07:18:36Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "AdamCaviness",
                                                                               "createdAt":  "2021-08-19T17:12:00Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "walljm",
                                                                               "createdAt":  "2023-10-05T17:41:49Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  9
                                                         },
                                           "author":  "M05pr1mty",
                                           "body":  "\u003e I have seen two requests in this area\r\n\u003e \r\n\u003e 1. Run WMI queries across a network from an app running on Linux\r\n\u003e 2. Use WMI to interrogate Linux hardware /OS\r\n\u003e \r\n\u003e Can someone more familiar with the various 3rd party libraries, kernel support etc tell me whether those should be tracked as separate issues?\r\n\r\nIs there any movement on this please? Specifically interested in  1. Run WMI queries across a network from an app running on Linux, Thanks!",
                                           "updatedAt":  "2019-07-18T14:12:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc456029",
                                           "createdAt":  "2021-11-17T16:02:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODIwS8A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Greg-Smulko",
                                                                               "createdAt":  "2022-11-03T11:16:28Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "walljm",
                                                                               "createdAt":  "2023-10-05T17:42:07Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "dpsenner",
                                           "body":  "I\u0027m bumping this issue because we would also like to query WMI of windows hosts from linux hosts.",
                                           "updatedAt":  "2021-11-17T16:02:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5X-ZKY",
                                           "createdAt":  "2023-03-20T10:26:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC9YYwA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "CONFUSED",
                                                                               "user":  "danmoseley",
                                                                               "createdAt":  "2023-03-20T15:46:06Z"
                                                                           },
                                                                           {
                                                                               "content":  "CONFUSED",
                                                                               "user":  "seungyongshim",
                                                                               "createdAt":  "2023-05-21T03:38:46Z"
                                                                           },
                                                                           {
                                                                               "content":  "CONFUSED",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2023-06-07T16:21:32Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "johanwintgens-ls",
                                           "body":  "Bump. My employer\u0027s hitting me with that \"if it\u0027s possible in Python, it\u0027s possible in .NET\". What am I supposed to say? \"It\u0027s not, because .NET is fkn stupid and you\u0027re stupid for relying on it\"? It\u0027s certainly starting to look that way, since this issue is MORE THAN 5 YEARS OLD FFS! GET OUT OF THE STONE AGE! God I\u0027m so sick of Microsoft and .NET 🤮",
                                           "updatedAt":  "2023-06-07T17:04:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc54Fgcp",
                                           "createdAt":  "2024-03-22T09:39:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "milochen0418",
                                           "body":  "Hello everyone, I\u0027m wondering if anyone knows whether WMI support on Linux has been fully implemented yet? Recently, I\u0027ve been hoping to have the opportunity to use WMI across platforms through .NET Core development, not just for controlling Windows, but also for managing Linux.\r\n\r\nIf there are parts of the support that are incomplete, and I\u0027d like to help realize it, are there any open-source projects I can contribute to?",
                                           "updatedAt":  "2024-03-22T09:39:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6NNsF7",
                                           "createdAt":  "2024-09-23T19:24:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "walljm",
                                           "body":  "Any movement on this?  This is still something we\u0027d very much like to have.  Specifically, we need:\r\n\r\n1. Run WMI queries across a network from an app running on Linux",
                                           "updatedAt":  "2024-09-23T19:24:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6s4TOY",
                                           "createdAt":  "2025-05-22T08:58:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alecrespi",
                                           "body":  "Hi everyone, WMI cross-platform support needed here! ",
                                           "updatedAt":  "2025-05-22T08:58:46Z"
                                       }
                                   ],
                         "totalCount":  16
                     },
        "title":  "Support System.Management on Linux using WMI system bus available in Linux kernel 4.13",
        "labels":  [
                       "enhancement",
                       "area-System.Management",
                       "os-linux"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/34803",
        "createdAt":  "2020-04-10T04:00:19Z",
        "number":  34803,
        "author":  "wsy",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-12-22T17:17:43Z",
        "body":  "### Scenario\r\nManagementObjectCollection currently does not implement \u0027IEnumerable\u003cManagementBaseObject\u003e\u0027 nor \u0027IEnumerable\u003cManagementObject\u003e\u0027. So there\u0027s currently no way to utilize methods defined in System.Linq.Enumerable. Such as \u0027FirstOrDefault\u0027. This is painful when we use WMI to get a service object such as \"Msvm_VirtualSystemManagementService\".\r\n\r\n### Workaround\r\nSo I wrote something like this\r\n```\r\npublic static ManagementObject FirstOrDefault(this ManagementObjectCollection managementObjectCollection)\r\n{\r\n    foreach (ManagementObject managementObject in managementObjectCollection)\r\n    {\r\n        return managementObject;\r\n    }\r\n    return default;\r\n}\r\n\r\npublic static ManagementObject GetServiceObject(ManagementScope scope, string serviceName)\r\n{\r\n    ManagementClass serviceClass = new ManagementClass(scope, new ManagementPath(serviceName), new ObjectGetOptions());\r\n    ManagementObject serviceObject = serviceClass.GetInstances().FirstOrDefault();\r\n    return serviceObject;\r\n}\r\n```\r\nFirst I thought it was my pain. Then I found in [your document](https://docs.microsoft.com/en-us/windows/win32/hyperv_v2/getvirtualsystemthumbnailimage-msvm-virtualsystemmanagementservice#examples)\r\n, you\u0027re having the same problem. So you created [a common utility class](https://docs.microsoft.com/en-us/windows/win32/hyperv_v2/common-utilities-for-the-virtualization-samples-v2) for all your examples in your documents. There you wrote some code like this\r\n```\r\npublic static ManagementObject GetFirstObjectFromCollection(ManagementObjectCollection collection)\r\n{\r\n    if (collection.Count == 0)\r\n    {\r\n        throw new ArgumentException(\"The collection contains no objects\", \"collection\");\r\n    }\r\n\r\n    foreach (ManagementObject managementObject in collection)\r\n    {\r\n        return managementObject;\r\n    }\r\n\r\n    return null;\r\n}\r\n```\r\nSo, I concluded that this is a common issue for every WMI users.\r\n\r\n### My thoughts\r\nIf ManagementObjectCollection can implement something like \"IEnumerable\\\u003cManagementObject\\\u003e\", then we can skip such utility code and use System.Linq.Enumerable.FirstOrDefault() directly.\r\nI forked and tried to implement this, then I found out \u0027ManagementObjectEnumerator\u0027 is actually returning \u0027ManagementBaseObject\u0027 in its \u0027Current\u0027 property.\r\nThen I got confused why code like \u0027foreach (ManagementObject mo in recollection) { }\u0027 can work.\r\nI put aside my confusion because I thought that was a trivial change and I implemented \u0027IEnumerable\u003cManagementBaseObject\u003e\u0027 on \u0027ManagementObjectCollection\u0027. The confusing \u0027foreach\u0027 code still works. However, when I try the FirstOrDefault method using Linq, I got a syntax error saying that I had to explicitly cast ManagementBaseObject to ManagementObject.\r\n\r\n### Further Digging\r\nSince everyone is using ManagementObjectCollection to get a ManagementObject instead of ManagementBaseObject, I believe I should implement IEnumerable\u003cManagementObject\u003e instead of IEnumerable\u003cManagementBaseObject\u003e. So I skipped creating my PR and opened this issue.\r\nI think we should make ManagementObjectEnumerator.Current return ManagemengObject instead of ManagementBaseObject since it’s not returning any other subclasses of ManagementBaseObject. (Actually ManagemengObject is the only direct subclass of ManagemengBaseObject afaik.)",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOmH__wA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6Yf__A",
                                           "createdAt":  "2024-12-22T17:17:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "KalleOlaviNiemitalo",
                                           "body":  "\u003e So there\u0027s currently no way to utilize methods defined in System.Linq.Enumerable. \n\nSystem.Linq.Enumerable defines [public static IEnumerable\\\u003cTResult\\\u003e OfType\\\u003cTResult\\\u003e(this IEnumerable)](https://learn.microsoft.com/dotnet/api/system.linq.enumerable.oftype?view=netstandard-2.0) and [public static IEnumerable\\\u003cTResult\\\u003e Cast\\\u003cTResult\\\u003e(this IEnumerable)](https://learn.microsoft.com/dotnet/api/system.linq.enumerable.cast?view=netstandard-2.0), which can convert non-generic IEnumerable to an IEnumerable\\\u003cManagementObject\\\u003e on which you can then use the other LINQ methods.",
                                           "updatedAt":  "2024-12-22T17:17:42Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Make System.Management.ManagementObjectCollection implement generic IEnumerable",
        "labels":  [
                       "api-suggestion",
                       "area-System.Management"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/39488",
        "createdAt":  "2020-07-16T23:55:12Z",
        "number":  39488,
        "author":  "EatonZ",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-09-18T12:26:38Z",
        "body":  "\u003c!--This is just a template - feel free to delete any and all of it and replace as appropriate.--\u003e\r\n\r\n### Description\r\n\r\nIssue https://github.com/dotnet/runtime/issues/24536 outlined an exception where WMI would fail to work correctly if the machine has an old .NET Framework version installed. https://github.com/dotnet/corefx/pull/26137 improved the situation by adding a better error message. It appears that this \"fix\" does not cover all cases as a customer reported this exception to me today:\r\n`The type initializer for \u0027System.Management.ManagementPath\u0027 threw an exception. -\u003e The type initializer for \u0027System.Management.WmiNetUtilsHelper\u0027 threw an exception.`\r\n\r\n### Configuration\r\n\r\nCustomer specs are:\r\n\r\n- Windows 7 32-bit\r\n- .NET Framework 4.5\r\n- .NET Core 3.1.5\r\n- System.Management package 4.7.0\r\n\r\n### Other information\r\n\r\nThe customer was able to resolve the problem by upgrading to .NET Framework 4.8. I would like to request that the `PlatformNotSupported_FrameworkUpdatedRequired` error coverage be extended to support this scenario so a better error message is presented.\r\n\r\nI believe this code is what causes the exception to occur:\r\n```\r\nvar diskSearcher = new ManagementObjectSearcher(\"SELECT * FROM Win32_DiskDrive\");\r\ndiskSearcher.Get();\r\n```\r\n\r\nAlso, a question: What is the minimum .NET Framework version for WMI to work correctly? So I can check for it and warn the user.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOKAgUSg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2NTMwOTAzNw==",
                                           "createdAt":  "2020-07-28T22:08:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "EatonZ",
                                           "body":  "Does anyone have an answer to the min .NET version question? I want to add a check to my software.",
                                           "updatedAt":  "2020-07-28T22:08:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2NTMyNzM4Mw==",
                                           "createdAt":  "2020-07-28T22:31:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "This suggests 4.7.0...although I don\u0027t remember context \r\nhttps://github.com/dotnet/corefx/pull/26137#discussion_r159572493",
                                           "updatedAt":  "2020-07-28T22:31:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2NTMyODA3MA==",
                                           "createdAt":  "2020-07-28T22:33:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "EatonZ",
                                           "body":  "@danmosemsft I did see your comment there, which unfortunately went unanswered. Is there a way to check that is indeed the min version?",
                                           "updatedAt":  "2020-07-28T22:33:04Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2NTM2NjcyMw==",
                                           "createdAt":  "2020-07-29T00:46:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "Seems to me like we could just fix this to setup the PNSE to give more info?\r\nhttps://github.com/dotnet/runtime/blob/1d08d98a4140b5ee56df744c284decefd1efffaf/src/libraries/System.Management/src/System/Management/ManagementScope.cs#L313-L318\r\n\r\nLike, persist the loadlibrary failure message and error code into the PNSE.",
                                           "updatedAt":  "2020-07-29T00:46:46Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2NTQxNTMwMQ==",
                                           "createdAt":  "2020-07-29T03:53:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBL3lXg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ericstj",
                                                                               "createdAt":  "2020-07-29T22:40:35Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "@ericstj I think the dll was present but necessary exports were added between 4.5.0 and 4.7.0\r\nhttps://github.com/dotnet/runtime/issues/24536#issuecomment-354765150\r\n\r\nIf you know your way around the.NET Framework release shares we can dumpbin and see when they appeared. Or if there\u0027s a way to download offline installers then @EatonZ can crack them open and do the same thing.\r\nTBH @EatonZ I would just tell your customers to update to 4.7.0. The c# code we snapped for S.Management would have been from about then so it\u0027s very likely right.",
                                           "updatedAt":  "2020-07-29T03:53:27Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2NjUxMjczOA==",
                                           "createdAt":  "2020-07-30T16:37:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "EatonZ",
                                           "body":  "I have a Windows 7 VM with an uninstallable .NET Framework 4.8.\r\nI uninstalled it and installed v4.6.2. The error still occurs.\r\nI then tried v4.7, and the error did **not** occur.\r\nIt\u0027s clear that v4.7 is the min supported version, as @danmosemsft suggested. I just wanted to fully confirm it.",
                                           "updatedAt":  "2020-07-30T16:37:23Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3MDcxMzU3NA==",
                                           "createdAt":  "2020-08-07T21:06:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "@EatonZ would you be interested in offering a PR that indicated 4.7.0 was the minimum (ie., something more specific than SR.LoadLibraryFailed in the code above) ? If not, I\"ll close this out now. Thanks",
                                           "updatedAt":  "2020-08-07T21:06:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3MTYxNTk4MA==",
                                           "createdAt":  "2020-08-10T22:12:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBM8k_Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "danmoseley",
                                                                               "createdAt":  "2020-08-10T22:18:54Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "EatonZ",
                                           "body":  "@danmosemsft Ok, I\u0027ll take a look when I get a chance.",
                                           "updatedAt":  "2020-08-10T22:12:55Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3MTYxODEyMg==",
                                           "createdAt":  "2020-08-10T22:19:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Great! assigned to you.",
                                           "updatedAt":  "2020-08-10T22:19:05Z"
                                       }
                                   ],
                         "totalCount":  9
                     },
        "title":  "WMI - Expand PlatformNotSupported_FrameworkUpdatedRequired error coverage",
        "labels":  [
                       "enhancement",
                       "area-System.Management",
                       "help wanted"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/61980",
        "createdAt":  "2021-11-23T01:28:01Z",
        "number":  61980,
        "author":  "vsfeedback",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-19T20:13:08Z",
        "body":  "_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/ManagementEventWatcher-only-watches-the-/1582558)._\n\n---\nThe following sample of .Net code throws a \"Not Found\" exception if the registry key is in the x64 part of the registry.  It works if the registry key is in the 32-bit part of the registry (i.e. under WOW6432Node).\n\nMy PC is running Windows 11 Home x64.  I have tried this code using .Net 5, .Net 6, and .Net Framework 4.7.2, in both Visual Studio 2019 and Visual Studio 2022 -- the error occurs each time.  \n\nThe project is configured with \"Platform target\" x64.  \n\nI haven\u0027t used the ManagementEventWatcher prior to this week, so I don\u0027t know if the problem began occurring after a change to my PC.\n\n```\nclass Program\n    {\n        static void Main(string[] args)\n        {\n\nvar watcher = new ManagementEventWatcher(new WqlEventQuery(\n                \"SELECT * FROM RegistryTreeChangeEvent WHERE Hive=\u0027HKEY_LOCAL_MACHINE\u0027 AND RootPath=\u0027SOFTWARE\\\\\\\\gmusbipd\u0027\"));\n            var handler = new MyHandler();\n            watcher. EventArrived += handler. Arrived;\n\ntry\n            {\n                //Start watching for events\n                watcher. Start();\n\n} catch (Exception ex)\n            {\n                // \"Not Found\" exception is thrown here\n                Console.WriteLine(ex. ToString());\n                throw;\n            }\n            while (handler. EventHasntFiredYet)\n            {\n                // Nothing.\n            }\n\n//Stop watching\n            watcher. Stop();\n        }\n\npublic class MyHandler\n        {\n            public bool EventHasntFiredYet;\n\npublic MyHandler()\n            {\n                EventHasntFiredYet = true;\n            }\n\npublic void Arrived(object sender, EventArrivedEventArgs e)\n            {\n                var propertyDataCollection = e.NewEvent.Properties;\n                foreach (var p in propertyDataCollection)\n                {\n                    Console.WriteLine(\"{0} -- {1}\", p.Name, p.Value);\n                }\n                EventHasntFiredYet = false;\n            }\n        }\n    }\n```\n\n---\n### Original Comments\n\n#### Feedback Bot on 11/14/2021, 11:27 PM: \n\n\u003cp\u003eWe have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.\u003c/p\u003e\n\n\n---\n### Original Solutions\n\n#### Dan Watts solved on 11/14/2021, 04:26 PM, 0 votes: \n\n\u003cp\u003e[Workaround]\u003cbr\u003e\nI discovered that this problem occurs when there are 2 copies of WmiPrvSE.exe running: one x64 and one x86.  Apparently the x86 copy is handling the API call, and therefore always uses the 32-bit registry.\u003c/p\u003e\n\u003cp\u003eIf I end the x86 task, then the API correctly finds the key in the registry.\u003c/p\u003e\n\u003cp\u003eI don’t know if this is the expected behavior of the API.\u003c/p\u003e\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOOj3FTA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc46PcVM",
                                           "createdAt":  "2021-11-23T20:16:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-11-23T20:16:30Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "ManagementEventWatcher only watches the 32-bit registry in an x64 .Net application",
        "labels":  [
                       "area-System.Management"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/61960",
        "createdAt":  "2021-11-23T10:16:32Z",
        "number":  61960,
        "author":  "Symbai",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODHF45g==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "natan-abolafya",
                                            "createdAt":  "2022-08-29T10:03:27Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Sing303",
                                            "createdAt":  "2023-09-18T13:33:57Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "styris-ame",
                                            "createdAt":  "2025-04-04T06:29:01Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "colejohnson66",
                                            "createdAt":  "2025-07-15T17:41:22Z"
                                        }
                                    ],
                          "totalCount":  4
                      },
        "updatedAt":  "2025-07-26T10:39:11Z",
        "body":  "### Description\n\nNativeAOT (the trimming?) breaks the body of System.Management.WbemDefPath..ctor():\r\n```\r\n ---\u003e System.InvalidProgramException: Common Language Runtime detected an invalid program. The body of method \u0027Void System.Management.WbemDefPath..ctor()\u0027 is invalid.\r\n   at Internal.Runtime.TypeLoaderExceptionHelper.CreateInvalidProgramException(ExceptionStringID, String) + 0x40\r\n   at Internal.Runtime.CompilerHelpers.ThrowHelpers.ThrowInvalidProgramExceptionWithArgument(ExceptionStringID, String) + 0x9\r\n   at System.Management.WbemDefPath..ctor() + 0x15\r\n```\r\n\r\nI\u0027m reporting this here since NativeAOT will be moved into this repo anyway and it\u0027s probably a trimming issue? in which case it belongs to this repo.\n\n### Reproduction Steps\n\nIn nativeAOT project:\r\n```C#\r\nManagementClass managementClass = new ManagementClass(\"Win32_BaseBoard\");\r\nvar instances = managementClass.GetInstances();\r\nforeach (var obj in instances)\r\n{\r\n    //...\r\n}\r\n```\r\nIn C# project call the export function of the nativeAOT project which executes the code above.\n\n### Expected behavior\n\nNo exception\n\n### Actual behavior\n\nException\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\nIt\u0027s a windows x64 DLL project publishing using `/p:NativeLib=Shared`, I\u0027m using NativeAOT compiler nuget version `6.0.0-*`",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOkhwMtA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc46Mo0B",
                                           "createdAt":  "2021-11-23T10:46:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hez2010",
                                           "body":  "NativeAOT compiler `6.0.0-*` is out-of-date and missing plenty of fixes, can you try again with `7.0.0-*`?",
                                           "updatedAt":  "2021-11-23T10:46:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46MyLT",
                                           "createdAt":  "2021-11-23T11:38:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichalStrehovsky",
                                           "body":  "WbemDefPath is built-in COM. This doesn\u0027t work with trimming in general and NativeAOT implies trimming. It will have to be converted to ComWrappers.",
                                           "updatedAt":  "2021-11-24T01:26:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46MyWM",
                                           "createdAt":  "2021-11-23T11:39:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027linkable-framework\u0027: @eerhardt, @vitek-karas, @LakshanF, @sbomer, @joperezr\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\n\nNativeAOT (the trimming?) breaks the body of System.Management.WbemDefPath..ctor():\r\n```\r\n ---\u003e System.InvalidProgramException: Common Language Runtime detected an invalid program. The body of method \u0027Void System.Management.WbemDefPath..ctor()\u0027 is invalid.\r\n   at Internal.Runtime.TypeLoaderExceptionHelper.CreateInvalidProgramException(ExceptionStringID, String) + 0x40\r\n   at Internal.Runtime.CompilerHelpers.ThrowHelpers.ThrowInvalidProgramExceptionWithArgument(ExceptionStringID, String) + 0x9\r\n   at System.Management.WbemDefPath..ctor() + 0x15\r\n```\r\n\r\nI\u0027m reporting this here since NativeAOT will be moved into this repo anyway and it\u0027s probably a trimming issue? in which case it belongs to this repo.\n\n### Reproduction Steps\n\nIn nativeAOT project:\r\n```C#\r\nManagementClass managementClass = new ManagementClass(\"Win32_BaseBoard\");\r\nvar instances = managementClass.GetInstances();\r\nforeach (var obj in instances)\r\n{\r\n    //...\r\n}\r\n```\r\nIn C# project call the export function of the nativeAOT project which executes the code above.\n\n### Expected behavior\n\nNo exception\n\n### Actual behavior\n\nException\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\nIt\u0027s a windows x64 DLL project publishing using `/p:NativeLib=Shared`, I\u0027m using NativeAOT compiler nuget version `6.0.0-*`\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eSymbai\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-System.Management`, `untriaged`, `linkable-framework`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-11-23T11:39:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46NZBZ",
                                           "createdAt":  "2021-11-23T14:09:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Symbai",
                                           "body":  "\u003e NativeAOT compiler `6.0.0-*` is out-of-date and missing plenty of fixes, can you try again with `7.0.0-*`?\r\n\r\n\r\nUnfortunately not, see https://github.com/dotnet/runtimelab/issues/1748\r\n\r\n",
                                           "updatedAt":  "2021-11-23T14:09:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46lWDO",
                                           "createdAt":  "2021-11-30T17:41:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "If anyone is looking to pick this up and needs an example of how to convert to COMWrappers, here are the PRs that converted System.Drawing.Common to use COMWrappers. They may be useful to get started on how to do it.\r\n\r\nhttps://github.com/dotnet/runtime/pull/54636\r\nhttps://github.com/dotnet/runtime/pull/54884\r\n\r\nAlso, check out the docs here: https://docs.microsoft.com/en-us/dotnet/standard/native-interop/tutorial-comwrappers",
                                           "updatedAt":  "2021-11-30T17:41:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Odibx",
                                           "createdAt":  "2022-11-16T05:18:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivanjx",
                                           "body":  "are there any workarounds on how to make system.management to work with nativeaot for now?",
                                           "updatedAt":  "2022-11-16T05:18:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5OeCrh",
                                           "createdAt":  "2022-11-16T07:24:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCvqopQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ivanjx",
                                                                               "createdAt":  "2022-11-16T07:35:57Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "MichalStrehovsky",
                                           "body":  "It\u0027s the same problem as #78038 that was recently closed but had a couple other people. System.Management needs to be converted to ComWrappers. It\u0027s starting to be a pretty popular request. Cc @jkoritzinsky if this is something that could be addressed with the COM source generator for .NET 8.",
                                           "updatedAt":  "2022-11-16T07:24:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5OensO",
                                           "createdAt":  "2022-11-16T09:12:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivanjx",
                                           "body":  "i managed to workaround using powershell.exe with Get-WmiObject command but indeed being able to do more advanced querying and not needing to parse the text output manually is preferred.",
                                           "updatedAt":  "2022-11-16T09:12:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5QuPmu",
                                           "createdAt":  "2022-12-16T06:56:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEaql6w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ivanjx",
                                                                               "createdAt":  "2022-12-16T07:16:22Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "natan-abolafya",
                                                                               "createdAt":  "2022-12-22T13:25:14Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MartinKuschnik",
                                                                               "createdAt":  "2022-12-28T08:59:00Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "garfeng",
                                                                               "createdAt":  "2024-09-12T09:52:53Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "onion1003",
                                                                               "createdAt":  "2025-01-12T09:09:46Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "13xforever",
                                                                               "createdAt":  "2025-04-19T06:14:26Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "colejohnson66",
                                                                               "createdAt":  "2025-07-15T17:42:11Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  7
                                                         },
                                           "author":  "brandon3343",
                                           "body":  "@ivanjx You can try [WmiLight](https://github.com/MartinKuschnik/WmiLight), It works for me.",
                                           "updatedAt":  "2022-12-16T06:56:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6RucA7",
                                           "createdAt":  "2024-10-29T17:06:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MattHyman",
                                           "body":  "A project I work on recently hit this with [ManagementEventWatcher ](https://learn.microsoft.com/en-us/dotnet/api/system.management.managementeventwatcher?view=net-8.0)and we were unaware of the lack of trim suport until testing on release bits as only trim was enabled there. I would have [expected this to repro on debug bits as we were following documentation to avoid diverged behavior on debug/release for trim](https://learn.microsoft.com/en-us/dotnet/core/deploying/trimming/trimming-options?pivots=dotnet-8-0#enable-trimming).\n\nUntil this is fixed it would be great if the issue was more discoverable and not a debug/release behavior divergence. ",
                                           "updatedAt":  "2024-10-29T17:06:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6RzLVh",
                                           "createdAt":  "2024-10-30T08:04:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichalStrehovsky",
                                           "body":  "\u003e and we were unaware of the lack of trim suport until testing on release bits as only trim was enabled there\n\nDoes your project have `\u003cPublishTrimmed\u003etrue\u003c/PublishTrimmed\u003e` in the project file, or do you only add it as part of publish command line (or with a publish profile)? The preference is to have this in the csproj because it enables emulation of trimming behaviors in Debug builds as well - if PublishTrimmed is enabled, COM interop is disabled and you should see the same exception at runtime.\n\nBut I agree that we should either make System.Management trim safe with COM source generator, or annotate it as trim unfriendly so that the Roslyn analyzer can flag this.",
                                           "updatedAt":  "2024-10-30T08:04:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6SE_qV",
                                           "createdAt":  "2024-10-31T20:43:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MattHyman",
                                           "body":  "@MichalStrehovsky; we set PublishTrimmed to true in the csproj file specifically to avoid this scenario, hence the comment. ",
                                           "updatedAt":  "2024-10-31T20:43:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6SHAy0",
                                           "createdAt":  "2024-11-01T05:19:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Symbai",
                                           "body":  "\u003e we should either make System.Management trim safe with COM source generator, or annotate it as trim unfriendly so that the Roslyn analyzer can flag this.\n\nWhy either? Considering how many times this has been pushed to the next .NET version it makes sense to annotate it now and make it trim safe in the future and remove the annotation then.",
                                           "updatedAt":  "2024-11-01T05:19:57Z"
                                       }
                                   ],
                         "totalCount":  13
                     },
        "title":  "System.Management.WbemDefPath doesn\u0027t work with trimming",
        "labels":  [
                       "area-System.Management",
                       "linkable-framework"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/66386",
        "createdAt":  "2022-03-09T11:28:58Z",
        "number":  66386,
        "author":  "Symbai",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-11-22T05:45:56Z",
        "body":  "### Description\n\nI\u0027ve ported an application to .NET 6 and added nuget package of `System.Management`. It shows .NET 6 as supported, it depends on `System.Codedom` which also shows .NET 6 support. Apart of that no other dependencies. I\u0027ve published my app as self-contained and ran it on a Windows 8.1 machine. It crashed and the event viewer got an entry saying:\r\n\r\n`System.PlatformNotSupportedException: The native library \u0027C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\wminet_utils.dll\u0027 does not have all required functions. Please, update the .NET Framework.`\n\n### Reproduction Steps\n\nCreate a new .NET 6 project\r\nAdd System.Management nuget package\r\nPublish self contained\r\nRun on a machine with an outdated .NET framework\n\n### Expected behavior\n\nI\u0027ve expected that because its .NET6 and because it\u0027s self contained that it \"just works\" and that it does not depend on any .NET Framework installation. If it requires any additional native files, it should copy these to the publish folder of the .NET 6 self contained app.\n\n### Actual behavior\n\nApplication crashes, because it depends on (a specific) .NET Framework (version)\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOlJbukA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc4_WWvN",
                                           "createdAt":  "2022-03-09T11:29:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2022-03-09T11:29:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_WYn0",
                                           "createdAt":  "2022-03-09T11:39:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-management\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\n\nI\u0027ve ported an application to .NET 6 and added nuget package of `System.Management`. It shows .NET 6 as supported, it depends on `System.Codedom` which also shows .NET 6 support. Apart of that no other dependencies. I\u0027ve published my app as self-contained and ran it on a Windows 8.1 machine. It crashed and the event viewer got an entry saying:\r\n\r\n`System.PlatformNotSupportedException: The native library \u0027C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\wminet_utils.dll\u0027 does not have all required functions. Please, update the .NET Framework.`\n\n### Reproduction Steps\n\nCreate a new .NET 6 project\r\nAdd System.Management nuget package\r\nPublish self contained\r\nRun on a machine with an outdated .NET framework\n\n### Expected behavior\n\nI\u0027ve expected that because its .NET6 and because it\u0027s self contained that it \"just works\" and that it does not depend on any .NET Framework installation. If it requires any additional native files, it should copy these to the publish folder of the .NET 6 self contained app.\n\n### Actual behavior\n\nApplication crashes, because it depends on (a specific) .NET Framework (version)\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eSymbai\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-System.Management`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-03-09T11:39:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_Wdan",
                                           "createdAt":  "2022-03-09T12:04:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "stephentoub",
                                           "body":  "Duplicate of https://github.com/dotnet/runtime/issues/45143\r\ncc: @danmoseley, @ericstj",
                                           "updatedAt":  "2022-03-09T12:04:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_WjMP",
                                           "createdAt":  "2022-03-09T12:33:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Symbai",
                                           "body":  "FYI: The suggested \"solution\" in #45143 by switching to `Microsoft.Management.Infrastructure` (apart from the fact that it works different and all snippets on the internet are for `System.Management` which makes switching difficult) is that it also doesn\u0027t work. Now the app is crashing with `System.IO.FileNotFoundException: Could not load file or assembly \u0027Microsoft.Management.Infrastructure,... `\r\n\r\nThis is because this file is also not copied to publish folder when published through VS. IF I have to copy the file myself then I can also copy `wminet_utils.dll` myself instead. That doesn\u0027t seem to be the right solution.",
                                           "updatedAt":  "2022-03-09T12:33:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_Y26G",
                                           "createdAt":  "2022-03-09T23:26:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "\u003e Now the app is crashing with System.IO.FileNotFoundException: Could not load file or assembly \u0027Microsoft.Management.Infrastructure,...\r\n\r\nWe don\u0027t support MMI here, for issues with it you may file them here https://github.com/PowerShell/MMI.  It should work and many have been successful using it.  Here\u0027s a sample: https://github.com/ericstj/sample-code/blob/mmi-samples/mmi-samples/Program.cs.  You can also find usage in https://github.com/powershell/powershell. \r\n\r\nThe problem is not that `wminet_utils.dll` is missing, it\u0027s that it\u0027s old.  .NETFramework is part of the OS and we require a particular minimum version of the operating system + updates for this component to work.  https://github.com/dotnet/runtime/issues/29663 discusses this.  I believe most versions of .NETFramework that are still in support have the required changes.",
                                           "updatedAt":  "2022-03-09T23:26:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_Y4t0",
                                           "createdAt":  "2022-03-09T23:39:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Symbai",
                                           "body":  "Isn\u0027t it possible to just copy the required files (the right version of `wminet_utils.dll` for example) to publish folder and use that one? What else is the meaning of self contained when it doesn\u0027t contain all required files? And when it\u0027s not possible, shouldn\u0027t System.Management at least get a warning somewhere that it\u0027s not fully .NET (Core) compatible because it requires .NET Framework?",
                                           "updatedAt":  "2022-03-09T23:40:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_ZIDT",
                                           "createdAt":  "2022-03-10T01:15:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "\u003e What else is the meaning of self contained when it doesn\u0027t contain all required files? \r\n\r\nFrom the publishing point of view, it\u0027s not that different to user code calling into a native library - it doesn\u0027t know about it. This is even more of a corner case, as you only need a local copy if you are deploying to machine with .NET Framework older than 4.6.2. (And BTW, I am not sure we have actually tested with a local copy.)\r\n\r\n\u003e shouldn\u0027t System.Management at least get a warning somewhere that it\u0027s not fully .NET (Core) compatible because it requires .NET Framework?\r\n\r\nIf there\u0027s a good place in the docs we can add the note that System.Management requires .NET Framework 4.6.2 or later. \r\n\r\nNote that .NET Framework, and thus wminet_utils.dll, is part of the OS on all \"regular\" Windows SKU\u0027s. Instead of thinking of this as \".NET Core still depends on .NET Framework\" it may be better to think of this as \"this legacy .NET feature requires a particular version of a Windows component\"",
                                           "updatedAt":  "2022-03-10T01:15:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_Zt8s",
                                           "createdAt":  "2022-03-10T06:23:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC_MoLA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "mikechristiansenvae",
                                                                               "createdAt":  "2023-01-12T13:15:40Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Nuklon",
                                                                               "createdAt":  "2023-03-14T12:10:14Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kyllix",
                                                                               "createdAt":  "2023-04-03T09:52:40Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "chickenCabbage",
                                                                               "createdAt":  "2023-06-27T13:18:54Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "Symbai",
                                           "body":  "\u003e From the publishing point of view, it\u0027s not that different to user code calling into a native library - it doesn\u0027t know about it\r\n\r\nOn publishing a WPF application it does copy native files WPF requires to the output folder. Why can it do that on WPF but not when System.Management (or MMI) is referenced? Or let me rephrase that: If it\u0027s able to do that on WPF, can we do the same on System.Management (or MMI)? Both (all three) are not third party but products of Microsoft. And developers referencing System.Management may not know that it relies on .NET Framework (or a Windows component), just like me. They might reference and deploy it as self contained assuming it \"just works\" and wonder why their customers report it just crashes.\r\n\r\n",
                                           "updatedAt":  "2022-03-10T06:24:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5XmKky",
                                           "createdAt":  "2023-03-15T09:09:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEXoPSw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "milomai",
                                                                               "createdAt":  "2023-03-30T07:48:31Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MohammadHadi2031",
                                                                               "createdAt":  "2023-09-23T11:51:26Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DIFDenis",
                                                                               "createdAt":  "2024-02-01T10:29:48Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "haseakash",
                                                                               "createdAt":  "2024-11-22T05:45:17Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "haseakash",
                                                                               "createdAt":  "2024-11-22T05:45:26Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "alex8900vbs",
                                                                               "createdAt":  "2025-06-23T19:46:51Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  6
                                                         },
                                           "author":  "stepagrus",
                                           "body":  "I solved this question for myself by switching to the [WMILight](https://www.nuget.org/packages/WmiLight/) library instead of System.Management",
                                           "updatedAt":  "2023-03-15T09:10:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Ulu6Q",
                                           "createdAt":  "2024-11-22T05:45:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "haseakash",
                                           "body":  "\u003e I solved this question for myself by switching to the [WMILight](https://www.nuget.org/packages/WmiLight/) library instead of System.Management\n\nIt works now. Just change all code with WmiLight ",
                                           "updatedAt":  "2024-11-22T05:45:55Z"
                                       }
                                   ],
                         "totalCount":  10
                     },
        "title":  "System.Management has a dependency on .NET Framework",
        "labels":  [
                       "area-System.Management"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/70414",
        "createdAt":  "2022-06-08T01:31:19Z",
        "number":  70414,
        "author":  "VincentBu",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-08-12T19:26:29Z",
        "body":  "Run: [runtime-libraries-coreclr outerloop 20220607.3](https://dev.azure.com/dnceng/public/_build/results?buildId=1810764\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=48147924\u0026resultId=100054\u0026paneView=debug)\r\n\r\nFailed test:\r\n```\r\nnet48-windows-Release-x64-Windows.11.Amd64.Client.Open\r\n\r\n- System.Management.Tests.ManagementObjectTests.Invoke_Instance_And_Static_Method_Win32_Process\r\n\r\n```\r\n**Error message:**\r\n```\r\nSystem.AggregateException : One or more errors occurred.\r\n---- Assert.Equal() Failure\r\nExpected: 0\r\nActual:   21\r\n---- Assert.Equal() Failure\r\nExpected: 0\r\nActual:   8\r\n---- Assert.Equal() Failure\r\nExpected: 0\r\nActual:   8\r\n---- Assert.Equal() Failure\r\nExpected: 0\r\nActual:   21\r\n---- Assert.Equal() Failure\r\nExpected: 0\r\nActual:   8\r\n---- Assert.Equal() Failure\r\nExpected: 0\r\nActual:   8\r\n---- Assert.Equal() Failure\r\nExpected: 0\r\nActual:   21\r\n---- Assert.Equal() Failure\r\nExpected: 0\r\nActual:   8\r\n---- Assert.Equal() Failure\r\nExpected: 0\r\nActual:   8\r\n---- Assert.Equal() Failure\r\nExpected: 0\r\nActual:   21\r\n\r\n\r\nStack trace\r\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 54\r\n   at System.Management.Tests.ManagementObjectTests.Invoke_Instance_And_Static_Method_Win32_Process() in /_/src/libraries/System.Management/tests/System/Management/ManagementObjectTests.cs:line 95\r\n----- Inner Stack Trace #1 (Xunit.Sdk.EqualException) -----\r\n   at System.Management.Tests.ManagementObjectTests.\u003c\u003ec.\u003cInvoke_Instance_And_Static_Method_Win32_Process\u003eb__4_0() in /_/src/libraries/System.Management/tests/System/Management/ManagementObjectTests.cs:line 80\r\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 45\r\n----- Inner Stack Trace #2 (Xunit.Sdk.EqualException) -----\r\n   at System.Management.Tests.ManagementObjectTests.\u003c\u003ec.\u003cInvoke_Instance_And_Static_Method_Win32_Process\u003eb__4_0() in /_/src/libraries/System.Management/tests/System/Management/ManagementObjectTests.cs:line 80\r\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 45\r\n----- Inner Stack Trace #3 (Xunit.Sdk.EqualException) -----\r\n   at System.Management.Tests.ManagementObjectTests.\u003c\u003ec.\u003cInvoke_Instance_And_Static_Method_Win32_Process\u003eb__4_0() in /_/src/libraries/System.Management/tests/System/Management/ManagementObjectTests.cs:line 80\r\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 45\r\n----- Inner Stack Trace #4 (Xunit.Sdk.EqualException) -----\r\n   at System.Management.Tests.ManagementObjectTests.\u003c\u003ec.\u003cInvoke_Instance_And_Static_Method_Win32_Process\u003eb__4_0() in /_/src/libraries/System.Management/tests/System/Management/ManagementObjectTests.cs:line 80\r\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 45\r\n----- Inner Stack Trace #5 (Xunit.Sdk.EqualException) -----\r\n   at System.Management.Tests.ManagementObjectTests.\u003c\u003ec.\u003cInvoke_Instance_And_Static_Method_Win32_Process\u003eb__4_0() in /_/src/libraries/System.Management/tests/System/Management/ManagementObjectTests.cs:line 80\r\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 45\r\n----- Inner Stack Trace #6 (Xunit.Sdk.EqualException) -----\r\n   at System.Management.Tests.ManagementObjectTests.\u003c\u003ec.\u003cInvoke_Instance_And_Static_Method_Win32_Process\u003eb__4_0() in /_/src/libraries/System.Management/tests/System/Management/ManagementObjectTests.cs:line 80\r\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 45\r\n----- Inner Stack Trace #7 (Xunit.Sdk.EqualException) -----\r\n   at System.Management.Tests.ManagementObjectTests.\u003c\u003ec.\u003cInvoke_Instance_And_Static_Method_Win32_Process\u003eb__4_0() in /_/src/libraries/System.Management/tests/System/Management/ManagementObjectTests.cs:line 80\r\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 45\r\n----- Inner Stack Trace #8 (Xunit.Sdk.EqualException) -----\r\n   at System.Management.Tests.ManagementObjectTests.\u003c\u003ec.\u003cInvoke_Instance_And_Static_Method_Win32_Process\u003eb__4_0() in /_/src/libraries/System.Management/tests/System/Management/ManagementObjectTests.cs:line 80\r\n   at System.RetryHelper.Execute(Ac\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSFOz1A==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5EgaiG",
                                           "createdAt":  "2022-06-08T01:31:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-management\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nRun: [runtime-libraries-coreclr outerloop 20220607.3](https://dev.azure.com/dnceng/public/_build/results?buildId=1810764\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=48147924\u0026resultId=100054\u0026paneView=debug)\r\n\r\nFailed test:\r\n```\r\nnet48-windows-Release-x64-Windows.11.Amd64.Client.Open\r\n\r\n- System.Management.Tests.ManagementObjectTests.Invoke_Instance_And_Static_Method_Win32_Process\r\n\r\n```\r\n**Error message:**\r\n```\r\nSystem.AggregateException : One or more errors occurred.\r\n---- Assert.Equal() Failure\r\nExpected: 0\r\nActual:   21\r\n---- Assert.Equal() Failure\r\nExpected: 0\r\nActual:   8\r\n---- Assert.Equal() Failure\r\nExpected: 0\r\nActual:   8\r\n---- Assert.Equal() Failure\r\nExpected: 0\r\nActual:   21\r\n---- Assert.Equal() Failure\r\nExpected: 0\r\nActual:   8\r\n---- Assert.Equal() Failure\r\nExpected: 0\r\nActual:   8\r\n---- Assert.Equal() Failure\r\nExpected: 0\r\nActual:   21\r\n---- Assert.Equal() Failure\r\nExpected: 0\r\nActual:   8\r\n---- Assert.Equal() Failure\r\nExpected: 0\r\nActual:   8\r\n---- Assert.Equal() Failure\r\nExpected: 0\r\nActual:   21\r\n\r\n\r\nStack trace\r\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 54\r\n   at System.Management.Tests.ManagementObjectTests.Invoke_Instance_And_Static_Method_Win32_Process() in /_/src/libraries/System.Management/tests/System/Management/ManagementObjectTests.cs:line 95\r\n----- Inner Stack Trace #1 (Xunit.Sdk.EqualException) -----\r\n   at System.Management.Tests.ManagementObjectTests.\u003c\u003ec.\u003cInvoke_Instance_And_Static_Method_Win32_Process\u003eb__4_0() in /_/src/libraries/System.Management/tests/System/Management/ManagementObjectTests.cs:line 80\r\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 45\r\n----- Inner Stack Trace #2 (Xunit.Sdk.EqualException) -----\r\n   at System.Management.Tests.ManagementObjectTests.\u003c\u003ec.\u003cInvoke_Instance_And_Static_Method_Win32_Process\u003eb__4_0() in /_/src/libraries/System.Management/tests/System/Management/ManagementObjectTests.cs:line 80\r\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 45\r\n----- Inner Stack Trace #3 (Xunit.Sdk.EqualException) -----\r\n   at System.Management.Tests.ManagementObjectTests.\u003c\u003ec.\u003cInvoke_Instance_And_Static_Method_Win32_Process\u003eb__4_0() in /_/src/libraries/System.Management/tests/System/Management/ManagementObjectTests.cs:line 80\r\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 45\r\n----- Inner Stack Trace #4 (Xunit.Sdk.EqualException) -----\r\n   at System.Management.Tests.ManagementObjectTests.\u003c\u003ec.\u003cInvoke_Instance_And_Static_Method_Win32_Process\u003eb__4_0() in /_/src/libraries/System.Management/tests/System/Management/ManagementObjectTests.cs:line 80\r\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 45\r\n----- Inner Stack Trace #5 (Xunit.Sdk.EqualException) -----\r\n   at System.Management.Tests.ManagementObjectTests.\u003c\u003ec.\u003cInvoke_Instance_And_Static_Method_Win32_Process\u003eb__4_0() in /_/src/libraries/System.Management/tests/System/Management/ManagementObjectTests.cs:line 80\r\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 45\r\n----- Inner Stack Trace #6 (Xunit.Sdk.EqualException) -----\r\n   at System.Management.Tests.ManagementObjectTests.\u003c\u003ec.\u003cInvoke_Instance_And_Static_Method_Win32_Process\u003eb__4_0() in /_/src/libraries/System.Management/tests/System/Management/ManagementObjectTests.cs:line 80\r\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 45\r\n----- Inner Stack Trace #7 (Xunit.Sdk.EqualException) -----\r\n   at System.Management.Tests.ManagementObjectTests.\u003c\u003ec.\u003cInvoke_Instance_And_Static_Method_Win32_Process\u003eb__4_0() in /_/src/libraries/System.Management/tests/System/Management/ManagementObjectTests.cs:line 80\r\n   at System.RetryHelper.Execute(Action test, Int32 maxAttempts, Func`2 backoffFunc, Predicate`1 retryWhen, String testName) in /_/src/libraries/Common/tests/TestUtilities/System/RetryHelper.cs:line 45\r\n----- Inner Stack Trace #8 (Xunit.Sdk.EqualException) -----\r\n   at System.Management.Tests.ManagementObjectTests.\u003c\u003ec.\u003cInvoke_Instance_And_Static_Method_Win32_Process\u003eb__4_0() in /_/src/libraries/System.Management/tests/System/Management/ManagementObjectTests.cs:line 80\r\n   at System.RetryHelper.Execute(Ac\r\n```\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eVincentBu\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-System.Management`, `os-windows`, `arch-x64`, `blocking-outerloop`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-06-08T01:31:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Ehv2D",
                                           "createdAt":  "2022-06-08T09:43:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCgyQDQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "smasher164",
                                                                               "createdAt":  "2022-06-08T10:08:14Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Another retry that apparently doesn\u0027t work. @smasher164 do you want to take a look at this one as well?",
                                           "updatedAt":  "2022-06-08T09:43:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5EjSA4",
                                           "createdAt":  "2022-06-08T15:53:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "```\r\nC:\\git\\runtime\u003enet helpmsg 8\r\nNot enough memory resources are available to process this command.\r\n\r\nC:\\git\\runtime\u003enet helpmsg 21\r\nThe device is not ready.\r\n```\r\n\r\nThe test notes these are why it retries https://github.com/dotnet/runtime/blob/92fa9591d07cf4bf998086e1edd54e9a38f7435c/src/libraries/System.Management/tests/System/Management/ManagementObjectTests.cs#L69\r\n\r\nMy guess is that more retries won\u0027t help. If it\u0027s \"this process just got into a bad state\" then, wrapping RemoteExecutor.Invoke with retries might help.\r\n\r\nOr, just disable this test for Windows 11. It passes elsewhere:\r\n\r\n\u003c!-- csl: https://engsrvprod.kusto.windows.net/engineeringdata --\u003e\r\n```kusto\r\nTestResults\r\n| join kind=inner WorkItems on WorkItemId\r\n| join kind=inner Jobs on JobId\r\n| where Finished \u003e= now(-30d)\r\n| where Result == \"Pass\" or Message contains \"Assert.Equal\"\r\n| where Method == \"Invoke_Instance_And_Static_Method_Win32_Process\"\r\n| project \r\n  Pipeline = tostring(parse_json(Properties).DefinitionName),\r\n  Pipeline_Configuration = tostring(parse_json(Properties).configuration),\r\n  OS = QueueName,\r\n  Arch = tostring(parse_json(Properties).architecture),\r\n  Test = Type1,\r\n  Result,\r\n  Finished,\r\n // Duration,\r\n  //Method,\r\n // Build = tostring(parse_json(Properties).BuildNumber)\r\n  Message\r\n  | summarize count() by OS, Result//, Message//, Method\r\n```\r\n\r\n|OS|Result|count_|\r\n|---|---|---|\r\n|windows.10.amd64.serverrs5.open.svc|Pass|114|\r\n|windows.amd64.server2022.open.svc|Pass|114|\r\n|windows.81.amd64.open.svc|Pass|58|\r\n|windows.7.amd64.open.svc|Pass|56|\r\n|windows.10.amd64.client21h1.open.svc|Pass|115|\r\n|windows.11.amd64.client.open.rt|Fail|1|\r\n|windows.11.amd64.clientpre.open.svc|Fail|4|\r\n|windows.7.amd64|Pass|2|\r\n|windows.10.amd64.core|Pass|2|\r\n|windows.10.amd64|Pass|2|\r\n|windows.81.amd64|Pass|2|\r\n|windows.11.amd64.clientpre.open|Fail|3|\r\n",
                                           "updatedAt":  "2022-06-08T15:54:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HDy3d",
                                           "createdAt":  "2022-07-22T04:45:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "@smasher164  as you disabled the test, we remove blocking label.",
                                           "updatedAt":  "2022-07-22T04:45:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5IU7PU",
                                           "createdAt":  "2022-08-12T19:26:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Moving to Future as it is no longer failing (now Win11 disabled)",
                                           "updatedAt":  "2022-08-12T19:26:29Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Test failure System.Management.Tests.ManagementObjectTests.Invoke_Instance_And_Static_Method_Win32_Process",
        "labels":  [
                       "area-System.Management",
                       "os-windows",
                       "arch-x64"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/89450",
        "createdAt":  "2023-07-25T16:28:53Z",
        "number":  89450,
        "author":  "wzm199309",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-26T10:40:43Z",
        "body":  "\u003c!--This is just a template - feel free to delete any and all of it and replace as appropriate.--\u003e\r\n\r\n### Description\r\nWe are migrating our windows service project from net fx to NET6 and now we have observed a memory leak issue for Management Class which constantly contributed to memory leak (3Gb within 2 days), and issue can be reproduced in a vanilla NET project. \r\n\r\n```\r\nusing (ManagementClass volumeClass = new ManagementClass([\\\\\\\\.\\\\Root\\\\Microsoft\\\\Windows\\\\Storage](file://./Root/Microsoft/Windows/Storage) + \":MSFT_Volume\"))\r\n                {\r\n                    if (volumeClass != null)\r\n                    {\r\n                        using (ManagementObjectCollection volumes = volumeClass.GetInstances())\r\n                        {\r\n                            if (volumes != null)\r\n                            {\r\n                                foreach (ManagementObject volume in volumes)\r\n                                {\r\n                                     // volumeitems.Add(volume);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n```\r\n\r\n\r\n\u003c!--\r\n* Please share a clear and concise description of the performance problem.\r\n* Include minimal steps to reproduce the problem if possible. E.g.: the smallest possible code snippet; or a small repo to clone, with steps to run it.\r\n  --\u003e\r\n\r\n### Configuration\r\n* NET6\r\n* Windows Server 2016\r\n* X64\r\n* If relevant, what are the specs of the machine?\r\n\r\n\r\n### Regression?\r\n\r\nYes, issue can not be reproduced in WS2016 for net fx vanilla app.\r\n\r\n\u003c!--\r\n* Is this a regression from a previous build or release of .NET Core, or from .NET Framework? If you can try a previous release or build to find out, that can help us narrow down the problem. If you don\u0027t know, that\u0027s OK.\r\n  --\u003e\r\n\r\n### Data\r\n\r\n\u003c!--\r\n* Please include any benchmark results, images of graphs, timings or measurements, or callstacks that are relevant.\r\n* If possible please include text as text rather than images (so it shows up in searches).\r\n* If applicable please include before and after measurements.\r\n* There is helpful information about measuring code in this repo [here](https://github.com/dotnet/performance/blob/master/docs/benchmarking-workflow-dotnet-runtime.md).\r\n  --\u003e\r\n\r\n### Analysis\r\n\r\n\u003c!--\r\n* If you have an idea where the problem might lie, let us know that here.\r\n* Please include any pointers to code, relevant changes, or related issues you know of.\r\n* If you don\u0027t know, you can delete this section.\r\n  --\u003e\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOmP7ruA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5iXEeG",
                                           "createdAt":  "2023-07-25T17:05:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-management\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n\u003c!--This is just a template - feel free to delete any and all of it and replace as appropriate.--\u003e\r\n\r\n### Description\r\nWe are migrating our windows service project from net fx to NET6 and now we have observed a memory leak issue for Management Class which constantly contributed to memory leak (3Gb within 2 days), and issue can be reproduced in a vanilla NET project. \r\n\r\n```\r\nusing (ManagementClass volumeClass = new ManagementClass([\\\\\\\\.\\\\Root\\\\Microsoft\\\\Windows\\\\Storage](file://./Root/Microsoft/Windows/Storage) + \":MSFT_Volume\"))\r\n                {\r\n                    if (volumeClass != null)\r\n                    {\r\n                        using (ManagementObjectCollection volumes = volumeClass.GetInstances())\r\n                        {\r\n                            if (volumes != null)\r\n                            {\r\n                                foreach (ManagementObject volume in volumes)\r\n                                {\r\n                                     // volumeitems.Add(volume);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n```\r\n\r\n\r\n\u003c!--\r\n* Please share a clear and concise description of the performance problem.\r\n* Include minimal steps to reproduce the problem if possible. E.g.: the smallest possible code snippet; or a small repo to clone, with steps to run it.\r\n  --\u003e\r\n\r\n### Configuration\r\n* NET6\r\n* Windows Server 2016\r\n* X64\r\n* If relevant, what are the specs of the machine?\r\n\r\n\r\n### Regression?\r\n\r\nYes, issue can not be reproduced in WS2016 for net fx vanilla app.\r\n\r\n\u003c!--\r\n* Is this a regression from a previous build or release of .NET Core, or from .NET Framework? If you can try a previous release or build to find out, that can help us narrow down the problem. If you don\u0027t know, that\u0027s OK.\r\n  --\u003e\r\n\r\n### Data\r\n\r\n\u003c!--\r\n* Please include any benchmark results, images of graphs, timings or measurements, or callstacks that are relevant.\r\n* If possible please include text as text rather than images (so it shows up in searches).\r\n* If applicable please include before and after measurements.\r\n* There is helpful information about measuring code in this repo [here](https://github.com/dotnet/performance/blob/master/docs/benchmarking-workflow-dotnet-runtime.md).\r\n  --\u003e\r\n\r\n### Analysis\r\n\r\n\u003c!--\r\n* If you have an idea where the problem might lie, let us know that here.\r\n* Please include any pointers to code, relevant changes, or related issues you know of.\r\n* If you don\u0027t know, you can delete this section.\r\n  --\u003e\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ewzm199309\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-System.Management`, `tenet-performance`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-07-25T17:05:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5iXFsY",
                                           "createdAt":  "2023-07-25T17:09:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Can you use the Visual Studio memory profiler to see what is leaking and what is rooting it?",
                                           "updatedAt":  "2023-07-25T17:09:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5iXreM",
                                           "createdAt":  "2023-07-25T19:00:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Clockwork-Muse",
                                           "body":  "\u003e `// volumeitems.Add(volume)`\r\n\r\n`volumeitems` isn\u0027t in your code listing, and is potentially implied to be outside the entire scope.  Are you doing something like getting the management data in a loop?  Also, the current code sample is implying volume info is outliving what is the probable owner.\r\n\r\nBesides the request for a profiling run, we\u0027d also like to see a more developed repro/larger sample of code, because there may be a more local explanation for the leak.",
                                           "updatedAt":  "2023-07-25T19:00:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5iexw9",
                                           "createdAt":  "2023-07-26T17:35:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wzm199309",
                                           "body":  "@Clockwork-Muse  as simple as it can repro, any new worker service app who call this code can bump memory without a minute:\r\n```\r\nusing Microsoft.Extensions.Logging;\r\nusing System.Management;\r\n\r\nnamespace MemoryLeakApp\r\n{\r\n    public class Worker : BackgroundService\r\n    {\r\n        private readonly ILogger\u003cWorker\u003e _logger;\r\n\r\n        public Worker(ILogger\u003cWorker\u003e logger)\r\n        {\r\n            _logger = logger;\r\n        }\r\n\r\n        protected override async Task ExecuteAsync(CancellationToken stoppingToken)\r\n        {\r\n            while (!stoppingToken.IsCancellationRequested)\r\n            {\r\n                GetAllDriveStatus();\r\n                _logger.LogInformation(\"Worker running at: {time}\", DateTimeOffset.Now);\r\n                await Task.Delay(1000, stoppingToken);\r\n            }\r\n        }\r\n\r\n        /// \u003csummary\u003e\r\n        /// Return all drives status as stated in \u003csee cref=\"SQLDriveStatus\"/\u003e\r\n        /// \u003c/summary\u003e\r\n        /// \u003creturns\u003elist of drive status\u003c/returns\u003e\r\n        public static void GetAllDriveStatus()\r\n        {\r\n            // List\u003cManagementObject\u003e volumeitems = new List\u003cManagementObject\u003e();\r\n\r\n            try\r\n            {\r\n                using (ManagementClass volumeClass = new ManagementClass(\"\\\\\\\\.\\\\Root\\\\Microsoft\\\\Windows\\\\Storage\" + \":MSFT_Volume\"))\r\n                {\r\n                    if (volumeClass != null)\r\n                    {\r\n                        using (ManagementObjectCollection volumes = volumeClass.GetInstances())\r\n                        {\r\n                            if (volumes != null)\r\n                            {\r\n                                foreach (ManagementObject volume in volumes)\r\n                                {\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                // swallow the exception as status will updated every 1hr\r\n            }\r\n\r\n            // filter out invalid volumes which do not have drive letter\r\n            // but for cluster env found status, it is needed for UX to consume\r\n        }\r\n    }\r\n}\r\n```",
                                           "updatedAt":  "2023-07-26T17:35:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ifM4s",
                                           "createdAt":  "2023-07-26T19:09:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Clockwork-Muse",
                                           "body":  "Without profile info, it\u0027s impossible to know whether it\u0027s an actual leak, or whether it\u0027s just growth allowed because it hasn\u0027t hit process limits (ie, GC just hasn\u0027t run yet).\r\n\r\nThat aside, I\u0027m still recommending you transform and filter during the gather, not afterwards, so that you don\u0027t have instances outliving their potential owner.",
                                           "updatedAt":  "2023-07-26T19:09:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5if96D",
                                           "createdAt":  "2023-07-26T21:52:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wzm199309",
                                           "body":  "@carlossanlop @Clockwork-Muse  \r\n![image](https://github.com/dotnet/runtime/assets/40444440/71c4a9ce-d120-4d20-880b-08be2527d4bd)\r\n\r\n\r\ngc-dump show unrecycled objects, I can share gc-dump file if anywhere I can upload it.",
                                           "updatedAt":  "2023-07-26T21:52:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ig4Q-",
                                           "createdAt":  "2023-07-27T01:36:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Clockwork-Muse",
                                           "body":  "[`ManagementObject` implements `Dispose()`](https://learn.microsoft.com/en-us/dotnet/api/system.management.managementobject.dispose?view=dotnet-plat-ext-7.0#system-management-managementobject-dispose).\r\nYour code sample is leaking those, assuming iterating through them that way makes you the \"owner\".  If not, they shouldn\u0027t outlive their container instance.",
                                           "updatedAt":  "2023-07-27T01:36:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ig6g1",
                                           "createdAt":  "2023-07-27T01:49:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wzm199309",
                                           "body":  "@Clockwork-Muse  I didnt get it, what should we do in this code sample to avoid leaking ?",
                                           "updatedAt":  "2023-07-27T01:49:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ihJv8",
                                           "createdAt":  "2023-07-27T03:30:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "@wzm199309  \nto investigate this we\u0027d need a stand-alone minimal repro program.\n\nAlso I recommend you profile it yourself to see what is actually leaking and why and share the result.",
                                           "updatedAt":  "2023-07-27T03:30:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ilJMp",
                                           "createdAt":  "2023-07-27T15:57:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wzm199309",
                                           "body":  "@danmoseley the code I pasted is a vanilla repro, it will only take 30 seconds for you to set up and repro.",
                                           "updatedAt":  "2023-07-27T15:57:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6KwEfP",
                                           "createdAt":  "2024-09-04T03:48:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "triage: not a regression from previous .NET version but still an important issue to investigate. ",
                                           "updatedAt":  "2024-09-04T03:48:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Y_uu4",
                                           "createdAt":  "2025-01-01T04:37:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rafcolson",
                                           "body":  "I developed a small application with .NET Framework 4.72, called [ClearStandbyMemoryScheduler](https://github.com/rafcolson/ClearStandbyMemoryScheduler), and noticed that using `System.Management` is causing a memory leak, with using `ManagementObjectCollection`. \n\nView the code at https://github.com/rafcolson/ClearStandbyMemoryScheduler/blob/master/ClearStandbyMemory.cs#L28C1-L47C14.\n\nReproduce by installing the app and setting options _Standby memory_ to 0 and _Time interval_ to 1, or just continuously press _Start_ and _Stop_, with option _Execute immediately_ enabled. Windows Task Manager will show jumps of at least 0.1 MB. There are no jumps with option _No threshold_ enabled, because then the process will not be using `ManagementObjectSearcher.Get()`.\n\nOS: Windows 11, version 24H2\n\nPerhaps this can help to investigate the issue further.\n\n![Image](https://github.com/user-attachments/assets/9317dd69-e739-451e-8c88-d9154ee0ada3)\nEdit: It seems that this was a false alarm. After some time memory usage drops to normal, which indicates the GC is picking it up, once it is started, which was mentioned in https://github.com/dotnet/runtime/issues/89450#issuecomment-1652346412.",
                                           "updatedAt":  "2025-01-01T05:02:22Z"
                                       }
                                   ],
                         "totalCount":  12
                     },
        "title":  "Managed Memory Leak on NET for ManagementClass ",
        "labels":  [
                       "area-System.Management",
                       "tenet-performance"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/92518",
        "createdAt":  "2023-09-23T06:54:17Z",
        "number":  92518,
        "author":  "jkotas",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T22:00:35Z",
        "body":  "```\r\n    System.Management.Tests.ManagementObjectTests.Set_Property_Win32_ComputerSystem [FAIL]\r\n      System.Management.ManagementException : Invalid class \r\n      Stack Trace:\r\n        /_/src/libraries/System.Management/src/System/Management/ManagementException.cs(614,0): at System.Management.ManagementException.ThrowWithExtendedInfo(ManagementStatus errorCode)\r\n        /_/src/libraries/System.Management/src/System/Management/ManagementObject.cs(794,0): at System.Management.ManagementObject.Get()\r\n        /_/src/libraries/System.Management/tests/System/Management/ManagementObjectTests.cs(61,0): at System.Management.Tests.ManagementObjectTests.Set_Property_Win32_ComputerSystem()\r\n           at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n```\r\n\r\n```\r\n    System.Management.Tests.ManagementClassTests.Get_SourceFile_For_Win32_Processor(lang: CSharp) [FAIL]\r\n      System.Management.ManagementException : Not found \r\n      Stack Trace:\r\n        /_/src/libraries/System.Management/src/System/Management/ManagementException.cs(614,0): at System.Management.ManagementException.ThrowWithExtendedInfo(ManagementStatus errorCode)\r\n        /_/src/libraries/System.Management/src/System/Management/ManagementObject.cs(794,0): at System.Management.ManagementObject.Get()\r\n        /_/src/libraries/System.Management/src/System/Management/ManagementClass.cs(1438,0): at System.Management.ManagementClass.GetStronglyTypedClassCode(CodeLanguage lang, String filePath, String classNamespace)\r\n        /_/src/libraries/System.Management/tests/System/Management/ManagementClassTests.cs(39,0): at System.Management.Tests.ManagementClassTests.Get_SourceFile_For_Win32_Processor(CodeLanguage lang)\r\n           at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n```\r\n\r\n## Build Information\r\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=416627\r\nBuild error leg or test failing: System.Management.Tests.ManagementClassTests.ClassMembers_For_Win32_LogicalDisk\r\nPull request: https://github.com/dotnet/runtime/pull/92492\r\n\u003c!-- Error message template  --\u003e\r\n## Error Message\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssues.md#how-to-fill-out-a-known-issue-error-section).\r\n\r\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": \"System.Management.ManagementException\",\r\n  \"ErrorPattern\": \"\",\r\n  \"BuildRetry\": false,\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\n\r\n\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=416627\r\n**Error message validated:** `System.Management.ManagementException`\r\n**Result validation: :white_check_mark:** Known issue matched with the provided build.\r\n**Validation performed at:** 9/23/2023 6:55:24 AM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|0|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOdDHdew==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5nP86h",
                                           "createdAt":  "2023-09-23T06:54:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-management\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n```\r\n    System.Management.Tests.ManagementObjectTests.Set_Property_Win32_ComputerSystem [FAIL]      System.Management.ManagementException : Invalid class \r\n      Stack Trace:\r\n        /_/src/libraries/System.Management/src/System/Management/ManagementException.cs(614,0): at System.Management.ManagementException.ThrowWithExtendedInfo(ManagementStatus errorCode)\r\n        /_/src/libraries/System.Management/src/System/Management/ManagementObject.cs(794,0): at System.Management.ManagementObject.Get()\r\n        /_/src/libraries/System.Management/tests/System/Management/ManagementObjectTests.cs(61,0): at System.Management.Tests.ManagementObjectTests.Set_Property_Win32_ComputerSystem()\r\n           at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n```\r\n\r\n```\r\n    System.Management.Tests.ManagementClassTests.Get_SourceFile_For_Win32_Processor(lang: CSharp) [FAIL]\r\n      System.Management.ManagementException : Not found \r\n      Stack Trace:\r\n        /_/src/libraries/System.Management/src/System/Management/ManagementException.cs(614,0): at System.Management.ManagementException.ThrowWithExtendedInfo(ManagementStatus errorCode)\r\n        /_/src/libraries/System.Management/src/System/Management/ManagementObject.cs(794,0): at System.Management.ManagementObject.Get()\r\n        /_/src/libraries/System.Management/src/System/Management/ManagementClass.cs(1438,0): at System.Management.ManagementClass.GetStronglyTypedClassCode(CodeLanguage lang, String filePath, String classNamespace)\r\n        /_/src/libraries/System.Management/tests/System/Management/ManagementClassTests.cs(39,0): at System.Management.Tests.ManagementClassTests.Get_SourceFile_For_Win32_Processor(CodeLanguage lang)\r\n           at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n```\r\n\r\n## Build Information\r\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=416627\r\nBuild error leg or test failing: System.Management.Tests.ManagementClassTests.ClassMembers_For_Win32_LogicalDisk\r\nPull request: https://github.com/dotnet/runtime/pull/92492\r\n\u003c!-- Error message template  --\u003e\r\n## Error Message\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssues.md#how-to-fill-out-a-known-issue-error-section).\r\n\r\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": \"System.Management.ManagementException\",\r\n  \"ErrorPattern\": \"\",\r\n  \"BuildRetry\": false,\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\n\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ejkotas\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-System.Management`, `blocking-clean-ci`, `Known Build Error`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-09-23T06:54:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc50Md17",
                                           "createdAt":  "2024-02-16T22:29:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeffschwMSFT",
                                           "body":  "removing blocking-clean-ci as it has not failed in 30 days\r\n\r\n24-Hour Hit Count | 7-Day Hit Count | 1-Month Count\r\n-- | -- | --\r\n0 | 0 | 0\r\n",
                                           "updatedAt":  "2024-02-16T22:29:34Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "System.Management.Tests fail with System.Management.ManagementException",
        "labels":  [
                       "area-System.Management",
                       "test-bug",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/117539",
        "createdAt":  "2025-07-11T13:31:09Z",
        "number":  117539,
        "author":  "cyungmann",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-17T14:51:58Z",
        "body":  "### Description\n\nUsing statements do not properly dispose of `System.Management.ManagementBaseObject` or `System.Management.ManagementObject` due to both classes defining new `Dispose()` methods that hide the base class method with `new` rather than overriding the `virtual void Dispose(bool disposing)` from `System.ComponentModel.Component`.\n\n### Reproduction Steps\n\n```csharp\nusing System.Management;\n\nusing (var mo = new ManagementObject()) {\n\n} // step through with a debugger and observe that neither ManagementObject.Dispose() nor ManagementBaseObject.Dispose() are called, but only Componnet.Dispose()\n```\n\n### Expected behavior\n\n`ManagementObject` and `ManagementBaseObject` have disposal code called.\n\n### Actual behavior\n\nOnly `Component` has its disposal code called.\n\n### Regression?\n\nNo\n\n### Known Workarounds\n\nAvoid using `using` statements with these classes and instead use a try/finally.\n\n### Configuration\n\n.NET 9\nWindows 10 Enterprise\nx64\n\n### Other information\n\nSee also https://stackoverflow.com/a/11896367/9287029",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOt9foeg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc62h-QG",
                                           "createdAt":  "2025-07-11T13:31:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-management\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-07-11T13:31:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc62jdA0",
                                           "createdAt":  "2025-07-11T15:29:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "huoyaoyuan",
                                           "body":  "This is because `ManagementBaseObject` or `ManagementObject` doesn\u0027t specify `IDisposable` implementation, thus `new Dispose` isn\u0027t marked as interface implementation.\n\nExample:\n\nhttps://sharplab.io/#v2:EYLgxg9gTgpgtADwGwBYA0AXEUCuA7AHwAEAmARgFgAoaogBgAIAKPGAdwYBEymBKX6gG9qDUQ2oBfarUYt2XEnwFVhVMeKpSaVIgGYGpBgGEyDEAwCSnAJYBnAA4RbAQ2AAbGEJFi9BlFztHWxg+b1FVdXUiMgBOJgAiE3jeAG4whi0tWn1DbjNjShV031YOIn8bBycQ5XUIyNFouPjuZLS1MUzpbV9DIxJ8q0CnVw8vDsaciuHg0ImGeoamhP629K6enIHOAfN+tEtKoNHPIvmS+XKAqtnasUXI5ZaSNfnMoA=",
                                           "updatedAt":  "2025-07-11T15:29:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc63AGz7",
                                           "createdAt":  "2025-07-14T16:45:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "Not clear why this is the case, but it\u0027s been that way since .NET 2.0.  I couldn\u0027t find anything in the internal source history to indicate why.  System.Management is in maintenance mode so we\u0027re unlikely to change this.",
                                           "updatedAt":  "2025-07-14T16:45:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc63Ar4E",
                                           "createdAt":  "2025-07-14T17:37:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "cyungmann",
                                           "body":  "@ericstj is there a replacement for performing WMI queries from C# code? ",
                                           "updatedAt":  "2025-07-14T17:37:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc63CuxZ",
                                           "createdAt":  "2025-07-14T20:52:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "At one point that was supposed to be Microsoft Management Infrastructure - but not sure any more.  This portion of Windows is owned by the Powershell folks - you can ask that question over in https://github.com/powershell/powershell.  They may reccomend that folks use platform API rather than WMI.",
                                           "updatedAt":  "2025-07-14T20:52:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc631-h6",
                                           "createdAt":  "2025-07-17T14:51:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "cyungmann",
                                           "body":  "Thank you, @ericstj. There is [this discussion](https://github.com/PowerShell/PowerShell/discussions/24794) in the PowerShell repo open since January with no response. Any suggestions for bringing attention to it / getting a response?",
                                           "updatedAt":  "2025-07-17T14:51:58Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "using statement does not work with ManagementBaseObject or ManagementObject",
        "labels":  [
                       "area-System.Management"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/119631",
        "createdAt":  "2025-09-12T08:41:56Z",
        "number":  119631,
        "author":  "ManickaP",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-12T12:26:06Z",
        "body":  "```\n  Discovering: System.Management.Tests (method display = ClassAndMethod, method display options = None)\n  Discovered:  System.Management.Tests (found 10 of 28 test cases)\n  Starting:    System.Management.Tests (parallel test collections = on [2 threads], stop on fail = off)\n    System.Management.Tests.ManagementObjectTests.Serialize_ManagementException [FAIL]\n      System.PlatformNotSupportedException : BinaryFormatter serialization and deserialization have been removed. See https://aka.ms/binaryformatter for more information.\n      Stack Trace:\n        /_/src/libraries/System.Runtime.Serialization.Formatters/src/System/Runtime/Serialization/Formatters/Binary/BinaryFormatter.Removed.cs(18,0): at System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(Stream serializationStream, Object graph)\n        /_/src/libraries/System.Management/tests/System/Management/ManagementObjectTests.cs(118,0): at System.Management.Tests.ManagementObjectTests.Serialize_ManagementException()\n           at System.RuntimeMethodHandle.InvokeMethod(ObjectHandleOnStack target, Void** arguments, ObjectHandleOnStack sig, BOOL isConstructor, ObjectHandleOnStack result)\n        /_/src/coreclr/System.Private.CoreLib/src/System/RuntimeHandles.cs(1168,0): at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\n        /_/src/coreclr/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.CoreCLR.cs(36,0): at System.Reflection.MethodBaseInvoker.InterpretedInvoke_Method(Object obj, IntPtr* args)\n        /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs(57,0): at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)\n```\n\nrelease/10.0 branch, log: https://helixr1107v0xd1eu3ibi6ka.blob.core.windows.net/dotnet-runtime-refs-pull-119521-merge-62a904c1b27d4ac6b4/System.Management.Tests/1/console.64e89dbb.log?skoid=8eda00af-b5ec-4be9-b69b-0919a2338892\u0026sktid=72f988bf-86f1-41af-91ab-2d7cd011db47\u0026skt=2025-09-12T08%3A40%3A46Z\u0026ske=2025-09-12T09%3A40%3A46Z\u0026sks=b\u0026skv=2024-11-04\u0026sv=2024-11-04\u0026st=2025-09-12T08%3A40%3A46Z\u0026se=2025-09-12T09%3A40%3A46Z\u0026sr=c\u0026sp=r\u0026sig=oYt%2B22iKNslhX9cY%2B5n165xvAJGP6qq3a5WguEf76bw%3D\n\nSeems like Windows only problem.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOw86COw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc7DzoI7",
                                           "createdAt":  "2025-09-12T12:26:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-management\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-09-12T12:26:06Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "System.PlatformNotSupportedException : BinaryFormatter serialization and deserialization have been removed.",
        "labels":  [
                       "area-System.Management",
                       "untriaged"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/119645",
        "createdAt":  "2025-09-12T14:42:38Z",
        "number":  119645,
        "author":  "viveknuna",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-16T20:01:17Z",
        "body":  "### Description\n\nI have a windows service which is running as expected. It runs a powershell script on the machine. It was working fine before 3 days, but not it has started giving the runtime excption on windows 11 machine. Its failing (giving exception on myPipeLine.Invoke() ) only on few selected windows 11 machines but working as expected on many windows 11 machines. Its failing with any simple script. my target framework is 4.7.2.\n\nWhen I checked on the machine on which its working that has the System.Management.Automation.dll on the path C:\\Windows\\assembly\\GAC_MSIL\\System.Management.Automation\\1.0.0.0__31bf3856ad364e35. But I saw on machine on which its failing this dll is not present, so is the path of System.Management.Automation.dll changed recently?\n\nIs it caused by recent windows release?\n\n025-09-12 12:50:01.1250|INFO|sidekickLog| RuntimeException: System.Management.Automation.CmdletInvocationException: Illegal characters in path. ---\u003e System.ArgumentException: Illegal characters in path. at System.Security.Permissions.FileIOPermission.EmulateFileIOPermissionChecks(String fullPath) at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) at System.IO.StreamReader..ctor(String path, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 bufferSize, Boolean checkHost) at System.IO.File.InternalReadAllText(String path, Encoding encoding, Boolean checkHost) at Microsoft.PowerShell.Commands.AddTypeCommandBase.PopulateSource() at Microsoft.PowerShell.Commands.AddTypeCommand.EndProcessing() at System.Management.Automation.CommandProcessorBase.Complete() End of inner exception stack trace --- at System.Management.Automation.Runspaces.PipelineBase.Invoke(IEnumerable input) at Agent.Tasks.TaskImpl.Advanced.PowerShellTask.\u003c\u003ec__DisplayClass43_3.b__3() in C:\\work\\uno-Automation\\src_.Net\\Projects\\Agent\\Agent.TaskCatalog\\TaskImpl\\Advanced\\PowerShellTask.cs:line 764 at Agent.Core.Utils.Time.StopwatchExtensions.TraceTimeOf[T](String traceInfoName, Func`1 func) at Agent.Tasks.TaskImpl.Advanced.PowerShellTask.Run(RunConfig config, CancellationToken abortToken) in C:\\work\\uno-Automation\\src_.Net\\Projects\\Agent\\Agent.TaskCatalog\\TaskImpl\\Advanced\\PowerShellTask.cs:line 763\n\n```\nprivate RunOutput Run(RunConfig config, CancellationToken abortToken)\n{\n    var common = new PowerShellCommonHelpers();\n    // ReSharper disable ConvertToUsingDeclaration\n    using (var eFs = new FileStream(config.ErrorFilePath, FileMode.Create, FileAccess.Write, FileShare.None))\n    using (var errorWriter = new StreamWriter(eFs, new UTF8Encoding(false)))\n    using (var oFs = new FileStream(config.OutputFilePath, FileMode.Create, FileAccess.Write, FileShare.None))\n    using (var outputWriter = new StreamWriter(oFs, new UTF8Encoding(false)) { AutoFlush = false })\n    {\n        var runOutput = new RunOutput();\n\n        var strPrevousExecutionPolicy = string.Empty;\n        var ysnOk = true;\n\n        if (config.OverrideExecutionPolicy)\n        {\n            //Check if PowerShell GPO is active; do NOT set execution policy if GPO is active because it will fail!\n            if (PowerShellCommon.fysnPowerShellGpoActive())\n                config.OverrideExecutionPolicy = false;\n            //To prevent reset to original execution policy later on\n            else\n                ysnOk = PowerShellCommon.fysnSetExecutionPolicy(\"Unrestricted\", ref strPrevousExecutionPolicy);\n        }\n\n        if (ysnOk)\n        {\n            // ReSharper disable once UnusedVariable USED FOR DEBUGGING\n            const string resourceText = \"\";\n            var scriptToRun = string.IsNullOrEmpty(resourceText)\n                ? config.Source\n                : File.ReadAllText(resourceText);\n\n            var myRunSpaceConfiguration = TryLoadConsoleFile(config, errorWriter, outputWriter);\n\n            var myRespsHost = new RESStreamingPSHost();\n            myRespsHost.ProgressMessage += MyRespsHostOnProgressMessage;\n            // ReSharper disable once AccessToDisposedClosure lambda is in scope.\n            myRespsHost.OnOutput += value =\u003e outputWriter.Write(value);\n            // ReSharper disable once AccessToDisposedClosure lambda is in scope.\n            myRespsHost.OnError += value =\u003e errorWriter.Write(value);\n\n\n            if (config.OutputWidth == 0) config.OutputWidth = 16386;\n\n            RESDiagnostics.TraceInfo(\"Changing output buffer width to {0}.\", config.OutputWidth);\n            myRespsHost.BufferSize = new Size(config.OutputWidth, 1000);\n\n            Runspace myRunSpace;\n            if (myRunSpaceConfiguration != null)\n            {\n                myRunSpace = RunspaceFactory.CreateRunspace(myRespsHost, myRunSpaceConfiguration);\n                RESDiagnostics.TraceInfo(\"Done loading with settings.\");\n            }\n            else\n            {\n                myRunSpace = RunspaceFactory.CreateRunspace(myRespsHost);\n                RESDiagnostics.TraceInfo(\"Done loading without settings.\");\n            }\n\n            myRunSpace.Open();\n\n            var myPipeLine = CreatePipeline(myRunSpace, scriptToRun, config.Mappings);\n\n            RESDiagnostics.TraceInfo($\"Running script.{scriptToRun}\");\n            try\n            {\n                var abortCheckerTokenSource = new CancellationTokenSource();\n                Task.Factory.StartNew(\n                    (abortChecker) =\u003e\n                    {\n                        while (!abortToken.IsCancellationRequested \u0026\u0026 !abortCheckerTokenSource.Token.IsCancellationRequested)\n                        {\n                            Thread.Sleep(200);\n                        }\n\n                        if (abortToken.IsCancellationRequested)\n                        {\n                            myRunSpace.Close();\n                            myPipeLine.Stop();\n                        }\n                    }, abortCheckerTokenSource.Token);\n\n                var myResults =\n                    StopwatchExtensions.TraceTimeOf(\"Running script.\", () =\u003e myPipeLine.Invoke());\n\n                abortCheckerTokenSource.Cancel();\n                abortCheckerTokenSource.Dispose();\n\n                if (abortToken.IsCancellationRequested)\n                {\n                    myRunSpace.Close();\n                    return runOutput;\n                }\n\n                StopwatchExtensions.TraceTimeOf($\"Output messages {myResults.Count}\", outputStream =\u003e\n                {\n                    foreach (var myPsObjectLoopVariable in myResults)\n                    {\n                        if (abortToken.IsCancellationRequested)\n                        {\n                            myRunSpace.Close();\n                            return;\n                        }\n\n                        var myPsObject = myPsObjectLoopVariable;\n                        if (myPsObject.BaseObject is ErrorRecord record)\n                        {\n                            outputStream.Write(record.ToString());\n                            outputStream.WriteLine(record.InvocationInfo.PositionMessage);\n                        }\n                        else\n                        {\n                            outputStream.WriteLine(myPsObject.ToString());\n                        }\n                    }\n                }, outputWriter);\n\n                if (abortToken.IsCancellationRequested)\n                {\n                    return runOutput;\n                }\n\n                StopwatchExtensions.TraceTimeOf(\"Messages on the error pipeline\", errorStream =\u003e\n                {\n                    while (!myPipeLine.Error.EndOfPipeline)\n                    {\n                        if (abortToken.IsCancellationRequested)\n                        {\n                            myRunSpace.Close();\n                            return;\n                        }\n\n                        var myPsObject = (PSObject)myPipeLine.Error.Read();\n                        if (myPsObject.BaseObject is ErrorRecord record)\n                        {\n                            errorStream.Write(record.ToString());\n                            errorStream.WriteLine(record.InvocationInfo.PositionMessage);\n                        }\n                        else\n                        {\n                            errorStream.WriteLine(myPsObject.ToString());\n                        }\n                    }\n                }, errorWriter);\n\n                if (abortToken.IsCancellationRequested)\n                {\n                    myRunSpace.Close();\n                    return runOutput;\n                }\n\n                runOutput.ExitCode = myRespsHost.ExitCode;\n\n                if (SidekickState.Instance.AgentIPC != null)\n                {\n                    StopwatchExtensions.TraceTimeOf(\"Extract Variables To Parameters\", () =\u003e\n                    {\n                        common.ExtractVariablesToParameters(myRunSpace, scriptToRun, OutputMaxSize, out _wasParameterTrimmed);\n                    });\n\n                    StopwatchExtensions.TraceTimeOf(\"Blob Override\", () =\u003e\n                    {\n                        var automationfabricbloboverride = common.GlobalParameterValue(\n                            myRunSpace.SessionStateProxy.PSVariable,\n                            \"automationfabricbloboverride\",\n                            scriptToRun\n                        );\n                        if (automationfabricbloboverride == null) return;\n\n                        _blobOverride = automationfabricbloboverride.ToString();\n                        RESDiagnostics.TraceInfo($\"blob overriden with length: {_blobOverride.Length}\");\n                    });\n                }\n            }\n            catch (RuntimeException ex)\n            {\n                RESDiagnostics.TraceInfo($\" RuntimeException: {ex.ToString()}\");\n                RESDiagnostics.TraceError($\"A runtime exception occured\");\n\n                errorWriter.Write(ex.Message);\n\n                if (ex.ErrorRecord.InvocationInfo != null)\n                    errorWriter.WriteLine(ex.ErrorRecord.InvocationInfo.PositionMessage);\n            }\n            catch (Exception ex)\n            {\n                RESDiagnostics.TraceInfo($\" Exception: {ex.ToString()}\");\n                RESDiagnostics.TraceError(\"A general exception occured.\");\n\n                errorWriter.Write(ex.Message);\n            }\n\n\n            RESDiagnostics.TraceInfo(\"Result code\");\n            var resultCodeValue = common.GlobalParameterValue(\n                myRunSpace.SessionStateProxy.PSVariable,\n                \"resultcodeinternalapivalue\",\n                scriptToRun\n            );\n\n\n            if (resultCodeValue != null \u0026\u0026 int.TryParse(resultCodeValue.ToString(), out var resCode))\n                runOutput.ResCode = resCode;\n\n            try\n            {\n                RESDiagnostics.TraceInfo(\"Preparing to extract the extra log\");\n\n                var extraLog = common.GlobalParameterValue(\n                    myRunSpace.SessionStateProxy.PSVariable,\n                    \"internalenginelogerrordetails\",\n                    scriptToRun\n                )?.ToString();\n                if (!string.IsNullOrEmpty(extraLog))\n                {\n                    RESDiagnostics.TraceError(extraLog);\n                }\n                else\n                {\n                    RESDiagnostics.TraceInfo(\"Extra log not found\");\n                }\n            }\n            catch (Exception e)\n            {\n                RESDiagnostics.TraceInfo($\"Extra log exception {e.Message}, {e.StackTrace}\");\n            }\n\n\n\n\n            myRunSpace.Close();\n\n            if (!config.OverrideExecutionPolicy) return runOutput;\n\n            RESDiagnostics.TraceInfo(\"Revert execution policy\");\n            string dummy = null;\n            PowerShellCommon.fysnSetExecutionPolicy(strPrevousExecutionPolicy, ref dummy);\n        }\n        else\n        {\n            errorWriter.Write(\"Unable to set execution policy.\");\n        }\n\n        return runOutput;\n    }\n}\n```\n\n### Reproduction Steps\n\nRun the above mentioned code\n\n### Expected behavior\n\nIt shoud run the script\n\n### Actual behavior\n\nits giving the exception\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOxKr10A==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc7ED-fa",
                                           "createdAt":  "2025-09-14T09:12:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "viveknuna",
                                           "body":  "In my opinion it’s looking like a recent windows update issue KB5065426",
                                           "updatedAt":  "2025-09-14T09:12:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7EqvXQ",
                                           "createdAt":  "2025-09-16T16:35:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-management\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-09-16T16:35:41Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "RuntimeException: System.Management.Automation.CmdletInvocationException: Illegal characters in path. ---\u003e System.ArgumentException:",
        "labels":  [
                       "area-System.Management",
                       "untriaged"
                   ]
    }
]
