[
    {
        "url":  "https://github.com/dotnet/runtime/issues/1290",
        "createdAt":  "2020-01-03T23:19:00Z",
        "number":  1290,
        "author":  "AArnott",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-10-05T20:42:00Z",
        "body":  "## Rationale and usage\r\n\r\nVS calls `ResourceManager.GetString` a lot, particularly during startup. But it often throws `MissingManifestResourceException` and VS just has to swallow it and take the fallback path. This is sometimes among the top exceptions thrown during startup and significantly disrupts debugging VS when breaking on first chance exceptions as part of a bug investigation. \r\n\r\nCan we please get a new `TryGetString` method added (at least to .NET Core) so we can avoid the first chance exceptions that disrupts the debugging-VS experience?\r\n\r\n## Proposed API\r\n\r\n```cs\r\npublic class ResourceManager\r\n{\r\n    /// \u003csummary\u003e\r\n    /// Retrieves the value of the string resource localized for the specified culture if it exists.\r\n    /// \u003c/summary\u003e\r\n    /// \u003cparam name=\"name\"\u003eThe name of the resource to retrieve.\u003c/param\u003e\r\n    /// \u003cparam name=\"culture\"\u003eAn object that represents the culture for which the resource is localized.\u003c/param\u003e\r\n    /// \u003cparam name=\"value\"\u003eReceives the string resource if it exists.\u003c/param\u003e\r\n    /// \u003creturns\u003e\u003cc\u003etrue\u003c/c\u003e if a resource with the given \u003cparamref name=\"name\"/\u003e was found; \u003cc\u003efalse\u003c/c\u003e otherwise.\u003c/returns\u003e\r\n    public virtual bool TryGetString(string name, CultureInfo culture, out string value);\r\n}\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHON7fuUg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU3MDczNDUzMg==",
                                           "createdAt":  "2020-01-04T00:03:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "@AArnott could you please format as an API proposal? (https://github.com/dotnet/runtime/blob/master/docs/project/api-review-process.md)\r\n\r\nThere has been some pushback in the past for having Try API\u0027s for reasons other than performance, but debuggability is important. ",
                                           "updatedAt":  "2020-01-04T00:03:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU3MDc1Njg5Ng==",
                                           "createdAt":  "2020-01-04T04:55:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "Why is VS trying to look for resource strings that do not exist?",
                                           "updatedAt":  "2020-01-04T04:55:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU3MTE1MTQwNA==",
                                           "createdAt":  "2020-01-06T14:10:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AArnott",
                                           "body":  "@danmosemsft Yes, I\u0027ll revise this issue to conform as requested.\r\n@jkotas I suspect there are multiple reasons, but one that I see is VS has a very old policy of looking for resources through a list of resource managers for a resource. The resource may not even exist, as VS tries to interpret resource *names* to know whether they are native or managed resources, etc., and then directs the resource lookup based on parsing of the name, so it might be wrong sometimes. Changing this design would be a breaking change to public VS extensibility that dates back well over a decade.",
                                           "updatedAt":  "2020-01-06T14:10:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc43taDl",
                                           "createdAt":  "2021-10-05T18:15:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bartonjs",
                                           "body":  "[Video](https://www.youtube.com/watch?v=1-PVX45YGcU\u0026t=0h0m0s)\n\nSince the existing `GetString` returns `null` (vs throwing) when a specific resource is missing, it\u0027s unclear what the Try is trying... so we\u0027d need more information to discuss this further.\r\n\r\nSpecific examples of where the exceptions are occurring would be useful, so we can decide what the appropriate remediation is.",
                                           "updatedAt":  "2021-10-05T19:25:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc43ta05",
                                           "createdAt":  "2021-10-05T18:19:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AArnott",
                                           "body":  "The message of the exception that I\u0027m trying to avoid is:\r\n\r\n\u003e Could not find any resources appropriate for the specified culture or the neutral culture.  Make sure \"VSPackage.resources\" was correctly embedded or linked into assembly \"Microsoft.VisualStudio.Progression.Native.VSPackage\" at compile time, or that all the satellite assemblies required are loadable and fully signed.\r\n\r\nThe callstack is\r\n```\r\n\u003e\tmscorlib.dll!System.Resources.ManifestBasedResourceGroveler.HandleResourceStreamMissing(string fileName)\tUnknown\r\n \tmscorlib.dll!System.Resources.ManifestBasedResourceGroveler.GrovelForResourceSet(System.Globalization.CultureInfo culture, System.Collections.Generic.Dictionary\u003cstring, System.Resources.ResourceSet\u003e localResourceSets, bool tryParents, bool createIfNotExists, ref System.Threading.StackCrawlMark stackMark)\tUnknown\r\n \tmscorlib.dll!System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo requestedCulture, bool createIfNotExists, bool tryParents, ref System.Threading.StackCrawlMark stackMark)\tUnknown\r\n \tmscorlib.dll!System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo culture, bool createIfNotExists, bool tryParents)\tUnknown\r\n \tmscorlib.dll!System.Resources.ResourceManager.GetObject(string name, System.Globalization.CultureInfo culture, bool wrapUnmanagedMemStream)\tUnknown\r\n \tMicrosoft.VisualStudio.CommonIDE.dll!Microsoft.VisualStudio.CommonIDE.ResourceLoader.FindResource.AnonymousMethod__0(System.Resources.ResourceManager resMgr, string name, out byte[] result)\tUnknown\r\n \tMicrosoft.VisualStudio.CommonIDE.dll!Microsoft.VisualStudio.CommonIDE.ResourceLoader.TryGetResource\u003cSystem.__Canon\u003e(System.Resources.ResourceManager resMgr, string name, Microsoft.VisualStudio.CommonIDE.ResourceLoader.GetResourceDelegate\u003cSystem.__Canon\u003e getResource, out System.__Canon result)\tUnknown\r\n \tMicrosoft.VisualStudio.CommonIDE.dll!Microsoft.VisualStudio.CommonIDE.ResourceLoader.TryEachApplicableNamespace\u003cbyte[]\u003e(string resourceName, Microsoft.VisualStudio.CommonIDE.ResourceLoader.GetResourceDelegate\u003cbyte[]\u003e getResource)\tUnknown\r\n \tMicrosoft.VisualStudio.CommonIDE.dll!Microsoft.VisualStudio.CommonIDE.ResourceLoader.GetBlob(string resourceName, int lcid, out byte[] bytes, ref int count)\tUnknown\r\n```",
                                           "updatedAt":  "2021-10-05T18:19:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc43teCT",
                                           "createdAt":  "2021-10-05T18:36:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AArnott",
                                           "body":  "I suspect the resources are indeed absent from the assembly since this code \"usually\" works.\r\n\r\nIt appears from the code that VS just given an individual resource name but no name of the embedded resource stream. [VS loops](https://dev.azure.com/devdiv/DevDiv/_git/VS?path=/src/env/vscore/package/ResourceLoader/resloader.cs\u0026version=GBmain\u0026line=346\u0026lineEnd=351\u0026lineStartColumn=1\u0026lineEndColumn=1\u0026lineStyle=plain\u0026_a=contents) over [a series of by-convention resource names](https://dev.azure.com/devdiv/DevDiv/_git/VS?path=/src/env/vscore/package/ResourceLoader/resloader.cs\u0026version=GBmain\u0026line=215\u0026lineEnd=216\u0026lineStartColumn=1\u0026lineEndColumn=1\u0026lineStyle=plain\u0026_a=contents) till it finds one that exists.\r\n\r\nThe name of the resource being searched for is `1000.ctmenu` which is as named from a pkgdef file:\r\n```\r\n\"{f5aee24d-62a8-4a0e-8164-75a76da2ddb7}\"=\", 1000.ctmenu, 1\"\r\n```\r\nThe pkgdef entry comes from [this source](https://dev.azure.com/devdiv/DevDiv/_git/VS?path=/src/Progression/Src/Providers/NativeProvider/NativeProviderVSPackage/NativeProviderVSPackage.cs\u0026version=GBmain\u0026line=36\u0026lineEnd=37\u0026lineStartColumn=1\u0026lineEndColumn=1\u0026lineStyle=plain\u0026_a=contents).\r\n\r\nThe .dll [defines a 1000.ctmenu resource](https://dev.azure.com/devdiv/DevDiv/_git/VS?path=/src/Progression/Src/Providers/NativeProvider/NativeProviderVSPackage/VSPackage.resx\u0026version=GBmain\u0026line=130\u0026lineEnd=133\u0026lineStartColumn=1\u0026lineEndColumn=1\u0026lineStyle=plain\u0026_a=contents), which appears *twice*, including an oddly named resource:\r\n![image](https://user-images.githubusercontent.com/3548/136083084-2d29821b-13d3-4725-aff8-831285522795.png)",
                                           "updatedAt":  "2021-10-05T18:38:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc43tfRo",
                                           "createdAt":  "2021-10-05T18:42:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AArnott",
                                           "body":  "Ok, so both of the resources under which the 1000.ctmenu is found are in the list of 6 resource names that VS checks for. So it seems if VS could check for the embedded resource by name before using the ResourceManager, we may be able to avoid the exception.",
                                           "updatedAt":  "2021-10-05T18:42:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc43tgA1",
                                           "createdAt":  "2021-10-05T18:45:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AArnott",
                                           "body":  "Oh, interestingly [VS already tests](https://dev.azure.com/devdiv/DevDiv/_git/VS?path=/src/env/vscore/package/ResourceLoader/resloader.cs\u0026version=GBmain\u0026line=233\u0026lineEnd=233\u0026lineStartColumn=21\u0026lineEndColumn=42\u0026lineStyle=plain\u0026_a=contents) that the resource streams exist before trying to retrieve a resource from them.",
                                           "updatedAt":  "2021-10-05T18:45:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc43thWn",
                                           "createdAt":  "2021-10-05T18:52:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AArnott",
                                           "body":  "[This logic](https://dev.azure.com/devdiv/DevDiv/_git/VS?path=/src/env/vscore/package/ResourceLoader/resloader.cs\u0026version=GBmain\u0026line=253\u0026lineEnd=263\u0026lineStartColumn=1\u0026lineEndColumn=1\u0026lineStyle=plain\u0026_a=contents) is why we are looking for a `VSPackage` resource even though we already determined that that resource is not in the main assembly. We basically cannot tell whether a satellite assembly exists that may define that resource unless we then ask .NET to find it, and then it throws.",
                                           "updatedAt":  "2021-10-05T18:52:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc43tozy",
                                           "createdAt":  "2021-10-05T19:29:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "KalleOlaviNiemitalo",
                                           "body":  "If it\u0027s using mscorlib.dll, how would a .NET Core change even help here?",
                                           "updatedAt":  "2021-10-05T19:29:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc43t-5S",
                                           "createdAt":  "2021-10-05T20:42:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AArnott",
                                           "body":  "@KalleOlaviNiemitalo These days new APIs go into .NET Core first, and then are considered for .NET Framework. I don\u0027t know if .NET Framework is taking new APIs any more, but if not, the VS scenario could be true for a similar extensible app on .NET Core, so it\u0027s still goodness.",
                                           "updatedAt":  "2021-10-05T20:42:00Z"
                                       }
                                   ],
                         "totalCount":  11
                     },
        "title":  "Add ResourceManager.TryGetString API to avoid exceptions",
        "labels":  [
                       "api-needs-work",
                       "area-System.Resources"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/40427",
        "createdAt":  "2020-08-05T23:01:06Z",
        "number":  40427,
        "author":  "Chiramisudo",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODFkupA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Chiramisudo",
                                            "createdAt":  "2020-08-05T23:05:26Z"
                                        },
                                        {
                                            "content":  "EYES",
                                            "user":  "Chiramisudo",
                                            "createdAt":  "2020-08-05T23:05:29Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "Chiramisudo",
                                            "createdAt":  "2020-08-05T23:05:43Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "msschl",
                                            "createdAt":  "2020-08-08T14:00:56Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "msschl",
                                            "createdAt":  "2020-08-08T14:00:56Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "GSPP",
                                            "createdAt":  "2020-08-22T10:37:20Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "GSPP",
                                            "createdAt":  "2020-08-22T10:37:21Z"
                                        },
                                        {
                                            "content":  "ROCKET",
                                            "user":  "GSPP",
                                            "createdAt":  "2020-08-22T10:37:24Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "kaijurgeit",
                                            "createdAt":  "2020-09-16T14:59:41Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "bugproof",
                                            "createdAt":  "2020-09-21T12:58:32Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Zymlex",
                                            "createdAt":  "2020-10-10T11:30:34Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "mdelz",
                                            "createdAt":  "2020-10-19T10:54:28Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Ghost4Man",
                                            "createdAt":  "2020-12-10T11:32:33Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "wldevries",
                                            "createdAt":  "2021-05-01T07:24:37Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "AndreyMikhailov",
                                            "createdAt":  "2021-08-25T16:24:57Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "AndreyMikhailov",
                                            "createdAt":  "2021-08-25T16:25:00Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jhm-ciberman",
                                            "createdAt":  "2021-09-26T23:21:13Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "jhm-ciberman",
                                            "createdAt":  "2021-09-26T23:21:14Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Roadrunner67",
                                            "createdAt":  "2021-11-12T11:16:31Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "Roadrunner67",
                                            "createdAt":  "2021-11-12T11:16:54Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Matthewsre",
                                            "createdAt":  "2022-01-19T18:28:07Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "aetasoul",
                                            "createdAt":  "2022-01-20T14:01:57Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "TobiasKnauss",
                                            "createdAt":  "2022-01-24T10:59:14Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "gureedo",
                                            "createdAt":  "2022-06-10T13:22:09Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Atulin",
                                            "createdAt":  "2022-07-15T02:47:37Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "cremor",
                                            "createdAt":  "2022-07-15T19:49:43Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "mlsomers",
                                            "createdAt":  "2022-07-18T13:22:21Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "TrickyShit",
                                            "createdAt":  "2022-08-16T15:46:05Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "JonathanIlk",
                                            "createdAt":  "2022-11-24T23:55:05Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "natenho",
                                            "createdAt":  "2022-12-31T05:33:08Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "avsorokin",
                                            "createdAt":  "2023-01-10T21:10:24Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "astrowalker",
                                            "createdAt":  "2023-05-08T07:36:51Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "AlexisAuriac",
                                            "createdAt":  "2023-09-08T08:08:20Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "vcpp",
                                            "createdAt":  "2023-10-20T09:51:31Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "m-gasser",
                                            "createdAt":  "2024-03-20T08:42:26Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "otto-gebb",
                                            "createdAt":  "2024-06-13T12:42:02Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "darBis",
                                            "createdAt":  "2024-07-02T12:15:13Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "SelvinPL",
                                            "createdAt":  "2024-07-17T21:51:48Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "SadPencil",
                                            "createdAt":  "2024-09-09T14:42:13Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "rosieks",
                                            "createdAt":  "2024-10-05T20:26:03Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "n0099",
                                            "createdAt":  "2025-07-03T11:02:31Z"
                                        }
                                    ],
                          "totalCount":  41
                      },
        "updatedAt":  "2024-10-10T14:53:11Z",
        "body":  "I have an application that is used in other countries. When receiving exception / error logs, they\u0027re invariably in other languages that I can\u0027t understand. I\u0027ve looked into this, but had no luck. How do we force our C# .NET programs to log errors in English? If this currently isn\u0027t supported, please add it. I\u0027ve seen requests for this around the Interwebz going back over a decade.\r\n\r\nThe user doesn\u0027t care about error logs. They are for developers; the vast majority of whom speak English.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHORwpMjQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2OTU4OTQ4Mw==",
                                           "createdAt":  "2020-08-05T23:05:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "svick",
                                           "body":  "This is a duplicate of https://github.com/microsoft/dotnet/issues/474.",
                                           "updatedAt":  "2020-08-05T23:05:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2OTU5MDAzMg==",
                                           "createdAt":  "2020-08-05T23:07:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBMrAtQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Chiramisudo",
                                                                               "createdAt":  "2020-08-06T21:41:39Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "333fred",
                                           "body":  "This isn\u0027t a language request, but rather a runtime request. I\u0027m going to transfer this over there, and hopefully they\u0027ll have an answer or can point you in the right direction.",
                                           "updatedAt":  "2020-08-05T23:07:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2OTU5MDA3NA==",
                                           "createdAt":  "2020-08-05T23:07:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Dotnet-GitSync-Bot",
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2020-08-05T23:07:46Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2OTU5Nzc2NA==",
                                           "createdAt":  "2020-08-05T23:33:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Gnbrkm41",
                                           "body":  "Does .NET Core runtime itself do any localisation for the exception message? Most of the exception messages I\u0027m seeing doesn\u0027t seem to be in my Windows UI language (Korean) and even if they are they seem to originate from Windows API or something.",
                                           "updatedAt":  "2020-08-05T23:33:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2OTY0MTk5MQ==",
                                           "createdAt":  "2020-08-06T02:14:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @tarekgh, @safern, @krwq\nSee info in area-owners.md if you want to be subscribed.",
                                           "updatedAt":  "2020-08-06T02:14:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2OTY1MTQ2Mg==",
                                           "createdAt":  "2020-08-06T02:48:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBMjoBw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "tarekgh",
                                                                               "createdAt":  "2020-08-06T03:01:20Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "@ChirChiara what version of.NET are you using?.NET Core\u0027s own resources aren\u0027t currently localized.\r\n\r\nWhat strings  are getting logged and which code do they come  from?",
                                           "updatedAt":  "2020-08-06T02:48:54Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2OTY1NDU3NA==",
                                           "createdAt":  "2020-08-06T03:01:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tarekgh",
                                           "body":  "Also you can force English resources if you set CultureInfo.CurrentUICulture to something like en-US Culture. Also, you can use the machine translation to translate the localized string. ",
                                           "updatedAt":  "2020-08-06T03:01:08Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3MDIxMzU4Mw==",
                                           "createdAt":  "2020-08-06T22:02:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Chiramisudo",
                                           "body":  "For the record, I\u0027m presently stuck with .NET Framework 3.5 on the app in question.\r\n\r\n@333fred Thanks for moving it, I wasn\u0027t sure.\r\n@svick I think that duplicate you referenced may also be in the wrong area if indeed it is a duplicate.\r\n\r\n@tarekgh I definitely don\u0027t want machine translation because that quickly becomes a game of \"operator\" where details can be lost in translation. Also, CultureInfo.CurrentUICulture does not work in my case because this did not become read-write until 4.6.",
                                           "updatedAt":  "2020-08-06T22:02:26Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3MDIxOTM5MA==",
                                           "createdAt":  "2020-08-06T22:19:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tarekgh",
                                           "body":  "\u003e Also, CultureInfo.CurrentUICulture does not work in my case because this did not become read-write until 4.6.\r\n\r\nYou can use Thread.CurrentThread.CurrentUICulture instead. \r\nAlso, you can set CultureInfo.DefaultThreadCurrentUICulture too to ensure other created threads later will get the english culture. \r\n\r\nSide point, if you are talking about the full framework, then it is very unlikely such request will get added there. .NET core is our focus of future development and the full framework still supported but it is feature complete.",
                                           "updatedAt":  "2020-08-06T22:49:58Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3MDI1NjYzMw==",
                                           "createdAt":  "2020-08-07T00:30:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Chiramisudo",
                                           "body":  "Yes on the first point, no on the second. CultureInfo.DefaultThreadCurrentUICulture is not available in my version, and Thread.CurrentThread.CurrentUICulture comes with a security warning, but will probably be my only option for now.\r\n\r\nI agree with you that my code base will inevitably need to be updated, and that is planned for the future, but even in modern versions of .NET I don\u0027t see this ability to declare Exceptions be loggable in the language of your choice. I want to maintain that my users see the errors in whatever language they prefer, but the logs are belong to me (_intentional grammatical error_) and I need them in English. 😋",
                                           "updatedAt":  "2020-08-07T00:30:56Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3MDI2MjM2MQ==",
                                           "createdAt":  "2020-08-07T00:55:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tarekgh",
                                           "body":  "\u003e CultureInfo.DefaultThreadCurrentUICulture is not available in my version\r\n\r\nCultureInfo.DefaultThreadCurrentUICulture is supported since version 4.5. are you running on 4.0? if so, definitely you need to upgrade.",
                                           "updatedAt":  "2020-08-07T00:55:31Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3MDMwNzg1Mg==",
                                           "createdAt":  "2020-08-07T03:56:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBMs3eQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "Gnbrkm41",
                                                                               "createdAt":  "2020-08-07T06:22:14Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Chiramisudo",
                                           "body":  "3.5 SMH 🤦🏼‍♂️ Still trying to convince the PMs to let go of Windows XP support. 😫 I\u0027m holding onto hope that we can finally do that on our next Major rev.",
                                           "updatedAt":  "2020-08-07T03:57:27Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3MDMwOTc0Nw==",
                                           "createdAt":  "2020-08-07T04:05:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tarekgh",
                                           "body":  "I hope you\u0027ll succeed with your mission :-) \r\n\r\ndo you mind if we close this issue as there is no action required here? feel free to send more questions if you need help with any issue you face.",
                                           "updatedAt":  "2020-08-07T04:05:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3MDU4OTc4Nw==",
                                           "createdAt":  "2020-08-07T16:03:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Clockwork-Muse",
                                           "body":  "\u003e  I want to maintain that my users see the errors in whatever language they prefer, but the logs are belong to me (intentional grammatical error) and I need them in English.\r\n\r\n... permanently set the UI culture as English, and then explicitly set the culture when doing all formatting/`ToString()`-ing?  Although I\u0027m not sure how that would affect some right-to-left text UI elements.  Otherwise, are you saying that you\u0027re displaying raw exceptions to users?",
                                           "updatedAt":  "2020-08-07T16:03:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3MDY5MTM0Nw==",
                                           "createdAt":  "2020-08-07T20:05:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Chiramisudo",
                                           "body":  "I don\u0027t believe I got an answer to my question though; or did I miss it? Does anything in the .NET multiverse natively support logging Exceptions (for Developer use) in English?",
                                           "updatedAt":  "2020-08-07T20:05:05Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3MDcyMTMwMw==",
                                           "createdAt":  "2020-08-07T21:31:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tarekgh",
                                           "body":  "\u003e Does anything in the .NET multiverse natively support logging Exceptions (for Developer use) in English?\r\n\r\nThere is nothing you can do without forcing the UI language on the app/running environment to English to guarantee getting English. Does the exception messages you are getting are the framework messages or app messages?",
                                           "updatedAt":  "2020-08-07T21:31:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3MDgwNTE0OA==",
                                           "createdAt":  "2020-08-08T01:38:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Chiramisudo",
                                           "body":  "Framework of course. My app doesn\u0027t rely on any other third party APIs etc, so all app messages are written by me and already in English. It\u0027s the Framework that is generating Exceptions in the native culture of the client machine.",
                                           "updatedAt":  "2020-08-08T01:38:54Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY3MTA4NTAxOA==",
                                           "createdAt":  "2020-08-09T18:23:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tarekgh",
                                           "body":  "One other idea you may try is to uninstall the .NET Framework language packs from the machine. I don\u0027t have handy Windows XP machine but I believe you can do that from Control Panel, Add Or Remove programs options.",
                                           "updatedAt":  "2020-08-09T18:23:14Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwNjUzNTkxMA==",
                                           "createdAt":  "2020-10-10T11:42:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODoDBCQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "mdelz",
                                                                               "createdAt":  "2020-10-19T10:59:05Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Ghost4Man",
                                                                               "createdAt":  "2020-12-10T11:58:56Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "Ghost4Man",
                                                                               "createdAt":  "2020-12-10T11:58:58Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jhm-ciberman",
                                                                               "createdAt":  "2021-09-26T23:22:02Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "jhm-ciberman",
                                                                               "createdAt":  "2021-09-26T23:22:03Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Atulin",
                                                                               "createdAt":  "2022-07-15T02:48:35Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "Atulin",
                                                                               "createdAt":  "2022-07-15T02:48:36Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "TobiasKnauss",
                                                                               "createdAt":  "2022-07-18T16:22:46Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "thecatte",
                                                                               "createdAt":  "2023-03-29T08:40:35Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Gromnax",
                                                                               "createdAt":  "2024-01-19T19:49:49Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "darBis",
                                                                               "createdAt":  "2024-07-02T12:27:34Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  11
                                                         },
                                           "author":  "Zymlex",
                                           "body":  "\u003e \r\n\u003e \r\n\u003e One other idea you may try is to uninstall the .NET Framework language packs from the machine.\r\n\r\n🤦‍♂️\r\nThe use of implicit localization of the program, and even more of the localization of exceptions (which only developers see), was the most idiotic idea.",
                                           "updatedAt":  "2020-10-10T11:42:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwNjYxMjI1Nw==",
                                           "createdAt":  "2020-10-10T21:13:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tarekgh",
                                           "body":  "@Zymlex my suggestion was specific workaround for @Chiramisu case based on my question https://github.com/dotnet/runtime/issues/40427#issuecomment-670721303 and not intended to be for any situation. If you have any constructive feedback, please share it. ",
                                           "updatedAt":  "2020-10-10T21:13:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GrMDe",
                                           "createdAt":  "2022-07-15T16:55:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "\u003e  localization of exceptions (which only developers see)\r\n\r\nThat that\u0027s not true for all apps. I worked on a product that was itself localized and displayed system error messages to the user, for example if they chose an invalid directory and we got an IO exception, we would show the message like \"Directory \u0027c:\\foo\u0027 does not exist.\" This was useful and often times we could not get that detail without parsing the message ourselves (as an aside, [IO error codes ](https://github.com/dotnet/runtime/issues/926) could have helped). The original reason .NET Framework localized these was probably something like that -- the messages would often appear at development time (eg., in the Windows Forms designer) and not all developers wish to use English. Visual Studio is localized and expects all strings to be localized.\r\n\r\nThat is why when we\u0027ve discussed this problem in the past we\u0027ve agreed that we\u0027d likely need to offer an app-level flag to choose localized or not. ",
                                           "updatedAt":  "2022-07-15T16:55:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Grg9z",
                                           "createdAt":  "2022-07-15T18:44:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Is there a request here for .NET Core, given we do not localize? Eg., perhaps exception strings from another part of the .NET Core stack are localized?\r\n\r\nIf it is only for .NET Framework, we should close this. As mentioned, that will not be changed at this point. \r\nFor .NET Core, if someday we do make it possible to get localized exception messages (i think there was another issue requesting that) it is clear that we should make it possible to choose. ",
                                           "updatedAt":  "2022-07-15T18:44:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GrtC8",
                                           "createdAt":  "2022-07-15T19:55:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "cremor",
                                           "body":  "This is a problem in .NET Core/5/6 with exception messages that are passed through from Windows. More details by @TobiasKnauss here: https://github.com/dotnet/runtime/issues/72277#issuecomment-1185810554",
                                           "updatedAt":  "2022-07-15T19:55:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GsH9M",
                                           "createdAt":  "2022-07-15T21:49:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tarekgh",
                                           "body":  "@cremor could you provide example of getting localized messages in Win32Exception? The exception class itself is not the issue but how the library using this exception class is getting the message from Windows. I expect this is not common cases anyway.",
                                           "updatedAt":  "2022-07-15T21:49:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GsmQF",
                                           "createdAt":  "2022-07-16T05:50:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "I guess this us when we get the message from FormatError (not sure whether strerror is localized). In that case so we even have a technical way to request English from the OS?",
                                           "updatedAt":  "2022-07-16T05:50:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Gs5M0",
                                           "createdAt":  "2022-07-16T12:35:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCnG2UA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "cremor",
                                                                               "createdAt":  "2022-07-18T05:30:36Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "TobiasKnauss",
                                           "body":  "@tarekgh  To reproduce:\r\n```\r\nConsole.WriteLine (new SocketException(10060).Message);\r\n```\r\nIn my German Windows 10, I get a message in German language.",
                                           "updatedAt":  "2022-07-16T12:35:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GtYl3",
                                           "createdAt":  "2022-07-16T21:53:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCnkyrg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "cremor",
                                                                               "createdAt":  "2022-07-18T18:30:38Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "mlsomers",
                                                                               "createdAt":  "2022-07-19T23:29:48Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "TobiasKnauss",
                                                                               "createdAt":  "2022-07-20T08:08:57Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "tarekgh",
                                           "body":  "@TobiasKnauss thanks. Any idea if the issue is scoped to `Win32Exception` case? or seeing that in other scenarios?\r\n\r\n\u003e I guess this us when we get the message from FormatError (not sure whether strerror is localized). In that case so we even have a technical way to request English from the OS?\r\n\r\nYes, we get the localized message from Windows when calling [FormatMessage](https://github.com/dotnet/runtime/blob/a60cc8fb89eade50a57befa96d2e92f49cba9d3f/src/libraries/Common/src/Interop/Windows/Kernel32/Interop.FormatMessage.cs#L18). This Windows API takes the `dwLanguageId` parameter. The current behavior is not the best because the returned localized message depends on the Thread language or Windows UI language which will not necessarily match the framework UI culture if the app decides to reset the UI culture.\r\n\r\nIf the issue for .NET is scoped to Win32Exception, we may try to think in a way to force English language when getting the message (like environment variable or something similar). But first I want to understand the demand on that and if it is really a blocking issue. ",
                                           "updatedAt":  "2022-07-16T21:53:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GxMoG",
                                           "createdAt":  "2022-07-18T12:36:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mlsomers",
                                           "body":  "So [Issue 474](https://github.com/microsoft/dotnet/issues/474) got closed in favor of [Issue 46656](https://github.com/dotnet/runtime/issues/46656l) which is now closed in favor of this one...\r\n\r\nIn my opinion it is certainly a blocking issue, it costs allot of extra resources and money to decrypt log files containing phrases like\r\n\r\n\u003e The surgery is crippled while the opening is not switched on.\r\n\r\nBack to\r\n\r\n\u003e This operation is invalid while the window is disabled.",
                                           "updatedAt":  "2022-07-18T12:36:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Gyhye",
                                           "createdAt":  "2022-07-18T15:34:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Can folks up vote @tarekgh  answer above if it would address the problem to have a way to force .NET to request unlocalized (English) messages from the OS.\n\nNote that .NET Core has never localized its own exception messages and .NET Framework requests are not tracked here.",
                                           "updatedAt":  "2022-07-18T15:34:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5G6RkA",
                                           "createdAt":  "2022-07-20T00:41:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mlsomers",
                                           "body":  "\u003e If the issue for .NET is scoped to Win32Exception, we may try to think in a way to force English language when getting the message (like environment variable or something similar). But first I want to understand the demand on that and if it is really a blocking issue.\r\n\r\nAn environment variable would indeed be helpful for many scenarios (a +1 from me), however for desktop applications (winforms/wpf) it would be great if we could also set a flag for the current process from code. It would be even better if we can specify what we want after the exception is thrown (if possible).\r\n\r\nI would like to suggest using`Exception.ToString(CultureInfo.InvariantCulture)` or `Exception.GetMessage(CultureInfo.InvariantCulture)` to log in English and having the existing `Exception.Message` show the message in the language specified by `System.Environment.ExceptionCulture` which in turn gets its default value from an environment variable or registry setting or in another way that is at least configurable by an administrator without the need to recompile source. This way we can guarantee logs in English and still leave options open to the end user to have the dialog text in their own language or in English.\r\n\r\nWe often show dialog boxes with \"something went wrong while... and the original error message was ...\" for the rare occasion when users can solve issues themselves, but also to save our help-desk the need to dig into log-files...",
                                           "updatedAt":  "2022-07-20T00:41:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5G6pCR",
                                           "createdAt":  "2022-07-20T03:31:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "It is too late to add new API to .NET 7 which is why I was asking about an environment variable as a possible temporary measure.",
                                           "updatedAt":  "2022-07-20T03:31:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5G6yFK",
                                           "createdAt":  "2022-07-20T04:27:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Cc @Ericstj as area owner.",
                                           "updatedAt":  "2022-07-20T04:27:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5G7fbF",
                                           "createdAt":  "2022-07-20T08:45:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "TobiasKnauss",
                                           "body":  "@tarekgh\r\nI have seen it only on Win32Exception so far, but I cannot tell whether it is limited to it.\r\n\u003e If the issue for .NET is scoped to Win32Exception, we may try to think in a way to force English language when getting the message (like environment variable or something similar). But first I want to understand the demand on that and if it is really a blocking issue.\r\n\r\nIf you introduced an environment variable, this variable could be used to set the language if another language than English shall be used. **But the default language should be English, so that it matches the language of all other .NET exceptions.**\r\n\r\nI don\u0027t know if this would be seen as a breaking change, since it does not include any API changes, which means every code will still compile. Problems may come up during execution though, if someone relies on the exceptions in their language. But to fix this, the mentioned environment variable could be used.\r\nThere is one issue however that I see when using an environment variable: This variable applies to ALL applications. There will be no possibility to have one application return exception messages in English and another one return them in a different language. A process specific setting would be a better approach.\r\nIf you decided to introduce an environment variable, it could be either a simple variable with general use, e.g. \"DotNetExceptionLanguage\" with values \"en\", \"de\", \"fr\" (or \"en-us\", de-de\", \"fr-fr\"), etc., or a variable with detailed definition where to use which language, e.g. \"DotNetAppSpecificExceptionLanguage\" with a value like \"c:\\windows\\notepad.exe?de-de|c:\\windows\\paint.exe?en-us\" (I intentionally used ? and | as separators).",
                                           "updatedAt":  "2022-07-20T08:45:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5G7ftK",
                                           "createdAt":  "2022-07-20T08:46:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "TobiasKnauss",
                                           "body":  "@mlsomers \r\nI like the idea of having `Exception.ToString(CultureInfo)`, however in my opinion, the usage of `InvariantCulture` (which is English most times) should return the same results as if no culture was specified (`ToString()`). This may contradict the concept where `ToString()` on other types (e.g. numbers like `int`, `double`, etc.) use `CurrentCulture` in their `ToString()` (e.g. `(1.5).ToString()` returns `1,5` (with comma) on my computer with German Windows.\r\nBut the reason for this suggestion is, that the usage of exception messages in logs is far more common than displaying them to the user. I don\u0027t like rewriting thousands of lines of code, especially when implicit string conversions of exceptions (e.g. in string interpolation or concatenation) do not have an explicit `.ToString()` call and therefore are also hard to find.\r\nAlso, a future localization of .NET exception messages will not be able to use `ToString()` for localized exception messages, because this would be the same kind of (non-breaking) change as mentioned in my previous comment, just the other way round. And I bet that app developers will wish .NET developers to hell if they \"reverted\" the exception messages language back to the local language, like in .NET Framework. ;-)\r\nYour suggested `System.Environment.ExceptionCulture` could solve this problem. I think it better fits in `System.Globalization`, but that is not important.",
                                           "updatedAt":  "2022-07-20T08:46:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5G9R1B",
                                           "createdAt":  "2022-07-20T16:04:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-resources\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nI have an application that is used in other countries. When receiving exception / error logs, they\u0027re invariably in other languages that I can\u0027t understand. I\u0027ve looked into this, but had no luck. How do we force our C# .NET programs to log errors in English? If this currently isn\u0027t supported, please add it. I\u0027ve seen requests for this around the Interwebz going back over a decade.\r\n\r\nThe user doesn\u0027t care about error logs. They are for developers; the vast majority of whom speak English.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eChiramisu\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`question`, `area-System.Resources`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003eFuture\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-07-20T16:04:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5G99bu",
                                           "createdAt":  "2022-07-20T19:04:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCntQNQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "AaronRobinsonMSFT",
                                                                               "createdAt":  "2022-07-20T19:13:14Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ericstj",
                                           "body":  "~~ For `Exception.ToString(CultureInfo)` can you do this, using @AaronRobinsonMSFT\u0027s [new API](https://github.com/dotnet/runtime/commit/318018e48c8aebd4feb247caadc400b15c83498e)? ~~\r\n\r\nThe workaround shared previously did not work well.  A new workaround is here https://gist.github.com/ericstj/c72b90b0c12f86b7918850ee276fac3b but will only work if the Windows machine is English or has the English language pack installed.",
                                           "updatedAt":  "2022-07-21T15:32:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5G-Atg",
                                           "createdAt":  "2022-07-20T19:19:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tarekgh",
                                           "body":  "@ericstj I am not sure if the proposed code is going to work. Windows depends on the thread locale. Setting `Thread.CurrentThread.CurrentCulture` is not going to affect Windows thread locale as I understand.",
                                           "updatedAt":  "2022-07-20T19:19:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5G-CmB",
                                           "createdAt":  "2022-07-20T19:27:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCntwsg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "tarekgh",
                                                                               "createdAt":  "2022-07-20T20:06:03Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ericstj",
                                           "body":  "I see, so instead of that we\u0027d need to PINvoke to `SetThreadLocale`, maybe I can update the sample.",
                                           "updatedAt":  "2022-07-20T19:27:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5G-C7E",
                                           "createdAt":  "2022-07-20T19:28:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCn7ZtQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ericstj",
                                                                               "createdAt":  "2022-07-20T19:56:47Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "danmoseley",
                                                                               "createdAt":  "2022-07-21T19:29:19Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "AaronRobinsonMSFT",
                                           "body":  "@tarekgh Did we miss an opportunity here to create a culture overload for that API?\r\n\r\n```csharp\r\npublic static class Marshal\r\n{\r\n    public static string GetPInvokeErrorMessage(int error, CultureInfo cultureInfo);\r\n}\r\n```\r\n",
                                           "updatedAt":  "2022-07-20T19:28:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5G-Jaf",
                                           "createdAt":  "2022-07-20T19:57:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "Adding that overload might be interesting.  It would have made this extension method easier to implement.  Updated my sample above to use SetThreadLocale (note it requires the new source generator as well). Still not sure if this is actually changing the behavior of `FormatMessage`.  At this point one could just as well have the extensions method call `FormatMessage` itself.\r\n\r\n",
                                           "updatedAt":  "2022-07-20T19:57:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5G-LmM",
                                           "createdAt":  "2022-07-20T20:07:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tarekgh",
                                           "body":  "\u003e I see, so instead of that we\u0027d need to PINvoke to SetThreadLocale, maybe I can update the sample.\r\n\r\nYes, I think this will work.\r\n\r\n\u003e Did we miss an opportunity here to create a culture overload for that API?\r\n\r\nI think such overload will be helpful. \r\n",
                                           "updatedAt":  "2022-07-20T20:07:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5G-VWT",
                                           "createdAt":  "2022-07-20T20:51:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AaronRobinsonMSFT",
                                           "body":  "@tarekgh and @ericstj Filed https://github.com/dotnet/runtime/issues/72546 for .NET 8\r\n\r\n/cc @danmoseley ",
                                           "updatedAt":  "2022-07-20T20:51:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5G-2lX",
                                           "createdAt":  "2022-07-20T23:50:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCn4cEw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ericstj",
                                                                               "createdAt":  "2022-07-21T15:20:12Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "tarekgh",
                                           "body":  "I just learned that Windows localized machines is not guaranteed to have English resources.  For such situation there will not be anyway getting the English resources with `Win32Exeption`.",
                                           "updatedAt":  "2022-07-20T23:50:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5G-2y3",
                                           "createdAt":  "2022-07-20T23:51:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AaronRobinsonMSFT",
                                           "body":  "@tarekgh Should we then close the API proposal? I think we are in a situation we can\u0027t win.",
                                           "updatedAt":  "2022-07-20T23:52:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5G_geW",
                                           "createdAt":  "2022-07-21T05:24:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "TobiasKnauss",
                                           "body":  "\u003e I just learned that Windows localized machines is not guaranteed to have English resources. For such situation there will not be anyway getting the English resources with `Win32Exeption`.\r\n\r\nThis means we may create a request for the Windows development team, aiming at always including English resources.",
                                           "updatedAt":  "2022-07-21T05:24:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HBW0X",
                                           "createdAt":  "2022-07-21T14:13:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tfenise",
                                           "body":  "\u003e To reproduce:\r\n\u003e \r\n\u003e ```\r\n\u003e Console.WriteLine (new SocketException(10060).Message);\r\n\u003e ```\r\n\u003e \r\n\u003e In my German Windows 10, I get a message in German language.\r\n\r\nHowever, `new SocketException(10060).ToString()` starts with \"System.Net.Sockets.SocketException (10060):\", whatever the language in which the following message is in. Is that not helpful enough?",
                                           "updatedAt":  "2022-07-21T14:13:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HBa9o",
                                           "createdAt":  "2022-07-21T14:27:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODJlS8w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "marcinsmialek",
                                                                               "createdAt":  "2023-10-13T16:19:51Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "cremor",
                                           "body":  "@tfenise Are we expected to know or look up the error codes? If yes, is there a central page of **all** possible error codes?\r\n\r\nEven if the answer is yes, that\u0027s still way more work to figure out the actual error when you have to read through a log file.",
                                           "updatedAt":  "2022-07-21T14:27:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HBf-s",
                                           "createdAt":  "2022-07-21T14:45:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCn6IYQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "tarekgh",
                                                                               "createdAt":  "2022-07-21T17:28:14Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "tfenise",
                                           "body":  "In the case of `SocketException`, the developer can just run `new SocketException(10060).ToString()` on their own machine (or write a program that looks for `System.Net.Sockets.SocketException (###):` in a log file and insert the error message in the preferred language) and see what the error code means. If this is still unsatisfactory, I think `SocketException.ToString()` (or `Win32Exception.ToString()`) can be modified to include not only the decimal or hexadecimal printing of the error code, but also `Enum.GetName\u003cSocketError\u003e(the_error_code)`, which would be \"TimedOut\" for 10060. This change is certainly easier than adding some new API or even change in Windows localization.",
                                           "updatedAt":  "2022-07-21T14:45:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HCdRX",
                                           "createdAt":  "2022-07-21T18:54:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "cremor",
                                           "body":  "\u003e In the case of `SocketException`, the developer can just run `new SocketException(10060).ToString()` on their own machine (or write a program that looks for `System.Net.Sockets.SocketException (###):` in a log file and insert the error message in the preferred language) and see what the error code means.\r\n\r\nThat would still be a manual step. Not very convenient.\r\n\r\n\u003e If this is still unsatisfactory, I think `SocketException.ToString()` (or `Win32Exception.ToString()`) can be modified to include not only the decimal or hexadecimal printing of the error code, but also `Enum.GetName\u003cSocketError\u003e(the_error_code)`, which would be \"TimedOut\" for 10060. This change is certainly easier than adding some new API or even change in Windows localization.\r\n\r\nThat would certainly be a quick win that should be done.",
                                           "updatedAt":  "2022-07-21T18:54:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HCkyN",
                                           "createdAt":  "2022-07-21T19:32:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "\u003e If this is still unsatisfactory, I think SocketException.ToString() (or Win32Exception.ToString()) can be modified to include not only the decimal or hexadecimal printing of the error code, but also Enum.GetName\u003cSocketError\u003e(the_error_code), which would be \"TimedOut\" for 10060. This change is certainly easier than adding some new API or even change in Windows localization.\r\n\r\nPlease open an issue if you want to suggest that for SocketException. It does sound useful. I do not see how it would work for Win32Exception though, there is no enum (such an enum would be vast, eg., it would be all of winerror.h, etc)",
                                           "updatedAt":  "2022-07-21T19:32:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HCmGL",
                                           "createdAt":  "2022-07-21T19:38:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODJlTUw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "marcinsmialek",
                                                                               "createdAt":  "2023-10-13T16:21:06Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "BTW, probably everyone knows this, but if it helps anyone -- `net helpmsg` is a quick way to call FormatMessage(..FORMAT_MESSAGE_FROM_SYSTEM..) manually. eg\r\n```\r\nC:\\\u003enet helpmsg 10060\r\n\r\nA connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n```",
                                           "updatedAt":  "2022-07-21T19:38:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HDMo4",
                                           "createdAt":  "2022-07-21T23:16:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "TobiasKnauss",
                                           "body":  "@danmoseley\r\n\u003e [...] I do not see how it would work for Win32Exception though, there is no enum (such an enum would be vast, eg., it would be all of winerror.h, etc)\r\n\r\nYour assumption is correct, this enum contains about 2840 values:\r\nI created my own workaround and copied all names and values including their descriptions from the child pages of https://docs.microsoft.com/en-us/windows/win32/debug/system-error-codes into an Excel spreadsheet, added some concat functions and copied the results into an enum. It took about an hour. This enum looks like:\r\n```csharp\r\npublic enum EnumSystemErrorCode\r\n{\r\n  [Description (\"The operation completed successfully.\")]\r\n  ERROR_SUCCESS = 0,\r\n  [Description (\"Incorrect function.\")]\r\n  ERROR_INVALID_FUNCTION = 1,\r\n  [Description (\"The system cannot find the file specified.\")]\r\n  ERROR_FILE_NOT_FOUND = 2,\r\n  [Description (\"The system cannot find the path specified.\")]\r\n  ERROR_PATH_NOT_FOUND = 3,\r\n  [Description (\"The system cannot open the file.\")]\r\n  ERROR_TOO_MANY_OPEN_FILES = 4,\r\n  [Description (\"Access is denied.\")]\r\n  ERROR_ACCESS_DENIED = 5,\r\n...\r\n  [Description (\"The length of the state manager setting name has exceeded the limit.\")]\r\n  ERROR_STATE_SETTING_NAME_SIZE_LIMIT_EXCEEDED = 15817,\r\n  [Description (\"The length of the state manager container name has exceeded the limit.\")]\r\n  ERROR_STATE_CONTAINER_NAME_SIZE_LIMIT_EXCEEDED = 15818,\r\n  [Description (\"This API cannot be used in the context of the caller\u0027s application type.\")]\r\n  ERROR_API_UNAVAILABLE = 15841,\r\n}\r\n```\r\nIf somebody wants the complete file, I can post it here or upload it to my github account.\r\n\r\nThe problem in using the descriptions from the websites is, that they contain placeholders like:\r\n```csharp\r\n  [Description (\"{Missing System File} The required system file %hs is bad or missing.\")]\r\n  ERROR_MISSING_SYSTEMFILE = 573,\r\n  [Description (\"{Application Error} The exception %s (0x%08lx) occurred in the application at location 0x%08lx.\")]\r\n  ERROR_UNHANDLED_EXCEPTION = 574,\r\n```\r\nTherefore I had to combine the original exception message, which contains the data that was inserted to the placeholders, with the English exception message from the description.\r\n\r\nThe final message looks like:\r\n\r\n\u003e A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond. (original message: \u0027Ein Verbindungsversuch ist fehlgeschlagen, da die Gegenstelle nach einer bestimmten Zeitspanne nicht richtig reagiert hat, oder die hergestellte Verbindung war fehlerhaft, da der verbundene Host nicht reagiert hat. [::ffff:100.111.1.2]:55900\u0027), Socket Error = TimedOut, Socket Error Code = 10060 (0x0000274C)\r\n\r\nThe code to create this message is:\r\n```csharp\r\npublic static class EnumSystemErrorCodeHelper\r\n{\r\n  public static string? GetDescription (this EnumSystemErrorCode i_systemErrorCode)\r\n  {\r\n    return DescriptionAttributeHelper.GetDescription (i_systemErrorCode);\r\n  }\r\n}\r\n\r\npublic static class DescriptionAttributeHelper\r\n{\r\n  public static string? GetDescription (Enum? i_member)\r\n  {\r\n    string? memberName = i_member?.ToString ();\r\n    if (i_member == null\r\n     || string.IsNullOrEmpty (memberName))\r\n      throw new ArgumentNullException (nameof (i_member));\r\n\r\n    var memberInfos = i_member.GetType ().GetMember (memberName);\r\n    if (!memberInfos.Any ())\r\n      return null;\r\n\r\n    object[] attributes = memberInfos[0].GetCustomAttributes (typeof (DescriptionAttribute), false);\r\n    return attributes.Any ()\r\n             ? ((DescriptionAttribute)attributes[0]).Description\r\n             : null;\r\n  }\r\n}\r\n\r\npublic static class ExceptionHelper\r\n{\r\n  /// ------------------------------------------------------------------\r\n  /// \u003csummary\u003e\r\n  ///   Create a message text from the exception.\r\n  /// \u003c/summary\u003e\r\n  /// \u003cparam name=\"i_exception\"\u003e The exception from which the message will be created. \u003c/param\u003e\r\n  /// \u003cparam name=\"i_separator\"\u003e The separator text that will be inserted between different parts of the message. \u003c/param\u003e\r\n  /// \u003cparam name=\"i_withInnerExceptions\"\u003e A flag that specifies whether the messages of inner exceptions should be added to the created message. \u003c/param\u003e\r\n  /// \u003creturns\u003e A message text from the exception. \u003c/returns\u003e\r\n  /// ------------------------------------------------------------------\r\n  public static string? GetMessage (this Exception? i_exception,\r\n                                    string          i_separator           = \", \",\r\n                                    bool            i_withInnerExceptions = true)\r\n  {\r\n    if (i_exception == null)\r\n      return null;\r\n\r\n    string? newlineSeparator = i_separator.EqualsAny (CONSTS.CR, CONSTS.LF, CONSTS.CRLF)\r\n                                 ? i_separator\r\n                                 : null;\r\n\r\n    string exceptionMessage = i_exception.Message;\r\n    var    sbMessage        = new StringBuilder (exceptionMessage);\r\n    if (!string.Equals (System.Threading.Thread.CurrentThread.CurrentCulture.TwoLetterISOLanguageName, \"en\", StringComparison.InvariantCultureIgnoreCase))\r\n    {\r\n      if (i_exception is System.ComponentModel.Win32Exception win32Exception)\r\n      {\r\n        var systemErrorCode = (EnumSystemErrorCode)win32Exception.ErrorCode;\r\n        if (!Enum.IsDefined (systemErrorCode))\r\n          systemErrorCode = (EnumSystemErrorCode)win32Exception.NativeErrorCode;\r\n        if (Enum.IsDefined (systemErrorCode))\r\n        {\r\n          string? description = DescriptionAttributeHelper.GetDescription (systemErrorCode);\r\n          if (!string.IsNullOrEmpty (description))\r\n          {\r\n            _ = sbMessage.Clear ()\r\n                         .Append (description)\r\n                         .Append (newlineSeparator ?? \" \")\r\n                         .Append (\"(original message: \u0027\")\r\n                         .Append (exceptionMessage)\r\n                         .Append (\"\u0027)\");\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    switch (i_exception) // Do NOT change the order of the cases.\r\n    {\r\n    case System.Net.Sockets.SocketException socketException:\r\n      _ = sbMessage.Append ($\"{i_separator}Socket Error = {socketException.SocketErrorCode}\")\r\n                   .Append ($\"{i_separator}Socket Error Code = {socketException.ErrorCode} (0x{socketException.ErrorCode:X8})\");\r\n      break;\r\n\r\n    case System.ComponentModel.Win32Exception win32Exception:\r\n      _ = sbMessage.Append ($\"{i_separator}Error Code = {win32Exception.ErrorCode} (0x{win32Exception.ErrorCode:X8})\")\r\n                   .Append ($\"{i_separator}Native Error Code = {win32Exception.NativeErrorCode} (0x{win32Exception.NativeErrorCode:X8})\");\r\n      break;\r\n\r\n    case System.Runtime.InteropServices.ExternalException externalException:\r\n      _ = sbMessage.Append ($\"{i_separator}Error Code = {externalException.ErrorCode} (0x{externalException.ErrorCode:X8})\");\r\n      break;\r\n\r\n    case System.Net.Http.HttpRequestException httpRequestException:\r\n      _ = sbMessage.Append ($\"{i_separator}Status Code = {httpRequestException.StatusCode}\");\r\n      break;\r\n    }\r\n\r\n    if (newlineSeparator is null)\r\n      _ = sbMessage.Replace (CONSTS.CRLF, CONSTS.CommaSpace)\r\n                   .Replace (CONSTS.CR, CONSTS.CommaSpace)\r\n                   .Replace (CONSTS.LF, CONSTS.CommaSpace);\r\n\r\n    if (i_exception.InnerException != null\r\n     \u0026\u0026 i_withInnerExceptions)\r\n    {\r\n      _ = sbMessage.Append (\" Inner exception: {\")\r\n                   .Append (i_exception.InnerException.GetMessage (i_separator, i_withInnerExceptions))\r\n                   .Append (\"}\");\r\n    }\r\n\r\n    return sbMessage.ToString ();\r\n  }\r\n\r\n  /// ------------------------------------------------------------------\r\n  /// \u003csummary\u003e\r\n  ///   Create a detailed text from the exception. The text contains message, source and stacktrace from the given exception and all inner exceptions.\r\n  /// \u003c/summary\u003e\r\n  /// \u003cparam name=\"i_exception\"\u003e The exception from which the text will be created. \u003c/param\u003e\r\n  /// \u003cparam name=\"i_separator\"\u003e The separator text that will be inserted between different parts of the exception text. \u003c/param\u003e\r\n  /// \u003creturns\u003e A detailed text from the exception. \u003c/returns\u003e\r\n  /// ------------------------------------------------------------------\r\n  public static string GetText (this Exception? i_exception,\r\n                                string          i_separator = \", \")\r\n  {\r\n    if (i_exception == null)\r\n      return s_text_exceptionObjectMissing;\r\n\r\n    string? newlineSeparator = i_separator.EqualsAny (CONSTS.CR, CONSTS.LF, CONSTS.CRLF)\r\n                                 ? i_separator\r\n                                 : null;\r\n\r\n    var exception = i_exception;\r\n    var sb        = new StringBuilder ();\r\n\r\n    int levelOfInnerException = 0;\r\n    do\r\n    {\r\n      if (levelOfInnerException == 0)\r\n      {\r\n        _ = sb.Append (\"\u003e\u003e\u003e\u003e\u003e Exception: \");\r\n      }\r\n      else\r\n      {\r\n        _ = sb.Append (i_separator);\r\n        _ = sb.Append ($\"\u003e\u003e\u003e\u003e\u003e Inner Exception #{levelOfInnerException}: \");\r\n      }\r\n\r\n      _ = sb.Append (newlineSeparator);\r\n      _ = sb.AppendWithSeparator (exception.GetType ().FullName,             i_separator);\r\n      _ = sb.AppendWithSeparator (exception.GetMessage (i_separator, false), i_separator);\r\n\r\n      if (exception.Source != null)\r\n      {\r\n        _ = sb.Append (\"\u003e\u003e\u003e Source: \");\r\n        _ = sb.Append (newlineSeparator);\r\n        _ = sb.AppendWithSeparator (exception.Source, i_separator);\r\n      }\r\n\r\n      if (exception.StackTrace != null)\r\n      {\r\n        string stackTrace = exception.StackTrace;\r\n        if (newlineSeparator is null)\r\n          stackTrace = stackTrace.Replace (CONSTS.CRLF, CONSTS.CommaSpace)\r\n                                 .Replace (CONSTS.CR, CONSTS.CommaSpace)\r\n                                 .Replace (CONSTS.LF, CONSTS.CommaSpace);\r\n        _ = sb.Append (\"\u003e\u003e\u003e Stack Trace: \");\r\n        _ = sb.Append (newlineSeparator);\r\n        _ = sb.Append (stackTrace);\r\n      }\r\n\r\n      exception = exception.InnerException;\r\n      levelOfInnerException++;\r\n    }\r\n    while (exception != null);\r\n\r\n    return sb.ToString ();\r\n  }\r\n}\r\n```",
                                           "updatedAt":  "2022-07-21T23:16:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HDTlW",
                                           "createdAt":  "2022-07-22T00:13:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "\u003e @tfenise Are we expected to know or look up the error codes? If yes, is there a central page of all possible error codes?\r\n\r\n\u003e copied all names and values including their descriptions from the child pages of https://docs.microsoft.com/en-us/windows/win32/debug/system-error-codes \r\n\r\nIn case it is useful to others -- what I do is just grep the SDK headers, which you will have if you have installed the C++ workload in Visual Studio, eg\r\n```\r\nC:\\Program Files (x86)\\Windows Kits\\10\\Include\u003efindstr /sipc:\"10060\" *h\r\n10.0.19041.0\\shared\\winerror.h:#define WSAETIMEDOUT                     10060L\r\n```\r\nthe message is in a comment next to there. \r\n\r\nOf course, the numbers in those are not always in decimal. However the ERRLOOK.EXE tool that installs with Visual Studio at \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\Common7\\Tools\\errlook.exe\" can handle hex, etc.\r\n![image](https://user-images.githubusercontent.com/6385855/180335051-6b40102a-8703-4b46-8d98-ae9cf4557c4d.png)\r\n\r\nI am not sure which headers ERRLOOK.EXE has aggregated. I do not know where the sources are.",
                                           "updatedAt":  "2022-07-22T00:13:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HDTwO",
                                           "createdAt":  "2022-07-22T00:14:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "The only concrete step identified in this issue so far is the suggested change to SocketsException. We can pass feedback on to Windows, but I do not thing we will change how they create and deploy Windows for this.",
                                           "updatedAt":  "2022-07-22T00:14:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc54kIYK",
                                           "createdAt":  "2024-03-27T13:14:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD1m1OA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ricardoboss",
                                                                               "createdAt":  "2024-03-27T13:48:47Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "darBis",
                                                                               "createdAt":  "2024-07-02T12:55:48Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "SadPencil",
                                                                               "createdAt":  "2024-09-09T14:41:56Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "juwens",
                                                                               "createdAt":  "2024-10-10T14:17:04Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "mlsomers",
                                           "body":  "At least this issue did not get closed yet... They closed [mine](https://github.com/microsoft/dotnet/issues/474) and [this one](https://github.com/dotnet/runtime/issues/46656) and [this one](https://github.com/microsoft/appcenter-sdk-dotnet/issues/1616)\r\n\r\nWhen can we stop the need to translate something that resembles this (in dutch):\r\n\r\n\u003e The surgery is crippled while the opening is not switched on.\r\n\r\nAnd figure out it meant something like\r\n\r\n\u003e This operation is invalid while the window is disabled.\r\n\r\n\r\nOr even worse (an [example](https://github.com/microsoft/appcenter-sdk-dotnet/issues/1616) from @macmade)\r\n\r\n\u003e 개체 참조가 개체의 인스턴스로 설정되지 않았습니다\r\n\r\nWhich according to him means\r\n\r\n\u003e Object reference not set to an instance of an object.\r\n\r\nMaybe .Net 9 will finally give us `Exception.ToString(CultureInfo.InvariantCulture)` or a setting `System.Environment.ExceptionCulture` or something equivalent?... Please?",
                                           "updatedAt":  "2024-03-27T13:14:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6PXOUL",
                                           "createdAt":  "2024-10-10T14:20:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "juwens",
                                           "body":  "`Exception.ToString(CultureInfo.InvariantCulture)` +1\n\nFor our localized app, we want english logs and localized error messages for the user.\nSo only specifying `System.Environment.ExceptionCulture` would be insufficient (though better than the status quo).",
                                           "updatedAt":  "2024-10-10T14:20:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6PXrHj",
                                           "createdAt":  "2024-10-10T14:53:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Clockwork-Muse",
                                           "body":  "\u003e `Exception.ToString(CultureInfo.InvariantCulture)` +1\n\u003e \n\u003e For our localized app, we want english logs and localized error messages for the user. So only specifying `System.Environment.ExceptionCulture` would be insufficient (though better than the status quo).\n\nThe catch is that you should rarely be displaying \"raw\" exception messages to the user (and never a stack trace), regardless of the language, but instead be displaying something that would be actionable for them.  At that point, you\u0027d be constructing messages and dialogs, so the language/culture of the exception should be irrelevant.",
                                           "updatedAt":  "2024-10-10T14:53:09Z"
                                       }
                                   ],
                         "totalCount":  57
                     },
        "title":  "Exception Handling / Error Logging in English",
        "labels":  [
                       "question",
                       "area-System.Resources"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/54657",
        "createdAt":  "2021-06-24T00:45:43Z",
        "number":  54657,
        "author":  null,
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-05-29T16:48:39Z",
        "body":  "## Background and Motivation\r\n\r\nThe .NET Framework had **ResX*** functionality that allowed the use of **.resx** resource files.  .NET Core and later, no longer has this functionality, but does have something similar in **System.Windows.Forms** of the **[dotnet / winforms](https://github.com/dotnet/winforms)** SDK.  The original implementation, and the winforms implementation both have security flaws related to loading of assemblies defined in the .resx files themselves.\r\n\r\nWe have requirements that these resource files must be in plain text on the file system, thus we can\u0027t use the compiled **.resource** assemblies that were implemented.  It should be possible to come up with a different schema for these resource files that does not define the assemblies to use in the resource file itself.  The new resource files need to retain support for externally linked files.  All values should be available as either a string, a byte array, or a stream, and nothing else.\r\n\r\nThis is a replacement for #47795 which was closed due to the security issues.\r\n\r\n## Proposed API\r\n\r\nTBD, but it should be similar to the original design, including culture support.  It should be as simple as possible, similar to how configuration files were greatly simplified in ASP.NET.  With the limitation discussed above the existing tooling in Visual Studio for **.resx** files could be reused with slight modifications.  The tooling should include the creation of partial classes as well.\r\n\r\n## Alternative Designs\r\n\r\nI have found a way to hack the current winforms DLLs into an ASP.NET application, but it has the security risks mentioned above, and is reliant of the specific version of the .NET SDK being used.\r\n\r\n## Risks\r\n\r\nThe entire purpose of this functionality is to provide functionality w/o the risks that currently exist.  There should not be any risk by adding new functionality that itself is safe.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHObCyN8A==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2NzI0OTM4NA==",
                                           "createdAt":  "2021-06-24T00:45:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-06-24T00:45:47Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2NzI5NjU4Mw==",
                                           "createdAt":  "2021-06-24T03:00:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @tarekgh, @buyaa-n, @krwq\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n## Background and Motivation\r\n\r\nThe .NET Framework had **ResX*** functionality that allowed the use of **.resx** resource files.  .NET Core and later, no longer has this functionality, but does have something similar in **System.Windows.Forms** of the **[dotnet / winforms](https://github.com/dotnet/winforms)** SDK.  The original implementation, and the winforms implementation both have security flaws related to loading of assemblies defined in the .resx files themselves.\r\n\r\nWe have requirements that these resource files must be in plain text on the file system, thus we can\u0027t use the compiled **.resource** assemblies that were implemented.  It should be possible to come up with a different schema for these resource files that does not define the assemblies to use in the resource file itself.  The new resource files need to retain support for externally linked files.  All values should be available as either a string, a byte array, or a stream, and nothing else.\r\n\r\nThis is a replacement for #47795 which was closed due to the security issues.\r\n\r\n## Proposed API\r\n\r\nTBD, but it should be similar to the original design, including culture support.  It should be as simple as possible, similar to how configuration files were greatly simplified in ASP.NET.  With the limitation discussed above the existing tooling in Visual Studio for **.resx** files could be reused with slight modifications.  The tooling should include the creation of partial classes as well.\r\n\r\n## Alternative Designs\r\n\r\nI have found a way to hack the current winforms DLLs into an ASP.NET application, but it has the security risks mentioned above, and is reliant of the specific version of the .NET SDK being used.\r\n\r\n## Risks\r\n\r\nThe entire purpose of this functionality is to provide functionality w/o the risks that currently exist.  There should not be any risk by adding new functionality that itself is safe.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eKaelum\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`api-suggestion`, `area-System.Resources`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-06-24T03:00:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2OTQ4MzcwNA==",
                                           "createdAt":  "2021-06-28T08:28:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "krwq",
                                           "body":  "@tarekgh do you pehaps have any clues if we have some alternative solutions?",
                                           "updatedAt":  "2021-06-28T08:28:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2OTgzODYxMw==",
                                           "createdAt":  "2021-06-28T16:42:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tarekgh",
                                           "body":  "\u003e The .NET Framework had ResX* functionality that allowed the use of .resx resource files.\r\n\r\nWasn\u0027t supported there by WinForms too? According to the [doc](https://docs.microsoft.com/en-us/dotnet/framework/resources/working-with-resx-files-programmatically?ranMID=46131\u0026ranEAID=a1LgFw09t88\u0026ranSiteID=a1LgFw09t88-Nc1mFesRgGLIBiso_S2HMw\u0026epi=a1LgFw09t88-Nc1mFesRgGLIBiso_S2HMw\u0026irgwc=1\u0026OCID=AID2000142_aff_7806_1243925\u0026tduid=%28ir__mrdukhopi0kfqxeykk0sohzifv2xuc03duxvqyey00%29%287806%29%281243925%29%28a1LgFw09t88-Nc1mFesRgGLIBiso_S2HMw%29%28%29\u0026irclickid=_mrdukhopi0kfqxeykk0sohzifv2xuc03duxvqyey00)\r\n\r\n\u003e do you pehaps have any clues if we have some alternative solutions?\r\n\r\nWinFomrs has this functionality, but it looks there is some security concerns there. @GrabYourPitchforks may know better here. In general, I agree such functionality would be better to exist in the core level and not in WinForms levels because forcing users to host WinForms for just handling resources wouldn\u0027t be good. \r\n\r\n\r\n@Kaelum would be nice of you share more details about your scenarios. Why using .resources files is not enough.",
                                           "updatedAt":  "2021-06-28T16:42:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2OTkzMzExMQ==",
                                           "createdAt":  "2021-06-28T18:49:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "\u003e WinFomrs has this functionality, but it looks there is some security concerns there.\r\n\r\nI\u0027ll cover this first, as it is the second most import issue, behind that of the functionality completely missing.  The original concept of resource files was to not only contain text, but to also house fully instantiated objects by declaring the fully qualified type in the `.resx` file, and dynamically loading that DLL (the security flaw).  By only allowing text, byte arrays, and streams, the same objects can still be encoded, but object reconstitution will need to be hard coded in the application code.  This puts the burden of safety on the application, not the library.\r\n\r\n\u003e ...would be nice of you share more details about your scenarios. Why using .resources files is not enough.\r\n\r\nOur requirements are that the resource files must be in plain text, which includes XML with CDATA blocks.  These files cannot be in any binary form, which includes that of being embedded in an assembly, thus `.resources` files can\u0027t be used.  On top of that, `.resources` files can\u0027t have a key point to the contents of another file for it\u0027s value, which is also a requirement.\r\n\r\nIf the `ResourceManager` can be expanded to support this, the functionality would be on par with the original .NET Framework functionality, and it would also be safe to use.  The new functionality would not in itself introduce any security issues.  If the consumer instantiates an object based on the contents of the resource file, it would be up to the consumer to ensure that the contents is safe, not the library itself.\r\n\r\nAs I also stated in the original post, this could be very lightweight, and should be.  I wholeheartedly agree with @tarekgh when he says:\r\n\r\n\u003e In general, I agree such functionality would be better to exist in the core level and not in WinForms levels...\r\n\r\nas we need this to work on all platforms, including MAC and Linux, which is a problem with WinForms.",
                                           "updatedAt":  "2021-06-28T18:49:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3MTYzNTk0MA==",
                                           "createdAt":  "2021-06-30T18:32:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "GrabYourPitchforks",
                                           "body":  "\u003e By only allowing text, byte arrays, and streams, the same objects can still be encoded, but object reconstitution will need to be hard coded in the application code. This puts the burden of safety on the application, not the library.\r\n\r\nThis is a similar approach to we were batting around internally a while back. We were considering adding a few additional items like images and other multimedia formats, but the gist is the same: store only data, not raw objects.\r\n\r\nIn general I\u0027d be fine with advancing this plan. But ultimately it would look like this would be a _new_ format, not something that is expected to be backward compatible with .NET Framework applications. We would need to figure out if back-compat is an issue here.",
                                           "updatedAt":  "2021-06-30T18:32:59Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3MTY3MzU4OQ==",
                                           "createdAt":  "2021-06-30T19:35:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "@GrabYourPitchforks I\u0027ve been thinking about the backwards compatibility, and as long as the value can be returned as either a `byte[]` or `Stream`, the format would not vary by that much, and should be readable.  The majority of the existing `.resx` schema is attributes that can safely be ignored, as they are the fully qualified object names.  Current example:\r\n\r\n```XML\r\n\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\r\n\u003croot\u003e\r\n  \u003cxsd:schema id=\"root\" xmlns=\"\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:msdata=\"urn:schemas-microsoft-com:xml-msdata\"\u003e\r\n[snip]\r\n  \u003c/xsd:schema\u003e\r\n  \u003cresheader name=\"resmimetype\"\u003e\r\n    \u003cvalue\u003etext/microsoft-resx\u003c/value\u003e\r\n  \u003c/resheader\u003e\r\n  \u003cresheader name=\"version\"\u003e\r\n    \u003cvalue\u003e2.0\u003c/value\u003e\r\n  \u003c/resheader\u003e\r\n  \u003cresheader name=\"reader\"\u003e\r\n    \u003cvalue\u003eSystem.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\u003c/value\u003e\r\n  \u003c/resheader\u003e\r\n  \u003cresheader name=\"writer\"\u003e\r\n    \u003cvalue\u003eSystem.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\u003c/value\u003e\r\n  \u003c/resheader\u003e\r\n  \u003cassembly alias=\"System.Windows.Forms\" name=\"System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" /\u003e\r\n  \u003cdata name=\"Type_mismatch_on_column\" xml:space=\"preserve\"\u003e\r\n    \u003cvalue\u003eType mismatch on column {0}: [{1}].\u003c/value\u003e\r\n  \u003c/data\u003e\r\n  \u003cdata name=\"Type_mismatch_on_parameter\" xml:space=\"preserve\"\u003e\r\n    \u003cvalue\u003eType mismatch on parameter {0}.\u003c/value\u003e\r\n  \u003c/data\u003e\r\n  \u003cdata name=\"Unknown_column\" xml:space=\"preserve\"\u003e\r\n    \u003cvalue\u003eUnknown column: [{0}]\u003c/value\u003e\r\n  \u003c/data\u003e\r\n  \u003cdata name=\"CountryCodesJson\" type=\"System.Resources.ResXFileRef, System.Windows.Forms\"\u003e\r\n    \u003cvalue\u003eCountryCodes.json;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;UTF-8\u003c/value\u003e\r\n    \u003ccomment\u003ehttps://github.com/lukes/ISO-3166-Countries-with-Regional-Codes/raw/master/all/all.json\u003c/comment\u003e\r\n  \u003c/data\u003e\r\n  \u003cdata name=\"CountryCodesXml\" type=\"System.Resources.ResXFileRef, System.Windows.Forms\"\u003e\r\n    \u003cvalue\u003eCountryCodes.xml;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;UTF-8\u003c/value\u003e\r\n    \u003ccomment\u003ehttps://github.com/lukes/ISO-3166-Countries-with-Regional-Codes/raw/master/all/all.xml\u003c/comment\u003e\r\n  \u003c/data\u003e\r\n\u003c/root\u003e\r\n```\r\n\r\nThe majority is fluff and can easily be ignored/removed.  However, the external file references should probably be changed so that a `\u003clink\u003e` element replaces the `\u003cvalue\u003e` and `\u003ccomment\u003e` elements, and solely contains either an absolute or relative file system reference.  That would be breaking, and could be addressed in the Visual Studio tooling.  It is unlikely that anyone using the legacy `.resx` files is not also using Visual Studio.\r\n\r\nProposal format to replace the above `.resx` file:\r\n\r\n```XML\r\n\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\r\n\u003croot\u003e\r\n  \u003cdata name=\"Type_mismatch_on_column\"\u003e\r\n    \u003cvalue\u003eType mismatch on column {0}: [{1}].\u003c/value\u003e\r\n  \u003c/data\u003e\r\n  \u003cdata name=\"Type_mismatch_on_parameter\"\u003e\r\n    \u003cvalue\u003eType mismatch on parameter {0}.\u003c/value\u003e\r\n  \u003c/data\u003e\r\n  \u003cdata name=\"Unknown_column\"\u003e\r\n    \u003cvalue\u003eUnknown column: [{0}]\u003c/value\u003e\r\n  \u003c/data\u003e\r\n  \u003cdata name=\"CountryCodesJson\"\u003e\r\n    \u003clink\u003eCountryCodes.json\u003c/link\u003e\r\n  \u003c/data\u003e\r\n  \u003cdata name=\"CountryCodesXml\"\u003e\r\n    \u003clink\u003eCountryCodes.xml\u003c/link\u003e\r\n  \u003c/data\u003e\r\n\u003c/root\u003e\r\n```\r\n\r\nAlternate proposed format (breaking, while still supporting CDATA):\r\n\r\n```XML\r\n\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\r\n\u003croot\u003e\r\n  \u003cdata name=\"Type_mismatch_on_column\" type=\"value\"\u003eType mismatch on column {0}: [{1}].\u003c/data\u003e\r\n  \u003cdata name=\"Type_mismatch_on_parameter\" type=\"value\"\u003eType mismatch on parameter {0}.\u003c/data\u003e\r\n  \u003cdata name=\"Unknown_column\" type=\"value\"\u003eUnknown column: [{0}]\u003c/data\u003e\r\n  \u003cdata name=\"CountryCodesJson\" type=\"link\"\u003eCountryCodes.json\u003c/data\u003e\r\n  \u003cdata name=\"CountryCodesXml\" type=\"link\"\u003eCountryCodes.xml\u003c/data\u003e\r\n\u003c/root\u003e\r\n```\r\n\r\nI\u0027m fine with either of the above formats, or anything similar.  I think that the legacy file naming format for localization could be used, but if there is something better, that\u0027s good as well.",
                                           "updatedAt":  "2021-06-30T19:35:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41bZBr",
                                           "createdAt":  "2021-08-10T23:13:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "koszeggy",
                                           "body":  "As I commented also in #47795, I created a [library](https://github.com/koszeggy/KGySoft.CoreLibraries#dynamic-resource-management), which supports handling .resx files and attempts to fix a sort of issues:\r\n\r\n* It does not have any 3rd party reference, and it can be used on any platform\r\n* It is more or less compatible with the WinForms version (and can read and write compatible .resx files)\r\n* Many `System.Resources` types have been reimplemented, including [`ResXFileRef`](https://docs.kgysoft.net/corelibraries/?topic=html/T_KGySoft_Resources_ResXFileRef.htm), [`ResXDataNode`](https://docs.kgysoft.net/corelibraries/?topic=html/T_KGySoft_Resources_ResXDataNode.htm), [`ResXResourceReader`](https://docs.kgysoft.net/corelibraries/?topic=html/T_KGySoft_Resources_ResXResourceReader.htm), [`ResXResourceWriter`](https://docs.kgysoft.net/corelibraries/?topic=html/T_KGySoft_Resources_ResXResourceWriter.htm) and [`ResXResourceSet`](https://docs.kgysoft.net/corelibraries/?topic=html/T_KGySoft_Resources_ResXResourceSet.htm) classes (see the links for the comparisons and possible incompatibilities)\r\n* The original `ResXResourceReader` may load assemblies during parsing the .resx file even if its `UseResXDataNodes` property is true. In contrast, the replacement [`ResXResourceReader`](https://docs.kgysoft.net/corelibraries/?topic=html/T_KGySoft_Resources_ResXResourceReader.htm) does not resolve any type even if its `SafeMode` is false until the value of a specific resource is explicitly accessed.\r\n* The replacement [`ResXDataNode`](https://docs.kgysoft.net/corelibraries/?topic=html/T_KGySoft_Resources_ResXDataNode.htm) provides more properties to examine the raw .resx content before deserializing it. It has separate `GetValue` and [`GetValueSafe`](https://docs.kgysoft.net/corelibraries/?topic=html/M_KGySoft_Resources_ResXDataNode_GetValueSafe.htm) methods. The latter prevents loading new assemblies during the possible deserialization.\r\n* The replacement [`ResXDataSet`](https://docs.kgysoft.net/corelibraries/?topic=html/T_KGySoft_Resources_ResXResourceSet.htm) is a read-write object. It supports adding new resources and saving them. It _always_ reads only the raw .resx content, even if its [`SafeMode`](https://docs.kgysoft.net/corelibraries/?topic=html/P_KGySoft_Resources_ResXResourceSet_SafeMode.htm) property is false, in which case deserialization occurs only when a non-string value is explicitly obtained. And if `SafeMode` is true, then `GetString` never throws an exception: for non-string values it returns the underlying XML value.\r\n* [`ResXResourceManager`](https://docs.kgysoft.net/corelibraries/?topic=html/T_KGySoft_Resources_ResXResourceManager.htm), [`HybridResourceManager`](https://docs.kgysoft.net/corelibraries/?topic=html/T_KGySoft_Resources_HybridResourceManager.htm) and [`DynamicResourceManager`](https://docs.kgysoft.net/corelibraries/?topic=html/T_KGySoft_Resources_DynamicResourceManager.htm) have no corresponding types in `System.Resources`. They can be used the same way as a regular `ResourceManager` but they can work on .resx files and they support adding new resources. All of them have a [`SafeMode`](https://docs.kgysoft.net/corelibraries/?topic=html/P_KGySoft_Resources_ResXResourceManager_SafeMode.htm) property. See the links for more details.\r\n\r\nFeel free to migrate it in the dotnet code base. Until then, it is available as a [NuGet](https://www.nuget.org/packages/KGySoft.CoreLibraries) package.\r\n",
                                           "updatedAt":  "2021-08-10T23:16:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41ba6g",
                                           "createdAt":  "2021-08-10T23:33:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB11imA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "koszeggy",
                                                                               "createdAt":  "2021-08-10T23:42:37Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  null,
                                           "body":  "@koszeggy in the interim, we are actually using your library, so Thank You for that!\r\n\r\nHowever, long term, it would be significantly better if the functionality of this issue were added to the core functionality of ,NET.  It would by no means negate your library, but it would provide the bare basics that others could use (including yourself) to build upon, and would be inline with how the ASP.NET team reduced the configuration file functionality to the bare bones.  And best of all, it would be an officially supported Microsoft Standard.",
                                           "updatedAt":  "2021-08-10T23:33:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Gi1UI",
                                           "createdAt":  "2022-07-13T18:19:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "buyaa-n",
                                           "body":  "Moving to 8.0 as it is not planned for 7.0",
                                           "updatedAt":  "2022-07-13T18:19:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Gi3sS",
                                           "createdAt":  "2022-07-13T18:30:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "@buyaa-n can we be assured that this will be in 8.0.0?  We have a work-around (the NuGet package from @koszeggy), but the work-around is not safe, and we are seeing increased pressure from our policy team to remove these vulnerabilities.  We are being given a pass through the end of this year, but I don\u0027t think that we\u0027ll be given a pass through the end of next year, when 8.0.0 would be released.",
                                           "updatedAt":  "2022-07-13T18:30:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Gi9ha",
                                           "createdAt":  "2022-07-13T18:56:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "buyaa-n",
                                           "body":  "\u003e @buyaa-n can we be assured that this will be in 8.0.0?\r\n\r\nNot assured, but we will consider, thanks for providing more info, that will be helpful for prioritizing it in 8.0",
                                           "updatedAt":  "2022-07-13T18:56:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GjMio",
                                           "createdAt":  "2022-07-13T20:10:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCmklfw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "buyaa-n",
                                                                               "createdAt":  "2022-07-13T20:41:36Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jeffhandley",
                                           "body":  "To better capture this, let\u0027s go ahead and move this into Future. But if we bring it into our .NET 8 plans, we\u0027ll change the milestone back to 8.0.0.",
                                           "updatedAt":  "2022-07-13T20:10:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5sLI3w",
                                           "createdAt":  "2023-11-16T17:01:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "koszeggy",
                                           "body":  "Just an update to the .resx library I mentioned [above](https://github.com/dotnet/runtime/issues/54657#issuecomment-896372843): though it was already much more secure than the WinForms version, the security has been improved further in [v8.0.0](https://github.com/koszeggy/KGySoft.CoreLibraries/blob/240cf69cc924f685283f27e2dfffd0b024b92b95/KGySoft.CoreLibraries/changelog.txt#L125) (introducing some breaking changes, though):\r\n* Apart from some natively supported simple types the expected type of the resource must be explicitly declared in the new [`ResXDataNode.GetValueSafe`](https://docs.kgysoft.net/corelibraries/html/Overload_KGySoft_Resources_ResXDataNode_GetValueSafe.htm) method overloads.\r\n* File references are no longer resolved by `ResXDataNode.GetValueSafe`. You need to check \u0027manually\u0027 whether the file you want to access is still valid (eg. your `byte[]` or `string` to be obtained has a reasonable size, etc.). Btw, you can easily convert your .resx files with file references to single file resources by [re-saving](https://docs.kgysoft.net/corelibraries/html/M_KGySoft_Resources_ResXResourceSet_Save_2.htm) them.\r\n* When targeting .NET 8 or later, legacy resources saved by `BinaryFormatter` are no longer supported even in compatible mode, even if safe mode is disabled. In non-compatible mode the much safer [`BinarySerializationFormatter`](https://docs.kgysoft.net/corelibraries/html/T_KGySoft_Serialization_Binary_BinarySerializationFormatter.htm) still may be able to handle your custom resources without a `TypeConverter` but in safe mode it is restricted for types that have no more than one custom type name to resolve in the serialization stream because in the `ResXDataNode.GetValueSafe` overloads you can specify only one expected type.\r\n\r\nIf you use string resources only, then the breaking changes above should not be a problem for you. The [`SafeMode`](https://docs.kgysoft.net/corelibraries/html/P_KGySoft_Resources_ResXResourceManager_SafeMode.htm) of the manager classes did not change: even if a manipulated .resx file contains a potentially dangerous type the [`GetString`](https://docs.kgysoft.net/corelibraries/html/M_KGySoft_Resources_ResXResourceManager_GetString_1.htm) method just returns the raw string from the .resx `value` element.",
                                           "updatedAt":  "2023-11-16T17:01:59Z"
                                       }
                                   ],
                         "totalCount":  14
                     },
        "title":  "Add secure ResX functionality to System.Resources",
        "labels":  [
                       "api-suggestion",
                       "area-System.Resources",
                       "binaryformatter-migration"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/80790",
        "createdAt":  "2023-01-18T16:11:32Z",
        "number":  80790,
        "author":  "tl-laurence",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-02-08T15:55:22Z",
        "body":  "### Description\r\n\r\nUsing resource manager in a high load environment we see errors occurring and strings being read incorrectly. This only happens when the `IgnoreCase` property is `true`.\r\n\r\nError message: `Corrupt .resources file. Invalid offset \u0027503403335\u0027 into data section.`\r\n\r\nStack:\r\n`\r\n  at System.Resources.ResourceReader.AllocateStringForNameIndex(Int32 index, Int32\u0026 dataOffset)\r\n   at System.Resources.RuntimeResourceSet.GetObject(String key, Boolean ignoreCase, Boolean isString)\r\n   at System.Resources.RuntimeResourceSet.GetString(String key, Boolean ignoreCase)\r\n   at System.Resources.ResourceManager.GetString(String name, CultureInfo culture)\r\n`\r\n\r\n### Reproduction Steps\r\n\r\nThis test fails intermittently but more frequently after a clean rebuild\r\n\r\n```cs\r\n[TestFixture]\r\npublic class ResourceManagerTest\r\n{\r\n    [Test]\r\n    public void GivenCaseInvariantResources_ThenNoErrors()\r\n    {\r\n        Parallel.For(0, 1000, (i) =\u003e\r\n         {\r\n             var resourceMan = new System.Resources.ResourceManager(\"MyBaseName\", typeof(MyAssembly).Assembly);\r\n             resourceMan.IgnoreCase = true;\r\n\r\n             Parallel.For(0, 1000, (i) =\u003e\r\n             {\r\n                 var key = \"key_that_exists_but_not_in_same_case_as_resources\";\r\n                 resourceMan.GetString(key);\r\n             });\r\n         });\r\n    }\r\n}\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe resource should be read without an error as the class is marked as thread safe.\r\n\r\n### Actual behavior\r\n\r\nError message: `Corrupt .resources file. Invalid offset \u0027503403335\u0027 into data section.`\r\n\r\nStack:\r\n`\r\n  at System.Resources.ResourceReader.AllocateStringForNameIndex(Int32 index, Int32\u0026 dataOffset)\r\n   at System.Resources.RuntimeResourceSet.GetObject(String key, Boolean ignoreCase, Boolean isString)\r\n   at System.Resources.RuntimeResourceSet.GetString(String key, Boolean ignoreCase)\r\n   at System.Resources.ResourceManager.GetString(String name, CultureInfo culture)\r\n`\r\n\r\nAfter the error occurs once **resource strings are read incorrectly without and further errors** until the application is restarted\r\n\r\n### Regression?\r\n\r\n_No response_\r\n\r\n### Known Workarounds\r\n\r\nDon\u0027t use the IgnoreCase flag\r\n\r\n### Configuration\r\n\r\n.NET 6.0\r\nErrors occurs on:\r\n - Windows 10 Pro x64\r\n - Ubuntu 18.4 x64\r\n\r\n### Other information\r\n\r\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOc0z_OQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5SsOn7",
                                           "createdAt":  "2023-01-18T16:11:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-resources\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\n\nUsing resource manager in a high load environment we see errors occurring and strings being read incorrectly. This only happens when the `IgnoreCase` property is `true`.\r\n\r\nError message: `Corrupt .resources file. Invalid offset \u0027503403335\u0027 into data section.`\r\n\r\nStack:\r\n`\r\n  at System.Resources.ResourceReader.AllocateStringForNameIndex(Int32 index, Int32\u0026 dataOffset)\r\n   at System.Resources.RuntimeResourceSet.GetObject(String key, Boolean ignoreCase, Boolean isString)\r\n   at System.Resources.RuntimeResourceSet.GetString(String key, Boolean ignoreCase)\r\n   at System.Resources.ResourceManager.GetString(String name, CultureInfo culture)\r\n`\n\n### Reproduction Steps\n\nThis test fails intermittently but more frequently after a clean rebuild\r\n\r\n```cs\r\n[TestFixture]\r\n    public class ResourceManagerTest\r\n    {\r\n        [Test]\r\n        public void GivenCaseInvariantResources_ThenNoErrors()\r\n        {\r\n            Parallel.For(0, 1000, (i) =\u003e\r\n             {\r\n                 var resourceMan = new System.Resources.ResourceManager(\"MyBaseName\", typeof(MyAssembly).Assembly);\r\n                 resourceMan.IgnoreCase = true;\r\n\r\n                 Parallel.For(0, 1000, (i) =\u003e\r\n                 {\r\n                     var key = \"key_that_exists_but_not_in_same_case_as_resources\";\r\n                     resourceMan.GetString(key);\r\n                 });\r\n             });\r\n        }\r\n    }`\n\n### Expected behavior\n\nThe resource should be read without an error as the class is marked as thread safe.\n\n### Actual behavior\n\nError message: `Corrupt .resources file. Invalid offset \u0027503403335\u0027 into data section.`\r\n\r\nStack:\r\n`\r\n  at System.Resources.ResourceReader.AllocateStringForNameIndex(Int32 index, Int32\u0026 dataOffset)\r\n   at System.Resources.RuntimeResourceSet.GetObject(String key, Boolean ignoreCase, Boolean isString)\r\n   at System.Resources.RuntimeResourceSet.GetString(String key, Boolean ignoreCase)\r\n   at System.Resources.ResourceManager.GetString(String name, CultureInfo culture)\r\n`\r\n\r\nAfter the error occurs once **resource strings are read incorrectly without and further errors** until the application is restarted\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\nDon\u0027t use the IgnoreCase flag\n\n### Configuration\n\n.NET 6.0\r\nErrors occurs on:\r\n - Windows 10 Pro x64\r\n - Ubuntu 18.4 x64\n\n### Other information\n\n_No response_\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003etl-laurence\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-System.Resources`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-01-18T16:11:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Ss5AG",
                                           "createdAt":  "2023-01-18T18:10:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveharter",
                                           "body":  "Appears to be a bug however we need to verify locally. That method is doc\u0027d as being \"thread safe\"\r\n\r\nThread Safety\r\nThe [GetString(String)](https://learn.microsoft.com/en-us/dotnet/api/system.resources.resourcemanager.getstring?view=net-7.0#system-resources-resourcemanager-getstring(system-string)) method is thread safe.\r\n",
                                           "updatedAt":  "2023-01-18T18:11:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Ss59-",
                                           "createdAt":  "2023-01-18T18:13:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveharter",
                                           "body":  "@tl-laurence is the resource file special in any way (lots of items?) or is it changed at runtime? \r\n\r\nBasically wondering how to best repro this.",
                                           "updatedAt":  "2023-01-18T18:13:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Ss7kX",
                                           "createdAt":  "2023-01-18T18:19:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCy4bfw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "buyaa-n",
                                                                               "createdAt":  "2023-01-18T18:35:35Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "tarekgh",
                                           "body":  "Is this different than https://github.com/dotnet/runtime/issues/74052?",
                                           "updatedAt":  "2023-01-18T18:19:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5StAXy",
                                           "createdAt":  "2023-01-18T18:30:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "This issue has been marked `needs-author-action` and may be missing some important information.",
                                           "updatedAt":  "2023-01-18T18:30:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5StEpu",
                                           "createdAt":  "2023-01-18T18:39:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "buyaa-n",
                                           "body":  "Looks quite similar thanks @tarekgh, @tl-laurence could you try with [recent .NET 8 bits](https://github.com/dotnet/installer#installers-and-binaries) where https://github.com/dotnet/runtime/issues/74052 fixed?",
                                           "updatedAt":  "2023-01-18T18:39:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5TRoUS",
                                           "createdAt":  "2023-01-19T15:13:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC0gWDQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "buyaa-n",
                                                                               "createdAt":  "2023-01-19T22:19:46Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "tl-laurence",
                                           "body":  "Yes it looks like it could be the same issue as #74052. I will have a go at testing with the suggested version. \r\n\r\n@steveharter there is nothing special about the resource files. We have multiple languages configured but can reproduce with a single culture.\r\n\r\nIt is the IgnoreCase flag and the use of a key that is not in the correct case that causes it from what I have found.\r\n\r\nWe removed the ignorecase and looked up the keys in a concurrent dictionary instead as a workaround which has stopped the errors.",
                                           "updatedAt":  "2023-01-19T15:14:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5dHP7U",
                                           "createdAt":  "2023-05-25T02:49:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "@tl-laurence did you verify it\u0027s fixed?",
                                           "updatedAt":  "2023-05-25T02:49:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5zTP85",
                                           "createdAt":  "2024-02-08T15:55:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tl-laurence",
                                           "body":  "Yes this is fixed in .Net 8",
                                           "updatedAt":  "2024-02-08T15:55:21Z"
                                       }
                                   ],
                         "totalCount":  9
                     },
        "title":  "ResourceManager not threadsafe when case insensitive keys are used",
        "labels":  [
                       "area-System.Resources",
                       "needs-further-triage"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/104216",
        "createdAt":  "2024-07-01T00:59:47Z",
        "number":  104216,
        "author":  "stephentoub",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-26T10:50:35Z",
        "body":  "Trying these instructions:\nhttps://github.com/dotnet/runtime/blob/fcdb6dba4c1d904d9ebe35f66fbfed8befa19755/src/libraries/System.Resources.Extensions/tests/System.Resources.Extensions.Tests.csproj#L34-L55\n\nResults in:\n```\n  Unhandled exception. System.IO.FileNotFoundException: Could not load file or assembly \u0027System.Runtime.Serialization.Formatters, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\u0027. The system cannot find the file specified.\n  File name: \u0027System.Runtime.Serialization.Formatters, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\u0027\n     at System.Resources.Extensions.Tests.TestData.WriteResourcesStream(Stream stream)\n     at System.Resources.Extensions.Tests.TestData.WriteResources(String file) in D:\\repos\\runtime\\src\\libraries\\System.Resources.Extensions\\tests\\TestData.cs:line 228\n     at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\n     at System.Reflection.MethodBaseInvoker.InterpretedInvoke_Method(Object obj, IntPtr* args) in D:\\repos\\runtime\\src\\coreclr\\System.Private.CoreLib\\src\\System\\Reflection\\MethodBaseInvoker.CoreCLR.cs:line 36\n     at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr) in D:\\repos\\runtime\\src\\libraries\\System.Private.CoreLib\\src\\System\\Reflection\\MethodBaseInvoker.cs:line 178\n  --- End of stack trace from previous location ---\n     at Microsoft.DotNet.RemoteExecutor.Program.Main(String[] args) in /_/src/Microsoft.DotNet.RemoteExecutor/src/Program.cs:line 97\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOpiUv6A==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6DD8pA",
                                           "createdAt":  "2024-07-01T01:00:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "stephentoub",
                                           "body":  "cc: @bartonjs, @adamsitnik, am I just holding it wrong or do the instructions need to be redone?",
                                           "updatedAt":  "2024-07-01T01:00:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6DEXHH",
                                           "createdAt":  "2024-07-01T02:11:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-resources\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-07-01T02:11:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6DMiBk",
                                           "createdAt":  "2024-07-01T21:25:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bartonjs",
                                           "body":  "That looks like some piece is missing the package reference to the new nuget package, since it\u0027s complaining it can\u0027t find the 9.0.0 version of the assembly.",
                                           "updatedAt":  "2024-07-01T21:25:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Djp2c",
                                           "createdAt":  "2024-07-03T20:13:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveharter",
                                           "body":  "Assigning to @adamsitnik; PTAL",
                                           "updatedAt":  "2024-07-03T20:13:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6GpY_U",
                                           "createdAt":  "2024-07-30T18:51:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveharter",
                                           "body":  "@adamsitnik do you plan on addressing this for v9?",
                                           "updatedAt":  "2024-07-30T18:51:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Gwads",
                                           "createdAt":  "2024-07-31T15:49:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "adamsitnik",
                                           "body":  "I am sorry, but I have no idea how to fix it. @bartonjs is most likely the best person to look at it.\r\n\r\nI am going to move it to 10.0 as it does not seem to be mandatory to ship",
                                           "updatedAt":  "2024-07-31T15:49:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6JmLK2",
                                           "createdAt":  "2024-08-24T18:27:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "All these failures in [`runtime-coreclr crossgen2`](https://dev.azure.com/dnceng-public/public/_build?definitionId=124\u0026_a=summary\u0026branchFilter=331%2C331%2C331%2C331%2C331%2C331%2C331%2C331%2C331%2C331%2C331%2C331%2C331%2C331%2C331%2C331%2C331%2C331%2C331%2C331%2C331) pipeline are giving the same stack trace:\r\n\r\n\u003cimg width=\"1436\" alt=\"image\" src=\"https://github.com/user-attachments/assets/192dac44-094d-4c4c-a84f-619f9052c4ee\"\u003e\r\n\r\n```\r\n----- start Sat 08/24/2024 17:54:34.99 ===============  To repro directly: =====================================================\r\npushd C:\\h\\w\\AD33092B\\w\\9A4808EF\\e\\\r\nSystem.Resources.Extensions.BinaryFormat.Tests.exe -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing -xml testResults.xml \r\npopd\r\n===========================================================================================================\r\n\r\nC:\\h\\w\\AD33092B\\w\\9A4808EF\\e\u003eSystem.Resources.Extensions.BinaryFormat.Tests.exe -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing -xml testResults.xml  \r\nRunning assembly:System.Resources.Extensions.BinaryFormat.Tests, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\r\nUnhandled exception. System.IO.FileNotFoundException: Could not load file or assembly \u0027System.Runtime.Serialization.Formatters, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\u0027. The system cannot find the file specified.\r\nFile name: \u0027System.Runtime.Serialization.Formatters, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\u0027\r\n   at System.Reflection.RuntimeAssembly.GetExportedTypes()\r\n   at Xunit.Sdk.ReflectionAssemblyInfo.GetTypes(Boolean includePrivateTypes) in /_/src/xunit.execution/Sdk/Reflection/ReflectionAssemblyInfo.cs:line 80\r\n   at Xunit.Sdk.TestCollectionFactoryHelper.GetTestCollectionDefinitions(IAssemblyInfo assemblyInfo, IMessageSink diagnosticMessageSink) in /_/src/xunit.execution/Sdk/Frameworks/TestCollectionFactoryHelper.cs:line 22\r\n   at Xunit.Sdk.CollectionPerClassTestCollectionFactory..ctor(ITestAssembly testAssembly, IMessageSink diagnosticMessageSink) in /_/src/xunit.execution/Sdk/Frameworks/CollectionPerClassTestCollectionFactory.cs:line 27\r\n   at Xunit.Sdk.ExtensibilityPointFactory.GetXunitTestCollectionFactory(IMessageSink diagnosticMessageSink, IAttributeInfo collectionBehaviorAttribute, ITestAssembly testAssembly) in /_/src/xunit.execution/Sdk/ExtensibilityPointFactory.cs:line 245\r\n   at Xunit.Sdk.XunitTestFrameworkDiscoverer..ctor(IAssemblyInfo assemblyInfo, ISourceInformationProvider sourceProvider, IMessageSink diagnosticMessageSink, IXunitTestCollectionFactory collectionFactory) in /_/src/xunit.execution/Sdk/Frameworks/XunitTestFrameworkDiscoverer.cs:line 45\r\n   at Xunit.Sdk.XunitTestFramework.CreateDiscoverer(IAssemblyInfo assemblyInfo) in /_/src/xunit.execution/Sdk/Frameworks/XunitTestFramework.cs:line 21\r\n   at SingleFileTestRunner.Main(String[] args) in /_/src/libraries/Common/tests/SingleFileTestRunner/SingleFileTestRunner.cs:line 75\r\n----- end Sat 08/24/2024 17:54:40.24 ----- exit code -532462766 ----------------------------------------------------------\r\n----- start ===============  XUnitLogChecker Output =====================================================\r\nC:\\h\\w\\AD33092B\\p\\dotnet.exe --roll-forward Major C:\\h\\w\\AD33092B\\p\\XUnitLogChecker.dll --dumps-path C:\\cores\r\n[XUnitLogChecker]: 17:54:40.34: Only dumps checking will be done.\r\n```\r\n\r\nhttps://helixre107v0xdcypoyl9e7f.blob.core.windows.net/dotnet-runtime-refs-heads-main-1c0e383857b0417582/System.Resources.Extensions.BinaryFormat.Tests/1/console.500e9752.log?helixlogtype=result",
                                           "updatedAt":  "2024-08-24T18:27:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6mJS_o",
                                           "createdAt":  "2025-04-08T19:23:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOENgVrA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "adamsitnik",
                                                                               "createdAt":  "2025-04-09T09:27:38Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "Doesn\u0027t appear to be blocking-outerloop (which isn\u0027t used for `crossgen2` pipeline, btw)",
                                           "updatedAt":  "2025-04-08T19:23:41Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "System.Resources.Extensions.Tests resource re-generation is broken after BinaryFormatter extrication",
        "labels":  [
                       "area-System.Resources",
                       "test-bug",
                       "binaryformatter-migration"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/105020",
        "createdAt":  "2024-07-17T11:01:55Z",
        "number":  105020,
        "author":  "akoeplinger",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-09-12T14:58:19Z",
        "body":  "DeserializeStoredObjects and ValidateAgainstBlobs tests fail on ppc64le. They work on other architectures using the Mono runtime.\r\n\r\nLog:\r\n\r\n```\r\n  Discovering: System.Resources.Extensions.BinaryFormat.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Resources.Extensions.BinaryFormat.Tests (found 132 test cases)\r\n  Starting:    System.Resources.Extensions.BinaryFormat.Tests (parallel test collections = on [4 threads], stop on fail = off)\r\n    System.Resources.Extensions.Tests.FormattedObject.SystemDrawingTests.Bitmap_RoundTrip [SKIP]\r\n      Condition(s) not met: \"IsDrawingSupported\", \"SupportsComInterop\"\r\n    System.Resources.Extensions.Tests.FormattedObject.SystemDrawingTests.RectangleF_Parse [SKIP]\r\n      Condition(s) not met: \"IsDrawingSupported\"\r\n    System.Resources.Extensions.Tests.FormattedObject.SystemDrawingTests.PointF_Parse [SKIP]\r\n      Condition(s) not met: \"IsDrawingSupported\"\r\n    System.Resources.Extensions.Tests.FormattedObject.SystemDrawingTests.Png_RoundTrip [SKIP]\r\n      Condition(s) not met: \"IsDrawingSupported\", \"SupportsComInterop\"\r\n    BinaryFormatTests.FormatterTests.BinaryFormatterTests.ValidateAgainstBlobs(obj: Tuple (1, \"2\", 3, 4, 5.5999999999999996, 0, 9), blobs: [BinaryFormatTests.TypeSerializableValue, BinaryFormatTests.TypeSerializableValue]) [FAIL]\r\n      The stored blob with index 0 for type System.Tuple`7[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.UInt32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int64, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Single, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Decimal, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] is outdated and needs to be updated.\r\n      \r\n      -------------------- Stored blob ---------------------\r\n      Encoded: AAEAAAD/////AQAAAAAAAAAEAQAAAJkFU3lzdGVtLlR1cGxlYDdbW1N5c3RlbS5JbnQzMiwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlVJbnQzMiwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLkludDY0LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uRG91YmxlLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU2luZ2xlLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uRGVjaW1hbCwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0HAAAAB21fSXRlbTEHbV9JdGVtMgdtX0l0ZW0zB21fSXRlbTQHbV9JdGVtNQdtX0l0ZW02B21fSXRlbTcAAQAAAAAACA8JBgsFAQAAAAYCAAAAATIDAAAABAAAAAAAAABmZmZmZmYWQJqZ+UABOQs=\r\n      Decoded: �\u0001�������\u0001�������\u0004\u0001����\u0005System.Tuple`7[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.String, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.UInt32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Int64, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Double, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Single, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Decimal, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]]\u0007���\u0007m_Item1\u0007m_Item2\u0007m_Item3\u0007m_Item4\u0007m_Item5\u0007m_Item6\u0007m_Item7�\u0001�����\b\u000f\t\u0006\u000b\u0005\u0001���\u0006\u0002���\u00012\u0003���\u0004�������ffffff\u0016@���@\u00019\u000b\r\n      \r\n      --------------- Runtime generated blob ---------------\r\n      Encoded: AAEAAAD/////AQAAAAAAAAAEAQAAAJkFU3lzdGVtLlR1cGxlYDdbW1N5c3RlbS5JbnQzMiwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlVJbnQzMiwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLkludDY0LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uRG91YmxlLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU2luZ2xlLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uRGVjaW1hbCwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0HAAAAB21fSXRlbTEHbV9JdGVtMgdtX0l0ZW0zB21fSXRlbTQHbV9JdGVtNQdtX0l0ZW02B21fSXRlbTcAAQAAAAAACA8JBgsFAQAAAAYCAAAAATIDAAAABAAAAAAAAABmZmZmZmYWQAAAAAABOQs=\r\n      Decoded: �\u0001�������\u0001�������\u0004\u0001����\u0005System.Tuple`7[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.String, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.UInt32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Int64, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Double, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Single, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Decimal, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]]\u0007���\u0007m_Item1\u0007m_Item2\u0007m_Item3\u0007m_Item4\u0007m_Item5\u0007m_Item6\u0007m_Item7�\u0001�����\b\u000f\t\u0006\u000b\u0005\u0001���\u0006\u0002���\u00012\u0003���\u0004�������ffffff\u0016@����\u00019\u000b\r\n      Stack Trace:\r\n        /_/src/libraries/System.Resources.Extensions/tests/BinaryFormatTests/Legacy/BinaryFormatterTests.cs(259,0): at BinaryFormatTests.FormatterTests.BinaryFormatterTests.SanityCheckBlob(Object obj, TypeSerializableValue[] blobs)\r\n        /_/src/libraries/System.Resources.Extensions/tests/BinaryFormatTests/Legacy/BinaryFormatterTests.cs(69,0): at BinaryFormatTests.FormatterTests.BinaryFormatterTests.ValidateAndRoundtrip(Object obj, TypeSerializableValue[] blobs, Boolean isEqualityComparer)\r\n        /_/src/libraries/System.Resources.Extensions/tests/BinaryFormatTests/Legacy/BinaryFormatterTests.cs(24,0): at BinaryFormatTests.FormatterTests.BinaryFormatterTests.ValidateAgainstBlobs(Object obj, TypeSerializableValue[] blobs)\r\n           at System.Object.InvokeStub_BinaryFormatterTests.ValidateAgainstBlobs(Object , Span`1 )\r\n        /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs(136,0): at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n    BinaryFormatTests.FormatterTests.BinaryFormatterTests.ValidateAgainstBlobs(obj: Tuple (1, \"2\", 3, 4, 5.5999999999999996, 0, 9, Tuple (10)), blobs: [BinaryFormatTests.TypeSerializableValue, BinaryFormatTests.TypeSerializableValue]) [FAIL]\r\n      The stored blob with index 0 for type System.Tuple`8[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.UInt32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int64, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Single, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Decimal, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Tuple`1[[System.Tuple`1[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] is outdated and needs to be updated.\r\n      \r\n      -------------------- Stored blob ---------------------\r\n      Encoded: AAEAAAD/////AQAAAAAAAAAEAQAAALMHU3lzdGVtLlR1cGxlYDhbW1N5c3RlbS5JbnQzMiwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlVJbnQzMiwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLkludDY0LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uRG91YmxlLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU2luZ2xlLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uRGVjaW1hbCwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlR1cGxlYDFbW1N5c3RlbS5UdXBsZWAxW1tTeXN0ZW0uSW50MzIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXSwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0IAAAAB21fSXRlbTEHbV9JdGVtMgdtX0l0ZW0zB21fSXRlbTQHbV9JdGVtNQdtX0l0ZW02B21fSXRlbTcGbV9SZXN0AAEAAAAAAAMIDwkGCwXKAVN5c3RlbS5UdXBsZWAxW1tTeXN0ZW0uVHVwbGVgMVtbU3lzdGVtLkludDMyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXSwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0BAAAABgIAAAABMgMAAAAEAAAAAAAAAGZmZmZmZhZAmpn5QAE5CQMAAAAEAwAAAMoBU3lzdGVtLlR1cGxlYDFbW1N5c3RlbS5UdXBsZWAxW1tTeXN0ZW0uSW50MzIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQEAAAAHbV9JdGVtMQNrU3lzdGVtLlR1cGxlYDFbW1N5c3RlbS5JbnQzMiwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0JBAAAAAQEAAAAa1N5c3RlbS5UdXBsZWAxW1tTeXN0ZW0uSW50MzIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAQAAAAdtX0l0ZW0xAAgKAAAACw==\r\n      Decoded: �\u0001�������\u0001�������\u0004\u0001����\u0007System.Tuple`8[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.String, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.UInt32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Int64, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Double, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Single, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Decimal, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Tuple`1[[System.Tuple`1[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]]\b���\u0007m_Item1\u0007m_Item2\u0007m_Item3\u0007m_Item4\u0007m_Item5\u0007m_Item6\u0007m_Item7\u0006m_Rest�\u0001�����\u0003\b\u000f\t\u0006\u000b\u0005�\u0001System.Tuple`1[[System.Tuple`1[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]]\u0001���\u0006\u0002���\u00012\u0003���\u0004�������ffffff\u0016@���@\u00019\t\u0003���\u0004\u0003����\u0001System.Tuple`1[[System.Tuple`1[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]]\u0001���\u0007m_Item1\u0003kSystem.Tuple`1[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]]\t\u0004���\u0004\u0004���kSystem.Tuple`1[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]]\u0001���\u0007m_Item1�\b���\u000b\r\n      \r\n      --------------- Runtime generated blob ---------------\r\n      Encoded: AAEAAAD/////AQAAAAAAAAAEAQAAALMHU3lzdGVtLlR1cGxlYDhbW1N5c3RlbS5JbnQzMiwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlVJbnQzMiwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLkludDY0LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uRG91YmxlLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU2luZ2xlLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uRGVjaW1hbCwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlR1cGxlYDFbW1N5c3RlbS5UdXBsZWAxW1tTeXN0ZW0uSW50MzIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXSwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0IAAAAB21fSXRlbTEHbV9JdGVtMgdtX0l0ZW0zB21fSXRlbTQHbV9JdGVtNQdtX0l0ZW02B21fSXRlbTcGbV9SZXN0AAEAAAAAAAMIDwkGCwXKAVN5c3RlbS5UdXBsZWAxW1tTeXN0ZW0uVHVwbGVgMVtbU3lzdGVtLkludDMyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXSwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0BAAAABgIAAAABMgMAAAAEAAAAAAAAAGZmZmZmZhZAAAAAAAE5CQMAAAAEAwAAAMoBU3lzdGVtLlR1cGxlYDFbW1N5c3RlbS5UdXBsZWAxW1tTeXN0ZW0uSW50MzIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQEAAAAHbV9JdGVtMQNrU3lzdGVtLlR1cGxlYDFbW1N5c3RlbS5JbnQzMiwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0JBAAAAAQEAAAAa1N5c3RlbS5UdXBsZWAxW1tTeXN0ZW0uSW50MzIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAQAAAAdtX0l0ZW0xAAgKAAAACw==\r\n      Decoded: �\u0001�������\u0001�������\u0004\u0001����\u0007System.Tuple`8[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.String, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.UInt32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Int64, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Double, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Single, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Decimal, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Tuple`1[[System.Tuple`1[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]]\b���\u0007m_Item1\u0007m_Item2\u0007m_Item3\u0007m_Item4\u0007m_Item5\u0007m_Item6\u0007m_Item7\u0006m_Rest�\u0001�����\u0003\b\u000f\t\u0006\u000b\u0005�\u0001System.Tuple`1[[System.Tuple`1[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]]\u0001���\u0006\u0002���\u00012\u0003���\u0004�������ffffff\u0016@����\u00019\t\u0003���\u0004\u0003����\u0001System.Tuple`1[[System.Tuple`1[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]]\u0001���\u0007m_Item1\u0003kSystem.Tuple`1[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]]\t\u0004���\u0004\u0004���kSystem.Tuple`1[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]]\u0001���\u0007m_Item1�\b���\u000b\r\n      Stack Trace:\r\n        /_/src/libraries/System.Resources.Extensions/tests/BinaryFormatTests/Legacy/BinaryFormatterTests.cs(259,0): at BinaryFormatTests.FormatterTests.BinaryFormatterTests.SanityCheckBlob(Object obj, TypeSerializableValue[] blobs)\r\n        /_/src/libraries/System.Resources.Extensions/tests/BinaryFormatTests/Legacy/BinaryFormatterTests.cs(69,0): at BinaryFormatTests.FormatterTests.BinaryFormatterTests.ValidateAndRoundtrip(Object obj, TypeSerializableValue[] blobs, Boolean isEqualityComparer)\r\n        /_/src/libraries/System.Resources.Extensions/tests/BinaryFormatTests/Legacy/BinaryFormatterTests.cs(24,0): at BinaryFormatTests.FormatterTests.BinaryFormatterTests.ValidateAgainstBlobs(Object obj, TypeSerializableValue[] blobs)\r\n           at System.Object.InvokeStub_BinaryFormatterTests.ValidateAgainstBlobs(Object , Span`1 )\r\n        /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs(136,0): at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n    BinaryFormatTests.FormatterTests.BinaryFormatterTests.ValidateAgainstBlobs(obj: Tuple (1, \"2\", 3, 4, 5.5999999999999996, 0, 9), blobs: [BinaryFormatTests.TypeSerializableValue, BinaryFormatTests.TypeSerializableValue]) [FAIL]\r\n      The stored blob with index 0 for type System.ValueTuple`7[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.UInt32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int64, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Single, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Decimal, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] is outdated and needs to be updated.\r\n      \r\n      -------------------- Stored blob ---------------------\r\n      Encoded: AAEAAAD/////AQAAAAAAAAAEAQAAAJ4FU3lzdGVtLlZhbHVlVHVwbGVgN1tbU3lzdGVtLkludDMyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uVUludDMyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uSW50NjQsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5Eb3VibGUsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TaW5nbGUsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5EZWNpbWFsLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQcAAAAFSXRlbTEFSXRlbTIFSXRlbTMFSXRlbTQFSXRlbTUFSXRlbTYFSXRlbTcAAQAAAAAACA8JBgsFAQAAAAYCAAAAATIDAAAABAAAAAAAAABmZmZmZmYWQJqZ+UABOQs=\r\n      Decoded: �\u0001�������\u0001�������\u0004\u0001����\u0005System.ValueTuple`7[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.String, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.UInt32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Int64, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Double, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Single, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Decimal, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]]\u0007���\u0005Item1\u0005Item2\u0005Item3\u0005Item4\u0005Item5\u0005Item6\u0005Item7�\u0001�����\b\u000f\t\u0006\u000b\u0005\u0001���\u0006\u0002���\u00012\u0003���\u0004�������ffffff\u0016@���@\u00019\u000b\r\n      \r\n      --------------- Runtime generated blob ---------------\r\n      Encoded: AAEAAAD/////AQAAAAAAAAAEAQAAAJ4FU3lzdGVtLlZhbHVlVHVwbGVgN1tbU3lzdGVtLkludDMyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uVUludDMyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uSW50NjQsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5Eb3VibGUsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TaW5nbGUsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5EZWNpbWFsLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQcAAAAFSXRlbTEFSXRlbTIFSXRlbTMFSXRlbTQFSXRlbTUFSXRlbTYFSXRlbTcAAQAAAAAACA8JBgsFAQAAAAYCAAAAATIDAAAABAAAAAAAAABmZmZmZmYWQAAAAAABOQs=\r\n      Decoded: �\u0001�������\u0001�������\u0004\u0001����\u0005System.ValueTuple`7[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.String, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.UInt32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Int64, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Double, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Single, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Decimal, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]]\u0007���\u0005Item1\u0005Item2\u0005Item3\u0005Item4\u0005Item5\u0005Item6\u0005Item7�\u0001�����\b\u000f\t\u0006\u000b\u0005\u0001���\u0006\u0002���\u00012\u0003���\u0004�������ffffff\u0016@����\u00019\u000b\r\n      Stack Trace:\r\n        /_/src/libraries/System.Resources.Extensions/tests/BinaryFormatTests/Legacy/BinaryFormatterTests.cs(259,0): at BinaryFormatTests.FormatterTests.BinaryFormatterTests.SanityCheckBlob(Object obj, TypeSerializableValue[] blobs)\r\n        /_/src/libraries/System.Resources.Extensions/tests/BinaryFormatTests/Legacy/BinaryFormatterTests.cs(69,0): at BinaryFormatTests.FormatterTests.BinaryFormatterTests.ValidateAndRoundtrip(Object obj, TypeSerializableValue[] blobs, Boolean isEqualityComparer)\r\n        /_/src/libraries/System.Resources.Extensions/tests/BinaryFormatTests/Legacy/BinaryFormatterTests.cs(24,0): at BinaryFormatTests.FormatterTests.BinaryFormatterTests.ValidateAgainstBlobs(Object obj, TypeSerializableValue[] blobs)\r\n           at System.Object.InvokeStub_BinaryFormatterTests.ValidateAgainstBlobs(Object , Span`1 )\r\n        /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs(136,0): at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n    BinaryFormatTests.FormatterTests.BinaryFormatterTests.ValidateAgainstBlobs(obj: Tuple (1, \"2\", 3, 4, 5.5999999999999996, 0, 9, Tuple (10)), blobs: [BinaryFormatTests.TypeSerializableValue, BinaryFormatTests.TypeSerializableValue]) [FAIL]\r\n      The stored blob with index 0 for type System.ValueTuple`8[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.UInt32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int64, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Single, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Decimal, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.ValueTuple`1[[System.Tuple`1[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] is outdated and needs to be updated.\r\n      \r\n      -------------------- Stored blob ---------------------\r\n      Encoded: AAEAAAD/////AQAAAAAAAAAEAQAAAL0HU3lzdGVtLlZhbHVlVHVwbGVgOFtbU3lzdGVtLkludDMyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uVUludDMyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uSW50NjQsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5Eb3VibGUsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TaW5nbGUsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5EZWNpbWFsLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uVmFsdWVUdXBsZWAxW1tTeXN0ZW0uVHVwbGVgMVtbU3lzdGVtLkludDMyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXSwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0sIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCAAAAAVJdGVtMQVJdGVtMgVJdGVtMwVJdGVtNAVJdGVtNQVJdGVtNgVJdGVtNwRSZXN0AAEAAAAAAAMIDwkGCwXPAVN5c3RlbS5WYWx1ZVR1cGxlYDFbW1N5c3RlbS5UdXBsZWAxW1tTeXN0ZW0uSW50MzIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQEAAAAGAgAAAAEyAwAAAAQAAAAAAAAAZmZmZmZmFkCamflAATkE/f///88BU3lzdGVtLlZhbHVlVHVwbGVgMVtbU3lzdGVtLlR1cGxlYDFbW1N5c3RlbS5JbnQzMiwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0sIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAQAAAAVJdGVtMQNrU3lzdGVtLlR1cGxlYDFbW1N5c3RlbS5JbnQzMiwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0JBAAAAAQEAAAAa1N5c3RlbS5UdXBsZWAxW1tTeXN0ZW0uSW50MzIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAQAAAAdtX0l0ZW0xAAgKAAAACw==\r\n      Decoded: �\u0001�������\u0001�������\u0004\u0001����\u0007System.ValueTuple`8[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.String, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.UInt32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Int64, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Double, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Single, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Decimal, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.ValueTuple`1[[System.Tuple`1[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]]\b���\u0005Item1\u0005Item2\u0005Item3\u0005Item4\u0005Item5\u0005Item6\u0005Item7\u0004Rest�\u0001�����\u0003\b\u000f\t\u0006\u000b\u0005�\u0001System.ValueTuple`1[[System.Tuple`1[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]]\u0001���\u0006\u0002���\u00012\u0003���\u0004�������ffffff\u0016@���@\u00019\u0004�����\u0001System.ValueTuple`1[[System.Tuple`1[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]]\u0001���\u0005Item1\u0003kSystem.Tuple`1[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]]\t\u0004���\u0004\u0004���kSystem.Tuple`1[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]]\u0001���\u0007m_Item1�\b���\u000b\r\n      \r\n      --------------- Runtime generated blob ---------------\r\n      Encoded: AAEAAAD/////AQAAAAAAAAAEAQAAAL0HU3lzdGVtLlZhbHVlVHVwbGVgOFtbU3lzdGVtLkludDMyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uVUludDMyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uSW50NjQsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5Eb3VibGUsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TaW5nbGUsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5EZWNpbWFsLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uVmFsdWVUdXBsZWAxW1tTeXN0ZW0uVHVwbGVgMVtbU3lzdGVtLkludDMyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXSwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0sIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCAAAAAVJdGVtMQVJdGVtMgVJdGVtMwVJdGVtNAVJdGVtNQVJdGVtNgVJdGVtNwRSZXN0AAEAAAAAAAMIDwkGCwXPAVN5c3RlbS5WYWx1ZVR1cGxlYDFbW1N5c3RlbS5UdXBsZWAxW1tTeXN0ZW0uSW50MzIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQEAAAAGAgAAAAEyAwAAAAQAAAAAAAAAZmZmZmZmFkAAAAAAATkE/f///88BU3lzdGVtLlZhbHVlVHVwbGVgMVtbU3lzdGVtLlR1cGxlYDFbW1N5c3RlbS5JbnQzMiwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0sIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAQAAAAVJdGVtMQNrU3lzdGVtLlR1cGxlYDFbW1N5c3RlbS5JbnQzMiwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0JBAAAAAQEAAAAa1N5c3RlbS5UdXBsZWAxW1tTeXN0ZW0uSW50MzIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAQAAAAdtX0l0ZW0xAAgKAAAACw==\r\n      Decoded: �\u0001�������\u0001�������\u0004\u0001����\u0007System.ValueTuple`8[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.String, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.UInt32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Int64, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Double, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Single, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Decimal, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.ValueTuple`1[[System.Tuple`1[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]]\b���\u0005Item1\u0005Item2\u0005Item3\u0005Item4\u0005Item5\u0005Item6\u0005Item7\u0004Rest�\u0001�����\u0003\b\u000f\t\u0006\u000b\u0005�\u0001System.ValueTuple`1[[System.Tuple`1[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]]\u0001���\u0006\u0002���\u00012\u0003���\u0004�������ffffff\u0016@����\u00019\u0004�����\u0001System.ValueTuple`1[[System.Tuple`1[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]]\u0001���\u0005Item1\u0003kSystem.Tuple`1[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]]\t\u0004���\u0004\u0004���kSystem.Tuple`1[[System.Int32, mscorlib, Version=0.0.0.0 Culture=neutral, PublicKeyToken=b77a5c561934e089]]\u0001���\u0007m_Item1�\b���\u000b\r\n      Stack Trace:\r\n        /_/src/libraries/System.Resources.Extensions/tests/BinaryFormatTests/Legacy/BinaryFormatterTests.cs(259,0): at BinaryFormatTests.FormatterTests.BinaryFormatterTests.SanityCheckBlob(Object obj, TypeSerializableValue[] blobs)\r\n        /_/src/libraries/System.Resources.Extensions/tests/BinaryFormatTests/Legacy/BinaryFormatterTests.cs(69,0): at BinaryFormatTests.FormatterTests.BinaryFormatterTests.ValidateAndRoundtrip(Object obj, TypeSerializableValue[] blobs, Boolean isEqualityComparer)\r\n        /_/src/libraries/System.Resources.Extensions/tests/BinaryFormatTests/Legacy/BinaryFormatterTests.cs(24,0): at BinaryFormatTests.FormatterTests.BinaryFormatterTests.ValidateAgainstBlobs(Object obj, TypeSerializableValue[] blobs)\r\n           at System.Object.InvokeStub_BinaryFormatterTests.ValidateAgainstBlobs(Object , Span`1 )\r\n        /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs(136,0): at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n    System.Resources.Extensions.Tests.FormattedObject.BasicObjectTests.DeserializeStoredObjects(value: Tuple (1, \"2\", 3, 4, 5.5999999999999996, 0, 9), serializedData: [BinaryFormatTests.TypeSerializableValue, BinaryFormatTests.TypeSerializableValue]) [FAIL]\r\n      Assert.Equal() Failure: Values differ\r\n      Expected: 0\r\n      Actual:   7.80000019\r\n      Stack Trace:\r\n        /_/src/libraries/System.Resources.Extensions/tests/BinaryFormatTests/Legacy/EqualityExtensions.cs(1090,0): at BinaryFormatTests.FormatterTests.EqualityExtensions.IsEqual(Tuple`7 this, Tuple`7 other, Boolean isSamePlatform)\r\n           at System.Object.InvokeStub_EqualityExtensions.IsEqual(Object , Span`1 )\r\n        /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs(136,0): at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n    System.Resources.Extensions.Tests.FormattedObject.BasicObjectTests.DeserializeStoredObjects(value: Tuple (1, \"2\", 3, 4, 5.5999999999999996, 0, 9, Tuple (10)), serializedData: [BinaryFormatTests.TypeSerializableValue, BinaryFormatTests.TypeSerializableValue]) [FAIL]\r\n      Assert.Equal() Failure: Values differ\r\n      Expected: 0\r\n      Actual:   7.80000019\r\n      Stack Trace:\r\n        /_/src/libraries/System.Resources.Extensions/tests/BinaryFormatTests/Legacy/EqualityExtensions.cs(1109,0): at BinaryFormatTests.FormatterTests.EqualityExtensions.IsEqual(Tuple`8 this, Tuple`8 other, Boolean isSamePlatform)\r\n           at System.Object.InvokeStub_EqualityExtensions.IsEqual(Object , Span`1 )\r\n        /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs(136,0): at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n    System.Resources.Extensions.Tests.FormattedObject.BasicObjectTests.DeserializeStoredObjects(value: Tuple (1, \"2\", 3, 4, 5.5999999999999996, 0, 9), serializedData: [BinaryFormatTests.TypeSerializableValue, BinaryFormatTests.TypeSerializableValue]) [FAIL]\r\n      Assert.True() Failure\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n        /_/src/libraries/System.Resources.Extensions/tests/BinaryFormatTests/Legacy/EqualityExtensions.cs(113,0): at BinaryFormatTests.FormatterTests.EqualityExtensions.CheckEquals(Object objA, Object objB, Boolean isSamePlatform)\r\n        /_/src/libraries/System.Resources.Extensions/tests/BinaryFormatTests/Common/BasicObjectTests.cs(40,0): at System.Resources.Extensions.Tests.Common.BasicObjectTests`1[[System.Resources.Extensions.Tests.FormattedObject.FormattedObjectSerializer, System.Resources.Extensions.BinaryFormat.Tests, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51]].DeserializeStoredObjects(Object value, TypeSerializableValue[] serializedData)\r\n           at System.Object.InvokeStub_BasicObjectTests`1.DeserializeStoredObjects(Object , Span`1 )\r\n        /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs(136,0): at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n    System.Resources.Extensions.Tests.FormattedObject.BasicObjectTests.DeserializeStoredObjects(value: Tuple (1, \"2\", 3, 4, 5.5999999999999996, 0, 9, Tuple (10)), serializedData: [BinaryFormatTests.TypeSerializableValue, BinaryFormatTests.TypeSerializableValue]) [FAIL]\r\n      Assert.True() Failure\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n        /_/src/libraries/System.Resources.Extensions/tests/BinaryFormatTests/Legacy/EqualityExtensions.cs(113,0): at BinaryFormatTests.FormatterTests.EqualityExtensions.CheckEquals(Object objA, Object objB, Boolean isSamePlatform)\r\n        /_/src/libraries/System.Resources.Extensions/tests/BinaryFormatTests/Common/BasicObjectTests.cs(40,0): at System.Resources.Extensions.Tests.Common.BasicObjectTests`1[[System.Resources.Extensions.Tests.FormattedObject.FormattedObjectSerializer, System.Resources.Extensions.BinaryFormat.Tests, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51]].DeserializeStoredObjects(Object value, TypeSerializableValue[] serializedData)\r\n           at System.Object.InvokeStub_BasicObjectTests`1.DeserializeStoredObjects(Object , Span`1 )\r\n        /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs(136,0): at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n  Finished:    System.Resources.Extensions.BinaryFormat.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Resources.Extensions.BinaryFormat.Tests  Total: 3728, Errors: 0, Failed: 8, Skipped: 4, Time: 5.560s\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOi6yLlQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6FGWMs",
                                           "createdAt":  "2024-07-17T11:02:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-resources\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-07-17T11:02:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6FGWow",
                                           "createdAt":  "2024-07-17T11:03:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "@alhad-deshpande another one",
                                           "updatedAt":  "2024-07-17T11:03:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6FcCN9",
                                           "createdAt":  "2024-07-19T09:08:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODqp4-Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "akoeplinger",
                                                                               "createdAt":  "2024-07-19T12:17:13Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "alhad-deshpande",
                                           "body":  "@akoeplinger \r\nYes, this is what we are currently debugging. Once this is resolved we will check other ones like System.Runtime.Intrinsics etc.",
                                           "updatedAt":  "2024-07-19T09:08:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6LrIuV",
                                           "createdAt":  "2024-09-11T11:11:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alhad-deshpande",
                                           "body":  "@akoeplinger \r\nFixed this via #107678.",
                                           "updatedAt":  "2024-09-11T11:11:49Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "System.Resources.Extensions.BinaryFormat.Tests failures for ppc64le",
        "labels":  [
                       "area-System.Resources",
                       "disabled-test",
                       "runtime-mono",
                       "in-pr",
                       "arch-ppc64le"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/115911",
        "createdAt":  "2025-05-22T17:43:14Z",
        "number":  115911,
        "author":  "tmat",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-26T11:03:22Z",
        "body":  "### Description\n\n`ResourceManager` maintains cache of loaded resource strings. In order to support Hot Reload of resource strings the cache needs to be cleared when Hot Reload change is applied.\n\n\n\n\n### Reproduction Steps\n\nResx file is updated during Hot Reload. \n\n### Expected behavior\n\nNew and updated resources are available without restarting.\n\n### Actual behavior\n\nNew resources/updated values are not available to the app until it restarts.\n\n### Regression?\n\nNo\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOresY1w==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6s-f1d",
                                           "createdAt":  "2025-05-22T17:43:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-resources\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-05-22T17:43:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6t6iXR",
                                           "createdAt":  "2025-05-28T23:02:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "@tmat did you already have a fix in mind for this or were you looking for help?  What\u0027s the priority of this scenario?",
                                           "updatedAt":  "2025-05-28T23:02:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6t6xjX",
                                           "createdAt":  "2025-05-28T23:55:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tmat",
                                           "body":  "Help would be appreciated.\n\nThe fix is to hook up [`MetadataUpdateHandler`](https://learn.microsoft.com/en-us/dotnet/api/system.reflection.metadata.metadataupdatehandlerattribute?view=net-9.0) and call [ResourceManager.ReleaseAllResources](https://source.dot.net/#System.Private.CoreLib/src/libraries/System.Private.CoreLib/src/System/Resources/ResourceManager.cs,2dc4af8fcd947d4c) on each existing ResourceManager. When a ResourceManager is created and Hot Reload is enabled in the process it could weakly subscribe to a cleanup event that is then invoked from the update handler.\n\nPriority depends on https://github.com/dotnet/runtime/issues/115910. Need to be prioritized together since both need to be implemented in order for Hot Reload to work. Once these are done more work needs to be done in Roslyn/dotnet-watch/IDE for end to end: see https://github.com/dotnet/roslyn/issues/75133\n\nIn general, we are trying to make significant progress on removing numerous limitations of EnC/Hot Reload. Updating resources is one of the changes that requires restarting app and therefore degrades Hot Reload experience. I\u0027d say it\u0027s P2 when compared to other issues we are currently looking into.\n \n\n\n\n\n",
                                           "updatedAt":  "2025-05-28T23:55:31Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Hot Reload: Clear resource cache on metadata update",
        "labels":  [
                       "enhancement",
                       "area-System.Resources"
                   ]
    }
]
