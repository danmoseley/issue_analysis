[
    {
        "url":  "https://github.com/dotnet/runtime/issues/2383",
        "createdAt":  "2020-01-30T10:21:23Z",
        "number":  2383,
        "author":  "MaximLipnin",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-08-05T16:19:31Z",
        "body":  "This is a tracking issue for multiple failures in System.Reflection.Emit.ILGeneration.Tests on Mono.\r\nThe following tests are disabled in CoreFX.issues.rsp file and will be moved into their respective xUnit tests in https://github.com/dotnet/runtime/pull/2087.\r\n\r\n- System.Reflection.Emit.Tests.CustomAttributeBuilderTests\r\n- System.Reflection.Emit.Tests.SignatureHelperAddArgument.*\r\n- System.Reflection.Emit.Tests.SignatureHelperGetPropertySigHelper.*\r\n- System.Reflection.Emit.Tests.ILGeneratorEmit3.Emit_OpCodes_LocalBuilder_LocalFromDifferentMethod_ThrowsArgumentException\r\n- System.Reflection.Emit.Tests.ILGeneratorDeclareLocal.DeclareLocal_TypeCreated_ThrowsInvalidOperationException\r\n- System.Reflection.Emit.Tests.ILGeneratorDeclareLocal.DeclareLocal_GlobalFunctionsCreated_ThrowsInvalidOperationException\r\n- System.Reflection.Emit.Tests.SignatureHelperGetMethodSigHelper.GetMethodSigHelper_Module_CallingConventions_Type_Length_ReturnsThree\r\n- System.Reflection.Emit.Tests.SignatureHelperGetMethodSigHelper.GetMethodSigHelper_Module_Type_TypeArray\r\n- System.Reflection.Emit.Tests.SignatureHelperGetMethodSigHelper.GetMethodSigHelper_CallingConventions_Type_Length_ReturnsThree\r\n- System.Reflection.Emit.Tests.SignatureHelperGetMethodSigHelper.GetMethodSigHelper_Module_Type_TypeArray_NullObjectInParameterType_ThrowsArgumentNullException\r\n- System.Reflection.Emit.Tests.ILGeneratorEmit2.Emit_OpCodes_LocalBuilder_TooManyLocals_ThrowsInvalidOperationException\r\n- System.Reflection.Emit.Tests.ILGeneratorEmit2.Emit_OpCodes_LocalBuilder_LocalFromDifferentMethod_ThrowsArgumentException\r\n- System.Reflection.Emit.Tests.SetCustomAttributeTests.SetCustomAttribute_NullArgument_ThrowsArgumentNullException\r\n- System.Reflection.Emit.Tests.ILGeneratorEmit4.TestEmitCalliNonBlittable\r\n- System.Reflection.Emit.Tests.SignatureHelperAddArguments.AddArgument_NullObjectInRequiredCustomModifiers_ThrowsArgumentNullException\r\n- System.Reflection.Emit.Tests.SignatureHelperAddArguments.AddArgument_NullObjectInOptionalCustomModifiers_ThrowsArgumentNullException\r\n- System.Reflection.Emit.Tests.SignatureHelperAddArguments.AddArgument_DifferentCountsForCustomModifiers_ThrowsArgumentException\r\n- System.Reflection.Emit.Tests.SignatureHelperAddArguments.AddArguments_SignatureFinished_ThrowsArgumentException\r\n- System.Reflection.Emit.Tests.SignatureHelperAddArguments.AddArguments",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhksG0Q==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1ODY4MDIwMA==",
                                           "createdAt":  "2021-06-10T14:39:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SamMonoRT",
                                           "body":  "Low priority - Moving to Milestone 7.0.0",
                                           "updatedAt":  "2021-06-10T14:39:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Hn8wG",
                                           "createdAt":  "2022-08-01T20:03:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "Low priority - Moving to Milestone 8.0.0",
                                           "updatedAt":  "2022-08-01T20:03:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hUfW0",
                                           "createdAt":  "2023-07-12T15:32:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "Moving to 9.0.0",
                                           "updatedAt":  "2023-07-12T15:32:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hUfYT",
                                           "createdAt":  "2023-07-12T15:32:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODAlHWA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ivanpovazan",
                                                                               "createdAt":  "2023-07-13T10:02:41Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "cc: @ivanpovazan",
                                           "updatedAt":  "2023-07-12T15:32:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6GSwbR",
                                           "createdAt":  "2024-07-26T16:05:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "@buyaa-n Could you verify if these tests are still failing, since you\u0027ve worked on unifying Reflection related infrastructure?",
                                           "updatedAt":  "2024-07-26T16:05:04Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "[mono] Tests failed: System.Reflection.Emit.ILGeneration.Tests",
        "labels":  [
                       "runtime-mono",
                       "area-VM-reflection-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/2389",
        "createdAt":  "2020-01-30T15:26:25Z",
        "number":  2389,
        "author":  "MaximLipnin",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-08-05T16:19:15Z",
        "body":  "This is a tracking issue for multiple failures in System.Reflection.Emit.Tests on Mono.\r\nThe following tests are disabled in CoreFX.issues.rsp file and will be moved into their respective xUnit tests in #2087.  \r\n\r\n- System.Reflection.Emit.Tests.AssemblyTests.DefineDynamicModule (Mono behaves like coreclr but the test doesn\u0027t detect it)\r\n- System.Reflection.Emit.Tests.MethodBuilderEquals.Equals\r\n- System.Reflection.Emit.Tests.ConstructorBuilderToString.ToString_NullRequiredOptionalCustomModifiers\r\n- System.Reflection.Emit.Tests.ConstructorBuilderToString.ToString_NoRequiredOptionalCustomModifiers\r\n- System.Reflection.Emit.Tests.EnumBuilderMethodTests.DefineLiteral\r\n- System.Reflection.Emit.Tests.EnumBuilderMethodTests.DefineLiteral_InvalidLiteralValue_ThrowsArgumentException\r\n- System.Reflection.Emit.Tests.EnumBuilderMethodTests.SetCustomAttribute_ConstructorInfo_ByteArray\r\n- System.Reflection.Emit.Tests.EnumBuilderMethodTests.SetCustomAttribute_CustomAttributeBuilder\r\n- System.Reflection.Emit.Tests.EnumBuilderPropertyTests.Guid_TypeCreated\r\n- System.Reflection.Emit.Tests.FieldBuilderSetConstant.SetConstant_InvalidType_ThrowsArgumentException\r\n- System.Reflection.Emit.Tests.GenericTypeParameterBuilderSetInterfaceConstraints.SetInterfaceConstraints_OneCustomInterface\r\n- System.Reflection.Emit.Tests.GenericTypeParameterBuilderSetInterfaceConstraints.SetInterfaceConstraints_MultipleCustomInterfaces\r\n- System.Reflection.Emit.Tests.MethodBuilderDefineGenericParameters.DefineGenericParameters_SingleTypeParameter_SetImplementationFlagsCalled_ThrowsInvalidOperationException\r\n- System.Reflection.Emit.Tests.MethodBuilderDefineGenericParameters.DefineGenericParameters_TwoTypeParameters_SetImplementationFlagsCalled_ThrowsInvalidOperationException\r\n- System.Reflection.Emit.Tests.MethodBuilderDefineGenericParameters.DefineGenericParameters_SingleTypeParameter_AlreadyDefined_ThrowsInvalidOperationException\r\n- System.Reflection.Emit.Tests.MethodBuilderDefineGenericParameters.DefineGenericParameters_TwoTypeParameters_AlreadyDefined_ThrowsInvalidOperationException\r\n- System.Reflection.Emit.Tests.MethodBuilderGetILGenerator.GetILGenerator_Body_ThrowsInvalidOperationException\r\n- System.Reflection.Emit.Tests.MethodBuilderMakeGenericMethod.TestNotThrowsExceptionOnNull\r\n- System.Reflection.Emit.Tests.MethodBuilderMakeGenericMethod.TestNotThrowsExceptionOnEmptyArray1\r\n- System.Reflection.Emit.Tests.MethodBuilderMakeGenericMethod.TestNotThrowsExceptionOnEmptyArray2\r\n- System.Reflection.Emit.Tests.MethodBuilderReturnParameter.ReturnParameter_NoBody_ThrowsInvalidOperationException\r\n- System.Reflection.Emit.Tests.MethodBuilderSetParameters.SetParameters\r\n- System.Reflection.Emit.Tests.MethodBuilderSetParameters.SetParameters_NullParameter_ThrowsArgumentNullException\r\n- System.Reflection.Emit.Tests.MethodBuilderToString.ToString_AllFieldsSet\r\n- System.Reflection.Emit.Tests.MethodBuilderToString.ToString_NameAndAttributeSet\r\n- System.Reflection.Emit.Tests.MethodBuilderToString.ToString_NameAttributeAndSignatureSetSet\r\n- System.Reflection.Emit.Tests.MethodBuilderToString.ToString_NonGenericMethod\r\n- System.Reflection.Emit.Tests.MethodBuilderToString.ToString_GenericMethod\r\n- System.Reflection.Emit.Tests.ModuleBuilderDefineEnum.DefineEnum\r\n- System.Reflection.Emit.Tests.ModuleBuilderDefineEnum.DefineEnum_DynamicUnderlyingType_Works\r\n- System.Reflection.Emit.Tests.ModuleBuilderDefineEnum.DefineEnum_ByRefUnderlyingType_ThrowsCOMExceptionOnCreation\r\n- System.Reflection.Emit.Tests.ModuleBuilderDefineType.DefineType\r\n- System.Reflection.Emit.Tests.ModuleBuilderGetArrayMethod.GetArrayMethod_ValidArrayValues_VoidReturnType\r\n- System.Reflection.Emit.Tests.ModuleBuilderGetArrayMethod.GetArrayMethod_ValidArrayValues_ValueReturnType\r\n- System.Reflection.Emit.Tests.ModuleBuilderGetArrayMethod.GetArrayMethod_ValidArrayValues_ReferenceReturnType\r\n- System.Reflection.Emit.Tests.ModuleBuilderGetArrayMethod.GetArrayMethod_ValidArrayValues_ValueParameterType\r\n- System.Reflection.Emit.Tests.ModuleBuilderGetArrayMethod.GetArrayMethod_ValidArrayValues_ReferenceParameterType\r\n- System.Reflection.Emit.Tests.ModuleBuilderGetArrayMethod.GetArrayMethod_JaggedArray\r\n- System.Reflection.Emit.Tests.ModuleBuilderGetArrayMethod.GetArrayMethod_MultiDimensionalArray\r\n- System.Reflection.Emit.Tests.ModuleBuilderGetArrayMethod.GetArrayMethod_NullParameters\r\n- System.Reflection.Emit.Tests.ModuleBuilderGetArrayMethod.GetArrayMethod_ArrayClassNotArray_ThrowsArgumentException\r\n- System.Reflection.Emit.Tests.ModuleBuilderGetArrayMethod.GetArrayMethod_InvalidArgument_ThrowsArgumentException\r\n- System.Reflection.Emit.Tests.PropertyBuilderTest2.AddOtherMethod\r\n- System.Reflection.Emit.Tests.PropertyBuilderTest11.SetConstant\r\n- System.Reflection.Emit.Tests.PropertyBuilderTest11.SetConstant_TypeNotConstant_ThrowsArgumentException\r\n- System.Reflection.Emit.Tests.PropertyBuilderTest12.SetCustomAttribute_CustomAttributeBuilder_TypeNotCreated_ThrowsInvalidOperationException\r\n- System.Reflection.Emit.Tests.PropertyBuilderTest12.SetCustomAttribute_ConstructorInfo_ByteArray_TypeAlreadyCreated_ThrowsInvalidOperationException\r\n- System.Reflection.Emit.Tests.PropertyBuilderTest15.TestThrowsExceptionForCreateTypeCalled\r\n- System.Reflection.Emit.Tests.PropertyBuilderTest16.SetValue_ThrowsNotSupportedException\r\n- System.Reflection.Emit.Tests.TypeBuilderAddInterfaceImplementation.AddInterfaceImplementation_TypeNotInterface_ThrowsTypeLoadExceptionOnCreation\r\n- System.Reflection.Emit.Tests.TypeBuilderAddInterfaceImplementation.AddInterfaceImplementation_TypeDoesntImplementInterface_ThrowsTypeLoadExceptionOnCreation\r\n- System.Reflection.Emit.Tests.TypeBuilderAssemblyQualifiedName.AssemblyQualifiedName\r\n- System.Reflection.Emit.Tests.TypeBuilderCreateType.CreateType_BadAttributes\r\n- System.Reflection.Emit.Tests.TypeBuilderCreateTypeInfo.CreateType_InvalidTypeAttributes_Throws\r\n\u0026nbsp;\u0026nbsp;  \r\n// Extra RTSpecialName attribute\r\n- System.Reflection.Emit.Tests.TypeBuilderDefineConstructor.DefineConstructor\r\n- System.Reflection.Emit.Tests.TypeBuilderDefineConstructor.DefineConstructor_NullRequiredAndOptionalCustomModifiers\r\n- System.Reflection.Emit.Tests.TypeBuilderDefineDefaultConstructor.DefineDefaultConstructor\r\n- System.Reflection.Emit.Tests.MethodBuilderDefineTypeInitializer.DefineTypeInitializer\r\n\u0026nbsp;\u0026nbsp;  \r\n\r\n- System.Reflection.Emit.Tests.TypeBuilderDefineMethodTests.DefineMethod\r\n- System.Reflection.Emit.Tests.TypeBuilderDefineFieldTests.DefineField\r\n- System.Reflection.Emit.Tests.TypeBuilderDefineFieldTests.DefineField_InvalidFieldAttributes_ThrowsTypeLoadExceptionOnCreation\r\n- System.Reflection.Emit.Tests.TypeBuilderDefineFieldTests.DefineField_DynamicFieldTypeNotCreated_ThrowsTypeLoadException\r\n- System.Reflection.Emit.Tests.TypeBuilderDefineGenericParameters.DefineGenericParameters_AlreadyDefinedGenericParameters_ThrowsInvalidOperationException\r\n- System.Reflection.Emit.Tests.TypeBuilderDefineEvent.DefineEvent\r\n- System.Reflection.Emit.Tests.TypeBuilderDefineEvent.DefineProperty_InvalidUnicodeChars\r\n- System.Reflection.Emit.Tests.MethodBuilderDefineMethodOverride.DefineMethodOverride_NothingToOverride_ThrowsTypeLoadExceptionOnCreation\r\n- System.Reflection.Emit.Tests.MethodBuilderDefineMethodOverride.DefineMethodOverride_ClassDoesNotImplementOrInheritMethod_ThrowsTypeLoadExceptionOnCreation\r\n- System.Reflection.Emit.Tests.MethodBuilderDefineMethodOverride.DefineMethodOverride_BodyAndDeclarationTheSame_ThrowsTypeLoadExceptionOnCreation\r\n- System.Reflection.Emit.Tests.MethodBuilderDefineMethodOverride.DefineMethodOverride_CalledTwiceWithDifferentBodies_ThrowsTypeLoadExceptionOnCreation\r\n- System.Reflection.Emit.Tests.MethodBuilderDefineMethodOverride.DefineMethodOverride_BodyAndDeclarationHaveDifferentSignatures_ThrowsTypeLoadExceptionOnCreation\r\n- System.Reflection.Emit.Tests.TypeBuilderDefineNestedType.DefineNestedType\r\n- System.Reflection.Emit.Tests.TypeBuilderDefineNestedType.DefineNestedType_LongName_ThrowsArgumentException\r\n- System.Reflection.Emit.Tests.TypeBuilderDefineNestedType.DefineNestedType_InvalidAttributes_ThrowsArgumentException\r\n- System.Reflection.Emit.Tests.TypeBuilderDefineNestedType.DefineNestedType_InvalidParent_ThrowsArgumentException\r\n- System.Reflection.Emit.Tests.TypeBuilderDefineNestedType.DefineNestedType_InvalidInterfaceType_ThrowsTypeLoadExceptionOnCreation\r\n- System.Reflection.Emit.Tests.TypeBuilderDefineProperty.DefineProperty\r\n- System.Reflection.Emit.Tests.TypeBuilderDefineProperty.DefineProperty_OpenGenericReturnType_ThrowsBadImageFormatExceptionGettingCreatedPropertyType\r\n- System.Reflection.Emit.Tests.TypeBuilderDefineProperty.DefineProperty_NullParameterType_ThrowsArgumentNullException\r\n- System.Reflection.Emit.Tests.TypeBuilderDefineProperty.DefineProperty_OpenGenericParameterType_ThrowsBadImageFormatExceptionGettingCreatedPropertyType\r\n- System.Reflection.Emit.Tests.TypeBuilderDefineProperty.DefineProperty_DynamicPropertyTypeNotCreated_ThrowsTypeLoadException\r\n- System.Reflection.Emit.Tests.TypeBuilderDefineProperty.DefineProperty_DynamicParameterTypeNotCreated_ThrowsTypeLoadException\r\n- System.Reflection.Emit.Tests.TypeBuilderDefineProperty.DefineProperty_CalledMultipleTimes_Works\r\n- System.Reflection.Emit.Tests.TypeBuilderGetConstructor.GetConstructor_TypeNotTypeBuilder_ThrowsArgumentException\r\n- System.Reflection.Emit.Tests.TypeBuilderGetConstructor.GetConstructor_DeclaringTypeOfConstructorNotGenericTypeDefinitionOfType_ThrowsArgumentException\r\n- System.Reflection.Emit.Tests.TypeBuilderGetConstructor.GetConstructor_TypeNotGeneric_ThrowsArgumentException\r\n- System.Reflection.Emit.Tests.TypeBuilderGetField.GetField_TypeNotTypeBuilder_ThrowsArgumentException\r\n- System.Reflection.Emit.Tests.TypeBuilderGetField.GetField_DeclaringTypeOfFieldNotGenericTypeDefinitionOfType_ThrowsArgumentException\r\n- System.Reflection.Emit.Tests.TypeBuilderGetField.GetField_TypeNotGeneric_ThrowsArgumentException\r\n- System.Reflection.Emit.Tests.TypeBuilderGetMethod.GetMethod_TypeNotTypeBuilder_ThrowsArgumentException\r\n- System.Reflection.Emit.Tests.TypeBuilderGetMethod.GetMethod_MethodDefinitionNotInTypeGenericDefinition_ThrowsArgumentException\r\n- System.Reflection.Emit.Tests.TypeBuilderGetMethod.GetMethod_MethodNotGenericTypeDefinition_ThrowsArgumentException\r\n- System.Reflection.Emit.Tests.TypeBuilderGetMethod.GetMethod_TypeIsNotGeneric_ThrowsArgumentException\r\n- System.Reflection.Emit.Tests.TypeBuilderGUID.Guid_TypeCreated_NotEmpty\r\n\r\n- System.Reflection.Emit.Tests.AssemblyTests.DefineDynamicAssembly_AssemblyName_AssemblyBuilderAccess\r\n- System.Reflection.Emit.Tests.AssemblyTests.DefineDynamicAssembly_AssemblyName_AssemblyBuilderAccess_CustomAttributeBuilder\r\n\r\n// need to reflect https://github.com/dotnet/coreclr/pull/24937 changes\r\n- System.Reflection.Emit.Tests.MethodBuilderSetSignature.SetSignature_AllParametersNull\r\n- System.Reflection.Emit.Tests.MethodBuilderSetReturnType.SetReturnType_NullReturnType_ReturnsVoid\r\n- System.Reflection.Emit.Tests.MethodBuilderGetGenericArguments.GetGenericArguments_NonGenericMethod_ReturnsEmptyArray\r\n- System.Reflection.Emit.Tests.MethodBuilderSetSignature.SetSignature_NullReturnType_CustomModifiersSetToWrongTypes",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhojOIw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU4MDM2NDQxNA==",
                                           "createdAt":  "2020-01-30T17:27:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "maryamariyan",
                                           "body":  "cc: @marek-safar ",
                                           "updatedAt":  "2020-01-30T17:27:19Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1ODY4MDYxOQ==",
                                           "createdAt":  "2021-06-10T14:39:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SamMonoRT",
                                           "body":  "Low priority - Moving to Milestone 7.0.0",
                                           "updatedAt":  "2021-06-10T14:39:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Hn836",
                                           "createdAt":  "2022-08-01T20:04:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "Low priority - Moving to Milestone 8.0.0",
                                           "updatedAt":  "2022-08-01T20:04:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hUfF0",
                                           "createdAt":  "2023-07-12T15:31:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "Moving to 9.0.0",
                                           "updatedAt":  "2023-07-12T15:31:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hUfHP",
                                           "createdAt":  "2023-07-12T15:31:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODAlHTA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ivanpovazan",
                                                                               "createdAt":  "2023-07-13T10:02:30Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "cc: @ivanpovazan",
                                           "updatedAt":  "2023-07-12T15:31:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6GSwUd",
                                           "createdAt":  "2024-07-26T16:04:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "@buyaa-n Could you verify if these tests are still failing, since you\u0027ve worked on unifying Reflection related infrastructure?",
                                           "updatedAt":  "2024-07-26T16:04:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6GiM4j",
                                           "createdAt":  "2024-07-29T22:24:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "buyaa-n",
                                           "body":  "\u003e @buyaa-n Could you verify if these tests are still failing, since you\u0027ve worked on unifying Reflection related infrastructure?\r\n\r\nWell, it was not exactly about `unifying Reflection related infrastructure`, overall not much unified.\r\nI found very few passes locally, will see if the [pass on CI](https://github.com/dotnet/runtime/pull/105662)\r\n\r\n",
                                           "updatedAt":  "2024-07-29T22:24:51Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "[mono] Tests failed: System.Reflection.Emit.Tests",
        "labels":  [
                       "runtime-mono",
                       "area-VM-reflection-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/31804",
        "createdAt":  "2020-02-05T15:06:59Z",
        "number":  31804,
        "author":  "MaximLipnin",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-08-05T17:02:34Z",
        "body":  "`System.Runtime.Loader.Tests.RefEmitLoadContextTests.LoadRefEmitAssembly` fails on mono. This test is disabled in CoreFX.issues.rsp file, but it will be moved into its respective xUnit test with `ActiveIssue` in #2087.\r\n\r\n```\r\nSystem.Runtime.Loader.Tests.RefEmitLoadContextTests.LoadRefEmitAssembly [FAIL]\r\n    Assert.Equal() Failure\r\n    Expected: \"\" System.Runtime.Loader.Tests.RefEmitLoadContext #3\r\n    Actual:   (null)\r\n    Stack Trace:\r\n        at System.Runtime.Loader.Tests.RefEmitLoadContextTests.LoadRefEmitAssemblyInLoadContext(AssemblyLoadContext loadContext, AssemblyBuilderAccess builderType)\r\n        at System.Runtime.Loader.Tests.RefEmitLoadContextTests.LoadRefEmitAssembly()\r\n        at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhsKGnQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5hUe3w",
                                           "createdAt":  "2023-07-12T15:31:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "Moving to 9.0.0",
                                           "updatedAt":  "2023-07-12T15:31:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hUe5d",
                                           "createdAt":  "2023-07-12T15:31:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODAlHOA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ivanpovazan",
                                                                               "createdAt":  "2023-07-13T10:02:15Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "cc: @ivanpovazan",
                                           "updatedAt":  "2023-07-12T15:31:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6GSwPe",
                                           "createdAt":  "2024-07-26T16:04:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "@buyaa-n Could you verify if these tests are still failing, since you\u0027ve worked on unifying Reflection related infrastructure?",
                                           "updatedAt":  "2024-07-26T16:04:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6GiNF5",
                                           "createdAt":  "2024-07-29T22:25:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "buyaa-n",
                                           "body":  "Only [one of the 3 tests](https://github.com/search?q=repo%3Adotnet%2Fruntime+https%3A%2F%2Fgithub.com%2Fdotnet%2Fruntime%2Fissues%2F31804\u0026type=code) no passing locally ",
                                           "updatedAt":  "2024-07-29T22:25:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Gwoad",
                                           "createdAt":  "2024-07-31T16:18:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "@buyaa-n confirmed that all of these are still failing on CI.",
                                           "updatedAt":  "2024-07-31T16:18:29Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "[mono] Tests failed: System.Runtime.Loader.Tests.RefEmitLoadContextTests.LoadRefEmitAssembly",
        "labels":  [
                       "runtime-mono",
                       "area-VM-reflection-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/31857",
        "createdAt":  "2020-02-06T14:01:05Z",
        "number":  31857,
        "author":  "MaximLipnin",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-29T10:04:08Z",
        "body":  "Because `System.Reflection.Emit.DynamicILInfo.SetLocalSignature(Byte[] localSignature)` is not yet implemented on mono, some related tests fail with `System.NotImplementedException : The method or operation is not implemented.`\r\n\r\nThose below are disabled in CoreFX.issues.rsp file, but they will be moved into their respective xUnit tests with ActiveIssue in #2087.\r\n\r\n```\r\n- System.Reflection.Emit.Tests.DynamicILInfoTests.Test_TwoDimTest\r\n- System.Reflection.Emit.Tests.DynamicILInfoTests.Test_GenericMethod\r\n- System.Reflection.Emit.Tests.DynamicILInfoTests.GetTokenFor_CtorMethodAndField_Success\r\n- System.Reflection.Emit.Tests.DynamicILInfoTests.GetTokenFor_String_Success\r\n- System.Reflection.Emit.Tests.DynamicILInfoTests.GetTokenFor_StringGenerics_Success\r\n- System.Reflection.Emit.Tests.DynamicILInfoTests.Test_CallGM\r\n- System.Reflection.Emit.Tests.DynamicILInfoTests.GetTokenFor_Exception_Success\r\n- System.Reflection.Emit.Tests.DynamicILInfoTests.GetTokenFor_DynamicMethod_Success\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhnBzZw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU4MzYwNjI4OA==",
                                           "createdAt":  "2020-02-07T20:53:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "/cc @alexischr ",
                                           "updatedAt":  "2020-02-07T20:53:03Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxMjIwNTg4OQ==",
                                           "createdAt":  "2020-04-10T20:36:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "@MaximLipnin for failures like this can you please include a callstack or line number so we can see which method is throwing this? Eg., it might be in corelib rather than ref.emit itself.",
                                           "updatedAt":  "2020-04-10T20:36:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxMjgxNDk4Mw==",
                                           "createdAt":  "2020-04-13T08:54:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MaximLipnin",
                                           "body":  "```\r\nSystem.Reflection.Emit.Tests.DynamicILInfoTests.Test_TwoDimTest [FAIL]\r\nSystem.NotImplementedException : The method or operation is not implemented.\r\nStack Trace:\r\n    _\\src\\libraries\\System.Reflection.Emit.Lightweight\\tests\\DynamicILInfoTests.cs(527,0): at System.Reflection.Emit.Tests.DynamicILInfoTests.Test_TwoDimTest()\r\n    _\\src\\mono\\netcore\\System.Private.CoreLib\\src\\System\\Reflection\\RuntimeMethodInfo.cs(359,0): at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\nSystem.Reflection.Emit.Tests.DynamicILInfoTests.Test_GenericMethod [FAIL]\r\nSystem.NotImplementedException : The method or operation is not implemented.\r\nStack Trace:\r\n    _\\src\\libraries\\System.Reflection.Emit.Lightweight\\tests\\DynamicILInfoTests.cs(445,0): at System.Reflection.Emit.Tests.DynamicILInfoTests.Test_GenericMethod()\r\n    _\\src\\mono\\netcore\\System.Private.CoreLib\\src\\System\\Reflection\\RuntimeMethodInfo.cs(359,0): at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\nSystem.Reflection.Emit.Tests.DynamicILInfoTests.GetTokenFor_CtorMethodAndField_Success [FAIL]\r\nSystem.NotImplementedException : The method or operation is not implemented.\r\nStack Trace:\r\n    _\\src\\libraries\\System.Reflection.Emit.Lightweight\\tests\\DynamicILInfoTests.cs(131,0): at System.Reflection.Emit.Tests.DynamicILInfoTests.GetTokenFor_CtorMethodAndField_Success()\r\n    _\\src\\mono\\netcore\\System.Private.CoreLib\\src\\System\\Reflection\\RuntimeMethodInfo.cs(359,0): at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\nSystem.Reflection.Emit.Tests.DynamicILInfoTests.GetTokenFor_String_Success [FAIL]\r\nSystem.NotImplementedException : The method or operation is not implemented.\r\nStack Trace:\r\n    _\\src\\libraries\\System.Reflection.Emit.Lightweight\\tests\\DynamicILInfoTests.cs(24,0): at System.Reflection.Emit.Tests.DynamicILInfoTests.GetTokenFor_String_Success()\r\n    _\\src\\mono\\netcore\\System.Private.CoreLib\\src\\System\\Reflection\\RuntimeMethodInfo.cs(359,0): at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\nSystem.NotImplementedException : The method or operation is not implemented.\r\nStack Trace:\r\nSystem.Reflection.Emit.Tests.DynamicILInfoTests.GetTokenFor_StringGenerics_Success [FAIL]\r\n    _\\src\\libraries\\System.Reflection.Emit.Lightweight\\tests\\DynamicILInfoTests.cs(267,0): at System.Reflection.Emit.Tests.DynamicILInfoTests.GetTokenFor_StringGenerics_Success()\r\n    _\\src\\mono\\netcore\\System.Private.CoreLib\\src\\System\\Reflection\\RuntimeMethodInfo.cs(359,0): at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\nSystem.Reflection.Emit.Tests.DynamicILInfoTests.Test_CallGM [FAIL]\r\nSystem.NotImplementedException : The method or operation is not implemented.\r\nStack Trace:\r\n    _\\src\\libraries\\System.Reflection.Emit.Lightweight\\tests\\DynamicILInfoTests.cs(599,0): at System.Reflection.Emit.Tests.DynamicILInfoTests.Test_CallGM()\r\n    _\\src\\mono\\netcore\\System.Private.CoreLib\\src\\System\\Reflection\\RuntimeMethodInfo.cs(359,0): at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\nSystem.Reflection.Emit.Tests.DynamicILInfoTests.GetTokenFor_Exception_Success [FAIL]\r\nSystem.NotImplementedException : The method or operation is not implemented.\r\nStack Trace:\r\n    _\\src\\libraries\\System.Reflection.Emit.Lightweight\\tests\\DynamicILInfoTests.cs(362,0): at System.Reflection.Emit.Tests.DynamicILInfoTests.GetTokenFor_Exception_Success()\r\n    _\\src\\mono\\netcore\\System.Private.CoreLib\\src\\System\\Reflection\\RuntimeMethodInfo.cs(359,0): at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\nSystem.Reflection.Emit.Tests.DynamicILInfoTests.GetTokenFor_DynamicMethod_Success [FAIL]\r\nSystem.NotImplementedException : The method or operation is not implemented.\r\nStack Trace:\r\n    _\\src\\libraries\\System.Reflection.Emit.Lightweight\\tests\\DynamicILInfoTests.cs(57,0): at System.Reflection.Emit.Tests.DynamicILInfoTests.GetTokenFor_DynamicMethod_Success()\r\n    _\\src\\mono\\netcore\\System.Private.CoreLib\\src\\System\\Reflection\\RuntimeMethodInfo.cs(359,0): at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n```",
                                           "updatedAt":  "2020-04-13T08:54:55Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxMjgxNTg4Nw==",
                                           "createdAt":  "2020-04-13T08:57:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MaximLipnin",
                                           "body":  "https://github.com/dotnet/runtime/blob/5cd7e970487c4cc9ae652185a2f867159c48c9a0/src/mono/netcore/System.Private.CoreLib/src/System/Reflection/Emit/DynamicILInfo.cs#L132-L136",
                                           "updatedAt":  "2020-04-13T08:57:23Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4NTgzMTMyNw==",
                                           "createdAt":  "2020-09-02T15:57:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveharter",
                                           "body":  "Moving from area-System.Reflection.Emit to area-Interop-mono (there is no area-Reflection-mono area).",
                                           "updatedAt":  "2020-09-02T15:57:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NDQ2NDY1NA==",
                                           "createdAt":  "2021-01-21T08:19:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ionoy",
                                           "body":  "LiveSharp uses this API to compile IL instructions into `DynamicMethod` on .NET Core. I could use `IlGenerator`, but unfortunately, it\u0027s too high-level. Mono is used on Xamarin and Blazor WASM - both major platforms for LiveSharp users.\r\n\r\nBy the way, is there another way of doing this until the API gets implemented? Maybe via reflection somehow?\r\n\r\nThanks!\r\n\r\n",
                                           "updatedAt":  "2021-01-21T08:19:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5C60Dg",
                                           "createdAt":  "2022-05-10T18:11:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SamMonoRT",
                                           "body":  "@lambdageek - we have been postponing this, is it worth revisiting?",
                                           "updatedAt":  "2022-05-10T18:11:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6GcHNn",
                                           "createdAt":  "2024-07-29T10:04:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivanpovazan",
                                           "body":  "@steveisok I won\u0027t have capacity to look into this in .NET9. \r\n\r\nThese tests are disabled for a while, maybe it is worth considering closing the issue as not planned. ",
                                           "updatedAt":  "2024-07-29T10:04:03Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "[mono] Not implemented: System.Reflection.Emit.DynamicILInfo.SetLocalSignature(Byte[] localSignature)",
        "labels":  [
                       "disabled-test",
                       "runtime-mono",
                       "area-VM-reflection-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/36113",
        "createdAt":  "2020-05-08T14:24:49Z",
        "number":  36113,
        "author":  "SamMonoRT",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-08-05T17:02:13Z",
        "body":  "Several failures seen when running the reflection/* tests. These are CoreCLR tests run on the mono runtime from the dotnet\\runtime repo. It is quite possible, these may need to split in separate issues based on individual issues/missing implementations etc.\r\n\r\nRepro :\r\nCommand to run individual tests :\r\n```\r\ncd src/mono/netcore\r\nmake run-tests-coreclr CoreClrTest=\"bash ../../artifacts/tests/coreclr/OSX.x64.Debug/reflection/DefaultInterfaceMethods/InvokeConsumer/InvokeConsumer.sh\"\r\n```\r\n\r\n1. reflection/DefaultInterfaceMethods/InvokeConsumer/InvokeConsumer.sh\r\n2. reflection/DefaultInterfaceMethods/Emit/Emit.sh\r\n3. reflection/Modifiers/modifiers/modifiers.sh\r\n4. reflection/SetValue/TrySetReadonlyStaticField/TrySetReadonlyStaticField.sh\r\n\r\n\r\nIndividual failure stacks below :\r\n\r\n*********************************        reflection/DefaultInterfaceMethods/InvokeConsumer/InvokeConsumer.sh [FAIL]\r\n          \r\n          Return code:      1\r\n          Raw output file:      /Users/samarthpatel/Documents/DotNetRunTime/runtime/artifacts/tests/coreclr/OSX.x64.Debug/reflection/DefaultInterfaceMethods/Reports/reflection.DefaultInterfaceMethods/InvokeConsumer/InvokeConsumer.output.txt\r\n          Raw output:\r\n          BEGIN EXECUTION\r\n          /Users/samarthpatel/Documents/DotNetRunTime/runtime/artifacts/tests/coreclr/OSX.x64.Debug/Tests/Core_Root/corerun InvokeConsumer.dll \u0027\u0027\r\n          Expected: 100\r\n          Actual: 11\r\n          END EXECUTION - FAILED\r\n          Test Harness Exitcode is : 1\r\n          To run the test:\r\n          \u003e set CORE_ROOT=/Users/samarthpatel/Documents/DotNetRunTime/runtime/artifacts/tests/coreclr/OSX.x64.Debug/Tests/Core_Root\r\n          \u003e /Users/samarthpatel/Documents/DotNetRunTime/runtime/artifacts/tests/coreclr/OSX.x64.Debug/reflection/DefaultInterfaceMethods/InvokeConsumer/InvokeConsumer.sh\r\n          Expected: True\r\n          Actual:   False\r\n          Stack Trace:\r\n            /Users/samarthpatel/Documents/DotNetRunTime/runtime/artifacts/tests/coreclr/OSX.x64.Debug/TestWrappers/reflection.DefaultInterfaceMethods/reflection.DefaultInterfaceMethods.XUnitWrapper.cs(334,0): at reflection_DefaultInterfaceMethods._InvokeConsumer_InvokeConsumer_._InvokeConsumer_InvokeConsumer_sh()\r\n            /Users/samarthpatel/Documents/DotNetRunTime/runtime/src/mono/netcore/System.Private.CoreLib/src/System/Reflection/RuntimeMethodInfo.cs(339,0): at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n          \r\n\r\n\r\n\r\n\r\n*********************************        reflection/DefaultInterfaceMethods/Emit/Emit.sh [FAIL]\r\n          \r\n          Unhandled Exception:\r\n          System.ArgumentException: Interface method must be abstract and virtual.\r\n             at System.Reflection.Emit.TypeBuilder.DefineMethod(String name, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] returnTypeRequiredCustomModifiers, Type[] returnTypeOptionalCustomModifiers, Type[] parameterTypes, Type[][] parameterTypeRequiredCustomModifiers, Type[][] parameterTypeOptionalCustomModifiers) in /Users/samarthpatel/Documents/DotNetRunTime/runtime/src/mono/netcore/System.Private.CoreLib/src/System/Reflection/Emit/TypeBuilder.Mono.cs:line 531\r\n             at System.Reflection.Emit.TypeBuilder.DefineMethod(String name, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] parameterTypes) in /Users/samarthpatel/Documents/DotNetRunTime/runtime/src/mono/netcore/System.Private.CoreLib/src/System/Reflection/Emit/TypeBuilder.Mono.cs:line 508\r\n             at System.Reflection.Emit.TypeBuilder.DefineMethod(String name, MethodAttributes attributes, Type returnType, Type[] parameterTypes) in /Users/samarthpatel/Documents/DotNetRunTime/runtime/src/mono/netcore/System.Private.CoreLib/src/System/Reflection/Emit/TypeBuilder.Mono.cs:line 502\r\n             at Program.Main() in /Users/samarthpatel/Documents/DotNetRunTime/runtime/src/coreclr/tests/src/reflection/DefaultInterfaceMethods/Emit.cs:line 25\r\n          [ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentException: Interface method must be abstract and virtual.\r\n             at System.Reflection.Emit.TypeBuilder.DefineMethod(String name, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] returnTypeRequiredCustomModifiers, Type[] returnTypeOptionalCustomModifiers, Type[] parameterTypes, Type[][] parameterTypeRequiredCustomModifiers, Type[][] parameterTypeOptionalCustomModifiers) in /Users/samarthpatel/Documents/DotNetRunTime/runtime/src/mono/netcore/System.Private.CoreLib/src/System/Reflection/Emit/TypeBuilder.Mono.cs:line 531\r\n             at System.Reflection.Emit.TypeBuilder.DefineMethod(String name, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] parameterTypes) in /Users/samarthpatel/Documents/DotNetRunTime/runtime/src/mono/netcore/System.Private.CoreLib/src/System/Reflection/Emit/TypeBuilder.Mono.cs:line 508\r\n             at System.Reflection.Emit.TypeBuilder.DefineMethod(String name, MethodAttributes attributes, Type returnType, Type[] parameterTypes) in /Users/samarthpatel/Documents/DotNetRunTime/runtime/src/mono/netcore/System.Private.CoreLib/src/System/Reflection/Emit/TypeBuilder.Mono.cs:line 502\r\n             at Program.Main() in /Users/samarthpatel/Documents/DotNetRunTime/runtime/src/coreclr/tests/src/reflection/DefaultInterfaceMethods/Emit.cs:line 25\r\n          \r\n          Return code:      1\r\n          Raw output file:      /Users/samarthpatel/Documents/DotNetRunTime/runtime/artifacts/tests/coreclr/OSX.x64.Debug/reflection/DefaultInterfaceMethods/Reports/reflection.DefaultInterfaceMethods/Emit/Emit.output.txt\r\n          Raw output:\r\n          BEGIN EXECUTION\r\n          /Users/samarthpatel/Documents/DotNetRunTime/runtime/artifacts/tests/coreclr/OSX.x64.Debug/Tests/Core_Root/corerun Emit.dll \u0027\u0027\r\n          Expected: 100\r\n          Actual: 1\r\n          END EXECUTION - FAILED\r\n          Test Harness Exitcode is : 1\r\n          To run the test:\r\n          \u003e set CORE_ROOT=/Users/samarthpatel/Documents/DotNetRunTime/runtime/artifacts/tests/coreclr/OSX.x64.Debug/Tests/Core_Root\r\n          \u003e /Users/samarthpatel/Documents/DotNetRunTime/runtime/artifacts/tests/coreclr/OSX.x64.Debug/reflection/DefaultInterfaceMethods/Emit/Emit.sh\r\n          Expected: True\r\n          Actual:   False\r\n          Stack Trace:\r\n            /Users/samarthpatel/Documents/DotNetRunTime/runtime/artifacts/tests/coreclr/OSX.x64.Debug/TestWrappers/reflection.DefaultInterfaceMethods/reflection.DefaultInterfaceMethods.XUnitWrapper.cs(140,0): at reflection_DefaultInterfaceMethods._Emit_Emit_._Emit_Emit_sh()\r\n            /Users/samarthpatel/Documents/DotNetRunTime/runtime/src/mono/netcore/System.Private.CoreLib/src/System/Reflection/RuntimeMethodInfo.cs(339,0): at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n          \r\n\r\n*********************************        reflection/Modifiers/modifiers/modifiers.sh [FAIL]\r\n          \r\n          Return code:      1\r\n          Raw output file:      /Users/samarthpatel/Documents/DotNetRunTime/runtime/artifacts/tests/coreclr/OSX.x64.Debug/reflection/Modifiers/Reports/reflection.Modifiers/modifiers/modifiers.output.txt\r\n          Raw output:\r\n          BEGIN EXECUTION\r\n          /Users/samarthpatel/Documents/DotNetRunTime/runtime/artifacts/tests/coreclr/OSX.x64.Debug/Tests/Core_Root/corerun modifiers.dll \u0027\u0027\r\n          In int32 BaseClass::Override(int32)\r\n          In int32 DerivedClass::Override(int32)\r\n          In int32 SuperDerivedClass::Override(int32)\r\n          In int32 BaseClass::Override(int32 modopt (FooModifier))\r\n          In int32 BaseClass::Override(int32 modopt (BarModifier))\r\n          In int32 BaseClass::Override(int32 modreq (FooModifier))\r\n          In int32 BaseClass::Override(int32)\r\n          In int32 modopt (FooModifier) BaseClass::Override(int32)\r\n          In int32 DerivedClass::Override(int32 modopt (FooModifier))\r\n          In int32 DerivedClass::Override(int32 modopt (BarModifier))\r\n          In int32 DerivedClass::Override(int32 modreq (FooModifier))\r\n          In int32 DerivedClass::Override(int32)\r\n          In int32 modopt (FooModifier) DerivedClass::Override(int32)\r\n          In int32 BaseClass::Override(int32 modopt (FooModifier)[])\r\n          In int32 DerivedClass::Override(int32 modopt (FooModifier)[])\r\n          In int32 BaseClass::Override(int32 modopt (BarModifier)[])\r\n          In int32 BaseClass::Override(int32 modopt (BarModifier)[])\r\n          Expected: 100\r\n          Actual: 46\r\n          END EXECUTION - FAILED\r\n          Test Harness Exitcode is : 1\r\n          To run the test:\r\n          \u003e set CORE_ROOT=/Users/samarthpatel/Documents/DotNetRunTime/runtime/artifacts/tests/coreclr/OSX.x64.Debug/Tests/Core_Root\r\n          \u003e /Users/samarthpatel/Documents/DotNetRunTime/runtime/artifacts/tests/coreclr/OSX.x64.Debug/reflection/Modifiers/modifiers/modifiers.sh\r\n          Expected: True\r\n          Actual:   False\r\n          Stack Trace:\r\n            /Users/samarthpatel/Documents/DotNetRunTime/runtime/artifacts/tests/coreclr/OSX.x64.Debug/TestWrappers/reflection.Modifiers/reflection.Modifiers.XUnitWrapper.cs(140,0): at reflection_Modifiers._modifiers_modifiers_._modifiers_modifiers_sh()\r\n            /Users/samarthpatel/Documents/DotNetRunTime/runtime/src/mono/netcore/System.Private.CoreLib/src/System/Reflection/RuntimeMethodInfo.cs(339,0): at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n          \r\n\r\n\r\n\r\n\r\n\r\n************************************        reflection/SetValue/TrySetReadonlyStaticField/TrySetReadonlyStaticField.sh [FAIL]\r\n          \r\n          Return code:      1\r\n          Raw output file:      /Users/samarthpatel/Documents/DotNetRunTime/runtime/artifacts/tests/coreclr/OSX.x64.Debug/reflection/SetValue/Reports/reflection.SetValue/TrySetReadonlyStaticField/TrySetReadonlyStaticField.output.txt\r\n          Raw output:\r\n          BEGIN EXECUTION\r\n          /Users/samarthpatel/Documents/DotNetRunTime/runtime/artifacts/tests/coreclr/OSX.x64.Debug/Tests/Core_Root/corerun TrySetReadonlyStaticField.dll \u0027\u0027\r\n          Begin initializing class X\r\n          Attempting to update S via SetValue, current value is \u00270\u0027, desired new value is \u00271\u0027\r\n          Updated S to \u00271\u0027\r\n          Attempting to update S via SetValueDirect, current value is \u00271\u0027, desired new value is \u00272\u0027\r\n          Updated S to \u00272\u0027\r\n          Done initializing class X\r\n          Attempting to update S via SetValue, current value is \u00272\u0027, desired new value is \u00273\u0027\r\n          Updated S to \u00273\u0027\r\n          Attempting to update S via SetValueDirect, current value is \u00273\u0027, desired new value is \u00274\u0027\r\n          Updated S to \u00274\u0027\r\n          SetValue after class init didn\u0027t throw as expected\r\n          SetValueDirect after class init didn\u0027t throw as expected\r\n          S is \u00274\u0027 , should be \u00272\u0027\r\n          FAIL\r\n          Expected: 100\r\n          Actual: 255\r\n          END EXECUTION - FAILED\r\n          Test Harness Exitcode is : 1\r\n          To run the test:\r\n          \u003e set CORE_ROOT=/Users/samarthpatel/Documents/DotNetRunTime/runtime/artifacts/tests/coreclr/OSX.x64.Debug/Tests/Core_Root\r\n          \u003e /Users/samarthpatel/Documents/DotNetRunTime/runtime/artifacts/tests/coreclr/OSX.x64.Debug/reflection/SetValue/TrySetReadonlyStaticField/TrySetReadonlyStaticField.sh\r\n          Expected: True\r\n          Actual:   False\r\n          Stack Trace:\r\n            /Users/samarthpatel/Documents/DotNetRunTime/runtime/artifacts/tests/coreclr/OSX.x64.Debug/TestWrappers/reflection.SetValue/reflection.SetValue.XUnitWrapper.cs(140,0): at reflection_SetValue._TrySetReadonlyStaticField_TrySetReadonlyStaticField_._TrySetReadonlyStaticField_TrySetReadonlyStaticField_sh()\r\n            /Users/samarthpatel/Documents/DotNetRunTime/runtime/src/mono/netcore/System.Private.CoreLib/src/System/Reflection/RuntimeMethodInfo.cs(339,0): at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhojpJA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5Hn9Ax",
                                           "createdAt":  "2022-08-01T20:04:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "Low priority - Moving to Milestone 8.0.0",
                                           "updatedAt":  "2022-08-01T20:04:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JD1P4",
                                           "createdAt":  "2022-08-24T13:39:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "A little bit of triage after I tried enabling them in a PR:\r\n\r\n`reflection/DefaultInterfaceMethods/Emit` fails everywhere.  This looks like potentially we just need to remove a check somewhere in SRE. Might be easy.\r\n\r\n```\r\nreflection/DefaultInterfaceMethods/Emit/Emit.sh [FAIL]\r\n      Error: Interface method must be abstract and virtual.\r\n          at $o (/datadisks/disk1/work/AB64091E/w/BE3F0A44/e/reflection/DefaultInterfaceMethods/Emit/WasmApp/dotnet.js:5:37754)\r\n          at Ws (/datadisks/disk1/work/AB64091E/w/BE3F0A44/e/reflection/DefaultInterfaceMethods/Emit/WasmApp/dotnet.js:5:55546)\r\n          at Object.b.javaScriptExports.call_entry_point (/datadisks/disk1/work/AB64091E/w/BE3F0A44/e/reflection/DefaultInterfaceMethods/Emit/WasmApp/dotnet.js:5:58159)\r\n          at Object.Te [as runMain] (/datadisks/disk1/work/AB64091E/w/BE3F0A44/e/reflection/DefaultInterfaceMethods/Emit/WasmApp/dotnet.js:5:2713)\r\n          at run (test-main.js:330:50)\r\n      Error: Interface method must be abstract and virtual.\r\n          at $o (/datadisks/disk1/work/AB64091E/w/BE3F0A44/e/reflection/DefaultInterfaceMethods/Emit/WasmApp/dotnet.js:5:37754)\r\n          at Ws (/datadisks/disk1/work/AB64091E/w/BE3F0A44/e/reflection/DefaultInterfaceMethods/Emit/WasmApp/dotnet.js:5:55546)\r\n          at Object.b.javaScriptExports.call_entry_point (/datadisks/disk1/work/AB64091E/w/BE3F0A44/e/reflection/DefaultInterfaceMethods/Emit/WasmApp/dotnet.js:5:58159)\r\n          at Object.Te [as runMain] (/datadisks/disk1/work/AB64091E/w/BE3F0A44/e/reflection/DefaultInterfaceMethods/Emit/WasmApp/dotnet.js:5:2713)\r\n          at run (test-main.js:330:50)\r\n      exiting due to exception: ManagedError(gc_handle: 54)\r\n```\r\n\r\nOn the other hand `reflection/DefaultInterfaceMethods/InvokeConsumer` is pretty mysterious.  Needs more investigation\r\n\r\n```\r\nBEGIN EXECUTION\r\n      /tmp/helix/working/AAF20982/p/corerun -p System.Reflection.Metadata.MetadataUpdater.IsSupported=false InvokeConsumer.dll \u0027\u0027\r\n      Expected: 100\r\n      Actual: 11\r\n      END EXECUTION - FAILED\r\n      Test Harness Exitcode is : 1\r\n      To run the test:\r\n      \u003e set CORE_ROOT=/tmp/helix/working/AAF20982/p\r\n      \u003e /private/tmp/helix/working/AAF20982/w/B6AA09FE/e/reflection/DefaultInterfaceMethods/InvokeConsumer/InvokeConsumer.sh\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n           at reflection_DefaultInterfaceMethods._InvokeConsumer_InvokeConsumer_._InvokeConsumer_InvokeConsumer_sh()\r\n           at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n           at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)\r\n```",
                                           "updatedAt":  "2022-08-24T13:39:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hUf-H",
                                           "createdAt":  "2023-07-12T15:33:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "Moving to 9.0.0",
                                           "updatedAt":  "2023-07-12T15:33:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hUgEq",
                                           "createdAt":  "2023-07-12T15:33:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODAlHZA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ivanpovazan",
                                                                               "createdAt":  "2023-07-13T10:02:48Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "cc: @ivanpovazan",
                                           "updatedAt":  "2023-07-12T15:33:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5zW6q-",
                                           "createdAt":  "2024-02-09T06:11:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "@artl93 this looks like libraries ownership?\n\ncc @steveisok @jeffschwMSFT ",
                                           "updatedAt":  "2024-02-09T06:11:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6GSwKL",
                                           "createdAt":  "2024-07-26T16:04:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "@buyaa-n Could you verify if these tests are still failing, since you\u0027ve worked on unifying Reflection related infrastructure?",
                                           "updatedAt":  "2024-07-26T16:04:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6GiOkk",
                                           "createdAt":  "2024-07-29T22:30:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "buyaa-n",
                                           "body":  "\u003e @buyaa-n Could you verify if these tests are still failing, since you\u0027ve worked on unifying Reflection related infrastructure?\r\n\r\nI don\u0027t even know how these tests in `reflection/DefaultInterfaceMethods` works, I\u0027ll leave it to you\r\n\r\n",
                                           "updatedAt":  "2024-07-29T22:30:54Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "CoreCLR tests on Mono runtime : Failures running Reflection/* tests",
        "labels":  [
                       "area-VM-meta-mono",
                       "runtime-mono",
                       "area-VM-reflection-mono",
                       "needs-further-triage"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/46149",
        "createdAt":  "2020-12-16T17:35:24Z",
        "number":  46149,
        "author":  "fanyang-mono",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBaPkqg==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "srxqds",
                                            "createdAt":  "2020-12-17T00:37:05Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-07-28T20:40:35Z",
        "body":  "In the long term we should try to unify `MethodBuilderInstantiation` (CoreCLR) with `MethodOnTypeBuilderInst` (Mono) - with the caveat that actually `MethodOnTypeBuilderInst` is doing double-duty as `MethodBuilderInstantiation` and also `MethodOnTypeBuilderInstantiation` (CoreCLR). And the second caveat that the native side in mono in `sre.c` will need to be updated to look for the new class names. Slightly non-trivial.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOYVHlEg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0NjY5NTQ3MA==",
                                           "createdAt":  "2020-12-16T17:35:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @CoffeeFlux\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nIn the long term we should try to unify `MethodBuilderInstantiation` (CoreCLR) with `MethodOnTypeBuilderInst` (Mono) - with the caveat that actually `MethodOnTypeBuilderInst` is doing double-duty as `MethodBuilderInstantiation` and also `MethodOnTypeBuilderInstantiation` (CoreCLR). And the second caveat that the native side in mono in `sre.c` will need to be updated to look for the new class names. Slightly non-trivial.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003efanyang-mono\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003efanyang-mono\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-System.Reflection-mono`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e6.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2020-12-16T17:35:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HpEKv",
                                           "createdAt":  "2022-08-02T02:35:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "Didn\u0027t have bandwidth to work on this in .NET7. Moving to milestone 8.0.0.",
                                           "updatedAt":  "2022-08-02T02:35:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hUeQE",
                                           "createdAt":  "2023-07-12T15:29:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "Moving to 9.0.0",
                                           "updatedAt":  "2023-07-12T15:29:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hUeUS",
                                           "createdAt":  "2023-07-12T15:29:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODAlFeg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ivanpovazan",
                                                                               "createdAt":  "2023-07-13T09:58:20Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "cc: @ivanpovazan",
                                           "updatedAt":  "2023-07-12T15:29:41Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Replace MethodOnTypeBuilderInst (Mono) with corresponding CoreCLR ones",
        "labels":  [
                       "area-VM-reflection-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/46748",
        "createdAt":  "2021-01-08T15:20:07Z",
        "number":  46748,
        "author":  "fanyang-mono",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-28T20:40:08Z",
        "body":  "I was trying to implement `MethodBuilder - Signature` for Mono, which calls to `SignatureHelper.GetMethodSigHelper` and `SignatureHelper.ToString`. In order to get the same result as CoreCLR, Mono needs to have an implementation of `ToString` and `GetMethodSigHelper` which accepts `returnModReq`, `returnModOpt`, `paramModReq` and `paramModOpt`. \r\n\r\nCurrently, requiredCustomModifiers and optionalCustomModifiers for either return or parameters are ignored. Plus, there are quite a few other missing functionalities from SignatureHelper (Mono) compared with SignatureHelper (CoreCLR).\r\n\r\nThus, it makes more sense to share the managed code of `SignatureHelper` between Mono and CoreCLR.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOYVHh_w==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1NjgxMTU0OQ==",
                                           "createdAt":  "2021-01-08T15:20:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @CoffeeFlux\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nI was trying to implement MethodBuilder - Signature for Mono, which calls to `SignatureHelper.GetMethodSigHelper` and `SignatureHelper.ToString`. In order to get the same result as CoreCLR, Mono needs to have an implementation of `ToString` and `GetMethodSigHelper` which accepts `returnModReq`, `returnModOpt`, `paramModReq` and `paramModOpt`. \r\n\r\nCurrently, requiredCustomModifiers and optionalCustomModifiers for either return or parameters are ignored. Plus, there are quite a few other missing functionalities from SignatureHelper (Mono) compared with SignatureHelper (CoreCLR).\r\n\r\nThus, it makes more sense to share the managed code of `SignatureHelper` between Mono and CoreCLR.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003efanyang-mono\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003efanyang-mono\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-System.Reflection-mono`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e6.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-01-08T15:20:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2NTE0NDU0OQ==",
                                           "createdAt":  "2021-06-21T15:47:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SamMonoRT",
                                           "body":  "Nice to have, but not required. Moving to 7.0",
                                           "updatedAt":  "2021-06-21T15:47:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HpEOh",
                                           "createdAt":  "2022-08-02T02:36:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "Nice to have feature. Moving to 8.0.0.",
                                           "updatedAt":  "2022-08-02T02:36:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hUeGZ",
                                           "createdAt":  "2023-07-12T15:29:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "Moving to 9.0.0",
                                           "updatedAt":  "2023-07-12T15:29:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hUeH_",
                                           "createdAt":  "2023-07-12T15:29:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "cc: @ivanpovazan",
                                           "updatedAt":  "2023-07-12T15:29:13Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Merge/share SignatureHelper (Mono) with SignatureHelper (CoreCLR)",
        "labels":  [
                       "area-VM-reflection-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/48109",
        "createdAt":  "2021-02-10T16:12:58Z",
        "number":  48109,
        "author":  "lambdageek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBfpw-A==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "srxqds",
                                            "createdAt":  "2021-02-10T22:30:27Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-07-28T20:39:40Z",
        "body":  "In particular, `AssemblyBuilder.DefineDynamicAssembly` should use `AssemblyLoadContext.CurrentContextualReflectionContext` to instantiate the `AssemblyBuilder`.\r\n\r\nCorresponding CoreCLR work is in https://github.com/dotnet/runtime/pull/48072\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOYVHYOg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3NjgyMzU0MQ==",
                                           "createdAt":  "2021-02-10T16:13:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @CoffeeFlux\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nIn particular, `AssemblyBuilder.DefineDynamicAssembly` should use `AssemblyLoadContext.CurrentContextualReflectionContext` to instantiate the `AssemblyBuilder`.\r\n\r\nCorresponding CoreCLR work is in https://github.com/dotnet/runtime/pull/48072\r\n\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003elambdageek\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-AssemblyLoader-mono`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-02-10T16:13:03Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3NjgyMzYwNg==",
                                           "createdAt":  "2021-02-10T16:13:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @CoffeeFlux\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nIn particular, `AssemblyBuilder.DefineDynamicAssembly` should use `AssemblyLoadContext.CurrentContextualReflectionContext` to instantiate the `AssemblyBuilder`.\r\n\r\nCorresponding CoreCLR work is in https://github.com/dotnet/runtime/pull/48072\r\n\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003elambdageek\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-System.Reflection-mono`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-02-10T16:13:08Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3NjgyMzg5Nw==",
                                           "createdAt":  "2021-02-10T16:13:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "/cc @SamMonoRT @fanyang-mono @CoffeeFlux ",
                                           "updatedAt":  "2021-02-10T16:13:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41TCam",
                                           "createdAt":  "2021-08-06T11:03:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SamMonoRT",
                                           "body":  "@lambdageek - moving this to 7.0.0, let me know if this is required for 6.0.0",
                                           "updatedAt":  "2021-08-06T11:03:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hUdWZ",
                                           "createdAt":  "2023-07-12T15:27:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "Moving to 9.0.0",
                                           "updatedAt":  "2023-07-12T15:27:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hUdg6",
                                           "createdAt":  "2023-07-12T15:27:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODAfXJQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ivanpovazan",
                                                                               "createdAt":  "2023-07-12T15:28:34Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "cc: @ivanpovazan\r\n",
                                           "updatedAt":  "2023-07-12T15:27:43Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "[mono] Add support for defining dynamic assemblies in non-default ALCs",
        "labels":  [
                       "area-VM-reflection-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/50715",
        "createdAt":  "2021-04-05T03:11:14Z",
        "number":  50715,
        "author":  "radical",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-10-27T17:35:55Z",
        "body":  "[Log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-51697-merge-9125846b99214378b6/System.Reflection.Tests/console.e17572a9.log?sv=2019-07-07\u0026se=2021-05-16T10%3A10%3A08Z\u0026sr=c\u0026sp=rl\u0026sig=sLFwFf7TqJBCYW8SJjWKm0ZfSDTTJbceEi2RV4jD8KI%3D)\r\n\r\n```\r\n[10:15:01] fail: [FAIL] System.Reflection.Tests.AssemblyTests.GetType_DefaultsToItself\r\n[10:15:01] info: System.TypeLoadException : Could not load type \u0027G`1[[G`1[[System.Int32, mscorlib]]]]\u0027 from assembly \u0027System.Reflection.Tests, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\u0027.\r\n[10:15:01] info:    at System.Reflection.RuntimeAssembly.GetType(String name, Boolean throwOnError, Boolean ignoreCase) in /_/src/mono/System.Private.CoreLib/src/System/Reflection/RuntimeAssembly.cs:line 267\r\n[10:15:01] info:    at System.Reflection.Tests.AssemblyTests.GetType_DefaultsToItself() in /_/src/libraries/System.Reflection/tests/AssemblyTests.cs:line 274\r\n[10:15:01] info:    at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture) in /_/src/mono/System.Private.CoreLib/src/System/Reflection/RuntimeMethodInfo.cs:line 378\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOMbJVaA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgxMzE1NzQwNg==",
                                           "createdAt":  "2021-04-05T03:11:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n```\r\n[02:19:20] fail: [FAIL] System.Reflection.Tests.AssemblyTests.AssemblyGetForwardedTypesLoadFailure\r\n[02:19:20] info: Assert.Throws() Failure\r\n[02:19:20] info: Expected: typeof(System.Reflection.ReflectionTypeLoadException)\r\n[02:19:20] info: Actual:   (No exception was thrown)\r\n[02:19:20] info:    at System.Reflection.Tests.AssemblyTests.AssemblyGetForwardedTypesLoadFailure()\r\n[02:19:20] info:    at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n[02:19:20] fail: [FAIL] System.Reflection.Tests.TypeInfoTests.IsAssignable(type: typeof(System.Collections.IList), c: typeof(System.Collections.ArrayList), expected: True)\r\n[02:19:20] info: Assert.Equal() Failure\r\n[02:19:20] info: Expected: True\r\n[02:19:20] info: Actual:   False\r\n[02:19:20] info:    at System.Reflection.Tests.TypeInfoTests.IsAssignable(Type type, Type c, Boolean expected)\r\n[02:19:20] info:    at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n```\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eradical\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-wasm`, `trimming-for-aot`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-04-05T03:11:16Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMzY1ODMzNg==",
                                           "createdAt":  "2021-05-06T16:22:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "joperezr",
                                           "body":  "Hey @radical quick question. What is the expectation from our side (we own area-System.Reflection) for these issues that got created for wasm? Are you going to look at them or are we supposed to look at them?",
                                           "updatedAt":  "2021-05-06T16:22:08Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMzc3MDg1Ng==",
                                           "createdAt":  "2021-05-06T18:45:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "@joperezr These (`[wasm][eat]`) issues are seen when building the tests with `/p:EnableAggressiveTrimming=true`. It would be very helpful if you could take a look at it as you would understand the tests.\r\nWe have a build on `runtime` pipeline now, for wasm, that builds with this too. And on that build, this particular test is disabled.\r\n\r\nThough if this is not reproducible for non-wasm, then I can check it out.",
                                           "updatedAt":  "2021-05-06T18:45:48Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "[wasm][tests][eat]  Could not load type \u0027`G`1[[G`1[[System.Int32, mscorlib]]]]\u0027 from assembly \u0027System.Reflection.Tests",
        "labels":  [
                       "arch-wasm",
                       "disabled-test",
                       "area-VM-reflection-mono",
                       "trimming-for-aot"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/58783",
        "createdAt":  "2021-09-08T01:50:44Z",
        "number":  58783,
        "author":  "evilzhou",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-26T15:59:44Z",
        "body":  "See the comment below for a concise repro: \r\nhttps://github.com/dotnet/runtime/issues/58783#issuecomment-915439461\r\n\r\nSome values relevant to marshaling from a `StructLayoutAttribute` and `MarshalAsAttribute` are not propagated to the dynamically created type.\r\n\r\n\r\n---\r\nOriginal bug report:\r\n\r\nI tested it in Xamarin, but dotnet runtime also exists:\r\n\r\n![B8e011799c6fc43a1b8891993a90da9ac637658856013765092_20210830-100000-image](https://user-images.githubusercontent.com/14306064/132432954-eb54c2d2-7891-4de5-9d4a-adeee9dd756b.png)\r\n![B9efe2a3af0c148e0b69db8730f9537f8637658856958724359_20210830-100135-image](https://user-images.githubusercontent.com/14306064/132432962-632c48e7-4e90-47b5-bede-9e755e4709f1.png)\r\n![Bf65da309c9ed4158be6cbdc4474836fe637658858144282684_20210830-100333-image](https://user-images.githubusercontent.com/14306064/132432968-5e2d8639-ceb3-4a72-a0ca-9604fbdd7ded.png)\r\n\r\nThe correct size should be 100, which is correct on .net framework but wrong on mono.\r\nWhen I debug this code with mono on win, I found that this error is related to mono’s implementation of DynamicImage, which is caused by the attribute not being successfully applied during marshal.\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhkrigA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc42htFv",
                                           "createdAt":  "2021-09-08T01:50:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-09-08T01:50:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42kGUi",
                                           "createdAt":  "2021-09-08T17:31:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AaronRobinsonMSFT",
                                           "body":  "@evilzhou Instead of posing screenshots, please post code that can be copied into an editor. Attempting to reproduce these scenarios locally is error prone and cumbersome attempting to transpose from an image.",
                                           "updatedAt":  "2021-09-08T17:31:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42kH9l",
                                           "createdAt":  "2021-09-08T17:41:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AaronRobinsonMSFT",
                                           "body":  "```csharp\r\n[StructLayout(LayoutKind.Sequential, Pack = 1)]\r\nstruct Static\r\n{\r\n    [MarshalAs(UnmanagedType.ByValArray, SizeConst = 100)]\r\n    public byte[] buffer;\r\n}\r\n\r\nvar name = new AssemblyName(\"Foobar\");\r\nvar ab = AssemblyBuilder.DefineDynamicAssembly(name, AssemblyBuilderAccess.RunAndCollect);\r\nvar mb = ab.DefineDynamicModule(name.Name + \".dll\");\r\n\r\nvar tb = mb.DefineType(\"teststruct\", TypeAttributes.Public | TypeAttributes.SequentialLayout, typeof(ValueType), PackingSize.Size1);\r\nvar bf = tb.DefineField(\"buffer\", typeof(byte[]), FieldAttributes.Public | FieldAttributes.HasFieldMarshal);\r\n\r\nbf.SetCustomAttribute(new CustomAttributeBuilder(typeof(MarshalAsAttribute).GetConstructor(new Type[] { typeof(UnmanagedType) }),\r\n    new object[] { UnmanagedType.ByValArray },\r\n    new[] { typeof(MarshalAsAttribute).GetField(\"SizeConst\") },\r\n    new object[] { 100 }\r\n)) ;\r\n\r\nType t = tb.CreateType();\r\n\r\nConsole.WriteLine($\"Dynamic Size: {Marshal.SizeOf(t)}\");\r\nConsole.WriteLine($\"Static Size: {Marshal.SizeOf(typeof(Static))}\");\r\n```\r\n\r\nOutput on Mono:\r\n```\r\nDynamic Size: 8\r\nStatic Size: 100\r\n```",
                                           "updatedAt":  "2021-09-08T18:06:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42kuLO",
                                           "createdAt":  "2021-09-08T21:47:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB5xE0A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "evilzhou",
                                                                               "createdAt":  "2021-09-09T01:26:45Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "lambdageek",
                                                                               "createdAt":  "2021-09-10T01:27:24Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "AaronRobinsonMSFT",
                                           "body":  "Based on some local debugging the Mono Reflection.Emit code paths are not propagating some `TypeBuilder` values. The most obvious ones are the `PackingSize.Size1`, which is `t.StructLayoutAttribute.Pack == 8` instead of `1`, and the custom attribute placed on the `buffer` field, `t.GetFields()[0].CustomAttributes.Count() == 0`.\r\n\r\nIf `t` is set to `typeof(Static)`, the above values are respectively `1` and `1`, as expected.\r\n\r\n/cc @lambdageek ",
                                           "updatedAt":  "2021-09-08T21:47:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42oZsq",
                                           "createdAt":  "2021-09-10T01:28:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: \nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nI tested it in Xamarin, but dotnet runtime also exists:\r\n\r\n![B8e011799c6fc43a1b8891993a90da9ac637658856013765092_20210830-100000-image](https://user-images.githubusercontent.com/14306064/132432954-eb54c2d2-7891-4de5-9d4a-adeee9dd756b.png)\r\n![B9efe2a3af0c148e0b69db8730f9537f8637658856958724359_20210830-100135-image](https://user-images.githubusercontent.com/14306064/132432962-632c48e7-4e90-47b5-bede-9e755e4709f1.png)\r\n![Bf65da309c9ed4158be6cbdc4474836fe637658858144282684_20210830-100333-image](https://user-images.githubusercontent.com/14306064/132432968-5e2d8639-ceb3-4a72-a0ca-9604fbdd7ded.png)\r\n\r\nThe correct size should be 100, which is correct on .net framework but wrong on mono.\r\nWhen I debug this code with mono on win, I found that this error is related to mono’s implementation of DynamicImage, which is caused by the attribute not being successfully applied during marshal.\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eevilzhou\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`untriaged`, `area-Interop-mono`, `area-System.Reflection-mono`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-09-10T01:28:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc45Pvls",
                                           "createdAt":  "2021-11-04T03:34:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "@fanyang-mono  I think this is related to the issue we talked about.\r\n\r\nSo essentially the problem is that we need to extend `typebuilder_setup_one_field` in `sre.c` to do something with the `MonoReflectionFieldBuilder:marshal_info` field - basically convert it into some marshal specs.\r\n\r\nCompare with what `reflection_methodbuilder_to_mono_method` does with the `MonoReflectionParamBuilder:marshal_info` fields around here https://github.com/dotnet/runtime/blob/1e48eca9577433526c5c649a87ca2f2545d35958/src/mono/mono/metadata/sre.c#L3098-L3115\r\nIt allocates an array of `MonoMarshalSpec*` and fills it with the result of calling `mono_marshal_spec_from_builder`.\r\n\r\nSo we need to do something similar in `typebuilder_setup_fields`: \r\n1. Allocate a new `MonoMarshalType` with enough space to hold info about all the fields.\r\n2. Populate the `MonoMarshalField` struct in the `MonoMarshalType:fields` array with the `MonoClassField` and `MonoMarshalSpec` (the former is created in `typebuilder_setup_one_field` the latter is the result of calling `mono_marshal_spec_from_type_builder`).\r\n3. Then call `mono_class_set_marshal_info (klass, info)` to associate the `MonoMarshalType` with the constructed class that the typebuilder creates.\r\n\r\nCompare with what is done for non-reflection classes in `mono_marshal_load_type_info` except instead of calling functions like `mono_class_get_fields_internal` and `mono_metadata_field_info_with_mempool` you would instead create the marshal info for each field manually from the `MonoReflectionFieldBuilder` and its `MonoReflectionMarshal` member.\r\n",
                                           "updatedAt":  "2021-11-04T03:34:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc45V1a7",
                                           "createdAt":  "2021-11-05T16:11:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "@evilzhou Has this code worked correctly for you before?",
                                           "updatedAt":  "2021-11-05T16:11:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46WT8Y",
                                           "createdAt":  "2021-11-25T08:04:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "evilzhou",
                                           "body":  "\u003e @evilzhou Has this code worked correctly for you before?\r\n\r\n@fanyang-mono No, there are always problems",
                                           "updatedAt":  "2021-11-25T08:04:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46g-kc",
                                           "createdAt":  "2021-11-29T15:08:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "\u003e \u003e @evilzhou Has this code worked correctly for you before?\r\n\u003e \r\n\u003e @fanyang-mono No, there are always problems\r\n\r\nThanks for confirming that this is a missing functionality rather than a regression.",
                                           "updatedAt":  "2021-11-29T15:08:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HpGYy",
                                           "createdAt":  "2022-08-02T02:54:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "Moving to 8.0.0",
                                           "updatedAt":  "2022-08-02T02:54:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hUcvi",
                                           "createdAt":  "2023-07-12T15:25:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "Moving to 9.0.0",
                                           "updatedAt":  "2023-07-12T15:25:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hUdC7",
                                           "createdAt":  "2023-07-12T15:26:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODAfWoQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ivanpovazan",
                                                                               "createdAt":  "2023-07-12T15:27:35Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "cc: @ivanpovazan ",
                                           "updatedAt":  "2023-07-12T15:26:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6GSuKA",
                                           "createdAt":  "2024-07-26T15:59:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "There\u0027s an outline of the work that might be required in https://github.com/dotnet/runtime/issues/58783#issuecomment-960428396, however using System.Reflection.Emit to create P/Invokes is somewhat rare on the platforms that use Mono (because they\u0027re mostly AOT)",
                                           "updatedAt":  "2024-07-26T15:59:28Z"
                                       }
                                   ],
                         "totalCount":  13
                     },
        "title":  "[mono] System.Reflection.Emit doesn\u0027t propagate marshalling attributes to the created type",
        "labels":  [
                       "help wanted",
                       "area-VM-reflection-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/60334",
        "createdAt":  "2021-10-13T08:22:20Z",
        "number":  60334,
        "author":  "MaximLipnin",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-27T02:48:36Z",
        "body":  "When running on an iOS device in https://github.com/dotnet/runtime/pull/59503, the [Test_GetCurrentMethod_Inlineable](https://github.com/dotnet/runtime/blob/main/src/libraries/System.Runtime/tests/System/Reflection/MethodBaseTests.cs#L24-L38) library test fails with:\r\n```\r\nAssert.Equal() Failure\r\n↓ (pos 0)\r\nExpected: GetCurrentMethod_InlineableWrapper\r\nActual:   Test_GetCurrentMethod_Inlineable\r\n↑ (pos 0)\r\n```\r\n\r\nBased on the comment in the test, the result seems to be affected by inlining optimizations :)\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=1417231\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=41055100\u0026resultId=100070\u0026paneView=debug\r\n\r\ncc @steveisok @akoeplinger \r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOOCsbhA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc44Jpmc",
                                           "createdAt":  "2021-10-13T08:22:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-10-13T08:22:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44KxuE",
                                           "createdAt":  "2021-10-13T14:12:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @buyaa-n\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nWhen running on an iOS device in https://github.com/dotnet/runtime/pull/59503, the [Test_GetCurrentMethod_Inlineable](https://github.com/dotnet/runtime/blob/main/src/libraries/System.Runtime/tests/System/Reflection/MethodBaseTests.cs#L24-L38) library test fails with:\r\n```\r\nAssert.Equal() Failure\r\n↓ (pos 0)\r\nExpected: GetCurrentMethod_InlineableWrapper\r\nActual:   Test_GetCurrentMethod_Inlineable\r\n↑ (pos 0)\r\n```\r\n\r\nBased on the comment in the test, the result seems to be affected by inlining optimizations :)\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=1417231\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=41055100\u0026resultId=100070\u0026paneView=debug\r\n\r\ncc @steveisok @akoeplinger \r\n\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eMaximLipnin\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-System.Reflection`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-10-13T14:12:31Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "[iOS] Test_GetCurrentMethod_Inlineable test failed",
        "labels":  [
                       "os-ios",
                       "area-VM-reflection-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/65558",
        "createdAt":  "2022-02-18T12:04:42Z",
        "number":  65558,
        "author":  "MaximLipnin",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-05T14:49:34Z",
        "body":  "The `System.Reflection.Emit.Tests.ModuleBuilderDefineInitializedData.DefineInitializedData_EnsureAlignmentIsMinimumNeededForUseOfCreateSpan` library test failed on Android x86 leg in https://github.com/dotnet/runtime/pull/65551 with the following error:\r\n\r\n```\r\n\u003ctest name=\"System.Reflection.Emit.Tests.ModuleBuilderDefineInitializedData.DefineInitializedData_EnsureAlignmentIsMinimumNeededForUseOfCreateSpan\" type=\"System.Reflection.Emit.Tests.ModuleBuilderDefineInitializedData\" method=\"DefineInitializedData_EnsureAlignmentIsMinimumNeededForUseOfCreateSpan\" time=\"0.0191385\" result=\"Fail\"\u003e\r\n\u003cfailure exception-type=\"Xunit.Sdk.EqualException\"\u003e\r\n    \u003cmessage\u003e\u003c![CDATA[Assert.Equal() Failure\\n                         ↓ (pos 15)\\nExpected: LoadAddress8_2_0_-1084909276\\nActual:   LoadAddress8_2_-4_-1084909276\\n                         ↑ (pos 15)]]\u003e\u003c/message\u003e\r\n    \u003cstack-trace\u003e\u003c![CDATA[   at System.Reflection.Emit.Tests.ModuleBuilderDefineInitializedData.\u003cDefineInitializedData_EnsureAlignmentIsMinimumNeededForUseOfCreateSpan\u003eg__CheckMethod|6_1(String name, Int32 minAlignmentRequired, Byte[] dataToVerify, \u003c\u003ec__DisplayClass6_0\u0026 ) in /_/src/libraries/System.Reflection.Emit/tests/ModuleBuilder/ModuleBuilderDefineInitializedData.cs:line 114\r\nat System.Reflection.Emit.Tests.ModuleBuilderDefineInitializedData.DefineInitializedData_EnsureAlignmentIsMinimumNeededForUseOfCreateSpan() in /_/src/libraries/System.Reflection.Emit/tests/ModuleBuilder/ModuleBuilderDefineInitializedData.cs:line 95\r\nat System.Reflection.RuntimeMethodInfo.InvokeWorker(Object obj, BindingFlags invokeAttr, Span`1 parameters)]]\u003e\u003c/stack-trace\u003e\r\n\u003c/failure\u003e\r\n\u003c/test\u003e\r\n```\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=1620509\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=45058618\u0026paneView=debug\u0026resultId=133462\r\n\r\ncc @steveisok @akoeplinger @lambdageek @davidwrighton ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOPkCRqQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc4-QJGp",
                                           "createdAt":  "2022-02-18T12:04:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027arch-android\u0027: @steveisok, @akoeplinger\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThe `System.Reflection.Emit.Tests.ModuleBuilderDefineInitializedData.DefineInitializedData_EnsureAlignmentIsMinimumNeededForUseOfCreateSpan` library test failed on Android x86 leg in https://github.com/dotnet/runtime/pull/65551 with the following error:\r\n\r\n```\r\n\u003ctest name=\"System.Reflection.Emit.Tests.ModuleBuilderDefineInitializedData.DefineInitializedData_EnsureAlignmentIsMinimumNeededForUseOfCreateSpan\" type=\"System.Reflection.Emit.Tests.ModuleBuilderDefineInitializedData\" method=\"DefineInitializedData_EnsureAlignmentIsMinimumNeededForUseOfCreateSpan\" time=\"0.0191385\" result=\"Fail\"\u003e\r\n\u003cfailure exception-type=\"Xunit.Sdk.EqualException\"\u003e\r\n    \u003cmessage\u003e\u003c![CDATA[Assert.Equal() Failure\\n                         ↓ (pos 15)\\nExpected: LoadAddress8_2_0_-1084909276\\nActual:   LoadAddress8_2_-4_-1084909276\\n                         ↑ (pos 15)]]\u003e\u003c/message\u003e\r\n    \u003cstack-trace\u003e\u003c![CDATA[   at System.Reflection.Emit.Tests.ModuleBuilderDefineInitializedData.\u003cDefineInitializedData_EnsureAlignmentIsMinimumNeededForUseOfCreateSpan\u003eg__CheckMethod|6_1(String name, Int32 minAlignmentRequired, Byte[] dataToVerify, \u003c\u003ec__DisplayClass6_0\u0026 ) in /_/src/libraries/System.Reflection.Emit/tests/ModuleBuilder/ModuleBuilderDefineInitializedData.cs:line 114\r\nat System.Reflection.Emit.Tests.ModuleBuilderDefineInitializedData.DefineInitializedData_EnsureAlignmentIsMinimumNeededForUseOfCreateSpan() in /_/src/libraries/System.Reflection.Emit/tests/ModuleBuilder/ModuleBuilderDefineInitializedData.cs:line 95\r\nat System.Reflection.RuntimeMethodInfo.InvokeWorker(Object obj, BindingFlags invokeAttr, Span`1 parameters)]]\u003e\u003c/stack-trace\u003e\r\n\u003c/failure\u003e\r\n\u003c/test\u003e\r\n```\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=1620509\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=45058618\u0026paneView=debug\u0026resultId=133462\r\n\r\ncc @steveisok @akoeplinger @lambdageek @davidwrighton \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eMaximLipnin\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-x86`, `os-android`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-02-18T12:04:45Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "[Android][x86] System.Reflection.Emit.Tests.ModuleBuilderDefineInitializedData.DefineInitializedData_EnsureAlignmentIsMinimumNeededForUseOfCreateSpan failed",
        "labels":  [
                       "arch-x86",
                       "os-android",
                       "area-VM-reflection-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/73593",
        "createdAt":  "2022-08-08T21:28:02Z",
        "number":  73593,
        "author":  "buyaa-n",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-01-26T19:38:54Z",
        "body":  "[The PR](https://github.com/dotnet/runtime/pull/72561) for [Improving custom attribute decoding tests](https://github.com/dotnet/runtime/issues/16552) to test all attributes using reflection is failing on mono because mono parses attribute type differently than coreclr. \r\n\r\nFor example it parses the `CustomAttributeTypedArgument.Type` of `[Test((object)null)]` attribute into string not object. Also parses collections differently\r\n\r\nSkipping the test on mono until it gets fixed",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSE8zTQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5ICj23",
                                           "createdAt":  "2022-08-08T21:28:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-reflection-metadata\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n[The PR](https://github.com/dotnet/runtime/pull/72561) for [Improving custom attribute decoding tests](https://github.com/dotnet/runtime/issues/16552) to test all attributes using reflection is failing on mono because mono parses attribute type differently than coreclr. \r\n\r\nFor example it parses the `CustomAttributeTypedArgument.Type` of `[Test((object)null)]` attribute into string not object. Also parses collections differently\r\n\r\nSkipping the test on mono until it gets fixed\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ebuyaa-n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-System.Reflection.Metadata`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-08-08T21:28:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ITzNN",
                                           "createdAt":  "2022-08-12T14:07:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "@lambdageek I assigned this to 8.0, let me know if you think this is important for 7.0",
                                           "updatedAt":  "2022-08-12T14:07:57Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "CustomAttributeDecoderTests.TestCustomAttributeDecoderUsingReflection test fails on mono",
        "labels":  [
                       "runtime-mono",
                       "area-VM-reflection-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/77821",
        "createdAt":  "2022-11-03T08:25:41Z",
        "number":  77821,
        "author":  "mkhamoyan",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-07-12T16:56:40Z",
        "body":  "### Description\n\nSystem.Reflection.Tests.AssemblyTests.AssemblyGetForwardedTypesLoadFailure crashes on Android.\r\nIssue is related with UnloadableAssembly as test crashes while trying to open /data/user/0/net.dot.System.Reflection.Tests/files/UnloadableAssembly.dll\r\n\n\n### Reproduction Steps\n\nTo reproduce issue remove ActiveIssue from AssemblyGetForwardedTypesLoadFailure and run it on Android.\n\n### Expected behavior\n\nAssemblyGetForwardedTypesLoadFailure should pass on Android.\n\n### Actual behavior\n\nAssemblyGetForwardedTypesLoadFailure crashes on Android.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\nAssemblyGetForwardedTypesLoadFailure is disabled on Android.\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOTZeaFg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5Nl4Rq",
                                           "createdAt":  "2022-11-03T08:25:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-reflection\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\n\nSystem.Reflection.Tests.AssemblyTests.AssemblyGetForwardedTypesLoadFailure crashes on Android.\r\nIssue is related with UnloadableAssembly as test crashes while trying to open /data/user/0/net.dot.System.Reflection.Tests/files/UnloadableAssembly.dll\r\n\n\n### Reproduction Steps\n\nTo reproduce issue remove ActiveIssue from AssemblyGetForwardedTypesLoadFailure and run it on Android.\n\n### Expected behavior\n\nAssemblyGetForwardedTypesLoadFailure should pass on Android.\n\n### Actual behavior\n\nAssemblyGetForwardedTypesLoadFailure crashes on Android.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\nAssemblyGetForwardedTypesLoadFailure is disabled on Android.\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003emkhamoyan\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-System.Reflection`, `disabled-test`, `os-android`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-11-03T08:25:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Nl5oW",
                                           "createdAt":  "2022-11-03T08:32:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mkhamoyan",
                                           "body":  "Disabled in https://github.com/dotnet/runtime/pull/77169",
                                           "updatedAt":  "2022-11-03T08:32:20Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "System.Reflection.Tests.AssemblyTests.AssemblyGetForwardedTypesLoadFailure crashes on Android",
        "labels":  [
                       "disabled-test",
                       "os-android",
                       "area-VM-reflection-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/82257",
        "createdAt":  "2023-02-16T19:52:35Z",
        "number":  82257,
        "author":  "buyaa-n",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-05-21T16:25:48Z",
        "body":  "ByRef type name created by TypeBuilder and referenced in IL produces wrong result on mono.  After creating the ByRef type from Type builder `Type byrefType = type.MakeByRefType();` the name was correct `TestType\u0026` as expected, but when reference it in IL it produces just `TestType` without `\u0026`\r\nCorresponding test added in [System.Reflection.Emit](https://github.com/dotnet/runtime/blob/8b46081dccea13c6a7482a64f5bd27329ffa8e03/src/libraries/System.Reflection.Emit/tests/MethodBuilder/MethodBuilderGetILGenerator.cs#L125) tests and disabled on mono:\r\n```cs\r\n    public void LoadByRefTypeInILGeneratedMethod()\r\n    {\r\n        TypeBuilder type = Helpers.DynamicType(TypeAttributes.Public);\r\n        Type byrefType = type.MakeByRefType();\r\n\r\n        MethodBuilder method = type.DefineMethod(\"TestMethod\", MethodAttributes.Public | MethodAttributes.Static, typeof(string), Type.EmptyTypes);\r\n        ILGenerator ilGenerator = method.GetILGenerator();\r\n\r\n        ilGenerator.Emit(OpCodes.Ldtoken, byrefType);\r\n        ilGenerator.Emit(OpCodes.Call, typeof(Type).GetMethod(\"GetTypeFromHandle\", BindingFlags.Static | BindingFlags.Public));\r\n        ilGenerator.Emit(OpCodes.Callvirt, typeof(Type).GetMethod(\"get_FullName\"));\r\n        ilGenerator.Emit(OpCodes.Ret);\r\n\r\n        Type createdType = type.CreateType();\r\n        MethodInfo createdMethod = createdType.GetMethod(\"TestMethod\");\r\n        Assert.Equal(\"TestType\u0026\", createdMethod.Invoke(null, null));\r\n   }\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOVXNyHA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5Vc3Ic",
                                           "createdAt":  "2023-02-16T19:52:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-reflection-emit\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nByRef type name created by TypeBuilder and referenced in IL produces wrong result on mono.  After creating the ByRef type from Type builder `Type byrefType = type.MakeByRefType();` the name was correct `TestType\u0026` as expected, but when reference it in IL it produces just `TestType` without `\u0026`\r\nCorresponding test added in [System.Reflection.Emit](https://github.com/dotnet/runtime/blob/8b46081dccea13c6a7482a64f5bd27329ffa8e03/src/libraries/System.Reflection.Emit/tests/MethodBuilder/MethodBuilderGetILGenerator.cs#L125) tests and disabled on mono:\r\n```cs\r\n    public void LoadByRefTypeInILGeneratedMethod()\r\n    {\r\n        TypeBuilder type = Helpers.DynamicType(TypeAttributes.Public);\r\n        Type byrefType = type.MakeByRefType();\r\n\r\n        MethodBuilder method = type.DefineMethod(\"TestMethod\", MethodAttributes.Public | MethodAttributes.Static, typeof(string), Type.EmptyTypes);\r\n        ILGenerator ilGenerator = method.GetILGenerator();\r\n\r\n        ilGenerator.Emit(OpCodes.Ldtoken, byrefType);\r\n        ilGenerator.Emit(OpCodes.Call, typeof(Type).GetMethod(\"GetTypeFromHandle\", BindingFlags.Static | BindingFlags.Public));\r\n        ilGenerator.Emit(OpCodes.Callvirt, typeof(Type).GetMethod(\"get_FullName\"));\r\n        ilGenerator.Emit(OpCodes.Ret);\r\n\r\n        Type createdType = type.CreateType();\r\n        MethodInfo createdMethod = createdType.GetMethod(\"TestMethod\");\r\n        Assert.Equal(\"TestType\u0026\", createdMethod.Invoke(null, null));\r\n   }\r\n```\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ebuyaa-n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-System.Reflection.Emit`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-02-16T19:52:44Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "ByRef type name created by TypeBuilder and referenced in IL produces wrong result on Mono",
        "labels":  [
                       "area-VM-reflection-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/94659",
        "createdAt":  "2023-11-13T11:13:59Z",
        "number":  94659,
        "author":  "ivanpovazan",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-05-21T16:02:57Z",
        "body":  "To improve code quality and maintainability and have the same behaviour between the runtime flavours we should try to share more code/logic between CoreCLR\u0027s and Mono\u0027s implementation of `CustomAttribute` API.\r\n\r\nThis has been called out in: https://github.com/dotnet/runtime/pull/94602 and should try to address code comments used with Mono:\r\n- https://github.com/dotnet/runtime/blob/2454fe6785570d4b7d75e366289bcda2f4c363e4/src/mono/System.Private.CoreLib/src/System/Reflection/CustomAttribute.cs#L114\r\n- https://github.com/dotnet/runtime/blob/2454fe6785570d4b7d75e366289bcda2f4c363e4/src/mono/System.Private.CoreLib/src/System/Reflection/CustomAttribute.cs#L469\r\n- and others ...\r\n\r\nto share/match CoreCLR\u0027s implementation.\r\n\r\nAt the same time, adequate unit tests should be added to test and verify the changes.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "[mono] Share more of the `CustomAttribute` logic between CoreCLR and Mono",
        "labels":  [
                       "area-VM-reflection-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/94898",
        "createdAt":  "2023-11-17T07:00:52Z",
        "number":  94898,
        "author":  "vikasgupta8",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-05-21T16:02:49Z",
        "body":  "### Description\r\n\r\nAspnetcore tests are failing on ppc6le while testing cross build .net **8.0.100-rc.2.23502.2** mono build. \r\n\r\n**Stack trace:**\r\n\r\n```\r\nMicrosoft.AspNetCore.Server.Kestrel.Core.Tests.ConnectionContextTests.ParameterlessAbortCreateConnectionAbortedException\r\nSystem.InvalidCastException : Specified cast is not valid.\r\n  at Castle.DynamicProxy.Internal.AttributeUtil.ReadAttributeValue(CustomAttributeTypedArgument argument)\r\n  at Castle.DynamicProxy.Internal.AttributeUtil.GetArguments(IList`1 constructorArguments, Type[]\u0026 constructorArgTypes, Object[]\u0026 constructorArgs)\r\n  at Castle.DynamicProxy.Internal.AttributeUtil.CreateInfo(CustomAttributeData attribute)\r\n  at Castle.DynamicProxy.Internal.AttributeUtil.GetNonInheritableAttributes(MemberInfo member)+MoveNext()\r\n  at System.Linq.Enumerable.SelectEnumerableIterator`2[[Castle.DynamicProxy.CustomAttributeInfo, Castle.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=407dd0808d44fbdc],[System.Reflection.Emit.CustomAttributeBuilder, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n  at Castle.DynamicProxy.Generators.MetaProperty.BuildPropertyEmitter(ClassEmitter classEmitter)\r\n  at Castle.DynamicProxy.Contributors.CompositeTypeContributor.ImplementProperty(ClassEmitter emitter, MetaProperty property, ProxyGenerationOptions options)\r\n  at Castle.DynamicProxy.Contributors.CompositeTypeContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)\r\n  at Castle.DynamicProxy.Generators.ClassProxyGenerator.GenerateType(String name, Type[] interfaces, INamingScope namingScope)\r\n  at Castle.DynamicProxy.Generators.ClassProxyGenerator.\u003c\u003ec__DisplayClass1_0.\u003cGenerateCode\u003eb__0(String n, INamingScope s)\r\n  at Castle.DynamicProxy.Generators.BaseProxyGenerator.ObtainProxyType(CacheKey cacheKey, Func`3 factory)\r\n  at Castle.DynamicProxy.Generators.ClassProxyGenerator.GenerateCode(Type[] interfaces, ProxyGenerationOptions options)\r\n  at Castle.DynamicProxy.DefaultProxyBuilder.CreateClassProxyType(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options)\r\n  at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyType(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options)\r\n  at Castle.DynamicProxy.ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)\r\n  at Moq.CastleProxyFactory.CreateProxy(Type mockType, IInterceptor interceptor, Type[] interfaces, Object[] arguments)\r\n  at Moq.Mock`1[[Microsoft.AspNetCore.Connections.ConnectionContext, Microsoft.AspNetCore.Connections.Abstractions, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]].InitializeInstancePexProtected()\r\n  at Moq.PexProtector.Invoke(Action action)\r\n  at Moq.Mock`1[[Microsoft.AspNetCore.Connections.ConnectionContext, Microsoft.AspNetCore.Connections.Abstractions, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]].InitializeInstance()\r\n  at Moq.Mock`1[[Microsoft.AspNetCore.Connections.ConnectionContext, Microsoft.AspNetCore.Connections.Abstractions, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]].OnGetObject()\r\n  at Moq.Mock.get_Object()\r\n  at Moq.Mock`1[[Microsoft.AspNetCore.Connections.ConnectionContext, Microsoft.AspNetCore.Connections.Abstractions, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]].get_Object()\r\n  at Microsoft.AspNetCore.Server.Kestrel.Core.Tests.ConnectionContextTests.ParameterlessAbortCreateConnectionAbortedException() in /_/src/Servers/Kestrel/Core/test/ConnectionContextTests.cs:line 21\r\n  at System.Reflection.MethodBaseInvoker.InterpretedInvoke_Method(Object obj, IntPtr* args)\r\n  at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)\r\n\r\n```\r\n\r\n### Reproduction Steps\r\n\r\nI have written sample program that reproduce the issue on ppc64le with mono **.net8 rc2**\r\nWhen casting Value to `CustomAttributeTypedArgument`. \r\n\r\nUse the dotnet 8.0.100-rc.2.23502.2 cross build sdk. \r\n\r\n```\r\n.NET SDK:\r\n Version:   8.0.100-rc.2.23502.2\r\n Commit:    0abacfc2b6\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  20.04\r\n OS Platform: Linux\r\n RID:         linux-ppc64le\r\n Base Path:   /home/ubuntu/vikas/dotnet-ppc64le-8.0.100-rc.2.23502.2/.dotnet/sdk/8.0.100-rc.2.23502.2/\r\n\r\n.NET workloads installed:\r\nThere are no installed workloads to display.\r\n\r\nHost:\r\n  Version:      8.0.0-rc.2.23479.6\r\n  Architecture: ppc64le\r\n  Commit:       0b25e38ad3\r\n\r\n.NET SDKs installed:\r\n  8.0.100-rc.2.23502.2 [/home/ubuntu/vikas/dotnet-ppc64le-8.0.100-rc.2.23502.2/.dotnet/sdk]\r\n```\r\n\r\nProgram.cs\r\n\r\n```\r\nusing System.Reflection;\r\n\r\nnamespace Test\r\n{\r\n        public class Testing\r\n        {\r\n            public sealed class AttributeWithIntArrayArgument : Attribute\r\n            {\r\n                public AttributeWithIntArrayArgument(params int[] ints)\r\n                {\r\n                }\r\n            }\r\n\r\n            [AttributeWithIntArrayArgument(1, 2, 3)]\r\n            public interface IHasAttributeWithIntArray\r\n            {\r\n            }\r\n\r\n            public void TestTypeCast_Fail()\r\n            {\r\n                Type targetType = typeof(IHasAttributeWithIntArray);\r\n\r\n                var attributes = targetType.CustomAttributes;\r\n                foreach (var attribute in attributes)\r\n                {\r\n                    Console.WriteLine(\"VIKAS -\u003e attribute.ConstructorArguments[0].ArgumentType = {0}\",attribute.ConstructorArguments[0].ArgumentType);\r\n                    Console.WriteLine(\"VIKAS -\u003e attribute.ConstructorArguments[0].Value = {0}\",attribute.ConstructorArguments[0].Value);\r\n                    var cast = (IList\u003cCustomAttributeTypedArgument\u003e)attribute.ConstructorArguments[0].Value;\r\n                }\r\n            }\r\n\r\n            static void Main(string[] args)\r\n            {\r\n                Testing p1 = new Testing();\r\n                p1.TestTypeCast_Fail();\r\n            }\r\n        }\r\n}\r\n\r\n```\r\n\r\nThis throws InvalidCastException on ppc6le(Mono) while works fine on intel x86(CoreClr).\r\n\r\nOutput on ppc64le (Mono)\r\n```\r\nVIKAS -\u003e attribute.ConstructorArguments[0].ArgumentType = System.Int32[]\r\nVIKAS -\u003e attribute.ConstructorArguments[0].Value = System.Int32[]\r\n\r\nUnhandled Exception:\r\nSystem.InvalidCastException: Specified cast is not valid.\r\n   at vikas.Testing.TestTypeCast_Fail() in /root/vikas/Castle.Core.Tests/Sample/Program.cs:line 28\r\n   at vikas.Testing.Main(String[] args) in /root/vikas/Castle.Core.Tests/Sample/Program.cs:line 35\r\n```\r\nOutput on x86 intel (CoreClr)\r\n```\r\nVIKAS -\u003e attribute.ConstructorArguments[0].ArgumentType = System.Int32[]\r\nVIKAS -\u003e attribute.ConstructorArguments[0].Value = System.Collections.ObjectModel.ReadOnlyCollection`1[System.Reflection.CustomAttributeTypedArgument]\r\n```\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nAspnetcore tests should pass without any exception.\r\n\r\n### Actual behavior\r\n\r\n\r\nTests are failing with InvalidCastException\r\n\r\nSystem.InvalidCastException: Specified cast is not valid.\r\n\r\n\r\n### Regression?\r\n\r\n_No response_\r\n\r\n### Known Workarounds\r\n\r\n\r\nIf we update CastleCore version from 4.2.1 to 5.1.1 In aspnetcore/eng/Versions.props file then test failures observed in Microsoft.AspNetCore.Server.Kestrel.Core.Tests gets fixed.\r\n\r\n### Configuration\r\n\r\n_No response_\r\n\r\n### Other information\r\n\r\nCC: @uweigand @janani66 @Sapana-Khemkar ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHObFzHIw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5sO49j",
                                           "createdAt":  "2023-11-17T07:05:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODNBZZA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "lambdageek",
                                                                               "createdAt":  "2023-11-19T23:20:26Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "vikasgupta8",
                                           "body":  "Tagging @lambdageek ",
                                           "updatedAt":  "2023-11-17T07:05:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5sRuyM",
                                           "createdAt":  "2023-11-17T15:03:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vcsjones",
                                           "body":  "This looks like a duplicate of https://github.com/dotnet/runtime/issues/93770.",
                                           "updatedAt":  "2023-11-17T15:03:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5sR242",
                                           "createdAt":  "2023-11-17T15:19:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODNHLyQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "vcsjones",
                                                                               "createdAt":  "2023-11-17T15:46:06Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ivanpovazan",
                                                                               "createdAt":  "2023-11-20T15:13:34Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "uweigand",
                                           "body":  "\u003e This looks like a duplicate of #93770.\r\n\r\nUnfortunately not - running the aspnetcore tests uncovered a variety of different problems, one of those was addressed in #93770, two others were already spun off into separate issues (https://github.com/dotnet/runtime/issues/94488 and https://github.com/dotnet/runtime/issues/94490), and this issue is covering the last remaining problem in that area.\r\n",
                                           "updatedAt":  "2023-11-17T15:19:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5sXK7v",
                                           "createdAt":  "2023-11-19T23:27:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "Also repros on linux-x64 with `-p:UseMonoRuntime=true -p:SelfContained=true`\r\n",
                                           "updatedAt":  "2023-11-19T23:27:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5sXMb7",
                                           "createdAt":  "2023-11-19T23:49:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODNHLvw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ivanpovazan",
                                                                               "createdAt":  "2023-11-20T15:13:29Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "Looks like `ves_icall_System_Reflection_RuntimeCustomAttributeData_ResolveArgumentsInternal` doesn\u0027t do the correct encoding of custom attribute data for array types (or indeed any types, but particularly arrays) - it just encodes the value as an array object of the element values.\r\n\r\nBy contrast the corresponding core (I think... it\u0027s hard to follow) in CoreCLR recursively creates another struct (that will eventually become an array of `CustomAttributeTypedArgument`)\r\n\r\nhttps://github.com/dotnet/runtime/blob/83f116627e2548c7a55b3701bd5448570b84a784/src/coreclr/vm/customattribute.cpp#L287-L301\r\n",
                                           "updatedAt":  "2023-11-19T23:49:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5sXMcj",
                                           "createdAt":  "2023-11-19T23:49:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "/cc @SamMonoRT ",
                                           "updatedAt":  "2023-11-19T23:49:54Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "[mono][ppc64le] aspnetcore tests are failing with error \"System.InvalidCastException : Specified cast is not valid.\" on ppc64le",
        "labels":  [
                       "area-VM-reflection-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/97829",
        "createdAt":  "2024-02-01T18:10:46Z",
        "number":  97829,
        "author":  "steveharter",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-26T15:51:19Z",
        "body":  "In the Core runtime, a `FieldAccessException` is thrown.\r\n\r\nFound by newly added tests in https://github.com/dotnet/runtime/pull/97784\r\n\r\nRepro\r\n```cs\r\nFieldInfo fieldInfo = typeof(MyStruct).GetField(nameof(MyStruct.s_rvaIntField));\r\nfieldInfo.SetValue(null, MyStruct.s_rvaIntField);\r\n// Result: no exception\r\n\r\npublic struct MyStruct\r\n{\r\n    public static readonly int[] s_rvaIntField = [1, 2];\r\n\r\n    public MyStruct() { }\r\n}\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOcsKosQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5yvOim",
                                           "createdAt":  "2024-02-03T01:02:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "Note that CoreCLR allows using reflection to initialize a `static readonly` field from the static cctor:\r\n\r\n```csharp\r\nusing System.Reflection;\r\n\r\npublic class C {\r\n    public static void Main() {\r\n       Console.WriteLine ($\"s_rvaIntField is {MyStruct.s_rvaIntField}\");\r\n   try {\r\nFieldInfo fieldInfo = typeof(MyStruct).GetField(nameof(MyStruct.s_rvaIntField));\r\nfieldInfo.SetValue(null, MyStruct.s_rvaIntField);\r\n// Result: no exception\r\n    } catch (FieldAccessException exn) {\r\n      Console.WriteLine ($\"Caught: {exn}\");\r\n    }\r\n    try {\r\n       FieldInfo fieldInfo = typeof(MyStruct).GetField(nameof(MyStruct.s_Two));\r\n       fieldInfo.SetValue(null, MyStruct.s_Two);\r\n    } catch (FieldAccessException exn) {\r\n       Console.WriteLine ($\"Caught: {exn}\");\r\n    }\r\n  }\r\n}\r\n\r\npublic struct MyStruct\r\n{\r\n    public static readonly int s_rvaIntField;\r\n    public const int s_Two = 42;\r\n\r\n    public MyStruct() { }\r\n    static MyStruct () {\r\n       FieldInfo fieldInfo = typeof(MyStruct).GetField(nameof(MyStruct.s_rvaIntField));\r\n       fieldInfo.SetValue(null, 37);\r\n    }\r\n}\r\n```\r\n\r\nThe output is:\r\n\r\n```\r\ns_rvaIntField is 37\r\nCaught: System.FieldAccessException: Cannot set initonly static field \u0027s_rvaIntField\u0027 after type \u0027MyStruct\u0027 is initialized.\r\n```\r\n\r\nThat is, the static constructor runs successfully and doesn\u0027t throw.  And then `Main` runs and it does throw.\r\n\r\nSo my naive suggestion below won\u0027t work exactly how CoreCLR works.  But we should still add a check for literal fields there.\r\n\r\n---\r\n\r\nSomewhere around here \r\n\r\nhttps://github.com/dotnet/runtime/blob/df0778dc9eb9f15c9270ba1a09d475253018e824/src/mono/mono/metadata/icall.c#L2134-L2138\r\n\r\nwe need to check for `type-\u003eattrs \u0026 FIELD_ATTRIBUTE_INIT_ONLY`  (and also for `FIELD_ATTRIBUTE_LITERAL` ! CoreCLR throws for that one too)  and disallow the assignment with a\r\n\r\n```c\r\nmono_error_set_generic_error (error, \"System\", \"FieldAccessException\", \"...\", field-\u003ename);\r\n```\r\n\r\nThe CoreCLR errors are:\r\n\r\n```\r\nSystem.FieldAccessException: Cannot set initonly static field \u0027s_rvaIntField\u0027 after type \u0027MyStruct\u0027 is initialized.\r\n```\r\nand\r\n```\r\nSystem.FieldAccessException: Cannot set a constant field.\r\n```\r\n",
                                           "updatedAt":  "2024-02-03T01:02:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5yvQ5M",
                                           "createdAt":  "2024-02-03T01:10:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "Also the example in the issue description isn\u0027t actually an RVA field.  For whatever reason, roslyn ends up emitting an initializer for that field into the cctor.  But with three elements in the array, you do get some RVA data.  But it\u0027s not for `s_rvaIntField` - but for `\u0027\u003cPrivateImplementationDetails\u003e\u0027.\u00274636993D3E1DA4E9D6B8F87B79E8F7C6D018580D52661950EABC3845C5897A4D\u0027`\r\n\r\n`s_rvaIntField` is initialized from the `\u003cPID\u003e` field in the cctor for `MyStruct`\r\n\r\nSharpLab: https://sharplab.io/#v2:EYLgxg9gTgpgtADwGwBYA0AXEBLANgHwAEAGAAkIEYA6AJRgDNcYwNsIA7AbgFgAoPvoQDMpAM4YoAVxakAsgE8AyhOkY+Abz6lt5EZSSlYAQwAmHXPNLZ2GANoBdMQH0AKgHcIANSO5JMUaQAvKS2FGgATPY8vDq65BQGxmbsFlY2Ds5QAG5GAJI2AGLYMLgmQSFh4WhCUQIxOsJySiosABQAlKTqpAC+fH28QA\r\n\r\nI guess we should also prevent someone from accessing `\u003cPrivateImplementationDetails\u003e` and assigning to `\u00274636993D3E1DA4E9D6B8F87B79E8F7C6D018580D52661950EABC3845C5897A4D\u0027` - so we should also check for `FIELD_ATTRIBUTE_HAS_FIELD_RVA` I guess",
                                           "updatedAt":  "2024-02-03T01:10:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5yvQ65",
                                           "createdAt":  "2024-02-03T01:11:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "/cc @mangod9 ",
                                           "updatedAt":  "2024-02-03T01:11:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5yvYL0",
                                           "createdAt":  "2024-02-03T02:14:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "Even this works:\r\n\r\n```csharp\r\npublic struct MyStruct\r\n{\r\n    public static readonly int s_rvaIntField;\r\n    public const int s_Two = 42;\r\n\r\n    public MyStruct() { }\r\n    static MyStruct () {\r\n\tSneakyInitializer();\r\n   }\r\n    [MethodImpl(MethodImplOptions.NoInlining)]\r\n    private static void SneakyInitializer()\r\n    {\r\n\tFieldInfo fieldInfo = typeof(MyStruct).GetField(nameof(MyStruct.s_rvaIntField));\r\n\tfieldInfo.SetValue(null, 37);\r\n \r\n    }\r\n}\r\n```\r\n\r\n@jkotas does CoreCLR use some runtime flag on a class with readonly static fields to decide if setting them is allowed?  Is it the same mechanism that detects if a static cctor is invoked cyclically? \r\n\r\nThat is, in mono it would be a check like this:\r\n```c\r\nstatic bool\r\nallow_init_only_set_value (MonoClassVTable *vtable)\r\n{\r\n   bool allow = false;\r\n   mono_type_initialization_lock ();\r\n   if (!vtable-\u003einitialized) {\r\n     TypeInitializatioinLock *lock = (TypeInitializationLock *)g_hash_table_lookup (type_initialization_hash, vtable);\r\n     allow = lock \u0026\u0026 mono_native_thread_id_equals (lock-\u003einitializing_tid, current_tid);\r\n  }\r\n  mono_type_initialization_unlock ();\r\n  return allow;\r\n}\r\n```",
                                           "updatedAt":  "2024-02-03T02:14:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5yv2rC",
                                           "createdAt":  "2024-02-03T05:52:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODVXmaA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "lambdageek",
                                                                               "createdAt":  "2024-02-03T12:38:09Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "HusanjonDeveloper",
                                                                               "createdAt":  "2024-02-04T12:32:21Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e @jkotas does CoreCLR use some runtime flag on a class with readonly static fields to decide if setting them is allowed? Is it the same mechanism that detects if a static cctor is invoked cyclically?\r\n\r\nThis issue is duplicate of https://github.com/dotnet/runtime/issues/37903\r\n\r\nYes, the CoreCLR check piggy backs on the mechanism that detects if a static cctor is invoked cyclically:\r\n1. Trigger the static initialization\r\n2. Check whether the static initialization finished. If the static initialization finished, block the field set and throw exception. If the static initialization is not finished, it means that we are inside the static initialization - allow the field set.",
                                           "updatedAt":  "2024-02-03T05:52:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ywfAK",
                                           "createdAt":  "2024-02-03T12:49:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "\u003e This issue is duplicate of #37903\n\nYes, thanks.\n\nI didn\u0027t take enough notes in #37903 - it looks like I thought we needed something in the JIT and possibly a separate flag. There might be two separate issues:\n\n1. A check for reflection - mostly as described by this issue.\n2. A check for the execution engines - need to try an IL sample that does a `stsfld` to an initonly field from a method that is not the cctor. I thought I saw some logic in method-to-ir to check for that case. But it\u0027s hard to verify with C# code as in Roslyn it\u0027s a compile time error to write to a read-only field outside the cctor",
                                           "updatedAt":  "2024-02-03T19:29:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ywqix",
                                           "createdAt":  "2024-02-03T15:31:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODVXmXA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "lambdageek",
                                                                               "createdAt":  "2024-02-03T19:28:56Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "HusanjonDeveloper",
                                                                               "createdAt":  "2024-02-04T12:32:18Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e A check for the execution engines - need to try an IL sample\r\n\r\nThat would be invalid IL. We do not try to detect and throw exceptions for all invalid IL in CoreCLR. Invalid IL is UB in CoreCLR.",
                                           "updatedAt":  "2024-02-03T15:31:11Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "RVA fields can be set in Mono; should throw FieldAccessException instead",
        "labels":  [
                       "runtime-mono",
                       "area-VM-reflection-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/99459",
        "createdAt":  "2024-03-08T17:46:58Z",
        "number":  99459,
        "author":  "M0n7y5",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-03T20:51:29Z",
        "body":  "### Description\n\nOn Windows \r\n![F1k99tEpDe](https://github.com/dotnet/runtime/assets/17201053/87bdcfcc-abc3-482d-a576-3a95c703cde6)\r\n\r\nOn Android (Android 14 API 34)\r\n![image](https://github.com/dotnet/runtime/assets/17201053/76d49e7e-8c63-4eae-ae4c-97d86a295fd0)\r\n\r\nI assume this is bug since i was not able to obtain any relevant information about this kind of behavior from the official docs:\r\nhttps://learn.microsoft.com/en-us/dotnet/api/system.type.guid?view=net-8.0#system-type-guid\n\n### Reproduction Steps\n\nJust do run this code on windows and android\r\n```csharp\r\nvar id = typeof(YourCustomType).GUID;\r\n```\n\n### Expected behavior\n\nI excpect non empty GUID values\n\n### Actual behavior\n\nGUID values are empty on android, possibly on other platforms too\n\n### Regression?\n\nno idea\n\n### Known Workarounds\n\nnope\n\n### Configuration\n\n.Net 8 MAUI Blazor Hybrid\r\nWindows 11 22H2 22621.3155\r\nx64\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOdwez4Q==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc52YlJD",
                                           "createdAt":  "2024-03-08T17:58:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "M0n7y5",
                                           "body":  "Same for:\r\nAndroid 10 API 29\r\nAndroid 9 API 28",
                                           "updatedAt":  "2024-03-08T17:58:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc52YnVy",
                                           "createdAt":  "2024-03-08T18:05:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODaFzvQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "M0n7y5",
                                                                               "createdAt":  "2024-03-11T10:03:43Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "MichalPetryka",
                                           "body":  "https://github.com/dotnet/runtime/blob/40ac297a1101ac293a1bae01f2e2e1556f7ec017/src/mono/System.Private.CoreLib/src/System/RuntimeType.Mono.cs#L2197-L2199\r\n\r\nMono seems to return an empty GUID for types without `GuidAttribute` instead of generating a random one at runtime.",
                                           "updatedAt":  "2024-03-08T18:05:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc52aJda",
                                           "createdAt":  "2024-03-08T23:33:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Perksey",
                                           "body":  "Is the behaviour of this actually defined anywhere where the attribute is not present?\r\n\r\nEDIT: helps if I read the full issue",
                                           "updatedAt":  "2024-03-08T23:33:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc52fv3G",
                                           "createdAt":  "2024-03-11T10:03:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "M0n7y5",
                                           "body":  "Would be nice to mention this behavior in docs tho. Anyways thx for clarification @MichalPetryka .",
                                           "updatedAt":  "2024-03-11T10:03:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc52iGcN",
                                           "createdAt":  "2024-03-11T15:01:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e I expect non empty GUID values\r\n\r\nDo you just expect non-empty GUID values? Or do you expect the GUIDs to be exactly the same between Windows and non-Windows? \r\n\r\n\u003e Would be nice to mention this behavior in docs tho.\r\n\r\nThis behavior is more like a bug. We typically do not document bugs.",
                                           "updatedAt":  "2024-03-11T15:01:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc52skhZ",
                                           "createdAt":  "2024-03-12T11:08:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "M0n7y5",
                                           "body":  "\u003e Do you just expect non-empty GUID values? Or do you expect the GUIDs to be exactly the same between Windows and non-Windows?\r\n\r\nI expect exactly what i wrote ... *I expect non empty GUID values*. That means i\u0027ll be happy with any values ... Well unique value per type to be specific.\r\n \r\n\u003e This behavior is more like a bug. We typically do not document bugs.\r\n\r\nIs it a bug tho? It looks like a mono feature/behavior. Basically strips down guids of not marked types by the GuidAttribute in order to reduce size. (i assume)",
                                           "updatedAt":  "2024-03-12T11:08:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc52svRS",
                                           "createdAt":  "2024-03-12T11:29:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "\u003e It looks like a mono feature/behavior\r\n\r\nYes, this answer (from 2011) agrees with you https://stackoverflow.com/a/8666656.\r\n\r\n(If possible, would be good to make Type.GUID output consistent across runtimes rather than creating a third kind of output)",
                                           "updatedAt":  "2024-03-12T11:29:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc520770",
                                           "createdAt":  "2024-03-13T05:23:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "`Type.GUID` has been designed for built-in COM interop. Any use of this property outside built-in COM interop is questionable.\r\n\r\nIt is not unusual to see people misusing Type.Guid as unique type identifier. (It is not actually unique type identifier. Nothing prevents two different .NET types to have the same COM GUID and there are valid scenarios where this can happen.) \r\n\r\nIn Native AOT, Type.Guid generates a random guid for types without explicitly specified one to make this sort of misuse \"work\".\r\n\r\n\u003e If possible, would be good to make Type.GUID output consistent across runtimes rather than creating a third kind of output)\r\n\r\nIt would require porting somewhat complicated algorithm used by built-in COM to generate the Guid. This algorithm creates the Guid by computing MD5 hash over the type name and all methods visible to built-in COM interop. This algorithm is not compatible with trimming, so it makes the consistency argument futile for runtime variants that are typically used with trimming.",
                                           "updatedAt":  "2024-03-13T05:23:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc521H8C",
                                           "createdAt":  "2024-03-13T06:08:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "PR with doc update: https://github.com/dotnet/dotnet-api-docs/pull/9715",
                                           "updatedAt":  "2024-03-13T06:08:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc524TEu",
                                           "createdAt":  "2024-03-13T13:57:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichalPetryka",
                                           "body":  "\u003e In Native AOT, Type.Guid generates a random guid for types without explicitly specified one to make this sort of misuse \"work\".\r\n\r\nPersonally I think Mono should follow this behaviour here, if the type has no `GuidAttribute` then it should get a generated GUID that\u0027s constant at least for as long the app is running (and unique among generated GUIDs).",
                                           "updatedAt":  "2024-03-13T13:57:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc53B7Ph",
                                           "createdAt":  "2024-03-14T09:18:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "M0n7y5",
                                           "body":  "Yeah it would be nice to have consistent behavior across platforms.",
                                           "updatedAt":  "2024-03-14T09:18:38Z"
                                       }
                                   ],
                         "totalCount":  11
                     },
        "title":  "System.Type.GUID is empty on Android",
        "labels":  [
                       "area-VM-reflection-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/107095",
        "createdAt":  "2024-08-28T16:44:07Z",
        "number":  107095,
        "author":  "buyaa-n",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-09-30T15:26:50Z",
        "body":  "In https://github.com/dotnet/runtime/pull/106745 some tests for generic attributes are added or modified. I asked to remove `[ActiveIssue(\"https://github.com/dotnet/runtime/issues/56887\", TestRuntimes.Mono)]` attributes from tests as https://github.com/dotnet/runtime/issues/56887 is resolved, most of the tests passed after removal except one:\r\n\r\n```cs\r\n    [Fact]\r\n    public static void GetCustomAttributesOnOpenGenericBaseTypeRetrievesDerivedAttributes()\r\n    {\r\n        Attribute[] attributes = Attribute.GetCustomAttributes(typeof(HasGenericAttribute), typeof(GenericAttribute\u003c\u003e));\r\n        Assert.Contains(typeof(DerivesFromGenericAttribute), attributes.Select(a =\u003e a.GetType()));\r\n    }\r\n```\r\nPlease check the test for details: https://github.com/dotnet/runtime/blob/main/src/libraries/System.Runtime/tests/System.Runtime.Tests/System/Attributes.cs\r\n\r\nFrom [failure log](https://helix.dot.net/api/2019-06-17/jobs/03ef8735-c361-475d-a67f-13afb8efdb35/workitems/System.Runtime.Tests/console):\r\n\r\n```log\r\n System.Tests.AttributeGetCustomAttributes.GetCustomAttributesOnOpenGenericBaseTypeRetrievesDerivedAttributes [FAIL]\r\n      Assert.Contains() Failure: Item not found in collection\r\n      Collection: [typeof(System.Tests.GenericAttribute\u003cstring\u003e), typeof(System.Tests.GenericAttribute\u003cint\u003e), typeof(System.Tests.GenericAttribute\u003cbool\u003e)]\r\n      Not found:  typeof(System.Tests.DerivesFromGenericAttribute)\r\n      Stack Trace:\r\n        /_/src/libraries/System.Runtime/tests/System.Runtime.Tests/System/Attributes.cs(296,0): at System.Tests.AttributeGetCustomAttributes.GetCustomAttributesOnOpenGenericBaseTypeRetrievesDerivedAttributes()\r\n        /_/src/mono/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.Mono.cs(22,0): at System.Reflection.MethodBaseInvoker.InterpretedInvoke_Method(Object obj, IntPtr* args)\r\n        /_/src/libraries/System.Private.CoreLib/src/System/Reflection/MethodBaseInvoker.cs(57,0): at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)\r\n```\r\nRelated to https://github.com/dotnet/runtime/issues/56887 and https://github.com/dotnet/runtime/pull/106745",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Attributes.GetCustomAttributesOnOpenGenericBaseTypeRetrievesDerivedAttributes test still fails on Mono",
        "labels":  [
                       "area-VM-reflection-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/108957",
        "createdAt":  "2024-10-17T05:48:37Z",
        "number":  108957,
        "author":  "ScarletKuro",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-05T22:02:12Z",
        "body":  "### Description\n\nHi\n\nI was creating this discussion https://github.com/dotnet/runtime/discussions/108950, but now I\u0027m convinced it\u0027s a bug.\n\nI want to access the following method from the `ComponentBase` class:\n\n```C#\nprotected Task DispatchExceptionAsync(Exception exception) =\u003e _renderHandle.DispatchExceptionAsync(exception);\n```\n\nI initially used the following `UnsafeAccessor`:\n\n```C#\n[UnsafeAccessor(UnsafeAccessorKind.Method, Name = \"DispatchExceptionAsync\")]\nprivate static extern Task DispatchExceptionAsync(ComponentBase component, Exception exception);\n...\nawait DispatchExceptionAsync(component, ex);\n```\n\nHowever, I encountered an exception saying that the method `DispatchExceptionAsync` could not be found:\n![Image](https://github.com/user-attachments/assets/36659428-b111-492f-8186-422b27d76b4a)\n\n**NB** This does work on normal runtime, but doesn\u0027t work on WASM runtime (Blazor).\n\nAs a workaround, I had to access the private `_renderHandle` directly:\n\n```C#\n[UnsafeAccessor(UnsafeAccessorKind.Field, Name = \"_renderHandle\")]\nprivate static extern ref RenderHandle RenderHandle(ComponentBase component);\n...\nawait RenderHandle(component).DispatchExceptionAsync(ex);\n```\nThis is the **correct** result:\n![Image](https://github.com/user-attachments/assets/59ada050-e487-41f0-b24d-f18b900e1917)\n\nComplete version of code: https://github.com/MudBlazor/MudBlazor/pull/10043\n\nI\u0027m unsure if it\u0027s a problem related with a `protected` visibility or the `UnsafeAccessorKind.Method` (I expect the first, since the `Method` probably should have tests).\n\nI did not find any limitations mentioned about WASM runtime in:\n\n- [UnsafeAccessorAttribute documentation](https://learn.microsoft.com/en-us/dotnet/api/system.runtime.compilerservices.unsafeaccessorattribute?view=net-8.0)\n- [GitHub documentation on UnsafeAccessors](https://github.com/dotnet/runtime/blob/main/docs/design/features/unsafeaccessors.md)\n\nI expected it to work with any visibility, as long as the signature is defined correctly. Considering that it does work on normal runtime, but not on WASM.\n\n### Reproduction Steps\n\n[BlazorApp2Bug.zip](https://github.com/user-attachments/files/17406667/BlazorApp2Bug.zip)\n\n1. Download the zip above\n2. Run\n3. Open the home page\n4. Click \"Not work\".\n5. See exception that method was not found\n\n(Has a button \"work\" that shows correct behavior)\n\n\n### Expected behavior\n\nNot to throw that it couldn\u0027t find the method and execute the method.\n\n### Actual behavior\n\nThrows exception that the method was not found:\n![Image](https://github.com/user-attachments/assets/1e46d45b-ec66-42bb-82c8-b07c6dd9cc55)\n\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\nUse only with `private` modifier if possible\n\n### Configuration\n\n.NET SDK:\n Version:           8.0.403\n Commit:            c64aa40a71\n Workload version:  8.0.400-manifests.019dc37d\n MSBuild version:   17.11.9+a69bbaaf5\n\nRuntime Environment:\n OS Name:     Windows\n OS Version:  10.0.19045\n OS Platform: Windows\n RID:         win-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\8.0.403\\\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOkP90Eg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6QP7eG",
                                           "createdAt":  "2024-10-17T17:21:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-10-17T17:21:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Q_sNT",
                                           "createdAt":  "2024-10-23T15:24:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "Is the method still missing if you disable trimming?\n.",
                                           "updatedAt":  "2024-10-23T15:24:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Q_3QS",
                                           "createdAt":  "2024-10-23T15:36:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ScarletKuro",
                                           "body":  "\u003e Is the method still missing if you disable trimming? .\n\n`\u003cPublishTrimmed\u003efalse\u003c/PublishTrimmed\u003e` in the csproj doesn\u0027t do anything. I tried to run the published app with that setting and still encountered the same error. I wouldn\u0027t expect it to work anyway, as it doesn\u0027t work in debug mode either. I forgot to specify that, sorry.",
                                           "updatedAt":  "2024-10-23T15:36:34Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "[WASM] UnsafeAccessor doesn\u0027t work in some circumstances.",
        "labels":  [
                       "arch-wasm",
                       "Priority:3",
                       "area-VM-reflection-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/112132",
        "createdAt":  "2025-02-04T17:10:49Z",
        "number":  112132,
        "author":  "filipnavara",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-02-10T17:11:46Z",
        "body":  "Consider the following code:\n```csharp\nusing System;\n\nConsole.WriteLine(typeof(object).Assembly.GetType(\"Mono.RuntimeStructs\") != null);\nConsole.WriteLine(Type.GetType($\"Foo/Bar, {typeof(Foo).Assembly.FullName}\"));\nConsole.WriteLine(Type.GetType($\"Foo+Bar, {typeof(Foo).Assembly.FullName}\"));\n\nclass Foo\n{\n    class Bar\n    {\n\n    }\n}\n```\n\nOn MonoVM it prints:\n```\ntrue\nFoo+Bar\nFoo+Bar\n```\n\nOn CoreCLR it prints:\n```\nfalse\n\nFoo+Bar\n```\n\nI thought the type name parser was unified as of .NET 9 but apparently there\u0027s still an inconsistency.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOnQ6MNw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6dCIhM",
                                           "createdAt":  "2025-02-04T17:11:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-reflection\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-02-04T17:11:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6dDlYr",
                                           "createdAt":  "2025-02-04T20:12:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "teo-tsirpanis",
                                           "body":  "Likely related to Mono test failures in #111598. https://github.com/dotnet/runtime/pull/111598/commits/e1f044c1d02d9690a8ea4868c780c21aec0d206a might fix it.",
                                           "updatedAt":  "2025-02-04T20:47:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6dDow3",
                                           "createdAt":  "2025-02-04T20:20:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e I thought the type name parser was unified as of .NET 9 but apparently there\u0027s still an inconsistency.\n\nMono type name parsers are not completely unified:\nhttps://github.com/dotnet/runtime/blob/37b1764e19aceaa545d8433c490b850538b8905a/src/mono/mono/metadata/reflection.c#L1682\nhttps://github.com/dotnet/runtime/blob/37b1764e19aceaa545d8433c490b850538b8905a/src/mono/System.Private.CoreLib/src/System/TypeSpec.cs#L337\n\nRelated/duplicate https://github.com/dotnet/runtime/issues/45033",
                                           "updatedAt":  "2025-02-04T20:20:20Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Resolution of nested type names is inconsistent between MonoVM and CoreCLR",
        "labels":  [
                       "area-VM-reflection-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/115425",
        "createdAt":  "2025-05-09T14:45:01Z",
        "number":  115425,
        "author":  "steveharter",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-06-30T14:48:33Z",
        "body":  "This is a placeholder for now for the open PR https://github.com/dotnet/runtime/pull/115345. This PR changes invoke so that it always goes through the IL Emit path unlike previously where it will go through the interpreted (c++ runtime) path for the first call to each method. Thus there is likely an underlying bug that needs to be fixed to account for both cases.\n\nNote that if the switch \"Switch.System.Reflection.ForceInterpretedInvoke\" is set, then the interpreted path is aways used. This is not the case for the failing test platforms.\n\nAlso, the test class has a namespace that starts with \"System.Reflection\" and that namespace is checked for in Mono to avoid reflection frames. See [`get_executing`](https://github.com/dotnet/runtime/blob/c201ad1d6bdf9b1a287748b44239c6aef8ecfb72/src/mono/mono/metadata/icall.c#L1507) and [get_caller_no_reflection](https://github.com/dotnet/runtime/blob/c201ad1d6bdf9b1a287748b44239c6aef8ecfb72/src/mono/mono/metadata/icall.c#L1539) which may or may not be related.\n\nThe test output for the failing interpreter and Wasm tests look like this:\n```\n[22:01:08] info: [FAIL] System.Reflection.Tests.AssemblyTests.GetCallingAssemblyInCctor\n[22:01:08] info: Assert.Equal() Failure: Values differ\n[22:01:08] info: Expected: System.Reflection.Tests, Version=10.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\n[22:01:08] info: Actual:   xunit.execution.dotnet, Version=2.9.2.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c\n[22:01:08] info:    at System.Reflection.Tests.AssemblyTests.TestGetCallingAssemblyInCctor.Run()\n[22:01:08] info:    at System.Object.InvokeStub_AssemblyTests.GetCallingAssemblyInCctor(IntPtr , Object )\n[22:01:08] info:    at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)\n```\n\nFailing configurations:\n```\nnet10.0-browser-Release-wasm-Mono_Release-WasmTestOnChrome-(Windows.Server2025.Amd64.Open)windows.server2025.a\nnet10.0-browser-Release-wasm-Mono_Release-WasmTestOnChrome-(Windows.Amd64.Server2022.Open)windows.amd64.serve\nnet10.0-linux-Debug-x64-Mono_Interpreter_Debug-Ubuntu.2204.Amd64.Open\nnet10.0-linux-Debug-x64-Mono_Interpreter_Debug-(Debian.13.Amd64.Open)Ubuntu.2204.Amd64.Open@mcr.microsoft.com/do\nnet10.0-linux-Debug-x64-Mono_Interpreter_Debug-(Centos.10.Amd64.Open)Ubuntu.2204.Amd64.Open@mcr.microsoft.com/d\nnet10.0-browser-Release-wasm-Mono_Release-WasmTestOnFirefox-(Ubuntu.2204.Amd64)Ubuntu.2204.Amd64.Open@mcr.micro\nnet10.0-browser-Release-wasm-Mono_Release-WasmTestOnChrome-(Ubuntu.2204.Amd64)Ubuntu.2204.Amd64.Open@mcr.m\nnet10.0-browser-Release-wasm-Mono_Release-WasmTestOnChrome-(Ubuntu.2204.Amd64)Ubuntu.2204.Amd64.Open@mcr.mic",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOs_lLtQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6z-Uu1",
                                           "createdAt":  "2025-06-30T14:48:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "@lewing if you think we should fix this in the short term, please feel free to change the milestone.",
                                           "updatedAt":  "2025-06-30T14:48:33Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Failing Mono test when `Assembly.GetCallingAssembly()` is used",
        "labels":  [
                       "area-VM-reflection-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/118568",
        "createdAt":  "2025-08-11T06:36:23Z",
        "number":  118568,
        "author":  "Venkad000",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-22T18:31:11Z",
        "body":  "### Description\n\nThis testcase in Roslyn [link](https://github.com/dotnet/roslyn/blob/main/src/Compilers/CSharp/Test/Emit/CodeGen/CodeGenFunctionPointersTests.cs#L12329) fails in Mono with a `System.InvalidCastException: Specified cast is not valid`. \nThis is a standalone reproducible. \n```using System;\nusing System.Collections;\nusing System.Reflection;\nusing System.Runtime.InteropServices;\n\nvar attr = typeof(C).CustomAttributes.Single(d =\u003e d.AttributeType == typeof(A));\nvar arg = attr.ConstructorArguments.Single();\nConsole.WriteLine(((IEnumerable)arg.Value).Cast\u003cCustomAttributeTypedArgument\u003e().SingleOrDefault().Value ?? \"null\");\n\nclass A : Attribute\n{\n    public unsafe A(params B\u003cdelegate*\u003cvoid\u003e[]\u003e.E[] a) { }\n} \n\nclass B\u003cT\u003e\n{\n    public enum E { }\n}\n\n[A(new B\u003cdelegate*\u003cvoid\u003e[]\u003e.E())]\nunsafe class C { }\n```\n\nThis is due to the difference in the way the constructorArguments are structured in Mono and CoreCLR which allows `(IEnumerable)arg.Value).Cast\u003cCustomAttributeTypedArgument\u003e()` to be done in CoreCLR but not on Mono.\n\nShould the way it is structured be changed in Mono to match that of CoreCLR or should the testcase be disabled on Mono?\n\n### Expected Output\n0\n\n### Actual Output\n\n```\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n   at System.Linq.Enumerable.CastICollectionIterator`1[[System.Reflection.CustomAttributeTypedArgument, System.Private.CoreLib, Version=10.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\n   at System.Linq.Enumerable.TryGetSingle[CustomAttributeTypedArgument](IEnumerable`1 source, Boolean\u0026 found)\n   at System.Linq.Enumerable.SingleOrDefault[CustomAttributeTypedArgument](IEnumerable`1 source)\n   at Program.\u003cMain\u003e$(String[] args) in /home/venkad/extracts/Program.cs:line 9\n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidCastException: Specified cast is not valid.\n   at System.Linq.Enumerable.CastICollectionIterator`1[[System.Reflection.CustomAttributeTypedArgument, System.Private.CoreLib, Version=10.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\n   at System.Linq.Enumerable.TryGetSingle[CustomAttributeTypedArgument](IEnumerable`1 source, Boolean\u0026 found)\n   at System.Linq.Enumerable.SingleOrDefault[CustomAttributeTypedArgument](IEnumerable`1 source)\n   at Program.\u003cMain\u003e$(String[] args) in /home/venkad/extracts/Program.cs:line 9\n```\n\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOvS2thQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc69JsTh",
                                           "createdAt":  "2025-08-11T06:37:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-linq\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-08-11T06:37:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc69Jsyh",
                                           "createdAt":  "2025-08-11T06:38:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Venkad000",
                                           "body":  "/cc: @saitama951 @uweigand @giritrivedi ",
                                           "updatedAt":  "2025-08-11T06:38:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc69La2F",
                                           "createdAt":  "2025-08-11T09:14:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "saitama951",
                                           "body":  "cc: @jkotas @steveisok @akoeplinger ",
                                           "updatedAt":  "2025-08-11T09:14:19Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "[Mono] Difference in the ConstructorArguments of a CustomAttribute between Mono and CoreCLR leads to a testcase failure in Roslyn.",
        "labels":  [
                       "area-VM-reflection-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/119292",
        "createdAt":  "2025-09-03T01:04:32Z",
        "number":  119292,
        "author":  "jkotas",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODOCUKA==",
                          "nodes":  [
                                        {
                                            "content":  "EYES",
                                            "user":  "Copilot",
                                            "createdAt":  "2025-09-03T01:04:47Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-09-03T05:32:28Z",
        "body":  "`CustomAttributeTypedArgument.Value` is documented to return `ReadOnlyCollection\u003cCustomAttributeTypedArgument\u003e` for arrays: https://learn.microsoft.com/en-us/dotnet/api/system.reflection.customattributetypedargument.value?view=net-9.0#remarks\n\nFor example, this is a standalone program which throws an InvalidCastException on Mono due this bug:\n\n```\nusing System;\nusing System.Collections;\nusing System.Reflection;\n\nusing System.Runtime.InteropServices;\n\nvar attr = typeof(C).CustomAttributes.Single(d =\u003e d.AttributeType == typeof(A));\nvar arg = attr.ConstructorArguments.Single();\nConsole.WriteLine(arg.ToString());\nclass A : Attribute\n{\n    public unsafe A(params B\u003cdelegate*\u003cvoid\u003e[]\u003e.E[] a) { }\n} \n\nclass B\u003cT\u003e\n{\n    public enum E { }\n}\n\n[A(new B\u003cdelegate*\u003cvoid\u003e[]\u003e.E())]\nunsafe class C { }\n```\n\n\nOutput on Mono due to this bug:\n```\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n   at System.Reflection.CustomAttributeTypedArgument.ToString(Boolean typed)\n   at System.Reflection.CustomAttributeTypedArgument.ToString()\n   at Program.\u003cMain\u003e$(String[] args) in /home/venkad/extracts/Program.cs:line 9\n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidCastException: Specified cast is not valid.\n   at System.Reflection.CustomAttributeTypedArgument.ToString(Boolean typed)\n   at System.Reflection.CustomAttributeTypedArgument.ToString()\n   at Program.\u003cMain\u003e$(String[] args) in /home/venkad/extracts/Program.cs:line 9\n\n```\n\nExpected output on CoreClr:\n\n```\nnew B`1+E[[System.Void()[], System.Private.CoreLib, Version=10.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]][1] { 0 }\n```\n\nOutput on Mono with the fix:\n```\nnew B`1+E[[System.Void()[], System.Private.CoreLib, Version=10.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]][1] { 0 }\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "[Mono] CustomAttributeTypedArgument.Value should return `ReadOnlyCollection\u003cCustomAttributeTypedArgument\u003e` for arrays",
        "labels":  [
                       "area-VM-reflection-mono"
                   ]
    }
]
