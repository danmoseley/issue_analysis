[
    {
        "url":  "https://github.com/dotnet/runtime/issues/5355",
        "createdAt":  "2016-03-15T14:33:07Z",
        "number":  5355,
        "author":  "gkhanna79",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-19T22:45:18Z",
        "body":  "",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Unify test runner for dev and Helix runs across all platforms",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/7903",
        "createdAt":  "2017-04-19T03:02:59Z",
        "number":  7903,
        "author":  "mazong1123",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-01-24T22:52:40Z",
        "body":  "I just went through https://github.com/dotnet/coreclr/blob/master/Documentation/building/debugging-instructions.md to setup my Visual Studio 2015 for debugging.\r\n\r\nI use latest night build dotnet tool to restore \u0026 publish following code:\r\n```cpp\r\nusing System;\r\n\r\nnamespace hl\r\n{\r\nclass Program\r\n{\r\n    static int Main(string[] args)\r\n    {\r\n        return 12;\r\n    }\r\n}\r\n}\r\n```\r\nI\u0027m able to run the program via `dotnet run` or `E:\\Personal\\github\\coreclr\\bin\\Product\\Windows_NT.x64.Debug\u003eCoreRun.exe E:\\Personal\\coreclrtest\\hl\\bin\\Debug\\netcoreapp2.0\\win7-x64\\publish\\hl.dll` successfully.\r\n\r\nHowever, if I run the debugger through Visual Studio 2015, it gave me following error:\r\n```\r\nUnhandled exception at 0x000007FEFD44A06D (KernelBase.dll) in CoreRun.exe: 0xE0434352 (parameters: 0xFFFFFFFF80070002, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x000007FEDCD70000).\r\n```\r\n\r\nAnd the stacktrace is (not so much useful as I cannot figure out which method was called through the address...):\r\n```\r\n\u003e\tKernelBase.dll!000007fefd44a06d()\tUnknown\r\n \tcoreclr.dll!000007fedcf046b3()\tUnknown\r\n \tcoreclr.dll!000007fedcefddab()\tUnknown\r\n \tcoreclr.dll!000007fedcf0f362()\tUnknown\r\n \tcoreclr.dll!000007fedce3e97a()\tUnknown\r\n \tCoreRun.exe!000000013fabba6a()\tUnknown\r\n \tCoreRun.exe!000000013fabd723()\tUnknown\r\n \tCoreRun.exe!000000013fb72d24()\tUnknown\r\n \tCoreRun.exe!000000013fb72bc7()\tUnknown\r\n \tCoreRun.exe!000000013fb72a8e()\tUnknown\r\n \tCoreRun.exe!000000013fb72d49()\tUnknown\r\n \t[External Code]\t\r\n\r\n```\r\n\r\nMy Visual Studio Debugging configuration is as following:\r\n`Command`:\r\n$(SolutionDir)..\\..\\product\\Windows_NT.$(Platform).$(Configuration)\\corerun.exe\r\n\r\n`Command Arguments`:\r\nE:\\Personal\\coreclrtest\\hl\\bin\\Debug\\netcoreapp2.0\\win7-x64\\hl.dll\r\n\r\n`Working Directory`:\r\n$(SolutionDir)..\\..\\product\\Windows_NT.$(Platform).$(Configuration)",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOccnSMQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI5NTk2NzIwMQ==",
                                           "createdAt":  "2017-04-20T23:32:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gkhanna79",
                                           "body":  "Is your directory, where you run CoreRun from under VS, containing the same set of binaries as in E:\\Personal\\github\\coreclr\\bin\\Product\\Windows_NT.x64.Debug?",
                                           "updatedAt":  "2017-04-20T23:32:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI5NjM3NjQ2MA==",
                                           "createdAt":  "2017-04-22T14:21:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mazong1123",
                                           "body":  "@gkhanna79 The Command setting for INSTALL project (which is the startup project) is `$(SolutionDir)....\\product\\Windows_NT.$(Platform).$(Configuration)\\corerun.exe` which is actually `E:\\Personal\\github\\coreclr\\bin\\Product\\Windows_NT.x64.Debug\\corerun.exe`. \r\n\r\nMy steps:\r\n1. Rebuild INSTALL project.\r\n2. Right click INSTALL project, then click \"Debug -\u003e Start new instance\".\r\n\r\nIt\u0027s strange that VS threw an exception. Is VS using this executable during debugging?\r\n![20170422222750](https://cloud.githubusercontent.com/assets/4554154/25305309/86435264-27ab-11e7-9b6f-276c5a7ffd19.png)\r\n",
                                           "updatedAt":  "2017-04-22T14:32:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMwODUxMDI4Mw==",
                                           "createdAt":  "2017-06-14T17:57:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "raizam",
                                           "body":  "Same issue here, window 7 too.",
                                           "updatedAt":  "2017-06-14T17:57:53Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwNTg3NTMxMQ==",
                                           "createdAt":  "2019-06-26T13:30:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ravilog",
                                           "body":  "facing the same issue. is there any update on this?",
                                           "updatedAt":  "2019-06-26T13:30:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5xydIx",
                                           "createdAt":  "2024-01-24T22:52:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivdiazsa",
                                           "body":  "Is this issue still relevant considering Windows 7 has been out of support since 2020? Or can we close it now?",
                                           "updatedAt":  "2024-01-24T22:52:39Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "corerun.exe unhandled execption at KernelBase.dll when debugging on Windows 7 x64",
        "labels":  [
                       "question",
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/9409",
        "createdAt":  "2017-12-08T00:04:06Z",
        "number":  9409,
        "author":  "michellemcdaniel",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-19T22:44:52Z",
        "body":  "",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "[Perf][Infrastructure] Turn outerloop tests back on for per-commit perf testing",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/10413",
        "createdAt":  "2018-05-29T21:53:00Z",
        "number":  10413,
        "author":  "BruceForstall",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-04-27T08:11:03Z",
        "body":  "Apparently the official builds for arm32 and arm64 do not implement IBC data optimization. We should implement this, to gain those benefits.\r\n\r\nThis issue should probably be in some other repo, but putting it here for tracking for now.\r\n\r\nRelated: https://github.com/dotnet/coreclr/issues/18181\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOQjPDrQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM5Mjk1ODA3Nw==",
                                           "createdAt":  "2018-05-29T21:53:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "cc @brianrob ",
                                           "updatedAt":  "2018-05-29T21:53:11Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM5Mjk1ODc0Mw==",
                                           "createdAt":  "2018-05-29T21:55:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "brianrob",
                                           "body":  "@valenis, @adiaaida we should look at what it will take to implement this and PGO for arm platforms.  I don\u0027t believe we do either of these for arm today.",
                                           "updatedAt":  "2018-05-29T21:55:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CL9Bq",
                                           "createdAt":  "2022-04-27T01:21:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "@davidwrighton @AndyAyersMS Do we have managed PGO for arm32/arm64 today?",
                                           "updatedAt":  "2022-04-27T01:21:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CL_Ke",
                                           "createdAt":  "2022-04-27T01:38:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AndyAyersMS",
                                           "body":  "I think @janvorli is working on this -- also native pgo, but likely only for arm64.",
                                           "updatedAt":  "2022-04-27T01:38:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CM8Ot",
                                           "createdAt":  "2022-04-27T08:11:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "I am working on enabling native PGO for arm64 and arm32 from the build system point of view and docker images. @davidwrighton will then complete it. I am not sure what are the plans for the managed PGO, but David would definitely know.",
                                           "updatedAt":  "2022-04-27T08:11:03Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "[arm32, arm64] Build framework with IBC data and hot/cold splitting",
        "labels":  [
                       "arch-arm32",
                       "arch-arm64",
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/10557",
        "createdAt":  "2018-06-21T16:57:34Z",
        "number":  10557,
        "author":  "AaronRobinsonMSFT",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-28T17:11:09Z",
        "body":  "There are multiple documents under https://github.com/dotnet/coreclr/tree/master/Documentation/building that describe how testing can be accomplished. These docs include building and running tests. However since we are using platform agnostic tools, the instructions should also be largely agnostic of platform. Minor command line differences, but that are basically limited to use the `.sh` vs `.cmd` file. There is a Workflow section under Documentation that has a placeholder file for this type of information - `RunningTests.md`.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOF8sqYA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM5OTE5MDYyNA==",
                                           "createdAt":  "2018-06-21T17:55:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "RussKeldorph",
                                           "body":  "@sbomer FYI.",
                                           "updatedAt":  "2018-06-21T17:55:54Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Consolidate testing guidelines",
        "labels":  [
                       "documentation",
                       "help wanted",
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/11980",
        "createdAt":  "2019-02-04T23:16:44Z",
        "number":  11980,
        "author":  "sandreenko",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-09-09T13:49:22Z",
        "body":  "It fails with:\r\n```\r\n[37m  Discovering: System.Runtime.Numerics.Tests (method display = ClassAndMethod, method display options = None)\r\n[m[37m  Discovered:  System.Runtime.Numerics.Tests (found 218 of 234 test cases)\r\n[m[37m  Starting:    System.Runtime.Numerics.Tests (parallel test collections = on, max threads = 4)\r\n[m[31;1m    System.Numerics.Tests.ToStringTest.RunRegionSpecificStandardFormatToStringTests [FAIL]\r\n[m[37m      Timed out after 60000ms waiting for remote process 17733\r\n[m[37m      Expected: True\r\n[m[37m      Actual:   False\r\n[m[30;1m      Stack Trace:\r\n[m[37m        /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm_cross_checked_ubuntu_corefx_baseline_prtest/_/fx/src/CoreFx.Private.TestUtilities/src/System/Diagnostics/RemoteExecutorTestBase.cs(350,0): at System.Diagnostics.RemoteExecutorTestBase.RemoteInvokeHandle.Dispose(Boolean disposing)\r\n[m[37m        /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm_cross_checked_ubuntu_corefx_baseline_prtest/_/fx/src/System.Runtime.Numerics/tests/BigInteger/BigIntegerToStringTests.cs(191,0): at System.Numerics.Tests.ToStringTest.RunRegionSpecificStandardFormatToStringTests()\r\n[m[33;1m   System.Runtime.Numerics.Tests: [Long Running Test] \u0027System.Numerics.Tests.BigIntegerConstructorTest.RunCtorByteArrayTests\u0027, Elapsed: 00:04:13\r\n[m[37m  Finished:    System.Runtime.Numerics.Tests\r\n[m[37m=== TEST EXECUTION SUMMARY ===\r\n[m[37m   System.Runtime.Numerics.Tests  Total: 2078, Errors: 0, Failed: 1, Skipped: 0, Time: 558.665s\r\n[m[m/ssd/j/workspace/dotnet_coreclr/master/jitstress/arm_cross_checked_ubuntu_corefx_baseline_tst_prtest/_/fx/artifacts/bin/tests/System.Runtime.Numerics.Tests/netcoreapp-Linux-Release-arm\r\n```\r\n\r\n[ci example](https://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/arm_cross_checked_ubuntu_corefx_jitstress2_tst_prtest/25/)",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOHgcAaw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4NjM3NTY0OA==",
                                           "createdAt":  "2019-04-24T18:39:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "Related: https://github.com/dotnet/coreclr/issues/23242",
                                           "updatedAt":  "2019-04-24T18:39:04Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4NzIxODQxNQ==",
                                           "createdAt":  "2019-04-26T22:18:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "Seems to only happen with JitStress=2?\r\n\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm/job/jitstress/job/arm_cross_checked_ubuntu_corefx_jitstress2_tst/62/consoleFull",
                                           "updatedAt":  "2019-04-26T22:18:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwMzY3NzM0OA==",
                                           "createdAt":  "2019-06-19T18:29:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "echesakov",
                                           "body":  "This test has failed with timeout on Linux/x64: https://mc.dot.net/#/user/coreclr-ci/pr~2Fdotnet~2Fcoreclr~2Frefs~2Fpull~2F25240~2Fmerge/test~2Ffunctional~2Fcorefx~2F/20190619.18/workItem/System.Runtime.Numerics.Tests/wilogs\r\n\r\nLocal run shows that the test alone takes 17.7s on Windows_NT/x64 and 49.7s on Linux/x64 with Checked coreclr runtime and Release corefx.\r\n\r\nThe test assembly takes significantly less time when running in corefx PRs (i.e. Release coreclr) (e.g. https://mc.dot.net/#/user/dotnet-bot/pr~2Fdotnet~2Fcorefx~2Frefs~2Fpull~2F38683~2Fmerge/test~2Ffunctional~2Fcli~2Finnerloop~2F/20190619.17/workItem/System.Runtime.Numerics.Tests/wilogs) and there is no visible time difference on Linux vs Windows.\r\n\r\n",
                                           "updatedAt":  "2019-06-19T18:29:35Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwMzc3MjIwOQ==",
                                           "createdAt":  "2019-06-19T22:37:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "RussKeldorph",
                                           "body":  "@echesakovMSFT Could you disable the test since it sounds like just another incompatibility between CoreFX and checked runtime?",
                                           "updatedAt":  "2019-06-19T22:37:52Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwMzc3NTMzOQ==",
                                           "createdAt":  "2019-06-19T22:52:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "echesakov",
                                           "body":  "@RussKeldorph It\u0027s been disabled already - I updated the issue as a part of triaging exercise (https://github.com/dotnet/coreclr/pull/25240)",
                                           "updatedAt":  "2019-06-19T22:52:18Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "[Linux] System.Numerics.Tests.ToStringTest.RunRegionSpecificStandardFormatToStringTests fails with timeout",
        "labels":  [
                       "bug",
                       "os-linux",
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/13187",
        "createdAt":  "2019-08-01T01:10:04Z",
        "number":  13187,
        "author":  "VincentBu",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-09-09T13:49:20Z",
        "body":  "**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-corefx-jitstress2-jitstressregs/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcorefx~2F/20190731.1/workItem/System.Runtime.Loader.Tests/analysis/xunit/System.Runtime.Loader.Tests.ContextualReflectionTest~2FTypeGetTypeStringMultiLoadedAssemblyIsolated\r\n\r\n**Log:**\r\n```\r\nSystem.NullReferenceException : Object reference not set to an instance of an object.\r\n```\r\n\r\n**Stack Trace:**\r\n```\r\n   at System.Runtime.Loader.Tests.ContextualReflectionTest.TypeGetTypeTestCase(Func`1 func, Assembly nullExpected, Assembly defaultExpected, Assembly isolatedExpected) in /_/src/System.Runtime.Loader/tests/ContextualReflection.cs:line 661\r\n   at System.Runtime.Loader.Tests.ContextualReflectionTest.TypeGetTypeStringMultiLoadedAssemblyIsolated() in /_/src/System.Runtime.Loader/tests/ContextualReflection.cs:line 810\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOHte63w==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUxNzM0OTQ0OA==",
                                           "createdAt":  "2019-08-01T15:58:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "Another case that fails in many stress modes. Another possible corefx/coreclr mismatch? @stephentoub @danmosemsft ",
                                           "updatedAt":  "2019-08-01T15:58:10Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUxNzM1NzUyNg==",
                                           "createdAt":  "2019-08-01T16:18:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Git log says these tests are @sdmaclea ",
                                           "updatedAt":  "2019-08-01T16:18:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUxNzQ1NDU1OQ==",
                                           "createdAt":  "2019-08-01T20:55:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sdmaclea",
                                           "body":  "If I remember correctly these tests were disabled in corefx when they were broken by an arcade infrastructure change which removed the ability to reference assemblies but not deploy them.  The tests assume certain assemblies are not in the root directory and therefore not in the TPA list.  ",
                                           "updatedAt":  "2019-08-01T20:55:15Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Test Failed: System.NullReferenceException : Object reference not set to an instance of an object.",
        "labels":  [
                       "os-windows",
                       "arch-x64",
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/13210",
        "createdAt":  "2019-08-05T20:38:08Z",
        "number":  13210,
        "author":  "jashook",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-09-09T13:45:54Z",
        "body":  "build-test.sh still unfortunately uses build tools. On OSX strangely we are intermitedenly seeing:\r\n\r\n```\r\nUsing RID osx-x64 for BuildTools native tools\r\nInitializing BuildTools...\r\nERROR: An error occurred when trying to initialize the tools.\r\nPlease check the detailed log that follows.\r\nRunning: /Users/vsts/agent/2.155.1/work/1/s/init-tools.sh\r\nRunning: /Users/vsts/agent/2.155.1/work/1/s/.dotnet/dotnet restore \"/Users/vsts/agent/2.155.1/work/1/s/init-tools.msbuild\" --no-cache --packages /Users/vsts/agent/2.155.1/work/1/s/.packages --source https://dotnet.myget.org/F/dotnet-buildtools/api/v3/index.json /p:BuildToolsPackageVersion=3.0.0-preview4-04022-01 /p:ToolsDir=/Users/vsts/agent/2.155.1/work/1/s/Tools\r\n```\r\n\r\nSee: https://dev.azure.com/dnceng/public/_build/results?buildId=295344",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOIUZj9A==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUxODM5MTg1NQ==",
                                           "createdAt":  "2019-08-05T20:42:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jashook",
                                           "body":  "/cc @dotnet/coreclr-infra ",
                                           "updatedAt":  "2019-08-05T20:42:50Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1ODI2MDkzMg==",
                                           "createdAt":  "2019-11-25T17:34:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@jashook I assume this can be closed?",
                                           "updatedAt":  "2019-11-25T17:34:59Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1ODI2MTIzNg==",
                                           "createdAt":  "2019-11-25T17:35:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jashook",
                                           "body":  "This is still being tracked in our release branches.",
                                           "updatedAt":  "2019-11-25T17:35:44Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "[Release/3.0|Release/3.1][OSX] Failure to initialize build tools.",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/13458",
        "createdAt":  "2019-09-23T12:43:15Z",
        "number":  13458,
        "author":  "rayslava",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCBzE9Q==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "dkson95",
                                            "createdAt":  "2021-11-09T15:34:09Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2024-09-04T03:07:17Z",
        "body":  "We work on sanitization of whole Tizen OS and therefore try to cover as many code as we can with Address Sanitizer.\r\n\r\nCurrently we came to sanitization of native libraries which are used only by managed applications running on CoreCLR.\r\n\r\nCurrently we have setup of two parts:\r\n\r\n1. Additional build of patched Address Sanitizer run-time with \"switchable\" interceptors.\r\n\r\n2. Patched CoreCLR version with changed native calls generation behavior.\r\n\r\nAddress Sanitizer patch is required to add additional API to activate or deactivate ASan interception of library calls (e.g. tracing `malloc()`/`free()`) in order to get appropriate performance of CoreCLR engine and to avoid reports about CoreCLR internals\u0027 issues: our primary customer wants to get reports about their code only, CoreCLR testing is a separate task. Additional build is required since this API introduces a performance overhead to each library call, which we don\u0027t want to see for the rest of applications.\r\n\r\nCoreCLR version has changes in JIT part in generator of calls from managed code to native libraries, a wrapper is added which calls ASan API to switch tracing on when code from library is executed and turn it off during return back to managed code.\r\n\r\nNow we only detect issues inside native libraries, but our next target is annotate CoreCLR allocator, integrate it with ASan and catch bugs for cases when buffer allocated by managed code is passed to native library and corrupted there. Accordingly to our customers, who develop apps for Tizen, this case is rather hard to debug and consequences of such errors are rather bad.\r\n\r\nCurrently we use GCC to build Tizen OS, so our changes are introduced only to GCC ASan run-time inside `libasan.so`. Technically it\u0027s possible to add it to Clang run-time as well, but it\u0027ll require recompilation of target libraries since Clang ASan uses static linkage and we\u0027re not sure that someone really needs this support. If you are interested in this kind of testing as well, we could introduce this mode in a conditional build.\r\n\r\ncc @alpencolt",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOiL9hRA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzNDA4MzMyMQ==",
                                           "createdAt":  "2019-09-23T12:47:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alpencolt",
                                           "body":  "cc @jkotas ",
                                           "updatedAt":  "2019-09-23T12:47:36Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzNDE4MTMzMw==",
                                           "createdAt":  "2019-09-23T16:38:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AaronRobinsonMSFT",
                                           "body":  "@rayslava It would be helpful to see an example of the kind of change needed. The cost of implementing and maintaining the hooks would determine the acceptance of the work. This is something we should definitely consider and a small example would help quicken that decision on work.",
                                           "updatedAt":  "2019-09-23T16:38:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzNDE5MzYwOA==",
                                           "createdAt":  "2019-09-23T17:09:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCBzEvg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "dkson95",
                                                                               "createdAt":  "2021-11-09T15:33:53Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkotas",
                                           "body":  "@rayslava Thank you for writing down this proposal. \r\n\r\nIf I understand this right, you would like to use the special ASAN allocator when managed code interop with unmanaged code, but keep using the regular allocator for the runtime itself.\r\n\r\nWould it make sense to re-reroute all `malloc`/`free` done for interop (e.g. the calls to `Marshal.AllocHGlobal` / `Marshal.FreeHGlobal` or malloc/free calls done by the interop marshaling layer) to the special ASAN allocator? It would avoid the need for the switching that will be hard to get right 100% of the time, and maybe even avoid a need for a special build of the runtime.",
                                           "updatedAt":  "2019-09-23T17:09:13Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2MTA3MDY0Nw==",
                                           "createdAt":  "2019-12-03T09:09:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "xiangzhai",
                                           "body":  ":mips-interest",
                                           "updatedAt":  "2019-12-03T09:09:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc45eXu-",
                                           "createdAt":  "2021-11-09T15:32:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dkson95",
                                           "body":  "Hello @all\r\nRecently, I\u0027ve noticed the related issue on : https://developercommunity.visualstudio.com/t/address-sanitizer-not-working-on-dll-pro/1561504?entry=problem\u0026space=62 .\r\n\r\nAnd, I hope this feature adoption can help to fix and support native libraries(.dll) - memory corruption detection called by dotnet apps.\r\n\r\n@rayslava how do you think of above feedback case ?",
                                           "updatedAt":  "2021-11-09T15:32:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6IpWxJ",
                                           "createdAt":  "2024-08-16T01:13:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fforjan",
                                           "body":  "@jkoritzinsky  or @agocke  as you have work on the  Enable Windows runs of AddressSanitizer #95758, do you have any update on this, we would like to run some .net tests which consume our native library and we would like the native library to be instrumented with ASAN but it seems there is no way we could do that ?",
                                           "updatedAt":  "2024-08-16T01:13:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Iuj3U",
                                           "createdAt":  "2024-08-16T17:42:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODuhA-Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "fforjan",
                                                                               "createdAt":  "2024-08-16T19:45:54Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "We do not have support for only instrumenting native libraries and not instrumenting the runtime today.\r\n\r\nIf you want to instrument everything, you can build the runtime with the `-fsanitize address` flag to enable ASAN for the whole runtime. Then you can load an instrumented native library and things will work.",
                                           "updatedAt":  "2024-08-16T17:42:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Iv2FE",
                                           "createdAt":  "2024-08-16T20:57:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fforjan",
                                           "body":  "@jkoritzinsky  thanks for the idea !",
                                           "updatedAt":  "2024-08-16T20:57:20Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "Address Sanitizer support for native libraries",
        "labels":  [
                       "question",
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/13656",
        "createdAt":  "2019-10-27T01:07:09Z",
        "number":  13656,
        "author":  "danmoseley",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-05-05T16:39:47Z",
        "body":  "If you are working on corelib you probably want a checked corelib in order for debuggability. But currently this requires you use a checked coreclr, which is slow, even though often you don\u0027t need coreclr debuggability.\r\n\r\nIt would be nice to enumerate what specific work would be required to make it possible to mix checked corelib with release coreclr. @jkotas?\r\n\r\nhttps://github.com/dotnet/consolidation/pull/3#discussion_r337341354\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOIJasoA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0NjY1NTQwMA==",
                                           "createdAt":  "2019-10-27T02:15:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "The one problem that I know about is that r2r code in CoreLib is runtime-flavor specific. This would be best fixed as side-effect of planned r2r work (the key details in dotnet/coreclr#27413 , cc @MichalStrehovsky ). \r\n\r\nThere are likely more problems beyond that. The easiest way to find out is by running CoreFX tests with debug corelib + release runtime.",
                                           "updatedAt":  "2019-10-28T16:08:40Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0Njc0NTUwNA==",
                                           "createdAt":  "2019-10-27T23:18:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "I thought when I tried it in the past I got crashes. But perhaps I was not using the pure IL image.",
                                           "updatedAt":  "2019-10-27T23:18:28Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Enable release CLR + checked Corelib",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/97",
        "createdAt":  "2019-11-18T15:24:01Z",
        "number":  97,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-10-11T22:17:10Z",
        "body":  "We should get CoreClr to the same state as Libraries and Installer currently are. That means that the various helper script in CoreClr\u0027s root should be migrated to MSBuild logic.\r\n\r\nVarious advantages of that strategy:\r\n- Common logic that doesn\u0027t need to be duplicated (sh/cmd)\r\n- Consistency with Libraries and Installer\r\n\r\ncc @dotnet/runtime-infrastructure ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOTAQeAA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1NTA3Mjk1Mw==",
                                           "createdAt":  "2019-11-18T15:43:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "I can probably take this one.",
                                           "updatedAt":  "2019-11-18T15:43:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1NTEwNjQwMg==",
                                           "createdAt":  "2019-11-18T16:53:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOA2L8GA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2019-11-18T16:54:16Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "4creators",
                                                                               "createdAt":  "2019-11-29T14:03:31Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "jashook",
                                           "body":  "This needs more discussion before we move forward with this.",
                                           "updatedAt":  "2019-11-18T16:53:47Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1NTEwNzc0MA==",
                                           "createdAt":  "2019-11-18T16:56:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "I agree with that but I don\u0027t think this isn\u0027t blocked by any other work. Let\u0027s start the discussion.",
                                           "updatedAt":  "2019-11-18T16:56:31Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1NzMxNTc2Nw==",
                                           "createdAt":  "2019-11-21T23:17:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Is there a way today to upfront restore everything in CoreClr? Also how do I just build tests without anything else? (assuming everything else is already done)",
                                           "updatedAt":  "2019-11-21T23:17:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1NzMzNDcyMQ==",
                                           "createdAt":  "2019-11-22T00:33:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jashook",
                                           "body":  "Unfortunately, there is no current way to do either of those things. ",
                                           "updatedAt":  "2019-11-22T00:34:07Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU2NTg1NzAyNw==",
                                           "createdAt":  "2019-12-15T23:10:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "Related discussion: https://github.com/dotnet/arcade/pull/4533#issuecomment-564311387",
                                           "updatedAt":  "2019-12-15T23:10:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3OTc4NzY0NA==",
                                           "createdAt":  "2021-02-16T11:52:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lukas-lansky",
                                           "body":  "https://github.com/dotnet/arcade/issues/6560 is currently open and can be used to prioritize any changes you need from core-eng.",
                                           "updatedAt":  "2021-02-16T11:52:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3OTg2NTM3Nw==",
                                           "createdAt":  "2021-02-16T14:18:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "I think the only item left is consolidating the vs setup scripts and consume one from arcade. Here are _some_ of the places in dotnet/runtime where we handle setting up VS / locating the Dev Command Prompt and invoking it:\r\n- https://github.com/dotnet/runtime/blob/master/src/coreclr/setup_vs_tools.cmd\r\n- https://github.com/dotnet/runtime/blob/372248b9b4e3e7c08e0c0aa53d4a94f826fe273b/src/libraries/Native/build-native.cmd#L46-L93\r\n- probably also one in installer and/or mono\r\n\r\n@lukas-lansky is that something that core-eng can help with?",
                                           "updatedAt":  "2021-02-16T14:18:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5MAC87",
                                           "createdAt":  "2022-10-11T18:05:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "Going over the backlog of issues assigned to me, this seems worth addressing at some point. @ViktorHofer - do you happen to know whether a VS setup script already exists in Arcade or whether it\u0027s a part of this task to put it there?",
                                           "updatedAt":  "2022-10-11T18:05:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5MASBw",
                                           "createdAt":  "2022-10-11T19:00:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCts7kg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2022-10-12T08:55:24Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkotas",
                                           "body":  "@trylek There is no VS setup script in Arcade. As first step, we should unify these two VS setup scripts:\r\n\r\nhttps://github.com/dotnet/runtime/blob/main/eng/native/init-vs-env.cmd\r\nhttps://github.com/dotnet/runtime/blob/main/src/coreclr/build-runtime.cmd\r\n\r\nBonus points for fixing https://github.com/dotnet/runtime/issues/76516 as part of it.",
                                           "updatedAt":  "2022-10-11T19:00:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5MBB4A",
                                           "createdAt":  "2022-10-11T22:17:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCtrVvQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkotas",
                                                                               "createdAt":  "2022-10-11T22:19:08Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "trylek",
                                           "body":  "Thanks Jan for clarification. That seems straightforward indeed; I think this might be an ideal task for the quieter end of the year after Thanksgiving ;-).",
                                           "updatedAt":  "2022-10-11T22:17:10Z"
                                       }
                                   ],
                         "totalCount":  11
                     },
        "title":  "Move coreclr script logic into MSBuild logic and reuse Arcade logic",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/1737",
        "createdAt":  "2020-01-14T23:58:30Z",
        "number":  1737,
        "author":  "BruceForstall",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-09-05T18:06:58Z",
        "body":  "*Initial cost estimate*: 2 days\r\n*Initial contacts*: @trylek, @ViktorHofer \r\n\r\nDoing a test run using src\\coreclr\\runtest.cmd generates a TestRun.html and TestRun.xml file in artifacts\\log. These filenames should also have OS/arch/build flavor so as to be unique w.r.t. different test runs, e.g.: TestRun_Windows_NT_x64_Checked.xml.\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOJVxc6Q==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyNjgxMDA4OQ==",
                                           "createdAt":  "2020-05-11T16:28:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jashook",
                                           "body":  "@BruceForstall before doing this work we should verify that the results would still correctly be parsed by xunit.",
                                           "updatedAt":  "2020-05-11T16:28:39Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "coreclr test run files TestRun.html and TestRun.xml should be os/arch/flavor distinguished",
        "labels":  [
                       "help wanted",
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/1924",
        "createdAt":  "2020-01-19T18:21:34Z",
        "number":  1924,
        "author":  "simplejackcoder",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-01-21T20:57:05Z",
        "body":  "`debuginfod` is the symbol server equivalent for elf/dbg files.\r\n\r\nSeems like requires gcc. another reason why Coreclr should be compilable with gcc.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOm1ArcQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU3NjA0MTc4Ng==",
                                           "createdAt":  "2020-01-19T20:10:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "Aside: src/coreclr, and src/libraries (and soon src/installer: #1753) do compile with gcc, in addition to clang: https://github.com/dotnet/runtime/blob/1cb1285408579d53a31bd7659faba53eae3d4262/eng/native/gen-buildsys.sh#L66-L67",
                                           "updatedAt":  "2020-01-19T20:10:59Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU3NjA0NTg1MA==",
                                           "createdAt":  "2020-01-19T20:54:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "simplejackcoder",
                                           "body":  "That is good news. Is this a new change? If it possible can we compare benchmark? I feel GCC is what dotnet should use to ship binary since gcc in my experience generates more efficient and icache friendly code.",
                                           "updatedAt":  "2020-01-19T20:54:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU3NjA1NjU2Mg==",
                                           "createdAt":  "2020-01-19T22:51:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "it is relatively new: the support was added around v3.0 release to bring up coreclr on more platforms like smartos (solaris based); where llvm toolchain is not readily available (e.g. lldb is still not available on pkgsrc for smartos).\r\n\r\nsome caveats:\r\n\r\n1. currently, top level `:/build.sh`, `:/coreclr.sh`, `:/libraries.sh` and `:/installer.sh` do not accept compiler arguments `-gcc` and it defaults to `-clang`, so we invoke internal scripts individually: `:/src/coreclr/build.sh -gcc`, `:/src/installer/corehost/build.sh -gcc`, `:/src/libraries/Native/build-native.sh -gcc`. Or set environment variables, e.g.\r\n`CLR_CC=$(command -v gcc) CLR_CXX=$(command -v g++) ./coreclr.sh` (or `gcc` for cxx on centos).\r\n\r\n2. gcc 9.0 has become more stricter towards memaccess usages for non-trivial types, which is being slowly fixed. meanwhile, we can bypass the warning using this suppression:\r\n\r\n```sh\r\nsrc/coreclr/build.sh -gcc -cmakeargs -DCMAKE_CXX_FLAGS=-Wno-class-memaccess\r\n```",
                                           "updatedAt":  "2020-01-19T22:51:11Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU4MDYwNDg0Mw==",
                                           "createdAt":  "2020-01-31T06:40:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOA6fdSg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "D3-LucaPiombino",
                                                                               "createdAt":  "2020-02-01T14:22:36Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "am11",
                                           "body":  "update: we can now pass various arguments from top-level scripts for native compilation:\r\n\r\n```sh\r\ncd runtime\r\n\r\n# compile coreclr, installer and libraries using gcc 7\r\n./build.sh --gcc7 --cmakeargs -DFeatureX=1 -cmakeargs -DFeatureY=0\r\n\r\n# compile only coreclr using clang\r\n./build.sh --subsetCategory coreclr --clang --cmakeargs -DFeatureX=1 -cmakeargs -DFeatureY=0\r\n```",
                                           "updatedAt":  "2020-01-31T06:40:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6bUCtx",
                                           "createdAt":  "2025-01-21T20:56:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dqsully",
                                           "body":  "I would love to see this implemented for .NET core symbols as [many Linux tools already include debuginfod support](https://sourceware.org/elfutils/Debuginfod.html).",
                                           "updatedAt":  "2025-01-21T20:56:53Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Can coreclr compile their code with debuginfod?",
        "labels":  [
                       "question",
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/33068",
        "createdAt":  "2020-03-02T20:57:16Z",
        "number":  33068,
        "author":  "jashook",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOA9ghqg==",
                          "nodes":  [
                                        {
                                            "content":  "HEART",
                                            "user":  "Gnbrkm41",
                                            "createdAt":  "2020-03-07T17:55:58Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2022-07-26T20:32:20Z",
        "body":  "This will remove the last use of the xunit console runner and get us closer to the libraries testing infrastructure.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOR0jDMg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5MzY2ODEwMg==",
                                           "createdAt":  "2020-03-02T23:01:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "This issue can be split into a few steps:\r\n\r\n- [x] Update our Helix work items to also pull down a `dotnet` CLI with the correlation payload. (This is a feature of the Helix SDK that we can opt-in to.)\r\n- [x] Change our Helix work items to run `dotnet xunit.console.dll \u003cparams\u003e` instead of `corerun xunit.console.dll \u003cparams\u003e`\r\n- [ ] Change our Helix work items to run `dotnet test \u003cparams\u003e`. This step requires us to be able to pull down an SDK for each platform instead of just a runtime.\r\n\r\nI don\u0027t believe we build an SDK for all supported platforms yet, so we may want to do this piecemeal instead of jumping to the last step.",
                                           "updatedAt":  "2020-05-15T01:41:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5NDg5MDY3Nw==",
                                           "createdAt":  "2020-03-04T22:19:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "Items 1 and 2 are tracked as part of #33185",
                                           "updatedAt":  "2020-03-04T22:19:16Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0NDU5OTUxMQ==",
                                           "createdAt":  "2020-12-14T17:41:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBZ6TRQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkoritzinsky",
                                                                               "createdAt":  "2020-12-14T17:46:49Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "janvorli",
                                           "body":  "It is important to keep the ability to run individual tests without dotnet test (or any other way that results in spawning a child process for running the test).  lldb doesn\u0027t support following fork and switching to debugging the child process. There is a way using multiple instances of lldb, but it is extremely clunky and painful.",
                                           "updatedAt":  "2020-12-14T17:41:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HR9S2",
                                           "createdAt":  "2022-07-26T19:25:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "agocke",
                                           "body":  "Is this work done with the new XUnitWrapper harness? Or does that still require an exe?",
                                           "updatedAt":  "2022-07-26T19:25:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HSMMy",
                                           "createdAt":  "2022-07-26T20:32:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "The new harness will still require an exe, but there are future plans to add `dotnet test` integration with it. We can move this to Future, as that\u0027s a long time away and the new model moves us away from the XUnit Console Runner (the more important goal of this issue).",
                                           "updatedAt":  "2022-07-26T20:32:17Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Move coreclr testing to dotnet test",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/33070",
        "createdAt":  "2020-03-02T20:58:46Z",
        "number":  33070,
        "author":  "jashook",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-04-02T00:45:34Z",
        "body":  "This will allow us to reduce the amount of testing we use on our linux arm64/arm32 machines to help with capacity. ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOJD9wMw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5NjgxMDEyNg==",
                                           "createdAt":  "2020-03-09T22:30:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "@jashook Can you please add more details here about this issue? What kind of filtering? Where? How will it reduce machine utilization? Which testing is doing linux arm32/arm64 testing currently that shouldn\u0027t be?\r\n",
                                           "updatedAt":  "2020-03-09T22:30:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5Nzg0NTMzMg==",
                                           "createdAt":  "2020-03-11T20:15:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jashook",
                                           "body":  "@BruceForstall we currently do not have enough machines to run arm64 and arm32 linux on all runtime/* changes. This is left open purposely to define a new set of changes which can reduce the amount of work we send to these machines.",
                                           "updatedAt":  "2020-03-11T20:15:56Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwODEzNjM1OA==",
                                           "createdAt":  "2020-04-02T23:04:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sdmaclea",
                                           "body":  "If we are simply talking moving from inner to outer loop doesn\u0027t seem too risky. we could afford to be aggressive.  Even doing more filtering for other platforms x64...\r\n\r\nWhen I was doing arm64 testing in a previous job...  I was collecting run time info.  \r\n+ Trimming the long tail made a fairly significant time difference.  Vast majority of tests completed in seconds.  The tail was surprisingly long.  Disabling the long outliers made a huge difference.  Most of the outliers were in flaky mutex/threading tests. dropping the +2sigma wall time tests made a substantial difference.\r\n+ The coreclr test runner at the time did not saturate our 48 core server, so I had to revise test dispatch to keep at least 48 tests running at a time. I did include my runner in a CoreCLR patch, but I doubt it was ever used.\r\n\r\nIf we wanted to trim/filter these tests, it seems like identifying the criteria would be important.\r\n\r\n+ Stability - how often does it cause false failures\r\n+ Test coverage value\r\n      + How often a PRs caused a regression\r\n      + Uniqueness correlation to other tests.  Use correlation of PR regression data?\r\n      + Arch Specific coverage - How often does it fail in a PR w/o failing on other architectures\r\n+ Test CPU time\r\n+ Test Wall time\r\n+ JIT optimization value? \r\n\r\nAssigning a value metric from these individual metrics is probably subjective.\r\n\r\n",
                                           "updatedAt":  "2020-04-02T23:04:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwODEzNzI2Nw==",
                                           "createdAt":  "2020-04-02T23:07:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sdmaclea",
                                           "body":  "Also I spent most of my early `arm64` testing with coreclr.  When I started `corefx` testing there was very little the needed to be fixed.  It seems to imply that many/most of the `corefx`/`libraries` tests are not arch specific. Testing `arm64`/`arm` on libraries jobs might be able to be drastically reduced.",
                                           "updatedAt":  "2020-04-02T23:07:12Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Add more specific filtering for arm and arm64 testing",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/33384",
        "createdAt":  "2020-03-09T16:06:24Z",
        "number":  33384,
        "author":  "abock",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBjkn5Q==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "szyb",
                                            "createdAt":  "2020-05-14T12:31:06Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "JannemanDev",
                                            "createdAt":  "2021-03-16T07:37:09Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2022-04-19T17:13:08Z",
        "body":  "When running .NET Core apps (`netcoreapp3.1`) using the latest generic` linux-x64` .NET Core SDK on [Synology\u0027s DSM Linux distribution](https://www.synology.com/en-us/dsm), the following is dumped to the console on app start:\r\n\r\n```\r\napp-name: /lib/libstdc++.so.6: no version information available (required by app-name)\r\napp-name: /lib/libstdc++.so.6: no version information available (required by app-name)\r\napp-name: /lib/libstdc++.so.6: no version information available (required by app-name)\r\napp-name: /lib/libstdc++.so.6: no version information available (required by app-name)\r\napp-name: /lib/libstdc++.so.6: no version information available (required by app-name)\r\n```\r\n\r\nIt\u0027d be lovely if this could be avoided. It\u0027s rather noisy, but so far seems to be just that - everything seems functional otherwise.\r\n\r\n| Hardware | OS | Target Framework | .NET Core SDK |\r\n| - | - | - | - |\r\n| Synology RS-815+ | DSM 6.2.2-24922 Update 4 | `netcoreapp3.1`| [3.1.102](https://download.visualstudio.microsoft.com/download/pr/57e63f03-ebdf-4c22-96ff-2b85dc70cf7f/988576869e82a80f4a97ca5a733a5295/dotnet-sdk-3.1.102-linux-x64.tar.gz) |\r\n\r\n```\r\naaron@lardtub:/lib$ ls -alh libstdc++.so.6*\r\nlrwxrwxrwx 1 root root   19 Jan 29 05:27 libstdc++.so.6 -\u003e libstdc++.so.6.0.20\r\n-r-xr-xr-x 1 root root 881K May  9  2019 libstdc++.so.6.0.20\r\n```\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOQbzQIA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5NjYyMTcyNQ==",
                                           "createdAt":  "2020-03-09T16:06:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Dotnet-GitSync-Bot",
                                           "body":  "I couldn\u0027t add an area label to this Issue.\r\n\r\nCheckout [this](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md) page to find out which area owner to ping, or please add exactly one area label to help train me in the future.",
                                           "updatedAt":  "2020-03-09T16:06:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5NjczMzY4MQ==",
                                           "createdAt":  "2020-03-09T19:22:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "It looks like this has nothing to do with dotnet per-se, please see:\r\nhttps://stackoverflow.com/questions/137773/what-does-the-no-version-information-available-error-from-linux-dynamic-linker",
                                           "updatedAt":  "2020-03-09T19:22:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5Njc0NTI5Ng==",
                                           "createdAt":  "2020-03-09T19:47:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "abock",
                                           "body":  "It\u0027s a toolchain issue that produces the generic `linux-x64` binaries of .NET Core.",
                                           "updatedAt":  "2020-03-09T19:47:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyNzUzNDc2Nw==",
                                           "createdAt":  "2020-05-12T19:06:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "szyb",
                                           "body":  "@abock Did you deal with this error in DSM?",
                                           "updatedAt":  "2020-05-12T19:06:13Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyODUwNzM0Mw==",
                                           "createdAt":  "2020-05-14T09:15:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB-Qziw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Danielku15",
                                                                               "createdAt":  "2021-05-05T17:36:36Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "vaynewang",
                                                                               "createdAt":  "2021-05-19T07:08:09Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "gklymov",
                                                                               "createdAt":  "2021-10-14T08:25:01Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "szyb",
                                           "body":  "I workaround this problem with following steps (all as root):\r\n1) copy `libstdc++.so.6.0.22` from my debian distro, and put it to `/lib` folder in DSM \r\n2) `chmod 555 libstdc++.so.6.0.22`\r\n3) change symbolic link `libstdc++.so.6` to this file (`ln -f -s libstdc++.so.6.0.22 libstdc++.so.6`)\r\n4) run `dotnet --info` \r\nIt run without the error.\r\n\r\nBut isn\u0027t the real issue here is not to lack of the file libstdc++.so.6.0.22 in dotnet runtime binaries?",
                                           "updatedAt":  "2020-05-14T09:15:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyODU3OTA2OQ==",
                                           "createdAt":  "2020-05-14T11:44:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "\u003e But isn\u0027t the real issue here is not to lack of the file libstdc++.so.6.0.22 in dotnet runtime binaries?\r\n\r\nThere is a set of 3rd party prerequisite libraries that dotnet depends on and that need to be installed on the target system. The distro maintainers are much better positioned to ensure that the libraries are up to date with possible security fixes. And some of them we would not be able to carry in our packages anyways due to their licenses.",
                                           "updatedAt":  "2020-05-14T11:44:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyODU5OTMyNg==",
                                           "createdAt":  "2020-05-14T12:25:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "szyb",
                                           "body":  "@janvorli Ok. It sounds reasonable.\r\nI only think that requirements page (https://docs.microsoft.com/en-us/dotnet/core/install/dependencies?pivots=os-linux\u0026tabs=netcore31#install-net-core-for-supported-alpine-linux-versions-64-bit) should have minimum version number included besides on the name of the package as it does matter.",
                                           "updatedAt":  "2020-05-14T12:25:13Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyODYxMjU4Nw==",
                                           "createdAt":  "2020-05-14T12:51:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBEOMgw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "szyb",
                                                                               "createdAt":  "2020-05-14T13:17:30Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@szyb you are right, we should list the minimal required versions there.",
                                           "updatedAt":  "2020-05-14T12:51:00Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyOTk5NjM3Ng==",
                                           "createdAt":  "2020-05-18T07:25:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "szyb",
                                           "body":  "Just to let you know: in DSM 7.0 this library will be in version 6.0.24 (info from Synology)",
                                           "updatedAt":  "2020-05-18T07:26:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1NTE3MTc1Mg==",
                                           "createdAt":  "2020-07-07T22:35:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBJrGfQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "szyb",
                                                                               "createdAt":  "2020-07-08T04:23:18Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "joperezr",
                                           "body":  "Added documentation label and will keep this open to track the work of adding minimum versions to our dependencies in the docs.",
                                           "updatedAt":  "2020-07-07T22:35:16Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgwMDAzNjExNw==",
                                           "createdAt":  "2021-03-16T07:50:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "JannemanDev",
                                           "body":  "Just for reference... the same happened to me running a simple \u0027Hello World\u0027 `.NET Core v5` console application (`linux-x64 build`) deployed on my Synology DS720+ running `DSM 6.2.3-25426 Update 3`",
                                           "updatedAt":  "2021-03-16T07:51:16Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0Mzg0NjUwOQ==",
                                           "createdAt":  "2021-05-19T07:57:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vaynewang",
                                           "body":  "\u003e I workaround this problem with following steps (all as root):\r\n\u003e \r\n\u003e 1. copy `libstdc++.so.6.0.22` from my debian distro, and put it to `/lib` folder in DSM\r\n\u003e 2. `chmod 555 libstdc++.so.6.0.22`\r\n\u003e 3. change symbolic link `libstdc++.so.6` to this file (`ln -f -s libstdc++.so.6.0.22 libstdc++.so.6`)\r\n\u003e 4. run `dotnet --info`\r\n\u003e    It run without the error.\r\n\u003e \r\n\u003e But isn\u0027t the real issue here is not to lack of the file libstdc++.so.6.0.22 in dotnet runtime binaries?\r\n\r\nthank you ,it is useful.",
                                           "updatedAt":  "2021-05-19T07:57:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5BigYg",
                                           "createdAt":  "2022-04-14T19:44:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "szyb",
                                           "body":  "Meanwhile, the .NET 6.0.4 Runtime is available as SPK package from Synocommunity, available to both: DSM 6 \u0026 7! \r\n\r\nref: https://github.com/SynoCommunity/spksrc/pull/4976\r\n",
                                           "updatedAt":  "2022-04-14T19:44:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5BjJ90",
                                           "createdAt":  "2022-04-15T00:14:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nWhen running .NET Core apps (`netcoreapp3.1`) using the latest generic` linux-x64` .NET Core SDK on [Synology\u0027s DSM Linux distribution](https://www.synology.com/en-us/dsm), the following is dumped to the console on app start:\r\n\r\n```\r\napp-name: /lib/libstdc++.so.6: no version information available (required by app-name)\r\napp-name: /lib/libstdc++.so.6: no version information available (required by app-name)\r\napp-name: /lib/libstdc++.so.6: no version information available (required by app-name)\r\napp-name: /lib/libstdc++.so.6: no version information available (required by app-name)\r\napp-name: /lib/libstdc++.so.6: no version information available (required by app-name)\r\n```\r\n\r\nIt\u0027d be lovely if this could be avoided. It\u0027s rather noisy, but so far seems to be just that - everything seems functional otherwise.\r\n\r\n| Hardware | OS | Target Framework | .NET Core SDK |\r\n| - | - | - | - |\r\n| Synology RS-815+ | DSM 6.2.2-24922 Update 4 | `netcoreapp3.1`| [3.1.102](https://download.visualstudio.microsoft.com/download/pr/57e63f03-ebdf-4c22-96ff-2b85dc70cf7f/988576869e82a80f4a97ca5a733a5295/dotnet-sdk-3.1.102-linux-x64.tar.gz) |\r\n\r\n```\r\naaron@lardtub:/lib$ ls -alh libstdc++.so.6*\r\nlrwxrwxrwx 1 root root   19 Jan 29 05:27 libstdc++.so.6 -\u003e libstdc++.so.6.0.20\r\n-r-xr-xr-x 1 root root 881K May  9  2019 libstdc++.so.6.0.20\r\n```\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eabock\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`documentation`, `os-linux`, `area-Infrastructure-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003eFuture\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-04-15T00:14:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5BjKUP",
                                           "createdAt":  "2022-04-15T00:18:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "@janvorli @hoyosjs is there anything actionable to do with how the we build native binaries here?",
                                           "updatedAt":  "2022-04-15T00:18:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5BkDBg",
                                           "createdAt":  "2022-04-15T08:41:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "The only thing we could do is update https://docs.microsoft.com/en-us/dotnet/core/install/linux-alpine et al to say \"these are the libs, with SO name and version\". The warning is emitted because libstdc++.so.6 in said distro is not built with symbol versioning and the linker warns about it, it assumes it will work since the dynamic dependency is satisfies with something with the same SO name. A recent 3.1 image only needs CXXABI_1.3,CXXABI_1.3.7, and GLIBCXX_3.4. Our build system has those and it\u0027s using libstdc++.so.6.0.19. From our dynamic deps on linux x64 3.1.21 and 6.0.0 I can see the following:\r\n\r\n```\r\n@CXXABI_1.3                                                                                                                                                                                                       @CXXABI_1.3.7                                                                                                                                                                                                     @GCC_3.0                                                                                                                                                                                                          @GLIBC_2.12                                                                                                                                                                                                       @GLIBC_2.14                                                                                                                                                                                                       @GLIBC_2.2.5                                                                                                                                                                                                      @GLIBC_2.3                                                                                                                                                                                                        @GLIBC_2.3.2                                                                                                                                                                                                      @GLIBC_2.3.3                                                                                                                                                                                                      @GLIBC_2.3.4                                                                                                                                                                                                      @GLIBC_2.4                                                                                                                                                                                                        @GLIBC_2.6\r\n@GLIBC_2.9\r\n@GLIBCXX_3.4\r\n```\r\n\r\nSo it\u0027s libc.so.6 (2.14+), libgcc_s.so.1 (3+), libstdc++.so.6  (CXXABI_1.3.7 and GLIBCXX_3.4), librt.so.1, libdl.so.2, libm.so.6, and then the others that are loaded through other mechanisms like libssl. A more thorough list is:\r\n\r\nOn 3.1, as stated by ldd\r\n```\r\nlibasn1.so.8\r\nlibbrotlicommon.so.1\r\nlibbrotlidec.so.1\r\nlibcom_err.so.2\r\nlibcrypto.so.1.1\r\nlibcrypt.so.1\r\nlibc.so.6\r\nlibcurl.so.4\r\nlibdl.so.2\r\nlibffi.so.7\r\nlibgcc_s.so.1\r\nlibgmp.so.10\r\nlibgnutls.so.30\r\nlibgssapi_krb5.so.2\r\nlibgssapi.so.3\r\nlibhcrypto.so.4\r\nlibheimbase.so.1\r\nlibheimntlm.so.0\r\nlibhogweed.so.5\r\nlibhx509.so.5\r\nlibidn2.so.0\r\nlibk5crypto.so.3\r\nlibkeyutils.so.1\r\nlibkrb5.so.26\r\nlibkrb5.so.3\r\nlibkrb5support.so.0\r\nliblber-2.4.so.2\r\nlibldap_r-2.4.so.2\r\nliblttng-ust.so.0\r\nlibm.so.6\r\nlibnettle.so.7\r\nlibnghttp2.so.14\r\nlibp11-kit.so.0\r\nlibpsl.so.5\r\nlibpthread.so.0\r\nlibresolv.so.2\r\nlibroken.so.18\r\nlibrtmp.so.1\r\nlibrt.so.1\r\nlibsasl2.so.2\r\nlibsqlite3.so.0\r\nlibssh.so.4\r\nlibssl.so.1.1\r\nlibstdc++.so.6\r\nlibtasn1.so.6\r\nlibunistring.so.2\r\nlibwind.so.0\r\nlibz.so.1\r\n```\r\n\r\n6.0.0:\r\n```\r\nlibc.so.6\r\nlibdl.so.2\r\nlibgcc_s.so.1\r\nliblttng-ust.so.0\r\nlibm.so.6\r\nlibpthread.so.0\r\nlibrt.so.1\r\nlibstdc++.so.6\r\nlibz.so.1\r\n```\r\n",
                                           "updatedAt":  "2022-04-15T08:55:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5BuY5c",
                                           "createdAt":  "2022-04-19T13:48:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "\u003e The only thing we could do is update https://docs.microsoft.com/en-us/dotnet/core/install/linux-alpine et al to say \"these are the libs, with SO name and version\"\r\n\r\nI am not sure how this is related to Alpine. MUSL doesn\u0027t version symbols in shared libraries.",
                                           "updatedAt":  "2022-04-19T13:48:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5BvNAg",
                                           "createdAt":  "2022-04-19T17:13:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "Wrong link, meant to be glibc based Linux ",
                                           "updatedAt":  "2022-04-19T17:13:08Z"
                                       }
                                   ],
                         "totalCount":  18
                     },
        "title":  "/lib/libstdc++.so.6: no version information available on Synology DSM Linux",
        "labels":  [
                       "documentation",
                       "os-linux",
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/38574",
        "createdAt":  "2020-06-29T19:52:29Z",
        "number":  38574,
        "author":  "jashook",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODEtKLA==",
                          "nodes":  [
                                        {
                                            "content":  "HEART",
                                            "user":  "vcsjones",
                                            "createdAt":  "2020-06-29T20:02:47Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "MarcoRossignoli",
                                            "createdAt":  "2020-06-29T20:53:36Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "Gnbrkm41",
                                            "createdAt":  "2020-06-30T05:06:23Z"
                                        },
                                        {
                                            "content":  "ROCKET",
                                            "user":  "MichalStrehovsky",
                                            "createdAt":  "2020-06-30T08:52:50Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "AaronRobinsonMSFT",
                                            "createdAt":  "2020-07-01T21:27:30Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "elinor-fung",
                                            "createdAt":  "2020-07-01T23:30:26Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "strangeman375",
                                            "createdAt":  "2020-07-06T05:38:31Z"
                                        },
                                        {
                                            "content":  "ROCKET",
                                            "user":  "strangeman375",
                                            "createdAt":  "2020-07-06T05:38:34Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "slang25",
                                            "createdAt":  "2020-07-19T20:54:25Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "danmoseley",
                                            "createdAt":  "2020-10-01T15:11:15Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "danmoseley",
                                            "createdAt":  "2020-10-01T15:11:18Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ViktorHofer",
                                            "createdAt":  "2020-12-07T22:55:21Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "CyrusNajmabadi",
                                            "createdAt":  "2022-06-20T17:24:28Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "CyrusNajmabadi",
                                            "createdAt":  "2022-06-20T17:24:28Z"
                                        },
                                        {
                                            "content":  "ROCKET",
                                            "user":  "CyrusNajmabadi",
                                            "createdAt":  "2022-06-20T17:24:30Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "huoyaoyuan",
                                            "createdAt":  "2024-07-25T04:46:34Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "sdcb",
                                            "createdAt":  "2025-06-25T07:08:16Z"
                                        }
                                    ],
                          "totalCount":  17
                      },
        "updatedAt":  "2024-07-29T09:31:54Z",
        "body":  "Currently this is only used in a few places. We can easily translate the scripts which use it to either `powershell` or `msbuild` to drop the build dependency.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhm9rCg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1MzgyNTY4Ng==",
                                           "createdAt":  "2020-07-05T00:14:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBJi2ug==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "wfurt",
                                                                               "createdAt":  "2020-07-07T05:49:36Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "Given that the generation also needs to work in the native build, msbuild and powershell might not be the best candidates. How often do the generated sources change? (or how often do the inputs change)\r\n\r\n@sywhang @josalem ",
                                           "updatedAt":  "2020-07-05T00:14:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1NDYxNzQ4OA==",
                                           "createdAt":  "2020-07-07T05:49:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wfurt",
                                           "body":  "This may increase difficulty of porting to new OSes and architectures where one could build natives parts without .NET presence and build managed assemblies on supported platforms. \r\n@am11 @janvorli   ",
                                           "updatedAt":  "2020-07-07T05:49:26Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1NDY4MDgwMQ==",
                                           "createdAt":  "2020-07-07T08:16:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBMZtlw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "omajid",
                                                                               "createdAt":  "2020-08-04T21:01:50Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "am11",
                                           "body":  "Agreed. Considering python scripts which are responsible to run coreclr tests; from portability viewpoint:\r\n\r\n* powershell is not a good candidate because in addition to the set of dependencies required to build dotnet/runtime, it depends on OMI and other native components which are not available on all platforms.\r\n* msbuild is not a good candidate because it depends on parts of class libraries, which might not be implemented on target system at the time when developer needs to run tests. (especially System.Diagnostics.Process and System.IO.File could be the tough ones depending on the platform..)\r\n\r\nNote that today we need to even patch those python scripts to skip calling SDK (which is used for determining whether or not to rebuild the test project); in order to run the tests from pre- cross-compiled packages and assume there is no SDK or auxiliary dotnet library present. I think this is something which can be properly implemented in runtest.py and friends to not look for SDK at all. If we instead switch to  MSBuild for running tests, then it will simply become impossible to run coreclr tests on a new platform, before porting all libraries that SDK and MSBuild depend on.",
                                           "updatedAt":  "2020-07-07T08:16:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1NDgzMzY5Nw==",
                                           "createdAt":  "2020-07-07T12:49:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "I also don\u0027t like moving to powershell or msbuild because of the reason that @am11 mentioned. ",
                                           "updatedAt":  "2020-07-07T12:49:11Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2MDQxMDk3NQ==",
                                           "createdAt":  "2020-07-18T02:37:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB8P40Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "chrisoverzero",
                                                                               "createdAt":  "2020-07-18T05:27:31Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "Joe4evr",
                                                                               "createdAt":  "2020-07-18T08:03:01Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "HaraGabi",
                                                                               "createdAt":  "2020-07-18T09:39:36Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "jnm2",
                                                                               "createdAt":  "2020-07-18T17:45:27Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "karelz",
                                                                               "createdAt":  "2020-07-18T20:24:40Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "sywhang",
                                                                               "createdAt":  "2020-07-20T19:39:09Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "CyrusNajmabadi",
                                                                               "createdAt":  "2021-01-19T20:11:23Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "PathogenDavid",
                                                                               "createdAt":  "2021-09-29T12:11:46Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  8
                                                         },
                                           "author":  "juliusfriedman",
                                           "body":  "Just use the system shell, what complex works needs to be done? \r\n\r\nStop parsing YML and just do things like normal people...\r\n\r\nThere is sed, awk, grep, what else do you need? On windows you have powershell.",
                                           "updatedAt":  "2020-07-18T02:38:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2MDQxMTQzOQ==",
                                           "createdAt":  "2020-07-18T02:41:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "@juliusfriedman  unlike shell scripts, Python works on all platforms.\r\n\r\nPlease be careful with your tone.",
                                           "updatedAt":  "2020-07-18T02:41:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2MDQ3Mzg2NQ==",
                                           "createdAt":  "2020-07-18T12:10:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB8P5NQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "chrisoverzero",
                                                                               "createdAt":  "2020-07-18T16:27:50Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "jnm2",
                                                                               "createdAt":  "2020-07-18T17:45:30Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "Joe4evr",
                                                                               "createdAt":  "2020-07-18T18:33:10Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "karelz",
                                                                               "createdAt":  "2020-07-18T20:25:20Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "sywhang",
                                                                               "createdAt":  "2020-07-20T19:39:14Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "PathogenDavid",
                                                                               "createdAt":  "2021-09-29T12:12:30Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  6
                                                         },
                                           "author":  "juliusfriedman",
                                           "body":  "\u003e @juliusfriedman unlike shell scripts, Python works on all platforms.\r\n\u003e \r\n\u003e Please be careful with your tone.\r\n\r\nNot all, and also corclr does also by virtue of the same fact? n/m moot point.\r\n\r\nLook at the other comments in this thread, compared to mine what did I say that was so bad?\r\n\r\nPlease, Show me 1 script I can\u0027t rewrite using pure cmd or bash and I will `watch` my tone, rather observe the extent of my written words such they hopefully not be interpreted with tone as you have.\r\n\r\nI bet its the YML related ones and I bet I could make something to split them up easily enough... [here](https://stackoverflow.com/questions/2524928/dos-batch-iterate-through-a-delimited-string)... or [here](https://stackoverflow.com/questions/127318/is-there-any-sed-like-utility-for-cmd-exe)\r\n[Heres another](https://stackoverflow.com/questions/23600775/split-string-with-string-as-delimiter/23600870)\r\nI think we want new lines up to the point we reach the token which was at line 1 or the last parsed line for the YML 📦 \r\n\r\nHeres some for other systems besides windows: [Specifically for yml](https://stackoverflow.com/questions/5014632/how-can-i-parse-a-yaml-file-from-a-linux-shell-script)\r\n\r\n```bash\r\nsed -e \u0027s/:[^:\\/\\/]/=\"/g;s/$/\"/g;s/ *=/=/g\u0027 file.yaml \u003e file.sh\r\n```",
                                           "updatedAt":  "2020-07-18T20:37:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0MDIyODQxMA==",
                                           "createdAt":  "2020-12-07T22:49:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Posting @jkotas\u0027 comment about the python dependency from another thread: https://github.com/dotnet/runtime/pull/39052#issuecomment-656709021\r\n\r\n\u003e For bootstrapping build, we can have a file with empty event firing stubs checked in (or we can be a very trivial script written to generate this). And once we are fully bootstrapped, the full eventing code generator can be written in C#.\r\n\r\n\u003e The regular coreclr test execution should not need python. It is using xunit as the driver.\r\nWe can have the python script to run tests around for bootstrapping, but we do not need to be forcing the python dependency on everybody for that.",
                                           "updatedAt":  "2020-12-07T22:49:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6GaWwR",
                                           "createdAt":  "2024-07-29T06:36:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "huoyaoyuan",
                                           "body":  "I\u0027m interested to look into this.\r\n\r\nFor the eventing case I have some questions. Python is used for generating cpp stubs to fire events. Will native build run again with managed SDK bootstrapped? Is there any way to detect it?",
                                           "updatedAt":  "2024-07-29T06:36:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Gajq6",
                                           "createdAt":  "2024-07-29T07:09:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "@huoyaoyuan it\u0027s discussed in another thread and see the reaction of the owners: https://github.com/dotnet/runtime/issues/57784#issuecomment-946116352. I have a few better ideas about it since then incorporating their concerns, one of them is looking promising (uses cmake without any external tool).",
                                           "updatedAt":  "2024-07-29T07:09:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Ga9Wr",
                                           "createdAt":  "2024-07-29T07:38:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "huoyaoyuan",
                                           "body":  "\u003e input: we define a static header with our events and groups and keep it in sync with `src/coreclr/vm/ClrEtwAll.man` (manually at first, as it\u0027s only a few times a year we add/modify events; if we have more time, we can use XmlPeek msbuild task to update the header files when msbuild is present .. because cmake doesn\u0027t support xml parsing)\r\n\r\nYeah, this is exactly what I\u0027m considering. The xml parsed result for `ClrEtwAll.man` can be checked in with macro-friendly format, and cpp sources can use macros. The file could be re-generated when msbuild is available, or dry-run in CI to avoid forgetting to check-in.\r\n\r\nThe referenced thread looks focusing on another topic about LTTNG versioning. I think the generation mechanism change can be orthogonal to that.\r\n\r\n",
                                           "updatedAt":  "2024-07-29T07:38:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6GbCUU",
                                           "createdAt":  "2024-07-29T07:44:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "It is about generating it from python, that\u0027s where I did my experiment with XSLT transformation etc. I have been waiting for a few things in cmake which will make this translation very smooth. Lets not rush here..",
                                           "updatedAt":  "2024-07-29T07:44:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6GbIcr",
                                           "createdAt":  "2024-07-29T07:58:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "huoyaoyuan",
                                           "body":  "\u003e I have been waiting for a few things in cmake which will make this translation very smooth.\r\n\r\nAny more context here? I can\u0027t find anything related to xml parsing in cmake.\r\n\r\nIndeed there are two strategies: parse the xml in native tool available during bootstrap (probably cmake), or check-in the parsed result by other tool available. I can\u0027t see the former in foreseeable future. Even if it\u0027s available, we still have to wait Linux distros to adopt it.",
                                           "updatedAt":  "2024-07-29T07:58:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6GbcE8",
                                           "createdAt":  "2024-07-29T08:38:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "\u003e or check-in the parsed result by other tool available\r\n\r\nI had its PoC working like four years ago with XSLT used in msbuild task, but then read the area owner want it to run every time including when msbuild is not available, so I moved on to do something else.\r\n\r\nRight away, there is no single component which can cover it.\r\n\r\nThere is a [feature request](https://gitlab.kitware.com/cmake/cmake/-/issues/26097), which is only a few weeks old.\r\n\r\nWhat we have at our disposal today is `string(JSON)` support in the minimum version of cmake required by dotnet/runtime across the board (feature was added in 3.19 and our minimum requirement is 3.20). If you don\u0027t want to wait for `string(XML)`, a future-proof implementation could be to create `eng/transform-clretw.proj` that does the xml-\u003ejson STJ thing within a code fragment in that proj file (without necessarily having .cs/.csproj or other ceremony), and run it to convert ClrEtwAll.man to ClrEtwAll.man.json. That will only run when msbuild is available (which is most of the times) and get skipped when directly invoking internal scripts like src/clr/build-runtime etc. We have several examples of \"dummy\" moving parts in that build mode like cdac and dummy event provider etc. anyway, so whatever state of ClrEtwAll.man.json would be there by the time cmake is invoked from gen-buildsys script, it will just use it to write the headers with macros.",
                                           "updatedAt":  "2024-07-29T09:23:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Gb2sK",
                                           "createdAt":  "2024-07-29T09:31:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "huoyaoyuan",
                                           "body":  "\u003e I had its PoC working like four years ago with XSLT used in msbuild task, but then read the area owner want it to run every time including when msbuild is not available, so I moved on to do something else.\r\n\r\nI see the rationale on this. But I really want to make python unavailable in my environments. It\u0027s not a default of Windows either.\r\n\r\n\u003e There is a [feature request](https://gitlab.kitware.com/cmake/cmake/-/issues/26097), which is only a few weeks old.\r\n\r\nWell it\u0027s still far from being realistic.\r\n\r\nAnyway, the approach on this should be up to decision for area owners. I\u0027ve got the context around this. Thanks.",
                                           "updatedAt":  "2024-07-29T09:31:53Z"
                                       }
                                   ],
                         "totalCount":  15
                     },
        "title":  "Remove python from the coreclr build",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/38958",
        "createdAt":  "2020-07-08T21:09:39Z",
        "number":  38958,
        "author":  "pgovind",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-02-20T05:30:20Z",
        "body":  "Just logging an issue I ran into while building dotnet/runtime on WSL2 Arm64:\r\n\r\n```\r\n_$ ./build.sh clr -c release_\r\n.\r\n.\r\n.\r\nBuild FAILED.\r\n\r\n/home/prgovi/repos/runtime_2/src/coreclr/src/tools/aot/crossgen2/crossgen2.csproj(87,5): error MSB3030: Could not copy the file \"/home/prgovi/repos/runtime_2/artifacts/bin/coreclr/Linux.arm64.Release//x64/libjitinterface.so\" because it was not found.\r\n/home/prgovi/.nuget/packages/microsoft.build.traversal/2.0.34/Sdk/Sdk.targets(116,5): error MSB4181: The \"MSBuild\" task returned false but did not log an error. [/home/prgovi/repos/runtime_2/Build.proj]\r\n    0 Warning(s)\r\n    2 Error(s)\r\n```\r\n\r\nI\u0027m not super familiar with the build infra, but it looks like a bad path? I see a **\"/x64\"** in the error message. Running `find . -name libjitinterface*` gives this:\r\n```\r\n./artifacts/obj/coreclr/Linux.arm64.Release/src/tools/aot/jitinterface/libjitinterface.so\r\n./artifacts/bin/coreclr/Linux.arm64.Release/libjitinterface.so\r\n./artifacts/bin/coreclr/Linux.arm64.Release/crossgen2/libjitinterface.so\r\n```\r\n\r\n@carlossanlop @safern @eiriktsarpalis ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOPls70Q==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1NTc1ODg4MQ==",
                                           "createdAt":  "2020-07-08T21:09:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @ViktorHofer\nNotify danmosemsft if you want to be subscribed.",
                                           "updatedAt":  "2020-07-08T21:09:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1NTc2Nzc4Ng==",
                                           "createdAt":  "2020-07-08T21:29:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "cc: @jkoritzinsky @jashook @trylek ",
                                           "updatedAt":  "2020-07-08T21:29:16Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1NTgzMTE0Ng==",
                                           "createdAt":  "2020-07-09T00:49:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "carlossanlop",
                                           "body":  "I hit this too:\r\n```\r\n/home/carlos/runtime/src/coreclr/src/tools/aot/crossgen2/crossgen2.csproj(87,5):\r\nerror MSB3030:\r\nCould not copy the file \"/home/carlos/runtime/artifacts/bin/coreclr/Linux.arm64.Release//x64/libjitinterface.so\" because it was not found.\r\n```\r\n\r\nI think the problem is in the path creation - notice the second string has a double `//` - I suspect the string was expecting something to get embedded in there.",
                                           "updatedAt":  "2020-07-09T00:49:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1NTg0MTI5Ng==",
                                           "createdAt":  "2020-07-09T01:27:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBJzbaA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "carlossanlop",
                                                                               "createdAt":  "2020-07-09T02:23:15Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "safern",
                                           "body":  "The problem is here:\r\n\r\nhttps://github.com/dotnet/runtime/blob/3527fdefde316439b0b28f88febd02fcd93ea34b/src/coreclr/src/tools/aot/crossgen2/crossgen2.csproj#L83\r\n\r\nsince that is using `CrossHostArch` which defaults to `x64` if `TargetArchitecture == arm64` -- I think this is very specialized for cross build inside an x64 host. \r\n\r\nhttps://github.com/dotnet/runtime/blob/3527fdefde316439b0b28f88febd02fcd93ea34b/src/coreclr/src/tools/aot/crossgen2/crossgen2.csproj#L45\r\n\r\nAs a temporary workaround you could just pass that property globally as empty: `/p:CrossHostArch=`. \r\n\r\n@trylek @jkoritzinsky maybe we should check the host architecture instead to see if it differs from `TargetArchitecture` or is there a way to know if it is a cross build?",
                                           "updatedAt":  "2020-07-09T01:27:16Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1NTg0MTk0Ng==",
                                           "createdAt":  "2020-07-09T01:29:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "Yes we should. We have checks in the installer build for not using the \"cross host arch\" when Host = Target Arch.",
                                           "updatedAt":  "2020-07-09T01:29:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1NTg0NTQ5MQ==",
                                           "createdAt":  "2020-07-09T01:41:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBJzRKA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkoritzinsky",
                                                                               "createdAt":  "2020-07-09T01:42:52Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "safern",
                                           "body":  "Yeah, `$(BuildArchitecture)` is the property. \r\n\r\nhttps://github.com/dotnet/runtime/blob/74b173787bad85eac022b9fb680f247aeda76305/Directory.Build.props#L103\r\n\r\nAnd we have some properties for this apparently:\r\nhttps://github.com/dotnet/runtime/blob/74b173787bad85eac022b9fb680f247aeda76305/eng/liveBuilds.targets#L77\r\n\r\nWe should probably just use that property instead to construct the file path. ",
                                           "updatedAt":  "2020-07-09T01:41:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4-WzvR",
                                           "createdAt":  "2022-02-20T05:30:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AndyAyersMS",
                                           "body":  "Hitting this now too, building natively for arm64 on a Macbook.",
                                           "updatedAt":  "2022-02-20T05:30:20Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "WSL2 Ubuntu ARM64 build error",
        "labels":  [
                       "arch-arm64",
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/40003",
        "createdAt":  "2020-07-28T11:34:40Z",
        "number":  40003,
        "author":  "gbalykov",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBbNIwA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "cocowalla",
                                            "createdAt":  "2020-12-31T12:08:34Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "sergei66666",
                                            "createdAt":  "2020-12-31T13:08:26Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "kannan83",
                                            "createdAt":  "2020-12-31T14:19:08Z"
                                        }
                                    ],
                          "totalCount":  3
                      },
        "updatedAt":  "2022-03-15T09:15:08Z",
        "body":  "Build with:\r\n```sh\r\nROOTFS_DIR=`pwd`/.tools/rootfs/x86 ./build.sh --cross --clang9 --arch x86 --configuration Release --subset clr.runtime+clr.corelib+clr.nativecorelib\r\n```\r\n\r\nOutput:\r\n```\r\nIn file included from /home/z/Dev/runtime/src/coreclr/src/md/compiler/verifylayouts.cpp:13:\r\n  In file included from /home/z/Dev/runtime/src/coreclr/src/md/inc/verifylayouts.h:176:\r\n  /home/z/Dev/runtime/src/coreclr/src/md/inc/VerifyLayouts.inc:158:1: error: static_assert failed due to requirement \u0027offset_of_field_after_CLiteWeightStgdbRW_m_pStgIO == (((__builtin_offsetof(CLiteWeightStgdbRW, m_pStgIO) + sizeof(void *)) + (alignment_of_field_after_CLiteWeightStgdbRW_m_pStgIO) - 1) \u0026 ~((alignment_of_field_after_CLiteWeightStgdbRW_m_pStgIO) - 1))\u0027 \"offset_of_field_after_CLiteWeightStgdbRW_m_pStgIO == ALIGN_UP(offsetof(CLiteWeightStgdbRW, m_pStgIO) + sizeof(void*), alignment_of_field_after_CLiteWeightStgdbRW_m_pStgIO)\"\r\n  FIELD(CLiteWeightStgdbRW, m_pStgIO, sizeof(void*))\r\n  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  /home/z/Dev/runtime/src/coreclr/src/md/inc/verifylayouts.h:115:47: note: expanded from macro \u0027FIELD\u0027\r\n  #define FIELD(typeName, fieldName, fieldSize) ALIGN_FIELD(typeName, fieldName, fieldSize, fieldSize)\r\n                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  /home/z/Dev/runtime/src/coreclr/src/md/inc/verifylayouts.h:169:5: note: expanded from macro \u0027ALIGN_FIELD\u0027\r\n      static_assert_no_msg(offset_of_field_after_##typeName##_##fieldName == \\\r\n      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  /home/z/Dev/runtime/src/coreclr/src/inc/static_assert.h:24:38: note: expanded from macro \u0027static_assert_no_msg\u0027\r\n  #define static_assert_no_msg( cond ) static_assert( cond, #cond )\r\n                                       ^              ~~~~\r\n  [ 24%] Building CXX object src/pal/src/eventprovider/lttngprovider/CMakeFiles/eventprovider.dir/lttng/eventprovdotnetruntimestress.cpp.o\r\n  In file included from /home/z/Dev/runtime/src/coreclr/src/md/compiler/verifylayouts.cpp:13:\r\n  In file included from /home/z/Dev/runtime/src/coreclr/src/md/inc/verifylayouts.h:176:\r\n  /home/z/Dev/runtime/src/coreclr/src/md/inc/VerifyLayouts.inc:320:1: error: static_assert failed due to requirement \u0027expected_offset_of_first_field_in_CMiniMdBase == actual_offset_of_first_field_in_CMiniMdBase\u0027 \"expected_offset_of_first_field_in_CMiniMdBase == actual_offset_of_first_field_in_CMiniMdBase\"\r\n  BEGIN_TYPE(CMiniMdBase, 8)                                           //vtable ptr and first field 8-byte alignment\r\n  ^~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  /home/z/Dev/runtime/src/coreclr/src/md/inc/verifylayouts.h:164:5: note: expanded from macro \u0027BEGIN_TYPE\u0027\r\n      static_assert_no_msg(expected_offset_of_first_field_in_##typeName == actual_offset_of_first_field_in_##typeName);\r\n      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  /home/z/Dev/runtime/src/coreclr/src/inc/static_assert.h:24:38: note: expanded from macro \u0027static_assert_no_msg\u0027\r\n  #define static_assert_no_msg( cond ) static_assert( cond, #cond )\r\n                                       ^              ~~~~\r\n  2 errors generated.\r\n```\r\n\r\nRelated changes: https://github.com/dotnet/runtime/pull/37702\r\n\r\ncc @alpencolt ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOP6RnVA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc4_pGdU",
                                           "createdAt":  "2022-03-15T09:15:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "This was fixed by #50836",
                                           "updatedAt":  "2022-03-15T09:15:08Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Linux x86 build error",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/41172",
        "createdAt":  "2020-08-21T17:44:25Z",
        "number":  41172,
        "author":  "jashook",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-07-22T02:12:13Z",
        "body":  "Currently we are missing testing for the source-built legs of the runtime product.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONLodIw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc40uh0j",
                                           "createdAt":  "2021-07-22T02:12:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "We first need to deal with proper build before this.",
                                           "updatedAt":  "2021-07-22T02:12:13Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "[Source-Build] Expand testing to test source-build legs",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/42397",
        "createdAt":  "2020-09-17T18:15:33Z",
        "number":  42397,
        "author":  "verdie-g",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-08-24T23:29:41Z",
        "body":  "My username is `abc def` and I get an error running `build.cmd`.\r\n```\r\nPS\u003e .\\build.cmd\r\n  Determining projects to restore...\r\n  Tool \u0027coverlet.console\u0027 (version \u00271.7.2\u0027) was restored. Available commands: coverlet\r\n  Tool \u0027dotnet-reportgenerator-globaltool\u0027 (version \u00274.5.8\u0027) was restored. Available commands: reportgenerator\r\n  Tool \u0027microsoft.dotnet.xharness.cli\u0027 (version \u00271.0.0-prerelease.20403.2\u0027) was restored. Available commands: xharness\r\n\r\n  Restore was successful.\r\n  All projects are up-to-date for restore.\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  Determining projects to restore...\r\n  Restored C:\\Users\\abc def\\Documents\\dotnet-runtime\\src\\installer\\pkg\\projects\\netcoreapp\\pkg\\legacy\\Microsoft.NETCore.App.pkgproj (in 162 ms).\r\n  1 of 2 projects are up-to-date for restore.\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  Determining projects to restore...\r\n  Restored C:\\Users\\abc def\\Documents\\dotnet-runtime\\src\\installer\\pkg\\projects\\netcoreapp\\pkg\\workaround\\Microsoft.NETCore.App.pkgproj (in 43 ms).\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  System.Private.CoreLib -\u003e C:\\Users\\abc def\\Documents\\dotnet-runtime\\artifacts\\bin\\coreclr\\Windows_NT.x64.Debug\\IL\\System.Private.CoreLib.dll\r\n  BUILD: Starting Build at 20:07:06.52\r\n  \u0027\"\"C:\\Users\\abc\u0027 is not recognized as an internal or external command,\r\n  operable program or batch file.\r\nC:\\Users\\abc def\\Documents\\dotnet-runtime\\src\\coreclr\\runtime.proj(37,5): error MSB3073: The command \"\"C:\\Users\\abc def\\Documents\\dotnet-runtime\\src\\coreclr\\build-runtime.cmd\" -x64 -debug\" exited with code 1.\r\n\r\nBuild FAILED.\r\n\r\nC:\\Users\\abc def\\Documents\\dotnet-runtime\\src\\coreclr\\runtime.proj(37,5): error MSB3073: The command \"\"C:\\Users\\abc def\\Documents\\dotnet-runtime\\src\\coreclr\\build-runtime.cmd\" -x64 -debug\" exited with code 1.\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:50.88\r\nBuild failed.\r\nSome builds failed:\r\n        Configuration: Debug, Architecture: x64\r\n```\r\n\r\nAfter removing the line `@if not defined _echo @echo off` in `build-runtime.cmd` and running the file I get the same error but with more details.\r\n```\r\nPS C:\\Users\\abc def\\Documents\\dotnet-runtime2\u003e .\\src\\coreclr\\build-runtime.cmd -x64 -release -enforcegpo\r\nC:\\Users\\abc def\\Documents\\dotnet-runtime2\u003esetlocal EnableDelayedExpansion EnableExtensions\r\nC:\\Users\\abc def\\Documents\\dotnet-runtime2\u003eset \"__MsgPrefix=BUILD: \"\r\nC:\\Users\\abc def\\Documents\\dotnet-runtime2\u003eecho BUILD: Starting Build at 20:11:03.01\r\nBUILD: Starting Build at 20:11:03.01\r\nC:\\Users\\abc def\\Documents\\dotnet-runtime2\u003eset __ThisScriptFull=\"C:\\Users\\abc def\\Documents\\dotnet-runtime2\\src\\coreclr\\build-runtime.cmd\"\r\nC:\\Users\\abc def\\Documents\\dotnet-runtime2\u003eset __ThisScriptDir=\"C:\\Users\\abc def\\Documents\\dotnet-runtime2\\src\\coreclr\\\"\r\nC:\\Users\\abc def\\Documents\\dotnet-runtime2\u003ecall \"\"C:\\Users\\abc def\\Documents\\dotnet-runtime2\\src\\coreclr\\\"\"\\setup_vs_tools.cmd\r\n\u0027\"\"C:\\Users\\abc\u0027 is not recognized as an internal or external command,\r\noperable program or batch file.\r\nC:\\Users\\abc def\\Documents\\dotnet-runtime2\u003eif NOT \u00271\u0027 == \u00270\u0027 goto ExitWithError\r\nC:\\Users\\abc def\\Documents\\dotnet-runtime2\u003eexit /b 1\r\n```\r\n\r\nIt seems like there is an issue with quotes at the line `call \"\"C:\\Users\\abc def\\Documents\\dotnet-runtime2\\src\\coreclr\\\"\"\\setup_vs_tools.cmd`.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSRxk4A==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5NDQ4NTk2NA==",
                                           "createdAt":  "2020-09-17T20:36:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "I think these\r\nhttps://github.com/dotnet/runtime/blob/c87e75e8ef260ccc6e979f9df1cc012536ee036f/src/coreclr/build-runtime.cmd#L10-L11\r\nshould probably not add quotes and instead the quotes should be applied where they are used\r\nhttps://github.com/dotnet/runtime/blob/c87e75e8ef260ccc6e979f9df1cc012536ee036f/src/coreclr/build-runtime.cmd#L13\r\nhttps://github.com/dotnet/runtime/blob/c87e75e8ef260ccc6e979f9df1cc012536ee036f/src/coreclr/build-runtime.cmd#L724\r\n\r\nSame in crossgen-corelib.cmd.\r\n\r\nCan you try that and see how it works?\r\n\r\nBuilding the repo when there\u0027s a space in the path breaks periodically because we dont have a test to protect it and apparently nobody that works on the repo day to day has this configuration. ",
                                           "updatedAt":  "2020-09-17T20:36:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5NDUwMjY5MQ==",
                                           "createdAt":  "2020-09-17T21:12:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "verdie-g",
                                           "body":  "Adding some quotes at the right place allowed to execute few more lines without errors until the same issue happened again. I think quotes are missing at many places in the scripts and I don\u0027t feel comfortable doing the PR. It should be easy to reproduce by adding a space in the project folder though.",
                                           "updatedAt":  "2020-09-17T21:12:44Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5NDUxMTYzNA==",
                                           "createdAt":  "2020-09-17T21:34:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Too bad thanks for trying. Realistically this is going to keep breaking regularly and probably not a high priority. Can you place the repo another location?",
                                           "updatedAt":  "2020-09-17T21:34:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5NDUxNDQxOA==",
                                           "createdAt":  "2020-09-17T21:41:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "verdie-g",
                                           "body":  "\u003e Building the repo when there\u0027s a space in the path breaks periodically because we dont have a test to protect it\r\n\r\n\u003e this is going to keep breaking regularly\r\n\r\nIs having a test with a space in the path not possible?\r\n\r\n\u003e Can you place the repo another location?\r\n\r\nI have the student version of Windows 10 which forces $\"{firstName} {lastName}\" as a username so I\u0027ll move the folder to C: or maybe it\u0027s time to get a real license 👍",
                                           "updatedAt":  "2020-09-17T21:41:26Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5NDUxODQ4OQ==",
                                           "createdAt":  "2020-09-17T21:52:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "We could modify one of our CI legs potentially (cc @safern) but it\u0027s probably  not a priority because the workaround is pretty easy. I put my repo for example in C:\\git\\runtime ",
                                           "updatedAt":  "2020-09-17T21:52:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5NTAyNjMzNw==",
                                           "createdAt":  "2020-09-18T18:42:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "verdie-g",
                                           "body":  "\u003e the workaround is pretty easy. I put my repo for example in C:\\git\\runtime\r\n\r\nAfter putting the repository in `C:\\dev\\dotnet-runtime` I get the same error. It seems like it\u0027s searching for files under my user folder.\r\n\r\n```\r\nCROSSGEN-CORELIB: Starting Build at 20:36:04.41\r\n  CROSSGEN-CORELIB: Searching for Visual Studio installation\r\n  CROSSGEN-CORELIB: \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\Tools\\VsDevCmd.bat\"\r\n  **********************************************************************\r\n  ** Visual Studio 2019 Developer Command Prompt v16.8.0-pre.3.0\r\n  ** Copyright (c) 2020 Microsoft Corporation\r\n  **********************************************************************\r\n  CROSSGEN-CORELIB: Using environment: \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\Tools\\\\..\\..\\VC\\Auxiliary\\Build\\vcvarsall.bat\" x86_amd64\r\n  **********************************************************************\r\n  ** Visual Studio 2019 Developer Command Prompt v16.8.0-pre.3.0\r\n  ** Copyright (c) 2020 Microsoft Corporation\r\n  **********************************************************************\r\n  [vcvarsall.bat] Environment initialized for: \u0027x86_x64\u0027\r\n  CROSSGEN-CORELIB: Generating native image of System.Private.CoreLib for Windows_NT.x64.Release. Logging to \"C:\\Dev\\dotnet-runtime\\src\\coreclr\\..\\..\\artifacts\\log\\CrossgenCoreLib_Windows_NT__x64__Release.log\".\r\n  \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\MSBuild\\Current\\Bin\\Roslyn\\Microsoft.DiaSymReader.Native.amd64.dll\"\r\n  \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\IDE\\Microsoft.DiaSymReader.Native.amd64.dll\"\r\n  CROSSGEN-CORELIB: \"C:\\Dev\\dotnet-runtime\\src\\coreclr\\..\\..\\artifacts\\bin\\coreclr\\Windows_NT.x64.Release\\crossgen.exe\" /nologo  /Platform_Assemblies_Paths \"C:\\Dev\\dotnet-runtime\\src\\coreclr\\..\\..\\artifacts\\bin\\coreclr\\Windows_NT.x64.Release\\IL\" /out \"C:\\Dev\\dotnet-runtime\\src\\coreclr\\..\\..\\artifacts\\bin\\coreclr\\Windows_NT.x64.Release\\System.Private.CoreLib.dll\" \"C:\\Dev\\dotnet-runtime\\src\\coreclr\\..\\..\\artifacts\\bin\\coreclr\\Windows_NT.x64.Release\\IL\\System.Private.CoreLib.dll\"\r\n  CROSSGEN-CORELIB: \"C:\\Dev\\dotnet-runtime\\src\\coreclr\\..\\..\\artifacts\\bin\\coreclr\\Windows_NT.x64.Release\\crossgen.exe\" /nologo /Platform_Assemblies_Paths \"C:\\Dev\\dotnet-runtime\\src\\coreclr\\..\\..\\artifacts\\bin\\coreclr\\Windows_NT.x64.Release\" /CreatePdb \"C:\\Dev\\dotnet-runtime\\src\\coreclr\\..\\..\\artifacts\\bin\\coreclr\\Windows_NT.x64.Release\\PDB\" \"C:\\Dev\\dotnet-runtime\\src\\coreclr\\..\\..\\artifacts\\bin\\coreclr\\Windows_NT.x64.Release\\System.Private.CoreLib.dll\"\r\n  CROSSGEN-CORELIB: Crossgenning of System.Private.CoreLib succeeded.  Finished at 20:36:13.13\r\n  CROSSGEN-CORELIB: Product binaries are available at C:\\Dev\\dotnet-runtime\\src\\coreclr\\..\\..\\artifacts\\bin\\coreclr\\Windows_NT.x64.Release\r\n  ILCompiler.DependencyAnalysisFramework -\u003e C:\\Dev\\dotnet-runtime\\artifacts\\bin\\ILCompiler.DependencyAnalysisFramework\\x64\\Release\\ILCompiler.DependencyAnalysisFramework.dll\r\n  ILCompiler.TypeSystem.ReadyToRun -\u003e C:\\Dev\\dotnet-runtime\\artifacts\\bin\\ILCompiler.TypeSystem.ReadyToRun\\x64\\Release\\ILCompiler.TypeSystem.ReadyToRun.dll\r\n  ILCompiler.ReadyToRun -\u003e C:\\Dev\\dotnet-runtime\\artifacts\\bin\\ILCompiler.ReadyToRun\\x64\\Release\\ILCompiler.ReadyToRun.dll\r\n  crossgen2 -\u003e C:\\Dev\\dotnet-runtime\\artifacts\\bin\\coreclr\\Windows_NT.x64.Release\\crossgen2\\crossgen2.dll\r\n  CoreTestAssembly -\u003e C:\\Dev\\dotnet-runtime\\artifacts\\bin\\CoreTestAssembly\\x64\\Release\\CoreTestAssembly.dll\r\n  \u0027C:\\Users\\abc\u0027 is not recognized as an internal or external command,\r\n  operable program or batch file.\r\nC:\\Users\\abc def\\.nuget\\packages\\microsoft.net.sdk.il\\5.0.0-preview.8.20359.4\\targets\\Microsoft.NET.Sdk.IL.targets(138,5): error MSB3073: The command \"C:\\Users\\abc def\\.nuget\\packages\\\\runtime.win-x64.microsoft.netcore.ilasm\\5.0.0-preview.8.20359.4\\runtimes\\win-x64\\native/ilasm -QUIET -NOLOGO -OPTIMIZE -DLL  -OUTPUT=\"C:\\Dev\\dotnet-runtime\\artifacts\\obj\\coreclr\\ILTestAssembly\\x64\\Release\\ILTestAssembly.dll\"  Main.il ILDisassembler.il InstanceFieldLayout.il StaticFieldLayout.il VirtualFunctionOverride.il Signature.il MethodImplOverride1.il\" exited with code 9009. [C:\\Dev\\dotnet-runtime\\src\\coreclr\\src\\tools\\aot\\ILCompiler.TypeSystem.ReadyToRun.Tests\\ILTestAssembly\\ILTestAssembly.ilproj]\r\n\r\nBuild FAILED.\r\n\r\nC:\\Users\\abc def\\.nuget\\packages\\microsoft.net.sdk.il\\5.0.0-preview.8.20359.4\\targets\\Microsoft.NET.Sdk.IL.targets(138,5): error MSB3073: The command \"C:\\Users\\abc def\\.nuget\\packages\\\\runtime.win-x64.microsoft.netcore.ilasm\\5.0.0-preview.8.20359.4\\runtimes\\win-x64\\native/ilasm -QUIET -NOLOGO -OPTIMIZE -DLL  -OUTPUT=\"C:\\Dev\\dotnet-runtime\\artifacts\\obj\\coreclr\\ILTestAssembly\\x64\\Release\\ILTestAssembly.dll\"  Main.il ILDisassembler.il InstanceFieldLayout.il StaticFieldLayout.il VirtualFunctionOverride.il Signature.il MethodImplOverride1.il\" exited with code 9009. [C:\\Dev\\dotnet-runtime\\src\\coreclr\\src\\tools\\aot\\ILCompiler.TypeSystem.ReadyToRun.Tests\\ILTestAssembly\\ILTestAssembly.ilproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:10:32.52\r\nBuild failed.\r\nSome builds failed:\r\n        Configuration: Debug, Architecture: x64\r\n```",
                                           "updatedAt":  "2020-09-18T18:42:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5NjgwMzk3MA==",
                                           "createdAt":  "2020-09-22T15:41:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "It seems like we need to add quotes to usages of `_ILasmDir`: https://github.com/dotnet/runtime/blob/9d1ec34832c0f7abec22063e0878a61028295939/src/coreclr/src/.nuget/Microsoft.NET.Sdk.IL/targets/Microsoft.NET.Sdk.IL.targets#L138\r\n\r\nand also to usages of `_ILdasmDir`:\r\nhttps://github.com/dotnet/runtime/blob/9d1ec34832c0f7abec22063e0878a61028295939/src/coreclr/src/.nuget/Microsoft.NET.Sdk.IL/targets/Microsoft.NET.Sdk.IL.targets#L82",
                                           "updatedAt":  "2020-09-22T15:41:26Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5NjkzODc3OQ==",
                                           "createdAt":  "2020-09-22T19:41:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "I suspect this will blow up in multiple places in the scripts as we\u0027re generally not too consistent about quoting everything. I\u0027m adding this to the infra backlog project as it definitely merits fixing, it\u0027s just likely to have quite a bit of a bug tail.",
                                           "updatedAt":  "2020-09-22T19:41:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5ODIwNzUwMA==",
                                           "createdAt":  "2020-09-24T08:45:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mangod9",
                                           "body":  "I have a partial fix I am validating here: https://github.com/dotnet/runtime/pull/42671. \r\n\r\n`C:\\With Space\\runtime\u003ebuild -subset clr+libs` should now work if the targets fix is manually applied. ",
                                           "updatedAt":  "2020-09-24T08:45:55Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5ODM3Njg0MQ==",
                                           "createdAt":  "2020-09-24T14:21:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "\u003e I suspect this will blow up in multiple places in the scripts as we\u0027re generally not too consistent about quoting everything\r\n\r\nThis has come up and been fixed again a number of times. I suggest to either protect the next fix with CI or just document it doesn\u0027t work.",
                                           "updatedAt":  "2020-09-24T14:21:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5ODM5NDQwMg==",
                                           "createdAt":  "2020-09-24T14:49:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "I agree we should introduce lab validation for the fix, I talked with Manish about it yesterday, it\u0027s just unclear to me right now how do to that as AFAIK both the AzDO build system and Helix use an internally hardcoded scheme for the root path (that naturally doesn\u0027t contain any whitespace). In the worst case we can create a dedicated pipeline that will manually copy over the cloned repo into a new path containing blanks. Speaking about which, we might want to expand this envisioned testing to other similar cases that also tend to cause trouble like paths containing accented letters and / or Chinese / Japanese Kanji symbols.",
                                           "updatedAt":  "2020-09-24T14:49:55Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5ODQyODM4Mw==",
                                           "createdAt":  "2020-09-24T15:45:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mangod9",
                                           "body":  "not sure about the ROI of adding a dedicated pipeline for validating this, unless this has been raised very frequently.  ",
                                           "updatedAt":  "2020-09-24T15:45:46Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5ODQ1MDE2OQ==",
                                           "createdAt":  "2020-09-24T16:25:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mangod9",
                                           "body":  "I wonder whether we could clone the repo to a `folder with spaces` for the build leg, say here: https://github.com/dotnet/runtime/blob/90a8dfce32988ffe475bd58102607092aef0d4ca/eng/pipelines/common/clone-checkout-bundle-step.yml#L10 ?",
                                           "updatedAt":  "2020-09-24T16:25:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5ODQ2NjU4NQ==",
                                           "createdAt":  "2020-09-24T16:57:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "By \"dedicated pipeline\" I didn\u0027t mean any heavyweight machinery, I think I rather wanted to point out that it probably doesn\u0027t make sense to add this to regular PR / CI pipeline as these are already \"too complex\"; so I would put this either to outerloop or to some \"special obscurity tests\" that should suffice to run once a week or so; not sure if we already have something like that (some of the stress tests run once a week but I don\u0027t think they are the ideal place for this).\r\n\r\nCloning the repo to a different location is certainly an option but I suspect it\u0027s relatively costly in terms of implementation as today all pipelines assume that $(Build.SourcesDirectory) is the repo root so that would need fixing globally. I guess it also depends on the envisioned scope of such testing i.o.w. whether we want just a simple canary run verifying that CoreCLR / mono / libraries build in such scenario or whether we want to e.g. build and run tests, possibly in varying configurations, in this case.",
                                           "updatedAt":  "2020-09-24T16:57:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5ODQ3MjY3MQ==",
                                           "createdAt":  "2020-09-24T17:09:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mangod9",
                                           "body":  "ah, yeah some outerloop scenario would make sense. ",
                                           "updatedAt":  "2020-09-24T17:09:05Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5ODQ4ODM1MQ==",
                                           "createdAt":  "2020-09-24T17:40:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Do we need to fix this though? We could just update the build script (at the start, where we already validate some dependencies) to fail out with a helpful error if there\u0027s a space in the path, so folks can relocate their clone before they get very far. This assumes there aren\u0027t users who are in a locked down environment where they have to put their files under ...\\Documents, though. If that turns out to be the case, then we could fix it then.\r\n\r\nI don\u0027t have a preference myself, just pointing out the work (and ongoing CI maintenance) may not be the best use of time.",
                                           "updatedAt":  "2020-09-24T17:40:54Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5ODQ5NTI0Mg==",
                                           "createdAt":  "2020-09-24T17:54:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "verdie-g",
                                           "body":  "\u003e similar cases that also tend to cause trouble like paths containing accented letters and / or Chinese / Japanese Kanji symbols\r\n\r\nSo, I\u0027ve reinstalled my Windows but this time with only my first name as a username but unfortunately it contains a \"é\" which makes the build fail 😭",
                                           "updatedAt":  "2020-09-24T17:54:11Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5ODUwOTQ3Mw==",
                                           "createdAt":  "2020-09-24T18:22:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "That\u0027s exactly the problem, I\u0027m afraid people will continue hitting this. I think the CI cost is relatively low, at least w.r.t. validating that we can build CoreCLR+libraries in one configuration, with a bit of hand waving that should basically boil down to putting a modification of this line in some suitable pipeline (after the checkout to a non-default folder):\r\n\r\nhttps://github.com/dotnet/runtime/blob/9d07cac48fbd943950f1c4a2dd7e10acdbc6a5a1/eng/pipelines/common/global-build-job.yml#L76\r\n",
                                           "updatedAt":  "2020-09-24T18:22:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5ODY3OTA1Mg==",
                                           "createdAt":  "2020-09-25T02:04:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Ah. I missed that it affects non-ASCII directories as well..",
                                           "updatedAt":  "2020-09-25T02:04:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5ODc1NDg2MQ==",
                                           "createdAt":  "2020-09-25T06:47:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mangod9",
                                           "body":  "I tried to validate my PR with a folder named `With Spacé`, but the c++ compiler complains about it\r\n```  C:\\With Spacé\\runtime\\artifacts\\obj\\coreclr\\Windows_NT.x64.Debug\\src\\inc\\idls_out\\xcordebug_i.c(1,1): warning C4828: The file contains a character starting at offset 0x104 that is illegal in the current source character set (codepage 65001).```\r\n\r\nBelieve this will require some CMAKE related changes, unless its just a machine config thing. ",
                                           "updatedAt":  "2020-09-25T06:47:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5OTE2MDEwNA==",
                                           "createdAt":  "2020-09-25T21:18:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mangod9",
                                           "body":  "This is since midl adds the full path to the idl as a comment in generated code which trips up the c++ compiler:\r\n\r\nRunning this\r\n```\r\nC:\\With Spacé\\runtime\u003emidl /lcid 1036 \"C:\\With Spacé\\runtimesrc\\coreclr\\src\\inc\\clrinternal.idl\" -I \"C:\\With Spacé\\runtime\\src\\coreclr\\src\\inc\"\r\n``` \r\n\r\ngenerates clrinternal.h with this (the lcid specified doesnt seem to have any effect on the output):\r\n\r\n```\r\n/* Compiler settings for C:\\With Spac�\\runtime\\src\\coreclr\\src\\inc\\clrinternal.idl:\r\n    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 8.01.0622 \r\n    protocol : dce , ms_ext, c_ext, robust\r\n    error checks: allocation ref bounds_check enum stub_data \r\n    VC __declspec() decoration level: \r\n         __declspec(uuid()), __declspec(selectany), __declspec(novtable)\r\n         DECLSPEC_UUID(), MIDL_INTERFACE()\r\n*/\r\n```\r\n\r\nOne potential workaround could be to specify a relative path to `midl` which would avoid the special chars in the full path but not sure if that is achievable in cmake. \r\n ",
                                           "updatedAt":  "2020-09-25T21:19:32Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5OTU0OTk2MQ==",
                                           "createdAt":  "2020-09-26T21:26:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mangod9",
                                           "body":  "Ok getting closer. After a tip from @davidwrighton we were able to avoid the full file path from midl. After a similar fix to python eventpipe generator I am now able to build using `build-runtime.cmd`. For some reason `build.cmd -\u003e build-runtime.cmd` transition is messing with the codepage configured using `chcp`. But this is now working:\r\n```\r\n1. C:\\With Spacé\\runtime\u003echcp 1250\r\n2. C:\\With Spacé\\runtime\u003esrc\\coreclr\\build-runtime.cmd\r\n3. C:\\With Spacé\\runtime\u003ebuild -subset libs\r\n```\r\nSo I propose to merge the PR, and I am also testing some changes in CI to build x86 with a non-standard folder. ",
                                           "updatedAt":  "2020-09-26T21:31:36Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5OTY4MzE4OA==",
                                           "createdAt":  "2020-09-27T20:17:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mangod9",
                                           "body":  "Ok, looks like this msbuild issue is probably causing the issue where current chcp is not honored: https://github.com/dotnet/msbuild/issues/5724. But after enabling `Beta: Use Unicode UTF-8 for worldwide language support` in region settings I got something like this building\r\n\r\n```\r\nC:\\_Àß©Déб\\runtime\u003ebuild.cmd\r\n\u003c--build-log skipped--\u003e\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n```\r\n\r\n@verdie-g if you please try whether this PR: https://github.com/dotnet/runtime/pull/42671 gets things working for you we can get that merged. Thx!",
                                           "updatedAt":  "2020-09-27T20:17:27Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5OTY4MzU5Nw==",
                                           "createdAt":  "2020-09-27T20:21:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "verdie-g",
                                           "body":  "I\u0027ve reinstalled everything and got rid of any space or non-ascii character so I won\u0027t be able to test the PR sorry",
                                           "updatedAt":  "2020-09-27T20:21:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5OTY4NDM3Nw==",
                                           "createdAt":  "2020-09-27T20:28:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mangod9",
                                           "body":  "Ok no worries, will validate with a few variations and merge if that goes well. ",
                                           "updatedAt":  "2020-09-27T20:28:50Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5OTc2MTc3MA==",
                                           "createdAt":  "2020-09-28T04:24:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mangod9",
                                           "body":  "keeping this open so we can track the CI changes to ensure this doesnt regress, but that will have to wait for the `il.targets` to propagate to sdk and back.  ",
                                           "updatedAt":  "2020-09-28T04:24:17Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyNTQ2ODAzNA==",
                                           "createdAt":  "2020-11-11T14:53:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lkempf",
                                           "body":  "I have found a regression of this issue. Executing `./build.cmd -subset clr -ninja` fails when the build path contains spaces as of commit e8bba0bcf8a4732f83d5c4b6b98bf9dd932311b9. This is caused by missing quotes in [`build-runtime.cmd` ](https://github.com/dotnet/runtime/blob/b37f10a504f20faef2558b6d79180411ad0603c3/src/coreclr/build-runtime.cmd#L662) around `%__IntermediatesDir%`.\r\n\r\nThere also is a problem with generating timestamps which I have not been able to pinpoint yet.\r\n```\r\n  FAILED: src/dlls/mscoree/coreclr/inject_debug_resources.timestamp\r\n  src\\dlls\\mscoree\\coreclr\\CMakeFiles\\inject_debug_resources.timestamp-7773978.bat 645c5eb38508e330\r\n  Microsoft (R) C/C++ Optimizing Compiler Version 19.28.29333 for x64\r\n  Copyright (C) Microsoft Corporation.  All rights reserved.\r\n\r\n  daccess.cpp\r\n  \u0027C:\\Users\\bla\\Documents\\Visual\u0027 is not recognized as an internal or external command,\r\n  operable program or batch file.\r\n  Batch file failed at line 4 with errorcode 1\r\n  ninja: build stopped: subcommand failed.\r\n```",
                                           "updatedAt":  "2020-11-11T15:12:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyNTUyOTA0OA==",
                                           "createdAt":  "2020-11-11T16:40:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mangod9",
                                           "body":  "Hey @lkempf, thanks for reporting the issue. Would you like to submit a PR, assuming its a simple fix? Else will take a look later this week, we also plan to add verification for this within the CI. ",
                                           "updatedAt":  "2020-11-11T16:40:22Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyNTU4MzAyMQ==",
                                           "createdAt":  "2020-11-11T18:20:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "FYI @jkoritzinsky ",
                                           "updatedAt":  "2020-11-11T18:20:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyNTU4ODEwNA==",
                                           "createdAt":  "2020-11-11T18:30:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lkempf",
                                           "body":  "I\u0027ve created #44540 to fix the issue I could pinpoint.",
                                           "updatedAt":  "2020-11-11T18:30:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMjgzNzIwOA==",
                                           "createdAt":  "2021-05-05T16:34:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@mangod9 as you are assigned to the issue, do you know what\u0027s remaining here? CI protection or an infra fix?",
                                           "updatedAt":  "2021-05-05T16:34:31Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMjgzOTQyMA==",
                                           "createdAt":  "2021-05-05T16:38:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mangod9",
                                           "body":  "primarily CI protection, I had a fix made a few months ago, but there is a good possibility things have since regressed. ",
                                           "updatedAt":  "2021-05-05T16:38:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JHGTg",
                                           "createdAt":  "2022-08-24T23:29:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivdiazsa",
                                           "body":  "This is still a thing in as noted in #73327. I wrote a deeper explanation here https://github.com/dotnet/runtime/issues/73327#issuecomment-1226595900.",
                                           "updatedAt":  "2022-08-24T23:29:41Z"
                                       }
                                   ],
                         "totalCount":  33
                     },
        "title":  "build.cmd fails if path contains a space",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/42711",
        "createdAt":  "2020-09-24T23:31:39Z",
        "number":  42711,
        "author":  "omajid",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-28T17:08:38Z",
        "body":  "*Initial cost estimate*: 1 week\r\n*Initial contacts*: @trylek, @janvorli\r\n\r\nFrom https://github.com/dotnet/runtime/pull/42689#discussion_r494645913 :\r\n\r\n\u003e It is kind of unfortunate that the main build script only supports single set of cmake args that it pushes to all three sub-parts (coreclr, installer, libraries). It would be nice to enhance it to enable specifying these flags separately for coreclr, installer and libraries so that we don\u0027t have to do tricks like this. ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Support per-component (coreclr, installer, etc) cmake args",
        "labels":  [
                       "help wanted",
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/42774",
        "createdAt":  "2020-09-26T06:39:45Z",
        "number":  42774,
        "author":  "Maoni0",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC6Om-w==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ilatypov",
                                            "createdAt":  "2024-08-15T19:12:34Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-02-20T22:43:05Z",
        "body":  "*Initial cost estimate*: 1 week\r\n*Initial contacts*: @trylek, @hoyosjs, @ViktorHofer \r\n\r\nso I just freshly cloned the repo and failed to build. this was what I got when trying to build clr -\r\n\r\n```\r\n  CSC : warning CS1668: Invalid search path \u0027C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.19041.0\\ucrt\\x64\u0027 specified in \u0027LIB environment variable\u0027 -- \u0027directory does not exist\u0027 [C:\\runtime-doubly-fl\\artifacts\\obj\\coreclr\\Windows_NT.x64.Release\\src\\ToolBox\\SOS\\DacTableGen\\dactablegen.csproj]\r\n  CSC : warning CS1668: Invalid search path \u0027C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.19041.0\\ucrt\\x86\u0027 specified in \u0027LIB environment variable\u0027 -- \u0027directory does not exist\u0027 [C:\\runtime-doubly-fl\\artifacts\\obj\\coreclr\\Windows_NT.x64.Release\\src\\ToolBox\\SOS\\DacTableGen\\dactablegen.csproj]\r\n      4 Warning(s)\r\n      0 Error(s)\r\n\r\n  Time Elapsed 00:01:17.78\r\n  File not found - *.dll\r\n  0 File(s) copied\r\n  BUILD: Error: Failed to copy the Universal CRT to the artifacts directory.\r\nC:\\runtime-doubly-fl\\src\\coreclr\\runtime.proj(37,5): error MSB3073: The command \"\"C:\\runtime-doubly-fl\\src\\coreclr\\build-runtime.cmd\" -x64 -release -enforcepgo\" exited with code 4.\r\n```\r\nmy latest version in C:\\Program Files (x86)\\Windows Kits\\10\\Lib is 10.0.19041.0 but it does not have a ucrt dir in it -\r\n```\r\n Directory of C:\\Program Files (x86)\\Windows Kits\\10\\Lib\\10.0.19041.0\r\n\r\n08/19/2020  11:16 PM    \u003cDIR\u003e          .\r\n08/19/2020  11:16 PM    \u003cDIR\u003e          ..\r\n07/27/2020  01:23 AM    \u003cDIR\u003e          km\r\n04/18/2019  06:46 PM               512 stub512.com\r\n07/27/2020  12:44 AM    \u003cDIR\u003e          um\r\n```\r\nthis is because I installed \"Windows Driver Kit - Windows 10.0.19041.1\" which created this 10.0.19041.0 dir but it did not install ucrt in it. \r\n\r\nwhen I uninstalled the Windows Driver Kit the build succeeded. now the last ver in this dir does have ucrt:\r\n\r\nC:\\WINDOWS\\system32\u003edir \"C:\\Program Files (x86)\\Windows Kits\\10\\Lib\\10.0.18362.0\"\r\n Volume in drive C is OSDisk\r\n Volume Serial Number is EA9A-AF54\r\n```\r\n Directory of C:\\Program Files (x86)\\Windows Kits\\10\\Lib\\10.0.18362.0\r\n\r\n07/27/2020  12:56 AM    \u003cDIR\u003e          .\r\n07/27/2020  12:56 AM    \u003cDIR\u003e          ..\r\n07/27/2020  12:56 AM    \u003cDIR\u003e          ucrt\r\n07/27/2020  12:56 AM    \u003cDIR\u003e          ucrt_enclave\r\n07/27/2020  12:56 AM    \u003cDIR\u003e          um\r\n               0 File(s)              0 bytes\r\n```\r\nso this says we have problems searching for the right dir for ucrt. \r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOn1CnaQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0MjI4NzIzMw==",
                                           "createdAt":  "2020-12-10T07:03:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "yew",
                                           "body":  "@Maoni0 \r\nSolution: Simply create \"ucrt\\x64\", \"ucrt\\x86\" sub folders and rerun MSbuild. MSbuild doesn\u0027t actually need anything from this folder but it\u0027s set as input variable anyways during Visual Studio setup.",
                                           "updatedAt":  "2020-12-10T07:03:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40uhv2",
                                           "createdAt":  "2021-07-22T02:11:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "Haven\u0027t seen any other repro of this.",
                                           "updatedAt":  "2021-07-22T02:11:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5wOt4g",
                                           "createdAt":  "2024-01-09T11:33:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "drewnoakes",
                                           "body":  "\u003e CS1668: Invalid search path \u0027C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.19041.0\\ucrt\\x64\u0027 specified in \u0027LIB environment variable\u0027 -- \u0027directory does not exist\u0027\r\n\r\nI hit this in VS after uninstalling that version (and several others) of the Windows SDK. Restarting VS seems to have made it go away.",
                                           "updatedAt":  "2024-01-09T11:33:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc54TdCJ",
                                           "createdAt":  "2024-03-25T16:07:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vatsan-madhavan",
                                           "body":  "FYI - I\u0027ve done something like this to work around this warning in my builds.\r\n\r\n```xml\r\n  \u003cPropertyGroup\u003e\r\n    \u003cSetBuildDefaultEnvironmentVariablesDependsOn\u003e\r\n      _SanitizeLibraryPathComponents;\r\n      $(SetBuildDefaultEnvironmentVariablesDependsOn);\r\n    \u003c/SetBuildDefaultEnvironmentVariablesDependsOn\u003e\r\n  \u003c/PropertyGroup\u003e\r\n\r\n  \u003c!--    \r\n    Ensure that components of $(LibraryPath) that are actually not\r\n    present on disk are removed.\r\n    \r\n    This target will run before \u0027SetBuildDefaultEnvironmentVariables\u0027\r\n    is called within Microsoft.Cpp.Current.targets,\r\n    which sets the environment variable \u0027LIB\u0027 based on $(LibraryPath).\r\n  --\u003e\r\n  \u003cTarget Name=\"_SanitizeLibraryPathComponents\"\u003e\r\n    \u003cItemGroup\u003e\r\n      \u003c_LibraryPathComponents Include=\"$(LibraryPath)\" /\u003e\r\n    \u003c/ItemGroup\u003e\r\n    \r\n    \u003cPropertyGroup\u003e\r\n      \u003cLibraryPath\u003e@(_LibraryPathComponents-\u003eExists())\u003c/LibraryPath\u003e     \r\n    \u003c/PropertyGroup\u003e\r\n  \u003c/Target\u003e\r\n```",
                                           "updatedAt":  "2024-03-25T16:10:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6fUKdp",
                                           "createdAt":  "2025-02-20T22:43:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "RussKie",
                                           "body":  "I\u0027m seeing the error after updating to the latest IntPre, but I\u0027m running a build from a cli.",
                                           "updatedAt":  "2025-02-20T22:43:03Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "build-runtime.cmd fails when the latest version in C:\\Program Files (x86)\\Windows Kits\\10\\Lib does not contain ucrt",
        "labels":  [
                       "help wanted",
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/42795",
        "createdAt":  "2020-09-27T13:22:46Z",
        "number":  42795,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-05-05T16:29:23Z",
        "body":  "VS doesn\u0027t show any compile items (.il) in the project tree for ilproj project files that use the IL.SDK. When selecting to display all files and adding the .il file to the project, it gets added as a `None` item in the project instead.\r\n\r\nExample project: https://github.com/dotnet/runtime/blob/1d5221a83025418201c3a329f89c61e70103e19c/src/libraries/System.Runtime.CompilerServices.Unsafe/src/System.Runtime.CompilerServices.Unsafe.ilproj#L23\r\n\r\nIL.SDK: https://github.com/dotnet/runtime/blob/master/src/coreclr/src/.nuget/Microsoft.NET.Sdk.IL/targets/Microsoft.NET.Sdk.IL.targets\r\n\r\ncc @jaredpar @davkean as you might know what\u0027s going on here.\r\n\r\ncc @Anipik @ericstj ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOKbZAxw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5OTYzNTE0OA==",
                                           "createdAt":  "2020-09-27T13:22:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @safern, @viktorhofer\nSee info in area-owners.md if you want to be subscribed.",
                                           "updatedAt":  "2020-09-27T13:22:54Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5OTcwOTc5Mw==",
                                           "createdAt":  "2020-09-28T00:24:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBRrSnA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2020-09-28T06:43:46Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "sandreenko",
                                           "body":  "You probably want to upvote this issue https://developercommunity.visualstudio.com/idea/540810/add-microsoftnetsdkil-aka-ilproj-support-in-visual.html",
                                           "updatedAt":  "2020-09-28T00:24:16Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5OTgwOTk5MQ==",
                                           "createdAt":  "2020-09-28T06:44:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "and maybe this as well: https://github.com/dotnet/roslyn/issues/15940 😉",
                                           "updatedAt":  "2020-09-28T06:44:45Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Visual Studio doesn\u0027t show any compile items for IL.SDK (.ilproj) projects",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/44393",
        "createdAt":  "2020-11-08T20:27:26Z",
        "number":  44393,
        "author":  "trylek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBWGckg==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "tommcdon",
                                            "createdAt":  "2020-11-09T07:05:03Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2021-07-12T16:15:24Z",
        "body":  "In .NET 6 timeframe we intend to improve on the following aspects of developer inner loop productivity based on feedback regarding common pain points:\r\n\r\n- Reduce manual steps needed for unit testing of private coreclr dev bits from 4 to 1\r\n- Coreclr up-to-date check takes \u003c 5s on an average dev machine\r\n- Local build time\r\n- Local build reliability and consistency\r\n- Telemetry\r\n\r\n**Unit testing**\r\n\r\n- [ ] Define a msbuild hooks that allows you to replace the runtime and host inside a retail dotnet sdk install. This will enable \u0027overriding\u0027 runtime components with private developer flies.\r\n- [ ] Produce a dev-inner loop based off of single file. The single file host includes various runtime components compiled into a static library.  This removes the need of manual patching of files. \r\n- [ ] Build on top of the prototype to extend to other areas of the runtime, such as using different libraries.  \r\n\r\n**Local build time**\r\n\r\n- [x] (P1) Improve local build by switching over to Ninja on Windows, https://github.com/dotnet/runtime/issues/33872\r\n- [ ] (Incremental, P1) Investigate reducing complexity of test build / execution; https://github.com/dotnet/runtime/issues/36295\r\n\r\n**Local build reliability and consistency** (5 weeks total)\r\n\r\n- [ ] (1 week, P2) Failure in build-runtime.cmd related to missing UCRT in Windows; https://github.com/dotnet/runtime/issues/42774\r\n- [ ] (2 days, P1) Failure in enforcepgo doesn\u0027t fail the build; https://github.com/dotnet/runtime/issues/35089\r\n- [ ] (2 days, P2) Sharing violation reading pgd file in parallel coreclr local builds; https://github.com/dotnet/runtime/issues/46018\r\n- [ ] (2 days, P2) Spurious mkdir error message during Linux build; https://github.com/dotnet/runtime/issues/34342\r\n- [x] (2 days) installer.tasks.dll not found in local runtime build; https://github.com/dotnet/runtime/issues/46020\r\n- [ ] (2 days, P1) Obsolete warnings in clean build; https://github.com/dotnet/runtime/issues/39976\r\n- [ ] (2 days, P1) Test run files should be arch/OS distinguished; https://github.com/dotnet/runtime/issues/1737\r\n- [ ] (1 week, P2) Enable more MSVC warnings; https://github.com/dotnet/runtime/issues/42767\r\n- [ ] (1 week, P2) Per-component (coreclr, libraries, installer, mono?) cmake args; https://github.com/dotnet/runtime/issues/42711\r\n\r\n**Documentation** (2 days total)\r\n\r\n- [ ] (2 days, P1) Build doesn\u0027t see libs subset even though it\u0027s been built; https://github.com/dotnet/runtime/issues/36528\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOLjzSVg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3NTczNzk0Mg==",
                                           "createdAt":  "2021-02-09T07:40:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "Related: https://github.com/dotnet/runtime/issues/47022",
                                           "updatedAt":  "2021-02-09T07:40:07Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Team Epic: .NET Runtime Repo Developer Inner Loop Productivity",
        "labels":  [
                       "area-Infrastructure-coreclr",
                       "User Story",
                       "Bottom Up Work"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/44394",
        "createdAt":  "2020-11-08T20:35:05Z",
        "number":  44394,
        "author":  "trylek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-07-12T16:15:25Z",
        "body":  "This epic covers developer interaction with lab pipelines (AzDO); provisions for being able to analyze and investigate AzDO failures and other related forms of telemetry.\r\n\r\n- Lab stability and performance\r\n- Reproduction of Helix environment\r\n- Diagnostic files produced by CI\r\n- Dump management\r\n- Documentation\r\n\r\n**Lab stability and performance** (5 weeks total)\r\n\r\n- [ ] (2 days, P3) Remove x64 binaries before submitting crossgen comparison job; https://github.com/dotnet/runtime/issues/34103\r\n- [ ] (2 weeks, P2) Fix IL symbols in .NET Core 2.1; https://github.com/dotnet/runtime/issues/33550\r\n- [ ] (2 weeks, P2) Protect Ubuntu by using registry-based image to run in CI; https://github.com/dotnet/runtime/issues/32309\r\n- [ ] (1 week to design, P2) Add more specific filtering for ARM / ARM64 testing; https://github.com/dotnet/runtime/issues/33070\r\n\r\n**Reproduction of Helix environment** (13 weeks total)\r\n\r\n- [ ] (3 weeks, P1) Making it easier to retrieve repro files for a Helix work item; https://github.com/dotnet/runtime/issues/45700\r\n- [ ] (4 weeks, P1) Means to construct a repro environment (e.g. a local Hyper-V, an Azure VM) based on the Helix configuration; https://github.com/dotnet/runtime/issues/45701\r\n- [ ] (2 weeks, P1) Support for running Helix client execution scripts in the repro environment; https://github.com/dotnet/runtime/issues/45702\r\n- [ ] (4 weeks, P1) Injecting debugging / intervention points in the work item execution pipeline; https://github.com/dotnet/runtime/issues/45704\r\n\r\n**Diagnostic files produced by CI** (7 weeks total)\r\n\r\n- [ ] (2 weeks, P1) Produce msbuild binlog files for all build phases that today produce the triplets of logs / errors / warnings; https://github.com/dotnet/runtime/issues/45706\r\n- [ ] (3 weeks, P1) Produce dumps for crashing build tools on the AzDO build machines; https://github.com/dotnet/runtime/issues/45708\r\n- [x] (2 weeks to investigate, P2) Make sure that all Helix test failures including timeouts are covered by dumps; https://github.com/dotnet/runtime/issues/45709\r\n\r\n**Dump management** (5 weeks total)\r\n\r\n- [ ] (1 week, P1) Improve documentation on retrieving and using dumps; https://github.com/dotnet/runtime/issues/45711\r\n- [ ] (4 weeks, P2) Investigate means for automated dump \u0026 symbol download followed by something like \u003ccode\u003eSOS !analyze\u003c/code\u003e, ideally made part of logs for the failed test; https://github.com/dotnet/runtime/issues/45712\r\n\r\n**Documentation**\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOLnv3OQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3NzY0MzQ4MQ==",
                                           "createdAt":  "2021-02-11T17:02:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "@jeffschwMSFT is it OK to remove Team Epic from the various titles ? I think it\u0027s a bit confusing",
                                           "updatedAt":  "2021-02-11T17:02:06Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3OTg2OTE3NA==",
                                           "createdAt":  "2021-02-16T14:24:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeffschwMSFT",
                                           "body":  "I am neutral, what is confusing about the title?  ",
                                           "updatedAt":  "2021-02-16T14:24:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3OTg3MzY0NA==",
                                           "createdAt":  "2021-02-16T14:31:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "I think that Dan\u0027s point was just that having \"Team Epic\" at the front of each title seems a bit superfluous.",
                                           "updatedAt":  "2021-02-16T14:31:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3OTg3NjE1Mw==",
                                           "createdAt":  "2021-02-16T14:35:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeffschwMSFT",
                                           "body":  "I am fine either way.  I feel the titles are unique to the issue at hand, so I was curious if this was hitting a query or something.",
                                           "updatedAt":  "2021-02-16T14:35:39Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Team Epic: Lab Reliability, Accountability and Telemetry",
        "labels":  [
                       "area-Infrastructure-coreclr",
                       "User Story",
                       "Bottom Up Work"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/44395",
        "createdAt":  "2020-11-08T20:42:03Z",
        "number":  44395,
        "author":  "trylek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCqhs4Q==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "srxqds",
                                            "createdAt":  "2020-11-08T23:06:52Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "akhanalcs",
                                            "createdAt":  "2022-09-10T21:15:09Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "akhanalcs",
                                            "createdAt":  "2022-09-10T21:15:11Z"
                                        }
                                    ],
                          "totalCount":  3
                      },
        "updatedAt":  "2021-07-12T16:15:25Z",
        "body":  "This epic revolves around keeping the infrastructure itself healthy:\r\n\r\n- Documentation\r\n- Build system and pipeline hygiene\r\n- Adoption of new testing modes\r\n- Lab accountability \u0026 telemetry support\r\n\r\n**Documentation**\r\n\r\n- [ ] Clarify steps for building the entire runtime and class libraries for armel; https://github.com/dotnet/runtime/issues/2301\r\n\r\n**Build system and pipeline hygiene**\r\n\r\n- [ ] Investigate removal of Python from CoreCLR product \u0026 test build; https://github.com/dotnet/runtime/issues/38574\r\n- [ ] (2 weeks, p3) Convert genRuntimeEventSources.py script to msbuild task; https://github.com/dotnet/runtime/issues/45733\r\n- [ ] Allow building parts of the native CoreCLR runtime; https://github.com/dotnet/runtime/issues/38571\r\n- [ ] Remove all build-related dependencies from the Helix docker images; https://github.com/dotnet/runtime/issues/34104\r\n- [ ] Investigate simplifying XUnit test wrapper generation; https://github.com/dotnet/runtime/issues/42969\r\n- [ ] Better align CoreCLR build with Arcade; https://github.com/dotnet/runtime/issues/97\r\n- [ ] (2 weeks, needs design) Change runtime YML to build tests and product in parallel; https://github.com/dotnet/runtime/issues/33067\r\n\r\n**Adoption of new testing models**\r\n\r\n- [ ] Switch over testing to use \u003ccode\u003edotnet test\u003c/code\u003e; https://github.com/dotnet/runtime/issues/33068\r\n\r\n**Source build subcategory:**\r\n\r\n- [ ] Expand testing to source build legs; https://github.com/dotnet/runtime/issues/41172\r\n- [ ] Add source-build \u0027smoke test\u0027; https://github.com/dotnet/runtime/issues/39647\r\n- [ ] Add inner-loop correctness tests for source build; https://github.com/dotnet/runtime/issues/39649\r\n\r\n**Lab accountability and telemetry support**",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Team Epic: Evolution and Hygiene",
        "labels":  [
                       "area-Infrastructure-coreclr",
                       "User Story",
                       "Bottom Up Work"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/45378",
        "createdAt":  "2020-11-30T19:48:54Z",
        "number":  45378,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-08-04T23:45:56Z",
        "body":  "```\r\n/__w/1/s/dotnet.sh: line 27: 10092 Segmentation fault      (core dumped) ${dotnetPath} \"$@\"\r\n##[error]Error: XUnit wrapper build failed. Refer to the build log files for details (above)\r\n##[error]Bash exited with code \u0027139\u0027.\r\n```\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=903083\u0026view=logs\u0026j=2296eecc-f5ab-523f-c15d-f45eef1bfdea\u0026t=e1baf605-103b-50ce-aa5c-c257b320b3ad\r\n\r\ncc @trylek @jkotas \r\n\u003c!-- runfo report start --\u003e\r\nRunfo Tracking Issue: [runtime xunit wrapper build failed](https://runfo.azurewebsites.net/tracking/issue/137)\r\n|Definition|Build|Kind|Job Name|\r\n|---|---|---|---|\r\n\r\n\r\n\r\nBuild Result Summary\r\n|Day Hit Count|Week Hit Count|Month Hit Count|\r\n|---|---|---|\r\n|0|0|0|\r\n\r\n\u003c!-- runfo report end --\u003e\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOK-B_TA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDczNjEwNzA5NQ==",
                                           "createdAt":  "2020-11-30T23:01:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "@ViktorHofer - hmm, I am somewhat confused, I may be blind but I only see one failure in some iOS Mono run in that AzDO pipeline run, can it be the case that you accidentally shared the link to the wrong run?",
                                           "updatedAt":  "2020-11-30T23:01:23Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDczNjEwNzQ5OQ==",
                                           "createdAt":  "2020-11-30T23:02:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "I retried the build in that PR. Click on \"Show previous attempts\" under \"Attempt 2\".",
                                           "updatedAt":  "2020-11-30T23:02:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDczNjExMzA3Ng==",
                                           "createdAt":  "2020-11-30T23:17:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "This is not actionable without a dump.",
                                           "updatedAt":  "2020-11-30T23:17:36Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDczNjEyNDA0Ng==",
                                           "createdAt":  "2020-11-30T23:49:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "the log says \"core dumped\" but I have no idea where that dump would be found.",
                                           "updatedAt":  "2020-11-30T23:49:50Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDczNjEyNDg4NA==",
                                           "createdAt":  "2020-11-30T23:52:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "I think the problem is that this looks like a failure of the .NET CLI itself, the XUnit wrapper build as such seemingly finished fine. I\u0027m not sure whether the test infra caters for this eventuality, probably not. In fact I think this is the first time I\u0027m seeing this type of crash.",
                                           "updatedAt":  "2020-11-30T23:52:32Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDczNjEyNjQ1Mg==",
                                           "createdAt":  "2020-11-30T23:57:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "Right, this is crash of .NET CLI itself. These crashed are relatively rare, but they do happen.\r\n\r\n`kernel.core_pattern` kernel config controls where the dump is stored.",
                                           "updatedAt":  "2020-11-30T23:57:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDczNjEzMjc0Nw==",
                                           "createdAt":  "2020-12-01T00:16:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "OK, I guess in such case the actionable aspect of this issue is to make sure we collect dumps from .NET CLI crashes and I\u0027m going to rebrand it like that if you don\u0027t object.",
                                           "updatedAt":  "2020-12-01T00:16:56Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDczNjEzMjk0MA==",
                                           "createdAt":  "2020-12-01T00:17:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Just spoke with MattGal about this and unfortunately we didn\u0027t get the dump as it wasn\u0027t uploaded. Dump collection unfortunately doesn\u0027t work in containers during building.",
                                           "updatedAt":  "2020-12-01T00:17:28Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "runtime xunit wrapper build failed",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/45423",
        "createdAt":  "2020-12-01T18:28:51Z",
        "number":  45423,
        "author":  "trylek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBvY-wg==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Maxwell175",
                                            "createdAt":  "2021-06-20T02:36:02Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2021-07-12T16:15:26Z",
        "body":  "OS: Windows\r\nArchitecture: x86\r\nConfiguration: release\r\nRepro command-line (non-deterministic): \"build clr+libs -c Release -a x86\"\r\n\r\n\u003cpre\u003e\r\n  LINK : fatal error LNK1266: error reading instrumentation file \u0027C:\\Users\\trylek\\.nuget\\packages\\optimization.windows_nt-x86.pgo.coreclr\\99.99.99-master-20200806.6\\data\\coreclr.pgd\u0027; Sharing violation [D:\\git\\runtime\\artifacts\\obj\\coreclr\\windows.x86.Release\\src\\dlls\\mscoree\\coreclr\\coreclr.vcxproj]\r\n\r\n  Build FAILED.\r\n\r\n  LINK : fatal error LNK1266: error reading instrumentation file \u0027C:\\Users\\trylek\\.nuget\\packages\\optimization.windows_nt-x86.pgo.coreclr\\99.99.99-master-20200806.6\\data\\coreclr.pgd\u0027; Sharing violation [D:\\git\\runtime\\artifacts\\obj\\coreclr\\windows.x86.Release\\src\\dlls\\mscoree\\coreclr\\coreclr.vcxproj]\r\n\u003c/pre\u003e\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Local CoreCLR release build non-deterministically fails due to sharing violation when reading coreclr.pgd",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/45700",
        "createdAt":  "2020-12-07T20:06:44Z",
        "number":  45700,
        "author":  "trylek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-07-12T16:15:27Z",
        "body":  "*Initial cost estimate*: 1 week to design, 2 weeks to implement\r\n*Initial contacts*: @MattGal, @trylek, @tommcdon \r\n\r\nAccording to developer feedback, one principal pain point is local reproduction of Helix test executions. This work item tracks investigation, design and implementation of a scheme to make it easier for developers to download Helix work item artifacts for local test execution. This work may require cooperation with the core-eng team. Available options may include one or more of the following:\r\n\r\n1. Providing links in AzDO test result pages to the work item / correlation payloads.\r\n\r\n2. Creating runtime script to download test artifacts given build number and test identification.\r\n\r\n3. Including links to the payloads in the work item logs.\r\n\r\n4. Running the Helix python scripts locally to maximize fidelity of the Helix repro.\r\n\r\n5. Providing a link / script to provision an Azure VM \"just like the infra would the Helix machine for the item\" and providing the developer access to it. Needs clarification w.r.t. our VM budget.\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOLB65uw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0MDE3MTUyOQ==",
                                           "createdAt":  "2020-12-07T20:48:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tommcdon",
                                           "body":  "@agocke ",
                                           "updatedAt":  "2020-12-07T20:48:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0MDE5OTAxOQ==",
                                           "createdAt":  "2020-12-07T21:46:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "naricc",
                                           "body":  "Is part of this an extension to the runfo tool @jaredpar created (https://github.com/jaredpar/runfo/tree/master/runfo#runfo), or is it all an entirely seperate thing?",
                                           "updatedAt":  "2020-12-07T21:47:13Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0MDIxMTEzMQ==",
                                           "createdAt":  "2020-12-07T22:11:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "That should be probably part of the design, I agree that some form of integration with runfo would be useful. In fact most of the \"lab reliability, accountability and telemetry\" items in the Infra backlog deal with local reproduction of the Helix environment as it has been repeatedly reported as one of the biggest developer pain points - most of them should be probably in some form applicable to runfo.",
                                           "updatedAt":  "2020-12-07T22:11:28Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Make it easier to retrieve repro files for a Helix work item",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/45701",
        "createdAt":  "2020-12-07T20:16:36Z",
        "number":  45701,
        "author":  "trylek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-07-12T16:15:27Z",
        "body":  "*Initial cost estimate*: 4 weeks\r\n*Initial contacts*: @MattGal, @trylek, @tommcdon \r\n\r\nOne of top developer-reported pain points is the inability to locally reproduce a Helix work item. This issue tracks the design and implementation of a scheme bridging this gap. It will likely require cooperation from the core-eng team. The design may include one or more of the following options:\r\n\r\n1. Providing a script / link for installation of a local Hyper-V VM with the appropriate configuration;\r\n\r\n2. Providing a script / link for allocation and configuration of an Azure VM with the appropriate configuration - needs clarification w.r.t. Azure machine budget;\r\n\r\n3. Detailing machine configuration somewhere in the AzDO test results and / or in the test logs;\r\n\r\n4. Providing means to redirect the test results to a suitable location during local execution (as opposed to upload to Azure in case of test runs on Helix clients).",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOLlVmNg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0MDE4OTk1Mg==",
                                           "createdAt":  "2020-12-07T21:27:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tommcdon",
                                           "body":  "@agocke ",
                                           "updatedAt":  "2020-12-07T21:27:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3NzM0ODY2Mg==",
                                           "createdAt":  "2021-02-11T10:34:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lukas-lansky",
                                           "body":  "With regards to 2, [HelixReproVMs](https://ms.portal.azure.com/#@microsoft.onmicrosoft.com/resource/subscriptions/a4fc5514-21a9-4296-bfaf-5c7ee7fa35d1/resourceGroups/HelixReproVMs/providers/Microsoft.DevTestLab/labs/HelixReproVMs/overview) DevTest Lab can be already used to create Helix machines from the same VHD that is being used in CI:\r\n\r\n![image](https://user-images.githubusercontent.com/1655944/107623666-f8621a00-6c59-11eb-9e7b-06e357575fe5.png)\r\n\r\nWhat\u0027s missing is the ability to easily re-run an existing Helix job. Core-eng provided [Repro Tool](https://github.com/dotnet/core-eng/blob/master/Documentation/Project-Docs/Repro%20Environment/ReproTool%20Documentation.md) in the past, but for some reasons I\u0027m not totally familiar with it\u0027s no longer available.",
                                           "updatedAt":  "2021-02-11T10:34:08Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Means to construct a repro environment (e.g. a local Hyper-V, an Azure VM) based on the Helix configuration",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/45702",
        "createdAt":  "2020-12-07T20:20:05Z",
        "number":  45702,
        "author":  "trylek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-07-12T16:15:27Z",
        "body":  "*Initial cost assessment*: 2 weeks\r\n*Initial contacts*: @MattGal, @trylek, @tommcdon \r\n\r\nAccording to developer feedback, one principal pain point is local reproduction of Helix test executions. This issue tracks design and implementation of a scheme that will let developers mimic Helix work item behavior by running the Helix client python scripts locally, in a HyperV or Azure VM. The design and implementation will likely require cooperation with the core-eng team.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOLB5oVw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0MDE5MDI5NQ==",
                                           "createdAt":  "2020-12-07T21:27:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tommcdon",
                                           "body":  "@agocke",
                                           "updatedAt":  "2020-12-07T21:27:38Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Support for running Helix client execution scripts in the repro environment",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/45704",
        "createdAt":  "2020-12-07T20:28:41Z",
        "number":  45704,
        "author":  "trylek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-07-12T16:15:28Z",
        "body":  "*Initial cost estimate*: 1 week to design, 3 weeks to implement\r\n*Initial contacts*: @MattGal, @trylek, @tommcdon \r\n\r\nOne of the top developer pain points is locally reproducing Helix work items. This work item tracks the design and implementation of a mechanism to let developers control the work item repro process for debugging purposes. This may include one or more of the following:\r\n\r\n1. Pausing before launching the actual test so that the developer can start tools like PerfMon or PerfView, launch a counterpart service used by the test etc.\r\n\r\n2. Automatically running the debugger upon test launch.\r\n\r\n3. Providing means to make the appropriate debugging symbols visible to the local debugger.\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOLB5xyA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0MDE5MDM3MQ==",
                                           "createdAt":  "2020-12-07T21:27:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tommcdon",
                                           "body":  "@agocke",
                                           "updatedAt":  "2020-12-07T21:27:46Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0MDE5MjcxMg==",
                                           "createdAt":  "2020-12-07T21:32:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tommcdon",
                                           "body":  "@hoyosjs ",
                                           "updatedAt":  "2020-12-07T21:32:45Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Injecting debugging / intervention points in the work item execution pipeline",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/45706",
        "createdAt":  "2020-12-07T20:35:33Z",
        "number":  45706,
        "author":  "trylek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-07-12T16:15:28Z",
        "body":  "*Initial cost estimate*: 2 weeks\r\n*Initial contacts*: @trylek, @safern, @ViktorHofer \r\n\r\nReview our current policy of emitting MsBuild text-based logs and maximize the use of binlog files that contain much more complete information usable for investigating build issues.\r\n\r\n- [ ] Measure MsBuild performance w.r.t. emitting the text-based vs. binlog files;\r\n- [ ] Use the measurements to design which product / test build steps should newly produce binlog files in addition to or instead of the existing text logs without substantial performance degradation;\r\n- [ ] Review the design on the @dotnet/runtime-infrastructure alias;\r\n- [ ] Implement the design.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOLHFMTA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0MTMxOTY3OQ==",
                                           "createdAt":  "2020-12-09T00:33:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODLsf3A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "safern",
                                                                               "createdAt":  "2020-12-09T00:34:55Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2020-12-09T01:17:12Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "trylek",
                                                                               "createdAt":  "2020-12-09T01:23:34Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2020-12-09T15:20:30Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "t-mustafin",
                                                                               "createdAt":  "2023-11-02T19:42:43Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "KirillOsenkov",
                                           "body":  "Note that there\u0027s an API to playback the .binlog into a text log with any level of verbosity.\r\nAlso it\u0027s simple to write a console app that will read all the warnings/errors from the binlog and output them to a text log.\r\n\r\nHowever note that reading a .binlog on Core is 10x slower than on Desktop because of this bug:\r\nhttps://github.com/dotnet/runtime/issues/39233\r\n\r\nAdding /bl does slow down your build, but not as much as adding a text log with diag verbosity.\r\nMy recommendation is to use /bl and no text logs, and generate text logs either via a little tool or on demand.\r\n\r\nAlso you can view binlogs online using https://live.msbuildlog.com so maybe integrating that into the CI somehow might also be interesting.\r\n\r\nFinally, we have a whole bunch of bugs and a plan on how to reduce binlog overhead, but we haven\u0027t had the time to act on it. See here for details: https://github.com/KirillOsenkov/MSBuildStructuredLog/wiki/BinLog-Perf\r\n",
                                           "updatedAt":  "2020-12-09T00:33:23Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0MTM4Mjg2MA==",
                                           "createdAt":  "2020-12-09T01:18:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "\u003e https://live.msbuildlog.com\r\n\r\nThanks for sharing this link! 😎",
                                           "updatedAt":  "2020-12-09T01:18:08Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0NTU4MDM4NA==",
                                           "createdAt":  "2020-12-15T21:31:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "KirillOsenkov",
                                           "body":  "Update: we have found a workaround for the slowdown I mentioned when reading .binlogs. Just wrapping the GZipStream with a BufferedStream solves the issue. \r\n\r\nCheck out https://github.com/vatsan-madhavan/MSBuildStructuredLogSummary for an example of how to read all the errors and warnings from the binlog.",
                                           "updatedAt":  "2020-12-15T21:31:47Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0NTYyMjYwNA==",
                                           "createdAt":  "2020-12-15T23:05:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "Thanks Kirill for the update - I assume this is basically an extra argument for switching over to binlogs wherever possible.",
                                           "updatedAt":  "2020-12-15T23:05:56Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Produce msbuild binlog files for all build phases that today produce the triplets of logs / errors / warnings",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/45708",
        "createdAt":  "2020-12-07T20:42:30Z",
        "number":  45708,
        "author":  "trylek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-07-12T16:15:29Z",
        "body":  "*Initial cost estimate*: 3 weeks\r\n*Initial contacts*: @trylek, @tommcdon, @MattGal, @janvorli\r\n\r\nToday build crashes in AzDO are generally not actionable as we\u0027re not collecting dumps. This work item tracks the design and implementation of changes to bridge this gap; the design is basically about figuring out what dumps can be produced and designing a lab regression test for this feature.\r\n\r\n1. Collecting dumps for .NET CLI (dotnet / dotnet.exe) crashes;\r\n\r\n2. Collecting dumps for native build tools;\r\n\r\n3. Collecting dumps for managed build tools;\r\n\r\n4. Collecting dumps in containers;\r\n\r\n5. Dump upload to Azure storage as part of build artifacts.\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOLB5xSQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0MDE5MDUwMw==",
                                           "createdAt":  "2020-12-07T21:28:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tommcdon",
                                           "body":  "@agocke",
                                           "updatedAt":  "2020-12-07T21:28:00Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0MDE5MjU4NQ==",
                                           "createdAt":  "2020-12-07T21:32:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tommcdon",
                                           "body":  "@hoyosjs ",
                                           "updatedAt":  "2020-12-07T21:32:28Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Produce dumps for crashing build tools on the AzDO build machines",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/45709",
        "createdAt":  "2020-12-07T20:47:28Z",
        "number":  45709,
        "author":  "trylek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-07-12T16:15:29Z",
        "body":  "*Initial cost estimate*: 2 weeks to investigate\r\n*Initial contacts*: @tommcdon, @trylek, @janvorli, @MattGal \r\n\r\nThis work item tracks reviewing our testing system and making sure that we\u0027re able to collect dumps for all Helix work item failures; for those scenarios that are not covered today we should file follow-up issues to fix them.\r\n\r\n- [ ] Collecting dumps for test timeouts\r\n- [ ] Collecting dumps on all OS\u0027es (Windows, Linux including Alpine, OSX)\r\n- [ ] Collecting dumps on all architectures (x86, x64, arm, arm64)",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOLB5wwA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0MDE5MTA5Nw==",
                                           "createdAt":  "2020-12-07T21:29:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tommcdon",
                                           "body":  "@agocke ",
                                           "updatedAt":  "2020-12-07T21:29:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0MDE5MjQ0OA==",
                                           "createdAt":  "2020-12-07T21:32:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tommcdon",
                                           "body":  "@mikem8361 @hoyosjs ",
                                           "updatedAt":  "2020-12-07T21:32:12Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Make sure that all Helix test failures including timeouts are covered by dumps",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/45711",
        "createdAt":  "2020-12-07T20:56:04Z",
        "number":  45711,
        "author":  "trylek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-07-12T16:15:30Z",
        "body":  "*Initial cost estimate*: 1 week\r\n*Initial contacts*: @tommcdon, @trylek, @janvorli\r\n\r\nThe purpose of this work item is to improve the workflow / diagnostic md files in the runtime repo by including and / or raising the visibility of information on how to retrieve and use Helix dumps. Multiple developers including myself have been frustrated with non-trivial chores regarding dump retrieval and opening including the following aspects:\r\n\r\n- [ ] Per-OS debugger launch instructions\r\n- [ ] Symbol server configuration\r\n\r\nAs part of this work item we should also review the process and consider filing follow-up issues to automate parts of this using generated scripts, AzDO links or other means.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOLB5vxA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0MDE5MTE4Ng==",
                                           "createdAt":  "2020-12-07T21:29:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tommcdon",
                                           "body":  "@agocke ",
                                           "updatedAt":  "2020-12-07T21:29:32Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0MDE5MjE5Ng==",
                                           "createdAt":  "2020-12-07T21:31:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tommcdon",
                                           "body":  "@hoyosjs ",
                                           "updatedAt":  "2020-12-07T21:31:40Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Improve documentation on retrieving and using dumps",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/45712",
        "createdAt":  "2020-12-07T21:01:06Z",
        "number":  45712,
        "author":  "trylek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-07-12T16:15:30Z",
        "body":  "*Initial cost estimate*: 1 week to design, 3 weeks to implement\r\n*Initial contacts*: @tommcdon, @trylek \r\n\r\nMultiple developers including myself have been frustrated by the various tricks needed to properly open a Helix dump. The purpose of this work item is to design and implement a scheme that will automate parts of this process to make it easier for developers. This may include some of the following:\r\n\r\n1. Providing an AzDO link and / or script to run the automated dump opening process as part of test results;\r\n\r\n2. Running some form of SOS !analyze automatically on lab-produced dumps and including the results in test logs.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOLB5wQQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0MDE5MTMyMw==",
                                           "createdAt":  "2020-12-07T21:29:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tommcdon",
                                           "body":  "@agocke ",
                                           "updatedAt":  "2020-12-07T21:29:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0MDE5MjMyMQ==",
                                           "createdAt":  "2020-12-07T21:31:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tommcdon",
                                           "body":  "@hoyosjs ",
                                           "updatedAt":  "2020-12-07T21:31:54Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Investigate means for automated dump \u0026 symbol download followed by something like SOS !analyze, ideally made part of logs for the failed test",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/45733",
        "createdAt":  "2020-12-08T01:09:31Z",
        "number":  45733,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-07-12T16:15:31Z",
        "body":  "*Initial cost estimate*: 2 man-weeks\r\n*Initial contacts*: @ViktorHofer, @trylek\r\n\r\nIn response to https://github.com/dotnet/runtime/issues/688, we should remove the python dependency from the build and a good starting point for that would be the event source file generation in CoreLib. This should be done via an msbuild task (installer.tasks) as pure msbuild presumably isn\u0027t powerful enough.\r\n\r\nAlso note that https://github.com/dotnet/runtime/pull/39052#issuecomment-656709021 indicates that the msbuild task should also have a boolean to allow stubbing the event source file out for new OS bring-up.\r\n\r\n@jkotas for new device/OS bring-up, how does CoreLib itself get compiled without msbuild (as the discussion in the other thread suggested that msbuild might now work initially)?\r\n\r\ncc @dotnet/runtime-infrastructure (coreclr folks especially)",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOLEklEQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0MjQ1OTk4NQ==",
                                           "createdAt":  "2020-12-10T11:23:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBZieqQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2020-12-10T11:26:54Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "\u003e In response to #688, we should remove the python dependency from the build\r\n\r\nnote that the Mono portion of the build uses python too, so if you want to remove it completely we should coordinate that.",
                                           "updatedAt":  "2020-12-10T11:23:40Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0Mjk0OTAxMQ==",
                                           "createdAt":  "2020-12-11T03:47:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "This could also be done with a C# source generator.",
                                           "updatedAt":  "2020-12-11T03:47:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0Mjk1MjkxMQ==",
                                           "createdAt":  "2020-12-11T03:59:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "The file used to generate the events is a manifest, and it generates native headers and c sharp code. Not sure if source generators are the best bet here given we don\u0027t need as much information on the c# side (might be worth thinking about it though with the portable thread pool).",
                                           "updatedAt":  "2020-12-11T04:00:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0Mjk5MTEyMQ==",
                                           "createdAt":  "2020-12-11T06:02:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "There is a scenario in the cookbook that maps to this: https://github.com/dotnet/roslyn/blob/master/docs/features/source-generators.cookbook.md#additional-file-transformation\r\n\r\n\u003e  it generates native headers and c sharp code\r\n\r\nI noticed that https://github.com/dotnet/runtime/blob/master/src/coreclr/scripts/genRuntimeEventSources.py generated C# but I didn\u0027t see the native headers.  Agree that if you need to generate native headers C# source generator isn\u0027t appropriate.\r\n",
                                           "updatedAt":  "2020-12-11T06:02:56Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Convert genRuntimeEventSources.py script to msbuild task",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/45914",
        "createdAt":  "2020-12-10T20:46:20Z",
        "number":  45914,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-09-07T15:01:46Z",
        "body":  "```\r\nCrossgenning of System.Private.CoreLib succeeded.  Finished at\r\n```\r\n\r\nPresumably there should be a date/time after the \"Finished at\" part.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Crossgen finish time in console log isn\u0027t printed",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/46018",
        "createdAt":  "2020-12-13T20:32:49Z",
        "number":  46018,
        "author":  "trylek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-07-12T16:15:31Z",
        "body":  "*Initial cost estimate*: 2 days\r\n*Initial contacts*: @trylek, @jkoritzinsky, @davidwrighton \r\n\r\nOS: **Windows**\r\nArchitecture: **x86**\r\nConfiguration: **Release**\r\nRepro steps (non-deterministic): **build clr+libs+libs.tests -a x86 -c Release** in two runtime repo clones\r\n\r\n\u003cpre\u003e\r\n    D:\\git\\runtime\\artifacts\\obj\\coreclr\\windows.x86.Release\\vm\\wks\\cee_wks_obj.dir\\Release\\ceemain.obj\r\n  LINK : fatal error LNK1266: error reading instrumentation file \u0027C:\\Users\\trylek\\.nuget\\packages\\optimization.windows_nt-x86.pgo.coreclr\\99.99.99-master-20200806.6\\data\\coreclr.pgd\u0027; Sharing violation [D:\\git\\runtime\\artifacts\\obj\\coreclr\\windows.x86.Release\\dlls\\mscoree\\coreclr\\coreclr.vcxproj]\r\n    Finished generating code\r\n    mscordaccore.vcxproj -\u003e D:\\git\\runtime\\artifacts\\obj\\coreclr\\windows.x86.Release\\dlls\\mscordac\\Release\\mscordaccore.dll\r\n\r\n  Build FAILED.\r\n\r\n  LINK : fatal error LNK1266: error reading instrumentation file \u0027C:\\Users\\trylek\\.nuget\\packages\\optimization.windows_nt-x86.pgo.coreclr\\99.99.99-master-20200806.6\\data\\coreclr.pgd\u0027; Sharing violation [D:\\git\\runtime\\artifacts\\obj\\coreclr\\windows.x86.Release\\dlls\\mscoree\\coreclr\\coreclr.vcxproj]\r\n      0 Warning(s)\r\n      1 Error(s)\r\n\u003c/pre\u003e\r\n\r\nLikely the linker opens the PGD file without the sharing flag so that multiple parallel coreclr builds step on each other\u0027s toes. This is happening pretty frequently and degrades local developer inner loop experience. While it seems clearly a linker bug (there\u0027s no reason for it to request exclusive / write access to the pgd file), it remains to be seen whether asking for a linker fix would be actionable so we may want to consider a workaround like copying the file to a repo location prior to linking even though it\u0027s somewhat unfortunate as the file has 36 MB so that it will probably incur a few seconds\u0027 perf penalty.\r\n\r\n/cc @dotnet/runtime-infrastructure ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOLF8odQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0NDQyNTcwMg==",
                                           "createdAt":  "2020-12-14T13:04:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "cc @akoeplinger and @marek-safar regarding the linker ask.",
                                           "updatedAt":  "2020-12-14T13:04:26Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0NDQzMzE4MQ==",
                                           "createdAt":  "2020-12-14T13:17:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "@ViktorHofer this is about the native C++ linker, not the managed linker :)",
                                           "updatedAt":  "2020-12-14T13:17:14Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0NDQzMzc4MQ==",
                                           "createdAt":  "2020-12-14T13:18:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Haha 😂 thanks for clarifying",
                                           "updatedAt":  "2020-12-14T13:18:13Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Sharing violation reading pgd file during concurrent local coreclr builds (windows x86 release)",
        "labels":  [
                       "help wanted",
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/46020",
        "createdAt":  "2020-12-13T20:50:35Z",
        "number":  46020,
        "author":  "trylek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-07-12T16:15:32Z",
        "body":  "*Initial cost estimate*: 2 days\r\n*Initial contacts*: @trylek, @ViktorHofer, @safern \r\n\r\nOS: **Windows**\r\nArchitecture: **x86**\r\nConfiguration: **Release**\r\nRepro steps (non-deterministic): **build clr+libs+libs.tests -a x86 -c Release**\r\n\r\n\u003cpre\u003e\r\n  System -\u003e D:\\git\\runtime\\artifacts\\bin\\manual.System\\net6.0-Release\\System.dll\r\n  System.Data -\u003e D:\\git\\runtime\\artifacts\\bin\\manual.System.Data\\net6.0-Release\\System.Data.dll\r\n  System.Xml -\u003e D:\\git\\runtime\\artifacts\\bin\\manual.System.Xml\\net6.0-Release\\System.Xml.dll\r\n  ApiCompat -\u003e\r\n  Trimming shared framework assemblies with ILLinker...\r\n  externals -\u003e\r\nD:\\git\\runtime\\src\\libraries\\pretest.proj(55,5): error MSB4062: The \"GenerateFileVersionProps\" task could not be loaded from the assembly D:\\git\\runtime\\artifacts\\bin\\installer.tasks\\Debug\\netstandard2.0\\installer.tasks.dll. Could not load file or assembly \u0027D:\\git\\runtime\\artifacts\\bin\\installer.tasks\\Debug\\netstandard2.0\\installer.tasks.dll\u0027. The system cannot find the file specified. Confirm that the \u003cUsingTask\u003e declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask.\r\n\u003c/pre\u003e\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOLGJnzw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0NDQyMzg3OA==",
                                           "createdAt":  "2020-12-14T13:01:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@trylek who reported the issue? This sounds very similar to restore issues where the build doesn\u0027t fail even though restore isn\u0027t entirely successful which is something that Nuget controls and we can\u0027t fix.",
                                           "updatedAt":  "2020-12-14T13:01:46Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0NDQyNDQ1MQ==",
                                           "createdAt":  "2020-12-14T13:02:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "If it was you who encountered the issue, do you still have the full build log available to verify my assumption? ",
                                           "updatedAt":  "2020-12-14T13:02:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0NDU0MzcxMw==",
                                           "createdAt":  "2020-12-14T16:11:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "@ViktorHofer - yes, I hit the issue locally, happens to me quite often. I reran the build yesterday after hitting this so I\u0027m afraid I don\u0027t have the logs readily available but I\u0027ll collect them the next time this reproes - what particular logs are you interested in? I must admit I\u0027m not aware of any \"single global log\", according to my knowledge for instance CoreCLR build emits a series of smaller logs covering the various build steps (individual msbuild executions).",
                                           "updatedAt":  "2020-12-14T16:11:06Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0NDY0NjYwNw==",
                                           "createdAt":  "2020-12-14T19:06:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "AFAIK the global build log should be in `artifacts\\log\\$(Configuration)\\`. I never hit that issue so it might be related to different developer workflows. Logs should help to better understand the issue.",
                                           "updatedAt":  "2020-12-14T19:06:26Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "runtime build failure: \"GenerateFileVersionProps\" task could not be loaded because installer.tasks.dll not found",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/47022",
        "createdAt":  "2021-01-15T00:49:39Z",
        "number":  47022,
        "author":  "agocke",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCYm7iQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jkoritzinsky",
                                            "createdAt":  "2021-01-15T01:05:05Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "omariom",
                                            "createdAt":  "2021-01-15T02:56:09Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "MichalStrehovsky",
                                            "createdAt":  "2021-01-16T08:46:52Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "tommcdon",
                                            "createdAt":  "2021-02-01T20:30:18Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ViktorHofer",
                                            "createdAt":  "2022-04-19T09:46:28Z"
                                        }
                                    ],
                          "totalCount":  5
                      },
        "updatedAt":  "2022-07-26T23:29:35Z",
        "body":  "The time being measured is the time needed to build the `clr` subset, after the subset has been completely built already.\r\n\r\nIf this time were low enough, under 5 seconds or so, it would be feasible to add it as a dependency to other subsets. As it is, it takes roughly 51s on my machine.\r\n\r\nOngoing list of work items, to be updated until we\u0027re at 5 secons or less:\r\n\r\n- [x] Incrementally crossgen System.Private.CoreLib\r\n- [ ] clretwrc appears to always be rebuilt\r\n- [x] Switch to Ninja in Windows by default\r\n  - [x] This will require a workflow for building and preserving VS project files\r\n- [ ] Consider changing the default meaning of `clr` partition\r\n  - [ ] Linux DAC is built by default on Windows (this is expensive. We could try to make it cheaper, or move it out of dev build)\r\n  - [ ] CLR managed tools are built as part of CLR\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOQRtnmg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2MDU3MTMyMA==",
                                           "createdAt":  "2021-01-15T00:49:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-01-15T00:49:44Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3NTc4NTYzNg==",
                                           "createdAt":  "2021-02-09T09:11:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "After building with #48044, a release build up-to-date-check using build-runtime.cmd writes no files other than the CMake cache. \r\n\r\nSome rough numbers with the MSBuild/VS generator on my 8 core machine for an up-to-date check on release x64 fornative builds:\r\n- With `./build.cmd clr.runtime -rc release` it takes somewhere between 40 and 50 seconds. There\u0027s a small overhead on restore of tools here. \r\n- With direct call into `build-runtime` (src/coreclr/build-runtime.cmd -release -x64 -enforcepgo) Roughly 40 seconds.\r\n- With direct call into `build-runtime.cmd` and skipping CMake setup (src/coreclr/build-runtime.cmd -release -x64 -enforcepgo -skipconfigure) 25-30 seconds. This option is not bubbled up to the root build script.\r\n- MSBuild takes 20s-25s of this.\r\n\r\nWith ninja:\r\n- root script and `build-runtime` (src/coreclr/build-runtime.cmd -release -x64 -enforcepgo) take roughly 18-20 seconds.\r\n- `build-runtime.cmd` and skipping CMake setup gives 10-12 seconds.",
                                           "updatedAt":  "2021-02-09T09:11:32Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3NTc5Njg0MQ==",
                                           "createdAt":  "2021-02-09T09:29:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBfZRTA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2021-02-09T11:41:38Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "Largely 10 seconds are used in invoking MSBuild in 3 invocations:\r\n- Generate a version header.\r\n- Restore the pgo package\r\n- Generate a PGO path file. \r\n\r\nThese could arguably be munged into 1 (max two) calls.",
                                           "updatedAt":  "2021-02-09T09:29:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3NTg3OTQ2MQ==",
                                           "createdAt":  "2021-02-09T11:44:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e Largely 10 seconds are used in invoking MSBuild in 3 invocations:\r\n\r\nAre those steps running in incremental builds as well? The version header could presumably have inputs and outputs applied. Restoring via nuget is already incremental so nothing to do there.",
                                           "updatedAt":  "2021-02-09T11:44:10Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5NjkxNjMyMw==",
                                           "createdAt":  "2021-03-11T17:40:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "agocke",
                                           "body":  "@hoyosjs Looking at the log, when I run `build clr -ninja` I still see \r\n\r\n```\r\nRead file version from native version header at \u0027C:/Users/andy/Code/runtime/src/coreclr/../../artifacts/obj/coreclr/_version.h\u0027.\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: C:/Users/andy/Code/runtime/artifacts/nmakeobj/windows.x64.Debug\r\n[1/7] Linking RC shared library dlls\\clretwrc\\clretwrc.dll\r\n[2/7] Linking RC shared library dlls\\mscorrc\\mscorrc.dll\r\n```\r\n\r\nI wasn\u0027t expecting us to have to re-link clretwrc. Any ideas?",
                                           "updatedAt":  "2021-03-11T17:40:56Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5NzAxMjQ5MQ==",
                                           "createdAt":  "2021-03-11T20:03:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "Tracked it down I think. Let me test if it\u0027s that.",
                                           "updatedAt":  "2021-03-11T20:03:40Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5NzMwNDU2Mg==",
                                           "createdAt":  "2021-03-12T07:50:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "Hmm. Looks like what I was seeing will only affect non-Windows system. Will try to see where this is coming from.",
                                           "updatedAt":  "2021-03-12T07:50:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5BFf6l",
                                           "createdAt":  "2022-04-07T16:31:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCXGMMQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2022-04-08T17:47:06Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ericstj",
                                           "body":  "Just imaged a brand new machine and was measuring build performance.  On a repo with zero changes rebuild of CLR subset is taking over a minute and a half, while build of libs is about 20s.\r\n\r\nIt looks to me like CLR is rebuilding a bunch of stuff.  I put up a log at \\\\bvtsrv2\\team\\ericstj\\incremental-build-clr",
                                           "updatedAt":  "2022-04-07T16:31:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5BG2ea",
                                           "createdAt":  "2022-04-08T00:04:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "Looks like this took a 1:15 \r\n`\"C:\\src\\dotnet\\runtime\\src\\coreclr\\build-runtime.cmd\" -x64 -release -pgodatapath \"C:\\Users\\ericstj\\.nuget\\packages\\optimization.windows_nt-x64.pgo.coreclr\\1.0.0-prerelease.22121.2\"`\r\n",
                                           "updatedAt":  "2022-04-08T00:05:09Z"
                                       }
                                   ],
                         "totalCount":  9
                     },
        "title":  "Infra: Reduce build time to perform CLR up-to-date check",
        "labels":  [
                       "help wanted",
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/48070",
        "createdAt":  "2021-02-09T18:58:14Z",
        "number":  48070,
        "author":  "Anipik",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T03:00:15Z",
        "body":  "```\r\nC:\\PROGRA~2\\MICROS~1\\2019\\ENTERP~1\\VC\\Tools\\MSVC\\1428~1.293\\bin\\Hostx86\\x64\\cl.exe  /nologo /TP -DCROSS_COMPILE -DDACCESS_COMPILE -DDEBUGGING_SUPPORTED -DDISABLE_CONTRACTS -DFEATURE_ARRAYSTUB_AS_IL -DFEATURE_BASICFREEZE -DFEATURE_CODE_VERSIONING -DFEATURE_COLLECTIBLE_TYPES -DFEATURE_CORECLR -DFEATURE_CORESYSTEM -DFEATURE_DBGIPC_TRANSPORT_DI -DFEATURE_DBGIPC_TRANSPORT_VM -DFEATURE_DEFAULT_INTERFACES -DFEATURE_EH_FUNCLETS -DFEATURE_EVENTSOURCE_XPLAT -DFEATURE_EVENT_TRACE -DFEATURE_HIJACK -DFEATURE_ICASTABLE -DFEATURE_INSTANTIATINGSTUB_AS_IL -DFEATURE_ISYM_READER -DFEATURE_MANAGED_ETW -DFEATURE_MANAGED_ETW_CHANNELS -DFEATURE_MANUALLY_MANAGED_CARD_BUNDLES -DFEATURE_MULTICASTSTUB_AS_IL -DFEATURE_MULTICOREJIT -DFEATURE_MULTIREG_RETURN -DFEATURE_ON_STACK_REPLACEMENT -DFEATURE_PAL_ANSI -DFEATURE_PERFTRACING -DFEATURE_PERFTRACING_C_LIB -DFEATURE_PGO -DFEATURE_PORTABLE_SHUFFLE_THUNKS -DFEATURE_READYTORUN -DFEATURE_REJIT -DFEATURE_STANDALONE_GC -DFEATURE_STUBS_AS_IL -DFEATURE_SVR_GC -DFEATURE_SYMDIFF -DFEATURE_TIERED_COMPILATION -DFEATURE_USE_ASM_GC_WRITE_BARRIERS -DFEATURE_USE_SOFTWARE_WRITE_WATCH_FOR_GC_HEAP -DHOST_64BIT -DHOST_AMD64 -DHOST_WINDOWS -DNDEBUG -DNO_FIXED_STACK_LIMIT -DPROFILING_SUPPORTED_DATA -DTARGET_64BIT -DTARGET_AMD64 -DTARGET_LINUX -DTARGET_UNIX -DUNICODE -DUNIX_AMD64_ABI -DUNIX_AMD64_ABI_ITF -DURTBLDENV_FRIENDLY=Retail -DWIN32 -DWIN32_LEAN_AND_MEAN -DWINVER=0x0602 -D_BLD_CLR -D_CRT_SECURE_NO_WARNINGS -D_SECURE_SCL=0 -D_UNICODE -D_WIN32 -D_WIN32_WINNT=0x0602 -Ivm -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\vm -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\pal\\prebuilt\\inc -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\..\\..\\artifacts\\obj\\coreclr -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\inc -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\debug\\inc -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\debug\\inc\\amd64 -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\debug\\inc\\dump -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\md\\inc -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\classlibnative\\bcltype -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\classlibnative\\cryptography -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\classlibnative\\inc -Iinc -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\hosts\\inc -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\vm\\amd64 -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\vm\\..\\interop\\inc -ID:\\workspace\\_work\\1\\s\\src\\native\\eventpipe -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\vm\\eventing\\eventpipe /DWIN32 /D_WINDOWS /W3   /GR- /guard:cf /O2 /Ob2 /DNDEBUG -MT   /Ox /nologo /W3 /WX /Oi /Oy- /Gm- /Zp8 /Gy /GS /fp:precise /FC /MP /Zm200 /Zc:strictStrings /Zc:wchar_t /Zc:inline /Zc:forScope /wd4960 /wd4961 /wd4603 /wd4627 /wd4838 /wd4456 /wd4457 /wd4458 /wd4459 /wd4091 /we4640 /wd4291 /wd5105 /we4007 /we4013 /we4102 /we4551 /we4700 /we4806 /w34092 /w34121 /w34125 /w34130 /w34132 /w34212 /w34530 /w35038 /w44177 /Zi /ZH:SHA_256 /source-charset:utf-8 /GL /EHa /Zl /YcD:/workspace/_work/1/s/artifacts/nmakeobj/alpine.x64.Release/crossgen/vm/CMakeFiles/cee_dac.dir/cmake_pch.hxx /FpD:/workspace/_work/1/s/artifacts/nmakeobj/alpine.x64.Release/crossgen/vm/CMakeFiles/cee_dac.dir/cmake_pch.cxx.pch /FID:/workspace/_work/1/s/artifacts/nmakeobj/alpine.x64.Release/crossgen/vm/CMakeFiles/cee_dac.dir/cmake_pch.hxx /showIncludes /Fovm\\CMakeFiles\\cee_dac.dir\\cmake_pch.cxx.obj /Fdvm\\CMakeFiles\\cee_dac.dir\\cee_dac.pdb /FS -c vm\\CMakeFiles\\cee_dac.dir\\cmake_pch.cxx\r\nC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\\corecrt_wstring.h(166): fatal error C1090: PDB API call failed, error code \u002723\u0027: (0x000006BA)\r\n[102/477] Building CXX object utilcode\\CMakeFiles\\utilcodestaticnohost.dir\\cmake_pch.cxx.obj\r\nFAILED: utilcode/CMakeFiles/utilcodestaticnohost.dir/cmake_pch.cxx.obj \r\nC:\\PROGRA~2\\MICROS~1\\2019\\ENTERP~1\\VC\\Tools\\MSVC\\1428~1.293\\bin\\Hostx86\\x64\\cl.exe  /nologo /TP -DCROSS_COMPILE -DDEBUGGING_SUPPORTED -DDISABLE_CONTRACTS -DFEATURE_ARRAYSTUB_AS_IL -DFEATURE_BASICFREEZE -DFEATURE_CODE_VERSIONING -DFEATURE_COLLECTIBLE_TYPES -DFEATURE_CORECLR -DFEATURE_CORESYSTEM -DFEATURE_DBGIPC_TRANSPORT_DI -DFEATURE_DBGIPC_TRANSPORT_VM -DFEATURE_DEFAULT_INTERFACES -DFEATURE_EH_FUNCLETS -DFEATURE_EVENTSOURCE_XPLAT -DFEATURE_EVENT_TRACE -DFEATURE_HIJACK -DFEATURE_ICASTABLE -DFEATURE_INSTANTIATINGSTUB_AS_IL -DFEATURE_ISYM_READER -DFEATURE_MANAGED_ETW -DFEATURE_MANAGED_ETW_CHANNELS -DFEATURE_MANUALLY_MANAGED_CARD_BUNDLES -DFEATURE_MULTICASTSTUB_AS_IL -DFEATURE_MULTICOREJIT -DFEATURE_MULTIREG_RETURN -DFEATURE_ON_STACK_REPLACEMENT -DFEATURE_PAL_ANSI -DFEATURE_PERFTRACING -DFEATURE_PERFTRACING_C_LIB -DFEATURE_PGO -DFEATURE_PORTABLE_SHUFFLE_THUNKS -DFEATURE_PROFAPI_ATTACH_DETACH -DFEATURE_READYTORUN -DFEATURE_REJIT -DFEATURE_STANDALONE_GC -DFEATURE_STUBS_AS_IL -DFEATURE_SVR_GC -DFEATURE_SYMDIFF -DFEATURE_TIERED_COMPILATION -DFEATURE_USE_ASM_GC_WRITE_BARRIERS -DFEATURE_USE_SOFTWARE_WRITE_WATCH_FOR_GC_HEAP -DHOST_64BIT -DHOST_AMD64 -DHOST_WINDOWS -DNDEBUG -DNO_FIXED_STACK_LIMIT -DPROFILING_SUPPORTED -DSELF_NO_HOST -DTARGET_64BIT -DTARGET_AMD64 -DTARGET_LINUX -DTARGET_UNIX -DUNICODE -DUNIX_AMD64_ABI -DUNIX_AMD64_ABI_ITF -DURTBLDENV_FRIENDLY=Retail -DWIN32 -DWIN32_LEAN_AND_MEAN -DWINVER=0x0602 -D_BLD_CLR -D_CRTIMP=\"\" -D_CRT_SECURE_NO_WARNINGS -D_SECURE_SCL=0 -D_UNICODE -D_WIN32 -D_WIN32_WINNT=0x0602 -Iutilcode -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\utilcode -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\pal\\prebuilt\\inc -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\..\\..\\artifacts\\obj\\coreclr -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\inc -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\debug\\inc -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\debug\\inc\\amd64 -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\debug\\inc\\dump -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\md\\inc -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\classlibnative\\bcltype -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\classlibnative\\cryptography -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\classlibnative\\inc -Iinc -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\hosts\\inc /DWIN32 /D_WINDOWS /W3   /GR- /guard:cf /O2 /Ob2 /DNDEBUG -MT   /Ox /nologo /W3 /WX /Oi /Oy- /Gm- /Zp8 /Gy /GS /fp:precise /FC /MP /Zm200 /Zc:strictStrings /Zc:wchar_t /Zc:inline /Zc:forScope /wd4960 /wd4961 /wd4603 /wd4627 /wd4838 /wd4456 /wd4457 /wd4458 /wd4459 /wd4091 /we4640 /wd4291 /wd5105 /we4007 /we4013 /we4102 /we4551 /we4700 /we4806 /w34092 /w34121 /w34125 /w34130 /w34132 /w34212 /w34530 /w35038 /w44177 /Zi /ZH:SHA_256 /source-charset:utf-8 /GL /EHa /Zl /YcD:/workspace/_work/1/s/artifacts/nmakeobj/alpine.x64.Release/crossgen/utilcode/CMakeFiles/utilcodestaticnohost.dir/cmake_pch.hxx /FpD:/workspace/_work/1/s/artifacts/nmakeobj/alpine.x64.Release/crossgen/utilcode/CMakeFiles/utilcodestaticnohost.dir/cmake_pch.cxx.pch /FID:/workspace/_work/1/s/artifacts/nmakeobj/alpine.x64.Release/crossgen/utilcode/CMakeFiles/utilcodestaticnohost.dir/cmake_pch.hxx /showIncludes /Foutilcode\\CMakeFiles\\utilcodestaticnohost.dir\\cmake_pch.cxx.obj /Fdutilcode\\CMakeFiles\\utilcodestaticnohost.dir\\utilcodestaticnohost.pdb /FS -c utilcode\\CMakeFiles\\utilcodestaticnohost.dir\\cmake_pch.cxx\r\nC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\um\\winbase.h(9473): fatal error C1090: PDB API call failed, error code \u002723\u0027: (0x000006BA)\r\n[103/477] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler-dbi.dir\\custattr_import.cpp.obj\r\nFAILED: md/compiler/CMakeFiles/mdcompiler-dbi.dir/custattr_import.cpp.obj \r\nC:\\PROGRA~2\\MICROS~1\\2019\\ENTERP~1\\VC\\Tools\\MSVC\\1428~1.293\\bin\\Hostx86\\x64\\cl.exe  /nologo /TP -DCROSS_COMPILE -DDEBUGGING_SUPPORTED -DDISABLE_CONTRACTS -DFEATURE_ARRAYSTUB_AS_IL -DFEATURE_BASICFREEZE -DFEATURE_CODE_VERSIONING -DFEATURE_COLLECTIBLE_TYPES -DFEATURE_CORECLR -DFEATURE_CORESYSTEM -DFEATURE_DBGIPC_TRANSPORT_DI -DFEATURE_DBGIPC_TRANSPORT_VM -DFEATURE_DEFAULT_INTERFACES -DFEATURE_EH_FUNCLETS -DFEATURE_EVENTSOURCE_XPLAT -DFEATURE_EVENT_TRACE -DFEATURE_HIJACK -DFEATURE_ICASTABLE -DFEATURE_INSTANTIATINGSTUB_AS_IL -DFEATURE_ISYM_READER -DFEATURE_MANAGED_ETW -DFEATURE_MANAGED_ETW_CHANNELS -DFEATURE_MANUALLY_MANAGED_CARD_BUNDLES -DFEATURE_METADATA_CUSTOM_DATA_SOURCE -DFEATURE_METADATA_DEBUGGEE_DATA_SOURCE -DFEATURE_METADATA_EMIT -DFEATURE_METADATA_EMIT_IN_DEBUGGER -DFEATURE_METADATA_INTERNAL_APIS -DFEATURE_METADATA_LOAD_TRUSTED_IMAGES -DFEATURE_METADATA_RELEASE_MEMORY_ON_REOPEN -DFEATURE_MULTICASTSTUB_AS_IL -DFEATURE_MULTICOREJIT -DFEATURE_MULTIREG_RETURN -DFEATURE_ON_STACK_REPLACEMENT -DFEATURE_PAL_ANSI -DFEATURE_PERFTRACING -DFEATURE_PERFTRACING_C_LIB -DFEATURE_PGO -DFEATURE_PORTABLE_SHUFFLE_THUNKS -DFEATURE_PROFAPI_ATTACH_DETACH -DFEATURE_READYTORUN -DFEATURE_REJIT -DFEATURE_STANDALONE_GC -DFEATURE_STUBS_AS_IL -DFEATURE_SVR_GC -DFEATURE_SYMDIFF -DFEATURE_TIERED_COMPILATION -DFEATURE_USE_ASM_GC_WRITE_BARRIERS -DFEATURE_USE_SOFTWARE_WRITE_WATCH_FOR_GC_HEAP -DHOST_64BIT -DHOST_AMD64 -DHOST_WINDOWS -DNDEBUG -DNO_FIXED_STACK_LIMIT -DPROFILING_SUPPORTED -DTARGET_64BIT -DTARGET_AMD64 -DTARGET_LINUX -DTARGET_UNIX -DUNICODE -DUNIX_AMD64_ABI -DUNIX_AMD64_ABI_ITF -DURTBLDENV_FRIENDLY=Retail -DWIN32 -DWIN32_LEAN_AND_MEAN -DWINVER=0x0602 -D_BLD_CLR -D_CRT_SECURE_NO_WARNINGS -D_SECURE_SCL=0 -D_UNICODE -D_WIN32 -D_WIN32_WINNT=0x0602 -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\pal\\prebuilt\\inc -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\..\\..\\artifacts\\obj\\coreclr -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\inc -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\debug\\inc -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\debug\\inc\\amd64 -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\debug\\inc\\dump -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\md\\inc -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\classlibnative\\bcltype -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\classlibnative\\cryptography -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\classlibnative\\inc -Iinc -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\hosts\\inc /DWIN32 /D_WINDOWS /W3   /GR- /guard:cf /O2 /Ob2 /DNDEBUG -MT   /Ox /nologo /W3 /WX /Oi /Oy- /Gm- /Zp8 /Gy /GS /fp:precise /FC /MP /Zm200 /Zc:strictStrings /Zc:wchar_t /Zc:inline /Zc:forScope /wd4960 /wd4961 /wd4603 /wd4627 /wd4838 /wd4456 /wd4457 /wd4458 /wd4459 /wd4091 /we4640 /wd4291 /wd5105 /we4007 /we4013 /we4102 /we4551 /we4700 /we4806 /w34092 /w34121 /w34125 /w34130 /w34132 /w34212 /w34530 /w35038 /w44177 /Zi /ZH:SHA_256 /source-charset:utf-8 /GL /EHa /Zl /YuD:/workspace/_work/1/s/artifacts/nmakeobj/alpine.x64.Release/crossgen/md/compiler/CMakeFiles/mdcompiler-dbi.dir/cmake_pch.hxx /FpD:/workspace/_work/1/s/artifacts/nmakeobj/alpine.x64.Release/crossgen/md/compiler/CMakeFiles/mdcompiler-dbi.dir/cmake_pch.cxx.pch /FID:/workspace/_work/1/s/artifacts/nmakeobj/alpine.x64.Release/crossgen/md/compiler/CMakeFiles/mdcompiler-dbi.dir/cmake_pch.hxx /showIncludes /Fomd\\compiler\\CMakeFiles\\mdcompiler-dbi.dir\\custattr_import.cpp.obj /Fdmd\\compiler\\CMakeFiles\\mdcompiler-dbi.dir\\mdcompiler-dbi.pdb /FS -c D:\\workspace\\_work\\1\\s\\src\\coreclr\\md\\compiler\\custattr_import.cpp\r\nD:\\workspace\\_work\\1\\s\\src\\coreclr\\md\\compiler\\custattr_import.cpp(282): fatal error C1090: PDB API call failed, error code \u002723\u0027: (0x000006BA)\r\n[104/477] Building CXX object utilcode\\CMakeFiles\\utilcode_dac.dir\\cmake_pch.cxx.obj\r\nFAILED: utilcode/CMakeFiles/utilcode_dac.dir/cmake_pch.cxx.obj \r\nC:\\PROGRA~2\\MICROS~1\\2019\\ENTERP~1\\VC\\Tools\\MSVC\\1428~1.293\\bin\\Hostx86\\x64\\cl.exe  /nologo /TP -DCROSS_COMPILE -DDACCESS_COMPILE -DDEBUGGING_SUPPORTED -DDISABLE_CONTRACTS -DFEATURE_ARRAYSTUB_AS_IL -DFEATURE_BASICFREEZE -DFEATURE_CODE_VERSIONING -DFEATURE_COLLECTIBLE_TYPES -DFEATURE_CORECLR -DFEATURE_CORESYSTEM -DFEATURE_DBGIPC_TRANSPORT_DI -DFEATURE_DBGIPC_TRANSPORT_VM -DFEATURE_DEFAULT_INTERFACES -DFEATURE_EH_FUNCLETS -DFEATURE_EVENTSOURCE_XPLAT -DFEATURE_EVENT_TRACE -DFEATURE_HIJACK -DFEATURE_ICASTABLE -DFEATURE_INSTANTIATINGSTUB_AS_IL -DFEATURE_ISYM_READER -DFEATURE_MANAGED_ETW -DFEATURE_MANAGED_ETW_CHANNELS -DFEATURE_MANUALLY_MANAGED_CARD_BUNDLES -DFEATURE_MULTICASTSTUB_AS_IL -DFEATURE_MULTICOREJIT -DFEATURE_MULTIREG_RETURN -DFEATURE_ON_STACK_REPLACEMENT -DFEATURE_PAL_ANSI -DFEATURE_PERFTRACING -DFEATURE_PERFTRACING_C_LIB -DFEATURE_PGO -DFEATURE_PORTABLE_SHUFFLE_THUNKS -DFEATURE_READYTORUN -DFEATURE_REJIT -DFEATURE_STANDALONE_GC -DFEATURE_STUBS_AS_IL -DFEATURE_SVR_GC -DFEATURE_SYMDIFF -DFEATURE_TIERED_COMPILATION -DFEATURE_USE_ASM_GC_WRITE_BARRIERS -DFEATURE_USE_SOFTWARE_WRITE_WATCH_FOR_GC_HEAP -DHOST_64BIT -DHOST_AMD64 -DHOST_WINDOWS -DNDEBUG -DNO_FIXED_STACK_LIMIT -DPROFILING_SUPPORTED_DATA -DSELF_NO_HOST -DTARGET_64BIT -DTARGET_AMD64 -DTARGET_LINUX -DTARGET_UNIX -DUNICODE -DUNIX_AMD64_ABI -DUNIX_AMD64_ABI_ITF -DURTBLDENV_FRIENDLY=Retail -DWIN32 -DWIN32_LEAN_AND_MEAN -DWINVER=0x0602 -D_BLD_CLR -D_CRT_SECURE_NO_WARNINGS -D_SECURE_SCL=0 -D_UNICODE -D_WIN32 -D_WIN32_WINNT=0x0602 -Iutilcode -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\utilcode -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\pal\\prebuilt\\inc -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\..\\..\\artifacts\\obj\\coreclr -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\inc -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\debug\\inc -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\debug\\inc\\amd64 -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\debug\\inc\\dump -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\md\\inc -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\classlibnative\\bcltype -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\classlibnative\\cryptography -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\classlibnative\\inc -Iinc -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\hosts\\inc /DWIN32 /D_WINDOWS /W3   /GR- /guard:cf /O2 /Ob2 /DNDEBUG -MT   /Ox /nologo /W3 /WX /Oi /Oy- /Gm- /Zp8 /Gy /GS /fp:precise /FC /MP /Zm200 /Zc:strictStrings /Zc:wchar_t /Zc:inline /Zc:forScope /wd4960 /wd4961 /wd4603 /wd4627 /wd4838 /wd4456 /wd4457 /wd4458 /wd4459 /wd4091 /we4640 /wd4291 /wd5105 /we4007 /we4013 /we4102 /we4551 /we4700 /we4806 /w34092 /w34121 /w34125 /w34130 /w34132 /w34212 /w34530 /w35038 /w44177 /Zi /ZH:SHA_256 /source-charset:utf-8 /GL /EHa /Zl /YcD:/workspace/_work/1/s/artifacts/nmakeobj/alpine.x64.Release/crossgen/utilcode/CMakeFiles/utilcode_dac.dir/cmake_pch.hxx /FpD:/workspace/_work/1/s/artifacts/nmakeobj/alpine.x64.Release/crossgen/utilcode/CMakeFiles/utilcode_dac.dir/cmake_pch.cxx.pch /FID:/workspace/_work/1/s/artifacts/nmakeobj/alpine.x64.Release/crossgen/utilcode/CMakeFiles/utilcode_dac.dir/cmake_pch.hxx /showIncludes /Foutilcode\\CMakeFiles\\utilcode_dac.dir\\cmake_pch.cxx.obj /Fdutilcode\\CMakeFiles\\utilcode_dac.dir\\utilcode_dac.pdb /FS -c utilcode\\CMakeFiles\\utilcode_dac.dir\\cmake_pch.cxx\r\nC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\um\\winbase.h(7588): fatal error C1090: PDB API call failed, error code \u002723\u0027: (0x000006BA)\r\n[105/477] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler-dbi.dir\\custattr_emit.cpp.obj\r\nFAILED: md/compiler/CMakeFiles/mdcompiler-dbi.dir/custattr_emit.cpp.obj \r\nC:\\PROGRA~2\\MICROS~1\\2019\\ENTERP~1\\VC\\Tools\\MSVC\\1428~1.293\\bin\\Hostx86\\x64\\cl.exe  /nologo /TP -DCROSS_COMPILE -DDEBUGGING_SUPPORTED -DDISABLE_CONTRACTS -DFEATURE_ARRAYSTUB_AS_IL -DFEATURE_BASICFREEZE -DFEATURE_CODE_VERSIONING -DFEATURE_COLLECTIBLE_TYPES -DFEATURE_CORECLR -DFEATURE_CORESYSTEM -DFEATURE_DBGIPC_TRANSPORT_DI -DFEATURE_DBGIPC_TRANSPORT_VM -DFEATURE_DEFAULT_INTERFACES -DFEATURE_EH_FUNCLETS -DFEATURE_EVENTSOURCE_XPLAT -DFEATURE_EVENT_TRACE -DFEATURE_HIJACK -DFEATURE_ICASTABLE -DFEATURE_INSTANTIATINGSTUB_AS_IL -DFEATURE_ISYM_READER -DFEATURE_MANAGED_ETW -DFEATURE_MANAGED_ETW_CHANNELS -DFEATURE_MANUALLY_MANAGED_CARD_BUNDLES -DFEATURE_METADATA_CUSTOM_DATA_SOURCE -DFEATURE_METADATA_DEBUGGEE_DATA_SOURCE -DFEATURE_METADATA_EMIT -DFEATURE_METADATA_EMIT_IN_DEBUGGER -DFEATURE_METADATA_INTERNAL_APIS -DFEATURE_METADATA_LOAD_TRUSTED_IMAGES -DFEATURE_METADATA_RELEASE_MEMORY_ON_REOPEN -DFEATURE_MULTICASTSTUB_AS_IL -DFEATURE_MULTICOREJIT -DFEATURE_MULTIREG_RETURN -DFEATURE_ON_STACK_REPLACEMENT -DFEATURE_PAL_ANSI -DFEATURE_PERFTRACING -DFEATURE_PERFTRACING_C_LIB -DFEATURE_PGO -DFEATURE_PORTABLE_SHUFFLE_THUNKS -DFEATURE_PROFAPI_ATTACH_DETACH -DFEATURE_READYTORUN -DFEATURE_REJIT -DFEATURE_STANDALONE_GC -DFEATURE_STUBS_AS_IL -DFEATURE_SVR_GC -DFEATURE_SYMDIFF -DFEATURE_TIERED_COMPILATION -DFEATURE_USE_ASM_GC_WRITE_BARRIERS -DFEATURE_USE_SOFTWARE_WRITE_WATCH_FOR_GC_HEAP -DHOST_64BIT -DHOST_AMD64 -DHOST_WINDOWS -DNDEBUG -DNO_FIXED_STACK_LIMIT -DPROFILING_SUPPORTED -DTARGET_64BIT -DTARGET_AMD64 -DTARGET_LINUX -DTARGET_UNIX -DUNICODE -DUNIX_AMD64_ABI -DUNIX_AMD64_ABI_ITF -DURTBLDENV_FRIENDLY=Retail -DWIN32 -DWIN32_LEAN_AND_MEAN -DWINVER=0x0602 -D_BLD_CLR -D_CRT_SECURE_NO_WARNINGS -D_SECURE_SCL=0 -D_UNICODE -D_WIN32 -D_WIN32_WINNT=0x0602 -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\pal\\prebuilt\\inc -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\..\\..\\artifacts\\obj\\coreclr -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\inc -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\debug\\inc -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\debug\\inc\\amd64 -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\debug\\inc\\dump -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\md\\inc -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\classlibnative\\bcltype -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\classlibnative\\cryptography -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\classlibnative\\inc -Iinc -ID:\\workspace\\_work\\1\\s\\src\\coreclr\\hosts\\inc /DWIN32 /D_WINDOWS /W3   /GR- /guard:cf /O2 /Ob2 /DNDEBUG -MT   /Ox /nologo /W3 /WX /Oi /Oy- /Gm- /Zp8 /Gy /GS /fp:precise /FC /MP /Zm200 /Zc:strictStrings /Zc:wchar_t /Zc:inline /Zc:forScope /wd4960 /wd4961 /wd4603 /wd4627 /wd4838 /wd4456 /wd4457 /wd4458 /wd4459 /wd4091 /we4640 /wd4291 /wd5105 /we4007 /we4013 /we4102 /we4551 /we4700 /we4806 /w34092 /w34121 /w34125 /w34130 /w34132 /w34212 /w34530 /w35038 /w44177 /Zi /ZH:SHA_256 /source-charset:utf-8 /GL /EHa /Zl /YuD:/workspace/_work/1/s/artifacts/nmakeobj/alpine.x64.Release/crossgen/md/compiler/CMakeFiles/mdcompiler-dbi.dir/cmake_pch.hxx /FpD:/workspace/_work/1/s/artifacts/nmakeobj/alpine.x64.Release/crossgen/md/compiler/CMakeFiles/mdcompiler-dbi.dir/cmake_pch.cxx.pch /FID:/workspace/_work/1/s/artifacts/nmakeobj/alpine.x64.Release/crossgen/md/compiler/CMakeFiles/mdcompiler-dbi.dir/cmake_pch.hxx /showIncludes /Fomd\\compiler\\CMakeFiles\\mdcompiler-dbi.dir\\custattr_emit.cpp.obj /Fdmd\\compiler\\CMakeFiles\\mdcompiler-dbi.dir\\mdcompiler-dbi.pdb /FS -c D:\\workspace\\_work\\1\\s\\src\\coreclr\\md\\compiler\\custattr_emit.cpp\r\nD:\\workspace\\_work\\1\\s\\src\\coreclr\\md\\compiler\\cus\r\n```\r\n\r\nbuild https://dev.azure.com/dnceng/internal/_build/results?buildId=984686\u0026view=logs\u0026j=128f4634-3e62-52f1-6764-cb4c2b8330d4\u0026t=32fccdd3-9e64-5af0-1f0d-f65712c6c51a\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": \"fatal error C1090: PDB API call failed, error code \u002723\u0027\",\r\n  \"BuildRetry\": true\r\n}\r\n```\r\n\r\ncc @dotnet/runtime-infrastructure \r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|0|\r\n\u003c!--Known issue error report end --\u003e\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** \r\n**Result validation: :warning:** Validation could not be done without an Azure DevOps build URL on the issue. Please add it to the \"**Build: :mag_right:**\" line.\r\n\u003c!-- Known issue validation end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOP16_ag==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3NjE2NTEzNQ==",
                                           "createdAt":  "2021-02-09T18:58:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-02-09T18:58:17Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3NjE3MTY3Mw==",
                                           "createdAt":  "2021-02-09T19:08:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODVWIaQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "dvorka",
                                                                               "createdAt":  "2024-02-04T06:55:14Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "Looks like this can get caused by locks on the file caused by parallel compilation, antiviruses, and parallel builds: https://developercommunity.visualstudio.com/content/problem/552999/fatal-error-c1090-pdb-api-call-failed-error-code-3.html\r\n\r\nThere was a workaround in a Jenkins forum should we see this again: https://issues.jenkins.io/browse/JENKINS-9104",
                                           "updatedAt":  "2021-02-09T19:08:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3NjE3Nzc2MQ==",
                                           "createdAt":  "2021-02-09T19:18:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "Be careful about assuming we should workaround such issues.  If they appear regularly it\u0027s more likely we have a concurrency issue in the build, or a bad practice (eg: open/re-write in place) in a build process.",
                                           "updatedAt":  "2021-02-09T19:18:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgxMjY3NTIyMQ==",
                                           "createdAt":  "2021-04-02T19:22:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "Just hit this again: https://dev.azure.com/dnceng/public/_build/results?buildId=1070066\u0026view=logs\u0026j=e93c566c-b6be-5acb-6fc2-de2972d01fec\u0026t=2dc174be-b57a-56b6-9566-e621f39fb1f6\u0026l=3009\r\n\r\n```\r\n    block.cpp\r\n  D:\\workspace\\_work\\1\\s\\src\\coreclr\\jit\\emit.cpp(8624,1): fatal error C1090: PDB API call failed, error code \u002723\u0027: (0x000006BA) [D:\\workspace\\_work\\1\\s\\artifacts\\obj\\coreclr\\windows.x86.Debug\\jit\\clrjit_win_x86_x86.vcxproj]\r\n    hashbv.cpp\r\n```\r\n\r\nIt\u0027s at a different point in the build.\r\n",
                                           "updatedAt":  "2021-04-02T19:22:08Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgxMjcwMDUzNw==",
                                           "createdAt":  "2021-04-02T20:34:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "Looks like they got more hits: https://developercommunity.visualstudio.com/t/C1090-PDB-API-call-failed-error-code-2/48897#T-ND770588 and they are starting to see this data becoming hotter in Watson. I don\u0027t know if we have the buildpool configured for heapdumps (@dnceng), but maybe setting failfast on our builds could help us get dumps if they could be useful for the MSVC team.",
                                           "updatedAt":  "2021-04-02T20:34:00Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMjM1MTU2MQ==",
                                           "createdAt":  "2021-05-05T01:05:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeffhandley",
                                           "body":  "I just hit this on #52236. https://dev.azure.com/dnceng/public/_build/results?buildId=1122253\u0026view=logs\u0026jobId=16bd8e89-36f9-5867-227e-26683d5e0a13\u0026j=16bd8e89-36f9-5867-227e-26683d5e0a13\u0026t=d2c0465b-73ac-55f7-de66-3542be19c102\r\n\r\n```\r\n2021-05-05T00:23:07.5681271Z     Finished generating code\r\n2021-05-05T00:23:07.6306732Z     tocfile.cpp\r\n2021-05-05T00:23:07.6930869Z   D:\\workspace\\_work\\1\\s\\src\\coreclr\\ToolBox\\superpmi\\superpmi-shared\\spmiutil.cpp(341,1): fatal error C1090: PDB API call failed, error code \u002723\u0027: (0x00000006) [D:\\workspace\\_work\\1\\s\\artifacts\\obj\\coreclr\\windows.x86.Release\\ide\\ToolBox\\superpmi\\superpmi-shim-collector\\superpmi-shim-collector.vcxproj]\r\n2021-05-05T00:23:07.7556746Z   D:\\workspace\\_work\\1\\s\\src\\coreclr\\ToolBox\\superpmi\\superpmi-shared\\methodcontextreader.cpp(581,1): fatal error C1090: PDB API call failed, error code \u002723\u0027: (0x00000006) [D:\\workspace\\_work\\1\\s\\artifacts\\obj\\coreclr\\windows.x86.Release\\ide\\ToolBox\\superpmi\\superpmi-shim-collector\\superpmi-shim-collector.vcxproj]\r\n2021-05-05T00:23:07.8189417Z     typeutils.cpp\r\n2021-05-05T00:23:07.8806507Z     spmidumphelper.cpp\r\n2021-05-05T00:23:07.9745654Z   D:\\workspace\\_work\\1\\s\\src\\coreclr\\ToolBox\\superpmi\\superpmi-shared\\methodcontext.cpp(7113,1): fatal error C1090: PDB API call failed, error code \u002723\u0027: (0x00000006) [D:\\workspace\\_work\\1\\s\\artifacts\\obj\\coreclr\\windows.x86.Release\\ide\\ToolBox\\superpmi\\superpmi-shim-collector\\superpmi-shim-collector.vcxproj]\r\n2021-05-05T00:23:08.0215020Z     ildasm.vcxproj -\u003e D:\\workspace\\_work\\1\\s\\artifacts\\obj\\coreclr\\windows.x86.Release\\ide\\ildasm\\exe\\Release\\ildasm.exe\r\n2021-05-05T00:23:08.0839181Z        Creating library D:/workspace/_work/1/s/artifacts/obj/coreclr/windows.x86.Release/ide/jit/Release/clrjit_unix_arm_x86.lib and object D:/workspace/_work/1/s/artifacts/obj/coreclr/windows.x86.Release/ide/jit/Release/clrjit_unix_arm_x86.exp\r\n2021-05-05T00:23:08.1777655Z     Generating code\r\n2021-05-05T00:23:08.2727442Z        Creating library D:/workspace/_work/1/s/artifacts/obj/coreclr/windows.x86.Release/ide/dlls/dbgshim/Release/dbgshim.lib and object D:/workspace/_work/1/s/artifacts/obj/coreclr/windows.x86.Release/ide/dlls/dbgshim/Release/dbgshim.exp\r\n2021-05-05T00:23:08.3653532Z   D:\\workspace\\_work\\1\\s\\src\\coreclr\\ToolBox\\superpmi\\superpmi-shared\\methodcontext.cpp(7113,1): fatal error C1090: PDB API call failed, error code \u002723\u0027: (0x000006BA) [D:\\workspace\\_work\\1\\s\\artifacts\\obj\\coreclr\\windows.x86.Release\\ide\\ToolBox\\superpmi\\superpmi\\superpmi.vcxproj]\r\n```",
                                           "updatedAt":  "2021-05-05T01:05:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMjU4MzQzMA==",
                                           "createdAt":  "2021-05-05T10:28:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC2DQmQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jeffhandley",
                                                                               "createdAt":  "2023-02-14T17:36:56Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "Thanks @jeffhandley. I\u0027ve gotten two dumps (one from your PR and one from Maoni\u0027s PR). After looking, this doesn\u0027t seem to be an issue on our infrastructure and I\u0027ve routed it to the C++ team for help.",
                                           "updatedAt":  "2021-05-05T10:28:44Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3NzQ1NDg3NQ==",
                                           "createdAt":  "2021-07-09T21:03:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "We\u0027ve started hitting this on official builds: https://dev.azure.com/dnceng/internal/_build/results?buildId=1223231\u0026view=results",
                                           "updatedAt":  "2021-07-09T21:03:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42CSpQ",
                                           "createdAt":  "2021-08-26T16:41:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "https://dev.azure.com/dnceng/public/_build/results?buildId=1319988\u0026view=logs\u0026j=e975a271-b4f2-514d-430d-2bcd66f2ec79\u0026t=41b8417e-ac9f-53db-7d14-a428e37aca7a\u0026l=1850",
                                           "updatedAt":  "2021-08-26T16:41:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc49-jkB",
                                           "createdAt":  "2022-02-15T03:16:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "elinor-fung",
                                           "body":  "Another hit on: https://dev.azure.com/dnceng/public/_build/results?buildId=1612668\u0026view=logs\u0026j=3b4be47f-cc1b-5bf8-4e5e-8c012379f178\u0026t=815bd5f7-6733-5b57-4168-1099761dca5a",
                                           "updatedAt":  "2022-02-15T03:16:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc49-qRv",
                                           "createdAt":  "2022-02-15T04:09:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "@hoyosjs  did you hear back from C++?",
                                           "updatedAt":  "2022-02-15T04:09:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc49-rEz",
                                           "createdAt":  "2022-02-15T04:15:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "Yeah, I talked to YongKang and we could only tell that it was corruption on an object\u0027s vtable. The suggestion was to use TTT to pinpoint where the corruption happened, but this isn\u0027t particularly easy to achieve on the build machines (slows things, files are large, and our builds are already quite bulky).",
                                           "updatedAt":  "2022-02-15T04:15:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_XrtC",
                                           "createdAt":  "2022-03-09T17:24:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mangod9",
                                           "body":  "hit it today: https://dev.azure.com/dnceng/public/_build/results?buildId=1654091\u0026view=logs\u0026j=11a68750-4cc0-50f6-a992-7042650640b8\u0026t=8ff0af98-f5bb-584c-8ade-65f7d498f011. \r\n\r\nDoes a retry usually make things work? ",
                                           "updatedAt":  "2022-03-09T17:24:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_Xr9q",
                                           "createdAt":  "2022-03-09T17:26:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCSKgkw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "mangod9",
                                                                               "createdAt":  "2022-03-09T18:45:40Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "Yes",
                                           "updatedAt":  "2022-03-09T17:26:01Z"
                                       }
                                   ],
                         "totalCount":  14
                     },
        "title":  "Build on Windows Fails sometimes with fatal error C1090: PDB API call failed",
        "labels":  [
                       "area-Infrastructure-coreclr",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/52511",
        "createdAt":  "2021-05-08T23:28:18Z",
        "number":  52511,
        "author":  "maxild",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-02-23T05:30:07Z",
        "body":  "I am trying to build `src/corelcr` using CLion IDE (CLion need cmake options to build). And I need a bit of help with the correct commandline.\r\n\r\nI have succesfully run the build on the commandline, so the toolchain/requirements for my debian based Linux dev box are in place.\r\n\r\nI am kind of guessing the correct options for CMake. This is what I am trying to execute (in the repo root)\r\n\r\n```bash\r\n$ cmake -DCMAKE_C_COMPILER=/usr/bin/clang-9 \\\r\n  -DCMAKE_CXX_COMPILER=/usr/bin/clang++-9 \\\r\n  -G \"Unix Makefiles\" \\\r\n  -DCMAKE_BUILD_TYPE=DEBUG \\\r\n  -DCMAKE_INSTALL_PREFIX=/home/maxfire/repos/github.com/dotnet/runtime/artifacts/bin/coreclr/Linux.x64.Debug \\\r\n  -DCMAKE_USER_MAKE_RULES_OVERRIDE= \\\r\n  -DCLR_ENG_NATIVE_DIR=\"/home/maxfire/repos/github.com/dotnet/runtime/eng/native\" \\\r\n  -DCLR_CMAKE_PGO_INSTRUMENT=0 \\\r\n  -DCLR_CMAKE_OPTDATA_PATH=/home/maxfire/.nuget/packages/optimization.linux-x64.pgo.coreclr/99.99.99-master-20200806.6 \\\r\n  -DCLR_CMAKE_PGO_OPTIMIZE=1 \\\r\n  -DCLR_REPO_ROOT_DIR=\"/home/maxfire/repos/github.com/dotnet/runtime\" \\\r\n  -S /home/maxfire/repos/github.com/dotnet/runtime/src/coreclr \\\r\n  -B /home/maxfire/repos/github.com/dotnet/runtime/artifacts/obj/coreclr/Linux.x64.Debug src/coreclr\r\n```\r\n\r\nI get this error \r\n\r\n```\r\nDetected Linux x86_64\r\n-- Configuring done\r\nCMake Error at src/pal/src/eventprovider/lttngprovider/CMakeLists.txt:55 (add_library):\r\n  Cannot find source file:\r\n\r\n    /home/maxfire/repos/github.com/dotnet/runtime/src/coreclr/version.c\r\n\r\n  Tried extensions .c .C .c++ .cc .cpp .cxx .cu .mpp .m .M .mm .h .hh .h++\r\n  .hm .hpp .hxx .in .txx .f .F .for .f77 .f90 .f95 .f03 .ispc\r\n\r\n\r\nCMake Error at /home/maxfire/repos/github.com/dotnet/runtime/eng/native/functions.cmake:430 (add_executable):\r\n  Cannot find source file:\r\n\r\n    /home/maxfire/repos/github.com/dotnet/runtime/src/coreclr/version.c\r\n\r\n  Tried extensions .c .C .c++ .cc .cpp .cxx .cu .mpp .m .M .mm .h .hh .h++\r\n  .hm .hpp .hxx .in .txx .f .F .for .f77 .f90 .f95 .f03 .ispc\r\nCall Stack (most recent call first):\r\n  src/hosts/unixcorerun/CMakeLists.txt:9 (_add_executable)\r\n\r\n\r\nCMake Error at /home/maxfire/repos/github.com/dotnet/runtime/eng/native/functions.cmake:430 (add_executable):\r\n  Cannot find source file:\r\n\r\n    /home/maxfire/repos/github.com/dotnet/runtime/src/coreclr/version.c\r\n\r\n  Tried extensions .c .C .c++ .cc .cpp .cxx .cu .mpp .m .M .mm .h .hh .h++\r\n  .hm .hpp .hxx .in .txx .f .F .for .f77 .f90 .f95 .f03 .ispc\r\nCall Stack (most recent call first):\r\n  src/hosts/unixcoreconsole/CMakeLists.txt:9 (_add_executable)\r\n\r\n\r\nCMake Error at /home/maxfire/repos/github.com/dotnet/runtime/eng/native/functions.cmake:443 (add_library):\r\n  Cannot find source file:\r\n\r\n    /home/maxfire/repos/github.com/dotnet/runtime/src/coreclr/version.c\r\n\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n\r\nCMake Error at /home/maxfire/repos/github.com/dotnet/runtime/eng/native/functions.cmake:443 (add_library):\r\n  No SOURCES given to target: clrgc\r\nCall Stack (most recent call first):\r\n  /home/maxfire/repos/github.com/dotnet/runtime/eng/native/functions.cmake:460 (_add_library)\r\n  src/gc/CMakeLists.txt:110 (add_library_clr)\r\n\r\n\r\nCMake Generate step failed.  Build files cannot be regenerated correctly.\r\n```\r\n\r\nI am new to CMake, and therefore sorry if the question is unclear in any way.  \r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOdN644Q==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzNTU3MTkyNA==",
                                           "createdAt":  "2021-05-08T23:28:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-05-08T23:28:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzNTgzNjk4Mg==",
                                           "createdAt":  "2021-05-09T16:15:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nI am trying to build `src/corelcr` using CLion IDE (CLion need cmake options to build). And I need a bit of help with the correct commandline.\r\n\r\nI have succesfully run the build on the commandline, so the toolchain/requirements for my debian based Linux dev box are in place.\r\n\r\nI am kind of guessing the correct options for CMake. This is what I am trying to execute (in the repo root)\r\n\r\n```bash\r\n$ cmake -DCMAKE_C_COMPILER=/usr/bin/clang-9 \\\r\n  -DCMAKE_CXX_COMPILER=/usr/bin/clang++-9 \\\r\n  -G \"Unix Makefiles\" \\\r\n  -DCMAKE_BUILD_TYPE=DEBUG \\\r\n  -DCMAKE_INSTALL_PREFIX=/home/maxfire/repos/github.com/dotnet/runtime/artifacts/bin/coreclr/Linux.x64.Debug \\\r\n  -DCMAKE_USER_MAKE_RULES_OVERRIDE= \\\r\n  -DCLR_ENG_NATIVE_DIR=\"/home/maxfire/repos/github.com/dotnet/runtime/eng/native\" \\\r\n  -DCLR_CMAKE_PGO_INSTRUMENT=0 \\\r\n  -DCLR_CMAKE_OPTDATA_PATH=/home/maxfire/.nuget/packages/optimization.linux-x64.pgo.coreclr/99.99.99-master-20200806.6 \\\r\n  -DCLR_CMAKE_PGO_OPTIMIZE=1 \\\r\n  -DCLR_REPO_ROOT_DIR=\"/home/maxfire/repos/github.com/dotnet/runtime\" \\\r\n  -S /home/maxfire/repos/github.com/dotnet/runtime/src/coreclr \\\r\n  -B /home/maxfire/repos/github.com/dotnet/runtime/artifacts/obj/coreclr/Linux.x64.Debug src/coreclr\r\n```\r\n\r\nI get this error \r\n\r\n```\r\nDetected Linux x86_64\r\n-- Configuring done\r\nCMake Error at src/pal/src/eventprovider/lttngprovider/CMakeLists.txt:55 (add_library):\r\n  Cannot find source file:\r\n\r\n    /home/maxfire/repos/github.com/dotnet/runtime/src/coreclr/version.c\r\n\r\n  Tried extensions .c .C .c++ .cc .cpp .cxx .cu .mpp .m .M .mm .h .hh .h++\r\n  .hm .hpp .hxx .in .txx .f .F .for .f77 .f90 .f95 .f03 .ispc\r\n\r\n\r\nCMake Error at /home/maxfire/repos/github.com/dotnet/runtime/eng/native/functions.cmake:430 (add_executable):\r\n  Cannot find source file:\r\n\r\n    /home/maxfire/repos/github.com/dotnet/runtime/src/coreclr/version.c\r\n\r\n  Tried extensions .c .C .c++ .cc .cpp .cxx .cu .mpp .m .M .mm .h .hh .h++\r\n  .hm .hpp .hxx .in .txx .f .F .for .f77 .f90 .f95 .f03 .ispc\r\nCall Stack (most recent call first):\r\n  src/hosts/unixcorerun/CMakeLists.txt:9 (_add_executable)\r\n\r\n\r\nCMake Error at /home/maxfire/repos/github.com/dotnet/runtime/eng/native/functions.cmake:430 (add_executable):\r\n  Cannot find source file:\r\n\r\n    /home/maxfire/repos/github.com/dotnet/runtime/src/coreclr/version.c\r\n\r\n  Tried extensions .c .C .c++ .cc .cpp .cxx .cu .mpp .m .M .mm .h .hh .h++\r\n  .hm .hpp .hxx .in .txx .f .F .for .f77 .f90 .f95 .f03 .ispc\r\nCall Stack (most recent call first):\r\n  src/hosts/unixcoreconsole/CMakeLists.txt:9 (_add_executable)\r\n\r\n\r\nCMake Error at /home/maxfire/repos/github.com/dotnet/runtime/eng/native/functions.cmake:443 (add_library):\r\n  Cannot find source file:\r\n\r\n    /home/maxfire/repos/github.com/dotnet/runtime/src/coreclr/version.c\r\n\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n\r\nCMake Error at /home/maxfire/repos/github.com/dotnet/runtime/eng/native/functions.cmake:443 (add_library):\r\n  No SOURCES given to target: clrgc\r\nCall Stack (most recent call first):\r\n  /home/maxfire/repos/github.com/dotnet/runtime/eng/native/functions.cmake:460 (_add_library)\r\n  src/gc/CMakeLists.txt:110 (add_library_clr)\r\n\r\n\r\nCMake Generate step failed.  Build files cannot be regenerated correctly.\r\n```\r\n\r\nI am new to CMake, and therefore sorry if the question is unclear in any way.  \r\n\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003emaxild\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-05-09T16:15:42Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzNTg1MDIyNw==",
                                           "createdAt":  "2021-05-09T17:37:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "\u003e ```\r\n\u003e   Cannot find source file:\r\n\u003e\r\n\u003e    /home/maxfire/repos/github.com/dotnet/runtime/src/coreclr/version.c\r\n\u003e ```\r\n\r\nversion.c is one of the file the [common script generates](https://github.com/dotnet/runtime/blob/01b7e73cd378145264a7cb7a09365b41ed42b240/eng/native/build-commons.sh#L128) in pre-configuration steps at the following locations (based on the availability of msbuild):\r\n\r\n```sh\r\nartifacts/obj/linux-x64.Release/version.c\r\nartifacts/obj/coreclr/Linux.x64.Release/version.c\r\nartifacts/obj/native/Linux-x64-Release/version.c\r\nartifacts/obj/native/net6.0-Linux-Release-x64/version.c\r\n```\r\n(all these files have same content for a given build and can be consolidated into _just one_ file..)\r\n\r\nIn your setup for coreclr (only?), you can generate it as:\r\n\r\n```sh\r\n# shell script\r\n_versionContents=\"static char sccsid[] __attribute__((used)) = \\\"@(#)Version 42.42.42.42424 @Commit: $(git -C $HOME/repos/github.com/dotnet/runtime rev-parse HEAD)\\\";\"\r\nprintf \"%s\\n\" \"$_versionContents\" \u003e \"$HOME/repos/github.com/dotnet/runtime/artifacts/obj/coreclr/Linux.x64.Release/version.c\"\r\n```",
                                           "updatedAt":  "2021-05-09T17:38:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzODI2MjQ4Ng==",
                                           "createdAt":  "2021-05-11T10:51:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "maxild",
                                           "body":  "Okay I managed to build coreclr (jit, vm, gc etc) from inside CLion by copying one of (the generated) `version.c` into `./src/coreclr`. I know it is stupid, but it was the only way I could get CLion to build using clang-9 toolchain and below CMake options.\r\n\r\nBUT I am in a bad(!) state\r\n\r\n```bash\r\n$ git status --short\r\n?? src/coreclr/.cmake/\r\n?? src/coreclr/compile_commands.json\r\n?? src/coreclr/src/ToolBox/superpmi/mcs/mcs\r\n?? src/coreclr/src/ToolBox/superpmi/superpmi-shim-collector/libsuperpmi-shim-collector.so\r\n?? src/coreclr/src/ToolBox/superpmi/superpmi-shim-counter/libsuperpmi-shim-counter.so\r\n?? src/coreclr/src/ToolBox/superpmi/superpmi-shim-simple/libsuperpmi-shim-simple.so\r\n?? src/coreclr/src/ToolBox/superpmi/superpmi/superpmi\r\n?? src/coreclr/src/binder/libv3binder_crossgen.a\r\n?? src/coreclr/src/debug/createdump/config.h\r\n?? src/coreclr/src/debug/createdump/createdump\r\n?? src/coreclr/src/debug/createdump/createdump.dbg\r\n?? src/coreclr/src/debug/daccess/libdaccess.a\r\n?? src/coreclr/src/debug/dbgutil/libdbgutil.a\r\n?? src/coreclr/src/debug/di/libcordbdi.a\r\n?? src/coreclr/src/debug/ee/dac/libcordbee_dac.a\r\n?? src/coreclr/src/debug/runtimeinfo/libruntimeinfo.a\r\n?? src/coreclr/src/debug/shim/libdebugshim.a\r\n?? src/coreclr/src/dlls/dbgshim/dbgshim.exports\r\n?? src/coreclr/src/dlls/dbgshim/libdbgshim.so\r\n?? src/coreclr/src/dlls/dbgshim/libdbgshim.so.dbg\r\n?? src/coreclr/src/dlls/mscordac/libmscordaccore.so\r\n?? src/coreclr/src/dlls/mscordac/libmscordaccore.so.dbg\r\n?? src/coreclr/src/dlls/mscordac/mscordac.exports\r\n?? src/coreclr/src/dlls/mscordbi/libmscordbi.so\r\n?? src/coreclr/src/dlls/mscordbi/libmscordbi.so.dbg\r\n?? src/coreclr/src/dlls/mscordbi/mscordbi.exports\r\n?? src/coreclr/src/dlls/mscoree/coreclr/coreclr.exports\r\n?? src/coreclr/src/dlls/mscoree/coreclr/libcoreclr.so\r\n?? src/coreclr/src/dlls/mscoree/coreclr/libcoreclr.so.dbg\r\n?? src/coreclr/src/dlls/mscoree/coreclr/libcoreclr_static.a\r\n?? src/coreclr/src/dlls/mscorpe/libmscorpe.a\r\n?? src/coreclr/src/dlls/mscorrc/mscorrc.cpp\r\n?? src/coreclr/src/dlls/mscorrc/mscorrc.rc.i\r\n?? src/coreclr/src/gc/config.gc.h\r\n?? src/coreclr/src/gc/libclrgc.so\r\n?? src/coreclr/src/gc/libclrgc.so.dbg\r\n?? src/coreclr/src/gcinfo/gcinfo_arm64/libgcinfo_arm64.a\r\n?? src/coreclr/src/gcinfo/libgcinfo_crossgen.a\r\n?? src/coreclr/src/hosts/unixcoreconsole/coreconsole\r\n?? src/coreclr/src/hosts/unixcoreconsole/coreconsole.dbg\r\n?? src/coreclr/src/hosts/unixcorerun/corerun\r\n?? src/coreclr/src/hosts/unixcorerun/corerun.dbg\r\n?? src/coreclr/src/hosts/unixcoreruncommon/config.h\r\n?? src/coreclr/src/hosts/unixcoreruncommon/libunixcoreruncommon.a\r\n?? src/coreclr/src/ilasm/ilasm\r\n?? src/coreclr/src/ilasm/ilasm.dbg\r\n?? src/coreclr/src/ildasm/exe/dasm_rc.cpp\r\n?? src/coreclr/src/ildasm/exe/dasm_rc.rc.i\r\n?? src/coreclr/src/ildasm/exe/ildasm\r\n?? src/coreclr/src/ildasm/exe/ildasm.dbg\r\n?? src/coreclr/src/inc/clretwallmain.h\r\n?? src/coreclr/src/inc/clreventpipewriteevents.h\r\n?? src/coreclr/src/inc/clrproviders.h\r\n?? src/coreclr/src/inc/clrxplatevents.h\r\n?? src/coreclr/src/inc/dacmoduleindex.h\r\n?? src/coreclr/src/inc/dbimoduleindex.h\r\n?? src/coreclr/src/inc/etmdummy.h\r\n?? src/coreclr/src/inc/libredefines.inc\r\n?? src/coreclr/src/inc/palredefines.inc\r\n?? src/coreclr/src/inc/runtimemoduleindex.h\r\n?? src/coreclr/src/jit/clrjit.exports\r\n?? src/coreclr/src/jit/protononjit/libprotononjit.so\r\n?? src/coreclr/src/jit/protononjit/libprotononjit.so.dbg\r\n?? src/coreclr/src/jit/standalone/libclrjit.so\r\n?? src/coreclr/src/jit/standalone/libclrjit.so.dbg\r\n?? src/coreclr/src/libraries-native/System.Globalization.Native/\r\n?? src/coreclr/src/md/compiler/libmdcompiler-dbi.a\r\n?? src/coreclr/src/md/compiler/libmdcompiler_crossgen.a\r\n?? src/coreclr/src/md/compiler/libmdcompiler_dac.a\r\n?? src/coreclr/src/md/compiler/libmdcompiler_ppdb.a\r\n?? src/coreclr/src/md/datasource/libmddatasource_dbi.a\r\n?? src/coreclr/src/md/enc/libmdruntimerw-dbi.a\r\n?? src/coreclr/src/md/enc/libmdruntimerw_crossgen.a\r\n?? src/coreclr/src/md/enc/libmdruntimerw_dac.a\r\n?? src/coreclr/src/md/enc/libmdruntimerw_ppdb.a\r\n?? src/coreclr/src/md/hotdata/libmdhotdata_crossgen.a\r\n?? src/coreclr/src/md/hotdata/libmdhotdata_dac.a\r\n?? src/coreclr/src/md/hotdata/libmdhotdata_ppdb.a\r\n?? src/coreclr/src/md/runtime/libmdruntime-dbi.a\r\n?? src/coreclr/src/md/runtime/libmdruntime_crossgen.a\r\n?? src/coreclr/src/md/runtime/libmdruntime_dac.a\r\n?? src/coreclr/src/md/runtime/libmdruntime_ppdb.a\r\n?? src/coreclr/src/md/staticmd/libmdstaticapi.a\r\n?? src/coreclr/src/md/staticmd/libmdstaticapi_ppdb.a\r\n?? src/coreclr/src/nativeresources/libnativeresourcestring.a\r\n?? src/coreclr/src/pal/src/config.h\r\n?? src/coreclr/src/pal/src/eventprovider/lttngprovider/libcoreclrtraceptprovider.so\r\n?? src/coreclr/src/pal/src/eventprovider/lttngprovider/libcoreclrtraceptprovider.so.dbg\r\n?? src/coreclr/src/pal/src/eventprovider/lttngprovider/libeventprovider.a\r\n?? src/coreclr/src/pal/src/eventprovider/lttngprovider/lttng/\r\n?? src/coreclr/src/pal/src/libcoreclrpal.a\r\n?? src/coreclr/src/palrt/libpalrt.a\r\n?? src/coreclr/src/tools/aot/jitinterface/libjitinterface.so\r\n?? src/coreclr/src/tools/aot/jitinterface/libjitinterface.so.dbg\r\n?? src/coreclr/src/tools/crossgen/crossgen\r\n?? src/coreclr/src/tools/crossgen/crossgen.dbg\r\n?? src/coreclr/src/unwinder/libunwinder_dac.a\r\n?? src/coreclr/src/utilcode/libutilcode_crossgen.a\r\n?? src/coreclr/src/utilcode/libutilcode_dac.a\r\n?? src/coreclr/src/utilcode/libutilcodestaticnohost.a\r\n?? src/coreclr/src/vm/crossgen/libcee_crossgen.a\r\n?? src/coreclr/src/vm/crossgen/libcorelib_crossgen.a\r\n?? src/coreclr/src/vm/eventing/eventpipe/eventpipe/\r\n?? src/coreclr/src/vm/libcee_dac.a\r\n?? src/coreclr/src/zap/libcorzap_crossgen.a\r\n?? src/coreclr/version.c\r\n```\r\n\r\nSo please if anybody can tell me how to setup CLion to build coreclr without hacking and polutting the GIT workspace\r\n\r\nThis is the config\r\n\r\n![image](https://user-images.githubusercontent.com/46108/117803094-85674000-b256-11eb-832d-33df994394ad.png)\r\n\r\nwhere cmake options in the dialog are given by\r\n\r\n```\r\n-G \"Unix Makefiles\"\r\n-DCMAKE_BUILD_TYPE=DEBUG\r\n-DCMAKE_INSTALL_PREFIX=/home/maxfire/repos/github.com/dotnet/runtime/artifacts/bin/coreclr/Linux.x64.Debug\r\n-DCMAKE_USER_MAKE_RULES_OVERRIDE= \r\n-DCLR_ENG_NATIVE_DIR=\"/home/maxfire/repos/github.com/dotnet/runtime/eng/native\"\r\n-DCLR_CMAKE_OPTDATA_PATH=/home/maxfire/.nuget/packages/optimization.linux-x64.pgo.coreclr/99.99.99-master-20200806.6\r\n-DCLR_CMAKE_PGO_OPTIMIZE=1\r\n-DCLR_CMAKE_PGO_OPTIMIZE=1\r\n-DCLR_REPO_ROOT_DIR=\"/home/maxfire/repos/github.com/dotnet/runtime\"\r\n-S /home/maxfire/repos/github.com/dotnet/runtime/src/coreclr\r\n-B /home/maxfire/repos/github.com/dotnet/runtime/artifacts/obj/coreclr/Linux.x64.Debug\r\n```\r\n\r\n",
                                           "updatedAt":  "2021-05-11T10:51:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc503rjh",
                                           "createdAt":  "2024-02-23T05:29:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "huoyaoyuan",
                                           "body":  "`CMakePresets.json` is now officially supported by CMake. CLion also claims to support it.\r\n\r\nI\u0027ve added `CMakePresets.json` for coreclr directory and Visual Studio can successfully build the folder. Can you try if CLion builds well?\r\n\r\nWell I only added configuration for Windows. I have uncommited configuration for Linux and WSL in my user presets.",
                                           "updatedAt":  "2024-02-23T05:30:07Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "CMake commandline",
        "labels":  [
                       "question",
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/52772",
        "createdAt":  "2021-05-14T16:37:40Z",
        "number":  52772,
        "author":  "jkoritzinsky",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBrIMKw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "tommcdon",
                                            "createdAt":  "2021-05-15T17:08:55Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "BruceForstall",
                                            "createdAt":  "2021-05-17T18:44:48Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "EgorBo",
                                            "createdAt":  "2021-05-17T19:02:53Z"
                                        }
                                    ],
                          "totalCount":  3
                      },
        "updatedAt":  "2021-05-19T16:24:39Z",
        "body":  "The JIT team just added a [natvis file](https://docs.microsoft.com/en-us/visualstudio/debugger/create-custom-views-of-native-objects?view=vs-2019) for some of their internal types to simplify their debugging experience in #52668.\r\n\r\nThe CoreCLR team should look at doing something similar for common VM types like SString or some of the holder types to simplify the debugging experience on Windows.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOMiYk9g==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0MTM1OTI3NQ==",
                                           "createdAt":  "2021-05-14T16:37:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThe JIT team just added a [natvis file](https://docs.microsoft.com/en-us/visualstudio/debugger/create-custom-views-of-native-objects?view=vs-2019) for some of their internal types to simplify their debugging experience in #52668.\r\n\r\nThe CoreCLR team should look at doing something similar for common VM types like SString or some of the holder types to simplify the debugging experience on Windows.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ejkoritzinsky\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-05-14T16:37:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0MTM2MDYzMA==",
                                           "createdAt":  "2021-05-14T16:38:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "The diagnostics team could probably also include ones that would automatically resolve the special DAC pointer types to their targets in the debugging view for usage when debugging the DAC.",
                                           "updatedAt":  "2021-05-14T16:38:48Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Add natvis files for CoreCLR VM types for ease of debugging",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/52914",
        "createdAt":  "2021-05-18T14:46:33Z",
        "number":  52914,
        "author":  "RobertHenry6bev",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-05-19T16:26:59Z",
        "body":  "The https://github.com/dotnet/runtime/blob/279ce14b995ef47a39d9e3fdc8d03e01c6e1740b/src/coreclr/pal/src/CMakeLists.txt#L116\r\ncontains the line:\r\n  add_compile_options(-Wa,--divide)\r\nwhich is triggered for GNU CXX invocations.\r\n\r\nUnfortunately, the gnu assembler only accepts the --divide flag for i386 style processor targets.\r\n\r\nThis means that the runtime does not build out of the box natively on ubuntu arm64 machines.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOMkL3ug==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0MzIzNTM4Nw==",
                                           "createdAt":  "2021-05-18T14:46:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThe https://github.com/dotnet/runtime/blob/279ce14b995ef47a39d9e3fdc8d03e01c6e1740b/src/coreclr/pal/src/CMakeLists.txt#L116\r\ncontains the line:\r\n  add_compile_options(-Wa,--divide)\r\nwhich is triggered for GNU CXX invocations.\r\n\r\nUnfortunately, the gnu assembler only accepts the --divide flag for i386 style processor targets.\r\n\r\nThis means that the runtime does not build out of the box natively on ubuntu arm64 machines.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eRobertHenry6bev\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-05-18T14:46:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0MzI0MjYxNw==",
                                           "createdAt":  "2021-05-18T14:55:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Thank you for reporting this. I am just curious, do you have a reason for using GNU C++ instead of clang? While we try to maintain the ability to compile using GNU C++, we don\u0027t use it for our builds. ",
                                           "updatedAt":  "2021-05-18T14:55:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0MzI0OTU5NA==",
                                           "createdAt":  "2021-05-18T15:04:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "RobertHenry6bev",
                                           "body":  "I use gcc out of inertia.  I will switch to clang, for now.  I suspect that\nmore work has gone into gcc-11 (and gcc-10) than clang for the arm64 port,\nbut can not back that up with any hard data.\n\nOn Tue, May 18, 2021 at 7:56 AM Jan Vorlicek ***@***.***\u003e\nwrote:\n\n\u003e Thank you for reporting this. I am just curious, do you have a reason for\n\u003e using GNU C++ instead of clang? While we try to maintain the ability to\n\u003e compile using GNU C++, we don\u0027t use it for our builds.\n\u003e\n\u003e —\n\u003e You are receiving this because you authored the thread.\n\u003e Reply to this email directly, view it on GitHub\n\u003e \u003chttps://github.com/dotnet/runtime/issues/52914#issuecomment-843242617\u003e,\n\u003e or unsubscribe\n\u003e \u003chttps://github.com/notifications/unsubscribe-auth/ABBLLY2HQ5TBKPKKRVJIROTTOJ5YLANCNFSM45CVZV3Q\u003e\n\u003e .\n\u003e\n",
                                           "updatedAt":  "2021-05-18T15:04:26Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "does not build natively on arm64 ubuntu linux",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/52987",
        "createdAt":  "2021-05-19T19:01:55Z",
        "number":  52987,
        "author":  "BruceForstall",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCzLU3Q==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "raffaeler",
                                            "createdAt":  "2022-03-10T11:23:56Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "GeroL",
                                            "createdAt":  "2023-10-10T13:26:30Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2021-07-12T16:15:33Z",
        "body":  "I sometimes see the following error: \"ninja: error: loading \u0027build.ninja\u0027: The system cannot find the file specified.\"\r\n\r\nI do:\r\n```\r\nbuild.cmd clr.runtime+clr.corelib+clr.nativecorelib+clr.tools+clr.iltools+clr.alljits -arch x64 -c Checked -lc Release\r\n```\r\nthen see:\r\n```\r\n…\r\n  **********************************************************************\r\n  ** Visual Studio 2019 Developer Command Prompt v16.10.0-pre.4.0\r\n  ** Copyright (c) 2021 Microsoft Corporation\r\n  **********************************************************************\r\n  [vcvarsall.bat] Environment initialized for: \u0027x64\u0027\r\n  BUILD: Regenerating the Visual Studio solution\r\n  The CMake command line is the same as the last run. Skipping running CMake.\r\n  running \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe\" --build C:\\gh\\runtime3\\src\\coreclr\\..\\..\\artifacts\\obj\\coreclr\\windows.x64.Checked --target  alljits runtime iltools --config Checked --\r\n  ninja: error: loading \u0027build.ninja\u0027: The system cannot find the file specified.\r\n```\r\n\r\nI wonder if this is because I sometimes just build the JIT, then go back and build the runtime?\r\n\r\n@jkoritzinsky Says:\r\n\r\nI think that’s possibly a corner case with the “up to date CMake command line” check. If you have a failed configure run before this, then the up-to-date check might think everything is up to date but build.ninja won’t be present.\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOMlRMew==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0NDM4NTQwMw==",
                                           "createdAt":  "2021-05-19T19:01:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nI sometimes see the following error: \"ninja: error: loading \u0027build.ninja\u0027: The system cannot find the file specified.\"\r\n\r\nI do:\r\n```\r\nbuild.cmd clr.runtime+clr.corelib+clr.nativecorelib+clr.tools+clr.iltools+clr.alljits -arch x64 -c Checked -lc Release\r\n```\r\nthen see:\r\n```\r\n…\r\n  **********************************************************************\r\n  ** Visual Studio 2019 Developer Command Prompt v16.10.0-pre.4.0\r\n  ** Copyright (c) 2021 Microsoft Corporation\r\n  **********************************************************************\r\n  [vcvarsall.bat] Environment initialized for: \u0027x64\u0027\r\n  BUILD: Regenerating the Visual Studio solution\r\n  The CMake command line is the same as the last run. Skipping running CMake.\r\n  running \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe\" --build C:\\gh\\runtime3\\src\\coreclr\\..\\..\\artifacts\\obj\\coreclr\\windows.x64.Checked --target  alljits runtime iltools --config Checked --\r\n  ninja: error: loading \u0027build.ninja\u0027: The system cannot find the file specified.\r\n```\r\n\r\nI wonder if this is because I sometimes just build the JIT, then go back and build the runtime?\r\n\r\n@jkoritzinsky Says:\r\n\r\nI think that’s possibly a corner case with the “up to date CMake command line” check. If you have a failed configure run before this, then the up-to-date check might think everything is up to date but build.ninja won’t be present.\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eBruceForstall\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003ejkoritzinsky\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-05-19T19:01:57Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "ninja incremental build issue",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/53849",
        "createdAt":  "2021-06-08T02:00:51Z",
        "number":  53849,
        "author":  "BruceForstall",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-02-08T23:55:13Z",
        "body":  "`eng\\native\\configureoptimization.cmake` contains:\r\n```\r\nif(CLR_CMAKE_HOST_WIN32)                                                                        \r\n    add_compile_options($\u003c$\u003cAND:$\u003cCOMPILE_LANGUAGE:C,CXX\u003e,$\u003cCONFIG:Debug\u003e\u003e:/Od\u003e)                \r\n    add_compile_options($\u003c$\u003cAND:$\u003cCOMPILE_LANGUAGE:C,CXX\u003e,$\u003cCONFIG:Checked\u003e\u003e:/O1\u003e)              \r\n    add_compile_options($\u003c$\u003cAND:$\u003cCOMPILE_LANGUAGE:C,CXX\u003e,$\u003cCONFIG:Release\u003e\u003e:/Ox\u003e)              \r\n    add_compile_options($\u003c$\u003cAND:$\u003cCOMPILE_LANGUAGE:C,CXX\u003e,$\u003cCONFIG:RelWithDebInfo\u003e\u003e:/O2\u003e)       \r\n```\r\n\r\nI have some questions:\r\n1. Why don\u0027t we use `/O2` for all non-Debug builds?\r\n2. Is `RelWithDebInfo` actually used? For what?\r\n\r\n@dotnet/runtime-infrastructure ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOPZURWA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NjM3OTkxMw==",
                                           "createdAt":  "2021-06-08T02:00:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n`eng\\native\\configureoptimization.cmake` contains:\r\n```\r\nif(CLR_CMAKE_HOST_WIN32)                                                                        \r\n    add_compile_options($\u003c$\u003cAND:$\u003cCOMPILE_LANGUAGE:C,CXX\u003e,$\u003cCONFIG:Debug\u003e\u003e:/Od\u003e)                \r\n    add_compile_options($\u003c$\u003cAND:$\u003cCOMPILE_LANGUAGE:C,CXX\u003e,$\u003cCONFIG:Checked\u003e\u003e:/O1\u003e)              \r\n    add_compile_options($\u003c$\u003cAND:$\u003cCOMPILE_LANGUAGE:C,CXX\u003e,$\u003cCONFIG:Release\u003e\u003e:/Ox\u003e)              \r\n    add_compile_options($\u003c$\u003cAND:$\u003cCOMPILE_LANGUAGE:C,CXX\u003e,$\u003cCONFIG:RelWithDebInfo\u003e\u003e:/O2\u003e)       \r\n```\r\n\r\nI have some questions:\r\n1. Why don\u0027t we use `/O2` for all non-Debug builds?\r\n2. Is `RelWithDebInfo` actually used? For what?\r\n\r\n@dotnet/runtime-infrastructure \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eBruceForstall\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-06-08T02:00:54Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NjM5Mzg3Ng==",
                                           "createdAt":  "2021-06-08T02:41:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "cc: @jkotas @janvorli ",
                                           "updatedAt":  "2021-06-08T02:41:53Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NjQwMDU1Mg==",
                                           "createdAt":  "2021-06-08T03:01:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "It has been like that since we have open sourced: https://github.com/dotnet/coreclr/commits/release/2.1/src/pal/tools/windows-compiler-override.txt . I do not think we have history for this file prior to open sourcing.\r\n\r\nThe config for release is configuration is the only sensitive one, changing that would require performance testing. Feel free to clean up and unify the rest. \r\n\r\nYou may want to check impact of the checked build optimization settings on build performance. It is possible that `/O1` was choosen as a trade-off between build and runtime performance.\r\n\r\nYou can also change https://github.com/dotnet/runtime/blob/main/src/libraries/Native/Windows/CMakeLists.txt to include the central optimization settings file while you are on it.",
                                           "updatedAt":  "2021-06-08T03:02:15Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NjQ0NTE1Mw==",
                                           "createdAt":  "2021-06-08T05:10:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "cc @AndyAyersMS ",
                                           "updatedAt":  "2021-06-08T05:10:14Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NjQ3NjI5MQ==",
                                           "createdAt":  "2021-06-08T06:10:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "Well, it\u0027s messier than this. If I force a compiler error in a win-x64 release build, I see a command line with these optimization switches (this is a subset of the compiler switches):\r\n```\r\n/O2\r\n/Ob2\r\n/Ox\r\n/Oi\r\n/Oy-\r\n/Gy\r\n```\r\nSo we throw both `/O2` and `/Ox`, which are mutually exclusive (which wins?). We also throw `/Ob2` and `/Oi` (included in `/Ox` and `/O2`) and `/Gy` (included in `/O2`), but don\u0027t throw or disable `/GF` (string pooling), enabled in `/O2` but not `/Ox` (making it important to know which one \"wins\"). I can\u0027t figure out where the `/O2` and `/Ob2` come from. Does ninja/cmake inject them somehow?\r\n\r\nIt looks like cmake does this. In artifacts\\obj\\coreclr\\windows.x64.Release\\CMakeCache.txt, I see:\r\n```\r\n//Flags used by the CXX compiler during RELEASE builds.\r\nCMAKE_CXX_FLAGS_RELEASE:STRING=/O2 /Ob2 /DNDEBUG\r\n```\r\n\r\nMaybe we should clear out the cmake default values of this (and the other defaults:\r\n```\r\nCMAKE_CXX_FLAGS_DEBUG\r\nCMAKE_CXX_FLAGS_MINSIZEREL\r\nCMAKE_CXX_FLAGS_RELWITHDEBINFO\r\n```\r\n) to give us full control (and avoid ambiguity and warnings/errors from overriding switches).\r\n",
                                           "updatedAt":  "2021-06-08T06:10:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NjQ4Nzg0Mw==",
                                           "createdAt":  "2021-06-08T06:28:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "\u003e 1. Why don\u0027t we use `/O2` for all non-Debug builds?\r\n\r\nAs @jkotas said, that was the way it was set before we started the opensourcing of .NET. I am not sure if moving Checked to `/O2` wouldn\u0027t make debugging experience much worse. I often use Checked builds to verify my changes using CoreCLR pri1 tests. the `/O1` enables me to see a reasonable amount of locals to do basic debugging of problems so that I don\u0027t have to move to `Debug` build every time I want to debug an issue. But even the `/O1` is missing plenty of locals / arguments and I often need to search them up the call stack. And Release builds that use `/O2` are a real pain to debug.\r\n\r\n\u003e 2\\. Is `RelWithDebInfo` actually used? For what?\r\n\r\nIt is one of the standard CMake configurations (Debug, Release, RelWithDebInfo and MinSizeRel). We don\u0027t actively use it.\r\n\r\n\r\n",
                                           "updatedAt":  "2021-06-08T06:28:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NjQ5NzQ0Ng==",
                                           "createdAt":  "2021-06-08T06:43:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "\u003e I can\u0027t figure out where the `/O2` and `/Ob2` come from.\r\n\r\nCMake has default settings of options for each compiler / build configuration. It contains these. I think it is a result of the change that @jkoritzinsky made in https://github.com/dotnet/coreclr/pull/23897. We used to use CMAKE_USER_MAKE_RULES_OVERRIDE cmake variable to override the options, which is the way that was designed for that - CMake pulls in the file with overrides to cmake settings like the compiler options after it sets the defaults, but before the options are ever used. With the change, we\u0027ve stopped using that mechanism and we have probably not realized that we somehow keep having the defaults, at least at some places.\r\n\r\nHowever, MSVC doc says:\r\n\r\n\u003e Compiler options are processed \"left to right,\" and when a conflict is detected, the last (rightmost) option wins. The CL environment variable is processed before the command line, so in any conflicts between CL and the command line, the command line takes precedence.\r\n\r\nSee https://docs.microsoft.com/en-us/cpp/build/reference/compiling-a-c-cpp-program?view=msvc-160\r\n",
                                           "updatedAt":  "2021-06-08T06:43:19Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NjU4NjMzMg==",
                                           "createdAt":  "2021-06-08T08:51:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "EgorBo",
                                           "body":  "Btw, -Os and -Oz save a lot of space when clang is used\r\n![image](https://user-images.githubusercontent.com/523221/121154583-be8fd180-c84f-11eb-9d51-7cc3976737db.png)\r\n\r\nbut I never tested TP impact.",
                                           "updatedAt":  "2021-06-08T08:51:03Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NjkzOTE3Mw==",
                                           "createdAt":  "2021-06-08T17:02:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "\u003e I am not sure if moving Checked to /O2 wouldn\u0027t make debugging experience much worse.\r\n\r\nFor VC, /O1 is \"optimize for size\" and /O2 is \"optimize for speed\". I\u0027d be surprised if the debugging experience was significantly different.\r\n\r\n\u003e I often use Checked builds to verify my changes using CoreCLR pri1 tests. \r\n\r\nI use Checked for almost everything (until I need to debug something), but I\u0027d like it to be as fast as possible; I don\u0027t care about size.\r\n\r\n\u003e CMake has default settings of options for each compiler / build configuration\r\n\r\nI see we have `set(CMAKE_CXX_FLAGS_CHECKED \"\")`, probably because cmake doesn\u0027t have a concept of \"Checked\"? Maybe we could clear out the defaults here by `set(CMAKE_CXX_FLAGS_RELEASE \"\")` and same for Debug?\r\n",
                                           "updatedAt":  "2021-06-08T17:02:15Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1Njk2OTg4OQ==",
                                           "createdAt":  "2021-06-08T17:48:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "When I switch \"Checked\" from `-O1` to `-O2`, I see significant performance increases (for the JIT anyway):\r\n1. 7% faster SuperPMI replay across all our collections\r\n2. 14% instruction count reduction (measured using Intel\u0027s PIN tool) on a single SuperPMI replay of the benchmarks\r\n\r\nThe build is bigger: artifacts\\bin\\coreclr\\windows.x64.Checked goes from 85,389,191 to 92,615,635 (presumably more aggressive inlining). E.g.,:\r\n1. clrjit.dll: 3,528,704 =\u003e 3,947,008\r\n2. coreclr.dll: 13,175,296 =\u003e 14,536,192\r\n",
                                           "updatedAt":  "2021-06-08T17:48:58Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1Njk4NDIwNQ==",
                                           "createdAt":  "2021-06-08T18:09:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "\u003e I\u0027d be surprised if the debugging experience was significantly different.\r\n\r\nHmm, so I wonder why debugging release / checked build is that much different experience. I have always believed that the optimization level is the reason for that.",
                                           "updatedAt":  "2021-06-08T18:09:54Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NzA4OTM0OA==",
                                           "createdAt":  "2021-06-08T20:12:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "\u003e Hmm, so I wonder why debugging release / checked build is that much different experience. I have always believed that the optimization level is the reason for that.\r\n\r\nIt\u0027s possible that additional inlining makes debugging worse. However, my guess is that all the DEBUG code and contracts inhibits optimization, leading to slightly better debugging experience in Checked.",
                                           "updatedAt":  "2021-06-08T20:12:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NzIyNDA2NQ==",
                                           "createdAt":  "2021-06-08T22:31:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "I created a test PR to switch coreclr Windows Checked builds from `-O1` to `-O2` (https://github.com/dotnet/runtime/pull/53888). Unfortunately, that leads to x86 test failures due to the CLR being very picky about low-level native compiler details (apparently).",
                                           "updatedAt":  "2021-06-08T22:31:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc49lRFY",
                                           "createdAt":  "2022-02-08T23:55:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "Windows non-x86 Checked builds have been switched to -O2. Windows x86 is blocked with this issue: https://github.com/dotnet/runtime/issues/59845.\r\n\r\nWindows Release builds should also be switched from -Ox to -O2.\r\n",
                                           "updatedAt":  "2022-02-08T23:55:13Z"
                                       }
                                   ],
                         "totalCount":  14
                     },
        "title":  "VC++ compiler optimization switches",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/53930",
        "createdAt":  "2021-06-09T13:43:12Z",
        "number":  53930,
        "author":  "alnikola",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-26T19:26:08Z",
        "body":  "### Description\r\n`build.cmd` script checks if the required CMake version installed while building `clr` and prints the following message if it is obsolete. However, it **doesn\u0027t terminate here** and simply proceeds further despite the fact that the expected artifacts have not been generated. \r\n```\r\nCMake 3.16.4 or newer is required for building this repository. The newest version of CMake installed is 3.16.0. Please install CMake 3.16.4 or newer from https://cmake.org/download/\r\n```\r\nEventually, it fails with a strange missing file exception whose root cause is not clear.\r\n```\r\nerror MSB3030: Could not copy the file \"C:\\repos\\runtime\\artifacts\\bin\\coreclr\\windows.x64.Release\\jitinterface_x64.dll\" because it was not found\r\n```\r\n\r\n### Configuration\r\n1. Clone `runtime` repo on a Windows 10 machine with an outdated CMake version installed\r\n2. run `build.cmd clr -c Release`\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONmIkdw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NzcwNjA0MQ==",
                                           "createdAt":  "2021-06-09T13:43:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\r\n`build.cmd` script checks if the required CMake version installed while building `clr` and prints the following message if it is obsolete. However, it **doesn\u0027t terminate here** and simply proceeds further despite the fact that the expected artifacts have not been generated. \r\n```\r\nCMake 3.16.4 or newer is required for building this repository. The newest version of CMake installed is 3.16.0. Please install CMake 3.16.4 or newer from https://cmake.org/download/\r\n```\r\nEventually, it fails with a strange missing file exception whose root cause is not clear.\r\n```\r\nerror MSB3030: Could not copy the file \"C:\\repos\\runtime\\artifacts\\bin\\coreclr\\windows.x64.Release\\jitinterface_x64.dll\" because it was not found\r\n```\r\n\r\n### Configuration\r\n1. Clone `runtime` repo on a Windows 10 machine with an outdated CMake version installed\r\n2. run `build.cmd clr -c Release`\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ealnikola\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `area-Infrastructure-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-06-09T13:43:14Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NzczNzc0MQ==",
                                           "createdAt":  "2021-06-09T14:22:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "cc @jkoritzinsky ",
                                           "updatedAt":  "2021-06-09T14:22:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42YiR3",
                                           "createdAt":  "2021-09-03T09:33:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "cc @trylek @hoyosjs @tommcdon ",
                                           "updatedAt":  "2021-09-03T09:33:35Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "build.cmd script doesn\u0027t check success of CMake version check",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/54512",
        "createdAt":  "2021-06-21T18:52:16Z",
        "number":  54512,
        "author":  "trylek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBvrsqw==",
                          "nodes":  [
                                        {
                                            "content":  "HEART",
                                            "user":  "jkotas",
                                            "createdAt":  "2021-06-21T19:59:04Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "hoyosjs",
                                            "createdAt":  "2021-06-21T20:18:42Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "MichalStrehovsky",
                                            "createdAt":  "2021-06-22T08:04:56Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "fanyang-mono",
                                            "createdAt":  "2021-06-22T14:18:40Z"
                                        }
                                    ],
                          "totalCount":  4
                      },
        "updatedAt":  "2024-08-22T15:43:45Z",
        "body":  "**Problem description**\r\n\r\nCurrent CoreCLR Pri1 test set has over 10K individual test projects. This is beyond the means of a single msbuild execution and is mitigated by partitioning the test projects into subgroups. Today at least three such partitionings exist (partitioning during test build, partitioning into XUnit wrappers, partitioning for Helix execution). While @echesakov did his best to make the Helix partitioning as good as possible, the entire logic adds enormous complexity to the test system, complicates developer ramp-up and is a constant cause of developer complaints. The 10K separate apps also mean 10K .NET Core runtime startups incurring enormous testing cost, it\u0027s not hard to imagine that the repeated .NET Core runtime initializations take an equal or greater amount of time than the actual test code execution.\r\n\r\n*Caveat* - we don\u0027t yet have any hard data to substantiate this claim. I\u0027m working on figuring out how to produce it in some form.\r\n\r\n**Ideal state**\r\n\r\nAs I personally heard in presentations by @jaredpar and @stephentoub, perf optimization of Roslyn and libraries tests that took place several years ago involved the reduction of the number of separate test apps as a key step. I believe we should take the same route in CoreCLR testing; in bulk testing (local or lab Pri0 / Pri1 testing) we should run fewer than 1K test apps, ideally less than 500. Once that happens, we should be able to remove all the partitioning goo and just run the tests one by one, both locally and in Helix.\r\n\r\n**Downsides, challenges and problems to solve**\r\n\r\nToday, about 3/4 of the test suite corresponds to the JIT unit tests - a search in my runtime repo clone under \u003ccode\u003esrc\\tests\\JIT\u003c/code\u003e for \u003ccode\u003e*.csproj/ilproj\u003c/code\u003e yields 7312 matches. If we\u0027re serious about this effort, we must tackle JIT tests first. According to the proposed ideal state, we should strive to reduce the number of separate apps to about 300~400. I think that roughly corresponds to two subdirectory levels under JIT (e.g. Methodical\\divrem) but I have yet to provide more precise numbers.\r\n\r\nWhile the test aggregation is expected to solve a known set of problems (test system complexity caused by the partitioning systems, performance of test build and execution), it has the potential to introduce a new set of problems we should plan ahead of and work on fixing or mitigating as part of the proposal. In particular, a larger number of tests being run as a single app can complicate debugging, profiling, TTT analysis, and JIT dump analysis; runtime and / or hard crash in one test tears down the subsequent tests in an aggregated test app, reducing test coverage in the presence of failures.\r\n\r\nThe counter-arguments clearly highlight sets of tests that are unsuitable for aggregation - typically interop tests where the individual tests sometimes tamper with the machine state (e.g. by registering COM classes), perhaps also the GC tests that are often lengthy and / or have the potential to tear down the app like in the case of negative OOM tests.\r\n\r\nEven in cases where the test aggregation is expected to be benign, e.g. in the case of the JIT methodical tests, we still need to address the question of aggregation hampering developer productivity, typically in various diagnostic scenarios. @AndyAyersMS proposed a dual system where the tests would be aggregated by default in bulk testing but the developer could explicitly request the build of a single test case to mitigate the aforementioned complications.\r\n\r\n**Proposed solution**\r\n\r\nI have yet to make any real experiments in this space but it seems to me that we might be able to solve much of this puzzle by introduction of *group projects*. My initial thinking is that, for a particular test project, e.g. \u003ccode\u003eJIT\\Methodical\\divrem\\div\\i4div_cs_do.csproj\u003c/code\u003e, we would use a new property to declare that the test is a part of the test group project, say, \u003ccode\u003eJIT\\Methodical\\divrem\\divrem_do.csproj\u003c/code\u003e (JIT tests often come in groups that require different optimization flags so that would need preserving in the groupings). Hopefully it should be possible to tweak msbuild to normally build just the group projects; these would need to use either some form of code generators or reflection to run all the relevant test “cases” represented by the grouped projects but that should no longer blow up msbuild as we could easily build the individual group projects serially.\r\n\r\nI already have a work item on adding a new command-line option to \u003ccode\u003esrc\\tests\\build.cmd/sh\u003c/code\u003e to let developers build just a particular test project or project subtree. It should be trivial to consolidate this option with the proposed project grouping such that in bulk testing we’d end up with just the group projects whereas targeted local scenarios would end up producing a single-test executable (as before) with the caveat that trying to build the entire tree in this “separate” mode would likely trigger an msbuild OOM or some other failure.\r\n\r\n**Proposed sequencing**\r\n\r\n1. I’m going to perform at least a series of local experiments to measure how much of the running time of the individual tests is coming from runtime initialization vs. actual test code execution and I’ll share them on this issue thread. I have yet to see whether this approach can be easily applied in the lab. Locally it might suffice to tweak R2RTest to use ETW mode to monitor at which point Main got executed.\r\n\r\n2. Assuming the perf experiments do confirm a perf win in test grouping (especially for tiny tests like the JIT unit tests) and we agree on this proposal in some form, I’ll look into implementing its basic underpinnings in the CoreCLR test build / execution infra scripts and I’ll test the approach on a small suite of JIT tests.\r\n\r\n3. Once the PR per (2) is merged in, we can trigger a “quality-week-like” combined effort to apply the technique to additional CoreCLR test areas. At this point we would be still using the pre-existing infrastructure including the XUnit wrappers and test partitionings, we’d just gradually reduce the number of test apps being run. (The proposed conservative approach doesn’t address actual test code merging i.e. the test build time win will likely be smaller if any. This is further aggravated by the fact that many of the JIT unit tests come in form of IL source code.)\r\n\r\n4. The work per (3) should yield gradually accumulating benefits in form of reducing the total CoreCLR test running time, both locally and in the lab. Once the work advances enough so that we get under the envisioned 1K test projects, we can proceed to experimenting with removal of the test partitionings. At that point we may be also able to consider removing the Pri0 / Pri1 distinction and always run all the tests.\r\n\r\nThanks\r\n\r\nTomas\r\n\r\n/cc @dotnet/runtime-infrastructure",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOOJFx7A==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2NTI2NTkzNQ==",
                                           "createdAt":  "2021-06-21T18:52:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n**Problem description**\r\n\r\nCurrent CoreCLR Pri1 test set has over 10K individual test projects. This is beyond the means of a single msbuild execution and is mitigated by partitioning the test projects into subgroups. Today at least three such partitionings exist (partitioning during test build, partitioning into XUnit wrappers, partitioning for Helix execution). While @echesakov did his best to make the Helix partitioning as good as possible, the entire logic adds enormous complexity to the test system, complicates developer ramp-up and is a constant cause of developer complaints. The 10K separate apps also mean 10K .NET Core runtime startups incurring enormous testing cost, it\u0027s not hard to imagine that the repeated .NET Core runtime initializations take an equal or greater amount of time than the actual test code execution.\r\n\r\n*Caveat* - we don\u0027t yet have any hard data to substantiate this claim. I\u0027m working on figuring out how to produce it in some form.\r\n\r\n**Ideal state**\r\n\r\nAs I personally heard in presentations by @jaredpar and @stephentoub, perf optimization of Roslyn and libraries tests that took place several years ago involved the reduction of the number of separate test apps as a key step. I believe we should take the same route in CoreCLR testing; in bulk testing (local or lab Pri0 / Pri1 testing) we should run fewer than 1K test apps, ideally less than 500. Once that happens, we should be able to remove all the partitioning goo and just run the tests one by one, both locally and in Helix.\r\n\r\n**Downsides, challenges and problems to solve**\r\n\r\nToday, about 3/4 of the test suite corresponds to the JIT unit tests - a search in my runtime repo clone under \u003ccode\u003esrc\\tests\\JIT\u003c/code\u003e for \u003ccode\u003e*.csproj/ilproj\u003c/code\u003e yields 7312 matches. If we\u0027re serious about this effort, we must tackle JIT tests first. According to the proposed ideal state, we should strive to reduce the number of separate apps to about 300~400. I think that roughly corresponds to two subdirectory levels under JIT (e.g. Methodical\\divrem) but I have yet to provide more precise numbers.\r\n\r\nWhile the test aggregation is expected to solve a known set of problems (test system complexity caused by the partitioning systems, performance of test build and execution), it has the potential to introduce a new set of problems we should plan ahead of and work on fixing or mitigating as part of the proposal. In particular, a larger number tests being run as a single app can complicate debugging, profiling, TTT analysis, and JIT dump analysis; runtime and / or hard crash in one test tears down the subsequent tests in an aggregated test app, reducing test coverage in the presence of failures.\r\n\r\nThe counter-arguments clearly highlight sets of tests that are unsuitable for aggregation - typically interop tests where the individual tests sometimes tamper with the machine state (e.g. by registering COM classes), perhaps also the GC tests that are often lengthy and / or have the potential to tear down the app like in the case of negative OOM tests.\r\n\r\nEven in cases where the test aggregation is expected to be benign, e.g. in the case of the JIT methodical tests, we still need to address the question of aggregation hampering developer productivity, typically in various diagnostic scenarios. @AndyAyersMS proposed a dual system where the tests would be aggregated by default in bulk testing but the developer could explicitly request the build of a single test case to mitigate the aforementioned complications.\r\n\r\n**Proposed solution**\r\n\r\nI have yet to make any real experiments in this space but it seems to me that we might be able to solve much of this puzzle by introduction of *group projects*. My initial thinking is that, for a particular test project, e.g. \u003ccode\u003eJIT\\Methodical\\divrem\\div\\i4div_cs_do.csproj\u003c/code\u003e, we would use a new property to declare that the test is a part of the test group project, say, \u003ccode\u003eJIT\\Methodical\\divrem\\divrem_do.csproj\u003c/code\u003e (JIT tests often come in groups that require different optimization flags so that would need preserving in the groupings). Hopefully it should be possible to tweak msbuild to normally build just the group projects; these would need to use either some form of code generators or reflection to run all the relevant test “cases” represented by the grouped projects but that should no longer blow up msbuild as we could easily build the individual group projects serially.\r\n\r\nI already have a work item on adding a new command-line option to \u003ccode\u003esrc\\tests\\build.cmd/sh\u003c/code\u003e to let developers build just a particular test project or project subtree. It should be trivial to consolidate this option with the proposed project grouping such that in bulk testing we’d end up with just the group projects whereas targeted local scenarios would end up producing a single-test executable (as before) with the caveat that trying to build the entire tree in this “separate” mode would likely trigger an msbuild OOM or some other failure.\r\n\r\n**Proposed sequencing**\r\n\r\n1. I’m going to perform at least a series of local experiments to measure how much of the running time of the individual tests is coming from runtime initialization vs. actual test code execution and I’ll share them on this issue thread. I have yet to see whether this approach can be easily applied in the lab. Locally it might suffice to tweak R2RTest to use ETW mode to monitor at which point Main got executed.\r\n\r\n2. Assuming the perf experiments do confirm a perf win in test grouping (especially for tiny tests like the JIT unit test) and we agree on this proposal in some form, I’ll look into implementing its basic underpinnings in the CoreCLR test build / execution infra scripts and I’ll test the approach on a small suite of JIT tests.\r\n\r\n3. Once the PR per (2) is merged in, we can trigger a “quality-week-like” combined effort to apply the technique to additional CoreCLR test areas. At this point we would be still using the pre-existing infrastructure including the XUnit wrappers and test partitionings, we’d just gradually reduce the number of test apps being run. (The proposed conservative approach doesn’t address actual test code merging i.e. the test build time win will likely be smaller if any. This is further aggravated by the fact that many of the JIT unit test come in form of IL source code.)\r\n\r\n4. The work per (3) should yield gradually accumulating benefits in form of reducing the total CoreCLR test running time, both locally and in the lab. Once the work advances enough so that we get under the envisioned 1K test projects, we can proceed to experimenting with removal of the test partitionings. At that point we may be also able to consider removing the Pri0 / Pri1 distinction and always run all the tests.\r\n\r\nThanks\r\n\r\nTomas\r\n\r\n/cc @dotnet/runtime-infrastructure\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003etrylek\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-06-21T18:52:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2NTI2NjczOQ==",
                                           "createdAt":  "2021-06-21T18:53:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "/cc @dotnet/jit-contrib ",
                                           "updatedAt":  "2021-06-21T18:53:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2NTI2OTk3NQ==",
                                           "createdAt":  "2021-06-21T18:59:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "/cc @dotnet/gc ",
                                           "updatedAt":  "2021-06-21T18:59:37Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2NTI3NzQ5MA==",
                                           "createdAt":  "2021-06-21T19:09:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "/cc @agocke @jkotas @janvorli @mangod9 ",
                                           "updatedAt":  "2021-06-21T19:09:31Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2NTI4NTE4Mw==",
                                           "createdAt":  "2021-06-21T19:22:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "/cc @tommcdon @hoyosjs ",
                                           "updatedAt":  "2021-06-21T19:22:23Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2NTI4NjQ1OA==",
                                           "createdAt":  "2021-06-21T19:24:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "/cc @naricc @fanyang-mono ",
                                           "updatedAt":  "2021-06-21T19:24:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2NTMwMjcxOA==",
                                           "createdAt":  "2021-06-21T19:55:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB-ZnIw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "hoyosjs",
                                                                               "createdAt":  "2021-06-21T20:20:10Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "trylek",
                                                                               "createdAt":  "2021-06-21T21:01:05Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2021-06-21T21:07:18Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "fanyang-mono",
                                                                               "createdAt":  "2021-06-22T20:18:10Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "danmoseley",
                                                                               "createdAt":  "2021-10-14T23:24:33Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e we should strive to reduce the number of separate apps to about 300~400.\r\n\r\nThis feels still way too much. I think we should be shooting for \u003c 40.\r\n\r\nIt is common to have thousand of tests per tests app in the libraries partition. Having a few hundred of tests per test app would still be less that what you regularly see in libraries.\r\n\r\n\u003e the test aggregation\r\n\r\nThere are two independent aggregations:\r\n- Build aggregation: how many test .exes and .dlls are built.\r\n- Execution aggregation: how many times is the .exe executed. One exe can be executed multiple times to deal with the isolation problem that you have pointed out. Libraries tests have RemoteExecutor helper for that.\r\n\r\nI think we should deal with both types of aggregation at the same time, so that it is solved once for good. I think the ideal state is:\r\n\r\n- Build produces .dlls that contains 100s of tests each\r\n- By default, each .dll is executed once to run all tests. Tests that need to run in seperate process can use RemoteExecutor or something similar.\r\n\r\nWe would need to change how the tests are authored to make this happen. The tests cannot use the regular Main method as the entrypoint anymore since you cannot have multiple Main methods per binary. \r\n\r\nMy proposal would be:\r\n- Use the regular XUnit `[Fact]` attributes to mark test entrypoints. We would bulk edit the tests and change their Main method to be a regular method with `[Fact]` attribute.\r\n- Create a source generator that enumerates all methods marked with `[Fact]` attribute in the project and creates Main method that calls all of them. Optionally, the Main method can take a test name and switch on it so that it is still easy to run individual test (would it be enough to address the diagnostic concern?).\r\n   - https://github.com/dotnet/runtime/tree/main/src/libraries/Common/tests/StaticTestGenerator can be used as an inspiration for this source generator\r\n\r\nThe reason for using source generator and not XUnit runner to discover the tests is debuggability. XUnit runner is a reflection stress test and thus it is not suitable as a test driver for the low-level runtime.\r\n\r\nThe nice side-effect of using the standard XUnit attributes for runtime tests is that the authoring of core runtime tests will become more similar to authoring of libraries tests.",
                                           "updatedAt":  "2021-06-21T19:58:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2NTMyMDgwNQ==",
                                           "createdAt":  "2021-06-21T20:24:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "One thing I was thinking about this approach is: does this mean catastrophic failures in one test will take down the whole work item execution? Maybe this is something the remote executor can help with. Also, with the generated `Main` approach we would probably need to work out the reporting mechanism + coredump mechanism as what we have today would fall short and helix wouldn\u0027t report these. ",
                                           "updatedAt":  "2021-06-21T20:24:06Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2NTM0OTE4Nw==",
                                           "createdAt":  "2021-06-21T21:15:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "I can theoretically imagine that we might be able to tweak the test scripts such that, when the aggregate test app crashes in a catastrophic manner, we\u0027d run it a second time to execute the individual test cases one by one as separate apps, I guess that\u0027s what roughly corresponds to the remote executor. For the test authoring, I guess the biggest challenge is the JIT IL tests, I was originally thinking we might be able to keep them unchanged but if that doesn\u0027t work, I\u0027m definitely open to other ideas.",
                                           "updatedAt":  "2021-06-21T21:15:27Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2NTM4OTQ4NA==",
                                           "createdAt":  "2021-06-21T22:37:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBvk12w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "trylek",
                                                                               "createdAt":  "2021-06-21T22:53:07Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "My main request if we go a remote-executor route would be that there is some mode to have the remote executor spit out the command line required to launch the process it is starting. One of the hardest problems with RemoteExecutor is being able to figure out how to debug the child process.\r\n\r\nAdditionally, if we go the route of a source-generated xunit-esque test execution runner with RemoteExecutor-esque features for tests that require out-of-proc launching, I\u0027d like it if we could design the support such that a test author could also reuse whatever infra we have for launching the child process and capturing diagnostics for specialized cases (like the COM tests with native entry-points that test activation)",
                                           "updatedAt":  "2021-06-21T22:37:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2NTM5NjkzOA==",
                                           "createdAt":  "2021-06-21T22:57:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBvwk0g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkoritzinsky",
                                                                               "createdAt":  "2021-06-21T23:02:44Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "BruceForstall",
                                                                               "createdAt":  "2021-06-22T23:36:56Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "trylek",
                                           "body":  "Frankly speaking, I think we should work hard to avoid child process executions whenever possible as I believe it makes a crucial difference w.r.t. test perf. For isolation-sensitive tests like interop tests we\u0027ll add specific provisions based on auditing where process isolation is required.",
                                           "updatedAt":  "2021-06-21T22:57:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2NTQ3NTc4MA==",
                                           "createdAt":  "2021-06-22T02:30:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "naricc",
                                           "body":  "We are already doing a kind of build-aggregation of tests for Android and iOS tests, because it was simply impractical to package up each test as a separate app. (@fanyang-mono  and @imhameed  worked on this repsecitvely) I think this will need to be true for wasm-aot as well, because each individual wasm-app takes a long time to compile.\r\n\r\nIf we do this \"test group\" things, we may be able to also put each group in an app, which would simplify the design of those test lanes. But I am not sure if the tradeoffs are the same/compatilbe (i.e. how many tests can go in each app).",
                                           "updatedAt":  "2021-06-22T02:30:26Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2NjQxMDMzMQ==",
                                           "createdAt":  "2021-06-22T23:48:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "A JIT team requirement is to execute as little managed code as possible before getting to the test being debugged. It sounds like the proposal above might mostly achieve this even with aggregated tests, for most debugging scenarios. A counter-example is the libraries tests, where debugging them involves JITing and running gobs of xunit w/ reflection, which is super slow and interferes with debugging (e.g., set a JIT/GC stress mode, xunit is stressed also before even getting to the desired code). I like the proposal that tests could optionally be built standalone, if possible. Small, standalone tests help greatly in platform bring-up scenarios.\r\n\r\nI like Jan\u0027s suggestion about mass grouping, noting that the build grouping doesn\u0027t necessarily need to reflect Helix run-time grouping: if we have X built test assemblies and want to parallelize runs on Y machines, we don\u0027t need X == Y : especially if we can choose which subset of tests in a test assembly get run in any particular invocation. E.g., copy X.dll to two Helix machines, run half of the tests in X.dll on one machine, half on the other. This might not work quite so transparently, however, for crossgen tests, which will crossgen the entire test assembly no matter what subset of tests is run.\r\n\r\nGrouping the tests probably makes is easier/simpler to copy tests between machines, e.g., from a Linux/x64 box doing cross-compilation to a Linux/arm32 \"run\" box.\r\n\r\nThe \"test driver\" will need to be very clear about which test is being run, which has passed/failed, how to rerun a failure (or pass). Of course, we need the results surfaced to Helix/AzDO properly.\r\n\r\nHow will per-test timeouts work? Will they only be per-test-assembly? That could cause a misbehaving test early in the run to prevent getting results from tests later in the run sequence.\r\n",
                                           "updatedAt":  "2021-06-22T23:48:54Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2NzkxNDI1Mw==",
                                           "createdAt":  "2021-06-24T20:01:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "Thanks @BruceForstall for your detailed and insightful feedback. I don\u0027t yet have all the answers to your question; as a first step I\u0027m trying to collect some actual perf numbers and as part of this task I noticed a bunch of test duplicates. Would you be fine with cleaning these up as a preparatory step or is there some more subtle distinction to what I perceive as mere duplication? Examples:\r\n\r\nhttps://github.com/dotnet/runtime/blob/main/src/tests/JIT/Methodical/NaN/arithm32_cs_d.csproj\r\nhttps://github.com/dotnet/runtime/blob/main/src/tests/JIT/Methodical/NaN/arithm32_d.csproj\r\n\r\n(and seven other pairs in the same folder)\r\n\r\nhttps://github.com/dotnet/runtime/blob/main/src/tests/JIT/Methodical/xxobj/operand/refanyval.csproj\r\nhttps://github.com/dotnet/runtime/blob/main/src/tests/JIT/Methodical/xxobj/operand/_dbgrefanyval.csproj\r\n\r\nI see about two dozen similar cases and my local tooling should let me automate their identification. If you agree to the preparatory cleanup, I\u0027ll work on putting up a PR.\r\n\r\nThanks\r\n\r\nTomas",
                                           "updatedAt":  "2021-06-24T20:01:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2NzkyMDQ5OA==",
                                           "createdAt":  "2021-06-24T20:11:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "Those look like dups to me.\r\n\r\nNote that src\\tests\\JIT\\CheckProjects\\CheckProjects.cs is a tool to ensure test tests set various properties correctly. I haven\u0027t run it recently (and I\u0027m not sure it runs in an automated fashion anywhere).",
                                           "updatedAt":  "2021-06-24T20:11:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2ODg4ODEzMA==",
                                           "createdAt":  "2021-06-25T23:53:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "I have performed a simple experiment to get an initial reading on the perf implications of proposed test merging. The results seem to indicate potential for substantial build time speedup; I\u0027m also seeing some runtime speedup but frankly not as pronounced as I expected. Most of the motivation in the issue description remains in place, I just have less hope that the change will automatically translate to drastic reduction of test running time - there are still chances the change will substantially speed up Helix execution by means of reducing the payloads but that\u0027s speculation at this point.\r\n\r\nAs the target for my initial experiment I picked the \u003ccode\u003eJIT\\Methodical\u003c/code\u003e tests that seem well suited for merging. The Pri1 suite contains about 2K tests in this subtree approximately half of which are csproj and the other half are ilproj projects. I have limited the initial experiment to csproj as the IL is much harder to transform. I have basically open-coded a simple managed app that uses some shortcuts to try to mimic the proposed transformation - changing the Main methods in the individual tests to be normal methods and directly calling them from a generated wrapper project / source file. I have excluded about 50 tests that use constructs incompatible with my simplistic C# / project rewriter. The runtime perf results on my laptop are as follows (x64 release):\r\n\r\n1) Vanilla \u003ccode\u003esrc\\tests\\run release\u003c/code\u003e - 33 seconds.\r\n2) Test wrapper calling into the original test assemblies - 29 seconds.\r\n3) All tests compiled into a single assembly - 26 seconds.\r\n\r\nIt\u0027s probably worth noting that I\u0027m respecting the d/r/do/ro distinctions so I\u0027m actually generating four projects and running them in sequence. As you can see, the \"fastest\" variant (putting all tests in the subtree in a single assembly) reduces the execution time by about 22%.\r\n\r\nOn the other hand, putting all tests in a single assembly does reduce test build time in a substantial manner. On my laptop the managed test build portion of \u003ccode\u003esrc\\tests\\build release -priority=1\u003c/code\u003e (still limited to \u003ccode\u003ecsproj\u003c/code\u003e projects under \u003ccode\u003eJIT\\Methodical\u003c/code\u003e) takes about 190 seconds while the build of the four combined projects representing \u003ccode\u003eJIT\\Methodical\u003c/code\u003e tests in the four build combinations (d / do / r / do) only takes about 24 seconds i.e. about 8 times improvement.\r\n\r\n**Summary**: merging many tests together does have a drastic effect on total test build time; runtime perf improvement is also measurable but much less pronounced. Please note this could still be a big win for PR / CI runs as the test build constitutes a non-trivial portion of the total running time of these pipelines. In the latest CI run Pri0 test build took about 23 minutes; in the last outerloop run, Pri1 test build took about 47 minutes. It is also worth noting that this part is fundamental as all the Helix runs depend on it.\r\n\r\nIf purely hypothetically we were able to reduce test build time 8 times as the results for \u003ccode\u003eJIT\\Methodical\u003c/code\u003e tests suggest, i.e. from 23 to ~3 minutes and from 47 to ~6 minutes, that would directly translate into total running times of the CoreCLR pipelines. This estimate has many caveats, e.g. many Interop tests use native components with different build time characteristics, merging multiple ilproj tests into a single assembly requires more complex IL transformations etc. but I believe there definitely is potential for improvement along the lines of this proposal.",
                                           "updatedAt":  "2021-06-25T23:53:56Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2ODg4OTgzNA==",
                                           "createdAt":  "2021-06-26T00:02:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBwQCXg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkotas",
                                                                               "createdAt":  "2021-06-26T00:10:00Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "Note that we build and run the tests in a Checked config almost 100% of the time, so I\u0027d measure that instead of `release`. There, I\u0027d expect a bigger improvement.",
                                           "updatedAt":  "2021-06-28T16:03:35Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2ODg5MjA4Ng==",
                                           "createdAt":  "2021-06-26T00:11:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e Vanilla src\\tests\\run release - 33 seconds.\r\n\u003e Test wrapper calling into the original test assemblies - 29 seconds.\r\n\u003e All tests compiled into a single assembly - 26 seconds.\r\n\r\nWas the CPU utilization same between the different cases?\r\n\r\n+1 on measuring checked JIT and runtime flavor",
                                           "updatedAt":  "2021-06-26T00:11:56Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2ODg5NjcyMg==",
                                           "createdAt":  "2021-06-26T00:40:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "Thanks Bruce and Jan for your additional feedback. You\u0027re right on both accounts. In checked mode, the three numbers are:\r\n\r\n1) Vanilla src\\tests\\run checked - 202 seconds.\r\n2) Test wrapper calling into the original test assemblies - 96 seconds.\r\n3) All tests compiled into a single assembly - 89 seconds.\r\n\r\nFor now I just observed CPU utilization in the task manager while running the tests. In (1), xUnit is obviously running the tests in parallel - after the initial test discovery CPU utilization quickly goes to 100% and stays there for the entire test duration. In contrast, both my \"new\" measurements per (2) and (3) involve CPU happily sitting at 22~25% utilization corresponding to just 1 out of my 4 cores being used. In other words, by fully leveraging parallelism we should be able to further improve case (2) and (3) to 96/4 ~ 24 seconds (about 8 times speedup). I assume that the difference between (2) and (3) is less pronounced in checked mode as the slower JIT and runtime in general dwarf the OS loader time needed to load the multiple assemblies in case (2).",
                                           "updatedAt":  "2021-06-26T00:47:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2ODg5OTI2Mg==",
                                           "createdAt":  "2021-06-26T00:58:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "In case anyone\u0027s interested in further experiments in this area, I have put the tool I wrote on our internal share\r\n\r\n\u003cpre\u003e\r\n\\\\clrmain\\public\\writable\\users\\trylek\\TestGrouping.zip\r\n\u003c/pre\u003e\r\n\r\nIt basically receives a path into the GIT clone as its command-line argument (e.g. \u003ccode\u003eD:\\git\\runtime\\src\\tests\\JIT\\Methodical\u003c/code\u003e), rewrites the C# code and projects in the subtree and generates the eight wrapper projects - four projects per (2) and four per (3) - into the folder. This way \u003ccode\u003egit checkout\u003c/code\u003e / \u003ccode\u003egit clean -xdf\u003c/code\u003e can be easily used to undo the transformations when experimenting with the tool. The wrapper projects conform to the normal CoreCLR test project style so that they can be individually built using \u003ccode\u003edotnet msbuild ...csproj\u003c/code\u003e and executed using the generated \u003ccode\u003ecmd\u003c/code\u003e script. I\u0027ll be happy to carry out any additional measurements using the tool based on your suggestions, at the end of the day it\u0027s actually quite easy to use.",
                                           "updatedAt":  "2021-06-26T00:58:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41okka",
                                           "createdAt":  "2021-08-16T21:23:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "As a next step in my experiments I have recently managed to leverage the internal iDNA technology to measure that in the archetypal \"tiny JIT\" test I\u0027m always mentioning, i4div_cs_do, (on Windows x64 release) we carry out about 70M instructions before entering Main and then about 15M instructions within it. While anecdotal, I believe it further confirms that there is at least some value in test merging for lab testing purposes.\r\n\r\nFor our oncoming Quality week (next week of 8/23) I have proposed starting the initial preparatory steps, in particular cleaning up test duplicates and renaming tests to remove entrypoint name duplicates (getting rid of pairs of tests with the same qualified entrypoint name i.o.w. where the assembly, class and entrypoint are the same). Once this is done, I\u0027ll start working on the next step actually converting tests to XUnit style and on support for their merging.",
                                           "updatedAt":  "2021-08-16T21:23:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44QdDb",
                                           "createdAt":  "2021-10-14T23:27:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "\u003e This feels still way too much. I think we should be shooting for \u003c 40.\r\n\r\nJust curious, why would we not just have a single assembly for all JIT tests, at that point? The hit on developer loop (even though C# compilation is fast)? ",
                                           "updatedAt":  "2021-10-14T23:27:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44QehV",
                                           "createdAt":  "2021-10-14T23:43:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "While we\u0027re at it, please consider https://github.com/dotnet/runtime/issues/59821 as an input to this effort.",
                                           "updatedAt":  "2021-10-14T23:43:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44QfsG",
                                           "createdAt":  "2021-10-14T23:58:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e Just curious, why would we not just have a single assembly for all JIT tests, at that point? \r\n\r\nI do not expect that there will be large efficiency gain between 40 and 1. And if we optimize the system for 1, it has high probability of getting us into troubles on opposite end of the spectrum. One giant binary is as bad as thousands of tiny binaries. The sweet spot for binary size is in the \u003e100kB and \u003c10MB range.",
                                           "updatedAt":  "2021-10-14T23:59:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44VtFh",
                                           "createdAt":  "2021-10-17T23:17:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "I have finally managed to figure out more detail regarding the test consolidation plan. I am proposing to base the plan on the following assumptions:\r\n\r\n* It is not realistic to convert all 10K tests in a single PR. At least in the short term we need a hybrid infra that will let the various teams gradually audit and convert their tests. At some point we may become able to delete the legacy portions of the infra. This will also let us implement and demonstrate the work on a small subset of CoreCLR tests; once we agree on the structure of the change and iron out all issues, we can move towards converting larger batches of tests as appropriate.\r\n\r\n* According to my initial experiments higher up this thread, the perf difference between running tests in-process vs. today out-of-process is much more pronounced than the perf difference between tests compiled into multiple assemblies (just executed in-proc) and tests compiled into a single assembly. For this reason I propose to limit this effort to merging in-proc test executions, not actually compiling multiple tests into a single managed assembly; we can consider that as a next step but today the biggest perf win to be had is in Helix especially considering that a single Roslyn compilation of managed test components gets reused for dozens of OS / architecture variations of Helix executions.\r\n\r\n* The test conversion process will involve modifying the test source code and build project. I believe it should be possible to write a managed tool capable of converting something like 90% of the tests but the process will be semi-automatic, it will require manual auditing. My current thinking is that we’ll just modify the projects to use \u003ccode\u003eOutputType=Library\u003c/code\u003e and \u003ccode\u003eCLRTestKind=BuildAndRun\u003c/code \u003e and we’ll rename the \u003ccode\u003eMain\u003c/code\u003e method to some other identifier marked with the xUnit \u003ccode\u003e[Fact]\u003c/code\u003e attribute; thus the new test assemblies will formally conform to xUnit / dotnet test style even though the run.cmd/sh script won’t be using runtime reflection for the test discovery and execution. In about 5% cases the tests will need additional manual editing to fix qualified entrypoint clashes and internal / private entry points most notably in ilproj projects.\r\n\r\n* The \u003ccode\u003eCLRTest.*.targets\u003c/code\u003e scripts will identify new-style tests (Library / BuildAndRun) and adjust the cmd / sh execution script generator to use a managed wrapper app to run the test in question (as it will no longer have a Main entrypoint by itself). This will ensure that we’re still able to run the tests one by one locally as was a fundamental ask of the JIT team. Alternatively we might consider modifying the corerun app to directly support dll\u0027s without an entrypoint by looking for the [Fact] attribute.\r\n\r\n* I’ll write a new managed app that will scan the test output directories after the Roslyn build and create “new-style xUnit wrappers” for them. It will enumerate all dll files in the subtree and scan their managed types and methods to locate the methods marked with the [Fact] attribute and slice them into sections (where we can optimize the size of each section per OS / architecture / runtime flavor) that will generate C# source code and project scripts similar to today xUnit wrapper scripts, just using in-process execution to launch the individual test entry points. We could define a heuristic characterizing runtime duration of the test to affect grouping (singling out long-running tests to be put in smaller groups or in single-test groups).\r\n\r\n* The “normal” xUnit wrapper generation will skip the new-style tests; thus once we trigger test execution, locally or in Helix, the “old-style” xUnit wrappers should blend with the “new-style” xUnit wrappers and provide for a smooth transition between the modes; at some future point we may be able to switch over all tests and delete the legacy xUnit wrapper creation logic.\r\n\r\n* My current thinking is that, assuming we agree on the general direction of this proposal, I’ll implement initial versions of the proposed tooling and script changes and I’ll demonstrate them in a PR switching over a small initial subset of JIT tests. We can further refine the design details on that PR thread; once it’s merged in, we can fan out to the individual teams owning the CoreCLR test portfolio and have them negotiate and fund the switchover of their test subsets.\r\n\r\n* My current proposal basically removes the role of the cmd / sh test execution scripts in the merged scenario. For JIT tests this should be mostly acceptable; if at some point we decide to consider converting some interop tests, for instance, we’ll need additional tricks to define test initialization requirements (like registering COM servers and such) that will ultimately end up in the new-style xUnit wrapper or in some script calling it. Similarly, if we decide to shoot for a complete conversion, we’ll need means for marking tests that cannot be merged at all and must be run one by one, this will be probably necessary for extreme cases like GC OOM negative tests.\r\n\r\nI’m looking forward to any feedback and additional suggestions.\r\n\r\nThanks\r\n\r\nTomas\r\n",
                                           "updatedAt":  "2021-10-17T23:22:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44VudQ",
                                           "createdAt":  "2021-10-17T23:48:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB-oEBg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkoritzinsky",
                                                                               "createdAt":  "2021-10-18T01:24:28Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e It is not realistic to convert all 10K tests in a single PR. At least in the short term we need a hybrid infra that will let the various teams gradually audit and convert their tests.\r\n\r\n+1\r\n\r\n\u003e For this reason I propose to limit this effort to merging in-proc test executions, not actually compiling multiple tests into a single managed assembly\r\n\r\nThere is significant overhead in building the thousands little binaries too. I do not have exact numbers, but just watching the build console makes it very visible. \r\n\r\nI think we should agree on the final shape that we want to get to and then decide about the best way to get there.\r\n\r\nI am not convinced that doing the conversion in multiple steps will save us anything (it is more likely the opposite).\r\n\r\n\u003e I’ll write a new managed app that will scan the test output directories after the Roslyn build\r\n\r\nCan this be a Roslyn source generator that is usable with any xunit-based test project (ie not specific to clr test infrastructure)? Maybe this source generator can live in http://github.com/dotnet/arcade repo, for now at least.",
                                           "updatedAt":  "2021-10-17T23:48:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44XY2Q",
                                           "createdAt":  "2021-10-18T11:06:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "One thing that is not clear to me is how we would handle the test cases that use special extra scripts bits generated from their project files via `CLRTestBatchPreCommands` / `BashCLRTestPreCommands`, especially the per-test settings of env variables that have to be done before the test process executes.\r\nAlso, I have thought that we would preserve an optional ability to run individual tests for the cases like new platforms bringups where the runtime is not fully working yet. I am also worried about issues leaking from one test case to another when running many tests in process. What I mean is that a test case can hit some issue in the runtime, e.g. a GC hole, that would stay hidden until some later test case results in triggering a GC. And this is not limited just to a GC, there can be some runtime data structure corruption triggered by one test case and revealed much later in an unrelated one. Or the case when a test issue would not fire if the runtime was already  \"warmed up\". It seems that the new way will make debugging and identifying such issues much more difficult. So I feel like the ability to run individual tests one by one in a way where very little code is executed before the actual test code is very important. ",
                                           "updatedAt":  "2021-10-18T11:06:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44Y0KW",
                                           "createdAt":  "2021-10-18T18:05:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "Thanks Jan \u0026 Jan for your detailed feedback. Based on your comments I\u0027m trying to reformulate the principles of the conversion.\r\n\r\n* We seem to be in agreement that we need a hybrid model to facilitate gradual transformation of the tests and we believe there\u0027s no easy way to mitigate Helix costs without at least some amount of test merging as the repeated runtime startup costs including the cost of the generated scripts participating in the out-of-proc test execution multiplied by the number of tests substantially contributes to the total test duration.\r\n\r\n* Related concern raised by JanV with regard to runtime state leaking from one test to the other, I think there\u0027s just no way to completely avoid this risk if we want some test merging, all I\u0027m proposing are mitigations - introducing options, perhaps in form of additional attributes, to mark tests unsuitable for merging or perhaps allow richer hints for the test splitting. For things like GC holes the merged system might be actually more \"efficient\" in the sense of being more stressful as short executions of the individual test cases can easily hide GC inconsistencies in cases where the test finishes quickly without a GC taking place.\r\n\r\n* We\u0027re in agreement that we need to retain the ability to run tests one by one; higher up this thread the JIT team emphasized the same ask. My original thinking was that, if we just transform the entrypoints and keep separate managed assembly compilation, very little change would be needed to run the tests in basically their original form. As JanK believes we should tackle C# compilation time as part of this task too, a switch over the first command-line parameter specifying the test to run in the generated wrapper would probably go a long way towards satisfying this requirement.\r\n\r\n* Just to clarify to avoid any misunderstandings, I do believe that the wrappers should be auto-generated, not just pre-generated and subsequently hand-maintained. Autogenerated wrappers remove the need for error-prone manual registration of a newly authored test and wrapper generation should let us further tune the payloads based on targeting OS, architecture and runtime flavor. I must admit I’m not yet familiar with Roslyn source generators, it remains to be seen to what extent they satisfy the outlined requirements and / or whether we’d need additional repo-specific extensions on top of “switching xUnit tests to use compile-time reflection”. In particular I’m thinking about the environment variable override raised by JanV, about rules for test grouping and so on.\r\n \r\nFor source-level merging into larger test apps, I believe we must solve three non-trivial challenges; these will likely require some amount of manual adjustments in the tests:\r\n \r\n* Dealing with IL-based projects. To my knowledge ILASM doesn’t support assembling multiple .il source files into a single module / assembly.\r\n\r\n* Cleaning up management of support assemblies. Many tests use managed support assemblies; sometimes multiple tests use the same support assembly, sometimes groups of tests use different support assemblies that just happen to be named the same (e.g. we have five different common.csproj projects in the test tree). Some tests tamper with its own or with the support assembly paths. We should make sure that tests marked as non-mergeable generate a single-test wrapper as similar as possible to the previous style of running tests as standalone apps.\r\n\r\n* Expressing external dependencies using additional attributes. For a merged test app there’s no way to run a script between the test cases, in fact it’s one of the main goals to get shell out of the picture and run test cases within the merged app with as little overhead and process launching / switching as possible. It should be easy to have an attribute for setting environment variables for each test, we could have attributes for registering COM servers prior to running the tests, we could also have a global initialization section that would take place once before we execute any tests in the merged app, e.g. by means of an extra generated cmd / sh script that would perform the initialization and then execute the wrapper.\r\n",
                                           "updatedAt":  "2021-10-18T18:05:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44ZIyC",
                                           "createdAt":  "2021-10-18T19:53:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "With help from Tomas Matousek I managed to get a better idea about how the Roslyn source generators work. From this perspective I now think that the test wrapper creation should involve three steps:\r\n\r\n* Using a Roslyn analyzer to scan the source code and collect the [Fact] attributed methods. I\u0027m most worried about the performance of this step as it ultimately ends up feeding the 10K or more source files to the analyzer. We might need to introduce some caching support so that local test build innerloop doesn\u0027t incur this penalty (at least not upon each build).\r\n\r\n* Using the collected metadata to produce the test splitting and plan out the individual test wrapper compilations.\r\n\r\n* Running the Roslyn source generator on each test group to emit the corresponding test wrapper.\r\n\r\nWhile my current understanding confirms that the Roslyn analyzer / generator technology is sufficient for the first and third step, I still need to get my head around the second step as I don\u0027t yet see how to integrate it into the Roslyn analyzer / generator framework apart from subjecting the entire test subtree to a single Roslyn compilation and I have no idea what will happen if I do.",
                                           "updatedAt":  "2021-10-18T19:53:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44ZerA",
                                           "createdAt":  "2021-10-18T22:03:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB-zC3Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "trylek",
                                                                               "createdAt":  "2021-10-18T22:13:30Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkoritzinsky",
                                                                               "createdAt":  "2021-10-18T23:12:48Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e For things like GC holes the merged system might be actually more \"efficient\" in the sense of being more stressful as short executions of the individual test cases can easily hide GC inconsistencies\r\n\r\n+1\r\n\r\n\u003e a switch over the first command-line parameter specifying the test to run in the generated wrapper would probably go a long way towards satisfying this requirement.\r\n\r\nYep, we should not need to build the tests differently to allow single test execution. Check the sketch of the auto-generated `Main` method below on what it may look like. We are running quite a bit of managed code during startup, so I would hope that adding one extra managed method should not be a big deal. We can iterate on what the wrapper should look like exactly to make it as little intrusive as possible and still support all required features.\r\n\r\n\u003e Dealing with IL-based projects. \r\n\r\nIt is ok to keep the IL-based tests in separate .dlls. However, we should allow multiple tests to exist in one .il file.\r\n\r\n\u003e For a merged test app there’s no way to run a script between the test cases, in fact it’s one of the main goals to get shell out of the picture and run test cases within the merged app with as little overhead and process launching / switching as possible. \r\n\r\nThis problem was solved for libraries tests using remote executor. It would be nice to use the same scheme here if possible. Also, we only have a few hundred of these tests that require env variables, etc. We can deal with them last during final cleanup. We do not need to agree on the exact solution now.\r\n\r\n\u003e I\u0027m most worried about the performance of this step as it ultimately ends up feeding the 10K or more source files to the analyzer\r\n\r\nThe analyzer should be only running on one group at a time. I think we should be fine as long as we keep the group size under 1K.\r\n\r\nNote that it is not unusual for libraries test .dlls to contain thousands of tests. For example, https://github.com/dotnet/runtime/tree/main/src/libraries/System.Runtime/tests contains 3_700+ tests, but it still compiles and executes in a very reasonable amount of time. I do not remember anybody complaining about System.Runtime tests compilation or execution speed hampering productivity.\r\n\r\n\u003e I still need to get my head around the second step as I don\u0027t yet see how to integrate it into the Roslyn analyzer / generator framework\r\n\r\nRoslyn generator should be responsible to generating `Main` method of the entrypoint test .exe. Let\u0027s say my test source files look like this:\r\n\r\n```csharp\r\npublic class MyTests\r\n{\r\n    [Fact]\r\n    public static void Test1()\r\n    {\r\n        Assert.Equal(0, 0);\r\n    }\r\n}\r\n```\r\n\r\n```csharp\r\npublic class OtherTests\r\n{\r\n    [Fact]\r\n    public static void Test2()\r\n    {\r\n        Assert.Equal(42, 42);\r\n    }\r\n}\r\n```\r\n\r\nThe source generator should produce a `Main` method that looks like this:\r\n\r\n```\r\n[MethodImpl(MethodImplOptions.NoOptimization)]\r\nstatic void Main(string[] args)\r\n{\r\n    string name = (args.Length \u003e 0) ? args[0] : null;\r\n    if (name == null || name == \"MyTests.Test1\") MyTests.Test1();\r\n    if (name == null || name == \"OtherTests.Test2\") OtherTests.Test2();\r\n}\r\n```\r\n\r\nEverything (the tests and the auto-generated `Main` method) gets compiled into one test .exe as part of single Roslyn compilation.",
                                           "updatedAt":  "2021-10-18T22:06:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44Zg3F",
                                           "createdAt":  "2021-10-18T22:17:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "Thanks Jan for your supportive response. Based on your feedback I believe that as a first step I should experiment with the Roslyn source generator to get an idea about its performance and ability to deal with larger groups of tests. As a first iteration I would look into partitioning corresponding to the existing xUnit wrappers i.e. two directory levels under the test binary root (e.g. JIT\\Methodical). I actually think this is the biggest one with about 2K tests so its conversion should provide many insights into the subsequent work.",
                                           "updatedAt":  "2021-10-18T22:17:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44Zieg",
                                           "createdAt":  "2021-10-18T22:29:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "One other detail I mentioned higher up this thread but haven\u0027t emphasized recently is the debug / optimization matrix. For JIT tests in particular, many of these come with \u003ccode\u003ed / do / r / ro\u003c/code\u003e suffixes to denote debug vs. release and optimization switches. In my summer experiments I ended up generating four wrappers corresponding to each of the categories, I\u0027ll be happy for other ideas.",
                                           "updatedAt":  "2021-10-18T22:29:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44ZjdO",
                                           "createdAt":  "2021-10-18T22:38:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e  I believe that as a first step I should experiment with the Roslyn source generator to get an idea about its performance and ability to deal with larger groups of tests.\r\n\r\nFor inspiration, you can also take a look at https://github.com/dotnet/runtime/tree/main/src/libraries/Common/tests/StaticTestGenerator . It does the same thing as what the source generator should do, except that it is a standalone tool.\r\n\r\nAlso, you can use the existing tests under libraries to test the source generator. \r\n\r\n\u003eFor JIT tests in particular, many of these come with d / do / r / ro suffixes to denote debug vs. release and optimization switches. In my summer experiments I ended up generating four wrappers corresponding to each of the categories, I\u0027ll be happy for other ideas.\r\n\r\nSounds reasonable. If we are building a tests in 4 different ways with current scheme, we will need to build it in 4 different ways in the new scheme as well to maintain same coverage.",
                                           "updatedAt":  "2021-10-18T22:38:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44Zn_-",
                                           "createdAt":  "2021-10-18T23:19:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "@trylek if you have any questions about how to build a Roslyn source generator such that it runs efficiently, just shoot me a message and I should be able to help.",
                                           "updatedAt":  "2021-10-18T23:19:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44dSLn",
                                           "createdAt":  "2021-10-20T00:15:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "I think most of the following concerns have already been considered, above, but let me right them down just to be sure:\r\n\r\n- The wrapper cmd files handle various services, such as supporting (a) ilasm round-trip testing, (b) crossgen2 testing, (c) bailing out on some test configurations, (d) IL linker testing (?), (e) setting stress environment variables before a test is run. The new mechanism will need to handle all of this. Maybe ilasm round-trip testing gets much faster, if we only need to round-trip a large assembly. However, I\u0027m worried that if there are any issues with ildasm/ilasm, we\u0027ll now be looking at a HUGE test, not a small one. Similarly, we would crossgen the entire test assembly, not just a single test assembly. That could make failure repros much more complex.\r\n- I believe the current xunit wrappers handle per-test timeouts and core dumps. Presumably the auto-generated wrapper will handle this?\r\n- Will test exclusions work the same as today? There are some per-test conditional exclusion attributes in the proj files, e.g., IlasmRoundTripIncompatible, GCStressIncompatible, UnloadabilityIncompatible. How do these get \"attached\" to the test? I think today these get baked into the wrapper cmd file. Do we partition tests into sets with precisely the same set of proj file attributes?\r\n- Will the existing issues.targets file exclusion mechanism still be used?\r\n- Similarly, how will tests get marked Pri-0 versus Pri-1?\r\n- Where is the test run parallelism going to live? In the (generated) test wrapper program?\r\n- If the test annotations *look* like xunit, could you actually *use* xunit to run the tests (if you wanted to?)\r\n\r\nExtending JKotas\u0027s example above, we could also leave a `Main` function with every test, but put it under `#ifdef`:\r\n```\r\npublic class MyTests\r\n{\r\n    [Fact]\r\n    public static void Test1()\r\n    {\r\n        Assert.Equal(0, 0);\r\n    }\r\n#if STANDALONE\r\n    public static int Main()\r\n    {\r\n        int result = 100; // default success code\r\n        Test1();   // or `result = Test1();` for tests that return an `int`\r\n        return result;\r\n    }\r\n#endif // STANDALONE\r\n}\r\n```\r\n",
                                           "updatedAt":  "2021-10-20T00:15:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44gWUJ",
                                           "createdAt":  "2021-10-20T20:17:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "Thanks Bruce for your comments and suggestions. \r\n\r\n\u003e The wrapper cmd files handle various services, such as supporting (a) ilasm round-trip testing, (b) crossgen2 testing, (c) bailing out on some test configurations, (d) IL linker testing (?), (e) setting stress environment variables before a test is run. The new mechanism will need to handle all of this.\r\n\r\nWe already assume that some tests won\u0027t be mergeable. Similarly we could have a mode that wouldn\u0027t merge anything and basically run tests one by one like today; we could use this, at least in the middle term, for jobs exercising some of the special behavior you describe (ILASM / ILDASM roundtrip, IL linker testing, stress runs); our current biggest goal is to provide some headroom to our lab capacity that is currently stretched to the limit and for this purpose it should be sufficient to optimize the most frequent runs i.e. PR / CI and outerloop runs; jobs running a few times a week shouldn\u0027t make that much of a difference. In some cases like Crossgen2, merging tests should actually provide perf gain of its own as a larger Crossgen2 compilation is generally much more performant than a ton of tiny compilations incurring repeated managed startup, loading of the framework assemblies and similar semi-constant costs.\r\n\r\n\u003e I believe the current xunit wrappers handle per-test timeouts and core dumps. Presumably the auto-generated wrapper will handle this?\r\n\r\nI don\u0027t think the XUnit wrappers deal with timeouts and dumps by themselves, the last time I looked they were just plain process launches marked with the [Fact] attributes; any timeout / dump logic must be handled either by the XUnit console or by the test app itself. In this sense introducing a new form of wrapper for the merged tests shouldn\u0027t incur any fundamental regression of its own even though you\u0027re certainly right that timeouts and such might need further tweaks. For dumps I would expect that the dump of the merged test app should be equally usable for failure investigations as dumps for single-test apps.\r\n\r\n\u003e Will test exclusions work the same as today? There are some per-test conditional exclusion attributes in the proj files, e.g., IlasmRoundTripIncompatible, GCStressIncompatible, UnloadabilityIncompatible. How do these get \"attached\" to the test? I think today these get baked into the wrapper cmd file. Do we partition tests into sets with precisely the same set of proj file attributes?\r\n\r\nFor some test project attributes we definitely do need to split differing tests, most notably for the DebugType and Optimize attributes heavily used by JIT tests. For the other properties, frankly I don\u0027t know yet. As I explained above, I can imagine that some of these tests remain running in the \u003ccode\u003eSTANDALONE\u003c/code\u003e mode; gradual incorporation of these special test modes (aimed at further perf improvements and Helix optimization) would probably require adding support for them to the wrapper generator e.g. by means of conditional statements around the individual test case executions.\r\n\r\n\u003e Will the existing issues.targets file exclusion mechanism still be used? Similarly, how will tests get marked Pri-0 versus Pri-1?\r\n\r\nFor now I expect that both issues.targets and P0 / P1 split will remain in place. I am somewhat hopeful that perhaps the optimized execution thanks to grouping may make the tests so much more performant that we\u0027ll be able to get rid of the P0 / P1 distinction or perhaps separate out just a few long running tests and run all the rest on PR / CI runs. I\u0027m not yet 100% sure this is realistic but I believe it would be a substantial boost for our code quality monitoring. I believe longer-term discussions about upsides and downsides of issues.targets and its possible replacements are healthy but far beyond the scope of this particular proposal that is already quite complicated.\r\n\r\n\u003e Where is the test run parallelism going to live? In the (generated) test wrapper program?\r\n\r\nThat is an interesting question. I hope not. Higher up the thread I and JanK had somewhat different opinions about the expected final number of merged apps where IIRC I proposed several hundred and JanK several dozens; we have yet to identify the sweet spot but \"my\" guess (let\u0027s say 400 wrappers) corresponds to something like 25 tests per wrapper in P1 mode and 6 tests per wrapper in P0 mode while \"JanK\u0027s\" guess (let\u0027s say 40 wrappers) corresponds to about 250 tests per wrapper in P1 mode and 60 tests per wrapper in P0 mode. Assuming the sweet spot is somewhere between these two, there\u0027s still a lot of wrappers to run so that\u0027s where I\u0027d expect the parallelism to occur. Ideally I\u0027d love to initially run the new wrappers using the existing xunit console but I\u0027m not 100% sure that is doable, maybe we\u0027ll need some new runner that will just use the xunit console for the legacy wrappers, so that would be the place for the parallelism but I wouldn\u0027t expect it to be much more complicated than when, for instance, R2RTest compiles the framework assemblies using Crossgen2 in parallel during the population of CORE_ROOT.\r\n\r\n\u003e If the test annotations look like xunit, could you actually use xunit to run the tests (if you wanted to?)\r\n\r\nThat would be just perfect, I think that even if we don\u0027t manage to make this work now, we shouldn\u0027t make any design decisions that would prevent implementing this in the future.\r\n\r\nFor your example with the STANDALONE conditional compilation, I\u0027m somewhat worried that this additional bit, while mostly boilerplate code, is incurring an authoring (and to some extent maintenance) cost on every single test; after all, if we spend so much energy pretending that our test cases are \"dotnet test\"-runnable even though the actual underlying infrastructure will likely be different for performance reasons, those also don\u0027t have an \u003ccode\u003e#if STANDALONE\u003c/code\u003e Main method.\r\n\r\nMy current thinking is that the wrapper generation needs to be a three step process.\r\n\r\n* In the first step we traverse the test tree and obtain metadata about the test projects and [Fact] methods; for C# tests we can implement a Roslyn analyzer for this purpose, for ILPROJ tests we\u0027ll either need a custom IL source analyzer or we\u0027ll just compile the tests using ILASM and analyze the output MSIL (ending up with something like \"compile-time reflection on the [Fact] attribute\"). In both cases we basically end up with a list of all the available test projects, methods representing their test cases and additional info about the project files (test priority, DebugType / Optimize flags and possibly additional properties). Ideally we should materialize this list somewhere in the build outputs, possibly as a JSON or XML file, and publish it as an artifact to be available for investigation of issues with the new infra.\r\n\r\n* In the second step we use the list obtained in the first step to actually partition tests into the grouped apps using the collected metadata; exact behavior of this step may be controllable by additional options like the abovementioned no-merge mode, limits for the number of merged tests per OS / architecture / stress mode etc. Again, the generated test grouping should be materialized and published as a JSON / XML metadata file.\r\n\r\n* In the third step we actually emit the new wrappers and cmd / sh scripts for running them; in some cases like the GC stress environment variables, we should be easily able to set these variables globally at the top of the scripts much like we do in today cmd / sh test execution scripts. In fact, while I have yet to verify if this is actually doable, we may be able to generate these scripts using exactly the same code we\u0027re using for generating the individual test runner scripts today - in other words, at some level in the test build infra we\u0027d basically pretend that the generated wrappers are just additional tests to build and run albeit with somewhat special properties. For C# test projects this step could be probably implemented as a Roslyn source generator in accordance with JanK\u0027s suggestion, I however doubt that\u0027s doable for ILPROJ tests so for now I\u0027m thinking about just using the Roslyn analyzers for collection of the primary test metadata and using some common but custom tooling to emit the wrappers for both categories of tests.",
                                           "updatedAt":  "2021-10-20T20:17:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44ga46",
                                           "createdAt":  "2021-10-20T20:44:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "Thanks, @trylek ! I suggested the `STANDALONE Main` option as a way to achieve the JIT goal of having the absolute minimum amount of JIT-ing before a test case is actually run, so, not even run the generated wrapper `Main`, which I anticipate could be quite large.\r\n\r\nLooking forward to seeing how this all progesses.",
                                           "updatedAt":  "2021-10-20T20:44:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44gjJv",
                                           "createdAt":  "2021-10-20T21:39:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB_TVQA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "jkotas",
                                                                               "createdAt":  "2021-10-20T23:26:24Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2021-10-21T10:58:42Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "akoeplinger",
                                                                               "createdAt":  "2021-10-21T15:37:21Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "I have a slightly different proposal for how to organize the test system that (at least to me) feels lighter weight than @trylek\u0027s proposal:\r\n\r\n## Proposal\r\n\r\n1. Convert each C#/IL source file to use XUnit-style `[Fact]` attributes for each test method.\r\n2. For platform-specific disable mechanisms, use the attributes defined in the `Microsoft.DotNet.XUnitExtensions` package (widely used by the libraries team) to disable tests, either with special traits (for general cases like `GCStressIncompatible` or `JitStressIncompatible`), or with mechanisms similar to the `PlatformDetection` type and `ConditionalFact`/`ConditionalTheory` in the libraries test tree.\r\n3. For assembly-wide problems like `CrossgenIncompatible` or `IlasmRoundTripIncompatible`, we would use assembly attributes to annotate the incompatibilities.\r\n4. All `issues.targets` test disable mechanisms should move to follow the same mechanism as the libraries tests with `[ActiveIssue]` attributes and the like.\r\n\r\nAt this point, we will still have all of the test assemblies as they exist today, but all tests have been changed to use XUnit-style attributes. As a result, we will automatically have the support for the Optimized/Release/Debug combinations that the JIT team uses. Now we need to define how the runner will work:\r\n\r\nThe runner will be a regular C# project with hard-coded (possibly with MSBuild item globs) ProjectReferences to each test library. The runner project itself will be entirely (or almost entirely) source generated using a Roslyn source generator that follows the following model:\r\n\r\n1. For each MetadataReference (or ProjectReference in MSBuild terms), discover every public method of every public class that has an XUnit test attribute (Fact/Theory/ConditionalFact/ConditionalTheory, etc.)\r\n2. Discover each method in the current assembly marked with an XUnit test attribute\r\n3. Manually generate code to validate that the test should run (ie. the ConditionalFact/ConditionalTheory/ActiveIssue scenario), using the Roslyn APIs to generate direct calls to the different properties instead of using reflection.\r\n\r\nAs the runner itself is defined in C#, we don\u0027t need to do any post-processing of IL assemblies produced from ilproj projects.\r\n\r\nFrom this point onwards, there would be at least 2 modes for the generated code to support:\r\n\r\n- Standalone-test mode: Emit a `Main` method that calls all XUnit-attributed methods directly, checking any conditional states (in many cases, a simple `if` statement like \"is Windows?\") before calling a method . This mode does not have support for test filtering on name or for trait filtering, and would satisfy the JIT team\u0027s request to be able to run test assemblies individually similar to today.\r\n- Full harness mode: Emit a `Main` method that supports test filtering based on test name, trait filtering based on trait names, and checking any conditional states. This mode would be the primary use case for CI, and the mode that the new runner project would use.\r\n\r\nThere would be a post-build step to analyze each assembly in the output. This step would be used to determine which files are eligible for crossgen2/ilasm roundtrip testing. This analysis step would spit out an rsp file for each scenario where each line in the file is the name of an assembly file that supports the test scenario. Then the crossgen/ilasm round trip pre-test steps would be driven by external scripts that we call into and pass the rsp file. Once Roslyn supports generating non-source files from a source generator, these rsp files can be generated by the source generator instead of a post-build step.\r\n\r\nTo handle setting stress environment variables, we would use CoreRun\u0027s new dotenv file support. All of the `COMPlus_` environment variables will be set through a dotenv file, which we will directly pass to corerun.\r\n\r\nAt this point, we will only generate the .cmd/.sh scripts by default for the new XUnit harness projects. These .cmd/.sh files should be able to handle all of our use cases with the above design.\r\n\r\n## Standalone test support\r\n\r\nTo enable running standalone tests as we do today, we would update the build system to support a `BuildAsStandalone=true` MSBuild property. When set, this property would cause a test assembly to reference the \"harness generator\" in the aformentioned \"Standalone-test mode\" and to have the rsp, cmd, and sh scripts generated for the harness. This should cleanly support the JIT team\u0027s scenario of \"minimal IL ran before a test\" for dev innerloop scenarios.\r\n\r\nTo support this in il-scenarios, we will need to use a different mechanism. One option would be to have a simple \"repro\" project similar to the \"DllImportGeneratorSample\" project that enables quickly reproducing test failures by providing a simple project that can be changed to call whatever test is required.\r\n\r\n## Out-of-Proc tests\r\n\r\nWith this basic model, out-of-proc tests will require manually writing `[Fact]`-attributed methods that will use `RemoteExecutor` or a similar mechanism to support out-of-process tests. If we feel that this is not a good design, we could add support for an `OutOfProcFact` attribute that the source generator would recognize and automatically write the code to execute the test out-of-proc.\r\n\r\n## dotnet test support\r\n\r\nIf we decide that support for `dotnet test` is interesting, we can add another mode of the generator to output a VSTest-adapter implementation that is hard-coded to the tests that are available in the harness. This would enable easier execution in a VS/VSCode scenario, and would be an optional scenario for people who like to run tests directly. As `dotnet test` has built-in dump support, this might be a useful mechanism to get automatic dump reporting with timeouts without a wrapper project.\r\n",
                                           "updatedAt":  "2021-10-20T21:39:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44jnjh",
                                           "createdAt":  "2021-10-21T17:46:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "Hi Jeremy!\r\n\r\nThanks for your detailed feedback. I believe your \"modified proposal\" has many interesting characteristics we should use. More detailed comments follow:\r\n\r\n\u003e All issues.targets test disable mechanisms should move to follow the same mechanism as the libraries tests with [ActiveIssue] attributes and the like.\r\n\r\nI like better aligning runtime tests with library tests. I just think that refactoring of issues.targets is more or less orthogonal to the test grouping and so we can treat it as an optional step - if we don\u0027t have enough time to get everything done, this can wait for a later cleanup step. The file has 3K lines i.e. about 1K excludes many of which don\u0027t have issues assigned, I would say it\u0027s at least a week of work provided you can somehow automate the conversion, doing this manually would take a month and be terribly error prone.\r\n\r\n\u003e The runner will be a regular C# project with hard-coded (possibly with MSBuild item globs) ProjectReferences to each test library.\r\n\r\nThis basically means that each test would continue compiling using a separate Roslyn execution into a separate library, I believe higher up this thread JanK called that out as wasteful compared to one big compilation.\r\n\r\n\u003e The runner project itself will be entirely (or almost entirely) source generated using a Roslyn source generator\r\n\r\nI don\u0027t think we can use the Roslyn analyzers for IL source code in ILPROJ tests (there are about 4K such tests in the tree i.o.w. about 40%, just to point out they\u0027re not a tiny fraction of the test set); for these we need to figure out something else. Apart from removing the entrypoint, renaming the Main method and marking it with the Fact attribute, there\u0027s one more transformation that needs to be made in many of the ilproj tests:\r\n\r\nThe class in which Main resides is often internal and making it public sometimes has annoying ripple effects making the transformation complicated. I think that the easiest way to fix this is to add one more public static class to the bottom of the file with the new public method that would then call the pre-existing internal Main. Using this transformation we could also standardize the naming of the test method in ilproj tests - e.g. having it the same as the name of the test provided we clean them up to be unique across the tree (I think they mostly are already) - with the caveat that this would prevent having multiple test cases in a single IL source file (which is not a regression, we don\u0027t have this option today); generating code to call these test entrypoints would then become trivial.\r\n\r\nFor resolving OS, platform and runtime flavor-incompatible tests we need to keep in mind that in the PR pipeline the managed tests are compiled only once for all combinations and it\u0027s just the test wrapper creation that today takes place in the run phase that resolves issues.targets entries pertinent to the targeting platform and filters out the disabled tests. I may be missing some fine points in your plan but the idea about the wrapper project having ProjectReferences to all the tests either means that we\u0027d need to move managed test build to the run phase (i.e. ultimately execute it 30 times instead of once) or that we\u0027d need to generate dynamic code in the wrapper that would perform the relevant checks on the Helix client at runtime.\r\n\r\nFor the \"Standalone test support\", am I right to understand you\u0027re proposing to basically emit a separate wrapper for each test? While certainly doable that would inject 10K extra C# sources (albeit tiny ones) to the build, I\u0027m not sure about perf implications of this. For one-off local experiments with individual tests it probably shouldn\u0027t matter but if we wanted to retain standalone tests in some lab pipelines (e.g. stress ones where the tests are timing out already without merging), we\u0027d need to measure the perf implications.\r\n\r\nFor \"Dotnet test support\", that sounds great to me overall; similar to my comments regarding \"issues.targets\" I think that for now it\u0027s sufficient to know that the planned transformation makes this doable and actually doing that can wait for later if at some point we\u0027re out of time budget for the infra revamp.\r\n\r\nApart from these comments and clarifying questions, your proposal (I\u0027m not sure if I should call it a counterproposal as I believe that we agree in many aspects and rest is mostly clarifying technical details) sounds great to me and I\u0027ll be happy to work with you on fleshing out its remaining details so that we can start the actual work ASAP.\r\n\r\nThanks\r\n\r\nTomas",
                                           "updatedAt":  "2021-10-21T17:46:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44jqSh",
                                           "createdAt":  "2021-10-21T18:01:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "\u003e Hi Jeremy!\r\n\u003e \r\n\u003e Thanks for your detailed feedback. I believe your \"modified proposal\" has many interesting characteristics we should use. More detailed comments follow:\r\n\u003e \r\n\u003e \u003e All issues.targets test disable mechanisms should move to follow the same mechanism as the libraries tests with [ActiveIssue] attributes and the like.\r\n\u003e \r\n\u003e I like better aligning runtime tests with library tests. I just think that refactoring of issues.targets is more or less orthogonal to the test grouping and so we can treat it as an optional step - if we don\u0027t have enough time to get everything done, this can wait for a later cleanup step. The file has 3K lines i.e. about 1K excludes many of which don\u0027t have issues assigned, I would say it\u0027s at least a week of work provided you can somehow automate the conversion, doing this manually would take a month and be terribly error prone.\r\n\r\nYes, we could push this work off until a later date if needed.\r\n\r\n\u003e \u003e The runner will be a regular C# project with hard-coded (possibly with MSBuild item globs) ProjectReferences to each test library.\r\n\u003e \r\n\u003e This basically means that each test would continue compiling using a separate Roslyn execution into a separate library, I believe higher up this thread JanK called that out as wasteful compared to one big compilation.\r\n\r\nThis was meant to be in alignment with your suggested approach. Alternatively. we can combine many tests into a single assembly since my generator suggestion also looks in the current assembly to generate the test execution calls.\r\n\r\n\u003e \u003e The runner project itself will be entirely (or almost entirely) source generated using a Roslyn source generator\r\n\u003e \r\n\u003e I don\u0027t think we can use the Roslyn analyzers for IL source code in ILPROJ tests (there are about 4K such tests in the tree i.o.w. about 40%, just to point out they\u0027re not a tiny fraction of the test set); for these we need to figure out something else. Apart from removing the entrypoint, renaming the Main method and marking it with the Fact attribute, there\u0027s one more transformation that needs to be made in many of the ilproj tests:\r\n\u003e \r\n\u003e The class in which Main resides is often internal and making it public sometimes has annoying ripple effects making the transformation complicated. I think that the easiest way to fix this is to add one more public static class to the bottom of the file with the new public method that would then call the pre-existing internal Main. Using this transformation we could also standardize the naming of the test method in ilproj tests - e.g. having it the same as the name of the test provided we clean them up to be unique across the tree (I think they mostly are already) - with the caveat that this would prevent having multiple test cases in a single IL source file (which is not a regression, we don\u0027t have this option today); generating code to call these test entrypoints would then become trivial.\r\n\r\nIf we use a C# assembly to be the test runner to wrap the IL tests, we can use the Roslyn source generator/analyzer APIs on the C# runner and have that runner call the assemblies that were compiled from ilproj projects. As mentioned in the standalone case, having a \"directly execute the IL assembly without calling though any C#\" mechanism would require some additional (likely manual in v1) work on the part of the developer who wants to run an IL test individually.\r\n\r\n\u003e For resolving OS, platform and runtime flavor-incompatible tests we need to keep in mind that in the PR pipeline the managed tests are compiled only once for all combinations and it\u0027s just the test wrapper creation that today takes place in the run phase that resolves issues.targets entries pertinent to the targeting platform and filters out the disabled tests. I may be missing some fine points in your plan but the idea about the wrapper project having ProjectReferences to all the tests either means that we\u0027d need to move managed test build to the run phase (i.e. ultimately execute it 30 times instead of once) or that we\u0027d need to generate dynamic code in the wrapper that would perform the relevant checks on the Helix client at runtime.\r\n\r\nMy suggestion would be to generate dynamic code in the wrapper to perform the relevant checks and to keep our managed build to one platform, at least for v1. If we eventually merge the many test assemblies (as mentioned above) and get to a relatively quick managed test build, it might be worthwhile to build the managed tests in multiple legs and pre-resolve some of the OS/platform/runtime-flavor/arch checks.\r\n\r\nThis would make our \"test run\" phase only have to copy the native bits to the right locations and run the tests, which would help simplify those steps as well.\r\n\r\n\u003e For the \"Standalone test support\", am I right to understand you\u0027re proposing to basically emit a separate wrapper for each test? While certainly doable that would inject 10K extra C# sources (albeit tiny ones) to the build, I\u0027m not sure about perf implications of this. For one-off local experiments with individual tests it probably shouldn\u0027t matter but if we wanted to retain standalone tests in some lab pipelines (e.g. stress ones where the tests are timing out already without merging), we\u0027d need to measure the perf implications.\r\n\r\nFor the \"Standalone test support\" case, that is an opt-in scenario where a developer would build an individual test in that mode (using something like `./dotnet build src/tests/path/to/test.csproj /p:BuildAsStandalone=true`, which is a slight modification of a common workflow within at least the Interop team). This would be off by default, so we wouldn\u0027t be injecting any extra sources into the build.\r\n\r\nYou are correct that this may have some implications in the lab, but in those cases we\u0027d be generating all of the small source files instead of (though the same if not more involved calculations) generating the larger wrappers. Doing a perf investigation sounds reasonable to me.\r\n\r\n\u003e For \"Dotnet test support\", that sounds great to me overall; similar to my comments regarding \"issues.targets\" I think that for now it\u0027s sufficient to know that the planned transformation makes this doable and actually doing that can wait for later if at some point we\u0027re out of time budget for the infra revamp.\r\n\r\nYes, this is definitely a stretch goal and is not required for v1.\r\n\r\n\u003e Apart from these comments and clarifying questions, your proposal (I\u0027m not sure if I should call it a counterproposal as I believe that we agree in many aspects and rest is mostly clarifying technical details) sounds great to me and I\u0027ll be happy to work with you on fleshing out its remaining details so that we can start the actual work ASAP.\r\n\u003e \r\n\r\nI\u0027m looking forward to working together on this project! 😁\r\n",
                                           "updatedAt":  "2021-10-21T18:01:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44jwIH",
                                           "createdAt":  "2021-10-21T18:33:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e The class in which Main resides is often internal and making it public sometimes has annoying ripple effects making the transformation complicated.\r\n\r\nWhat are the ripple effects that you are worried about? I would expect it to be extremely rare in src/tests.\r\n\r\n\u003e \u003e issues.targets \r\n\r\n\u003e Yes, we could push this work off until a later date if needed.\r\n\r\nIf we push this work off until a later data, how are the tests going be disabled in the meantime? Is the source generator going to read issues.targets somehow?",
                                           "updatedAt":  "2021-10-21T18:33:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44kJHL",
                                           "createdAt":  "2021-10-21T21:00:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "@jkotas - Hmm, in my summer experiment it looked like making the method and class public often made additional fields or classes start complaining about inconsistent visibility. I tried now to make all Main methods in our \u003ccode\u003e.il\u003c/code\u003e source files public (not the classes for now) and the Pri1 test build passed so hopefully I was just doing something wrong. One way or another, having a consistent scheme for marking the test entrypoint[s] in ilproj tests might be beneficial in the absence of Roslyn analyzer capabilities.\r\n\r\nIf we push off issues.targets refactoring, I think the easiest thing we could do in the run legs would be to just emit the list of project exclusions into some text file that would be then read by the test wrapper in Helix and used for test filtering, that should be relatively trivial as the test build already has this information readily available.",
                                           "updatedAt":  "2021-10-21T21:00:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44kLjh",
                                           "createdAt":  "2021-10-21T21:14:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "Another option for a half-step for issues.targets would be to run it through a mechanical transform into a set of exclusions that point at either the `.dll` or the `.csproj` files (which shouldn\u0027t be too difficult, we\u0027ve generally followed the same pattern for writing all of the exclusions over the years). Then we could do the text file as @trylek mentioned. Alternatively, if we decide we still want to build the test wrappers per-target, we could have the transformed `issues.targets` file instead point to the `.csproj` files that should be excluded from the ProjectReference collection.\r\n\r\nWe have a few different options here that we can try out if the cost of generating the ActiveIssue attributes is too high.",
                                           "updatedAt":  "2021-10-21T21:14:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44kMrd",
                                           "createdAt":  "2021-10-21T21:22:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "@jkoritzinsky - I think we\u0027re mostly on the same page, comments on some of the remaining bits requiring further work:\r\n\r\n* For the ilproj tests I\u0027m still not sure if we\u0027re in agreement. You say that *If we use a C# assembly to be the test runner to wrap the IL tests, we can use the Roslyn source generator/analyzer APIs on the C# runner and have that runner call the assemblies that were compiled from ilproj projects*; I generally agree with that but I think the problematic point is how exactly you \"call the assemblies that were compiled from ilproj projects\". If you add support for merging C# code of multiple tests into a single assembly, you basically need to skip their own C# compilation step (as that will happen as part of the larger merged build). In other words, the wrapper needs generating before or instead of the managed test build. [By the \"before\" variant I mean that the wrapper is somehow injected into the test list, the \"subtests\" themselves get skipped in the compilation and the wrapper takes the normal \"managed test build\" path including creation of the cmd / sh runners using the existing scripts.] It is then the question how the wrapper build locates the ilproj test entrypoints. If it was to look at the ILASM-produced MSIL, we\u0027d need to compile ilproj tests before the csproj tests to achieve the proper ordering; alternatively it must either carry out some manual analysis of the IL source code or count on standardized test entrypoint naming.\r\n\r\n* I agree with generating dynamic code using runtime checks and seeing whether at some later point we may be able to make managed test build so fast that it can be put back in the run legs, thus enabling better test and test artifact pruning before sending the run to Helix.\r\n\r\n* For the \"standalone mode\", I think we might actually want to start with that one - implementing something very simple to just allow running the \"dotnet test\"-style refactored tests one by one; that would be sufficient for fanning out the test refactoring work to the different teams in early November; in parallel we could dive deeper into the test merging / splitting logic. One other interesting bit that occurred to me in relationship with JanK\u0027s issues.targets question is that according to our earlier discussions with the Mono team it would be helpful to have a more dynamic test grouping based on the targeting platform - the browser WASM interpreter, the various Android emulators and such just have different perf and memory characteristics so it would be nice to introduce new degrees of freedom there. If we implemented logic in the generated wrappers (or rather probably in some of their dependencies) to use some emitted test list as the \"block-list\", we could likely similarly support some \"allow-list\". The run leg in AzDO could then generate a series of such lists representing the test splitting based on the target and use it to drive the Helix runs.\r\n\r\nI don\u0027t think I have any other concerns with your suggestions. I have locally refactored my summer experiment into a tool I\u0027m now using to analyze and rewrite the ilproj tests, my hope is to provide it to the JIT team and to the TypeLoader team (which is actually most likely ours) to use for semi-automatic conversion of these tests. I\u0027m also trying to use it to prototype merged execution of a large number of the ilproj tests to let me provide an initial estimate of the expected savings for Jeff. Please let me know if you have cycles to actually participate in the implementation work here; technically speaking I\u0027m OOF for the second half of next week as I\u0027m using our state holiday next Thursday for a prolonged weekend in the country with friends. Based on our finalized design I can start some scripting / coding work early next week and if you could contribute in its second half, we might have something good enough for fanning out the conversion in the week of November 1st which is what I promised to Jeff on Monday and I still believe is doable.\r\n\r\n",
                                           "updatedAt":  "2021-10-21T21:22:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44kPvc",
                                           "createdAt":  "2021-10-21T21:42:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "\u003e I think we\u0027re mostly on the same page, comments on some of the remaining bits requiring further work:\r\n\u003e \r\n\u003e * For the ilproj tests I\u0027m still not sure if we\u0027re in agreement. You say that _If we use a C# assembly to be the test runner to wrap the IL tests, we can use the Roslyn source generator/analyzer APIs on the C# runner and have that runner call the assemblies that were compiled from ilproj projects_; I generally agree with that but I think the problematic point is how exactly you \"call the assemblies that were compiled from ilproj projects\". If you add support for merging C# code of multiple tests into a single assembly, you basically need to skip their own C# compilation step (as that will happen as part of the larger merged build). In other words, the wrapper needs generating before or instead of the managed test build. [By the \"before\" variant I mean that the wrapper is somehow injected into the test list, the \"subtests\" themselves get skipped in the compilation and the wrapper takes the normal \"managed test build\" path including creation of the cmd / sh runners using the existing scripts.] It is then the question how the wrapper build locates the ilproj test entrypoints. If it was to look at the ILASM-produced MSIL, we\u0027d need to compile ilproj tests before the csproj tests to achieve the proper ordering; alternatively it must either carry out some manual analysis of the IL source code or count on standardized test entrypoint naming.\r\n\r\nMy idea is that the wrapper build will reference all test assemblies it includes with a regular `\u003cProjectReference\u003e` element in the test wrapper\u0027s csproj file. When implemented in this manner, it doesn\u0027t matter if the assembly that actually defines the test is written in C# or in IL since the test wrapper project will inspect it as a .NET assembly reference (which does not disambiguate between the two). The test discovery process would be \"look for all accessible methods with XUnit test attributes on them in this project\u0027s source and in all referenced assemblies\", which would include the IL assemblies. As we move more in the direction of merging test suites together, we would move some of the C# tests into the wrapper project itself. For the IL tests, we would start merging them into a single IL assembly, but the runner would still be a separate C# test project.\r\n\r\n\u003e * I agree with generating dynamic code using runtime checks and seeing whether at some later point we may be able to make managed test build so fast that it can be put back in the run legs, thus enabling better test and test artifact pruning before sending the run to Helix.\r\n\r\n:+1:\r\n\r\n\u003e * For the \"standalone mode\", I think we might actually want to start with that one - implementing something very simple to just allow running the \"dotnet test\"-style refactored tests one by one; that would be sufficient for fanning out the test refactoring work to the different teams in early November; in parallel we could dive deeper into the test merging / splitting logic.\r\n\r\nYes, we could start with the standalone mode as it requires less features and would provide a comparable experience to the current test system as tests move to use the XUnit attributes.\r\n\r\n\u003e One other interesting bit that occurred to me in relationship with JanK\u0027s issues.targets question is that according to our earlier discussions with the Mono team it would be helpful to have a more dynamic test grouping based on the targeting platform - the browser WASM interpreter, the various Android emulators and such just have different perf and memory characteristics so it would be nice to introduce new degrees of freedom there. If we implemented logic in the generated wrappers (or rather probably in some of their dependencies) to use some emitted test list as the \"block-list\", we could likely similarly support some \"allow-list\". The run leg in AzDO could then generate a series of such lists representing the test splitting based on the target and use it to drive the Helix runs.\r\n\r\nWe could either use a model similar to the `PlatformDetection` model that the libraries team uses, or we could use XUnit `Trait`s to implement more fine-grained control that the owners of different legs could enable or disable at their preference (allowing both \"block-list\" and \"allow-list\" behavior). If we wanted to do more of a load-balancing thing to better size our work items, then I agree, using a list of tests might be a better option.\r\n\r\n\u003e \r\n\u003e I don\u0027t think I have any other concerns with your suggestions. I have locally refactored my summer experiment into a tool I\u0027m now using to analyze and rewrite the ilproj tests, my hope is to provide it to the JIT team and to the TypeLoader team (which is actually most likely ours) to use for semi-automatic conversion of these tests. I\u0027m also trying to use it to prototype merged execution of a large number of the ilproj tests to let me provide an initial estimate of the expected savings for Jeff. Please let me know if you have cycles to actually participate in the implementation work here; technically speaking I\u0027m OOF for the second half of next week as I\u0027m using our state holiday next Thursday for a prolonged weekend in the country with friends. Based on our finalized design I can start some scripting / coding work early next week and if you could contribute in its second half, we might have something good enough for fanning out the conversion in the week of November 1st which is what I promised to Jeff on Monday and I still believe is doable.\r\n\r\nI believe I\u0027ll have cycles to work on this next week. For later weeks, I should still have time to work on the Roslyn source generator for test execution (I\u0027ve gotten quite familiar with the workflow for source generators with the DllImportGenerator project).",
                                           "updatedAt":  "2021-10-21T21:42:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44kQo1",
                                           "createdAt":  "2021-10-21T21:50:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB_W6Gg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkoritzinsky",
                                                                               "createdAt":  "2021-10-21T21:52:40Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e One other interesting bit that occurred to me in relationship with JanK\u0027s issues.targets question is that according to our earlier discussions with the Mono team it would be helpful to have a more dynamic test grouping based on the targeting platform - the browser WASM interpreter, the various Android emulators and such just have different perf and memory characteristics so it would be nice to introduce new degrees of freedom there.\r\n\r\nWhat is the estimate for the largest group size that still works everywhere? I would expect that groups of several hundred of average C# tests should be fine in any environment.\r\n\r\nIt would be best to stick with hardcoded logical groups to keep things simple.",
                                           "updatedAt":  "2021-10-21T21:50:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44kRAk",
                                           "createdAt":  "2021-10-21T21:53:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "@fanyang-mono / @naricc, can you please respond to JanK\u0027s question? I don\u0027t have sufficient experience in this space.",
                                           "updatedAt":  "2021-10-21T21:53:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44kVfN",
                                           "createdAt":  "2021-10-21T22:27:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "OK, so let\u0027s say there\u0027s a v0 comprising the standalone runner so that we can start gradually merging in PR\u0027s switching over the individual tests to xUnit style. I believe the next step is to define what exactly that entails:\r\n\r\n* As a first iteration (before it\u0027s proven unworkable) I propose marking the new-style tests as \u003ccode\u003eCLRTestKind=BuildAndRun\u003c/code\u003e and \u003ccode\u003eOutputType=Library\u003c/code\u003e. Please let me know if you see off the top of your head that won\u0027t work.\r\n\r\n* For now I assume that we switch over all the tests to have some int Entrypoint(string[]), that\u0027s what I\u0027m experimenting with with regard to the ilproj tests anyway. Let me know if you have other suggestions.\r\n\r\n* The Entrypoint will be marked with the [Fact] attribute. We need to tweak the props or whatever other files to make the XUnit attributes available for each test build.\r\n\r\nWhat exactly will the test wrapper generate for each test and how it\u0027s going to be used in the cmd / sh runner scripts?\r\n\r\n* We can emit a three-line C# wrapper next to each test implementing the Main method by calling into the [Fact] method in the test assembly. We may need to emit a new test project comprising the generated wrapper and the ProjectReference to the original project however that\u0027s going to incur one extra Roslyn compilation and one extra assembly load at runtime for each test i.e. some perf degradation. We may be able to justify this in the broader context of the regression being just temporary, in fact we\u0027ll likely improve the grouping and perf in parallel with the test transformation process so the gradual improvements may cancel out the temporary regressions.\r\n\r\n* We can emit the wrapper directly as the MSIL EXE using the System.Reflection.Metadata API, it\u0027s literally a three-line method (ldarg.0, call, ret). This would likely get rid of the additional Roslyn costs and potential ordering issues regarding the managed build but the additional assembly load at runtime would remain.\r\n\r\n* We can emit the wrapper project as a union of the original project and the generated wrapper source file thus pioneering the merged test execution to some extent. That would get rid of most of the extra Roslyn cost and likely of all the runtime costs.\r\n\r\nAnother interesting question is how to incorporate the actual build of these wrappers into the test build pipeline. I believe that my recent work on cleaning up the test build scripts has given us a solid cross-plat foundation we can inject the new work into.\r\n\r\n* At is seems likely we\u0027ll need to generate new test projects, at some place we\u0027ll probably need to replace the original projects with the transformed projects.\r\n\r\n* On the one hand I think it would be great if we could delegate most of the cmd / sh runner logic for the wrappers to the existing \u003ccode\u003esrc/tests/Common/CLRTest.*.targets\u003c/code\u003e scripts (just to avoid additional extra work in reimplementing all of those) but there\u0027s a nesting bit I don\u0027t see how to resolve - I think that the \"new wrappers\" cannot go through the pre-existing xUnit console logic because they emit \"their xUnit results xml\" in a different manner; please let me know if you believe we might be able to consolidate these somehow at least in the short term, I think that in a way it would be much simpler if we could start off with something like \"add-ons to the existing xUnit wrappers\" rather than a completely new beast requiring immediate adjustments to various parts of the infra.\r\n\r\n* As I mentioned before, if we want to locate the [Fact] attributes on ILPROJ assemblies via Roslyn analyzer i.o.w. probably some incarnation of PEReader, we need to sequence building the wrappers after building the primary source code (in this case building the IL source code using ILASM into the MSIL DLLs). That would however make it more challenging to reuse the existing managed test logic build to generate the cmd / sh scripts. We need to decide whether there\u0027s real value in pretending the wrappers to be tests themselves in the test build sense vs. whether we want to build them separately and likewise separately generate their cmd / sh runner scripts vs. whether we want to build them in a separate phase but try to hijack the existing cmd / sh runner script generators to do their job.\r\n\r\n\r\n",
                                           "updatedAt":  "2021-10-21T22:40:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44kW5v",
                                           "createdAt":  "2021-10-21T22:41:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB_XPIQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkotas",
                                                                               "createdAt":  "2021-10-21T22:44:37Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "\u003e OK, so let\u0027s say there\u0027s a v0 comprising the standalone runner so that we can start gradually merging in PR\u0027s switching over the individual tests to xUnit style. I believe the next step is to define what exactly that entails:\r\n\u003e \r\n\u003e * As a first iteration (before it\u0027s proven unworkable) I propose marking the new-style tests as `CLRTestKind=BuildAndRun` and `OutputType=Library`. Please let me know if you see off the top of your head that won\u0027t work.\r\n\u003e * For now I assume that we switch over all the tests to have some int Entrypoint(string[]), that\u0027s what I\u0027m experimenting with with regard to the ilproj tests anyway. Let me know if you have other suggestions.\r\n\u003e * The Entrypoint will be marked with the [Fact] attribute. We need to tweak the props or whatever other files to make the XUnit attributes available for each test build.\r\n\r\nI think we should mark them as `CLRTestKind=BuildAndRun` (which is the default so it doesn\u0027t need to be specified) and `OutputType=Exe`. Naming the entrypoints `Entrypoint` makes sense, and for v0 we can special-case and allow the `int(string[])` signature, though we should move to a `void Entrypoint()` signature if possible.\r\n\r\n\u003e What exactly will the test wrapper generate for each test and how it\u0027s going to be used in the cmd / sh runner scripts?\r\n\u003e \r\n\u003e * We can emit a three-line C# wrapper next to each test implementing the Main method by calling into the [Fact] method in the test assembly. We may need to emit a new test project comprising the generated wrapper and the ProjectReference to the original project however that\u0027s going to incur one extra Roslyn compilation and one extra assembly load at runtime for each test i.e. some perf degradation. We may be able to justify this in the broader context of the regression being just temporary, in fact we\u0027ll likely improve the grouping and perf in parallel with the test transformation process so the gradual improvements may cancel out the temporary regressions.\r\n\u003e * We can emit the wrapper directly as the MSIL EXE using the System.Reflection.Metadata API, it\u0027s literally a three-line method (ldarg.0, call, ret). This would likely get rid of the additional Roslyn costs and potential ordering issues regarding the managed build but the additional assembly load at runtime would remain.\r\n\u003e * We can emit the wrapper project as a union of the original project and the generated wrapper source file thus pioneering the merged test execution to some extent. That would get rid of most of the extra Roslyn cost and likely of all the runtime costs.\r\n\r\nThe source generator would generate a `Main` method that would call every method marked with `[Fact]`, so making it an exe makes sense. This would effectively fall into something similar to option 3, where we make the test project runnable by generating a \"Main\" method for the test assembly.\r\n\r\nFor IL tests, we\u0027d still need to hard-code in the Main method. Maybe even just mark the Main method with the `[Fact]` attribute instead of re-writing the method name? That would enable the tests to just run as-is and automatically work when we start working on the new runners for the \"v1\" of this endeavor.\r\n\r\n\u003e Another interesting question is how to incorporate the actual build of these wrappers into the test build pipeline. I believe that my recent work on cleaning up the test build scripts has given us a solid cross-plat foundation we can inject the new work into.\r\n\u003e \r\n\u003e * At is seems likely we\u0027ll need to generate new test projects, at some place we\u0027ll probably need to replace the original projects with the transformed projects.\r\n\u003e * On the one hand I think it would be great if we could delegate most of the cmd / sh runner logic for the wrappers to the existing `src/tests/Common/CLRTest.*.targets` scripts (just to avoid additional extra work in reimplementing all of those) but there\u0027s a nesting bit I don\u0027t see how to resolve - I think that the \"new wrappers\" cannot go through the pre-existing xUnit console logic because they emit \"their xUnit results xml\" in a different manner; please let me know if you believe we might be consolidate these somehow at least in the short term, I think that in a way it would be much simpler if we could start off with something like \"add-ons to the existing xUnit wrappers\" rather than a completely new beast requiring immediate adjustments to various parts of the infra.\r\n\u003e * As I mentioned before, if we want to locate the [Fact] attributes on ILPROJ assemblies via Roslyn analyzer i.o.w. probably some incarnation of PEReader, we need to sequence building the wrappers after building the primary source code (in this case building the IL source code using ILASM into the MSIL DLLs). That would however make it more challenging to reuse the existing managed test logic build to generate the cmd / sh scripts. We need to decide whether there\u0027s real value in pretending the wrappers to be tests themselves in the test build sense vs. whether we want to build them separately and likewise separately generate their cmd / sh runner scripts vs. whether we want to build them in a separate phase but try to hijack the existing cmd / sh runner script generators to do their job.\r\n\r\nFor this v0 stage where we\u0027re transitioning to the new design, we don\u0027t even need to generate new test wrappers. The test behavior should be basically identical to the behavior today, as each project will still be an exe and will still run in the same manner is does today.\r\n",
                                           "updatedAt":  "2021-10-21T22:41:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44kXHs",
                                           "createdAt":  "2021-10-21T22:43:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB_XPNw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkoritzinsky",
                                                                               "createdAt":  "2021-10-21T22:44:52Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e Naming the entrypoints Entrypoint makes sense, and for v0 we can special-case and allow the int(string[]) signature, though we should move to a void Entrypoint() signature if possible.\r\n\r\nYes, it should be `void` and take no arguments to follow the XUnit conventions.\r\n\r\nNit: I would make it `static void Test()`. `Test` is what people tend to use for generic test entrypoint if there are no better options.",
                                           "updatedAt":  "2021-10-21T22:43:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44kYTs",
                                           "createdAt":  "2021-10-21T22:55:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "\u003e I think we should mark them as CLRTestKind=BuildAndRun (which is the default so it doesn\u0027t need to be specified) and OutputType=Exe. Naming the entrypoints Entrypoint makes sense, and for v0 we can special-case and allow the int(string[]) signature, though we should move to a void Entrypoint() signature if possible.\r\n\r\nWell, \u003ccode\u003eCLRTestKind=BuildAndRun\u003c/code\u003e and \u003ccode\u003eOutputType=Exe\u003c/code\u003e is what we have today. If we want to start refactoring tests to the new model, I would expect we also need to express it in the project file otherwise the msbuild infra will have a hard time identifying the types of individual tests.\r\n\r\n\u003e Yes, it should be void and take no arguments to follow the XUnit conventions. Nit: I would make it static void Test(). Test is what people tend to use for generic test entrypoint if there are no better options.\r\n\r\nToday we have a plethora of RunOnly tests that call other tests with variations of command-line arguments. How do we plan to implement those assuming we don\u0027t want to have test entrypoints with arguments?\r\n\r\n\u003e For IL tests, we\u0027d still need to hard-code in the Main method. Maybe even just mark the Main method with the [Fact] attribute instead of re-writing the method name? That would enable the tests to just run as-is and automatically work when we start working on the new runners for the \"v1\" of this endeavor.\r\n\r\nMarking the Main methods as [Fact] sounds interesting but will require some experimenting to see if everything actually works as expected - mind you, the Main method is also marked as an \u003ccode\u003e.entrypoint\u003c/code\u003e in IL that ends up encoded in the MSIL tables, I suspect some more rewriting will be necessary to make this smooth, perhaps there\u0027s no more to it than changing the existing Main into some [Fact]Test and emitting a new Main calling into it. If that\u0027s the design we agree on, we can trigger the conversion basically without any infra changes whatsoever, I was just somewhat reluctant to impose the new authoring cost of creating the pair of [Fact] method and Main method for each new ilproj test, on top of that I\u0027m not yet clear on how that\u0027s going to translate into the world of C# tests, are we also thinking about retaining some latent entry points in them to allow standalone execution? Do we know that the runtime can load the exes with entrypoints as libraries into the wrapper process without complaining?",
                                           "updatedAt":  "2021-10-21T22:57:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44kZsG",
                                           "createdAt":  "2021-10-21T23:08:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB_XYyA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkoritzinsky",
                                                                               "createdAt":  "2021-10-21T23:13:18Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e Today we have a plethora of RunOnly tests that call other tests with variations of command-line arguments\r\n\r\nWe have 55 of them. And almost all of them are API tests for `Interlocked.*` and `Thread.Start`. It may be best to just move them to live under libraries and not worry about them here.",
                                           "updatedAt":  "2021-10-21T23:08:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44kaKL",
                                           "createdAt":  "2021-10-21T23:12:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "Just to nitpick a bit, according to my fulltext search for \u003ccode\u003eCLRTestProjectToRun\u003c/code\u003e I see 484 tests in this category. I do agree it\u0027s still a 5% minority though.",
                                           "updatedAt":  "2021-10-21T23:12:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44kabS",
                                           "createdAt":  "2021-10-21T23:14:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "Hmm, I see now, apparently some of these tests are marked as BuildAndRun even though they rather should be in the RunOnly category, most notably the GCSimulator tests.",
                                           "updatedAt":  "2021-10-21T23:14:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44kak1",
                                           "createdAt":  "2021-10-21T23:15:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "In fact, one of the biggest values of each infra revamp is noticing these skeletons in the closet, just like we did in the runtime repo consolidation process.",
                                           "updatedAt":  "2021-10-21T23:16:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44katX",
                                           "createdAt":  "2021-10-21T23:16:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "\u003e Well, CLRTestKind=BuildAndRun and OutputType=Exe is what we have today. If we want to start refactoring tests to the new model, I would expect we also need to express it in the project file otherwise the msbuild infra will have a hard time identifying the types of individual tests.\r\n\r\nFor v0 of the new model, the \"move all the tests to the [Fact] model\" step, the existing xunit test wrapper msbuild infra doesn\u0027t need to differentiate between the two systems. The differentiation doesn\u0027t matter until we decide to start the next step of in-proc test execution using the source-generated runner, at which point we would change the OutputType to the default value of Library. ",
                                           "updatedAt":  "2021-10-21T23:16:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44kbAe",
                                           "createdAt":  "2021-10-21T23:18:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "OK, sounds good to me, in such case the next step is to take an ilproj and a csproj test and convert them to the new model demonstrating that everything works as expected. I can look into that tomorrow, I don\u0027t think I\u0027ll be able to do a lot before I call it a day for today.",
                                           "updatedAt":  "2021-10-21T23:18:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44kbcO",
                                           "createdAt":  "2021-10-21T23:22:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "Once we merge in the first csproj / ilproj conversion, we should produce some guidance doc we can subsequently present at next Monday\u0027s Jeff\u0027s backlog meeting to instruct the leads what to expect in the coming weeks.",
                                           "updatedAt":  "2021-10-21T23:22:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44kbxR",
                                           "createdAt":  "2021-10-21T23:25:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB_XnCQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "trylek",
                                                                               "createdAt":  "2021-10-22T00:03:34Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "I\u0027ll put together a quick proof-of-concept source generator for us to use and share the sources somewhere.",
                                           "updatedAt":  "2021-10-21T23:25:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44kfmB",
                                           "createdAt":  "2021-10-22T00:07:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCBogWw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "trylek",
                                                                               "createdAt":  "2021-10-22T00:12:03Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "agocke",
                                                                               "createdAt":  "2021-11-08T17:52:38Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "@trylek I have a basic POC generator that will generate a Main method that will run all static parameterless `[Fact]`-attributed methods in order at https://github.com/jkoritzinsky/runtime/tree/xunit-runner-generator\r\n\r\nI\u0027ll continue improving it tomorrow. I just wanted to share it early so we can start moving over some of the C# tests quickly.",
                                           "updatedAt":  "2021-10-22T00:07:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc444Exd",
                                           "createdAt":  "2021-10-28T21:15:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "\u003e \u003e One other interesting bit that occurred to me in relationship with JanK\u0027s issues.targets question is that according to our earlier discussions with the Mono team it would be helpful to have a more dynamic test grouping based on the targeting platform - the browser WASM interpreter, the various Android emulators and such just have different perf and memory characteristics so it would be nice to introduce new degrees of freedom there.\r\n\u003e \r\n\u003e What is the estimate for the largest group size that still works everywhere? I would expect that groups of several hundred of average C# tests should be fine in any environment.\r\n\r\nCurrently, with the out-of-process, when running with mobile targets, the xunit test wrapper runs on host with calls to run stuff on emulators or devices for every test methods. And because of this nature, we have to run test methods/classes in sequential. This slows things down dramatically. So we have to adjust the current test grouping a little bit so that the CI lane could finish within 3 hour timeframe. With the proposal of removing the out-of-process scripts, we should be able to make the xunit test wrapper run directly on emulators and devices like library tests and they could then run in parallel as well. I don\u0027t think library tests were grouped differently for different targets. (@akoeplinger Please correct me, if I were wrong.) If they don\u0027t need to, we shouldn\u0027t either. To be safe, we should definitely monitor the work item running time on CI as tests being converting to this world.\r\n\r\n@trylek thanks for putting together the original proposal to remove the out-of-process and @jkoritzinsky for adding more items to the original proposal. Over all, it is changing in the direction which would definitely help runtime tests running easier and faster on mobile targets as well. Here are a few things to consider for mobile targets, when it comes to design and implementation details:\r\n- As I briefly mentioned earlier, for the new xunit wrappers, I would like to run them directly on the emulators or devices. That means that we need to use a different command to invoke those test wrappers. For example, `xharness android test --app ***` instead of `dotnet xunit.console.dll *.XUnitWrapper.dll`. During the transitioning period of time, we need a way to distinguish the old and new xunit wrappers.\r\n- Based on current test grouping logic, some work items contain one xunit wrapper, the others contain multiple xunit wrapper. Library tests create one work item per test project (somewhat equivalent to the xunit wrapper here, I think). I wonder which one we choose for the new grouping logic? I may need to adjust things accordingly.\r\n- The way of creating mobile apps shouldn\u0027t need to change. Currently, one app being created per xunit wrapper. One minor change is needed to specify the entry point, which should be the xunit wrapper assembly?\r\n\r\nFor WASM, one WASM app was created per test, The app was invoked in the out-of-process script. I feel that more work would be needed for WASM to adapt to the new world. May need to create one app per xunit wrapper and run the xunit wrapper directly on browser. @naricc knows the best about WASM part.\r\n",
                                           "updatedAt":  "2021-10-28T21:15:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc45avJm",
                                           "createdAt":  "2021-11-08T16:08:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "@trylek I have the impression that publishing a xunit wrapper csproj was difficult with the current framework. It would be easier to build mobile apps, if publishing is possible and easy. Should we consider this when designing the new xunit wrapper?",
                                           "updatedAt":  "2021-11-08T16:08:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc45rf4M",
                                           "createdAt":  "2021-11-12T22:33:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCCZETA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "fanyang-mono",
                                                                               "createdAt":  "2021-11-12T23:34:03Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "trylek",
                                           "body":  "Thanks @fanyang-mono for the suggestion, that sounds reasonable. @jkoritinsky is currently reviewing PR implementing the wrapper generator, I _think_ that it should be compatible with dotnet publish but we\u0027ll need to validate that as part of the refactoring / grouping.",
                                           "updatedAt":  "2021-11-12T22:33:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc45rlse",
                                           "createdAt":  "2021-11-12T23:34:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "\u003e Thanks @fanyang-mono for the suggestion, that sounds reasonable. @jkoritinsky is currently reviewing PR implementing the wrapper generator, I _think_ that it should be compatible with dotnet publish but we\u0027ll need to validate that as part of the refactoring / grouping.\r\n\r\nMay I have the link to the PR?",
                                           "updatedAt":  "2021-11-12T23:34:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc45rlxs",
                                           "createdAt":  "2021-11-12T23:35:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "Sure, here you are: https://github.com/dotnet/runtime/pull/60846",
                                           "updatedAt":  "2021-11-12T23:35:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc45tvWR",
                                           "createdAt":  "2021-11-14T13:32:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "naricc",
                                           "body":  "@trylek So the wasm tests currently rely on taking the already-built tests and making a WasmApp bundle from all the assemblies at test run time (in the generated shell script), then running it. We get one AppBundle per test.\r\n\r\nI am also struggling to bring up the wasm-aot lane as well: https://github.com/dotnet/runtime/pull/57963\r\n\r\nThis will rely on actually being able to publish the test projects.",
                                           "updatedAt":  "2021-11-14T13:32:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc454CM1",
                                           "createdAt":  "2021-11-17T00:58:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "Thanks Nathan for your feedback. I think that the work Jeremy\u0027s been doing in https://github.com/dotnet/runtime/pull/60846 is very clean w.r.t. standard dotnet build / publish behavior (much cleaner than the msbuild-based C# generator we\u0027re using today anyway); I guess it may turn out we need to fix some bits and pieces but I don\u0027t expect that to be a big deal.\r\n\r\nFor my part, by now I believe I have injected the \u003ccode\u003e[Fact]\u003c/code\u003e attributes on all \u003ccode\u003eilproj\u003c/code\u003e tests where they\u0027re harmless. For \u003ccode\u003ecsproj\u003c/code\u003e tests we can only start the conversion once Jeremy\u0027s PR has been merged in as otherwise we wouldn\u0027t have a runner for the new-style tests. As I said before, once the change is in, I plan to use it to switch over the \u003ccode\u003eLoader/classloader/TypeGeneratorTests\u003c/code\u003e first to get an initial reading on the perf deltas.\r\n\r\nFor the il tests in general, I\u0027m wondering whether we want to keep the \u003ccode\u003e.module\u003c/code\u003e lines in the tests. I noticed arbitrary typos in the module names and they still refer to exes so I guess they are likely ignored. The only time I actually recall .module clauses being of some use was when catching some obscure build / runtime bugs related to tests with differing assembly vs. module names - as I\u0027m under the impression it\u0027s not an officially supported scenario, I wonder to what extent we need to care moving forward.",
                                           "updatedAt":  "2021-11-17T00:58:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4580mS",
                                           "createdAt":  "2021-11-17T23:10:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "I\u0027m currently working on variant tests that pass command-line arguments from the msbuild scripts to the managed test execution. We\u0027re trying to eradicate those cases in order to simplify test authoring. I believe there are basically two patterns emerging:\r\n\r\n1) We have multiple tests calling into the same final test exe with variations of command line. The vast majority of those in the runtime repo are the GC simulator tests.\r\n\r\n2) We have unique tests that don\u0027t end up converging to the same root test with different command-line arguments, someone just happened to author the test such that it expects a certain argument.\r\n\r\nFor the GC simulator tests, I would love to hear feedback from @Maoni0 and @PeterSolMS how these should be ideally modelled. We\u0027re trying to make tests more similar to library tests, maybe in some of these cases we could use the [Theory] concept to call something multiple times with argument variations. It\u0027s not pressing at the moment but I believe it to be an opportunity to make the test suite more meaningful.\r\n\r\nFor the command-line test singletons I\u0027m working on analyzing what exactly they\u0027re trying to achieve with the goal to refactor them to stop needing them.\r\n\r\nThanks\r\n\r\nTomas",
                                           "updatedAt":  "2021-11-17T23:10:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc45801-",
                                           "createdAt":  "2021-11-17T23:11:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "\u003cpre\u003e\r\nSINGLE TESTS WITH COMMAND-LINE ARGUMENTS\r\n----------------------------------------\r\nd:\\git\\runtime5\\src\\tests\\baseservices\\exceptions\\sharedexceptions\\emptystacktrace\\OOMException01.csproj -\u003e -trustedexe\r\nd:\\git\\runtime5\\src\\tests\\baseservices\\threading\\regressions\\beta1\\347011.csproj -\u003e 240\r\nd:\\git\\runtime5\\src\\tests\\GC\\API\\GC\\Collect_Default_1.csproj -\u003e 0\r\nd:\\git\\runtime5\\src\\tests\\GC\\API\\GC\\Collect_Default_2.csproj -\u003e 1\r\nd:\\git\\runtime5\\src\\tests\\GC\\API\\GC\\Collect_Default_3.csproj -\u003e 2\r\nd:\\git\\runtime5\\src\\tests\\GC\\API\\GC\\Collect_Forced_1.csproj -\u003e 0\r\nd:\\git\\runtime5\\src\\tests\\GC\\API\\GC\\Collect_Forced_2.csproj -\u003e 1\r\nd:\\git\\runtime5\\src\\tests\\GC\\API\\GC\\Collect_Forced_3.csproj -\u003e 2\r\nd:\\git\\runtime5\\src\\tests\\GC\\API\\GC\\Collect_Optimized_1.csproj -\u003e 0\r\nd:\\git\\runtime5\\src\\tests\\GC\\API\\GC\\Collect_Optimized_2.csproj -\u003e 1\r\nd:\\git\\runtime5\\src\\tests\\GC\\API\\GC\\Collect_Optimized_3.csproj -\u003e 2\r\nd:\\git\\runtime5\\src\\tests\\GC\\API\\WeakReference\\multipleWRs_1.csproj -\u003e 10000 track\r\nd:\\git\\runtime5\\src\\tests\\GC\\API\\WeakReference\\multipleWRs.csproj -\u003e 10000\r\nd:\\git\\runtime5\\src\\tests\\GC\\Features\\HeapExpansion\\bestfit_1.csproj -\u003e 1 1000 50000\r\nd:\\git\\runtime5\\src\\tests\\GC\\Features\\HeapExpansion\\bestfit.csproj -\u003e 1 1000 50000\r\nd:\\git\\runtime5\\src\\tests\\GC\\LargeMemory\\Allocation\\finalizertest.csproj -\u003e 2048\r\nd:\\git\\runtime5\\src\\tests\\GC\\LargeMemory\\Allocation\\largeexceptiontest.csproj -\u003e 2048\r\nd:\\git\\runtime5\\src\\tests\\GC\\LargeMemory\\API\\gc\\collect.csproj -\u003e 2048\r\nd:\\git\\runtime5\\src\\tests\\GC\\LargeMemory\\API\\gc\\getgeneration.csproj -\u003e 2048\r\nd:\\git\\runtime5\\src\\tests\\GC\\LargeMemory\\API\\gc\\gettotalmemory.csproj -\u003e 2048\r\nd:\\git\\runtime5\\src\\tests\\GC\\LargeMemory\\API\\gc\\keepalive.csproj -\u003e 2048\r\nd:\\git\\runtime5\\src\\tests\\GC\\LargeMemory\\API\\gc\\reregisterforfinalize.csproj -\u003e 2048\r\nd:\\git\\runtime5\\src\\tests\\GC\\LargeMemory\\API\\gc\\suppressfinalize.csproj -\u003e 2048\r\nd:\\git\\runtime5\\src\\tests\\GC\\Scenarios\\Dynamo\\dynamo.csproj -\u003e 1000 40 191919\r\nd:\\git\\runtime5\\src\\tests\\GC\\Scenarios\\GCBase1\\gc_base1_1.csproj -\u003e 8 100\r\nd:\\git\\runtime5\\src\\tests\\GC\\Scenarios\\GCBase1\\gc_base1.csproj -\u003e 3 100\r\nd:\\git\\runtime5\\src\\tests\\GC\\Scenarios\\GCSimulator\\GCSimulator.csproj -\u003e -t 1 -tp 0 -dz 17 -sdz 17 -dc 20000 -sdc 8000 -lt 2 -dp 0.0 -dw 0.4\r\nd:\\git\\runtime5\\src\\tests\\GC\\Scenarios\\RanCollect\\rancollect.csproj -\u003e 7 40 4 77\r\nd:\\git\\runtime5\\src\\tests\\GC\\Scenarios\\ServerModel\\servermodel.csproj -\u003e /numrequests:100\r\nd:\\git\\runtime5\\src\\tests\\GC\\Stress\\Framework\\ReliabilityFramework.csproj -\u003e -unittest\r\nd:\\git\\runtime5\\src\\tests\\JIT\\Regression\\JitBlue\\GitHub_26491\\GitHub_26491_MultipleReturns.ilproj -\u003e MultipleReturns\r\nd:\\git\\runtime5\\src\\tests\\JIT\\Stress\\ABI\\pinvokes_d.csproj -\u003e --pinvokes --num-calls 1000 --no-ctrlc-summary\r\nd:\\git\\runtime5\\src\\tests\\JIT\\Stress\\ABI\\pinvokes_do.csproj -\u003e --pinvokes --num-calls 1000 --no-ctrlc-summary\r\nd:\\git\\runtime5\\src\\tests\\JIT\\Stress\\ABI\\stubs_do.csproj -\u003e --instantiatingstubs --unboxingstubs --sharedgenericunboxingstubs --num-calls 100 --max-params 5 --no-ctrlc-summary\r\nd:\\git\\runtime5\\src\\tests\\JIT\\Stress\\ABI\\tailcalls_d.csproj -\u003e --tailcalls --num-calls 1000 --no-ctrlc-summary\r\nd:\\git\\runtime5\\src\\tests\\JIT\\Stress\\ABI\\tailcalls_do.csproj -\u003e --tailcalls --num-calls 1000 --no-ctrlc-summary\r\nd:\\git\\runtime5\\src\\tests\\Loader\\regressions\\polyrec\\Polyrec.csproj -\u003e 4 50\r\nd:\\git\\runtime5\\src\\tests\\readytorun\\r2rdump\\BasicTests\\R2RDumpTest.csproj -\u003e $(CoreClrDir)tests\\src\\readytorun\\r2rdump\\files\\$(TargetOS).$(TargetArchitecture).$(Configuration)\\\r\n\r\nTEST GROUPS WITH VARIANT ARGUMENTS\r\n----------------------------------\r\nd:\\git\\runtime5\\src\\tests\\GC\\Scenarios\\GCSimulator\\GCSimulator.csproj\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 17 -dc 20000 -sdc 8000 -lt 4 -f -dp 0.0 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -dp 0.4 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -dp 0.4 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -dp 0.8 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.4 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.4 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.8 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -dp 0.4 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -dp 0.8 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.4 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.4 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.4 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.4 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -dp 0.4 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.4 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.8 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -dp 0.4 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -dp 0.4 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -dp 0.8 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -dp 0.4 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.4 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.4 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.8 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 8517 -sdz 17 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -dp 0.4 -dw 0.8\r\n    -\u003e -t 1 -tp 2 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 2 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -dp 0.4 -dw 0.8\r\n    -\u003e -t 1 -tp 2 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 2 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 2 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 4 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 4 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.4 -dw 0.4\r\n    -\u003e -t 1 -tp 4 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.4 -dw 0.4\r\n    -\u003e -t 1 -tp 4 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 4 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -dp 0.8 -dw 0.0\r\n    -\u003e -t 5 -tp 0 -dz 17 -sdz 17 -dc 10000 -sdc 5000 -lt 4 -dp 0.0 -dw 0.8\r\n    -\u003e -t 5 -tp 0 -dz 17 -sdz 17 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.0 -dw 0.8\r\n    -\u003e -t 5 -tp 0 -dz 17 -sdz 17 -dc 10000 -sdc 5000 -lt 5 -dp 0.0 -dw 0.4\r\n    -\u003e -t 7 -tp 0 -dz 17 -sdz 17 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.8 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 17 -dc 30000 -sdc 6000 -lt 3 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 17 -dc 20000 -sdc 6000 -lt 2 -f -dp 0.0 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 17 -dc 20000 -sdc 8000 -lt 2 -f -dp 0.0 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 17 -dc 20000 -sdc 8000 -lt 4 -f -dp 0.0 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 17 -dc 20000 -sdc 8000 -lt 2 -dp 0.0 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.8 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.8 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.8 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.8 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.0 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.0 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.0 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.0 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.0 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.0 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.0 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.4 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.4 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.4 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.4 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.4 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.4 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.4 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.4 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.4 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.4 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.4 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.8 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.8 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.8 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.8 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.8 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.8 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.8 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.8 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.0 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.4 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.0 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.0 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.0 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.0 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.0 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.0 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.0 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.4 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.4 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.8 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.4 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.4 -dw 0.8\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.4 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.4 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.4 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.4 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.4 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.8 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.8 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.8 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.8 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.8 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.8 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.8 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.8 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.8 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 17 -dc 20000 -sdc 8000 -lt 4 -f -dp 0.0 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -dp 0.4 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -dp 0.4 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -dp 0.8 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.4 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.4 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.8 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -dp 0.4 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -dp 0.8 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.4 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.4 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.4 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.4 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -dp 0.4 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.4 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.8 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -dp 0.4 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -dp 0.4 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -dp 0.8 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.0 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -dp 0.4 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.4 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.4 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.8 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.0 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 8517 -sdz 17 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -dp 0.4 -dw 0.8\r\n    -\u003e -t 1 -tp 2 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 2 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -dp 0.4 -dw 0.8\r\n    -\u003e -t 1 -tp 2 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.8 -dw 0.8\r\n    -\u003e -t 1 -tp 2 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 2 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 4 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 4 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.4 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.0 -dw 0.4\r\n    -\u003e -t 1 -tp 4 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.4 -dw 0.4\r\n    -\u003e -t 1 -tp 4 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 4 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -dp 0.8 -dw 0.0\r\n    -\u003e -t 5 -tp 0 -dz 17 -sdz 17 -dc 10000 -sdc 5000 -lt 4 -dp 0.0 -dw 0.8\r\n    -\u003e -t 5 -tp 0 -dz 17 -sdz 17 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.0 -dw 0.8\r\n    -\u003e -t 5 -tp 0 -dz 17 -sdz 17 -dc 10000 -sdc 5000 -lt 5 -dp 0.0 -dw 0.4\r\n    -\u003e -t 7 -tp 0 -dz 17 -sdz 17 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.8 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -dp 0.0 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 17 -dc 30000 -sdc 6000 -lt 3 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 17 -dc 20000 -sdc 6000 -lt 2 -f -dp 0.0 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 17 -dc 20000 -sdc 8000 -lt 2 -f -dp 0.0 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 17 -dc 20000 -sdc 8000 -lt 4 -f -dp 0.0 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.0 -dw 0.0\r\n    -\u003e -t 7 -tp 0 -dz 17 -sdc 1024 -dc 10000 -sdz 17 -lt 2 -dp 0.1 -dw 0.0 -f\r\n    -\u003e -t 8 -tp 0 -dz 17 -sdc 1024 -dc 10000 -sdz 17 -lt 2 -dp 0.2 -dw 0.0 -f\r\n    -\u003e -t 10 -tp 0 -dz 17 -sdc 1024 -dc 10000 -sdz 17 -lt 2 -dp 0.2 -dw 0.0 -f\r\n    -\u003e -t 10 -tp 0 -dz 17 -sdc 1024 -dc 10000 -sdz 17 -lt 2 -dp 0.3 -dw 0.0 -f\r\n    -\u003e -t 8 -tp 0 -dz 17 -sdc 1024 -dc 10000 -sdz 17 -lt 2 -dp 0.3 -dw 0.1 -f\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.0 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.4 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -dp 0.4 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.0 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.4 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.4 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.4 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.4 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.4 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.4 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.4 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.4 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.4 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.4 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.8 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.8 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.8 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.8 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.8 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.8 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.8 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.8 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.0 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.4 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.0 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.8 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.0 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.0 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.0 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.0 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.0 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.0 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.4 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.4 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.4 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.4 -dw 0.8\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.0 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.4 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.4 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.4 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.4 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.8 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.8 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.8 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.8 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8517 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.8 -dw 0.0\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.8 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -f -dp 0.8 -dw 0.4\r\n    -\u003e -t 3 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -f -dp 0.8 -dw 0.4\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 4 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 5 -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 2 -f -dp 0.0 -dw 0.0\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 8500 -dc 10000 -sdc 5000 -lt 3 -f -dp 0.0 -dw 0.0\r\n\r\n    -\u003e -trustedexe\r\n    -\u003e 240\r\n    -\u003e 0\r\n    -\u003e 1\r\n    -\u003e 2\r\n    -\u003e 0\r\n    -\u003e 1\r\n    -\u003e 2\r\n    -\u003e 0\r\n    -\u003e 1\r\n    -\u003e 2\r\n    -\u003e 10000 track\r\n    -\u003e 10000\r\n    -\u003e 1 1000 50000\r\n    -\u003e 1 1000 50000\r\n    -\u003e 2048\r\n    -\u003e 2048\r\n    -\u003e 2048\r\n    -\u003e 2048\r\n    -\u003e 2048\r\n    -\u003e 2048\r\n    -\u003e 2048\r\n    -\u003e 2048\r\n    -\u003e 1000 40 191919\r\n    -\u003e 8 100\r\n    -\u003e 3 100\r\n    -\u003e -t 1 -tp 0 -dz 17 -sdz 17 -dc 20000 -sdc 8000 -lt 2 -dp 0.0 -dw 0.4\r\n    -\u003e 7 40 4 77\r\n    -\u003e /numrequests:100\r\n    -\u003e -unittest\r\n    -\u003e MultipleReturns\r\n    -\u003e --pinvokes --num-calls 1000 --no-ctrlc-summary\r\n    -\u003e --pinvokes --num-calls 1000 --no-ctrlc-summary\r\n    -\u003e --instantiatingstubs --unboxingstubs --sharedgenericunboxingstubs --num-calls 100 --max-params 5 --no-ctrlc-summary\r\n    -\u003e --tailcalls --num-calls 1000 --no-ctrlc-summary\r\n    -\u003e --tailcalls --num-calls 1000 --no-ctrlc-summary\r\n    -\u003e 4 50\r\n    -\u003e $(CoreClrDir)tests\\src\\readytorun\\r2rdump\\files\\$(TargetOS).$(TargetArchitecture).$(Configuration)\\\r\nd:\\git\\runtime5\\src\\tests\\baseservices\\exceptions\\simple\\ParallelCrash.csproj\r\n    -\u003e 1\r\n    -\u003e 2\r\nd:\\git\\runtime5\\src\\tests\\JIT\\Regression\\JitBlue\\GitHub_26491\\GitHub_26491_MultipleReturns.ilproj\r\n    -\u003e SingleReturnSynchronized\r\n\u003c/pre\u003e",
                                           "updatedAt":  "2021-11-17T23:11:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5BWtXl",
                                           "createdAt":  "2022-04-12T09:51:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "By now we\u0027re approaching merge of the JIT/Methodical tests switchover (currently blocked on the GC bug https://github.com/dotnet/runtime/issues/64263 taking down all r2r-extra runs on Unix) after which we\u0027ll have 3574 tests switched over or about 1/3 of the entire Pri1 test tree. Before we start a next phase merging additional test subtrees, I believe it\u0027s useful to analyze post-mortem observations from the previous phases and discuss solid design for cases we initially had to work around or express in suboptimal manner. Follows an initial list of aspects that merit additional design / cleanup.\r\n\r\n(*) Most problems revolve around architecture-conditional ILPROJ tests (e.g. JIT/Methodical/ELEMENT_TYPE_IU/i_array_merge_TARGET_64Bit_il_d.ilproj):\r\n\r\n(*) Putting ConditionalFactAttribute on IL code is extremely ugly as it requires pasting the binary representation of the attribute into the source code.\r\n\r\n(*) Today the tests need to be tagged as out-of-process because R2R precompilation of the \"wrong architecture\" variant crashes JIT with an assertion failure. The original design was to compile all code and skip wrong architecture code at runtime using the ConditionalFact statements; we need to decide whether it still holds (and we somehow fix JIT to work with the wrong bitness code) or design something different.\r\n\r\n(*) Marking the tests as out of process also makes them unusable for testing on those Mono platforms that don\u0027t support process creation (e.g. WASM).\r\n\r\n(*) There are additional test project properties that are used for conditional test execution - e.g. \u003ccode\u003eGCStressIncompatible\u003c/code\u003e or \u003ccode\u003eUnloadabilityIncompatible\u003c/code\u003e. Today these also need to be marked as out-of-proc just because we have no way to express these conditions via attributes. Perhaps we would need something like a \r\n\u003ccode\u003eIncompatibleWithAttribute\u003c/code\u003e to mark tests as conditionally dependent on execution mode. As a first cut it could have a string argument where the developer could put a semicolon-separated list of blocking conditions for the test, e.g. \u003ccode\u003eGCStress\u003c/code\u003e or \u003ccode\u003eUnloadability\u003c/code\u003e even though it may be useful to have specialized attributes for the most common cases to reduce the risk of typos in free-form string arguments.\r\n\r\n(*) We had to substantially massage many IL source files by removing the .module directives and by putting .assembly directives in sync with the source name to achieve consistency w.r.t. handling of dependencies of the merged wrappers. The logic is quite fragile and Jeremy believes many problems of this type could be solved by autogenerating the .assembly directive into a file that would form a second input to ilasm compilation. This merits sound design as it relies on previously unused functionality (multiple inputs to ilasm).\r\n\r\n(*) In many cases there is a pair of _il_r and _il_d project using the same source just with different symbol info settings; as the .assembly directive is naturally the same (it\u0027s the same source), we\u0027re using the trick of transforming the output assembly name by removing the _il_r / _il_d prefix; perhaps this is also solvable via the generated .assembly directive.\r\n\r\nThis is the list of issues I remember off the top of my head. I\u0027ll add more after going over the various conversations and PRs related to this task.\r\n\r\nThanks\r\n\r\nTomas",
                                           "updatedAt":  "2022-04-12T09:51:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5BXFhH",
                                           "createdAt":  "2022-04-12T10:56:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jakobbotsch",
                                           "body":  "\u003e (*) Putting ConditionalFactAttribute on IL code is extremely ugly as it requires pasting the binary representation of the attribute into the source code.\r\n\r\nThere is undocumented syntax to specify attribute values without having to deal with binary blobs. I have used it in [this](https://github.com/dotnet/runtime/blob/e9915df6320aadf73be4717a3396b2f26d6e4c9a/src/tests/JIT/Directed/debugging/debuginfo/tests.il#L44-L47) test.",
                                           "updatedAt":  "2022-04-12T10:56:06Z"
                                       }
                                   ],
                         "totalCount":  71
                     },
        "title":  "CoreCLR test suite optimization proposal: support for test project grouping",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/54921",
        "createdAt":  "2021-06-29T19:34:20Z",
        "number":  54921,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-04T21:32:53Z",
        "body":  "The \"build native test components\" step failed to restore components after the entire CoreClr product was built: https://dev.azure.com/dnceng/public/_build/results?buildId=1211659\u0026view=logs\u0026jobId=55b384d0-d6b0-5894-fd8a-d754d713246e\u0026j=388cb898-bfbc-5d7d-00fc-4978afab125f\u0026t=618e4245-b55d-5aa1-bf6d-da73532744e4.\r\n\r\nRestoring all CoreClr build components up-front allows NuGet to either fail early or not at all. Also it enables NuGet to optimize the restore as it can batch requests together.\r\n\r\ncc @trylek @jkoritzinsky @hoyosjs ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONFMU4A==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3MDg2MDQ5OA==",
                                           "createdAt":  "2021-06-29T19:34:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThe \"build native test components\" step failed to restore components after the entire CoreClr product was built: https://dev.azure.com/dnceng/public/_build/results?buildId=1211659\u0026view=logs\u0026jobId=55b384d0-d6b0-5894-fd8a-d754d713246e\u0026j=388cb898-bfbc-5d7d-00fc-4978afab125f\u0026t=618e4245-b55d-5aa1-bf6d-da73532744e4.\r\n\r\nRestoring all CoreClr build components up-front allows NuGet to either fail early or not at all. Also it enables NuGet to optimize the restore as it can batch requests together.\r\n\r\ncc @trylek @jkoritzinsky @hoyosjs \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-06-29T19:34:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3MDg2MjUyOQ==",
                                           "createdAt":  "2021-06-29T19:37:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "This will probably be included in the grouping and restores. That being said, it\u0027s unlikely this will be the same restore entry as the main managed build.",
                                           "updatedAt":  "2021-06-29T19:37:42Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3MDg4Mjg0Mw==",
                                           "createdAt":  "2021-06-29T20:10:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Why can\u0027t this be part of the overall restore?",
                                           "updatedAt":  "2021-06-29T20:10:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3MDg5NjAwNw==",
                                           "createdAt":  "2021-06-29T20:32:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBwoTgg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2021-06-29T20:40:20Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "We could, I am just warry of having two entry points - one for build-tests and one from the proj itself. There\u0027s an initiative to consolidate tests, once that happens I\u0027d be less warry. Right now we do batching maneuvers to fight msbuild issues scaling to the obnoxious number of tests we have. Once that is in, we could easily have a traversal project and then it would be easy to batch restore.",
                                           "updatedAt":  "2021-06-29T20:32:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3MDkwMTg2NA==",
                                           "createdAt":  "2021-06-29T20:41:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Sounds good. But apart from the runtime tests there are other components that don\u0027t restore up-front which shouldn\u0027t be blocked by the runtime tests grouping initiative.",
                                           "updatedAt":  "2021-06-29T20:41:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3Nzg2MDA2NA==",
                                           "createdAt":  "2021-07-11T20:55:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "@ViktorHofer do you know which ones?",
                                           "updatedAt":  "2021-07-11T20:55:50Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "CoreClr build should restore all components up-front",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/55259",
        "createdAt":  "2021-07-07T12:35:18Z",
        "number":  55259,
        "author":  "0x5b25",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-28T17:06:09Z",
        "body":  "\u003c!--This is just a template - feel free to delete any and all of it and replace as appropriate.--\u003e\r\n\r\n### Description\r\nThe python installation detection method in `src/coreclr/build-runtime.cmd` line 387 might cause batch file to stop unexpectedly without any error., which causes build steps not fully executed and build.cmd falsely reports successful build.\r\n\r\n```batch\r\nREM Find python and set it to the variable PYTHON\r\nset _C=-c \"import sys; sys.stdout.write(sys.executable)\"\r\n(py -3 %_C% || py -2 %_C% || python3 %_C% || python2 %_C% || python %_C%) \u003e %TEMP%\\pythonlocation.txt 2\u003e NUL\r\nset _C=\r\nset /p PYTHON=\u003c%TEMP%\\pythonlocation.txt\r\n```\r\nI installed chromium depot_tools, added to path, and above code in build-runtime.cmd will terminate batch execution silently after finding python3.bat in depot_tools\r\n\r\n![image](https://user-images.githubusercontent.com/24835955/124756837-80292780-df5f-11eb-8914-e3bc7270ad00.png)\r\nImage shows no native cpp code is compiled and build.cmd falsely reports build succeeded\r\n### Configuration\r\n\r\n\u003c!--\r\n* Which version of .NET is the code running on?\r\n* What OS and version, and what distro if applicable?\r\n* What is the architecture (x64, x86, ARM, ARM64)?\r\n* Do you know whether it is specific to that configuration?\r\n* If you\u0027re using Blazor, which web browser(s) do you see this issue in?\r\n  --\u003e\r\nOS : Windows 10 pro x64\r\ndotnet SDK : 5.0.7 (Maybe not relevant)\r\n\r\n### Regression?\r\nTried master, 6.0preview5 and 5.0.7, all suffers from this issue\r\n\u003c!--\r\n* Did this work in a previous build or release of .NET Core, or from .NET Framework? If you can try a previous release or build to find out, that can help us narrow down the problem. If you don\u0027t know, that\u0027s OK.\r\n  --\u003e\r\n\r\n### Other information\r\nadding `call` before \r\n```batch\r\n(py -3 %_C% || py -2 %_C% || python3 %_C% || python2 %_C% || python %_C%) \u003e %TEMP%\\pythonlocation.txt 2\u003e NUL\r\n```\r\nseems to help\r\n\u003c!--\r\n* Please include any relevant stack traces or error messages. If possible please include text as text rather than images (so it shows up in searches).\r\n* If you have an idea where the problem might lie, let us know that here. Please include any pointers to code, relevant changes, or related issues you know of.\r\n* Do you know of any workarounds?\r\n  --\u003e\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONDF8Rg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3NTU2NjAyNw==",
                                           "createdAt":  "2021-07-07T12:35:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-07-07T12:35:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3NTY1ODMxMA==",
                                           "createdAt":  "2021-07-07T14:35:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n\u003c!--This is just a template - feel free to delete any and all of it and replace as appropriate.--\u003e\r\n\r\n### Description\r\nThe python installation detection method in `src/coreclr/build-runtime.cmd` line 387 might cause batch file to stop unexpectedly without any error., which causes build steps not fully executed and build.cmd falsely reports successful build.\r\n\r\n```batch\r\nREM Find python and set it to the variable PYTHON\r\nset _C=-c \"import sys; sys.stdout.write(sys.executable)\"\r\n(py -3 %_C% || py -2 %_C% || python3 %_C% || python2 %_C% || python %_C%) \u003e %TEMP%\\pythonlocation.txt 2\u003e NUL\r\nset _C=\r\nset /p PYTHON=\u003c%TEMP%\\pythonlocation.txt\r\n```\r\nI installed chromium depot_tools, added to path, and above code in build-runtime.cmd will terminate batch execution silently after finding python3.bat in depot_tools\r\n\r\n![image](https://user-images.githubusercontent.com/24835955/124756837-80292780-df5f-11eb-8914-e3bc7270ad00.png)\r\nImage shows no native cpp code is compiled and build.cmd falsely reports build succeeded\r\n### Configuration\r\n\r\n\u003c!--\r\n* Which version of .NET is the code running on?\r\n* What OS and version, and what distro if applicable?\r\n* What is the architecture (x64, x86, ARM, ARM64)?\r\n* Do you know whether it is specific to that configuration?\r\n* If you\u0027re using Blazor, which web browser(s) do you see this issue in?\r\n  --\u003e\r\nOS : Windows 10 pro x64\r\ndotnet SDK : 5.0.7 (Maybe not relevant)\r\n\r\n### Regression?\r\nTried master, 6.0preview5 and 5.0.7, all suffers from this issue\r\n\u003c!--\r\n* Did this work in a previous build or release of .NET Core, or from .NET Framework? If you can try a previous release or build to find out, that can help us narrow down the problem. If you don\u0027t know, that\u0027s OK.\r\n  --\u003e\r\n\r\n### Other information\r\nadding `call` before \r\n```batch\r\n(py -3 %_C% || py -2 %_C% || python3 %_C% || python2 %_C% || python %_C%) \u003e %TEMP%\\pythonlocation.txt 2\u003e NUL\r\n```\r\nseems to help\r\n\u003c!--\r\n* Please include any relevant stack traces or error messages. If possible please include text as text rather than images (so it shows up in searches).\r\n* If you have an idea where the problem might lie, let us know that here. Please include any pointers to code, relevant changes, or related issues you know of.\r\n* Do you know of any workarounds?\r\n  --\u003e\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003e0x5b25\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-07-07T14:35:26Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Build script terminated unexpectedly",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/58800",
        "createdAt":  "2021-09-02T15:47:39Z",
        "number":  58800,
        "author":  "MichaelSimons",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-11-30T16:00:12Z",
        "body":  "While building the runtime repo in source build for .NET 6.0 I have encountered an issue where ResolvePackageFileConflicts is detecting unexpected conflicts.\r\n\r\nHere is a binlog for the issue - https://artprodcus3.artifacts.visualstudio.com/Ab55de4ed-4b5a-4215-a8e4-0a0a5f71e7d8/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_apis/artifact/cGlwZWxpbmVhcnRpZmFjdDovL2RuY2VuZy9wcm9qZWN0SWQvOWVlNmQ0NzgtZDI4OC00N2Y3LWFhY2MtZjZlNmQwODJhZTZkL2J1aWxkSWQvMTMzMTc1Ny9hcnRpZmFjdE5hbWUvU291cmNlLUJ1aWxkK0J1aWxkK1RhcmJhbGwrRmVkb3JhMzMtT25saW5lX0J1aWxkTG9nc19BdHRlbXB0Mg2/content?format=file\u0026subPath=%2Fsrc%2Fruntime.566b53a66b0afa573f0dae33d07c8de9685aa5c8%2Fartifacts%2FbuildLogs%2Fsource-build%2Fself%2Fsrc%2Fartifacts%2Fsourcebuild.binlog. \r\n\r\n_CreateR2RImages is failing for the Microsoft.NETCore.App.CrossGen2 project.  The root issue is that System.Private.CoreLib.dll cannot be loaded.  It appears that the ResolvePackageFileConflicts task is removing this assembly from the ReadyToRun implementation assemblies list as well as several others.\r\n\r\n```\r\nEncountered conflict between\u0027CopyLocal:/repos/installer/artifacts/tarball/src/runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/artifacts/bin/microsoft.netcore.app.runtime.fedora.33-x64/Release/runtimes/fedora.33-x64/lib/net6.0/Microsoft.VisualBasic.Core.dll\u0027and\u0027CopyLocal:/repos/installer/artifacts/tarball/src/runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/artifacts/bin/coreclr/Linux.x64.Release/System.Private.CoreLib.dll\u0027.Choosing\u0027CopyLocal:/repos/installer/artifacts/tarball/src/runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/artifacts/bin/microsoft.netcore.app.runtime.fedora.33-x64/Release/runtimes/fedora.33-x64/lib/net6.0/Microsoft.VisualBasic.Core.dll\u0027because AssemblyVersion \u002711.0.0.0\u0027 is greater than \u00276.0.0.0\u0027.\r\n```\r\n\r\nI don\u0027t understand what the ResolvePackageFileConflicts task is doing and why it is picking Microsoft.VisualBasic.Core.dll over System.Private.CoreLib.dll.  Can you help me understand what is going on here?\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOOpP14A==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc42XVBu",
                                           "createdAt":  "2021-09-02T21:53:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichaelSimons",
                                           "body":  "cc @ericstj, @dsplaisted ",
                                           "updatedAt":  "2021-09-02T21:53:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42XVMQ",
                                           "createdAt":  "2021-09-02T21:55:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichaelSimons",
                                           "body":  "cc @crummel, @dseefeld ",
                                           "updatedAt":  "2021-09-02T21:55:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42Xaw3",
                                           "createdAt":  "2021-09-02T22:40:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCEmJQg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "dsplaisted",
                                                                               "createdAt":  "2021-09-03T15:55:42Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "AraHaan",
                                                                               "createdAt":  "2021-11-30T15:48:39Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "ericstj",
                                           "body":  "That\u0027s not expected at all.  Identifying conflicts happens by comparing item keys.\r\n\r\nSince these are \"CopyLocal\" that would be here:\r\nhttps://github.com/dotnet/sdk/blob/1fb85c4e1bc9f005ead912cb6b27635f5461ed74/src/Tasks/Common/ConflictResolution/ResolvePackageFileConflicts.cs#L117-L121\r\n\r\nSo the item key in this case is `ItemUtilities.GetTargetPath`\r\nhttps://github.com/dotnet/sdk/blob/1fb85c4e1bc9f005ead912cb6b27635f5461ed74/src/Tasks/Common/ItemUtilities.cs#L123-L153\r\n\r\nSo that will honor \"TargetPath\" metadata as the item key if it exists\r\n\r\nThese items did set `TargetPath`, and for some reason, it doesn\u0027t contain filename.\r\n```\r\n/tarball/src/runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/artifacts/bin/microsoft.netcore.app.runtime.fedora.33-x64/Release/runtimes/fedora.33-x64/lib/net6.0/Microsoft.VisualBasic.Core.dll\r\n    IsNative = \r\n    PostprocessAssembly = true\r\n    RelativePath = Microsoft.VisualBasic.Core.dll\r\n    CopyToPublishDirectory = Always\r\n    TargetPath = tools/\r\n\r\n\r\n/tarball/src/runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/artifacts/bin/coreclr/Linux.x64.Release/System.Private.CoreLib.dll\r\n    PostprocessAssembly = true\r\n    RelativePath = System.Private.CoreLib.dll\r\n    CopyToPublishDirectory = Always\r\n    TargetPath = tools/\r\n```\r\n\r\nSo this explains why it\u0027s happening, but I\u0027m not sure what changed between source build and the normal build, but perhaps this gives you enough breadcrumbs to compare and find out why `TargetPath` is wrong? ",
                                           "updatedAt":  "2021-09-02T22:40:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42Xc65",
                                           "createdAt":  "2021-09-02T23:02:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichaelSimons",
                                           "body":  "@ericstj - Thanks, I\u0027ll dig in based on that info.\r\n",
                                           "updatedAt":  "2021-09-02T23:02:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42Zxiv",
                                           "createdAt":  "2021-09-03T18:22:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dseefeld",
                                           "body":  "@ericstj - Those items are added here with the `TargetPath` hardcoded to `tools/`.  https://github.com/dotnet/runtime/blob/462ab6e7a65dec97944e408b1959e71276f83988/src/installer/pkg/sfx/Microsoft.NETCore.App/Microsoft.NETCore.App.Crossgen2.sfxproj#L52-L65\r\n\r\nI have 3 scenarios: 1) failing source-build, 2) working source-build and 3) working standalone runtime.  The working cases are the same.  When calling `ResolvePackageFilesConflicts`, it reports a conflict for every file in `ReferenceCopyLocalPaths` similar to this: \r\n\r\n```\r\nEncountered conflict between \u0027CopyLocal:/tarball/src/runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/artifacts/bin/coreclr/Linux.x64.Release/sharedFramework/createdump\u0027 and \u0027CopyLocal:/tarball/src/runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/artifacts/bin/coreclr/Linux.x64.Release/System.Private.CoreLib.dll\u0027. Could not determine a winner because \u0027CopyLocal:/tarball/src/runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/artifacts/bin/coreclr/Linux.x64.Release/sharedFramework/createdump\u0027 is not an assembly.\r\n```\r\nAll files show a conflict to `src/artifacts/bin/coreclr/Linux.x64.Release/sharedFramework/createdump` which says it can\u0027t be resolved because `createdump` is not an assembly.\r\n\r\nIn the failing case, when calling `ResolvePackageFilesConflicts`, it also reports a conflict for every file in `ReferenceCopyLocalPaths` similar to this: \r\n\r\n```\r\nEncountered conflict between \u0027CopyLocal:/tarball/src/runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/artifacts/bin/microsoft.netcore.app.runtime.fedora.33-x64/Release/runtimes/fedora.33-x64/lib/net6.0/Microsoft.VisualBasic.Core.dll\u0027 and \u0027CopyLocal:/tarball/src/runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/artifacts/bin/coreclr/Linux.x64.Release/System.Private.CoreLib.dll\u0027. Choosing \u0027CopyLocal:/tarball/src/runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/artifacts/bin/microsoft.netcore.app.runtime.fedora.33-x64/Release/runtimes/fedora.33-x64/lib/net6.0/Microsoft.VisualBasic.Core.dll\u0027 because AssemblyVersion \u002711.0.0.0\u0027 is greater than \u00276.0.0.0\u0027.\r\n```\r\n\r\nIn this case, all files show a conflict to `src/artifacts/bin/microsoft.netcore.app.runtime.fedora.33-x64/Release/runtimes/fedora.33-x64/lib/net6.0/Microsoft.VisualBasic.Core.dll` and it always chooses that one because the AssemblyVersion is greater.  The result is that `Microsoft.VisualBasic.Core.dll` is the only assembly left, which causes issues with `_CreateR2RImages` later.\r\n\r\nI have binlogs for all three cases.  If you want to see them, please let me know.",
                                           "updatedAt":  "2021-09-03T18:48:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42Z1lT",
                                           "createdAt":  "2021-09-03T18:53:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "I see, so it\u0027s just a coincidence of ordering that it works at all in the shipping product.  I think the fix here is to have the CrossGen2 package fix it\u0027s use of TargetPath.  It\u0027s incorrect to use a directory for that metadata, as can be seen here:\r\nhttps://github.com/dotnet/msbuild/blob/c88325c7859bcd282ff1fae14ed95936e051e1c3/src/Tasks/Microsoft.Common.CurrentVersion.targets#L6582\r\nIf those targets weren\u0027t intending to use the common metadata they should just create their own that doesn\u0027t have meaning in other parts of the existing toolchain.  AFAICT the usage on ReferenceCopyLocalPaths here ends up being ignored later on, so it might not even be necessary, but I can\u0027t say I fully understand the scenario to know for sure.  cc @jkoritzinsky \r\n",
                                           "updatedAt":  "2021-09-03T18:53:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42aAYi",
                                           "createdAt":  "2021-09-03T20:16:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCEmLdA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ericstj",
                                                                               "createdAt":  "2021-09-07T15:30:38Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MichaelSimons",
                                                                               "createdAt":  "2021-09-07T16:52:00Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "AraHaan",
                                                                               "createdAt":  "2021-11-30T15:51:07Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "Probably the fix here is to change that SFXPROJ section to be:\r\n\r\n```xml\r\n  \u003cTarget Name=\"AddRuntimeFilesToPackage\" DependsOnTargets=\"ResolveRuntimeFilesFromLocalBuild\"\u003e\r\n    \u003cItemGroup\u003e\r\n      \u003cCrossgenFile Include=\"@(RuntimeFiles)\" Condition=\"\u0027%(Filename)\u0027 == \u0027crossgen\u0027\" /\u003e\r\n      \u003cOptimizationDataFile Include=\"@(RuntimeFiles)\" Condition=\"\u0027%(Filename)\u0027 == \u0027StandardOptimizationData\u0027\" /\u003e\r\n      \u003cReferenceCopyLocalPaths Include=\"@(RuntimeFiles)\" Exclude=\"@(CrossgenFile);@(OptimizationDataFile)\" /\u003e\r\n        \u003cTargetPath\u003etools/%(RuntimeFiles.Filename)%(RuntimeFiles.Extension)\u003c/TargetPath\u003e\r\n      \u003cReferenceCopyLocalPaths/\u003e\r\n      \u003cReferenceCopyLocalPaths DestinationSubDirectory=\"tools/\" /\u003e\r\n    \u003c/ItemGroup\u003e\r\n  \u003c/Target\u003e\r\n\r\n  \u003cTarget Name=\"AddFrameworkFilesToPackage\" DependsOnTargets=\"ResolveLibrariesFromLocalBuild\"\u003e\r\n    \u003cItemGroup\u003e\r\n      \u003cReferenceCopyLocalPaths Include=\"@(LibrariesRuntimeFiles)\" DestinationSubDirectory=\"tools/\"\u003e\r\n        \u003cTargetPath\u003etools/%(LibrariesRuntimeFiles.Filename)%(LibrariesRuntimeFiles.Extension)\u003c/TargetPath\u003e\r\n      \u003cReferenceCopyLocalPaths/\u003e\r\n    \u003c/ItemGroup\u003e\r\n  \u003c/Target\u003e\r\n```\r\n\r\ncc: @dotnet/crossgen-contrib ",
                                           "updatedAt":  "2021-09-03T20:16:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42ga-J",
                                           "createdAt":  "2021-09-07T16:55:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichaelSimons",
                                           "body":  "@hoyosjs, I applied your suggested fix to the tip of `release/6.0` and encountered the following errors in `_GenerateFrameworkList`.  Let me know if you want a binlog and I can share it with you.\r\n\r\n```\r\n  /repos/runtime/artifacts/source-build/self/package-cache/microsoft.dotnet.sharedframework.sdk/6.0.0-beta.21427.6/targets/sharedfx.targets(401,5): error : No public key token found for assembly /repos/runtime/artifacts/source-build/self/src/artifacts/obj/Microsoft.NETCore.App.Crossgen2/Release/net6.0/linux-x64/R2R/ILCompiler.DependencyAnalysisFramework.dll [/repos/runtime/artifacts/source-build/self/src/src/installer/pkg/sfx/Microsoft.NETCore.App/Microsoft.NETCore.App.Crossgen2.sfxproj]\r\n  /repos/runtime/artifacts/source-build/self/package-cache/microsoft.dotnet.sharedframework.sdk/6.0.0-beta.21427.6/targets/sharedfx.targets(401,5): error : No public key token found for assembly /repos/runtime/artifacts/source-build/self/src/artifacts/obj/Microsoft.NETCore.App.Crossgen2/Release/net6.0/linux-x64/R2R/ILCompiler.Diagnostics.dll [/repos/runtime/artifacts/source-build/self/src/src/installer/pkg/sfx/Microsoft.NETCore.App/Microsoft.NETCore.App.Crossgen2.sfxproj]\r\n  /repos/runtime/artifacts/source-build/self/package-cache/microsoft.dotnet.sharedframework.sdk/6.0.0-beta.21427.6/targets/sharedfx.targets(401,5): error : No public key token found for assembly /repos/runtime/artifacts/source-build/self/src/artifacts/obj/Microsoft.NETCore.App.Crossgen2/Release/net6.0/linux-x64/R2R/ILCompiler.ReadyToRun.dll [/repos/runtime/artifacts/source-build/self/src/src/installer/pkg/sfx/Microsoft.NETCore.App/Microsoft.NETCore.App.Crossgen2.sfxproj]\r\n  /repos/runtime/artifacts/source-build/self/package-cache/microsoft.dotnet.sharedframework.sdk/6.0.0-beta.21427.6/targets/sharedfx.targets(401,5): error : No public key token found for assembly /repos/runtime/artifacts/source-build/self/src/artifacts/obj/Microsoft.NETCore.App.Crossgen2/Release/net6.0/linux-x64/R2R/ILCompiler.TypeSystem.ReadyToRun.dll [/repos/runtime/artifacts/source-build/self/src/src/installer/pkg/sfx/Microsoft.NETCore.App/Microsoft.NETCore.App.Crossgen2.sfxproj]\r\n  /repos/runtime/artifacts/source-build/self/package-cache/microsoft.dotnet.sharedframework.sdk/6.0.0-beta.21427.6/targets/sharedfx.targets(401,5): error : No public key token found for assembly /repos/runtime/artifacts/source-build/self/src/artifacts/obj/Microsoft.NETCore.App.Crossgen2/Release/net6.0/linux-x64/R2R/crossgen2.dll [/repos/runtime/artifacts/source-build/self/src/src/installer/pkg/sfx/Microsoft.NETCore.App/Microsoft.NETCore.App.Crossgen2.sfxproj]\r\n      0 Warning(s)\r\n      5 Error(s)\r\n```",
                                           "updatedAt":  "2021-09-07T16:55:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42gbl9",
                                           "createdAt":  "2021-09-07T16:59:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "That normally means that such assemblies were not run through crossgen, so they are still delay signed. If you have the binlog handy, I could take a look.",
                                           "updatedAt":  "2021-09-07T16:59:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42gq0p",
                                           "createdAt":  "2021-09-07T18:38:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "Looks like https://github.com/dotnet/arcade/blob/d70e912c6a60971d5281163dd0b2159fdfc643e3/src/Microsoft.DotNet.SharedFramework.Sdk/src/CreateFrameworkListFile.cs#L119 assumes that `TargetPath` is a folder target, and not `DestinationSubDirectory`, so the fix would likely also need to go there. ",
                                           "updatedAt":  "2021-09-07T18:38:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42gru6",
                                           "createdAt":  "2021-09-07T18:40:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "And looks like that same assumption is made all over the SFX SDK:  https://github.com/dotnet/arcade/blob/d70e912c6a60971d5281163dd0b2159fdfc643e3/src/Microsoft.DotNet.SharedFramework.Sdk/targets/sharedfx.targets#L113-L142 and some other places that seem to use a directory as well https://github.com/dotnet/arcade/blob/d70e912c6a60971d5281163dd0b2159fdfc643e3/src/Microsoft.DotNet.Build.Tasks.Packaging/src/build/Packaging.targets#L279, however usage in that file is inconsistent - sometimes used as a file, or a directory - with the following disclaimer. https://github.com/dotnet/arcade/blob/d70e912c6a60971d5281163dd0b2159fdfc643e3/src/Microsoft.DotNet.Build.Tasks.Packaging/src/build/Packaging.targets#L458-L461. Looks like this is just an inconsistent behavior all around, and that file path should be preferred but both are technically valid? Maybe @dsplaisted, @rainersigwald, or someone from NuGet have better guidance on what the correct behavior is so we can go an fix this? Either way, we\u0027ll need to update the SFX SDK and potentially runtime.",
                                           "updatedAt":  "2021-09-07T18:54:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42guED",
                                           "createdAt":  "2021-09-07T18:57:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "What if you instead just move these targets to run after `ResolveReferences` (and thus after conflict resolution) or even disable conflict resolution entirely?  That might avoid churning stuff too much at this point in the product.  IMHO we shouldn\u0027t be relying on the sorts of things conflict resolution does in an installer project: we\u0027d want to be explicit about which files are includeded.",
                                           "updatedAt":  "2021-09-07T18:57:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42gv2H",
                                           "createdAt":  "2021-09-07T19:09:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "hmm I agree about not wanting to rely on that - strongly. But that is also a big change in behavior and I am not familiar enough with the ordering and dependencies of targets. I am not sure we have enough time to test. Looks like resolution took a dependency on a TargetPath being the file-named one (in my opinion the better option as some files don\u0027t have extensions).\r\n\r\nMaybe a targeted unblock for now is in SFX changing that one line to something that does the following:\r\n```diff\r\n-string path = Path.Combine(f.TargetPath, f.Filename).Replace(\u0027\\\\\u0027, \u0027/\u0027);\r\n+string path = Path.GetExtension(f.TargetPath) == Path.GetExtension(f.FileName) ? f.TargetPath.Replace(\u0027\\\\\u0027, \u0027/\u0027) : Path.Combine(f.TargetPath, f.Filename).Replace(\u0027\\\\\u0027, \u0027/\u0027);\r\n```\r\n\r\nThere are some edge cases around extensions and unix files on this. Any strong opinions?",
                                           "updatedAt":  "2021-09-07T19:09:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42gzKK",
                                           "createdAt":  "2021-09-07T19:26:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "Interesting, it looks like my suggestion isn\u0027t even valid as it seems like the actual place where conflict resolution is running is not part of `ResolveReferences`.  Instead the CrossGen target is calling it directly 😮 \r\nhttps://github.com/dotnet/sdk/blob/43c8f12b569f6bf163cc9679167c9c340290ac46/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.CrossGen.targets#L396-L399\r\n\r\n\u003e There are some edge cases around extensions and unix files on this. Any strong opinions?\r\n\r\nIf possible isolate your change to the single project that needs it rather than touching the SDK since that SDK is used by many other projects which likely don\u0027t suffer from this problem.\r\n",
                                           "updatedAt":  "2021-09-07T19:26:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42g16j",
                                           "createdAt":  "2021-09-07T19:48:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "\u003e If possible isolate your change to the single project that needs it rather than touching the SDK since that SDK is used by many other projects which likely don\u0027t suffer from this problem.\r\n\r\nHmm. Trying to think but if both targets need to run there\u0027s no way to correctly hit both without that change I think. \r\n\r\n",
                                           "updatedAt":  "2021-09-07T19:48:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42g8Kp",
                                           "createdAt":  "2021-09-07T20:21:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "I was imagining some hack that set `PackageTargetPath` instead of `TargetPath`, then right after `_PrepareForReadyToRunCompilation` applied `TargetPath` metadata to the appropriate items with `PackageTargetPath`.  Maybe it\u0027s too hacky.  If you can see a low risk fix in the SDK then by all means go that route.\r\n\r\n\u003e Looks like this is just an inconsistent behavior all around\r\n\r\nIIRC the use of `TargetPath` in packaging was originally acceptable to have either a filename or a directory and we used a filename in [some cases](https://github.com/dotnet/arcade/blob/1e11251dfea77c00eea2228660c1afa011347d17/src/Microsoft.DotNet.Build.Tasks.Packaging/src/build/Packaging.targets#L463).  The Packaging use of `TargetPath` was previously entirely separate from any CSProj / common-targets usage.  Here `TargetPath` meant the path in the package for the file.   I believe the SharedFramework SDK merged these project types and landed on the naming collision here.",
                                           "updatedAt":  "2021-09-07T20:23:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42jUUe",
                                           "createdAt":  "2021-09-08T13:13:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-09-08T13:13:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42jWA1",
                                           "createdAt":  "2021-09-08T13:22:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichaelSimons",
                                           "body":  "I tried the suggested fix in source-build and encountered an issue with resolution.\r\n\r\n```\r\n...runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/artifacts/bin/coreclr/Linux.x64.Release/crossgen2/System.Reflection.Metadata.dll\" is an invalid value for the \"CompilationEntry\" parameter of the \"RunReadyToRunCompiler\" task. Multiple items cannot be passed into a parameter of type \"Microsoft.Build.Framework.ITaskItem\". [/repos/tarball3/src/runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/src/installer/pkg/sfx/Microsoft.NETCore.App/Microsoft.NETCore.App.Crossgen2.sfxproj]\r\n```\r\n\r\n`System.Reflection.Metadata.dll` is in the list of assemblies to crossgen twice. \r\n\r\n```\r\n/repos/tarball3/src/runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/artifacts/bin/microsoft.netcore.app.runtime.linux-x64/Release/runtimes/linux-x64/lib/net6.0/System.Reflection.Metadata.dll\r\n    IsNative =\r\n    PostprocessAssembly = true\r\n    RelativePath = System.Reflection.Metadata.dll\r\n    DestinationSubDirectory = tools/\r\n    CopyToPublishDirectory = Always\r\n    TargetPath = tools/System.Reflection.Metadata.dll\r\n```\r\n \r\nand\r\n\r\n```\r\n/repos/tarball3/src/runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/artifacts/bin/coreclr/Linux.x64.Release/crossgen2/System.Reflection.Metadata.dll\r\n    PostprocessAssembly = true\r\n    ReferenceSourceTarget = ResolveAssemblyReference\r\n    RelativePath = System.Reflection.Metadata.dll\r\n    Version =\r\n    ResolvedFrom = /repos/tarball3/src/runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/artifacts/bin/coreclr/Linux.x64.Release/crossgen2\r\n    CopyLocal = true\r\n    DestinationSubDirectory = tools/\r\n    OriginalItemSpec = /repos/tarball3/src/runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/artifacts/bin/coreclr/Linux.x64.Release/crossgen2/crossgen2.dll\r\n    FusionName = System.Reflection.Metadata, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n    CopyToPublishDirectory = Always\r\n```\r\n\r\nThe output from ResolvePackageFileConflicts is the following:\r\n```\r\nEncountered conflict between \u0027CopyLocal:/repos/tarball3/src/runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/artifacts/bin/microsoft.netcore.app.runtime.linux-x64/Release/runtimes/linux-x64/lib/net6.0/System.Reflection.Metadata.dll\u0027 and \u0027CopyLocal:/repos/tarball3/src/runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/artifacts/bin/coreclr/Linux.x64.Release/crossgen2/System.Reflection.Metadata.dll\u0027. Could not determine winner due to equal file and assembly versions.\r\n```",
                                           "updatedAt":  "2021-09-08T13:22:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42jY_W",
                                           "createdAt":  "2021-09-08T13:38:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rainersigwald",
                                           "body":  "@MichaelSimons that one should be fixed by https://github.com/dotnet/sdk/pull/19878 -- you might want to try applying this workaround: https://github.com/dotnet/sdk/issues/19834#issuecomment-901373251 for now.",
                                           "updatedAt":  "2021-09-08T13:38:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42jjBT",
                                           "createdAt":  "2021-09-08T14:27:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nWhile building the runtime repo in source build for .NET 6.0 I have encountered an issue where ResolvePackageFileConflicts is detecting unexpected conflicts.\r\n\r\nHere is a binlog for the issue - https://artprodcus3.artifacts.visualstudio.com/Ab55de4ed-4b5a-4215-a8e4-0a0a5f71e7d8/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_apis/artifact/cGlwZWxpbmVhcnRpZmFjdDovL2RuY2VuZy9wcm9qZWN0SWQvOWVlNmQ0NzgtZDI4OC00N2Y3LWFhY2MtZjZlNmQwODJhZTZkL2J1aWxkSWQvMTMzMTc1Ny9hcnRpZmFjdE5hbWUvU291cmNlLUJ1aWxkK0J1aWxkK1RhcmJhbGwrRmVkb3JhMzMtT25saW5lX0J1aWxkTG9nc19BdHRlbXB0Mg2/content?format=file\u0026subPath=%2Fsrc%2Fruntime.566b53a66b0afa573f0dae33d07c8de9685aa5c8%2Fartifacts%2FbuildLogs%2Fsource-build%2Fself%2Fsrc%2Fartifacts%2Fsourcebuild.binlog. \r\n\r\n_CreateR2RImages is failing for the Microsoft.NETCore.App.CrossGen2 project.  The root issue is that System.Private.CoreLib.dll cannot be loaded.  It appears that the ResolvePackageFileConflicts task is removing this assembly from the ReadyToRun implementation assemblies list as well as several others.\r\n\r\n```\r\nEncountered conflict between\u0027CopyLocal:/repos/installer/artifacts/tarball/src/runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/artifacts/bin/microsoft.netcore.app.runtime.fedora.33-x64/Release/runtimes/fedora.33-x64/lib/net6.0/Microsoft.VisualBasic.Core.dll\u0027and\u0027CopyLocal:/repos/installer/artifacts/tarball/src/runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/artifacts/bin/coreclr/Linux.x64.Release/System.Private.CoreLib.dll\u0027.Choosing\u0027CopyLocal:/repos/installer/artifacts/tarball/src/runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/artifacts/bin/microsoft.netcore.app.runtime.fedora.33-x64/Release/runtimes/fedora.33-x64/lib/net6.0/Microsoft.VisualBasic.Core.dll\u0027because AssemblyVersion \u002711.0.0.0\u0027 is greater than \u00276.0.0.0\u0027.\r\n```\r\n\r\nI don\u0027t understand what the ResolvePackageFileConflicts task is doing and why it is picking Microsoft.VisualBasic.Core.dll over System.Private.CoreLib.dll.  Can you help me understand what is going on here?\r\n\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eMichaelSimons\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-09-08T14:27:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42juKc",
                                           "createdAt":  "2021-09-08T15:19:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "@rainersigwald I\u0027m not sure it will.  This particular use of conflict resolution is rather unusual since it\u0027s happening inside the crossgen target for a shared framework project (custom project/sdk type used to build the framework).\r\n\r\nI think there\u0027s still an issue here that there are two sets of binaries flowing into this task from different sources.  Can the cross-gen folks comment on what should be happening here?  Maybe a tweak to the workaround so that the conflict resolution task still sees some sort of separate path for those cross-gen files?  Looks like [DestinationSubDirectory](https://github.com/dotnet/sdk/blob/1fb85c4e1bc9f005ead912cb6b27635f5461ed74/src/Tasks/Common/ItemUtilities.cs#L145) could work?",
                                           "updatedAt":  "2021-09-08T17:11:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42jyjY",
                                           "createdAt":  "2021-09-08T15:42:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mangod9",
                                           "body":  "@davidwrighton @AntonLapounov in case they have ideas around this. ",
                                           "updatedAt":  "2021-09-08T15:42:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42nLhm",
                                           "createdAt":  "2021-09-09T16:11:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @Anipik, @safern, @ViktorHofer\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nWhile building the runtime repo in source build for .NET 6.0 I have encountered an issue where ResolvePackageFileConflicts is detecting unexpected conflicts.\r\n\r\nHere is a binlog for the issue - https://artprodcus3.artifacts.visualstudio.com/Ab55de4ed-4b5a-4215-a8e4-0a0a5f71e7d8/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_apis/artifact/cGlwZWxpbmVhcnRpZmFjdDovL2RuY2VuZy9wcm9qZWN0SWQvOWVlNmQ0NzgtZDI4OC00N2Y3LWFhY2MtZjZlNmQwODJhZTZkL2J1aWxkSWQvMTMzMTc1Ny9hcnRpZmFjdE5hbWUvU291cmNlLUJ1aWxkK0J1aWxkK1RhcmJhbGwrRmVkb3JhMzMtT25saW5lX0J1aWxkTG9nc19BdHRlbXB0Mg2/content?format=file\u0026subPath=%2Fsrc%2Fruntime.566b53a66b0afa573f0dae33d07c8de9685aa5c8%2Fartifacts%2FbuildLogs%2Fsource-build%2Fself%2Fsrc%2Fartifacts%2Fsourcebuild.binlog. \r\n\r\n_CreateR2RImages is failing for the Microsoft.NETCore.App.CrossGen2 project.  The root issue is that System.Private.CoreLib.dll cannot be loaded.  It appears that the ResolvePackageFileConflicts task is removing this assembly from the ReadyToRun implementation assemblies list as well as several others.\r\n\r\n```\r\nEncountered conflict between\u0027CopyLocal:/repos/installer/artifacts/tarball/src/runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/artifacts/bin/microsoft.netcore.app.runtime.fedora.33-x64/Release/runtimes/fedora.33-x64/lib/net6.0/Microsoft.VisualBasic.Core.dll\u0027and\u0027CopyLocal:/repos/installer/artifacts/tarball/src/runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/artifacts/bin/coreclr/Linux.x64.Release/System.Private.CoreLib.dll\u0027.Choosing\u0027CopyLocal:/repos/installer/artifacts/tarball/src/runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/artifacts/bin/microsoft.netcore.app.runtime.fedora.33-x64/Release/runtimes/fedora.33-x64/lib/net6.0/Microsoft.VisualBasic.Core.dll\u0027because AssemblyVersion \u002711.0.0.0\u0027 is greater than \u00276.0.0.0\u0027.\r\n```\r\n\r\nI don\u0027t understand what the ResolvePackageFileConflicts task is doing and why it is picking Microsoft.VisualBasic.Core.dll over System.Private.CoreLib.dll.  Can you help me understand what is going on here?\r\n\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eMichaelSimons\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e6.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-09-09T16:11:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42nOo6",
                                           "createdAt":  "2021-09-09T16:28:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nWhile building the runtime repo in source build for .NET 6.0 I have encountered an issue where ResolvePackageFileConflicts is detecting unexpected conflicts.\r\n\r\nHere is a binlog for the issue - https://artprodcus3.artifacts.visualstudio.com/Ab55de4ed-4b5a-4215-a8e4-0a0a5f71e7d8/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_apis/artifact/cGlwZWxpbmVhcnRpZmFjdDovL2RuY2VuZy9wcm9qZWN0SWQvOWVlNmQ0NzgtZDI4OC00N2Y3LWFhY2MtZjZlNmQwODJhZTZkL2J1aWxkSWQvMTMzMTc1Ny9hcnRpZmFjdE5hbWUvU291cmNlLUJ1aWxkK0J1aWxkK1RhcmJhbGwrRmVkb3JhMzMtT25saW5lX0J1aWxkTG9nc19BdHRlbXB0Mg2/content?format=file\u0026subPath=%2Fsrc%2Fruntime.566b53a66b0afa573f0dae33d07c8de9685aa5c8%2Fartifacts%2FbuildLogs%2Fsource-build%2Fself%2Fsrc%2Fartifacts%2Fsourcebuild.binlog. \r\n\r\n_CreateR2RImages is failing for the Microsoft.NETCore.App.CrossGen2 project.  The root issue is that System.Private.CoreLib.dll cannot be loaded.  It appears that the ResolvePackageFileConflicts task is removing this assembly from the ReadyToRun implementation assemblies list as well as several others.\r\n\r\n```\r\nEncountered conflict between\u0027CopyLocal:/repos/installer/artifacts/tarball/src/runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/artifacts/bin/microsoft.netcore.app.runtime.fedora.33-x64/Release/runtimes/fedora.33-x64/lib/net6.0/Microsoft.VisualBasic.Core.dll\u0027and\u0027CopyLocal:/repos/installer/artifacts/tarball/src/runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/artifacts/bin/coreclr/Linux.x64.Release/System.Private.CoreLib.dll\u0027.Choosing\u0027CopyLocal:/repos/installer/artifacts/tarball/src/runtime.566b53a66b0afa573f0dae33d07c8de9685aa5c8/artifacts/source-build/self/src/artifacts/bin/microsoft.netcore.app.runtime.fedora.33-x64/Release/runtimes/fedora.33-x64/lib/net6.0/Microsoft.VisualBasic.Core.dll\u0027because AssemblyVersion \u002711.0.0.0\u0027 is greater than \u00276.0.0.0\u0027.\r\n```\r\n\r\nI don\u0027t understand what the ResolvePackageFileConflicts task is doing and why it is picking Microsoft.VisualBasic.Core.dll over System.Private.CoreLib.dll.  Can you help me understand what is going on here?\r\n\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eMichaelSimons\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e6.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-09-09T16:28:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42p5nw",
                                           "createdAt":  "2021-09-10T14:36:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichaelSimons",
                                           "body":  "@rainersigwald - I pulled in dotnet/sdk#19878 and it made no difference as per @ericstj speculated because of the special usage.\r\n\r\nAny other suggestions?  This is a blocker for source-build.",
                                           "updatedAt":  "2021-09-10T14:36:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc43dHIa",
                                           "createdAt":  "2021-09-29T17:21:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@MichaelSimons are you still blocked by this?",
                                           "updatedAt":  "2021-09-29T17:21:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc43dy7q",
                                           "createdAt":  "2021-09-29T21:26:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichaelSimons",
                                           "body":  "The underlying issue was addressed by a source-build patch that I will merge back into runtime..  While it surfaced an issue in the way ResolvePackageFileConflicts is used, it is not blocking source-build.",
                                           "updatedAt":  "2021-09-29T21:26:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46k_Xg",
                                           "createdAt":  "2021-11-30T16:00:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AraHaan",
                                           "body":  "I also run into a crossgen2 issue as well on this sfxproj but it seems that the issue is related on it somehow adding some tool files to the generated nuspec multiple times resulting it in failing:\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5118: File \u0027C:\\Users\\User\\Desktop\\runtime\\artifacts\\bin\\coreclr\\windows.x64.Debug\\PDB\\crossgen2.pdb\u0027 is not added because the package already contains file \u0027runtimes\\win-x64\\lib\\net7.0\\..\\..\\..\\..\\tools\\crossgen2.pdb\u0027 [C:\\Users\\User\\Desktop\\runtime\\src\\installer\\pkg\\sfx\\Microsoft.NETCore.App\\Microsoft.NETCore.App.Crossgen2.sfxproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5118: File \u0027C:\\Users\\User\\Desktop\\runtime\\artifacts\\bin\\coreclr\\windows.x64.Debug\\PDB\\ILCompiler.DependencyAnalysisFramework.pdb\u0027 is not added because the package already contains file \u0027runtimes\\win-x64\\lib\\net7.0\\..\\..\\..\\..\\tools\\ILCompiler.DependencyAnalysisFramework.pdb\u0027 [C:\\Users\\User\\Desktop\\runtime\\src\\installer\\pkg\\sfx\\Microsoft.NETCore.App\\Microsoft.NETCore.App.Crossgen2.sfxproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5118: File \u0027C:\\Users\\User\\Desktop\\runtime\\artifacts\\bin\\coreclr\\windows.x64.Debug\\PDB\\ILCompiler.Diagnostics.pdb\u0027 is not added because the package already contains file \u0027runtimes\\win-x64\\lib\\net7.0\\..\\..\\..\\..\\tools\\ILCompiler.Diagnostics.pdb\u0027 [C:\\Users\\User\\Desktop\\runtime\\src\\installer\\pkg\\sfx\\Microsoft.NETCore.App\\Microsoft.NETCore.App.Crossgen2.sfxproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5118: File \u0027C:\\Users\\User\\Desktop\\runtime\\artifacts\\bin\\coreclr\\windows.x64.Debug\\PDB\\ILCompiler.ReadyToRun.pdb\u0027 is not added because the package already contains file \u0027runtimes\\win-x64\\lib\\net7.0\\..\\..\\..\\..\\tools\\ILCompiler.ReadyToRun.pdb\u0027 [C:\\Users\\User\\Desktop\\runtime\\src\\installer\\pkg\\sfx\\Microsoft.NETCore.App\\Microsoft.NETCore.App.Crossgen2.sfxproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.100\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5118: File \u0027C:\\Users\\User\\Desktop\\runtime\\artifacts\\bin\\coreclr\\windows.x64.Debug\\PDB\\ILCompiler.TypeSystem.ReadyToRun.pdb\u0027 is not added because the package already contains file \u0027runtimes\\win-x64\\lib\\net7.0\\..\\..\\..\\..\\tools\\ILCompiler.TypeSystem.ReadyToRun.pdb\u0027 [C:\\Users\\User\\Desktop\\runtime\\src\\installer\\pkg\\sfx\\Microsoft.NETCore.App\\Microsoft.NETCore.App.Crossgen2.sfxproj]\r\n    0 Warning(s)\r\n    5 Error(s)\r\n```",
                                           "updatedAt":  "2021-11-30T16:00:12Z"
                                       }
                                   ],
                         "totalCount":  28
                     },
        "title":  "ResolvePackageFileConflicts is detecting unexpected conflicts",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/59821",
        "createdAt":  "2021-09-30T18:08:55Z",
        "number":  59821,
        "author":  "ericstj",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-28T17:09:35Z",
        "body":  "As mentioned in https://github.com/dotnet/runtime/issues/11063#issuecomment-920367487\r\n\r\nWe shouldn\u0027t be relying on concurrent execution of test assemblies in the xunit runner on non .NETFramework.  We\u0027ve hit multiple issues because of this:\r\nhttps://github.com/dotnet/runtime/issues/11320\r\nhttps://github.com/dotnet/runtime/issues/11063\r\n\r\nWe\u0027ve gotten some patches into xunit to avoid these, but we should avoid the to get on the \"happy path\" for this component otherwise we\u0027re likely to hit more issues.\r\n\r\nI believe the primary place where we do pass multiple assemblies is in the runtime tests.  I believe those could be modified to use a single test assembly and avoid this case.  AFICT they aren\u0027t even running tests in the Xunit process so it should be feasible to either generate them as a single assembly, or generate the wrapper in a different way so that it doesn\u0027t appear to xunit as multiple test assemblies.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHON4Zj_A==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc43hk8r",
                                           "createdAt":  "2021-09-30T18:08:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-09-30T18:08:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc43hmP8",
                                           "createdAt":  "2021-09-30T18:16:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nAs mentioned in https://github.com/dotnet/runtime/issues/11063#issuecomment-920367487\r\n\r\nWe shouldn\u0027t be relying on concurrent execution of test assemblies in the xunit runner on non .NETFramework.  We\u0027ve hit multiple issues because of this:\r\nhttps://github.com/dotnet/runtime/issues/11320\r\nhttps://github.com/dotnet/runtime/issues/11063\r\n\r\nWe\u0027ve gotten some patches into xunit to avoid these, but we should avoid the to get on the \"happy path\" for this component otherwise we\u0027re likely to hit more issues.\r\n\r\nI believe the primary place where we do pass multiple assemblies is in the runtime tests.  I believe those could be modified to use a single test assembly and avoid this case.  AFICT they aren\u0027t even running tests in the Xunit process so it should be feasible to either generate them as a single assembly, or generate the wrapper in a different way so that it doesn\u0027t appear to xunit as multiple test assemblies.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eericstj\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-09-30T18:16:27Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Avoid running test assemblies in parallel in the same xunit process",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/60809",
        "createdAt":  "2021-10-24T15:32:56Z",
        "number":  60809,
        "author":  "jkotas",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-01T21:35:38Z",
        "body":  "### Description\r\n\r\nBuild log files referenced by failed native component build do not exist\r\n\r\n### Reproduction Steps\r\n\r\n1. Introduce build break in coreclr, e.g. by adding `#error Here` to src\\coreclr\\vm\u003enotepad methodtable.cpp\r\n2. `build.cmd -s clr -c Release`\r\n\r\nThe build output ends with:\r\n```\r\n  ninja: build stopped: subcommand failed.\r\n  BUILD: Error: native component build failed. Refer to the build log files for details.\r\n      \"D:\\runtime\\src\\coreclr\\..\\..\\artifacts\\log\\Release\\CoreCLR_windows__x64__Release.log\"\r\n      \"D:\\runtime\\src\\coreclr\\..\\..\\artifacts\\log\\Release\\CoreCLR_windows__x64__Release.wrn\"\r\n      \"D:\\runtime\\src\\coreclr\\..\\..\\artifacts\\log\\Release\\CoreCLR_windows__x64__Release.err\"\r\n```\r\n\r\n### Expected behavior\r\n\r\nBuild log files referenced by the error message exist\r\n\r\n\r\n### Actual behavior\r\n\r\nBuild log files referenced by the error message do not exist\r\n\r\n### Configuration\r\n\r\nWindows 10, VS2022 Preview",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOOKVPnQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc44pR80",
                                           "createdAt":  "2021-10-24T15:33:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\n\nBuild log files referenced by failed native component build do not exist\n\n### Reproduction Steps\n\n1. Introduce build break in coreclr, e.g. by adding `#error Here` to src\\coreclr\\vm\u003enotepad methodtable.cpp\r\n2. `build.cmd -s clr -c Release`\r\n\r\nThe build output ends with:\r\n```\r\n  ninja: build stopped: subcommand failed.\r\n  BUILD: Error: native component build failed. Refer to the build log files for details.\r\n      \"D:\\runtime\\src\\coreclr\\..\\..\\artifacts\\log\\Release\\CoreCLR_windows__x64__Release.log\"\r\n      \"D:\\runtime\\src\\coreclr\\..\\..\\artifacts\\log\\Release\\CoreCLR_windows__x64__Release.wrn\"\r\n      \"D:\\runtime\\src\\coreclr\\..\\..\\artifacts\\log\\Release\\CoreCLR_windows__x64__Release.err\"\r\n```\n\n### Expected behavior\n\nBuild log files references by the error message exists\r\n\n\n### Actual behavior\n\nBuild log files references by the error message do not exist\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\nWindows 10, VS2022 Preview\n\n### Other information\n\n_No response_\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ejkotas\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-10-24T15:33:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44pSAJ",
                                           "createdAt":  "2021-10-24T15:34:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "@jkoritzinsky Are the build log files expected to exist with ninja or do we need to update the error message?",
                                           "updatedAt":  "2021-10-24T15:34:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44pU-d",
                                           "createdAt":  "2021-10-24T16:56:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "We need to update that for Ninja.",
                                           "updatedAt":  "2021-10-24T16:56:43Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Build log files referenced by failed native component build do not exist",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/61859",
        "createdAt":  "2021-11-19T23:33:58Z",
        "number":  61859,
        "author":  "RobertHenry6bev",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-08-16T14:39:30Z",
        "body":  "### Description\n\nRunning on Ubuntu 21.10\r\nThe help output of build.sh says:\r\n * Build CoreCLR for Linux x64 using extra compiler flags (-fstack-clash-protection).\r\nEXTRA_CFLAGS=-fstack-clash-protection EXTRA_CXXFLAGS=-fstack-clash-protection ./build.sh clr\r\n\r\nBut this doesn\u0027t work.\r\n\r\nThe only(?) place EXTRA_CFLAGS/EXTRA_CXXFLAGS is used is in eng/native/build-commons.sh where it is exposed in the environment as CFLAGS/CXXFLAGS for an invocation of cmake.\r\n\r\nBut, empirically, its the invocation of cmake in eng/native/gen-buildsys.sh that matters.  If CFLAGS/CXXFLAGS are set to EXTRA_CFLAGS/EXTRA_CXXFLAGS then it seems that these flags are acted upon as desired.\n\n### Reproduction Steps\n\nexport EXTRA_CFLAGS=-CHOKE_ON_THIS ; bash build.sh .....\r\n\r\nand no invocation of the C/CXX compiler fails, since no invocation is given a command line with -CHOKE_ON_THIS.\n\n### Expected behavior\n\nclang should be invoked with all fhe flags enumerated in EXTRA_CFLAGS/EXTRA_CXXFLAGS.  run ps avx | grep clang and see that the desired flags are not there.\n\n### Actual behavior\n\nattempting to pass bogus flags to the C/C++ compilers results in no build errors.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\nEdit source for eng/native/gen-buildsys.sh to\r\n  export CFLAGS=$EXTRA_CFLAGS\r\nexport CXXFLAGS=$EXTRA_CXXFLAGS\r\nbefore the invocation of $cmake_command near the end\n\n### Configuration\n\nubuntu linux 21.10 x86_64 host\r\nclang-10 ... clang-13 \n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOOhcJNA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc46Fk0V",
                                           "createdAt":  "2021-11-19T23:34:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-11-19T23:34:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46Flxq",
                                           "createdAt":  "2021-11-19T23:47:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "RobertHenry6bev",
                                           "body":  "\r\narea-Infrastructure-coreclr\r\n@agocke",
                                           "updatedAt":  "2021-11-19T23:47:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46Fwk0",
                                           "createdAt":  "2021-11-20T03:56:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\n\nRunning on Ubuntu 21.10\r\nThe help output of build.sh says:\r\n * Build CoreCLR for Linux x64 using extra compiler flags (-fstack-clash-protection).\r\nEXTRA_CFLAGS=-fstack-clash-protection EXTRA_CXXFLAGS=-fstack-clash-protection ./build.sh clr\r\n\r\nBut this doesn\u0027t work.\r\n\r\nThe only(?) place EXTRA_CFLAGS/EXTRA_CXXFLAGS is used is in eng/native/build-commons.sh where it is exposed in the environment as CFLAGS/CXXFLAGS for an invocation of cmake.\r\n\r\nBut, empirically, its the invocation of cmake in eng/native/gen-buildsys.sh that matters.  If CFLAGS/CXXFLAGS are set to EXTRA_CFLAGS/EXTRA_CXXFLAGS then it seems that these flags are acted upon as desired.\n\n### Reproduction Steps\n\nexport EXTRA_CFLAGS=-CHOKE_ON_THIS ; bash build.sh .....\r\n\r\nand no invocation of the C/CXX compiler fails, since no invocation is given a command line with -CHOKE_ON_THIS.\n\n### Expected behavior\n\nclang should be invoked with all fhe flags enumerated in EXTRA_CFLAGS/EXTRA_CXXFLAGS.  run ps avx | grep clang and see that the desired flags are not there.\n\n### Actual behavior\n\nattempting to pass bogus flags to the C/C++ compilers results in no build errors.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\nEdit source for eng/native/gen-buildsys.sh to\r\n  export CFLAGS=$EXTRA_CFLAGS\r\nexport CXXFLAGS=$EXTRA_CXXFLAGS\r\nbefore the invocation of $cmake_command near the end\n\n### Configuration\n\nubuntu linux 21.10 x86_64 host\r\nclang-10 ... clang-13 \n\n### Other information\n\n_No response_\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eRobertHenry6bev\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-11-20T03:56:57Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Build system not sensitive to EXTRA_CFLAGS and EXTRA_CXXFLAGS",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/66562",
        "createdAt":  "2022-03-14T00:16:33Z",
        "number":  66562,
        "author":  "vindicatorr",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC0F6Ww==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "alensiljak",
                                            "createdAt":  "2023-11-19T20:05:50Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2023-08-15T23:27:39Z",
        "body":  "### Description\r\n\r\nThe documentation and script for cross-compiling Android seems to be out of date.\r\n\r\n### Reproduction Steps\r\n\r\n$ NDK_DIR=\"\u003cpath_to\u003e/23.1.7779620/\" \\\\\r\n__lldb_Dir=\"\u003cpath_to\u003e/23.1.7779620/toolchains/llvm\" \\\\\r\nPATH=\"\u003cpath_to\u003e/23.1.7779620/toolchains/llvm/prebuilt/linux-x86_64/python3/bin/python3.9:$PATH\" \\\\\r\n./eng/common/cross/build-android-rootfs.sh arm64 31\r\n\r\n### Expected behavior\r\n\r\nBuild on Arch Linux\r\n\r\n### Actual behavior\r\n\r\nTarget API level: 31\r\nTarget architecture: arm64\r\nNDK location: \u003cpath_to\u003e/23.1.7779620/\r\nTarget Toolchain location: \u003cpath_to\u003e/runtime/.tools/android-rootfs/android-ndk-r21\r\nDownload dependencies...\r\ncp: cannot stat \u0027\u003cpath_to\u003e/runtime/.tools/android-rootfs/tmp/arm64//data/data/com.termux/files/usr/*\u0027: No such file or directory\r\n\r\n### Regression?\r\n\r\n_No response_\r\n\r\n### Known Workarounds\r\n\r\n_No response_\r\n\r\n### Configuration\r\n\r\nx64\r\nArch Linux\r\n\r\n### Other information\r\n\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/docs/workflow/building/coreclr/android.md?plain=1#L17\r\n`cross/build-android-rootfs.sh`\r\n\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L68\r\nIs this not part of ndk (23.1.7779620/toolchains/llvm/prebuilt/linux-x86_64/bin/lldb)?\r\nIf this is the same kind of lldb, then I think it should just reference this if `NDK_DIR` is set.\r\n\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L110\r\n`https://termux.net/dists/stable/main/binary-aarch64/Packages` results in `{\"code\":\"PAGE_NOT_FOUND\",\"message\":\"Page not found\"}`\r\nIf the only packages that are needed are:\r\n```\r\n__AndroidPackages=\"libicu\"\r\n__AndroidPackages+=\" libandroid-glob\"\r\n__AndroidPackages+=\" liblzma\"\r\n__AndroidPackages+=\" krb5\"\r\n__AndroidPackages+=\" openssl\"\r\n```\r\n... is there any reason why the sources can\u0027t be downloaded and just built along with the rest of it? What does Termex end up offering instead?\r\n\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L115\r\nWith `dpkg`, I\u0027m guessing the script isn\u0027t meant for Arch Linux users. It would be good to have a \"check\" at the start of the script to determine if it should even continue.\r\n\r\nEDIT0:\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L68\r\nI also commented out this line since I set the environment variable for it (IF it\u0027s supposed to work like that). I\u0027m now going to go about manually doing the `sysroot` stuff, and then run the `build.sh` that the script shows at the bottom.\r\n\r\nEDIT1:\r\nhttps://github.com/termux/termux-packages/wiki/Package-Management\r\nSo maybe `https://packages.termux.org/apt/termux-main/dists/stable/main/binary-aarch64/Packages` now?\r\n\r\nEDIT2:\r\nI\u0027m seeing\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L17\r\nseem to counter with\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L58\r\n`cross` vs `.tools`\r\nIn addition to\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L8\r\nwhere it looks like it should be `echo .` //Note the space.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOR-z5Xw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc4_jSuW",
                                           "createdAt":  "2022-03-14T00:16:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2022-03-14T00:16:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_lhxX",
                                           "createdAt":  "2022-03-14T13:39:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\r\n\r\nThe documentation and script for cross-compiling Android seems to be out of date.\r\n\r\n### Reproduction Steps\r\n\r\n$ NDK_DIR=\"\u003cpath_to\u003e/23.1.7779620/\" \\\\\r\n__lldb_Dir=\"\u003cpath_to\u003e/23.1.7779620/toolchains/llvm\" \\\\\r\nPATH=\"\u003cpath_to\u003e/23.1.7779620/toolchains/llvm/prebuilt/linux-x86_64/python3/bin/python3.9:$PATH\" \\\\\r\n./eng/common/cross/build-android-rootfs.sh arm64 31\r\n\r\n### Expected behavior\r\n\r\nBuild on Arch Linux\r\n\r\n### Actual behavior\r\n\r\nTarget API level: 31\r\nTarget architecture: arm64\r\nNDK location: \u003cpath_to\u003e/23.1.7779620/\r\nTarget Toolchain location: \u003cpath_to\u003e/runtime/.tools/android-rootfs/android-ndk-r21\r\nDownload dependencies...\r\ncp: cannot stat \u0027\u003cpath_to\u003e/runtime/.tools/android-rootfs/tmp/arm64//data/data/com.termux/files/usr/*\u0027: No such file or directory\r\n\r\n### Regression?\r\n\r\n_No response_\r\n\r\n### Known Workarounds\r\n\r\n_No response_\r\n\r\n### Configuration\r\n\r\nx64\r\nArch Linux\r\n\r\n### Other information\r\n\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/docs/workflow/building/coreclr/android.md?plain=1#L17\r\n`cross/build-android-rootfs.sh`\r\n\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L68\r\nIs this not part of ndk (23.1.7779620/toolchains/llvm/prebuilt/linux-x86_64/bin/lldb)?\r\nIf this is the same kind of lldb, then I think it should just reference this if `NDK_DIR` is set.\r\n\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L110\r\n`https://termux.net/dists/stable/main/binary-aarch64/Packages` results in `{\"code\":\"PAGE_NOT_FOUND\",\"message\":\"Page not found\"}`\r\nIf the only packages that are needed are:\r\n```\r\n__AndroidPackages=\"libicu\"\r\n__AndroidPackages+=\" libandroid-glob\"\r\n__AndroidPackages+=\" liblzma\"\r\n__AndroidPackages+=\" krb5\"\r\n__AndroidPackages+=\" openssl\"\r\n```\r\n... is there any reason why the sources can\u0027t be downloaded and just built along with the rest of it? What does Termex end up offering instead?\r\n\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L115\r\nWith `dpkg`, I\u0027m guessing the script isn\u0027t meant for Arch Linux users. It would be good to have a \"check\" at the start of the script to determine if it should even continue.\r\n\r\nEDIT0:\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L68\r\nI also commented out this line since I set the environment variable for it (IF it\u0027s supposed to work like that). I\u0027m now going to go about manually doing the `sysroot` stuff, and then run the `build.sh` that the script shows at the bottom.\r\n\r\nEDIT1:\r\nhttps://github.com/termux/termux-packages/wiki/Package-Management\r\nSo maybe `https://packages.termux.org/apt/termux-main/dists/stable/main/binary-aarch64/Packages` now?\r\n\r\nEDIT2:\r\nI\u0027m seeing\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L17\r\nseem to counter with\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L58\r\n`cross` vs `.tools`\r\nIn addition to\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L8\r\nwhere it looks like it should be `echo .` //Note the space.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003evindicatorr\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-03-14T13:39:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_nxn8",
                                           "createdAt":  "2022-03-14T23:13:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@vindicatorr the Android rootfs generation and runtime build was a best effort thing at a time in the past. It is neither maintained nor supported in any way. The android package URLs has been changing a lot in the past, so it keeps breaking from time to time. But fixes from the community are welcome.\r\n\r\nAlso, in general, the script is meant to be used on Ubuntu or Debian only. ",
                                           "updatedAt":  "2022-03-14T23:13:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5F5nlt",
                                           "createdAt":  "2022-07-01T21:43:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @directhex\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\r\n\r\nThe documentation and script for cross-compiling Android seems to be out of date.\r\n\r\n### Reproduction Steps\r\n\r\n$ NDK_DIR=\"\u003cpath_to\u003e/23.1.7779620/\" \\\\\r\n__lldb_Dir=\"\u003cpath_to\u003e/23.1.7779620/toolchains/llvm\" \\\\\r\nPATH=\"\u003cpath_to\u003e/23.1.7779620/toolchains/llvm/prebuilt/linux-x86_64/python3/bin/python3.9:$PATH\" \\\\\r\n./eng/common/cross/build-android-rootfs.sh arm64 31\r\n\r\n### Expected behavior\r\n\r\nBuild on Arch Linux\r\n\r\n### Actual behavior\r\n\r\nTarget API level: 31\r\nTarget architecture: arm64\r\nNDK location: \u003cpath_to\u003e/23.1.7779620/\r\nTarget Toolchain location: \u003cpath_to\u003e/runtime/.tools/android-rootfs/android-ndk-r21\r\nDownload dependencies...\r\ncp: cannot stat \u0027\u003cpath_to\u003e/runtime/.tools/android-rootfs/tmp/arm64//data/data/com.termux/files/usr/*\u0027: No such file or directory\r\n\r\n### Regression?\r\n\r\n_No response_\r\n\r\n### Known Workarounds\r\n\r\n_No response_\r\n\r\n### Configuration\r\n\r\nx64\r\nArch Linux\r\n\r\n### Other information\r\n\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/docs/workflow/building/coreclr/android.md?plain=1#L17\r\n`cross/build-android-rootfs.sh`\r\n\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L68\r\nIs this not part of ndk (23.1.7779620/toolchains/llvm/prebuilt/linux-x86_64/bin/lldb)?\r\nIf this is the same kind of lldb, then I think it should just reference this if `NDK_DIR` is set.\r\n\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L110\r\n`https://termux.net/dists/stable/main/binary-aarch64/Packages` results in `{\"code\":\"PAGE_NOT_FOUND\",\"message\":\"Page not found\"}`\r\nIf the only packages that are needed are:\r\n```\r\n__AndroidPackages=\"libicu\"\r\n__AndroidPackages+=\" libandroid-glob\"\r\n__AndroidPackages+=\" liblzma\"\r\n__AndroidPackages+=\" krb5\"\r\n__AndroidPackages+=\" openssl\"\r\n```\r\n... is there any reason why the sources can\u0027t be downloaded and just built along with the rest of it? What does Termex end up offering instead?\r\n\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L115\r\nWith `dpkg`, I\u0027m guessing the script isn\u0027t meant for Arch Linux users. It would be good to have a \"check\" at the start of the script to determine if it should even continue.\r\n\r\nEDIT0:\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L68\r\nI also commented out this line since I set the environment variable for it (IF it\u0027s supposed to work like that). I\u0027m now going to go about manually doing the `sysroot` stuff, and then run the `build.sh` that the script shows at the bottom.\r\n\r\nEDIT1:\r\nhttps://github.com/termux/termux-packages/wiki/Package-Management\r\nSo maybe `https://packages.termux.org/apt/termux-main/dists/stable/main/binary-aarch64/Packages` now?\r\n\r\nEDIT2:\r\nI\u0027m seeing\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L17\r\nseem to counter with\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L58\r\n`cross` vs `.tools`\r\nIn addition to\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L8\r\nwhere it looks like it should be `echo .` //Note the space.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003evindicatorr\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`untriaged`, `area-Infrastructure-mono`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-07-01T21:43:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GHVQa",
                                           "createdAt":  "2022-07-06T14:57:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "directhex",
                                           "body":  "Okay, this is an older community effort to produce a CoreCLR JIT on Android. I think @am11 may have views on it, but I don\u0027t know much about it.",
                                           "updatedAt":  "2022-07-06T14:57:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GR2kJ",
                                           "createdAt":  "2022-07-08T14:59:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCl0dPQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2022-07-08T15:03:58Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@directhex this was not just JIT, but the whole runtime running on Android under Termux. As I\u0027ve mentioned above, it was brought to functional state for both arm and arm64 long time ago (long time before mono was in the runtime repo) by several community members with my help. But it has never been officially supported. Things mostly just worked due to the fact that the Termux basically mostly behaves like a regular Linux. The problem with the Termux has always been that the native libraries package URLs format / subpath change occasionally. So the rootfs building script `eng/common/cross/build-android-rootfs.sh` needs to be updated each time someone wants to build the rootfs and runtime on top of it.",
                                           "updatedAt":  "2022-07-08T14:59:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GR-Qh",
                                           "createdAt":  "2022-07-08T15:28:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "The setup in `build-android-rootfs.sh` is indeed something which can be improved and incorporated in unified `build-rootfs.sh`. This setup goes hand-in-hand with [cmake toolschain file](https://cmake.org/cmake/help/book/mastering-cmake/chapter/Cross%20Compiling%20With%20CMake.html#toolchain-files) (`eng/common/cross/toolchain.cmake`) with rest of our cross build matrix (`./build.sh -cross -os ...`). When it was last updated, I was able to build clr+mono+host+libs subsets with it. Things have changed a lot since, as @janvorli mentioned, termux URLs changed as well as the fact that we now explicitly set `-p:CrossBuild=false` for Android and disregard `-cross` argument because of the competing (manual) NDK setup used by mono.\r\n\r\nIt would be nice to consolidate these two parallel setups for Android. My personal preference is to update `build-rootfs.sh` and use `-cross` with Android, so it is easier to maintain (as we already have multiple platforms on that plan, including linux-bioinic). I opened https://github.com/dotnet/runtime/issues/56622 for discussion.",
                                           "updatedAt":  "2022-07-08T15:28:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5H7Plf",
                                           "createdAt":  "2022-08-05T18:04:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\r\n\r\nThe documentation and script for cross-compiling Android seems to be out of date.\r\n\r\n### Reproduction Steps\r\n\r\n$ NDK_DIR=\"\u003cpath_to\u003e/23.1.7779620/\" \\\\\r\n__lldb_Dir=\"\u003cpath_to\u003e/23.1.7779620/toolchains/llvm\" \\\\\r\nPATH=\"\u003cpath_to\u003e/23.1.7779620/toolchains/llvm/prebuilt/linux-x86_64/python3/bin/python3.9:$PATH\" \\\\\r\n./eng/common/cross/build-android-rootfs.sh arm64 31\r\n\r\n### Expected behavior\r\n\r\nBuild on Arch Linux\r\n\r\n### Actual behavior\r\n\r\nTarget API level: 31\r\nTarget architecture: arm64\r\nNDK location: \u003cpath_to\u003e/23.1.7779620/\r\nTarget Toolchain location: \u003cpath_to\u003e/runtime/.tools/android-rootfs/android-ndk-r21\r\nDownload dependencies...\r\ncp: cannot stat \u0027\u003cpath_to\u003e/runtime/.tools/android-rootfs/tmp/arm64//data/data/com.termux/files/usr/*\u0027: No such file or directory\r\n\r\n### Regression?\r\n\r\n_No response_\r\n\r\n### Known Workarounds\r\n\r\n_No response_\r\n\r\n### Configuration\r\n\r\nx64\r\nArch Linux\r\n\r\n### Other information\r\n\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/docs/workflow/building/coreclr/android.md?plain=1#L17\r\n`cross/build-android-rootfs.sh`\r\n\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L68\r\nIs this not part of ndk (23.1.7779620/toolchains/llvm/prebuilt/linux-x86_64/bin/lldb)?\r\nIf this is the same kind of lldb, then I think it should just reference this if `NDK_DIR` is set.\r\n\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L110\r\n`https://termux.net/dists/stable/main/binary-aarch64/Packages` results in `{\"code\":\"PAGE_NOT_FOUND\",\"message\":\"Page not found\"}`\r\nIf the only packages that are needed are:\r\n```\r\n__AndroidPackages=\"libicu\"\r\n__AndroidPackages+=\" libandroid-glob\"\r\n__AndroidPackages+=\" liblzma\"\r\n__AndroidPackages+=\" krb5\"\r\n__AndroidPackages+=\" openssl\"\r\n```\r\n... is there any reason why the sources can\u0027t be downloaded and just built along with the rest of it? What does Termex end up offering instead?\r\n\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L115\r\nWith `dpkg`, I\u0027m guessing the script isn\u0027t meant for Arch Linux users. It would be good to have a \"check\" at the start of the script to determine if it should even continue.\r\n\r\nEDIT0:\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L68\r\nI also commented out this line since I set the environment variable for it (IF it\u0027s supposed to work like that). I\u0027m now going to go about manually doing the `sysroot` stuff, and then run the `build.sh` that the script shows at the bottom.\r\n\r\nEDIT1:\r\nhttps://github.com/termux/termux-packages/wiki/Package-Management\r\nSo maybe `https://packages.termux.org/apt/termux-main/dists/stable/main/binary-aarch64/Packages` now?\r\n\r\nEDIT2:\r\nI\u0027m seeing\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L17\r\nseem to counter with\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L58\r\n`cross` vs `.tools`\r\nIn addition to\r\nhttps://github.com/dotnet/runtime/blob/51b90cc60b8528c77829ef18481b0f58db812776/eng/common/cross/build-android-rootfs.sh#L8\r\nwhere it looks like it should be `echo .` //Note the space.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003evindicatorr\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`, `area-Infrastructure-mono`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e7.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-08-05T18:04:17Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "Android Build Needs To Be Updated - Doc And Termex",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/67646",
        "createdAt":  "2022-04-06T13:01:05Z",
        "number":  67646,
        "author":  "Wraith2",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-06-06T20:33:40Z",
        "body":  "### Description\n\nThe Debug build succeeds, restores all the things needed for builds etc. The checked build fails to create nuget packages.\r\nExcept from the end of the log:\r\n\r\n```\r\n...\r\n  \"Computed RID for native build is win-x64\"\r\n  Calling \"E:\\Programming\\csharp7\\runtime\\src\\native\\corehost\\\\..\\..\\..\\eng\\native\\gen-buildsys.cmd \"E:\\Programming\\csharp7\\runtime\\src\\native\\corehost\\\" \"E:/Programming/csharp7/runtime//artifacts/obj/win-x64.Debug/corehost\" vs2022 x64  \"-DCLI_CMAKE_HOST_VER=7.0.0-dev\" \"-DCLI_CMAKE_COMMON_HOST_VER=7.0.0-dev\" \"-DCLI_CMAKE_HOST_FXR_VER=7.0.0-dev\" \"-DCLI_CMAKE_HOST_POLICY_VER=7.0.0-dev\" \"-DCLI_CMAKE_PKG_RID=win-x64\" \"-DCLI_CMAKE_COMMIT_HASH=N/A\" \"-DRUNTIME_FLAVOR=CoreCLR \" \"-DCLI_CMAKE_RESOURCE_DIR=E:\\Programming\\csharp7\\runtime\\\\artifacts\\obj\\win-x64.Debug\\hostResourceFiles\" \"-DCMAKE_BUILD_TYPE=Debug\"\"\r\n  The CMake command line is the same as the last run. Skipping running CMake.\r\n  Commencing build of corehost native components\r\n  [0/1] Install the project...\r\n  -- Install configuration: \"Debug\"\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/PDB/hostfxr.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/hostfxr.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/hostfxr.dll\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/PDB/libhostfxr.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/libhostfxr.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/PDB/hostpolicy.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/hostpolicy.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/hostpolicy.dll\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/PDB/apphost.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/apphost.exe\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/PDB/dotnet.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/dotnet.exe\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/coreclr_delegates.h\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/hostfxr.h\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/nethost.h\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/PDB/nethost.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/nethost.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/nethost.dll\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/PDB/libnethost.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/libnethost.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/PDB/test_fx_ver.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/test_fx_ver.exe\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/PDB/mockcoreclr.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/mockcoreclr.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/mockcoreclr.dll\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/PDB/mockhostfxr_2_2.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/mockhostfxr_2_2.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/mockhostfxr_2_2.dll\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/PDB/mockhostfxr_5_0.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/mockhostfxr_5_0.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/mockhostfxr_5_0.dll\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/PDB/mockhostpolicy.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/mockhostpolicy.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/mockhostpolicy.dll\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/PDB/nativehost.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/nativehost.exe\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/PDB/comsxs.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/comsxs.exe\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/PDB/comsxs.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/comsxs.exe\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/PDB/ijw.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/ijw.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/ijw.dll\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/Server.tlb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/Nested.tlb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/PDB/comhost.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/comhost.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/comhost.dll\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/PDB/ijwhost.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/ijwhost.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/ijwhost.dll\r\n  Done building Native components\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error : Error when creating nuget lib package from E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\specs\\runtime.win-x64.Microsoft.NETCore.DotNetAppHost.nuspec. NuGet.Packaging.Core.PackagingException: File not found: \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\win-x64.Checked\\corehost\\apphost.exe\u0027. [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetAppHost\\Microsoft.NETCore.DotNetAppHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetAppHost\\Microsoft.NETCore.DotNetAppHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetAppHost\\Microsoft.NETCore.DotNetAppHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 253 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetAppHost\\Microsoft.NETCore.DotNetAppHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error : Error when creating nuget lib package from E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\specs\\runtime.win-x64.Microsoft.NETCore.DotNetHost.nuspec. NuGet.Packaging.Core.PackagingException: File not found: \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\win-x64.Checked\\corehost\\dotnet.exe\u0027. [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHost\\Microsoft.NETCore.DotNetHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHost\\Microsoft.NETCore.DotNetHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHost\\Microsoft.NETCore.DotNetHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 253 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHost\\Microsoft.NETCore.DotNetHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error : Error when creating nuget packed package from E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\specs\\runtime.win-x64.Microsoft.NETCore.DotNetAppHost.nuspec. NuGet.Packaging.Core.PackagingException: File not found: \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\win-x64.Checked\\corehost\\apphost.exe\u0027. [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetAppHost\\Microsoft.NETCore.DotNetAppHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetAppHost\\Microsoft.NETCore.DotNetAppHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetAppHost\\Microsoft.NETCore.DotNetAppHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 253 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetAppHost\\Microsoft.NETCore.DotNetAppHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error : Error when creating nuget packed package from E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\specs\\runtime.win-x64.Microsoft.NETCore.DotNetHost.nuspec. NuGet.Packaging.Core.PackagingException: File not found: \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\win-x64.Checked\\corehost\\dotnet.exe\u0027. [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHost\\Microsoft.NETCore.DotNetHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHost\\Microsoft.NETCore.DotNetHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHost\\Microsoft.NETCore.DotNetHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 253 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHost\\Microsoft.NETCore.DotNetHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error : Error when creating nuget lib package from E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\specs\\runtime.win-x64.Microsoft.NETCore.DotNetHostPolicy.nuspec. NuGet.Packaging.Core.PackagingException: File not found: \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\win-x64.Checked\\corehost\\hostpolicy.dll\u0027. [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostPolicy\\Microsoft.NETCore.DotNetHostPolicy.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostPolicy\\Microsoft.NETCore.DotNetHostPolicy.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostPolicy\\Microsoft.NETCore.DotNetHostPolicy.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 253 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostPolicy\\Microsoft.NETCore.DotNetHostPolicy.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error : Error when creating nuget lib package from E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\specs\\runtime.win-x64.Microsoft.NETCore.DotNetHostResolver.nuspec. NuGet.Packaging.Core.PackagingException: File not found: \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\win-x64.Checked\\corehost\\hostfxr.dll\u0027. [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostResolver\\Microsoft.NETCore.DotNetHostResolver.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostResolver\\Microsoft.NETCore.DotNetHostResolver.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostResolver\\Microsoft.NETCore.DotNetHostResolver.pkgproj]C:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 253 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostResolver\\Microsoft.NETCore.DotNetHostResolver.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error : Error when creating nuget packed package from E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\specs\\runtime.win-x64.Microsoft.NETCore.DotNetHostResolver.nuspec. NuGet.Packaging.Core.PackagingException: File not found: \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\win-x64.Checked\\corehost\\hostfxr.dll\u0027. [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostResolver\\Microsoft.NETCore.DotNetHostResolver.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostResolver\\Microsoft.NETCore.DotNetHostResolver.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostResolver\\Microsoft.NETCore.DotNetHostResolver.pkgproj]C:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 253 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostResolver\\Microsoft.NETCore.DotNetHostResolver.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error : Error when creating nuget packed package from E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\specs\\runtime.win-x64.Microsoft.NETCore.DotNetHostPolicy.nuspec. NuGet.Packaging.Core.PackagingException: File not found: \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\win-x64.Checked\\corehost\\hostpolicy.dll\u0027. [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostPolicy\\Microsoft.NETCore.DotNetHostPolicy.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostPolicy\\Microsoft.NETCore.DotNetHostPolicy.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostPolicy\\Microsoft.NETCore.DotNetHostPolicy.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 253 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostPolicy\\Microsoft.NETCore.DotNetHostPolicy.pkgproj]\r\n  Microsoft.NETCore.DotNetAppHost -\u003e E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\Shipping\\Microsoft.NETCore.DotNetAppHost.7.0.0-dev.nupkg\r\n  Microsoft.NETCore.DotNetHostPolicy -\u003e E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\Shipping\\Microsoft.NETCore.DotNetHostPolicy.7.0.0-dev.nupkg\r\n  Microsoft.NETCore.DotNetHostResolver -\u003e E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\Shipping\\Microsoft.NETCore.DotNetHostResolver.7.0.0-dev.nupkg\r\n  Microsoft.NETCore.DotNetHost -\u003e E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\Shipping\\Microsoft.NETCore.DotNetHost.7.0.0-dev.nupkg\r\n\r\nBuild FAILED.\r\n```\n\n### Reproduction Steps\n\ncommands to reproduce from runtime root:\r\n`git clean -xdf`\r\n`build \u0026\u0026 build -c Checked`\n\n### Expected behavior\n\nBuild should succeed.\n\n### Actual behavior\n\nBuild fails.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHORGuBWw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5A-8Sl",
                                           "createdAt":  "2022-04-06T13:01:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @vitek-karas, @agocke, @vsadov\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\n\nThe Debug build succeeds, restores all the things needed for builds etc. The checked build fails to create nuget packages.\r\nExcept from the end of the log:\r\n\r\n```\r\n...\r\n  \"Computed RID for native build is win-x64\"\r\n  Calling \"E:\\Programming\\csharp7\\runtime\\src\\native\\corehost\\\\..\\..\\..\\eng\\native\\gen-buildsys.cmd \"E:\\Programming\\csharp7\\runtime\\src\\native\\corehost\\\" \"E:/Programming/csharp7/runtime//artifacts/obj/win-x64.Debug/corehost\" vs2022 x64  \"-DCLI_CMAKE_HOST_VER=7.0.0-dev\" \"-DCLI_CMAKE_COMMON_HOST_VER=7.0.0-dev\" \"-DCLI_CMAKE_HOST_FXR_VER=7.0.0-dev\" \"-DCLI_CMAKE_HOST_POLICY_VER=7.0.0-dev\" \"-DCLI_CMAKE_PKG_RID=win-x64\" \"-DCLI_CMAKE_COMMIT_HASH=N/A\" \"-DRUNTIME_FLAVOR=CoreCLR \" \"-DCLI_CMAKE_RESOURCE_DIR=E:\\Programming\\csharp7\\runtime\\\\artifacts\\obj\\win-x64.Debug\\hostResourceFiles\" \"-DCMAKE_BUILD_TYPE=Debug\"\"\r\n  The CMake command line is the same as the last run. Skipping running CMake.\r\n  Commencing build of corehost native components\r\n  [0/1] Install the project...\r\n  -- Install configuration: \"Debug\"\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/PDB/hostfxr.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/hostfxr.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/hostfxr.dll\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/PDB/libhostfxr.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/libhostfxr.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/PDB/hostpolicy.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/hostpolicy.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/hostpolicy.dll\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/PDB/apphost.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/apphost.exe\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/PDB/dotnet.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/dotnet.exe\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/coreclr_delegates.h\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/hostfxr.h\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/nethost.h\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/PDB/nethost.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/nethost.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/nethost.dll\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/PDB/libnethost.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/libnethost.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/PDB/test_fx_ver.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/test_fx_ver.exe\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/PDB/mockcoreclr.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/mockcoreclr.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/mockcoreclr.dll\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/PDB/mockhostfxr_2_2.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/mockhostfxr_2_2.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/mockhostfxr_2_2.dll\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/PDB/mockhostfxr_5_0.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/mockhostfxr_5_0.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/mockhostfxr_5_0.dll\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/PDB/mockhostpolicy.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/mockhostpolicy.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/mockhostpolicy.dll\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/PDB/nativehost.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/nativehost.exe\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/PDB/comsxs.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/comsxs.exe\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/PDB/comsxs.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/comsxs.exe\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/PDB/ijw.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/ijw.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/ijw.dll\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/Server.tlb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/Nested.tlb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/PDB/comhost.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/comhost.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/comhost.dll\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/PDB/ijwhost.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/ijwhost.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/ijwhost.dll\r\n  Done building Native components\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error : Error when creating nuget lib package from E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\specs\\runtime.win-x64.Microsoft.NETCore.DotNetAppHost.nuspec. NuGet.Packaging.Core.PackagingException: File not found: \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\win-x64.Checked\\corehost\\apphost.exe\u0027. [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetAppHost\\Microsoft.NETCore.DotNetAppHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetAppHost\\Microsoft.NETCore.DotNetAppHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetAppHost\\Microsoft.NETCore.DotNetAppHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 253 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetAppHost\\Microsoft.NETCore.DotNetAppHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error : Error when creating nuget lib package from E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\specs\\runtime.win-x64.Microsoft.NETCore.DotNetHost.nuspec. NuGet.Packaging.Core.PackagingException: File not found: \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\win-x64.Checked\\corehost\\dotnet.exe\u0027. [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHost\\Microsoft.NETCore.DotNetHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHost\\Microsoft.NETCore.DotNetHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHost\\Microsoft.NETCore.DotNetHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 253 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHost\\Microsoft.NETCore.DotNetHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error : Error when creating nuget packed package from E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\specs\\runtime.win-x64.Microsoft.NETCore.DotNetAppHost.nuspec. NuGet.Packaging.Core.PackagingException: File not found: \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\win-x64.Checked\\corehost\\apphost.exe\u0027. [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetAppHost\\Microsoft.NETCore.DotNetAppHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetAppHost\\Microsoft.NETCore.DotNetAppHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetAppHost\\Microsoft.NETCore.DotNetAppHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 253 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetAppHost\\Microsoft.NETCore.DotNetAppHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error : Error when creating nuget packed package from E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\specs\\runtime.win-x64.Microsoft.NETCore.DotNetHost.nuspec. NuGet.Packaging.Core.PackagingException: File not found: \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\win-x64.Checked\\corehost\\dotnet.exe\u0027. [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHost\\Microsoft.NETCore.DotNetHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHost\\Microsoft.NETCore.DotNetHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHost\\Microsoft.NETCore.DotNetHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 253 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHost\\Microsoft.NETCore.DotNetHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error : Error when creating nuget lib package from E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\specs\\runtime.win-x64.Microsoft.NETCore.DotNetHostPolicy.nuspec. NuGet.Packaging.Core.PackagingException: File not found: \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\win-x64.Checked\\corehost\\hostpolicy.dll\u0027. [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostPolicy\\Microsoft.NETCore.DotNetHostPolicy.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostPolicy\\Microsoft.NETCore.DotNetHostPolicy.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostPolicy\\Microsoft.NETCore.DotNetHostPolicy.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 253 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostPolicy\\Microsoft.NETCore.DotNetHostPolicy.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error : Error when creating nuget lib package from E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\specs\\runtime.win-x64.Microsoft.NETCore.DotNetHostResolver.nuspec. NuGet.Packaging.Core.PackagingException: File not found: \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\win-x64.Checked\\corehost\\hostfxr.dll\u0027. [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostResolver\\Microsoft.NETCore.DotNetHostResolver.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostResolver\\Microsoft.NETCore.DotNetHostResolver.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostResolver\\Microsoft.NETCore.DotNetHostResolver.pkgproj]C:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 253 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostResolver\\Microsoft.NETCore.DotNetHostResolver.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error : Error when creating nuget packed package from E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\specs\\runtime.win-x64.Microsoft.NETCore.DotNetHostResolver.nuspec. NuGet.Packaging.Core.PackagingException: File not found: \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\win-x64.Checked\\corehost\\hostfxr.dll\u0027. [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostResolver\\Microsoft.NETCore.DotNetHostResolver.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostResolver\\Microsoft.NETCore.DotNetHostResolver.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostResolver\\Microsoft.NETCore.DotNetHostResolver.pkgproj]C:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 253 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostResolver\\Microsoft.NETCore.DotNetHostResolver.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error : Error when creating nuget packed package from E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\specs\\runtime.win-x64.Microsoft.NETCore.DotNetHostPolicy.nuspec. NuGet.Packaging.Core.PackagingException: File not found: \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\win-x64.Checked\\corehost\\hostpolicy.dll\u0027. [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostPolicy\\Microsoft.NETCore.DotNetHostPolicy.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostPolicy\\Microsoft.NETCore.DotNetHostPolicy.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostPolicy\\Microsoft.NETCore.DotNetHostPolicy.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 253 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostPolicy\\Microsoft.NETCore.DotNetHostPolicy.pkgproj]\r\n  Microsoft.NETCore.DotNetAppHost -\u003e E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\Shipping\\Microsoft.NETCore.DotNetAppHost.7.0.0-dev.nupkg\r\n  Microsoft.NETCore.DotNetHostPolicy -\u003e E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\Shipping\\Microsoft.NETCore.DotNetHostPolicy.7.0.0-dev.nupkg\r\n  Microsoft.NETCore.DotNetHostResolver -\u003e E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\Shipping\\Microsoft.NETCore.DotNetHostResolver.7.0.0-dev.nupkg\r\n  Microsoft.NETCore.DotNetHost -\u003e E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\Shipping\\Microsoft.NETCore.DotNetHost.7.0.0-dev.nupkg\r\n\r\nBuild FAILED.\r\n```\n\n### Reproduction Steps\n\ncommands to reproduce from runtime root:\r\n`git clean -xdf`\r\n`build \u0026\u0026 build -c Checked`\n\n### Expected behavior\n\nBuild should succeed.\n\n### Actual behavior\n\nBuild fails.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eWraith2\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Host`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-04-06T13:01:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5A_MdY",
                                           "createdAt":  "2022-04-06T14:00:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vitek-karas",
                                           "body":  "@VSadov @jkoritzinsky would one of you know something about this? It seems that when the \"Checked\" configuration is specified, we build the host as \"Debug\", but then packaging expects to find it in \"Checked\" directories.\r\n\r\n@Wraith2 just curious what is the scenario to build everything as \"Checked\"? I agree that it should either work or explicitly fail, but it would be interesting to know what you want to use the output for...",
                                           "updatedAt":  "2022-04-06T14:00:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5A_1js",
                                           "createdAt":  "2022-04-06T16:38:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Wraith2",
                                           "body":  "I tinker with the jit codebase and a checked build is needed for spmi. building the entire repo is easier than trying to work out and mash together the individual parts that are needed from debug and release builds.",
                                           "updatedAt":  "2022-04-06T16:38:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5A_3Zt",
                                           "createdAt":  "2022-04-06T16:46:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "\u003e I tinker with the jit codebase and a checked build is needed for spmi. \r\n\r\nFor that prehaps it\u0027s better to use checked only for runtime configuration and debug (or release) for everything else. i.e.\r\n\r\n`build -c Debug -rc Checked` or `build -c Release -rc Checked`",
                                           "updatedAt":  "2022-04-06T16:46:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5A_5o3",
                                           "createdAt":  "2022-04-06T16:57:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Wraith2",
                                           "body":  "I\u0027ll give that a try. \r\n\r\nThe original issue still remains though, something broke those packages in the last week which means changes are being made that break stuff and aren\u0027t being seen.",
                                           "updatedAt":  "2022-04-06T16:57:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5A_-_f",
                                           "createdAt":  "2022-04-06T17:19:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCWpMFg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "CONFUSED",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2022-04-07T00:43:46Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Wraith2",
                                           "body":  "Using `build -c Release -rc Checked` also has problems:\r\n\r\n```\r\n...\r\n  E:\\Programming\\csharp7\\runtime\\artifacts\\obj\\Microsoft.NETCore.App.Host\\Release\\net7.0\\win-x64\\output/ -\u003e E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Release\\Shipping\\/dotnet-apphost-pack-7.0.0-dev-win-x64.zip\r\n  Successfully created package \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Release\\Shipping\\Microsoft.NETCore.App.Host.win-x64.7.0.0-dev.nupkg\u0027.\r\n  Successfully created package \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Release\\Shipping\\Microsoft.NETCore.App.Host.win-x64.7.0.0-dev.symbols.nupkg\u0027.\r\n  Microsoft.NETCore.App.Crossgen2 -\u003e\r\n  Zipping directory \"E:\\Programming\\csharp7\\runtime\\artifacts\\obj\\Microsoft.NETCore.App.Crossgen2\\Release\\net7.0\\win-x64\\output\\\" to \"E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Release\\Shipping\\dotnet-crossgen2-7.0.0-dev-win-x64.zip\".\r\n  E:\\Programming\\csharp7\\runtime\\artifacts\\obj\\Microsoft.NETCore.App.Crossgen2\\Release\\net7.0\\win-x64\\output/ -\u003e E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Release\\Shipping\\/dotnet-crossgen2-7.0.0-dev-win-x64.zip\r\n  Successfully created package \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Release\\Shipping\\Microsoft.NETCore.App.Crossgen2.win-x64.7.0.0-dev.nupkg\u0027.\r\nC:\\Program Files\\dotnet\\sdk\\6.0.102\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5118: File \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\coreclr\\windows.x64.Checked\\PDB\\crossgen2.pdb\u0027 is not added because the package already contains file \u0027runtimes\\win-x64\\lib\\net7.0\\..\\..\\..\\..\\tools\\crossgen2.pdb\u0027 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\sfx\\Microsoft.NETCore.App\\Microsoft.NETCore.App.Crossgen2.sfxproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.102\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5118: File \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\coreclr\\windows.x64.Checked\\PDB\\ILCompiler.DependencyAnalysisFramework.pdb\u0027 is not added because the package already contains file \u0027runtimes\\win-x64\\lib\\net7.0\\..\\..\\..\\..\\tools\\ILCompiler.DependencyAnalysisFramework.pdb\u0027 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\sfx\\Microsoft.NETCore.App\\Microsoft.NETCore.App.Crossgen2.sfxproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.102\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5118: File \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\coreclr\\windows.x64.Checked\\PDB\\ILCompiler.Diagnostics.pdb\u0027 is not added because the package already contains file \u0027runtimes\\win-x64\\lib\\net7.0\\..\\..\\..\\..\\tools\\ILCompiler.Diagnostics.pdb\u0027 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\sfx\\Microsoft.NETCore.App\\Microsoft.NETCore.App.Crossgen2.sfxproj]C:\\Program Files\\dotnet\\sdk\\6.0.102\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5118: File \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\coreclr\\windows.x64.Checked\\PDB\\ILCompiler.ReadyToRun.pdb\u0027 is not added because the package already contains file \u0027runtimes\\win-x64\\lib\\net7.0\\..\\..\\..\\..\\tools\\ILCompiler.ReadyToRun.pdb\u0027 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\sfx\\Microsoft.NETCore.App\\Microsoft.NETCore.App.Crossgen2.sfxproj]\r\nC:\\Program Files\\dotnet\\sdk\\6.0.102\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(221,5): error NU5118: File \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\coreclr\\windows.x64.Checked\\PDB\\ILCompiler.TypeSystem.pdb\u0027 is not added because the package already contains file \u0027runtimes\\win-x64\\lib\\net7.0\\..\\..\\..\\..\\tools\\ILCompiler.TypeSystem.pdb\u0027 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\sfx\\Microsoft.NETCore.App\\Microsoft.NETCore.App.Crossgen2.sfxproj]\r\n  Successfully created package \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Release\\Shipping\\Microsoft.NETCore.App.Crossgen2.win-x64.7.0.0-dev.symbols.nupkg\u0027.\r\n```",
                                           "updatedAt":  "2022-04-06T17:20:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5BGYRK",
                                           "createdAt":  "2022-04-07T20:54:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "elinor-fung",
                                           "body":  "If it wasn\u0027t from a completely clean build, the `NU5118` errors might be https://github.com/dotnet/runtime/issues/62918.",
                                           "updatedAt":  "2022-04-07T20:54:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5BGZvl",
                                           "createdAt":  "2022-04-07T21:02:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Wraith2",
                                           "body":  "\u003e If it wasn\u0027t from a completely clean build, the `NU5118` errors might be #62918.\r\n\r\nPerhaps, but in order for a release or checked build to succeed you must first run a clean debug build so there is no ability to run a clean checked build. However if it\u0027s fixed under another issue that\u0027s ok.",
                                           "updatedAt":  "2022-04-07T21:02:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Ea4Fb",
                                           "createdAt":  "2022-06-06T20:33:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\n\nThe Debug build succeeds, restores all the things needed for builds etc. The checked build fails to create nuget packages.\r\nExcept from the end of the log:\r\n\r\n```\r\n...\r\n  \"Computed RID for native build is win-x64\"\r\n  Calling \"E:\\Programming\\csharp7\\runtime\\src\\native\\corehost\\\\..\\..\\..\\eng\\native\\gen-buildsys.cmd \"E:\\Programming\\csharp7\\runtime\\src\\native\\corehost\\\" \"E:/Programming/csharp7/runtime//artifacts/obj/win-x64.Debug/corehost\" vs2022 x64  \"-DCLI_CMAKE_HOST_VER=7.0.0-dev\" \"-DCLI_CMAKE_COMMON_HOST_VER=7.0.0-dev\" \"-DCLI_CMAKE_HOST_FXR_VER=7.0.0-dev\" \"-DCLI_CMAKE_HOST_POLICY_VER=7.0.0-dev\" \"-DCLI_CMAKE_PKG_RID=win-x64\" \"-DCLI_CMAKE_COMMIT_HASH=N/A\" \"-DRUNTIME_FLAVOR=CoreCLR \" \"-DCLI_CMAKE_RESOURCE_DIR=E:\\Programming\\csharp7\\runtime\\\\artifacts\\obj\\win-x64.Debug\\hostResourceFiles\" \"-DCMAKE_BUILD_TYPE=Debug\"\"\r\n  The CMake command line is the same as the last run. Skipping running CMake.\r\n  Commencing build of corehost native components\r\n  [0/1] Install the project...\r\n  -- Install configuration: \"Debug\"\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/PDB/hostfxr.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/hostfxr.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/hostfxr.dll\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/PDB/libhostfxr.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/libhostfxr.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/PDB/hostpolicy.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/hostpolicy.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/hostpolicy.dll\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/PDB/apphost.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/apphost.exe\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/PDB/dotnet.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/dotnet.exe\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/coreclr_delegates.h\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/hostfxr.h\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/nethost.h\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/PDB/nethost.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/nethost.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/nethost.dll\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/PDB/libnethost.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/libnethost.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/PDB/test_fx_ver.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/test_fx_ver.exe\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/PDB/mockcoreclr.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/mockcoreclr.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/mockcoreclr.dll\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/PDB/mockhostfxr_2_2.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/mockhostfxr_2_2.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/mockhostfxr_2_2.dll\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/PDB/mockhostfxr_5_0.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/mockhostfxr_5_0.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/mockhostfxr_5_0.dll\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/PDB/mockhostpolicy.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/mockhostpolicy.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/mockhostpolicy.dll\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/PDB/nativehost.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/nativehost.exe\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/PDB/comsxs.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/comsxs.exe\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/PDB/comsxs.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/comsxs.exe\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/PDB/ijw.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/ijw.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/ijw.dll\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/Server.tlb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost_test/Nested.tlb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/PDB/comhost.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/comhost.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/comhost.dll\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/PDB/ijwhost.pdb\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/ijwhost.lib\r\n  -- Up-to-date: E:/Programming/csharp7/runtime/artifacts/bin/win-x64.Debug/corehost/ijwhost.dll\r\n  Done building Native components\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error : Error when creating nuget lib package from E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\specs\\runtime.win-x64.Microsoft.NETCore.DotNetAppHost.nuspec. NuGet.Packaging.Core.PackagingException: File not found: \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\win-x64.Checked\\corehost\\apphost.exe\u0027. [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetAppHost\\Microsoft.NETCore.DotNetAppHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetAppHost\\Microsoft.NETCore.DotNetAppHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetAppHost\\Microsoft.NETCore.DotNetAppHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 253 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetAppHost\\Microsoft.NETCore.DotNetAppHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error : Error when creating nuget lib package from E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\specs\\runtime.win-x64.Microsoft.NETCore.DotNetHost.nuspec. NuGet.Packaging.Core.PackagingException: File not found: \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\win-x64.Checked\\corehost\\dotnet.exe\u0027. [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHost\\Microsoft.NETCore.DotNetHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHost\\Microsoft.NETCore.DotNetHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHost\\Microsoft.NETCore.DotNetHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 253 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHost\\Microsoft.NETCore.DotNetHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error : Error when creating nuget packed package from E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\specs\\runtime.win-x64.Microsoft.NETCore.DotNetAppHost.nuspec. NuGet.Packaging.Core.PackagingException: File not found: \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\win-x64.Checked\\corehost\\apphost.exe\u0027. [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetAppHost\\Microsoft.NETCore.DotNetAppHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetAppHost\\Microsoft.NETCore.DotNetAppHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetAppHost\\Microsoft.NETCore.DotNetAppHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 253 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetAppHost\\Microsoft.NETCore.DotNetAppHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error : Error when creating nuget packed package from E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\specs\\runtime.win-x64.Microsoft.NETCore.DotNetHost.nuspec. NuGet.Packaging.Core.PackagingException: File not found: \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\win-x64.Checked\\corehost\\dotnet.exe\u0027. [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHost\\Microsoft.NETCore.DotNetHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHost\\Microsoft.NETCore.DotNetHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHost\\Microsoft.NETCore.DotNetHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 253 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHost\\Microsoft.NETCore.DotNetHost.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error : Error when creating nuget lib package from E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\specs\\runtime.win-x64.Microsoft.NETCore.DotNetHostPolicy.nuspec. NuGet.Packaging.Core.PackagingException: File not found: \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\win-x64.Checked\\corehost\\hostpolicy.dll\u0027. [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostPolicy\\Microsoft.NETCore.DotNetHostPolicy.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostPolicy\\Microsoft.NETCore.DotNetHostPolicy.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostPolicy\\Microsoft.NETCore.DotNetHostPolicy.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 253 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostPolicy\\Microsoft.NETCore.DotNetHostPolicy.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error : Error when creating nuget lib package from E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\specs\\runtime.win-x64.Microsoft.NETCore.DotNetHostResolver.nuspec. NuGet.Packaging.Core.PackagingException: File not found: \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\win-x64.Checked\\corehost\\hostfxr.dll\u0027. [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostResolver\\Microsoft.NETCore.DotNetHostResolver.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostResolver\\Microsoft.NETCore.DotNetHostResolver.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostResolver\\Microsoft.NETCore.DotNetHostResolver.pkgproj]C:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 253 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostResolver\\Microsoft.NETCore.DotNetHostResolver.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error : Error when creating nuget packed package from E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\specs\\runtime.win-x64.Microsoft.NETCore.DotNetHostResolver.nuspec. NuGet.Packaging.Core.PackagingException: File not found: \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\win-x64.Checked\\corehost\\hostfxr.dll\u0027. [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostResolver\\Microsoft.NETCore.DotNetHostResolver.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostResolver\\Microsoft.NETCore.DotNetHostResolver.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostResolver\\Microsoft.NETCore.DotNetHostResolver.pkgproj]C:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 253 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostResolver\\Microsoft.NETCore.DotNetHostResolver.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error : Error when creating nuget packed package from E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\specs\\runtime.win-x64.Microsoft.NETCore.DotNetHostPolicy.nuspec. NuGet.Packaging.Core.PackagingException: File not found: \u0027E:\\Programming\\csharp7\\runtime\\artifacts\\bin\\win-x64.Checked\\corehost\\hostpolicy.dll\u0027. [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostPolicy\\Microsoft.NETCore.DotNetHostPolicy.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostPolicy\\Microsoft.NETCore.DotNetHostPolicy.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostPolicy\\Microsoft.NETCore.DotNetHostPolicy.pkgproj]\r\nC:\\Users\\Wraith\\.nuget\\packages\\microsoft.dotnet.build.tasks.packaging\\7.0.0-beta.22179.1\\build\\Packaging.targets(1257,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 253 [E:\\Programming\\csharp7\\runtime\\src\\installer\\pkg\\projects\\Microsoft.NETCore.DotNetHostPolicy\\Microsoft.NETCore.DotNetHostPolicy.pkgproj]\r\n  Microsoft.NETCore.DotNetAppHost -\u003e E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\Shipping\\Microsoft.NETCore.DotNetAppHost.7.0.0-dev.nupkg\r\n  Microsoft.NETCore.DotNetHostPolicy -\u003e E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\Shipping\\Microsoft.NETCore.DotNetHostPolicy.7.0.0-dev.nupkg\r\n  Microsoft.NETCore.DotNetHostResolver -\u003e E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\Shipping\\Microsoft.NETCore.DotNetHostResolver.7.0.0-dev.nupkg\r\n  Microsoft.NETCore.DotNetHost -\u003e E:\\Programming\\csharp7\\runtime\\artifacts\\packages\\Checked\\Shipping\\Microsoft.NETCore.DotNetHost.7.0.0-dev.nupkg\r\n\r\nBuild FAILED.\r\n```\n\n### Reproduction Steps\n\ncommands to reproduce from runtime root:\r\n`git clean -xdf`\r\n`build \u0026\u0026 build -c Checked`\n\n### Expected behavior\n\nBuild should succeed.\n\n### Actual behavior\n\nBuild fails.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eWraith2\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-06-06T20:33:40Z"
                                       }
                                   ],
                         "totalCount":  9
                     },
        "title":  "Build: runtime checked build fails package creation",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/68060",
        "createdAt":  "2022-04-14T22:57:10Z",
        "number":  68060,
        "author":  "trylek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-26T18:53:57Z",
        "body":  "Attaching e-mail discussion on the subject. Merging JIT/Methodical tests apparently uncovered a bug in the GCStress level 0xF implementation where finalization can end up in an infinite loop as the finalizations keep feeding the queue. I believe the test merging is not the root cause of this problem, it likely just uncovered the problem due to the nature of merged tests that are naturally using more GC heap. As a temporary workaround I plan to reduce the GC stress level in the r2r extra tests to 0xC per Bruce\u0027s suggestion. \r\n\r\nThanks\r\n\r\nTomas\r\n\r\n/cc @dotnet/jit-contrib \r\n/cc @dotnet/runtime-infrastructure \r\n\r\n\u003cpre\u003e\r\n[From:]() Bruce Forstall \u003cBruce.Forstall@microsoft.com\u003e \r\nSent: Friday, April 15, 2022 12:08 AM\r\nTo: Tomas Rylek \u003c[trylek@microsoft.com](mailto:trylek@microsoft.com)\u003e; Manish Godse \u003cManish.Godse@microsoft.com\u003e; Jan Vorlicek \u003cjanvorli@microsoft.com\u003e; Jeremy Koritzinsky \u003cJeremy.Koritzinsky@microsoft.com\u003e; Andrew Au \u003candrewau@microsoft.com\u003e\r\nCc: .NET Native Core Runtime \u0026 Tools Team \u003cclrxrt@microsoft.com\u003e; CLR GC Core \u003cclrgccore@microsoft.com\u003e\r\nSubject: RE: Advice needed - interpreting crashdump call stacks for hung GC stress Linux x64 run\r\n\r\n\tWhat GC stress level would you suggest I should set the r2r-extra pipeline to before the underlying problem is fixed?\r\n\r\nI guess that depends on what level causes the problem to not occur. I would suggest 0xC, if possible. (Typically, 0xC catches JIT bugs, 0x3 catches VM bugs). Or, simply remove the 0xF leg entirely (comment out from eng\\pipelines\\common\\templates\\runtimes\\run-test-job.yml) against a tracking issue.\r\n\r\n\tI guess I cannot just merge the change in with the pipeline failing so I assume I should create an issue based on this thread and a PR modifying the stress level for the pipeline linked to the issue for clarity.\r\n\r\nAgreed.\r\n\r\n--Bruce\r\n\r\nFrom: Tomas Rylek \u003ctrylek@microsoft.com\u003e \r\nSent: Thursday, April 14, 2022 2:47 PM\r\nTo: Bruce Forstall \u003c[Bruce.Forstall@microsoft.com](mailto:Bruce.Forstall@microsoft.com)\u003e; Manish Godse \u003c[Manish.Godse@microsoft.com](mailto:Manish.Godse@microsoft.com)\u003e; Jan Vorlicek \u003c[janvorli@microsoft.com](mailto:janvorli@microsoft.com)\u003e; Jeremy Koritzinsky \u003c[Jeremy.Koritzinsky@microsoft.com](mailto:Jeremy.Koritzinsky@microsoft.com)\u003e; Andrew Au \u003c[andrewau@microsoft.com](mailto:andrewau@microsoft.com)\u003e\r\nCc: .NET Native Core Runtime \u0026 Tools Team \u003c[clrxrt@microsoft.com](mailto:clrxrt@microsoft.com)\u003e; CLR GC Core \u003c[clrgccore@microsoft.com](mailto:clrgccore@microsoft.com)\u003e\r\nSubject: RE: Advice needed - interpreting crashdump call stacks for hung GC stress Linux x64 run\r\n\r\nThanks Bruce for your immediate response. What GC stress level would you suggest I should set the r2r-extra pipeline to before the underlying problem is fixed? I guess I cannot just merge the change in with the pipeline failing so I assume I should create an issue based on this thread and a PR modifying the stress level for the pipeline linked to the issue for clarity.\r\n\r\nTomas\r\n\r\nFrom: Bruce Forstall \u003c[Bruce.Forstall@microsoft.com](mailto:Bruce.Forstall@microsoft.com)\u003e \r\nSent: Thursday, April 14, 2022 11:42 PM\r\nTo: Tomas Rylek \u003c[trylek@microsoft.com](mailto:trylek@microsoft.com)\u003e; Manish Godse \u003c[Manish.Godse@microsoft.com](mailto:Manish.Godse@microsoft.com)\u003e; Jan Vorlicek \u003c[janvorli@microsoft.com](mailto:janvorli@microsoft.com)\u003e; Jeremy Koritzinsky \u003c[Jeremy.Koritzinsky@microsoft.com](mailto:Jeremy.Koritzinsky@microsoft.com)\u003e; Andrew Au \u003c[andrewau@microsoft.com](mailto:andrewau@microsoft.com)\u003e\r\nCc: .NET Native Core Runtime \u0026 Tools Team \u003c[clrxrt@microsoft.com](mailto:clrxrt@microsoft.com)\u003e; CLR GC Core \u003c[clrgccore@microsoft.com](mailto:clrgccore@microsoft.com)\u003e\r\nSubject: RE: Advice needed - interpreting crashdump call stacks for hung GC stress Linux x64 run\r\n\r\nThe JIT assert below is a recent regression: Test failure JIT\\\\opt\\\\OSR\\\\largefuncletframe\\\\largefuncletframe.cmd · Issue #68003 · dotnet/runtime (github.com).\r\n\r\n\t[@Bruce Forstall](mailto:Bruce.Forstall@microsoft.com) – based on my discussion with Manish we’re wondering whether we might be able to temporarily downgrade the level of GC stress testing in the r2r-extra run, possibly choosing a different GC stress bitmask to avoid this runtime behavior leading to the hang, before the root problem is fixed, to avoid further delays in merging in the JIT/Methodical switchover to merged wrappers?\r\n\r\nThat seems ok to me. Fwiw, I believe this is the only job in the CI that runs with GCStress=0xF. Some run with 3 and C, and with additional things like HeapVerify, but I think this is the only leg with F.\r\n\r\n--Bruce\r\n\r\nFrom: Tomas Rylek \u003c[trylek@microsoft.com](mailto:trylek@microsoft.com)\u003e \r\nSent: Thursday, April 14, 2022 2:19 PM\r\nTo: Manish Godse \u003c[Manish.Godse@microsoft.com](mailto:Manish.Godse@microsoft.com)\u003e; Jan Vorlicek \u003c[janvorli@microsoft.com](mailto:janvorli@microsoft.com)\u003e; Jeremy Koritzinsky \u003c[Jeremy.Koritzinsky@microsoft.com](mailto:Jeremy.Koritzinsky@microsoft.com)\u003e; Andrew Au \u003c[andrewau@microsoft.com](mailto:andrewau@microsoft.com)\u003e; Bruce Forstall \u003c[Bruce.Forstall@microsoft.com](mailto:Bruce.Forstall@microsoft.com)\u003e\r\nCc: .NET Native Core Runtime \u0026 Tools Team \u003c[clrxrt@microsoft.com](mailto:clrxrt@microsoft.com)\u003e; CLR GC Core \u003c[clrgccore@microsoft.com](mailto:clrgccore@microsoft.com)\u003e\r\nSubject: RE: Advice needed - interpreting crashdump call stacks for hung GC stress Linux x64 run\r\n\r\nHi Manish!\r\n\r\nThanks for your immediate response. I have uploaded the below dump at:\r\n\r\n[\\\\clrmain\\public\\writable\\users\\trylek\\GCStress\\GCStressHang-dump1.tar.gz](file://clrmain/public/writable/users/trylek/GCStress/GCStressHang-dump1.tar.gz)\r\n\r\nI have reproed the hang for a second time and I took three more dumps within about half an hour, I have uploaded them here:\r\n\r\n[\\\\clrmain\\public\\writable\\users\\trylek\\GCStress\\dump234.tar.gz](file://clrmain/public/writable/users/trylek/GCStress/dump234.tar.gz)\r\n\r\nComparing the lldb stack traces I am speculating that the problem is that the below thread #8 never finishes – in the GC stress mode, running the finalizers somehow ends up adding more stuff on the finalizer queue effectively causing an infinite loop. I think the problem just got uncovered by larger memory pressure in the merged tests where all in-proc test cases share the same GC heap; in this sense it seems to me that the test merging is not a direct cause of the failure.\r\n\r\n[@Bruce Forstall](mailto:Bruce.Forstall@microsoft.com) – based on my discussion with Manish we’re wondering whether we might be able to temporarily downgrade the level of GC stress testing in the r2r-extra run, possibly choosing a different GC stress bitmask to avoid this runtime behavior leading to the hang, before the root problem is fixed, to avoid further delays in merging in the JIT/Methodical switchover to merged wrappers?\r\n\r\nI have yet to validate Manish’s question regarding whether the bug is only reproing in R2R mode. Based on my findings so far I don’t expect it to be the case, I think the bug is directly caused neither by R2R nor by the test merging; in this particular case I guess it’s just that the r2r-extra run simply runs all tests in R2R mode, I haven’t run any other pipeline exercising GC stress 0xF for JITted tests; I can easily do that and I expect it to yield the same results.\r\n\r\nLast but not least, apart from the hangs, some tests in my yesterday r2r-extra runs also showed a weird runtime JIT assertion failure I hadn’t seen before, for instance here:\r\n\r\n[https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-65597-head-d0e673790fd04e799d/Methodical_do/1/console.1b1a599e.log?sv=2019-07-07\u0026se=2022-05-03T09%3A51%3A49Z\u0026sr=c\u0026sp=rl\u0026sig=NEKcvtCDqMXIF32pjb6yKkPC6vnelRfTMtae0%2B2UZhg%3D](https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fhelixre8s23ayyeko0k025g8.blob.core.windows.net%2Fdotnet-runtime-refs-pull-65597-head-d0e673790fd04e799d%2FMethodical_do%2F1%2Fconsole.1b1a599e.log%3Fsv%3D2019-07-07%26se%3D2022-05-03T09%253A51%253A49Z%26sr%3Dc%26sp%3Drl%26sig%3DNEKcvtCDqMXIF32pjb6yKkPC6vnelRfTMtae0%252B2UZhg%253D\u0026data=05%7C01%7Ctrylek%40microsoft.com%7C583180d7f76e461c293908da1e633983%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637855708825895576%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C\u0026sdata=esxt85jSVvFQ%2F4OXJCxJWcoJzN0uFjdFbXB%2BfrHJdLU%3D\u0026reserved=0)\r\n\r\n10:28:14.221 Running test: JIT/Methodical/eh/finallyexec/nonlocalexittobeginningoftry_do/nonlocalexittobeginningoftry_do.dll\r\n\r\nAssert failure(PID 30019 [0x00007543], Thread: 30019 [0x7543]): Assertion failed \u0027shadowNum \u003e= info.compLocalsCount\u0027 in \u0027hello_nonlocalexittobeginningoftry_finallyexec_cs.Class1:TestEntryPoint():int\u0027 during \u0027Post-Emit\u0027 (IL size 88; hash 0x64b84821; Tier0)\r\n\r\n    File: /__w/1/s/src/coreclr/jit/compiler.cpp Line: 5289\r\n    Image: /datadisks/disk1/work/AAF2097E/p/corerun\r\n\r\n[createdump] Gathering state for process 30019 corerun\r\n\r\nI have no idea whether that might be related to the other bug, I’m afraid not; I haven’t yet been able to repro this one locally but that may be due to the fact that the tests hang almost immediately in GCStress mode so that we don’t have enough time to get to this other crash.\r\n\r\nThanks\r\n\r\nTomas\r\n\r\nFrom: Manish Godse \u003c[Manish.Godse@microsoft.com](mailto:Manish.Godse@microsoft.com)\u003e \r\nSent: Thursday, April 14, 2022 7:36 PM\r\nTo: Tomas Rylek \u003c[trylek@microsoft.com](mailto:trylek@microsoft.com)\u003e; Jan Vorlicek \u003c[janvorli@microsoft.com](mailto:janvorli@microsoft.com)\u003e; Jeremy Koritzinsky \u003c[Jeremy.Koritzinsky@microsoft.com](mailto:Jeremy.Koritzinsky@microsoft.com)\u003e; Andrew Au \u003c[andrewau@microsoft.com](mailto:andrewau@microsoft.com)\u003e; Bruce Forstall \u003c[Bruce.Forstall@microsoft.com](mailto:Bruce.Forstall@microsoft.com)\u003e\r\nCc: .NET Native Core Runtime \u0026 Tools Team \u003c[clrxrt@microsoft.com](mailto:clrxrt@microsoft.com)\u003e; CLR GC Core \u003c[clrgccore@microsoft.com](mailto:clrgccore@microsoft.com)\u003e\r\nSubject: RE: Advice needed - interpreting crashdump call stacks for hung GC stress Linux x64 run\r\n\r\nAdding GC team as well. Could you please share a couple of dumps, thread #8 is the finalizer thread which seems to be blocked on a GC doing object demotion. Does this only repro with R2R enabled or can repro without it too? \r\n\r\nThanks\r\n\r\nFrom: Tomas Rylek \u003c[trylek@microsoft.com](mailto:trylek@microsoft.com)\u003e \r\nSent: Thursday, April 14, 2022 8:31 AM\r\nTo: Jan Vorlicek \u003c[janvorli@microsoft.com](mailto:janvorli@microsoft.com)\u003e; Jeremy Koritzinsky \u003c[Jeremy.Koritzinsky@microsoft.com](mailto:Jeremy.Koritzinsky@microsoft.com)\u003e; Andrew Au \u003c[andrewau@microsoft.com](mailto:andrewau@microsoft.com)\u003e; Bruce Forstall \u003c[Bruce.Forstall@microsoft.com](mailto:Bruce.Forstall@microsoft.com)\u003e\r\nCc: .NET Native Core Runtime \u0026 Tools Team \u003c[clrxrt@microsoft.com](mailto:clrxrt@microsoft.com)\u003e\r\nSubject: Advice needed - interpreting crashdump call stacks for hung GC stress Linux x64 run\r\n\r\nHello everyone!\r\n\r\nI’m investigating Linux hangs in runtime-coreclr r2r-extra runs, the last obstacle preventing the merge of the PR by Jeremy and myself switching over JIT/Methodical tests to use merged wrappers. I have found out that with GCStress mode set to 0xF I’m able to trivially hang the merged wrapper in a couple of minutes; I have managed to capture the dump but I’m still struggling to understand it as it apparently involves some runtime interplay between GC, JIT and the GC stress logic. If anyone could advise me how to understand the call stacks, what additional data is needed to fully understand the issue and / or how to validate whether the captured dump really represents a deadlock (the app has been sitting idle for more than half an hour, normally all the tests finish in under a minute), I would be extremely grateful.\r\n\r\nThanks a lot\r\n\r\nTomas\r\n\r\nP.S. According to dotnet-dump analyze, frames 14-18 in thread 1 correspond to the following managed code:\r\n\r\n00007FFD646505F0 00007F2706126720 System.GC.WaitForPendingFinalizers()\r\n00007FFD64650680 00007F2707B308A0 GCTest_arrres_cs.Test.CollectAndFinalize() [/home/trylek/git/runtime/src/tests/JIT/Methodical/Arrays/misc/arrres.cs @ 52]\r\n00007FFD64650690 00007F2707B308EE GCTest_arrres_cs.Test.Test1() [/home/trylek/git/runtime/src/tests/JIT/Methodical/Arrays/misc/arrres.cs @ 60]\r\n00007FFD646506C0 00007F2707B3085A GCTest_arrres_cs.Test.TestEntryPoint() [/home/trylek/git/runtime/src/tests/JIT/Methodical/Arrays/misc/arrres.cs @ 39]\r\n00007FFD646506D0 00007F2706D63B4E Program.\u003cMain\u003e$(System.String[]) [/home/trylek/git/runtime/src/tests/JIT/Methodical/XUnitWrapperGenerator/XUnitWrapperGenerator.XUnitWrapperGenerator/FullRunner.g.cs\r\n\r\nThe test “arrres_do.csproj” (exercised by the merged wrapper JIT/Methodical/Methodical_do.csproj) isn’t marked as GC stress incompatible – we have marked all GC stress incompatible as requiring out-of-process execution to prevent them from affecting the in-process tests. Reproing this locally is trivial, after cloning my private branch [https://github.com/trylek/runtime/tree/JIT-Methodical](https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Ftrylek%2Fruntime%2Ftree%2FJIT-Methodical\u0026data=05%7C01%7Ctrylek%40microsoft.com%7C583180d7f76e461c293908da1e633983%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637855708825895576%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C\u0026sdata=mB1JsvGnnaCkTkEi8JlYyT2LHFQOrV%2Br9JLtMHc%2FVlU%3D\u0026reserved=0), it should suffice to:\r\n\r\n./build.sh clr+libs -c Release\r\n./build.sh clr -c Checked\r\nsrc/tests/build.sh rebuild checked crossgen2 -priority1 -test:JIT/Methodical/Methodical_do.csproj\r\nexport CORE_ROOT=\u003cdotnet root\u003e/artifacts/tests/coreclr/Linux.x64.Checked/Tests/Core_Root\r\nexport RunCrossGen2=1\r\nexport COMPlus_GCStress=0xF\r\nartifacts/tests/corerun/Linux.x64.Checked/JIT/Methodical/Methodical_do/Methodical_do.sh\r\n\r\nThe test will take about 3 minutes compiling all test assemblies with Crossgen2; it typically takes less than a minute to hit the hang after that.\r\n\r\n  thread #1, name = \u0027corerun\u0027, stop reason = signal SIGABRT\r\n    frame #0: 0x00007f2781446ad3 libpthread.so.0`__pthread_cond_wait at futex-internal.h:88\r\n    frame #1: 0x00007f2781446ab8 libpthread.so.0`__pthread_cond_wait at pthread_cond_wait.c:502\r\n    frame #2: 0x00007f27814469d8 libpthread.so.0`__pthread_cond_wait(cond=0x0000560003905488, mutex=0x0000560003905460) at pthread_cond_wait.c:655\r\n    frame #3: 0x00007f278020c3a7 libcoreclr.so`CorUnix::CPalSynchronizationManager::ThreadNativeWait(ptnwdNativeWaitData=0x0000560003905460, dwTimeout=4294967295, ptwrWakeupReason=0x00007ffd646500a4, pdwSignaledObject=0x00007ffd646500a0) at synchmanager.cpp:478:28\r\n    frame #4: 0x00007f278020b9eb libcoreclr.so`CorUnix::CPalSynchronizationManager::BlockThread(this=0x0000560003909af0, pthrCurrent=0x00005600039052c0, dwTimeout=4294967295, fAlertable=true, fIsSleep=\u003cunavailable\u003e, ptwrWakeupReason=0x00007ffd64650158, pdwSignaledObject=0x00007ffd6465015c) at synchmanager.cpp:301:22\r\n    frame #5: 0x00007f27802150cf libcoreclr.so`CorUnix::InternalWaitForMultipleObjectsEx(pThread=0x00005600039052c0, nCount=1, lpHandles=\u003cunavailable\u003e, bWaitAll=\u003cunavailable\u003e, dwMilliseconds=4294967295, bAlertable=YES, bPrioritize=NO) at wait.cpp:637:45\r\n    frame #6: 0x00007f2780215a5f libcoreclr.so`::WaitForMultipleObjectsEx(nCount=1, lpHandles=0x0000560003975400, bWaitAll=NO, dwMilliseconds=4294967295, bAlertable=YES) at wait.cpp:201:13\r\n    frame #7: 0x00007f277fd04dfb libcoreclr.so`Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) [inlined] Thread::DoAppropriateAptStateWait(this=\u003cunavailable\u003e, numWaiters=\u003cunavailable\u003e, pHandles=\u003cunavailable\u003e, bWaitAll=\u003cunavailable\u003e, timeout=\u003cunavailable\u003e, mode=\u003cunavailable\u003e) at threads.cpp:3397:12\r\n    frame #8: 0x00007f277fd04de0 libcoreclr.so`Thread::DoAppropriateWaitWorker(this=\u003cunavailable\u003e, countHandles=\u003cunavailable\u003e, handles=0x0000560003975400, waitAll=NO, millis=4294967295, mode=WaitMode_Alertable) at threads.cpp:3529\r\n    frame #9: 0x00007f277fcfe388 libcoreclr.so`Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) at threads.cpp:3246:40\r\n    frame #10: 0x00007f277fcfe380 libcoreclr.so`Thread::DoAppropriateWait(this=\u003cunavailable\u003e, countHandles=\u003cunavailable\u003e, handles=\u003cunavailable\u003e, waitAll=\u003cunavailable\u003e, millis=\u003cunavailable\u003e, mode=\u003cunavailable\u003e, syncState=0x0000000000000000) at threads.cpp:3261\r\n    frame #11: 0x00007f277fec9dde libcoreclr.so`CLREventBase::WaitEx(this=0x0000560003975400, dwMilliseconds=4294967295, mode=\u003cunavailable\u003e, syncState=\u003cunavailable\u003e) at synch.cpp:459:30\r\n    frame #12: 0x00007f277fdd790d libcoreclr.so`FinalizerThread::FinalizerThreadWait(timeout=4294967295) at finalizerthread.cpp:521:49\r\n    frame #13: 0x00007f277fd9739b libcoreclr.so`::GCInterface_WaitForPendingFinalizers() at comutilnative.cpp:1024:5\r\n    frame #14: 0x00007f2706126729\r\n    frame #15: 0x00007f2707b308a0\r\n    frame #16: 0x00007f2707b308ee\r\n    frame #17: 0x00007f2707b3085a\r\n    frame #18: 0x00007f2706d63b4e\r\n    frame #19: 0x00007f277ffd4dbf libcoreclr.so`CallDescrWorkerInternal at unixasmmacrosamd64.inc:847\r\n    frame #20: 0x00007f277fd61ac8 libcoreclr.so`CallDescrWorkerWithHandler(pCallDescrData=0x00007ee6f4daf2f8, fCriticalCall=88) at callhelpers.cpp:67:5\r\n    frame #21: 0x00007f277fd6267c libcoreclr.so`MethodDescCallSite::CallTargetWorker(this=\u003cunavailable\u003e, pArguments=0x00007ffd64656ad8, pReturnValue=\u003cunavailable\u003e, cbReturnValue=\u003cunavailable\u003e) at callhelpers.cpp:538:9\r\n    frame #22: 0x00007f277fb9e9ef libcoreclr.so`RunMain(MethodDesc*, short, int*, REF\u003cPtrArray\u003e*) [inlined] MethodDescCallSite::Call_RetArgSlot(this=0x00007ffd64656b38, pArguments=0x00007ffd64656ad8) at callhelpers.h:458:9\r\n    frame #23: 0x00007f277fb9e98a libcoreclr.so`RunMain(MethodDesc*, short, int*, REF\u003cPtrArray\u003e*) at assembly.cpp:1415\r\n    frame #24: 0x00007f277fb9e735 libcoreclr.so`RunMain(MethodDesc*, short, int*, REF\u003cPtrArray\u003e*) [inlined] RunMain(this=\u003cunavailable\u003e, pParam=\u003cunavailable\u003e)::$_0::operator()(Param*) const::\u0027lambda\u0027(Param*)::operator()(Param*) const at assembly.cpp:1483\r\n    frame #25: 0x00007f277fb9e735 libcoreclr.so`RunMain(MethodDesc*, short, int*, REF\u003cPtrArray\u003e*) at assembly.cpp:1485\r\n    frame #26: 0x00007f277fb9e69b libcoreclr.so`RunMain(pFD=\u003cunavailable\u003e, numSkipArgs=1, piRetVal=\u003cunavailable\u003e, stringArgs=\u003cunavailable\u003e) at assembly.cpp:1485\r\n    frame #27: 0x00007f277fb9ee4e libcoreclr.so`Assembly::ExecuteMainMethod(this=\u003cunavailable\u003e, stringArgs=0x00007ffd64656fa0, waitForOtherThreads=YES) at assembly.cpp:1601:18\r\n    frame #28: 0x00007f277fbebe30 libcoreclr.so`CorHost2::ExecuteAssembly(this=\u003cunavailable\u003e, dwAppDomainId=\u003cunavailable\u003e, pwzAssemblyPath=\u003cunavailable\u003e, argc=\u003cunavailable\u003e, argv=0x0000000000000000, pReturnValue=\u003cunavailable\u003e) at corhost.cpp:384:39\r\n    frame #29: 0x00007f277fb81e1c libcoreclr.so`::coreclr_execute_assembly(hostHandle=0x000056000390b920, domainId=\u003cunavailable\u003e, argc=\u003cunavailable\u003e, argv=\u003cunavailable\u003e, managedAssemblyPath=\u003cunavailable\u003e, exitCode=0x00007ffd6465717c) at exports.cpp:430:24\r\n    frame #30: 0x0000560002f8e1f4 corerun`main [inlined] run(config=0x00007ffd646571e8) at corerun.cpp:368:18\r\n    frame #31: 0x0000560002f8c95d corerun`main(argc=\u003cunavailable\u003e, argv=\u003cunavailable\u003e) at corerun.cpp:563\r\n    frame #32: 0x00007f278072ac87 libc.so.6`__libc_start_main(main=(corerun`main at corerun.cpp:555), argc=4, argv=0x00007ffd64657ef8, init=\u003cunavailable\u003e, fini=\u003cunavailable\u003e, rtld_fini=\u003cunavailable\u003e, stack_end=0x00007ffd64657ee8) at libc-start.c:310\r\n    frame #33: 0x0000560002f8b8aa corerun`_start + 42\r\n\r\n\r\n\r\n* thread #2, stop reason = signal SIGABRT\r\n  * frame #0: 0x00007f2780824539 libc.so.6`syscall at syscall.S:38\r\n    frame #1: 0x00007f277f3c3bd3 liblttng-ust.so.0`___lldb_unnamed_symbol62$$liblttng-ust.so.0 + 595\r\n    frame #2: 0x00007f27814406db libpthread.so.0`start_thread(arg=0x00007f277ed7c700) at pthread_create.c:463\r\n    frame #3: 0x00007f278082a61f libc.so.6`__GI___clone at clone.S:95\r\n\r\n  thread #3, stop reason = signal SIGABRT\r\n    frame #0: 0x00007f2780824539 libc.so.6`syscall at syscall.S:38\r\n   frame #1: 0x00007f277f3c3bd3 liblttng-ust.so.0`___lldb_unnamed_symbol62$$liblttng-ust.so.0 + 595\r\n    frame #2: 0x00007f27814406db libpthread.so.0`start_thread(arg=0x00007f277e57b700) at pthread_create.c:463\r\n    frame #3: 0x00007f278082a61f libc.so.6`__GI___clone at clone.S:95\r\n\r\n  thread #4, stop reason = signal SIGABRT\r\n    frame #0: 0x00007f278081dbb9 libc.so.6`__GI___poll(fds=0x00007f277dd79d18, nfds=1, timeout=-1) at poll.c:29\r\n    frame #1: 0x00007f2780210402 libcoreclr.so`CorUnix::CPalSynchronizationManager::ReadBytesFromProcessPipe(this=0x0000560003909af0, iTimeout=-1, pRecvBuf=\"▒৐\\x03\", iBytes=1) at synchmanager.cpp:2233:24\r\n    frame #2: 0x00007f278020f9b5 libcoreclr.so`CorUnix::CPalSynchronizationManager::ReadCmdFromProcessPipe(this=0x0000560003909af0, iPollTimeout=-1, pswcWorkerCmd=0x00007f277dd79dec, pshridMarshaledData=0x00007f277dd79df0, pdwData=0x00007f277dd79dfc) at synchmanager.cpp:2011:16\r\n    frame #3: 0x00007f278020eaf8 libcoreclr.so`CorUnix::CPalSynchronizationManager::WorkerThread(pArg=0x0000560003909af0) at synchmanager.cpp:1714:37\r\n    frame #4: 0x00007f27802224d2 libcoreclr.so`CorUnix::CPalThread::ThreadEntry(pvParam=0x000056000390a7e0) at thread.cpp:1829:16\r\n    frame #5: 0x00007f27814406db libpthread.so.0`start_thread(arg=0x00007f277dd7a700) at pthread_create.c:463\r\n    frame #6: 0x00007f278082a61f libc.so.6`__GI___clone at clone.S:95\r\n\r\n  thread #5, stop reason = signal SIGABRT\r\n    frame #0: 0x00007f278144b32a libpthread.so.0`__waitpid(pid=23540, stat_loc=0x00007f277d5789f4, options=0) at waitpid.c:30\r\n    frame #1: 0x00007f278021eb52 libcoreclr.so`PROCCreateCrashDump(argv=\u003cunavailable\u003e) at process.cpp:2400:22\r\n    frame #2: 0x00007f278021f197 libcoreclr.so`::PAL_GenerateCoreDump(dumpName=\u003cunavailable\u003e, dumpType=\u003cunavailable\u003e, flags=\u003cunavailable\u003e) at process.cpp:2522:18\r\n    frame #3: 0x00007f277fc148f8 libcoreclr.so`GenerateDump(dumpName=u\"/home/trylek/dumps/hang.21823.dmp\", dumpType=4, flags=0) at excep.cpp:4189:16\r\n    frame #4: 0x00007f278017e919 libcoreclr.so`ds_dump_protocol_helper_handle_ipc_message(_DiagnosticsIpcMessage*, _DiagnosticsIpcStream*) at ds-rt-coreclr.h:204:7\r\n    frame #5: 0x00007f278017e8e0 libcoreclr.so`ds_dump_protocol_helper_handle_ipc_message(_DiagnosticsIpcMessage*, _DiagnosticsIpcStream*) [inlined] dump_protocol_helper_generate_core_dump(_DiagnosticsIpcMessage*, _DiagnosticsIpcStream*) at ds-dump-protocol.c:118\r\n    frame #6: 0x00007f278017e599 libcoreclr.so`ds_dump_protocol_helper_handle_ipc_message(message=\u003cunavailable\u003e, stream=0x00007f26f80091b0) at ds-dump-protocol.c:149\r\n    frame #7: 0x00007f278017cee8 libcoreclr.so`server_thread(data=\u003cunavailable\u003e) at ds-server.c:161:4\r\n    frame #8: 0x00007f27802224d2 libcoreclr.so`CorUnix::CPalThread::ThreadEntry(pvParam=0x00005600039283a0) at thread.cpp:1829:16\r\n    frame #9: 0x00007f27814406db libpthread.so.0`start_thread(arg=0x00007f277d579700) at pthread_create.c:463\r\n    frame #10: 0x00007f278082a61f libc.so.6`__GI___clone at clone.S:95\r\n\r\n  thread #6, stop reason = signal SIGABRT\r\n    frame #0: 0x00007f278144ae9e libpthread.so.0`__libc_open64(file=\"/tmp/clr-debug-pipe-21823-6387670-in\", oflag=0) at open64.c:47\r\n    frame #1: 0x00007f2780074982 libcoreclr.so`TwoWayPipe::WaitForConnection(this=0x00005600038b2b38) at twowaypipe.cpp:87:21\r\n    frame #2: 0x00007f278006bf2b libcoreclr.so`DbgTransportSession::TransportWorker(this=0x00005600038b2990) at dbgtransportsession.cpp:1321:25\r\n    frame #3: 0x00007f278006aaf9 libcoreclr.so`DbgTransportSession::TransportWorkerStatic(pvContext=\u003cunavailable\u003e) at dbgtransportsession.cpp:1237:40\r\n    frame #4: 0x00007f27802224d2 libcoreclr.so`CorUnix::CPalThread::ThreadEntry(pvParam=0x0000560003957af0) at thread.cpp:1829:16\r\n    frame #5: 0x00007f27814406db libpthread.so.0`start_thread(arg=0x00007f2777fff700) at pthread_create.c:463\r\n    frame #6: 0x00007f278082a61f libc.so.6`__GI___clone at clone.S:95\r\n\r\n  thread #7, stop reason = signal SIGABRT\r\n    frame #0: 0x00007f2781446ad3 libpthread.so.0`__pthread_cond_wait at futex-internal.h:88\r\n    frame #1: 0x00007f2781446ab8 libpthread.so.0`__pthread_cond_wait at pthread_cond_wait.c:502\r\n    frame #2: 0x00007f27814469d8 libpthread.so.0`__pthread_cond_wait(cond=0x0000560003958628, mutex=0x0000560003958600) at pthread_cond_wait.c:655\r\n    frame #3: 0x00007f278020c3a7 libcoreclr.so`CorUnix::CPalSynchronizationManager::ThreadNativeWait(ptnwdNativeWaitData=0x0000560003958600, dwTimeout=4294967295, ptwrWakeupReason=0x00007f27777fdb04, pdwSignaledObject=0x00007f27777fdb00) at synchmanager.cpp:478:28\r\n    frame #4: 0x00007f278020b9eb libcoreclr.so`CorUnix::CPalSynchronizationManager::BlockThread(this=0x0000560003909af0, pthrCurrent=0x0000560003958460, dwTimeout=4294967295, fAlertable=false, fIsSleep=\u003cunavailable\u003e, ptwrWakeupReason=0x00007f27777fdbb8, pdwSignaledObject=0x00007f27777fdbbc) at synchmanager.cpp:301:22\r\n    frame #5: 0x00007f27802150cf libcoreclr.so`CorUnix::InternalWaitForMultipleObjectsEx(pThread=0x0000560003958460, nCount=3, lpHandles=\u003cunavailable\u003e, bWaitAll=\u003cunavailable\u003e, dwMilliseconds=4294967295, bAlertable=NO, bPrioritize=NO) at wait.cpp:637:45\r\n    frame #6: 0x00007f2780215a5f libcoreclr.so`::WaitForMultipleObjectsEx(nCount=3, lpHandles=0x00007f27777fdd90, bWaitAll=NO, dwMilliseconds=4294967295, bAlertable=NO) at wait.cpp:201:13\r\n    frame #7: 0x00007f2780067656 libcoreclr.so`DebuggerRCThread::MainLoop(this=0x0000560003948540) at rcthread.cpp:945:30\r\n    frame #8: 0x00007f2780067479 libcoreclr.so`DebuggerRCThread::ThreadProc(this=0x0000560003948540) at rcthread.cpp:750:5\r\n    frame #9: 0x00007f2780066ee3 libcoreclr.so`DebuggerRCThread::ThreadProcStatic((null)=\u003cunavailable\u003e) at rcthread.cpp:1334:8\r\n    frame #10: 0x00007f27802224d2 libcoreclr.so`CorUnix::CPalThread::ThreadEntry(pvParam=0x0000560003958460) at thread.cpp:1829:16\r\n    frame #11: 0x00007f27814406db libpthread.so.0`start_thread(arg=0x00007f27777fe700) at pthread_create.c:463\r\n    frame #12: 0x00007f278082a61f libc.so.6`__GI___clone at clone.S:95\r\n\r\n  thread #8, stop reason = signal SIGABRT\r\n    frame #0: 0x00007f2781875bac ld-linux-x86-64.so.2`__tls_get_addr at tls_get_addr.S:59\r\n    frame #1: 0x00007f277fbefcfa libcoreclr.so`CrstBase::PreEnter() [inlined] GetThreadNULLOk() at threads.inl:37:31\r\n    frame #2: 0x00007f277fbefcea libcoreclr.so`CrstBase::PreEnter(this=0x0000560003934b60) at crst.cpp:403\r\n    frame #3: 0x00007f277fbefbcf libcoreclr.so`CrstBase::Enter(this=0x0000560003934b60, noLevelCheckFlag=CRST_LEVEL_CHECK) at crst.cpp:300:5\r\n    frame #4: 0x00007f277ff2574f libcoreclr.so`HndResetAgeMap(HandleTable*, unsigned int const*, unsigned int, unsigned int, unsigned int, unsigned int) [inlined] FunctionBase\u003cCrstBase*, \u0026(CrstBase::AcquireLock(CrstBase*)), \u0026(CrstBase::ReleaseLock(CrstBase*))\u003e::DoAcquire(this=0x00007f27767fb0c8) at holder.h:711:9\r\n    frame #5: 0x00007f277ff2574a libcoreclr.so`HndResetAgeMap(HandleTable*, unsigned int const*, unsigned int, unsigned int, unsigned int, unsigned int) [inlined] BaseHolder\u003cCrstBase*, FunctionBase\u003cCrstBase*, \u0026(CrstBase::AcquireLock(CrstBase*)), \u0026(CrstBase::ReleaseLock(CrstBase*))\u003e, 0ul, \u0026(int CompareDefault\u003cCrstBase*\u003e(CrstBase*, CrstBase*))\u003e::Acquire() at holder.h:283\r\n    frame #6: 0x00007f277ff2574a libcoreclr.so`HndResetAgeMap(HandleTable*, unsigned int const*, unsigned int, unsigned int, unsigned int, unsigned int) [inlined] BaseHolder\u003cCrstBase*, FunctionBase\u003cCrstBase*, \u0026(CrstBase::AcquireLock(CrstBase*)), \u0026(CrstBase::ReleaseLock(CrstBase*))\u003e, 0ul, \u0026(int CompareDefault\u003cCrstBase*\u003e(CrstBase*, CrstBase*))\u003e::BaseHolder(this=0x00007f27767fb0c8, value=\u003cunavailable\u003e) at holder.h:250\r\n    frame #7: 0x00007f277ff25737 libcoreclr.so`HndResetAgeMap(HandleTable*, unsigned int const*, unsigned int, unsigned int, unsigned int, unsigned int) [inlined] Holder\u003cCrstBase*, \u0026(CrstBase::AcquireLock(CrstBase*)), \u0026(CrstBase::ReleaseLock(CrstBase*)), 0ul, \u0026(int CompareDefault\u003cCrstBase*\u003e(CrstBase*, CrstBase*)), true\u003e::Holder(this=0x00007f27767fb0c8, value=\u003cunavailable\u003e) at holder.h:746\r\n    frame #8: 0x00007f277ff25737 libcoreclr.so`HndResetAgeMap(hTable=0x0000560003934b30, types=0x00007f27767fb120, typeCount=9, condemned=2, maxgen=2, flags=\u003cunavailable\u003e) at handletable.cpp:827\r\n    frame #9: 0x00007f277ff2f109 libcoreclr.so`Ref_RejuvenateHandles(condemned=2, maxgen=2, lp1=\u003cunavailable\u003e) at objecthandle.cpp:1692:21\r\n    frame #10: 0x00007f277ff30794 libcoreclr.so`GCScan::GcDemote(condemned=\u003cunavailable\u003e, max_gen=2, sc=0x00007f27767fb320) at gcscan.cpp:223:5\r\n    frame #11: 0x00007f277ffa91c9 libcoreclr.so`WKS::gc_heap::plan_phase(condemned_gen_number=\u003cunavailable\u003e) at gc.cpp:29782:17\r\n    frame #12: 0x00007f277ffa0210 libcoreclr.so`WKS::gc_heap::gc1() at gc.cpp:20613:13\r\n    frame #13: 0x00007f277ffad811 libcoreclr.so`WKS::gc_heap::garbage_collect(n=\u003cunavailable\u003e) at gc.cpp:0\r\n    frame #14: 0x00007f277ff9a01d libcoreclr.so`WKS::GCHeap::GarbageCollectGeneration(this=\u003cunavailable\u003e, gen=2, reason=reason_gcstress) at gc.cpp:45957:9\r\n    frame #15: 0x00007f277ffccc7f libcoreclr.so`WKS::GCHeap::GarbageCollect(int, bool, int) [inlined] WKS::GCHeap::GarbageCollectTry(this=\u003cunavailable\u003e, generation=\u003cunavailable\u003e, low_memory_p=\u003cunavailable\u003e, mode=\u003cunavailable\u003e) at gc.cpp:45202:12\r\n    frame #16: 0x00007f277ffccc75 libcoreclr.so`WKS::GCHeap::GarbageCollect(this=\u003cunavailable\u003e, generation=\u003cunavailable\u003e, low_memory_p=\u003cunavailable\u003e, mode=\u003cunavailable\u003e) at gc.cpp:45136\r\n    frame #17: 0x00007f277ffcbef3 libcoreclr.so`WKS::GCHeap::StressHeap(this=\u003cunavailable\u003e, context=\u003cunavailable\u003e) at gc.cpp:44756:9\r\n    frame #18: 0x00007f277fde12c2 libcoreclr.so`Alloc(unsigned long, GC_ALLOC_FLAGS) [inlined] _GCStress::StressGcTriggerPolicy::Trigger(acontext=\u003cunavailable\u003e) at gcstress.h:297:41\r\n    frame #19: 0x00007f277fde128c libcoreclr.so`Alloc(unsigned long, GC_ALLOC_FLAGS) [inlined] _GCStress::GCSBase\u003c(gcs_trigger_points)1, _GCStress::IgnoreFastGcSPolicy, _GCStress::AnyGcModePolicy, _GCStress::StressGcTriggerPolicy\u003e::MaybeTrigger(acontext=\u003cunavailable\u003e, minFastGc=\u003cunavailable\u003e) at gcstress.h:415\r\n    frame #20: 0x00007f277fde1276 libcoreclr.so`Alloc(unsigned long, GC_ALLOC_FLAGS) [inlined] _GCStress::GCStress\u003c(gcs_trigger_points)10, mpl::null_type, mpl::null_type, mpl::null_type\u003e::MaybeTrigger(acontext=0x0000560003975b78) at gcstress.h:464\r\n    frame #21: 0x00007f277fde1276 libcoreclr.so`Alloc(size=288, flags=\u003cunavailable\u003e) at gchelpers.cpp:225\r\n    frame #22: 0x00007f277fde0e7b libcoreclr.so`AllocateObject(pMT=0x00007f2706e63f78) at gchelpers.cpp:979:37\r\n    frame #23: 0x00007f277fe09982 libcoreclr.so`JIT_New(typeHnd_=0x00007f2706e63f78) at jithelpers.cpp:2312:14\r\n    frame #24: 0x00007f2706126031\r\n    frame #25: 0x00007f270621a9cc\r\n    frame #26: 0x00007f2706395f3f\r\n    frame #27: 0x00007f270616716d\r\n    frame #28: 0x00007f277ffd4d3e libcoreclr.so`FastCallFinalizeWorker at calldescrworkeramd64.S:30\r\n    frame #29: 0x00007f277fca06d9 libcoreclr.so`MethodTable::CallFinalizer(Object*) at methodtable.cpp:3471:5\r\n    frame #30: 0x00007f277fca0620 libcoreclr.so`MethodTable::CallFinalizer(obj=\u003cunavailable\u003e) at methodtable.cpp:3589\r\n    frame #31: 0x00007f277fdd69b8 libcoreclr.so`FinalizerThread::FinalizeAllObjects() at finalizerthread.cpp:104:9\r\n    frame #32: 0x00007f277fdd6cd5 libcoreclr.so`FinalizerThread::FinalizerThreadWorker(args=\u003cunavailable\u003e) at finalizerthread.cpp:336:9\r\n    frame #33: 0x00007f277fd0ac0e libcoreclr.so`ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) [inlined] ManagedThreadBase_DispatchInner(pCallState=\u003cunavailable\u003e) at threads.cpp:7324:5\r\n    frame #34: 0x00007f277fd0ac07 libcoreclr.so`ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) at threads.cpp:7368\r\n    frame #35: 0x00007f277fd0ab01 libcoreclr.so`ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) [inlined] ManagedThreadBase_DispatchOuter(this=\u003cunavailable\u003e, pParam=\u003cunavailable\u003e)::$_6::operator()(ManagedThreadBase_DispatchOuter(ManagedThreadCallState*)::TryArgs*) const::\u0027lambda\u0027(Param*)::operator()(Param*) const at threads.cpp:7526\r\n    frame #36: 0x00007f277fd0aafd libcoreclr.so`ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) at threads.cpp:7528\r\n    frame #37: 0x00007f277fd0aa83 libcoreclr.so`ManagedThreadBase_DispatchOuter(pCallState=\u003cunavailable\u003e) at threads.cpp:7552\r\n    frame #38: 0x00007f277fd0b47d libcoreclr.so`ManagedThreadBase::FinalizerBase(void (*)(void*)) [inlined] ManagedThreadBase_NoADTransition(pTarget=\u003cunavailable\u003e, filterType=FinalizerThread)(void*), UnhandledExceptionLocation) at threads.cpp:7596:5\r\n    frame #39: 0x00007f277fd0b465 libcoreclr.so`ManagedThreadBase::FinalizerBase(pTarget=\u003cunavailable\u003e)(void*)) at threads.cpp:7622\r\n    frame #40: 0x00007f277fdd7428 libcoreclr.so`FinalizerThread::FinalizerThreadStart(args=\u003cunavailable\u003e) at finalizerthread.cpp:386:17\r\n    frame #41: 0x00007f27802224d2 libcoreclr.so`CorUnix::CPalThread::ThreadEntry(pvParam=0x00005600039772f0) at thread.cpp:1829:16\r\n    frame #42: 0x00007f27814406db libpthread.so.0`start_thread(arg=0x00007f27767fc700) at pthread_create.c:463\r\n    frame #43: 0x00007f278082a61f libc.so.6`__GI___clone at clone.S:95\r\n\r\n  thread #9, stop reason = signal SIGABRT\r\n    frame #0: 0x00007f278144a474 libpthread.so.0`__libc_read at read.c:27\r\n    frame #1: 0x00007f278144a460 libpthread.so.0`__libc_read(fd=566, buf=0x00007ee6db0bbeba, nbytes=1)\r\n    frame #2: 0x00007f27743bc59f libSystem.Native.so`SignalHandlerLoop(arg=\u003cunavailable\u003e) at pal_signal.c:323:29\r\n    frame #3: 0x00007f27814406db libpthread.so.0`start_thread(arg=0x00007ee6db0bc700) at pthread_create.c:463\r\n    frame #4: 0x00007f278082a61f libc.so.6`__GI___clone at clone.S:95\r\n\u003c/pre\u003e\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOQb-Rcg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5BjBsx",
                                           "createdAt":  "2022-04-14T22:57:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nAttaching e-mail discussion on the subject. Merging JIT/Methodical tests apparently uncovered a bug in the GCStress level 0xF implementation where finalization can end up in an infinite loop as the finalizations keep feeding the queue. I believe the test merging is not the root cause of this problem, it likely just uncovered the problem due to the nature of merged tests that are naturally using more GC heap. As a temporary workaround I plan to reduce the GC stress level in the r2r extra tests to 0xC per Bruce\u0027s suggestion. \r\n\r\nThanks\r\n\r\nTomas\r\n\r\n/cc @dotnet/jit-contrib \r\n/cc @dotnet/runtime-infrastructure \r\n\r\n\u003cpre\u003e\r\n[From:]() Bruce Forstall \u003cBruce.Forstall@microsoft.com\u003e \r\nSent: Friday, April 15, 2022 12:08 AM\r\nTo: Tomas Rylek \u003c[trylek@microsoft.com](mailto:trylek@microsoft.com)\u003e; Manish Godse \u003cManish.Godse@microsoft.com\u003e; Jan Vorlicek \u003cjanvorli@microsoft.com\u003e; Jeremy Koritzinsky \u003cJeremy.Koritzinsky@microsoft.com\u003e; Andrew Au \u003candrewau@microsoft.com\u003e\r\nCc: .NET Native Core Runtime \u0026 Tools Team \u003cclrxrt@microsoft.com\u003e; CLR GC Core \u003cclrgccore@microsoft.com\u003e\r\nSubject: RE: Advice needed - interpreting crashdump call stacks for hung GC stress Linux x64 run\r\n\r\n\tWhat GC stress level would you suggest I should set the r2r-extra pipeline to before the underlying problem is fixed?\r\n\r\nI guess that depends on what level causes the problem to not occur. I would suggest 0xC, if possible. (Typically, 0xC catches JIT bugs, 0x3 catches VM bugs). Or, simply remove the 0xF leg entirely (comment out from eng\\pipelines\\common\\templates\\runtimes\\run-test-job.yml) against a tracking issue.\r\n\r\n\tI guess I cannot just merge the change in with the pipeline failing so I assume I should create an issue based on this thread and a PR modifying the stress level for the pipeline linked to the issue for clarity.\r\n\r\nAgreed.\r\n\r\n--Bruce\r\n\r\nFrom: Tomas Rylek \u003ctrylek@microsoft.com\u003e \r\nSent: Thursday, April 14, 2022 2:47 PM\r\nTo: Bruce Forstall \u003c[Bruce.Forstall@microsoft.com](mailto:Bruce.Forstall@microsoft.com)\u003e; Manish Godse \u003c[Manish.Godse@microsoft.com](mailto:Manish.Godse@microsoft.com)\u003e; Jan Vorlicek \u003c[janvorli@microsoft.com](mailto:janvorli@microsoft.com)\u003e; Jeremy Koritzinsky \u003c[Jeremy.Koritzinsky@microsoft.com](mailto:Jeremy.Koritzinsky@microsoft.com)\u003e; Andrew Au \u003c[andrewau@microsoft.com](mailto:andrewau@microsoft.com)\u003e\r\nCc: .NET Native Core Runtime \u0026 Tools Team \u003c[clrxrt@microsoft.com](mailto:clrxrt@microsoft.com)\u003e; CLR GC Core \u003c[clrgccore@microsoft.com](mailto:clrgccore@microsoft.com)\u003e\r\nSubject: RE: Advice needed - interpreting crashdump call stacks for hung GC stress Linux x64 run\r\n\r\nThanks Bruce for your immediate response. What GC stress level would you suggest I should set the r2r-extra pipeline to before the underlying problem is fixed? I guess I cannot just merge the change in with the pipeline failing so I assume I should create an issue based on this thread and a PR modifying the stress level for the pipeline linked to the issue for clarity.\r\n\r\nTomas\r\n\r\nFrom: Bruce Forstall \u003c[Bruce.Forstall@microsoft.com](mailto:Bruce.Forstall@microsoft.com)\u003e \r\nSent: Thursday, April 14, 2022 11:42 PM\r\nTo: Tomas Rylek \u003c[trylek@microsoft.com](mailto:trylek@microsoft.com)\u003e; Manish Godse \u003c[Manish.Godse@microsoft.com](mailto:Manish.Godse@microsoft.com)\u003e; Jan Vorlicek \u003c[janvorli@microsoft.com](mailto:janvorli@microsoft.com)\u003e; Jeremy Koritzinsky \u003c[Jeremy.Koritzinsky@microsoft.com](mailto:Jeremy.Koritzinsky@microsoft.com)\u003e; Andrew Au \u003c[andrewau@microsoft.com](mailto:andrewau@microsoft.com)\u003e\r\nCc: .NET Native Core Runtime \u0026 Tools Team \u003c[clrxrt@microsoft.com](mailto:clrxrt@microsoft.com)\u003e; CLR GC Core \u003c[clrgccore@microsoft.com](mailto:clrgccore@microsoft.com)\u003e\r\nSubject: RE: Advice needed - interpreting crashdump call stacks for hung GC stress Linux x64 run\r\n\r\nThe JIT assert below is a recent regression: Test failure JIT\\\\opt\\\\OSR\\\\largefuncletframe\\\\largefuncletframe.cmd · Issue #68003 · dotnet/runtime (github.com).\r\n\r\n\t[@Bruce Forstall](mailto:Bruce.Forstall@microsoft.com) – based on my discussion with Manish we’re wondering whether we might be able to temporarily downgrade the level of GC stress testing in the r2r-extra run, possibly choosing a different GC stress bitmask to avoid this runtime behavior leading to the hang, before the root problem is fixed, to avoid further delays in merging in the JIT/Methodical switchover to merged wrappers?\r\n\r\nThat seems ok to me. Fwiw, I believe this is the only job in the CI that runs with GCStress=0xF. Some run with 3 and C, and with additional things like HeapVerify, but I think this is the only leg with F.\r\n\r\n--Bruce\r\n\r\nFrom: Tomas Rylek \u003c[trylek@microsoft.com](mailto:trylek@microsoft.com)\u003e \r\nSent: Thursday, April 14, 2022 2:19 PM\r\nTo: Manish Godse \u003c[Manish.Godse@microsoft.com](mailto:Manish.Godse@microsoft.com)\u003e; Jan Vorlicek \u003c[janvorli@microsoft.com](mailto:janvorli@microsoft.com)\u003e; Jeremy Koritzinsky \u003c[Jeremy.Koritzinsky@microsoft.com](mailto:Jeremy.Koritzinsky@microsoft.com)\u003e; Andrew Au \u003c[andrewau@microsoft.com](mailto:andrewau@microsoft.com)\u003e; Bruce Forstall \u003c[Bruce.Forstall@microsoft.com](mailto:Bruce.Forstall@microsoft.com)\u003e\r\nCc: .NET Native Core Runtime \u0026 Tools Team \u003c[clrxrt@microsoft.com](mailto:clrxrt@microsoft.com)\u003e; CLR GC Core \u003c[clrgccore@microsoft.com](mailto:clrgccore@microsoft.com)\u003e\r\nSubject: RE: Advice needed - interpreting crashdump call stacks for hung GC stress Linux x64 run\r\n\r\nHi Manish!\r\n\r\nThanks for your immediate response. I have uploaded the below dump at:\r\n\r\n[\\\\clrmain\\public\\writable\\users\\trylek\\GCStress\\GCStressHang-dump1.tar.gz](file://clrmain/public/writable/users/trylek/GCStress/GCStressHang-dump1.tar.gz)\r\n\r\nI have reproed the hang for a second time and I took three more dumps within about half an hour, I have uploaded them here:\r\n\r\n[\\\\clrmain\\public\\writable\\users\\trylek\\GCStress\\dump234.tar.gz](file://clrmain/public/writable/users/trylek/GCStress/dump234.tar.gz)\r\n\r\nComparing the lldb stack traces I am speculating that the problem is that the below thread #8 never finishes – in the GC stress mode, running the finalizers somehow ends up adding more stuff on the finalizer queue effectively causing an infinite loop. I think the problem just got uncovered by larger memory pressure in the merged tests where all in-proc test cases share the same GC heap; in this sense it seems to me that the test merging is not a direct cause of the failure.\r\n\r\n[@Bruce Forstall](mailto:Bruce.Forstall@microsoft.com) – based on my discussion with Manish we’re wondering whether we might be able to temporarily downgrade the level of GC stress testing in the r2r-extra run, possibly choosing a different GC stress bitmask to avoid this runtime behavior leading to the hang, before the root problem is fixed, to avoid further delays in merging in the JIT/Methodical switchover to merged wrappers?\r\n\r\nI have yet to validate Manish’s question regarding whether the bug is only reproing in R2R mode. Based on my findings so far I don’t expect it to be the case, I think the bug is directly caused neither by R2R nor by the test merging; in this particular case I guess it’s just that the r2r-extra run simply runs all tests in R2R mode, I haven’t run any other pipeline exercising GC stress 0xF for JITted tests; I can easily do that and I expect it to yield the same results.\r\n\r\nLast but not least, apart from the hangs, some tests in my yesterday r2r-extra runs also showed a weird runtime JIT assertion failure I hadn’t seen before, for instance here:\r\n\r\n[https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-65597-head-d0e673790fd04e799d/Methodical_do/1/console.1b1a599e.log?sv=2019-07-07\u0026se=2022-05-03T09%3A51%3A49Z\u0026sr=c\u0026sp=rl\u0026sig=NEKcvtCDqMXIF32pjb6yKkPC6vnelRfTMtae0%2B2UZhg%3D](https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fhelixre8s23ayyeko0k025g8.blob.core.windows.net%2Fdotnet-runtime-refs-pull-65597-head-d0e673790fd04e799d%2FMethodical_do%2F1%2Fconsole.1b1a599e.log%3Fsv%3D2019-07-07%26se%3D2022-05-03T09%253A51%253A49Z%26sr%3Dc%26sp%3Drl%26sig%3DNEKcvtCDqMXIF32pjb6yKkPC6vnelRfTMtae0%252B2UZhg%253D\u0026data=05%7C01%7Ctrylek%40microsoft.com%7C583180d7f76e461c293908da1e633983%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637855708825895576%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C\u0026sdata=esxt85jSVvFQ%2F4OXJCxJWcoJzN0uFjdFbXB%2BfrHJdLU%3D\u0026reserved=0)\r\n\r\n10:28:14.221 Running test: JIT/Methodical/eh/finallyexec/nonlocalexittobeginningoftry_do/nonlocalexittobeginningoftry_do.dll\r\n\r\nAssert failure(PID 30019 [0x00007543], Thread: 30019 [0x7543]): Assertion failed \u0027shadowNum \u003e= info.compLocalsCount\u0027 in \u0027hello_nonlocalexittobeginningoftry_finallyexec_cs.Class1:TestEntryPoint():int\u0027 during \u0027Post-Emit\u0027 (IL size 88; hash 0x64b84821; Tier0)\r\n\r\n    File: /__w/1/s/src/coreclr/jit/compiler.cpp Line: 5289\r\n    Image: /datadisks/disk1/work/AAF2097E/p/corerun\r\n\r\n[createdump] Gathering state for process 30019 corerun\r\n\r\nI have no idea whether that might be related to the other bug, I’m afraid not; I haven’t yet been able to repro this one locally but that may be due to the fact that the tests hang almost immediately in GCStress mode so that we don’t have enough time to get to this other crash.\r\n\r\nThanks\r\n\r\nTomas\r\n\r\nFrom: Manish Godse \u003c[Manish.Godse@microsoft.com](mailto:Manish.Godse@microsoft.com)\u003e \r\nSent: Thursday, April 14, 2022 7:36 PM\r\nTo: Tomas Rylek \u003c[trylek@microsoft.com](mailto:trylek@microsoft.com)\u003e; Jan Vorlicek \u003c[janvorli@microsoft.com](mailto:janvorli@microsoft.com)\u003e; Jeremy Koritzinsky \u003c[Jeremy.Koritzinsky@microsoft.com](mailto:Jeremy.Koritzinsky@microsoft.com)\u003e; Andrew Au \u003c[andrewau@microsoft.com](mailto:andrewau@microsoft.com)\u003e; Bruce Forstall \u003c[Bruce.Forstall@microsoft.com](mailto:Bruce.Forstall@microsoft.com)\u003e\r\nCc: .NET Native Core Runtime \u0026 Tools Team \u003c[clrxrt@microsoft.com](mailto:clrxrt@microsoft.com)\u003e; CLR GC Core \u003c[clrgccore@microsoft.com](mailto:clrgccore@microsoft.com)\u003e\r\nSubject: RE: Advice needed - interpreting crashdump call stacks for hung GC stress Linux x64 run\r\n\r\nAdding GC team as well. Could you please share a couple of dumps, thread #8 is the finalizer thread which seems to be blocked on a GC doing object demotion. Does this only repro with R2R enabled or can repro without it too? \r\n\r\nThanks\r\n\r\nFrom: Tomas Rylek \u003c[trylek@microsoft.com](mailto:trylek@microsoft.com)\u003e \r\nSent: Thursday, April 14, 2022 8:31 AM\r\nTo: Jan Vorlicek \u003c[janvorli@microsoft.com](mailto:janvorli@microsoft.com)\u003e; Jeremy Koritzinsky \u003c[Jeremy.Koritzinsky@microsoft.com](mailto:Jeremy.Koritzinsky@microsoft.com)\u003e; Andrew Au \u003c[andrewau@microsoft.com](mailto:andrewau@microsoft.com)\u003e; Bruce Forstall \u003c[Bruce.Forstall@microsoft.com](mailto:Bruce.Forstall@microsoft.com)\u003e\r\nCc: .NET Native Core Runtime \u0026 Tools Team \u003c[clrxrt@microsoft.com](mailto:clrxrt@microsoft.com)\u003e\r\nSubject: Advice needed - interpreting crashdump call stacks for hung GC stress Linux x64 run\r\n\r\nHello everyone!\r\n\r\nI’m investigating Linux hangs in runtime-coreclr r2r-extra runs, the last obstacle preventing the merge of the PR by Jeremy and myself switching over JIT/Methodical tests to use merged wrappers. I have found out that with GCStress mode set to 0xF I’m able to trivially hang the merged wrapper in a couple of minutes; I have managed to capture the dump but I’m still struggling to understand it as it apparently involves some runtime interplay between GC, JIT and the GC stress logic. If anyone could advise me how to understand the call stacks, what additional data is needed to fully understand the issue and / or how to validate whether the captured dump really represents a deadlock (the app has been sitting idle for more than half an hour, normally all the tests finish in under a minute), I would be extremely grateful.\r\n\r\nThanks a lot\r\n\r\nTomas\r\n\r\nP.S. According to dotnet-dump analyze, frames 14-18 in thread 1 correspond to the following managed code:\r\n\r\n00007FFD646505F0 00007F2706126720 System.GC.WaitForPendingFinalizers()\r\n00007FFD64650680 00007F2707B308A0 GCTest_arrres_cs.Test.CollectAndFinalize() [/home/trylek/git/runtime/src/tests/JIT/Methodical/Arrays/misc/arrres.cs @ 52]\r\n00007FFD64650690 00007F2707B308EE GCTest_arrres_cs.Test.Test1() [/home/trylek/git/runtime/src/tests/JIT/Methodical/Arrays/misc/arrres.cs @ 60]\r\n00007FFD646506C0 00007F2707B3085A GCTest_arrres_cs.Test.TestEntryPoint() [/home/trylek/git/runtime/src/tests/JIT/Methodical/Arrays/misc/arrres.cs @ 39]\r\n00007FFD646506D0 00007F2706D63B4E Program.\u003cMain\u003e$(System.String[]) [/home/trylek/git/runtime/src/tests/JIT/Methodical/XUnitWrapperGenerator/XUnitWrapperGenerator.XUnitWrapperGenerator/FullRunner.g.cs\r\n\r\nThe test “arrres_do.csproj” (exercised by the merged wrapper JIT/Methodical/Methodical_do.csproj) isn’t marked as GC stress incompatible – we have marked all GC stress incompatible as requiring out-of-process execution to prevent them from affecting the in-process tests. Reproing this locally is trivial, after cloning my private branch [https://github.com/trylek/runtime/tree/JIT-Methodical](https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Ftrylek%2Fruntime%2Ftree%2FJIT-Methodical\u0026data=05%7C01%7Ctrylek%40microsoft.com%7C583180d7f76e461c293908da1e633983%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637855708825895576%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C\u0026sdata=mB1JsvGnnaCkTkEi8JlYyT2LHFQOrV%2Br9JLtMHc%2FVlU%3D\u0026reserved=0), it should suffice to:\r\n\r\n./build.sh clr+libs -c Release\r\n./build.sh clr -c Checked\r\nsrc/tests/build.sh rebuild checked crossgen2 -priority1 -test:JIT/Methodical/Methodical_do.csproj\r\nexport CORE_ROOT=\u003cdotnet root\u003e/artifacts/tests/coreclr/Linux.x64.Checked/Tests/Core_Root\r\nexport RunCrossGen2=1\r\nexport COMPlus_GCStress=0xF\r\nartifacts/tests/corerun/Linux.x64.Checked/JIT/Methodical/Methodical_do/Methodical_do.sh\r\n\r\nThe test will take about 3 minutes compiling all test assemblies with Crossgen2; it typically takes less than a minute to hit the hang after that.\r\n\r\n  thread #1, name = \u0027corerun\u0027, stop reason = signal SIGABRT\r\n    frame #0: 0x00007f2781446ad3 libpthread.so.0`__pthread_cond_wait at futex-internal.h:88\r\n    frame #1: 0x00007f2781446ab8 libpthread.so.0`__pthread_cond_wait at pthread_cond_wait.c:502\r\n    frame #2: 0x00007f27814469d8 libpthread.so.0`__pthread_cond_wait(cond=0x0000560003905488, mutex=0x0000560003905460) at pthread_cond_wait.c:655\r\n    frame #3: 0x00007f278020c3a7 libcoreclr.so`CorUnix::CPalSynchronizationManager::ThreadNativeWait(ptnwdNativeWaitData=0x0000560003905460, dwTimeout=4294967295, ptwrWakeupReason=0x00007ffd646500a4, pdwSignaledObject=0x00007ffd646500a0) at synchmanager.cpp:478:28\r\n    frame #4: 0x00007f278020b9eb libcoreclr.so`CorUnix::CPalSynchronizationManager::BlockThread(this=0x0000560003909af0, pthrCurrent=0x00005600039052c0, dwTimeout=4294967295, fAlertable=true, fIsSleep=\u003cunavailable\u003e, ptwrWakeupReason=0x00007ffd64650158, pdwSignaledObject=0x00007ffd6465015c) at synchmanager.cpp:301:22\r\n    frame #5: 0x00007f27802150cf libcoreclr.so`CorUnix::InternalWaitForMultipleObjectsEx(pThread=0x00005600039052c0, nCount=1, lpHandles=\u003cunavailable\u003e, bWaitAll=\u003cunavailable\u003e, dwMilliseconds=4294967295, bAlertable=YES, bPrioritize=NO) at wait.cpp:637:45\r\n    frame #6: 0x00007f2780215a5f libcoreclr.so`::WaitForMultipleObjectsEx(nCount=1, lpHandles=0x0000560003975400, bWaitAll=NO, dwMilliseconds=4294967295, bAlertable=YES) at wait.cpp:201:13\r\n    frame #7: 0x00007f277fd04dfb libcoreclr.so`Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) [inlined] Thread::DoAppropriateAptStateWait(this=\u003cunavailable\u003e, numWaiters=\u003cunavailable\u003e, pHandles=\u003cunavailable\u003e, bWaitAll=\u003cunavailable\u003e, timeout=\u003cunavailable\u003e, mode=\u003cunavailable\u003e) at threads.cpp:3397:12\r\n    frame #8: 0x00007f277fd04de0 libcoreclr.so`Thread::DoAppropriateWaitWorker(this=\u003cunavailable\u003e, countHandles=\u003cunavailable\u003e, handles=0x0000560003975400, waitAll=NO, millis=4294967295, mode=WaitMode_Alertable) at threads.cpp:3529\r\n    frame #9: 0x00007f277fcfe388 libcoreclr.so`Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) at threads.cpp:3246:40\r\n    frame #10: 0x00007f277fcfe380 libcoreclr.so`Thread::DoAppropriateWait(this=\u003cunavailable\u003e, countHandles=\u003cunavailable\u003e, handles=\u003cunavailable\u003e, waitAll=\u003cunavailable\u003e, millis=\u003cunavailable\u003e, mode=\u003cunavailable\u003e, syncState=0x0000000000000000) at threads.cpp:3261\r\n    frame #11: 0x00007f277fec9dde libcoreclr.so`CLREventBase::WaitEx(this=0x0000560003975400, dwMilliseconds=4294967295, mode=\u003cunavailable\u003e, syncState=\u003cunavailable\u003e) at synch.cpp:459:30\r\n    frame #12: 0x00007f277fdd790d libcoreclr.so`FinalizerThread::FinalizerThreadWait(timeout=4294967295) at finalizerthread.cpp:521:49\r\n    frame #13: 0x00007f277fd9739b libcoreclr.so`::GCInterface_WaitForPendingFinalizers() at comutilnative.cpp:1024:5\r\n    frame #14: 0x00007f2706126729\r\n    frame #15: 0x00007f2707b308a0\r\n    frame #16: 0x00007f2707b308ee\r\n    frame #17: 0x00007f2707b3085a\r\n    frame #18: 0x00007f2706d63b4e\r\n    frame #19: 0x00007f277ffd4dbf libcoreclr.so`CallDescrWorkerInternal at unixasmmacrosamd64.inc:847\r\n    frame #20: 0x00007f277fd61ac8 libcoreclr.so`CallDescrWorkerWithHandler(pCallDescrData=0x00007ee6f4daf2f8, fCriticalCall=88) at callhelpers.cpp:67:5\r\n    frame #21: 0x00007f277fd6267c libcoreclr.so`MethodDescCallSite::CallTargetWorker(this=\u003cunavailable\u003e, pArguments=0x00007ffd64656ad8, pReturnValue=\u003cunavailable\u003e, cbReturnValue=\u003cunavailable\u003e) at callhelpers.cpp:538:9\r\n    frame #22: 0x00007f277fb9e9ef libcoreclr.so`RunMain(MethodDesc*, short, int*, REF\u003cPtrArray\u003e*) [inlined] MethodDescCallSite::Call_RetArgSlot(this=0x00007ffd64656b38, pArguments=0x00007ffd64656ad8) at callhelpers.h:458:9\r\n    frame #23: 0x00007f277fb9e98a libcoreclr.so`RunMain(MethodDesc*, short, int*, REF\u003cPtrArray\u003e*) at assembly.cpp:1415\r\n    frame #24: 0x00007f277fb9e735 libcoreclr.so`RunMain(MethodDesc*, short, int*, REF\u003cPtrArray\u003e*) [inlined] RunMain(this=\u003cunavailable\u003e, pParam=\u003cunavailable\u003e)::$_0::operator()(Param*) const::\u0027lambda\u0027(Param*)::operator()(Param*) const at assembly.cpp:1483\r\n    frame #25: 0x00007f277fb9e735 libcoreclr.so`RunMain(MethodDesc*, short, int*, REF\u003cPtrArray\u003e*) at assembly.cpp:1485\r\n    frame #26: 0x00007f277fb9e69b libcoreclr.so`RunMain(pFD=\u003cunavailable\u003e, numSkipArgs=1, piRetVal=\u003cunavailable\u003e, stringArgs=\u003cunavailable\u003e) at assembly.cpp:1485\r\n    frame #27: 0x00007f277fb9ee4e libcoreclr.so`Assembly::ExecuteMainMethod(this=\u003cunavailable\u003e, stringArgs=0x00007ffd64656fa0, waitForOtherThreads=YES) at assembly.cpp:1601:18\r\n    frame #28: 0x00007f277fbebe30 libcoreclr.so`CorHost2::ExecuteAssembly(this=\u003cunavailable\u003e, dwAppDomainId=\u003cunavailable\u003e, pwzAssemblyPath=\u003cunavailable\u003e, argc=\u003cunavailable\u003e, argv=0x0000000000000000, pReturnValue=\u003cunavailable\u003e) at corhost.cpp:384:39\r\n    frame #29: 0x00007f277fb81e1c libcoreclr.so`::coreclr_execute_assembly(hostHandle=0x000056000390b920, domainId=\u003cunavailable\u003e, argc=\u003cunavailable\u003e, argv=\u003cunavailable\u003e, managedAssemblyPath=\u003cunavailable\u003e, exitCode=0x00007ffd6465717c) at exports.cpp:430:24\r\n    frame #30: 0x0000560002f8e1f4 corerun`main [inlined] run(config=0x00007ffd646571e8) at corerun.cpp:368:18\r\n    frame #31: 0x0000560002f8c95d corerun`main(argc=\u003cunavailable\u003e, argv=\u003cunavailable\u003e) at corerun.cpp:563\r\n    frame #32: 0x00007f278072ac87 libc.so.6`__libc_start_main(main=(corerun`main at corerun.cpp:555), argc=4, argv=0x00007ffd64657ef8, init=\u003cunavailable\u003e, fini=\u003cunavailable\u003e, rtld_fini=\u003cunavailable\u003e, stack_end=0x00007ffd64657ee8) at libc-start.c:310\r\n    frame #33: 0x0000560002f8b8aa corerun`_start + 42\r\n\r\n\r\n\r\n* thread #2, stop reason = signal SIGABRT\r\n  * frame #0: 0x00007f2780824539 libc.so.6`syscall at syscall.S:38\r\n    frame #1: 0x00007f277f3c3bd3 liblttng-ust.so.0`___lldb_unnamed_symbol62$$liblttng-ust.so.0 + 595\r\n    frame #2: 0x00007f27814406db libpthread.so.0`start_thread(arg=0x00007f277ed7c700) at pthread_create.c:463\r\n    frame #3: 0x00007f278082a61f libc.so.6`__GI___clone at clone.S:95\r\n\r\n  thread #3, stop reason = signal SIGABRT\r\n    frame #0: 0x00007f2780824539 libc.so.6`syscall at syscall.S:38\r\n   frame #1: 0x00007f277f3c3bd3 liblttng-ust.so.0`___lldb_unnamed_symbol62$$liblttng-ust.so.0 + 595\r\n    frame #2: 0x00007f27814406db libpthread.so.0`start_thread(arg=0x00007f277e57b700) at pthread_create.c:463\r\n    frame #3: 0x00007f278082a61f libc.so.6`__GI___clone at clone.S:95\r\n\r\n  thread #4, stop reason = signal SIGABRT\r\n    frame #0: 0x00007f278081dbb9 libc.so.6`__GI___poll(fds=0x00007f277dd79d18, nfds=1, timeout=-1) at poll.c:29\r\n    frame #1: 0x00007f2780210402 libcoreclr.so`CorUnix::CPalSynchronizationManager::ReadBytesFromProcessPipe(this=0x0000560003909af0, iTimeout=-1, pRecvBuf=\"▒৐\\x03\", iBytes=1) at synchmanager.cpp:2233:24\r\n    frame #2: 0x00007f278020f9b5 libcoreclr.so`CorUnix::CPalSynchronizationManager::ReadCmdFromProcessPipe(this=0x0000560003909af0, iPollTimeout=-1, pswcWorkerCmd=0x00007f277dd79dec, pshridMarshaledData=0x00007f277dd79df0, pdwData=0x00007f277dd79dfc) at synchmanager.cpp:2011:16\r\n    frame #3: 0x00007f278020eaf8 libcoreclr.so`CorUnix::CPalSynchronizationManager::WorkerThread(pArg=0x0000560003909af0) at synchmanager.cpp:1714:37\r\n    frame #4: 0x00007f27802224d2 libcoreclr.so`CorUnix::CPalThread::ThreadEntry(pvParam=0x000056000390a7e0) at thread.cpp:1829:16\r\n    frame #5: 0x00007f27814406db libpthread.so.0`start_thread(arg=0x00007f277dd7a700) at pthread_create.c:463\r\n    frame #6: 0x00007f278082a61f libc.so.6`__GI___clone at clone.S:95\r\n\r\n  thread #5, stop reason = signal SIGABRT\r\n    frame #0: 0x00007f278144b32a libpthread.so.0`__waitpid(pid=23540, stat_loc=0x00007f277d5789f4, options=0) at waitpid.c:30\r\n    frame #1: 0x00007f278021eb52 libcoreclr.so`PROCCreateCrashDump(argv=\u003cunavailable\u003e) at process.cpp:2400:22\r\n    frame #2: 0x00007f278021f197 libcoreclr.so`::PAL_GenerateCoreDump(dumpName=\u003cunavailable\u003e, dumpType=\u003cunavailable\u003e, flags=\u003cunavailable\u003e) at process.cpp:2522:18\r\n    frame #3: 0x00007f277fc148f8 libcoreclr.so`GenerateDump(dumpName=u\"/home/trylek/dumps/hang.21823.dmp\", dumpType=4, flags=0) at excep.cpp:4189:16\r\n    frame #4: 0x00007f278017e919 libcoreclr.so`ds_dump_protocol_helper_handle_ipc_message(_DiagnosticsIpcMessage*, _DiagnosticsIpcStream*) at ds-rt-coreclr.h:204:7\r\n    frame #5: 0x00007f278017e8e0 libcoreclr.so`ds_dump_protocol_helper_handle_ipc_message(_DiagnosticsIpcMessage*, _DiagnosticsIpcStream*) [inlined] dump_protocol_helper_generate_core_dump(_DiagnosticsIpcMessage*, _DiagnosticsIpcStream*) at ds-dump-protocol.c:118\r\n    frame #6: 0x00007f278017e599 libcoreclr.so`ds_dump_protocol_helper_handle_ipc_message(message=\u003cunavailable\u003e, stream=0x00007f26f80091b0) at ds-dump-protocol.c:149\r\n    frame #7: 0x00007f278017cee8 libcoreclr.so`server_thread(data=\u003cunavailable\u003e) at ds-server.c:161:4\r\n    frame #8: 0x00007f27802224d2 libcoreclr.so`CorUnix::CPalThread::ThreadEntry(pvParam=0x00005600039283a0) at thread.cpp:1829:16\r\n    frame #9: 0x00007f27814406db libpthread.so.0`start_thread(arg=0x00007f277d579700) at pthread_create.c:463\r\n    frame #10: 0x00007f278082a61f libc.so.6`__GI___clone at clone.S:95\r\n\r\n  thread #6, stop reason = signal SIGABRT\r\n    frame #0: 0x00007f278144ae9e libpthread.so.0`__libc_open64(file=\"/tmp/clr-debug-pipe-21823-6387670-in\", oflag=0) at open64.c:47\r\n    frame #1: 0x00007f2780074982 libcoreclr.so`TwoWayPipe::WaitForConnection(this=0x00005600038b2b38) at twowaypipe.cpp:87:21\r\n    frame #2: 0x00007f278006bf2b libcoreclr.so`DbgTransportSession::TransportWorker(this=0x00005600038b2990) at dbgtransportsession.cpp:1321:25\r\n    frame #3: 0x00007f278006aaf9 libcoreclr.so`DbgTransportSession::TransportWorkerStatic(pvContext=\u003cunavailable\u003e) at dbgtransportsession.cpp:1237:40\r\n    frame #4: 0x00007f27802224d2 libcoreclr.so`CorUnix::CPalThread::ThreadEntry(pvParam=0x0000560003957af0) at thread.cpp:1829:16\r\n    frame #5: 0x00007f27814406db libpthread.so.0`start_thread(arg=0x00007f2777fff700) at pthread_create.c:463\r\n    frame #6: 0x00007f278082a61f libc.so.6`__GI___clone at clone.S:95\r\n\r\n  thread #7, stop reason = signal SIGABRT\r\n    frame #0: 0x00007f2781446ad3 libpthread.so.0`__pthread_cond_wait at futex-internal.h:88\r\n    frame #1: 0x00007f2781446ab8 libpthread.so.0`__pthread_cond_wait at pthread_cond_wait.c:502\r\n    frame #2: 0x00007f27814469d8 libpthread.so.0`__pthread_cond_wait(cond=0x0000560003958628, mutex=0x0000560003958600) at pthread_cond_wait.c:655\r\n    frame #3: 0x00007f278020c3a7 libcoreclr.so`CorUnix::CPalSynchronizationManager::ThreadNativeWait(ptnwdNativeWaitData=0x0000560003958600, dwTimeout=4294967295, ptwrWakeupReason=0x00007f27777fdb04, pdwSignaledObject=0x00007f27777fdb00) at synchmanager.cpp:478:28\r\n    frame #4: 0x00007f278020b9eb libcoreclr.so`CorUnix::CPalSynchronizationManager::BlockThread(this=0x0000560003909af0, pthrCurrent=0x0000560003958460, dwTimeout=4294967295, fAlertable=false, fIsSleep=\u003cunavailable\u003e, ptwrWakeupReason=0x00007f27777fdbb8, pdwSignaledObject=0x00007f27777fdbbc) at synchmanager.cpp:301:22\r\n    frame #5: 0x00007f27802150cf libcoreclr.so`CorUnix::InternalWaitForMultipleObjectsEx(pThread=0x0000560003958460, nCount=3, lpHandles=\u003cunavailable\u003e, bWaitAll=\u003cunavailable\u003e, dwMilliseconds=4294967295, bAlertable=NO, bPrioritize=NO) at wait.cpp:637:45\r\n    frame #6: 0x00007f2780215a5f libcoreclr.so`::WaitForMultipleObjectsEx(nCount=3, lpHandles=0x00007f27777fdd90, bWaitAll=NO, dwMilliseconds=4294967295, bAlertable=NO) at wait.cpp:201:13\r\n    frame #7: 0x00007f2780067656 libcoreclr.so`DebuggerRCThread::MainLoop(this=0x0000560003948540) at rcthread.cpp:945:30\r\n    frame #8: 0x00007f2780067479 libcoreclr.so`DebuggerRCThread::ThreadProc(this=0x0000560003948540) at rcthread.cpp:750:5\r\n    frame #9: 0x00007f2780066ee3 libcoreclr.so`DebuggerRCThread::ThreadProcStatic((null)=\u003cunavailable\u003e) at rcthread.cpp:1334:8\r\n    frame #10: 0x00007f27802224d2 libcoreclr.so`CorUnix::CPalThread::ThreadEntry(pvParam=0x0000560003958460) at thread.cpp:1829:16\r\n    frame #11: 0x00007f27814406db libpthread.so.0`start_thread(arg=0x00007f27777fe700) at pthread_create.c:463\r\n    frame #12: 0x00007f278082a61f libc.so.6`__GI___clone at clone.S:95\r\n\r\n  thread #8, stop reason = signal SIGABRT\r\n    frame #0: 0x00007f2781875bac ld-linux-x86-64.so.2`__tls_get_addr at tls_get_addr.S:59\r\n    frame #1: 0x00007f277fbefcfa libcoreclr.so`CrstBase::PreEnter() [inlined] GetThreadNULLOk() at threads.inl:37:31\r\n    frame #2: 0x00007f277fbefcea libcoreclr.so`CrstBase::PreEnter(this=0x0000560003934b60) at crst.cpp:403\r\n    frame #3: 0x00007f277fbefbcf libcoreclr.so`CrstBase::Enter(this=0x0000560003934b60, noLevelCheckFlag=CRST_LEVEL_CHECK) at crst.cpp:300:5\r\n    frame #4: 0x00007f277ff2574f libcoreclr.so`HndResetAgeMap(HandleTable*, unsigned int const*, unsigned int, unsigned int, unsigned int, unsigned int) [inlined] FunctionBase\u003cCrstBase*, \u0026(CrstBase::AcquireLock(CrstBase*)), \u0026(CrstBase::ReleaseLock(CrstBase*))\u003e::DoAcquire(this=0x00007f27767fb0c8) at holder.h:711:9\r\n    frame #5: 0x00007f277ff2574a libcoreclr.so`HndResetAgeMap(HandleTable*, unsigned int const*, unsigned int, unsigned int, unsigned int, unsigned int) [inlined] BaseHolder\u003cCrstBase*, FunctionBase\u003cCrstBase*, \u0026(CrstBase::AcquireLock(CrstBase*)), \u0026(CrstBase::ReleaseLock(CrstBase*))\u003e, 0ul, \u0026(int CompareDefault\u003cCrstBase*\u003e(CrstBase*, CrstBase*))\u003e::Acquire() at holder.h:283\r\n    frame #6: 0x00007f277ff2574a libcoreclr.so`HndResetAgeMap(HandleTable*, unsigned int const*, unsigned int, unsigned int, unsigned int, unsigned int) [inlined] BaseHolder\u003cCrstBase*, FunctionBase\u003cCrstBase*, \u0026(CrstBase::AcquireLock(CrstBase*)), \u0026(CrstBase::ReleaseLock(CrstBase*))\u003e, 0ul, \u0026(int CompareDefault\u003cCrstBase*\u003e(CrstBase*, CrstBase*))\u003e::BaseHolder(this=0x00007f27767fb0c8, value=\u003cunavailable\u003e) at holder.h:250\r\n    frame #7: 0x00007f277ff25737 libcoreclr.so`HndResetAgeMap(HandleTable*, unsigned int const*, unsigned int, unsigned int, unsigned int, unsigned int) [inlined] Holder\u003cCrstBase*, \u0026(CrstBase::AcquireLock(CrstBase*)), \u0026(CrstBase::ReleaseLock(CrstBase*)), 0ul, \u0026(int CompareDefault\u003cCrstBase*\u003e(CrstBase*, CrstBase*)), true\u003e::Holder(this=0x00007f27767fb0c8, value=\u003cunavailable\u003e) at holder.h:746\r\n    frame #8: 0x00007f277ff25737 libcoreclr.so`HndResetAgeMap(hTable=0x0000560003934b30, types=0x00007f27767fb120, typeCount=9, condemned=2, maxgen=2, flags=\u003cunavailable\u003e) at handletable.cpp:827\r\n    frame #9: 0x00007f277ff2f109 libcoreclr.so`Ref_RejuvenateHandles(condemned=2, maxgen=2, lp1=\u003cunavailable\u003e) at objecthandle.cpp:1692:21\r\n    frame #10: 0x00007f277ff30794 libcoreclr.so`GCScan::GcDemote(condemned=\u003cunavailable\u003e, max_gen=2, sc=0x00007f27767fb320) at gcscan.cpp:223:5\r\n    frame #11: 0x00007f277ffa91c9 libcoreclr.so`WKS::gc_heap::plan_phase(condemned_gen_number=\u003cunavailable\u003e) at gc.cpp:29782:17\r\n    frame #12: 0x00007f277ffa0210 libcoreclr.so`WKS::gc_heap::gc1() at gc.cpp:20613:13\r\n    frame #13: 0x00007f277ffad811 libcoreclr.so`WKS::gc_heap::garbage_collect(n=\u003cunavailable\u003e) at gc.cpp:0\r\n    frame #14: 0x00007f277ff9a01d libcoreclr.so`WKS::GCHeap::GarbageCollectGeneration(this=\u003cunavailable\u003e, gen=2, reason=reason_gcstress) at gc.cpp:45957:9\r\n    frame #15: 0x00007f277ffccc7f libcoreclr.so`WKS::GCHeap::GarbageCollect(int, bool, int) [inlined] WKS::GCHeap::GarbageCollectTry(this=\u003cunavailable\u003e, generation=\u003cunavailable\u003e, low_memory_p=\u003cunavailable\u003e, mode=\u003cunavailable\u003e) at gc.cpp:45202:12\r\n    frame #16: 0x00007f277ffccc75 libcoreclr.so`WKS::GCHeap::GarbageCollect(this=\u003cunavailable\u003e, generation=\u003cunavailable\u003e, low_memory_p=\u003cunavailable\u003e, mode=\u003cunavailable\u003e) at gc.cpp:45136\r\n    frame #17: 0x00007f277ffcbef3 libcoreclr.so`WKS::GCHeap::StressHeap(this=\u003cunavailable\u003e, context=\u003cunavailable\u003e) at gc.cpp:44756:9\r\n    frame #18: 0x00007f277fde12c2 libcoreclr.so`Alloc(unsigned long, GC_ALLOC_FLAGS) [inlined] _GCStress::StressGcTriggerPolicy::Trigger(acontext=\u003cunavailable\u003e) at gcstress.h:297:41\r\n    frame #19: 0x00007f277fde128c libcoreclr.so`Alloc(unsigned long, GC_ALLOC_FLAGS) [inlined] _GCStress::GCSBase\u003c(gcs_trigger_points)1, _GCStress::IgnoreFastGcSPolicy, _GCStress::AnyGcModePolicy, _GCStress::StressGcTriggerPolicy\u003e::MaybeTrigger(acontext=\u003cunavailable\u003e, minFastGc=\u003cunavailable\u003e) at gcstress.h:415\r\n    frame #20: 0x00007f277fde1276 libcoreclr.so`Alloc(unsigned long, GC_ALLOC_FLAGS) [inlined] _GCStress::GCStress\u003c(gcs_trigger_points)10, mpl::null_type, mpl::null_type, mpl::null_type\u003e::MaybeTrigger(acontext=0x0000560003975b78) at gcstress.h:464\r\n    frame #21: 0x00007f277fde1276 libcoreclr.so`Alloc(size=288, flags=\u003cunavailable\u003e) at gchelpers.cpp:225\r\n    frame #22: 0x00007f277fde0e7b libcoreclr.so`AllocateObject(pMT=0x00007f2706e63f78) at gchelpers.cpp:979:37\r\n    frame #23: 0x00007f277fe09982 libcoreclr.so`JIT_New(typeHnd_=0x00007f2706e63f78) at jithelpers.cpp:2312:14\r\n    frame #24: 0x00007f2706126031\r\n    frame #25: 0x00007f270621a9cc\r\n    frame #26: 0x00007f2706395f3f\r\n    frame #27: 0x00007f270616716d\r\n    frame #28: 0x00007f277ffd4d3e libcoreclr.so`FastCallFinalizeWorker at calldescrworkeramd64.S:30\r\n    frame #29: 0x00007f277fca06d9 libcoreclr.so`MethodTable::CallFinalizer(Object*) at methodtable.cpp:3471:5\r\n    frame #30: 0x00007f277fca0620 libcoreclr.so`MethodTable::CallFinalizer(obj=\u003cunavailable\u003e) at methodtable.cpp:3589\r\n    frame #31: 0x00007f277fdd69b8 libcoreclr.so`FinalizerThread::FinalizeAllObjects() at finalizerthread.cpp:104:9\r\n    frame #32: 0x00007f277fdd6cd5 libcoreclr.so`FinalizerThread::FinalizerThreadWorker(args=\u003cunavailable\u003e) at finalizerthread.cpp:336:9\r\n    frame #33: 0x00007f277fd0ac0e libcoreclr.so`ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) [inlined] ManagedThreadBase_DispatchInner(pCallState=\u003cunavailable\u003e) at threads.cpp:7324:5\r\n    frame #34: 0x00007f277fd0ac07 libcoreclr.so`ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) at threads.cpp:7368\r\n    frame #35: 0x00007f277fd0ab01 libcoreclr.so`ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) [inlined] ManagedThreadBase_DispatchOuter(this=\u003cunavailable\u003e, pParam=\u003cunavailable\u003e)::$_6::operator()(ManagedThreadBase_DispatchOuter(ManagedThreadCallState*)::TryArgs*) const::\u0027lambda\u0027(Param*)::operator()(Param*) const at threads.cpp:7526\r\n    frame #36: 0x00007f277fd0aafd libcoreclr.so`ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) at threads.cpp:7528\r\n    frame #37: 0x00007f277fd0aa83 libcoreclr.so`ManagedThreadBase_DispatchOuter(pCallState=\u003cunavailable\u003e) at threads.cpp:7552\r\n    frame #38: 0x00007f277fd0b47d libcoreclr.so`ManagedThreadBase::FinalizerBase(void (*)(void*)) [inlined] ManagedThreadBase_NoADTransition(pTarget=\u003cunavailable\u003e, filterType=FinalizerThread)(void*), UnhandledExceptionLocation) at threads.cpp:7596:5\r\n    frame #39: 0x00007f277fd0b465 libcoreclr.so`ManagedThreadBase::FinalizerBase(pTarget=\u003cunavailable\u003e)(void*)) at threads.cpp:7622\r\n    frame #40: 0x00007f277fdd7428 libcoreclr.so`FinalizerThread::FinalizerThreadStart(args=\u003cunavailable\u003e) at finalizerthread.cpp:386:17\r\n    frame #41: 0x00007f27802224d2 libcoreclr.so`CorUnix::CPalThread::ThreadEntry(pvParam=0x00005600039772f0) at thread.cpp:1829:16\r\n    frame #42: 0x00007f27814406db libpthread.so.0`start_thread(arg=0x00007f27767fc700) at pthread_create.c:463\r\n    frame #43: 0x00007f278082a61f libc.so.6`__GI___clone at clone.S:95\r\n\r\n  thread #9, stop reason = signal SIGABRT\r\n    frame #0: 0x00007f278144a474 libpthread.so.0`__libc_read at read.c:27\r\n    frame #1: 0x00007f278144a460 libpthread.so.0`__libc_read(fd=566, buf=0x00007ee6db0bbeba, nbytes=1)\r\n    frame #2: 0x00007f27743bc59f libSystem.Native.so`SignalHandlerLoop(arg=\u003cunavailable\u003e) at pal_signal.c:323:29\r\n    frame #3: 0x00007f27814406db libpthread.so.0`start_thread(arg=0x00007ee6db0bc700) at pthread_create.c:463\r\n    frame #4: 0x00007f278082a61f libc.so.6`__GI___clone at clone.S:95\r\n\u003c/pre\u003e\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003etrylek\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-04-14T22:57:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Bv5Fy",
                                           "createdAt":  "2022-04-19T20:06:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "cshung",
                                           "body":  "This comment describes some findings on the issue:\r\n\r\nThe issue is somewhat obvious when we look into the test case [here](https://github.com/dotnet/runtime/blob/4881a639e7c3f27b5a8d2d160e234d8055333cda/src/tests/JIT/Methodical/Arrays/misc/arrres.cs).\r\n\r\nThe finalizer of the `Test` object keeps putting itself back into the finalization queue, that is why the `WaitForPendingFinalizers` never completes.\r\n\r\nAs for why it isn\u0027t happening for other scenarios, there are two interesting observations:\r\n\r\n1. The finalizer of `Test` is not doing any allocation, but in the merged test, some other finalizers is performing an allocation on the finalizer thread. \r\n2. When the merged test performs an allocation in the finalizer thread under GC stress, this will cause a GC, and that will trigger the finalizers.\r\n\r\nSo I speculate when the test case is run under GCStress alone, the fact that the finalizer is not allocating helped it to get out of the infinite loop, but once it is merged, we don\u0027t have that property (i.e. the finalizer thread never allocates) anymore.",
                                           "updatedAt":  "2022-04-19T20:06:58Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "GCStress 0xF non-deterministically hangs managed app execution on Unix",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/68529",
        "createdAt":  "2022-04-26T00:31:06Z",
        "number":  68529,
        "author":  "BruceForstall",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-03-31T22:10:33Z",
        "body":  "Recent run of `runtime-coreclr gcstress0x3-gcstress0xc` pipeline shows timeout failures after one hour in many different gcstress=3 tests:\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=1735353\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=46978262\u0026resultId=111084\u0026paneView=debug\r\n\r\ne.g., the `Methodical_*` tests in:\r\n- `coreclr Linux x64 Checked gcstress0x3 @ Ubuntu.1804.Amd64.Open`\r\n- `coreclr Linux arm64 Checked gcstress0x3 @ (Ubuntu.1804.Arm64.Open)Ubuntu.1804.Armarch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-helix-arm64v8-20210531091519-97d8652`\r\n- `coreclr Linux arm Checked gcstress0x3 @ (Ubuntu.1804.Arm32.Open)Ubuntu.1804.Armarch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-helix-arm32v7-bfcd90a-20200121150440`\r\n- `coreclr OSX arm64 Checked gcstress0x3 @ OSX.1200.ARM64.Open`\r\n\r\n@trylek @jkoritzinsky did the recent test \"batching\" change effectively change the per-job timeouts? Does gcstress need to be handled differently?",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOWPhPMw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5CHJcB",
                                           "createdAt":  "2022-04-26T00:31:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nRecent run of `runtime-coreclr gcstress0x3-gcstress0xc` pipeline shows timeout failures after one hour in many different gcstress=3 tests:\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=1735353\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=46978262\u0026resultId=111084\u0026paneView=debug\r\n\r\ne.g., the `Methodical_*` tests in:\r\n- `coreclr Linux x64 Checked gcstress0x3 @ Ubuntu.1804.Amd64.Open`\r\n- `coreclr Linux arm64 Checked gcstress0x3 @ (Ubuntu.1804.Arm64.Open)Ubuntu.1804.Armarch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-helix-arm64v8-20210531091519-97d8652`\r\n- `coreclr Linux arm Checked gcstress0x3 @ (Ubuntu.1804.Arm32.Open)Ubuntu.1804.Armarch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-helix-arm32v7-bfcd90a-20200121150440`\r\n- `coreclr OSX arm64 Checked gcstress0x3 @ OSX.1200.ARM64.Open`\r\n\r\n@trylek @jkoritzinsky did the recent test \"batching\" change effectively change the per-job timeouts? Does gcstress need to be handled differently?\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eBruceForstall\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`GCStress`, `area-Infrastructure-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-04-26T00:31:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CHJ6m",
                                           "createdAt":  "2022-04-26T00:34:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "I\u0027ve just been discussing GCStress timeouts with JanV who hit this locally and I think I have a fix or at least a mitigation in\r\n\r\nhttps://github.com/dotnet/runtime/pull/68523\r\n\r\nPlease let me know if you\u0027re aware of yet another place where the timeouts are getting hard-coded, there are never enough duplicates.",
                                           "updatedAt":  "2022-04-26T00:34:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CHNQs",
                                           "createdAt":  "2022-04-26T00:58:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "A separate question, besides upping the timeouts, would be whether the gcstress jobs should split into more Helix jobs to do the work with greater parallelism, or at least not miss so much work beyond a timeout if a timeout is actually hit. Also, we never see Helix work progress until the job is finished, so it\u0027s advantageous to not have a Helix job run too long.",
                                           "updatedAt":  "2022-04-26T00:58:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CLW-U",
                                           "createdAt":  "2022-04-26T21:37:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "@BruceForstall - thanks for pointing that out. I think there are two different aspects to all of this. I looked at multiple jobs in the run and all timeouts in the \u003ccode\u003eMethodical_*\u003c/code\u003e newly merged tests happened after just a few minutes of activity, I don\u0027t think they\u0027re \"real\" timeouts. I suspect that the \u003ccode\u003eGCStress=0x3\u003c/code\u003e level has probably similar characteristics as \u003ccode\u003eGCStress=0xF\u003c/code\u003e we saw previously causing arbitrary timeouts in the \u003ccode\u003er2r extra\u003c/code\u003e runs. According to @cshung\u0027s comments in the issue\r\n\r\nhttps://github.com/dotnet/runtime/issues/68060#issuecomment-1103073650\r\n\r\nit might be in fact a test issue. In all failed tests I looked at the failure happened either in the \u003ccode\u003earrres_*\u003c/code\u003e test that Andrew explicitly commented on in the thread or another test \u003ccode\u003ecopy_prop_byref_to_native_int\u003c/code\u003e. I don\u0027t have sufficient GC expertise to assess whether this has the same reason but apparently it also explicitly calls \u003ccode\u003eGC.WaitForPendingFinalizers\u003c/code\u003e so it might be the case that the underlying problem for both tests is the same.\r\n\r\nFor the actual running time of the individual items, that is something these failures tell us nothing about. In JanV\u0027s local testing the Methodical merged wrappers timed out after the pre-existing 20-minute timeout in GCStress mode and the TypeGeneratorTests just made it in about 10-15 minutes. In Pri1 mode each of the Methodical wrappers comprises about 200-300 tests i.o.w. if they theoretically took about 45 minutes to run, further splitting would reduce the total job running time at the expense of spinning more Helix VM\u0027s and more overhead w.r.t. repeated managed runtime initialization that is much slower in the GC stress mode. I\u0027m trying to mine Kusto for data to let me better estimate the trade-off.",
                                           "updatedAt":  "2022-04-26T21:43:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CLjFi",
                                           "createdAt":  "2022-04-26T22:51:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "\u003e I looked at multiple jobs in the run and all timeouts in the Methodical_* newly merged tests happened after just a few minutes of activity, I don\u0027t think they\u0027re \"real\" timeouts. I suspect that the GCStress=0x3 level has probably similar characteristics as GCStress=0xF we saw previously causing arbitrary timeouts in the r2r extra runs. \r\n\r\nDoes this mean that maybe the way some tests are written makes them incompatible with a run enabling both GCStress and merged tests? If so, can we identify those incompatible patterns and disallow merging for those tests?\r\n",
                                           "updatedAt":  "2022-04-26T22:51:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CLjmQ",
                                           "createdAt":  "2022-04-26T22:56:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "Yes, that more or less matches my understanding. In general the easiest way to single out these tests is by marking them as \u003ccode\u003eRequiresProcessIsolation\u003c/code\u003e, that is basically identical to the legacy out-of-proc way XUnit console runs the non-converted tests. It\u0027s a no-brainer to mark the arrres and copy_prop_byref_to_native_int as out-of-proc, the only interesting question is whether by doing that we\u0027re really fixing something and not just papering over a real problem.",
                                           "updatedAt":  "2022-04-26T22:56:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5EahoP",
                                           "createdAt":  "2022-06-06T19:13:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "@trylek A weekend run shows we\u0027re still hitting 4 hour timeouts with Linux-arm64 GCStress=3 in a couple Methodical_* tests:\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=1807767\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=48108702\u0026resultId=110196\u0026paneView=debug\r\n",
                                           "updatedAt":  "2022-06-06T19:13:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5EarId",
                                           "createdAt":  "2022-06-06T19:47:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "Hmm, sadly this is not a previously overlooked case - there are no explicit GC management calls in the test; I\u0027m afraid I don\u0027t see any way forward without some form of diagnosability, either by enabling dumps (e.g. just for a few instrumented runs if it\u0027s problematic for all tests) or by reproing locally or on a lab VM.",
                                           "updatedAt":  "2022-06-06T19:47:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Y-E8z",
                                           "createdAt":  "2023-03-31T22:10:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "markples",
                                           "body":  "`baseservices/threading/regressions/30032/30032.cs` has the same behavior when merged.  It calls `Sleep`, `Collect`, and `WaitForPendingFinalizers`.  I don\u0027t think the test or wrapper directly adds any finalizers, but the test does use `Timer`, and `TimerHolder` has one.",
                                           "updatedAt":  "2023-03-31T22:10:33Z"
                                       }
                                   ],
                         "totalCount":  9
                     },
        "title":  "gcstress=3 timeout failures",
        "labels":  [
                       "GCStress",
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/70270",
        "createdAt":  "2022-06-06T01:43:54Z",
        "number":  70270,
        "author":  "VincentBu",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-08-17T18:44:22Z",
        "body":  "Run: [runtime-coreclr jitstress-isas-x86 20220604.1](https://dev.azure.com/dnceng/public/_build/results?buildId=1807172\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=48102224\u0026paneView=debug\u0026resultId=106199)\r\n\r\nFailed test:\r\n```\r\ncoreclr windows x64 Checked jitstress_isas_nohwintrinsic @ Windows.10.Amd64.Open\r\n\r\n- baseservices\\\\exceptions\\\\stackoverflow\\\\stackoverflowtester\\\\stackoverflowtester.cmd\r\n\r\n```\r\n**Error message:**\r\n```\r\nTest Infrastructure Failure: System.InvalidOperationException: Process has exited, so the requested information is not available.\r\nat System.Diagnostics.Process.get_ProcessName()\r\nat CoreclrTestLib.CoreclrTestWrapperLib.FindChildProcessesByName(Process process, String childName)\r\nat CoreclrTestLib.CoreclrTestWrapperLib.RunTest(String executable, String outputFile, String errorFile, String category, String testBinaryBase, String outputDir)\r\nat baseservices_exceptions.stackoverflow_stackoverflowtester_stackoverflowtester._stackoverflow_stackoverflowtester_stackoverflowtester_cmd()\r\nExpected: True\r\nActual:   False\r\n\r\n\r\nStack trace\r\n   at baseservices_exceptions._stackoverflow_stackoverflowtester_stackoverflowtester_._stackoverflow_stackoverflowtester_stackoverflowtester_cmd()\r\n```\r\nNo Kusto information.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHORSmJ9g==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5FKYSM",
                                           "createdAt":  "2022-06-20T11:50:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nRun: [runtime-coreclr jitstress-isas-x86 20220604.1](https://dev.azure.com/dnceng/public/_build/results?buildId=1807172\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=48102224\u0026paneView=debug\u0026resultId=106199)\r\n\r\nFailed test:\r\n```\r\ncoreclr windows x64 Checked jitstress_isas_nohwintrinsic @ Windows.10.Amd64.Open\r\n\r\n- baseservices\\\\exceptions\\\\stackoverflow\\\\stackoverflowtester\\\\stackoverflowtester.cmd\r\n\r\n```\r\n**Error message:**\r\n```\r\nTest Infrastructure Failure: System.InvalidOperationException: Process has exited, so the requested information is not available.\r\nat System.Diagnostics.Process.get_ProcessName()\r\nat CoreclrTestLib.CoreclrTestWrapperLib.FindChildProcessesByName(Process process, String childName)\r\nat CoreclrTestLib.CoreclrTestWrapperLib.RunTest(String executable, String outputFile, String errorFile, String category, String testBinaryBase, String outputDir)\r\nat baseservices_exceptions.stackoverflow_stackoverflowtester_stackoverflowtester._stackoverflow_stackoverflowtester_stackoverflowtester_cmd()\r\nExpected: True\r\nActual:   False\r\n\r\n\r\nStack trace\r\n   at baseservices_exceptions._stackoverflow_stackoverflowtester_stackoverflowtester_._stackoverflow_stackoverflowtester_stackoverflowtester_cmd()\r\n```\r\nNo Kusto information.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eVincentBu\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`os-windows`, `arch-x64`, `area-ExceptionHandling-coreclr`, `area-Infrastructure-coreclr`, `untriaged`, `blocking-clean-ci-optional`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-06-20T11:50:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FKYn2",
                                           "createdAt":  "2022-06-20T11:51:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCix_ug==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "hoyosjs",
                                                                               "createdAt":  "2022-06-21T01:59:45Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "janvorli",
                                           "body":  "This issue happens in the coreclr test running infrastructure, not in the test itself. It seems the code just needs to be hardened against child process exiting.",
                                           "updatedAt":  "2022-06-20T11:51:53Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Harden CoreclrTestLib against child-proc exited",
        "labels":  [
                       "area-Infrastructure-coreclr",
                       "blocking-clean-ci-optional"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/70306",
        "createdAt":  "2022-06-06T20:17:59Z",
        "number":  70306,
        "author":  "BruceForstall",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-11T19:20:20Z",
        "body":  "In this (GCStress) run:\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=1807767\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=48108678\u0026resultId=109890\u0026paneView=debug\r\n\r\nThe \"coreclr Linux arm Checked gcstress0xc\" leg has failures in the merged Methodical tests, with VM asserts. Those tests don\u0027t appear in the AzDO UI (as individual tests), linked above.\r\n\r\nFor example, Methodical_do fails with:\r\n```\r\n15:21:19.717 Running test: JIT/Methodical/Arrays/lcs/lcsvalbox_do/lcsvalbox_do.cmd\r\n\r\nAssert failure(PID 56 [0x00000038], Thread: 68 [0x0044]): !CREATE_CHECK_STRING(pMT \u0026\u0026 pMT-\u003eValidate())\r\n    File: /__w/1/s/src/coreclr/vm/object.cpp Line: 522\r\n    Image: /root/helix/work/correlation/corerun\r\n\r\n[createdump] Gathering state for process 56 corerun\r\n[createdump] Crashing thread 00000044 signal 00000006\r\n[createdump] Writing minidump with heap to file /home/helixbot/dotnetbuild/dumps/coredump.56.dmp\r\n[createdump] Written 122314752 bytes (29862 pages) to core file\r\n[createdump] Dump successfully written\r\nJIT/Methodical/Methodical_do/Methodical_do.sh: line 382:    56 Aborted                 (core dumped) $LAUNCHER $ExePath \"${CLRTestExecutionArguments[@]}\"\r\nExpected: 100\r\nActual: 134\r\nEND EXECUTION - FAILED\r\n+ export _commandExitCode=1\r\n```\r\n\r\nbut \"lcsvalbox_do\" doesn\u0027t show up on the top-level UI (only \"Methodical_do\" shows up).\r\n\r\nIs that expected?\r\n\r\n@trylek @jkoritzinsky ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHORGyefg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5Eazjg",
                                           "createdAt":  "2022-06-06T20:18:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nIn this (GCStress) run:\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=1807767\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=48108678\u0026resultId=109890\u0026paneView=debug\r\n\r\nThe \"coreclr Linux arm Checked gcstress0xc\" leg has failures in the merged Methodical tests, with VM asserts. Those tests don\u0027t appear in the AzDO UI (as individual tests), linked above.\r\n\r\nFor example, Methodical_do fails with:\r\n```\r\n15:21:19.717 Running test: JIT/Methodical/Arrays/lcs/lcsvalbox_do/lcsvalbox_do.cmd\r\n\r\nAssert failure(PID 56 [0x00000038], Thread: 68 [0x0044]): !CREATE_CHECK_STRING(pMT \u0026\u0026 pMT-\u003eValidate())\r\n    File: /__w/1/s/src/coreclr/vm/object.cpp Line: 522\r\n    Image: /root/helix/work/correlation/corerun\r\n\r\n[createdump] Gathering state for process 56 corerun\r\n[createdump] Crashing thread 00000044 signal 00000006\r\n[createdump] Writing minidump with heap to file /home/helixbot/dotnetbuild/dumps/coredump.56.dmp\r\n[createdump] Written 122314752 bytes (29862 pages) to core file\r\n[createdump] Dump successfully written\r\nJIT/Methodical/Methodical_do/Methodical_do.sh: line 382:    56 Aborted                 (core dumped) $LAUNCHER $ExePath \"${CLRTestExecutionArguments[@]}\"\r\nExpected: 100\r\nActual: 134\r\nEND EXECUTION - FAILED\r\n+ export _commandExitCode=1\r\n```\r\n\r\nbut \"lcsvalbox_do\" doesn\u0027t show up on the top-level UI (only \"Methodical_do\" shows up).\r\n\r\nIs that expected?\r\n\r\n@trylek @jkoritzinsky \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eBruceForstall\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-06-06T20:18:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Ea4Z-",
                                           "createdAt":  "2022-06-06T20:35:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "Also, once a test fails with an assert, what happens to the rest of the tests that would follow? Do they get executed? Do we skip them, and fail everything when we hit the first failure?\r\n",
                                           "updatedAt":  "2022-06-06T20:35:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Ea5eM",
                                           "createdAt":  "2022-06-06T20:39:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "I believe that today we\u0027re unable to recover from a native assertion failure within the single process i.e. once a test crashes with an assertion failure in the runtime or JIT, the remaining tests in the merged group don\u0027t run. Perhaps in some cases it would be possible to ignore the assertion and continue execution but I\u0027m not sure what exact rules govern this.",
                                           "updatedAt":  "2022-06-06T20:39:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Ea7_e",
                                           "createdAt":  "2022-06-06T20:50:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "One thing that our PMI tool does to deal with this is:\r\n1. \"PMI DriveAll\" spawns a process to do \"PMI RunAll\" to run the tests.\r\n2. \"PMI RunAll\" writes a file every time it finishes a test, with the index of the finished test.\r\n3. If \"PMI RunAll\" crashes, \"PMI DriveAll\" notices, reads the \"last tested\" number, and reinvokes \"PMI RunAll\", telling it to start at the next one (so, skip the one that crashed).\r\n\r\nOf course, there are issues like:\r\n1. Can you collect multiple dumps?\r\n2. Can you report multiple test failures / asserts\r\n",
                                           "updatedAt":  "2022-06-06T20:50:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Ea-MV",
                                           "createdAt":  "2022-06-06T20:57:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "I believe this is doable in the merged wrapper context - it can be also modified to run itself as a child process, monitor test progress and restart the child process with a special form of filtering to exclude the previously run tests. @jkoritzinsky, is there any chance you might be able to add this support in the next couple of weeks or are you completely swamped with other work so that we need to find someone else to implement this logic?",
                                           "updatedAt":  "2022-06-06T20:57:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5EbBmI",
                                           "createdAt":  "2022-06-06T21:11:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "I\u0027m very swamped with other work right now and won\u0027t have time. Sorry.",
                                           "updatedAt":  "2022-06-06T21:11:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5EbJ5-",
                                           "createdAt":  "2022-06-06T21:51:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "Thanks Jeremy for your quick response. No worries, I\u0027ll discuss this in our team meeting and we\u0027ll find a way to close this gap.",
                                           "updatedAt":  "2022-06-06T21:51:53Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "Assertion failures in merged tests don\u0027t get surfaced in AzDO",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/70510",
        "createdAt":  "2022-06-09T19:57:23Z",
        "number":  70510,
        "author":  "agocke",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOChlgzw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "tommcdon",
                                            "createdAt":  "2022-06-13T20:12:11Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "JulieLeeMSFT",
                                            "createdAt":  "2022-06-13T20:16:10Z"
                                        },
                                        {
                                            "content":  "HOORAY",
                                            "user":  "JulieLeeMSFT",
                                            "createdAt":  "2022-06-13T20:16:16Z"
                                        }
                                    ],
                          "totalCount":  3
                      },
        "updatedAt":  "2022-06-20T06:40:09Z",
        "body":  "This is a broad parent issue that is aimed at increasing the build and test pass rate in the runtime repo.\r\n\r\n## Organizing issues\r\n\r\nFirst, an attempt to categorize the failures:\r\n\r\n- **Flaky tests**. These are tests that pass in rolling builds, then flip to failing, or vice versa\r\n- **Persistent failures**. You could call these \"build breaks\" but they don\u0027t need to be specific to the build. These are failures that show up, and continue to fail almost constantly after starting to fail.\r\n- **Infra failures**. These are failures caused by external infrastructure failing, like NuGet feeds being unresponsive, build machines not being available, build images being incompatible, etc.\r\n\r\nAll of these are common problems, and on a week-to-week basis each one may be the dominant cause of failures that week. Each section above is quite different from the others and will likely have very different mechanisms to address it.\r\n\r\n### Flaky tests\r\n\r\nFlaky tests are sometimes, but not always, the most common cause of failures in the runtime. This is often the widest category of problems. Some instances are,\r\n\r\n- Test which has an almost impeccable passing rate suddenly fails once, and then does not fail again\r\n- Test was passing, but in recent runs has become flaky and is failing regularly\r\n- Relatively new test, passed in PR, but fails somewhat regularly in lab runs\r\n- Old test. Fails with a low but consistent probability\r\n- Group or category of tests are unstable in a particular configuration (e.g., arm64, Mono)\r\n- Test has history of low probability of failure, but failure cause is not easily identifiable and potentially poorly related to the core property being tested\r\n\r\n### Persistent Failure\r\n\r\nIn observing these issues, the most common cause seems to be some identifiable change in the system, usually associated with a particular code change. Some examples of these failures are:\r\n\r\n - Failing test got merged on red.\r\n - Test passed in initial PR, but regularly fails when running at scale in CI\r\n - Instability in system (not necessarily one test) was introduced by a code change (e.g., GC hole)\r\n - Change passed in PR, but rolling builds found more problems\r\n\r\nSince most of these problems are caused by a single commit, the best action is to find and revert that commit.\r\n\r\n### Infra failures\r\n\r\nThe only mechanism we have here is to report the failure to the responsible party ASAP. These are, by definition, necessary dependencies and we can\u0027t run without them.\r\n\r\n## Potential improvements\r\n\r\nThese are some improvements that we could make to the CI system for each of these areas.\r\n\r\n- [ ] Response time for identification and remediation. This is the primary purpose of the Test Monitor role. Issues will not be addressed without someone noticing the problem and driving the solution.\r\n\r\n### Flaky tests\r\n\r\n- [ ] Threshold for flakiness failure. Helix or some other test gating system could automatically re-run tests in rolling builds which have not failed in the lab recently, on the assumption that the failure represents some inherent machine instability. If the test passes on retry, the test would not be marked as failed. This would address flaky tests which very rarely fail. It would need to be done in cooperation with EngSvc/Helix, as the point of failure determination lies in their tooling. The initial failure would have to be appropriately logged to prevent sudden regressions.\r\n\r\n### Persistent failures\r\n\r\n- [ ] Automated or semi-automated regression detection. These problems usually have particular commits behind them that caused the problem. We could have infrastructure do a \"bisect\" equivalent to find the problem.\r\n  - [ ] Automatically queue builds. This is a semi-automated solution. Identifying most regressions definitively still often requires manual intervention, but if builds are immediately queued, the solution can be identified much more quickly and more easily.\r\n  - [ ] Queue individual helix runs. For test runs, Helix runs may be a more fine-grained and performant segment to focus on.\r\n\r\n### Infrastructure\r\n\r\nAny items here need to be in cooperation with the EngSvc team, as they are the primary point of contact for the infrastructure. Likely focus would be to help EngSvc determine when failures are due to infra issues so they can be identified quickly and an escalation process can start.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHORSS-9Q==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5Eo25I",
                                           "createdAt":  "2022-06-09T19:57:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2022-06-09T19:57:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Eo27e",
                                           "createdAt":  "2022-06-09T19:57:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThis is a broad parent issue that is aimed at increasing the build and test pass rate in the runtime repo.\r\n\r\nFirst, an attempt to categorize the failures:\r\n\r\n- Flaky tests. These are tests that pass in rolling builds, then flip to failing, or vice versa\r\n- Persistent failures. You could call these \"build breaks\" but they don\u0027t need to be specific to the build. These are failures that show up, and continue to fail almost constantly after starting to fail.\r\n- Infra failures. These are failures caused by external infrastructure failing, like NuGet feeds being unresponsive, build machines not being available, build images being incompatible, etc.\r\n\r\nEach section above is quite different from the others and will likely have very different mechanisms to address it.\r\n\r\n## Flaky tests\r\n\r\nFlaky tests are sometimes, but not always, the most common cause of failures in the runtime. This is often the widest category of problems. Some instances are,\r\n\r\n- Test which has an almost impeccable passing rate suddenly fails once, and then does not fail again\r\n- Test was passing, but in recent runs has become flaky and is failing regularly\r\n- Relatively new test, passed in PR, but fails somewhat regularly in lab runs\r\n- Old test. Fails with a low but consistent probability\r\n- Group or category of tests are unstable in a particular configuration (e.g., arm64, Mono)\r\n- Test has history of low probability of failure, but failure cause is not easily identifiable and potentially poorly related to the core property being tested\r\n\r\n## Persistent Failure\r\n\r\nIn observing these issues, the most common cause seems to be some identifiable change in the system, usually associated with a particular code change. Some examples of these failures are:\r\n\r\n - Failing test got merged on red.\r\n - Test passed in initial PR, but regularly fails when running at scale in CI\r\n - Instability in system (not necessarily one test) was introduced by a code change (e.g., GC hole)\r\n - Change passed in PR, but rolling builds found more problems\r\n\r\nSince most of these problems are caused by a single commit, the best action is to find and revert that commit.\r\n\r\n## Infra failures\r\n\r\nThe only mechanism we have here is to report the failure to the responsible party ASAP. These are, by definition, necessary dependencies and we can\u0027t run without them.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eagocke\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-06-09T19:57:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Ezoql",
                                           "createdAt":  "2022-06-13T20:16:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "JulieLeeMSFT",
                                           "body":  "cc @dotnet/jit-contrib. ",
                                           "updatedAt":  "2022-06-13T20:16:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5E4lFg",
                                           "createdAt":  "2022-06-14T20:30:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "JulieLeeMSFT",
                                           "body":  "- Retrying only failed test\r\n-- example: just rerunning failed tests made https://github.com/dotnet/sdk/pull/26003 pass.\r\n\r\n![image](https://user-images.githubusercontent.com/63486087/173682675-f33924bc-a1a8-421b-9ef0-ac415a5c2924.png)\r\n",
                                           "updatedAt":  "2022-06-14T20:30:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5E47xj",
                                           "createdAt":  "2022-06-14T22:35:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "agocke",
                                           "body":  "I do want to keep this focused on dotnet/runtime, though -- that PR was in SDK and I don\u0027t want to try to design solutions for dotnet/sdk and dotnet/runtime as they have very different scenarios.",
                                           "updatedAt":  "2022-06-14T22:35:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5E49X_",
                                           "createdAt":  "2022-06-14T22:47:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "Notes:\r\n\r\n- You are specifically addressing CI/lab/AzDO/Helix builds and test runs, not developer \"local\" runs. Make sure this is clear.\r\n- I\u0027ve always been averse to the term \"flaky test\" and discussions/solutions that seem aimed at letting tests continue to intermittently fail but not \"block\" PRs. This doc should make clear that intermittent failures can and often are signs of product failures that need to be investigated and fixed.\r\n- \"Threshold for flakiness failure.\" I don\u0027t know what this means.",
                                           "updatedAt":  "2022-06-14T22:47:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FJL71",
                                           "createdAt":  "2022-06-20T06:40:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "agocke",
                                           "body":  "@BruceForstall Thanks, added some more info.\r\n\r\n\u003e I\u0027ve always been averse to the term \"flaky test\" and discussions/solutions that seem aimed at letting tests continue to intermittently fail but not \"block\" PRs. This doc should make clear that intermittent failures can and often are signs of product failures that need to be investigated and fixed.\r\n\r\nI haven\u0027t really proposed anything to hide real product issues. Perhaps this distinction is useful if a new proposal is introduced.",
                                           "updatedAt":  "2022-06-20T06:40:08Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "Improving CI build and test pass rate",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/71732",
        "createdAt":  "2022-07-06T21:19:43Z",
        "number":  71732,
        "author":  "trylek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCqy88g==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "TIHan",
                                            "createdAt":  "2022-09-29T20:06:53Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-08-04T21:43:47Z",
        "body":  "Related to: https://github.com/dotnet/runtime/issues/54512\r\n\r\nAs of 7/6/2022, about 1/3 of the total runtime test set has been converted to using merged wrappers and running most tests in-proc to improve Helix perf. This issue is about fanning out the effort to the various runtime feature teams to follow up by converting the remaining runtime tests.\r\n\r\nOriginal conversions:\r\n- [x] JIT/Methodical\r\n- [x] JIT/HardwareIntrinsics\r\n\r\nAccording to the analytic tool ILTransform I created for the purpose of the conversion, the biggest remaining buckets of non-converted tests are in the following subtrees:\r\n\r\n- [x] [JIT/Regression (1312 tests)](https://github.com/dotnet/runtime/pull/83895)\r\n- [x] [JIT/jit64 (828 tests)](https://github.com/dotnet/runtime/pull/83151)\r\n- [x] [JIT/CodeGenBringUpTests (641 tests)](https://github.com/dotnet/runtime/pull/85847)\r\n- [x] [JIT/Directed (541 tests)](https://github.com/dotnet/runtime/pull/83256)\r\n- [x] [JIT/IL_Conformance (378 tests)](https://github.com/dotnet/runtime/pull/80597)\r\n- [x] [baseservices/threading (231 tests)](https://github.com/dotnet/runtime/pull/83143)\r\n\r\nBy merging these subtrees we should be able to reach about 70% conversion rate after which we can focus on the remaining smaller test groups.\r\n\r\nLeading JIT test directories (updated 03/08/2023):\r\n- [ ] JIT/BBT (1 test)\r\n- [ ] JIT/CheckProjects (1 test)\r\n- [x] [JIT/Generics](https://github.com/dotnet/runtime/pull/85849) (222 tests)\r\n- [ ] JIT/Intrinsics (31 tests)\r\n- [ ] JIT/Math (2 tests)\r\n- [x] [JIT/opt](https://github.com/dotnet/runtime/pull/85850) (304 tests)\r\n- [x] [JIT/Performance](https://github.com/dotnet/runtime/pull/85851) (100 tests)\r\n- [ ] JIT/PGO (5 tests)\r\n- [ ] JIT/RyuJIT (1 test)\r\n- [x] [JIT/SIMD](https://github.com/dotnet/runtime/pull/85852) (116 tests)\r\n- [ ] JIT/Stress (5 tests)\r\n\r\nMerged test groups impact day-to-day work, and directories such as JIT\\Regression are actively modified.  We also need to address usability issues.\r\n\r\nHighest priority - can cause tests to be skipped or impact the team\u0027s ability to disable failing tests:\r\n- [ ] #84182\r\n- [ ] Standard xunit behavior is to only look at publicly accessible methods for tests ([Fact] and friends).  This can lead to tests silently being ignored.  Make this an error.\r\n  - [x] xunit.analyzers can check the enclosing type of a test method.  Enabled by https://github.com/dotnet/runtime/pull/83806.\r\n  - [ ] A custom check will be needed for the methods themselves.\r\n  - [ ] We should probably also be rejecting tests with `Main` methods because they will fail if `BuildAsStandalone` is enabled when it tries to build another entry point.\r\n- [ ] We need to test and document how to include/exclude/disable tests – xunit attributes, SkipOnCoreClr, issues.target, particularly difficult is GC/JIT stress and related – see/update https://github.com/dotnet/runtime/blob/main/docs/workflow/ci/disabling-tests.md.  This includes command-line one-off executions as well as disabling failing tests in the repo.  Ask DavidWr to review once written.\r\n\r\nHigh priority - impact day-to-day work or debugging issues with test merging:\r\n- [x] [Write the generated Main methods to disk](https://github.com/dotnet/runtime/pull/83444).  There is a csproj property for this.  Ideally the filename printed in C# error messages would match, but that might be difficult.\r\n- [x] Fix https://github.com/dotnet/runtime/issues/81984\r\n- [ ] The logic for ilasm roundtripping testing doesn\u0027t work correctly. It is implemented in the scripting layer and just does an ildasm/ilasm on the entry exe, which means that test merging ends up just doing the roundtrip in the new wrappers and not the original tests. The logic should probably be changed to \"for x in \u003cany .net assembly in the folder, possibly recursively\u003e, roundtrip x\".\r\n\r\nLower priority - these can (somewhat) be worked around but most aren\u0027t sustainable (e.g., poor documentation means all testing issues will come to Mark/Tomas/Jeremy)\r\n- [x] Can we leave behind Main methods in tests (in addition to [Fact] methods) to allow for extra parameterization (e.g,. `test --version`)?  [ANSWER: sort of - You can keep a `Main` method, but you need to then set `ReferenceXUnitWrapperGenerator` to `false` or BuildAsStandalone will break. `Main` will need a `[Fact]` or `[Theory]`, and arguments (if any) will need to match across the [xxxData] and csproj property for BuildAsStandalone=true/false to be consistent.]\r\n- [ ] Write broader documentation on merged test groups.\r\n- [ ] Wrapper doesn’t fail when tests fail.  However, don’t confuse test failures with test harness, etc., failures.\r\n- [ ] Wrapper prints a “display name” which isn’t suitable for feeding back to disable.\r\n- [ ] Can we measure the impact?\r\n\r\nThis isn\u0027t a specific work item but a change we all need to make: **We need to aggressively disable tests that take down the runtime (and hide other tests).**  We should consider having JIT assertions throw managed exceptions, but these can be caught.  Ideally we want monitoring (either within the wrapper - with the cost of extra code - or external to it).\r\n\r\n\u003cdetails\u003e\r\n\u003csummary\u003ePartitioning of subtrees under JIT/Regression\u003c/summary\u003e\r\n\r\nThis was originally intended for tracking conversion progress and is useful for understand the set of tests there.  However, the entire batch was converted at once, so it won\u0027t be used for tracking progress.\r\n\r\n- clr-x64-JIT, CLR-x86-EJIT, Dev14, v4 (21 tests total)\r\n- Dev11 (34 tests total)\r\n- VS-ia64-JIT\r\n  - VS-ia64-JIT/M00 (46 tests total)\r\n  - VS-ia64-JIT/V1.2-Beta1, VS-ia64-JIT/V1.2-M01, VS-ia64-JIT/V2.0-Beta2, VS-ia64-JIT/V2.0-RTM (39 tests total)\r\n  - VS-ia64-JIT/V1.2-M02 (35 tests total)\r\n- JitBlue\r\n  - JitBlue/CoreFX*, JitBlue/DevDiv_1*, JitBlue/DevDiv_2*, JitBlue/DevDiv_3* (40 tests total)\r\n  - JitBlue/DevDiv_4*, JitBlue/DevDiv_5*, JitBlue/DevDiv_6*, JitBlue/DevDiv_7*, JitBlue/DevDiv_8*, JitBlue/DevDiv_9* (50 tests total)\r\n  - JitBlue/GitHub_\u0026lt;less than 10000\u0026gt; (33 tests total)\r\n  - JitBlue/GitHub_\u0026lt;10000 through 15999\u0026gt; (45 tests total)\r\n  - JitBlue/GitHub_\u0026lt;16000 through 19999\u0026gt; (57 tests total)\r\n  - JitBlue/GitHub_\u0026lt;20000 through 24999\u0026gt; (46 tests total)\r\n  - JitBlue/GitHub_\u0026lt;25000 and above\u0026gt;, JitBlue/GitHub_CoreRT_2073 (24 tests total)\r\n  - JitBlue/Runtime_\u0026lt;less than 50000\u0026gt; (45 tests total)\r\n  - JitBlue/Runtime_\u0026lt;50000 and above\u0026gt;, WPF_3226 (48 tests total)\r\n- CLR-x86-JIT\r\n  - CLR-x86-JIT/dev10, CLR-x86-JIT/dev11, CLR-x86-JIT/V1-M09, CLR-x86-JIT/V1-M10 (51 tests total)\r\n  - CLR-x86-JIT/V1-M13-RTM, CLR-x86-JIT/V1-M14-SP1, CLR-x86-JIT/V1-M15-SP2 (45 tests total)\r\n  - CLR-x86-JIT/V1-QFE, CLR-x86-JIT/V1.1-M1-Beta1, CLR-x86-JIT/V1.2-M01 (55 tests total)\r\n  - CLR-x86-JIT/V1.2-M02, CLR-x86-JIT/V2.0-Beta2, CLR-x86-JIT/V2.0-RTM (31 tests total)\r\n  - CLR-x86-JIT/v2.1, CLR-x86-JIT/v2.2 (29 tests total)\r\n  - CLR-x86-JIT/V1-M09.5-PDC/b\u0026lt;less than 15000\u0026gt; (47 tests total)\r\n  - CLR-x86-JIT/V1-M09.5-PDC/b\u0026lt;15000 through 25999\u0026gt; (48 tests total)\r\n  - CLR-x86-JIT/V1-M09.5-PDC/b\u0026lt;26000 through 29999\u0026gt; (42 tests total)\r\n  - CLR-x86-JIT/V1-M09.5-PDC/b\u0026lt;30000 and above\u0026gt; (32 tests total)\r\n  - CLR-x86-JIT/V1-M11-Beta1/b\u0026lt;less than 41000\u0026gt; (44 tests total)\r\n  - CLR-x86-JIT/V1-M11-Beta1/b\u0026lt;41000 through 44999\u0026gt; (52 tests total)\r\n  - CLR-x86-JIT/V1-M11-Beta1/b\u0026lt;45000 and above\u0026gt; (42 tests total)\r\n  - CLR-x86-JIT/V1-M12-Beta2/b\u0026lt;less than 37000\u0026gt; (47 tests total)\r\n  - CLR-x86-JIT/V1-M12-Beta2/b\u0026lt;37000 through 52999\u0026gt; (47 tests total)\r\n  - CLR-x86-JIT/V1-M12-Beta2/b\u0026lt;53000 through 58999\u0026gt; (41 tests total)\r\n  - CLR-x86-JIT/V1-M12-Beta2/b\u0026lt;59000 through 64999\u0026gt; (47 tests total)\r\n  - CLR-x86-JIT/V1-M12-Beta2/b\u0026lt;65000 through 71999\u0026gt; (50 tests total)\r\n  - CLR-x86-JIT/V1-M12-Beta2/b\u0026lt;72000 through 79999\u0026gt; (44 tests total)\r\n  - CLR-x86-JIT/V1-M12-Beta2/b\u0026lt;80000 and above\u0026gt; (20 tests total)\r\n\u003c/details\u003e\r\n\r\nThanks\r\n\r\nTomas",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSaoodw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5GI-51",
                                           "createdAt":  "2022-07-06T21:19:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nRelated to: https://github.com/dotnet/runtime/issues/54512\r\n\r\nAs of 7/6/2022, about 1/3 of the total runtime test set has been converted to using merged wrappers and running most tests in-proc to improve Helix perf. This issue is about fanning out the effort to the various runtime feature teams to follow up by converting the remaining runtime tests.\r\n\r\nAccording to the analytic tool ILTransform I created for the purpose of the conversion, the biggest remaining buckets of non-converted tests are in the following subtrees:\r\n\r\n(*) JIT/Regression (1312 tests)\r\n(*) JIT/jit64 (828 tests)\r\n(*) JIT/CodeGenBringUpTests (641 tests)\r\n(*) JIT/Directed (541 tests)\r\n(*) JIT/IL_Conformance (378 tests)\r\n(*) baseservices/threading (231 tests)\r\n\r\nBy merging these subtrees we should be able to reach about 70% conversion rate after which we can focus on the remaining smaller test groups.\r\n\r\nThanks\r\n\r\nTomas\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003etrylek\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-07-06T21:19:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HblpB",
                                           "createdAt":  "2022-07-28T17:10:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "agocke",
                                           "body":  "~~@trylek Is this still scheduled for 7.0?~~ Never mind read the issue wrong.",
                                           "updatedAt":  "2022-07-28T17:10:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HisFn",
                                           "createdAt":  "2022-07-30T18:48:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e Follows partitioning of subtrees under JIT/Regression for tracking conversion progress\r\n\r\nCan we document how to do this work here? If I know nothing about this and I want to volunteer to pick up one of the categories, how do I go about it?",
                                           "updatedAt":  "2022-07-30T18:48:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5IuGUv",
                                           "createdAt":  "2022-08-18T22:36:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivdiazsa",
                                           "body":  "\u003e \u003e Follows partitioning of subtrees under JIT/Regression for tracking conversion progress\r\n\u003e \r\n\u003e Can we document how to do this work here? If I know nothing about this and I want to volunteer to pick up one of the categories, how do I go about it?\r\n\r\nCount me in as well.",
                                           "updatedAt":  "2022-08-18T22:36:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Jqih3",
                                           "createdAt":  "2022-09-02T20:55:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCrm3Ew==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkotas",
                                                                               "createdAt":  "2022-09-02T22:45:33Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "trylek",
                                           "body":  "**Basic conversion instructions**\r\n\r\nTypically, the conversion is easiest for csproj projects that are unconditional - they don\u0027t depend on the targeting OS, architecture and / or execution modes like GC stress. For ilproj test projects and for conditional csproj test projects the situation is slightly more complicated.\r\n\r\nI have created an internal app to assist with a semi-automated conversion. You can find it in the private branch\r\n\r\nhttps://github.com/trylek/runtime/tree/ILTransform\r\n\r\nAfter you clone this branch (it\u0027s easier to clone it into a different tree than the one we\u0027re trying to convert), the new project ILTransform will appear under src/ILTransform. I\u0027m typically opening and running the project from the Visual Studio. It has several execution modes but the one most interesting for the actual conversion is as follows:\r\n\r\n\u0026lt;path to the built ILTransform app\u0026gt; -f \u0026lt;subfolder of src/tests to process\u0026gt;\r\n\r\nThis syntax causes the app to carry out the standard conversion steps for all csproj and ilproj projects in the specified subtree. In particular, it renames Main methods in csproj projects based on the project name and attaches the [Fact] attributes to them. For ilproj projects, it suffices to attach the [Fact] attribute, the entrypoint method remains in place so that the test can be run individually (this is a fundamental requirement for some of the low-level tests).\r\n\r\nIn the root folder of the subtree being converted, it\u0027s also necessary to modify the Directory.Build.props by including the following property group:\r\n\r\n\u003cpre\u003e\r\n  \u0026lt;PropertyGroup\u0026gt;\r\n    \u0026lt;BuildAsStandalone Condition=\"\u0027$(BuildAsStandalone)\u0027 == \u0027\u0027\"\u0026gt;false\u0026lt;/BuildAsStandalone\u0026gt;\r\n\r\n    \u0026lt;AssemblyName Condition=\"\u0027$(BuildAsStandalone)\u0027 != \u0027true\u0027\"\u0026gt;$(MSBuildProjectName.Replace(\u0027_il_d\u0027, \u0027\u0027).Replace(\u0027_il_r\u0027, \u0027\u0027))\u0026lt;/AssemblyName\u0026gt;\r\n  \u0026lt;/PropertyGroup\u0026gt;\r\n\u003c/pre\u003e\r\n\r\nas seen in the file\r\n\r\nhttps://github.com/dotnet/runtime/blob/9ea5d2d6cdc536fbe1dacc477ef2b2dea2b4845c/src/tests/JIT/Methodical/Directory.Build.props#L4\r\n\r\nThe BuildAsStandalone property overrides the still default policy of building the tests individually, the AssemblyName caters for subtle shenanigans involving naming of ilproj tests and assembly names in them. Furthermore you need to add a new project (possibly multiple projects) to represent the merged test wrappers in your tree. Here is an example from the JIT/Methodical subtree where it\u0027s slightly more involved as due to the large number of tests we use seven different wrappers (Methodical_d1, Methodical_d2, Methodical_do, Methodical_r1, Methodical_r2, Methodical_ro, Methodical_others) to partition the large number of tests (~2000):\r\n\r\nhttps://github.com/dotnet/runtime/blob/main/src/tests/JIT/Methodical/Methodical_d1.csproj\r\n\r\nAccording to our experience from merging the first 1/3 of the test tree the sweet spot for test merging seems to be several hundred tests per merged wrapper. This may vary with complexity of the individual tests and might require a bit of local experimentation. If everything works as expected, these instructions should be sufficient to convert a particular subtree of the test tree. I\u0027ll add more instructions to cover more complicated cases when the described workflow fails.",
                                           "updatedAt":  "2022-09-02T20:58:33Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Merge the remaining groups of runtime tests",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/72655",
        "createdAt":  "2022-07-22T01:48:41Z",
        "number":  72655,
        "author":  "am11",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-04-01T17:44:52Z",
        "body":  "We have made several llvm libunwind patches for NativeAOT, since its initial bring up: https://github.com/dotnet/corert/pull/2293. The collective patches are in the following two commits on top of upstream\u0027s latest version (as of this moment) 14.0.6 release:\r\n\r\nhttps://github.com/dotnet/runtime/blob/44be09d4a4833cf79fade03a20933dcc8b62369e/src/native/external/llvm-libunwind-version.txt#L4-L5\r\n\r\nIt would be great (on multiple fronts) if we upstream those patches via LLVM code review platform of choice; Phabricator (https://llvm.org/docs/Phabricator.html). It will require some additional work for other architectures which llvm-libunwind supports (such as s390x and RISCV), to make them ready to upstream. At the moment, it is relatively easier to upstream patches since we are on the latest release.\r\n\r\n----\r\n\r\n#### `unw_get_save_loc` API\r\n\r\nOne of the key additions in our local patches is the implementation of `unw_get_save_loc`, which was scoped to memory locations, but does not cover register locations. The original commit was https://github.com/dotnet/corert/pull/2293/commits/c6571c6eb7b99afec7d69cd5f52fb3c5058a2e3c and v14.0.6 state can be extracted from https://github.com/dotnet/runtime/commit/e57194552327bccaf2b45a9190f0e6e1289472e4.\r\n\r\nMoreover, `unw_get_save_loc` is the API which we test in coreclr PAL introspection code (`src/coreclr/pal/src/configure.cmake`), and based on which we decide whether to use the pinning fallback in GC. If the memory-location-only patch gets upstreamed (without first implementing register locations support), we would probably need to improve our introspection to detect the exact capability we need out of this API for GC; currently HP libunwind (the recommended variant for coreclr PAL) has support for both memory and registers location, which eventually gives us granular control over object lifetime in the GC.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOpRYVSg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5HDfY9",
                                           "createdAt":  "2022-07-22T01:48:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2022-07-22T01:48:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HDfc3",
                                           "createdAt":  "2022-07-22T01:49:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nWe have made several llvm libunwind patches for NativeAOT, since its initial bring up: https://github.com/dotnet/corert/pull/2293. The collective patches are in the following two commits on top of upstream\u0027s latest version (as of this moment) 14.0.6 release:\r\n\r\nhttps://github.com/dotnet/runtime/blob/44be09d4a4833cf79fade03a20933dcc8b62369e/src/native/external/llvm-libunwind-version.txt#L4-L5\r\n\r\nIt would be great (on multiple fronts) if we upstream those patches via LLVM code review platform of choice; Phabricator (https://llvm.org/docs/Phabricator.html). It will require some additional work for other architectures which llvm-libunwind supports (such as s390x and RISCV), to make them ready to upstream. At the moment, it is relatively easier to upstream patches since we are on the latest release.\r\n\r\n----\r\n\r\n#### `unw_get_save_loc` API\r\n\r\nOne of the key additions in our local patches is the implementation of `unw_get_save_loc`, which was scoped to memory locations, but does not cover register locations. The original commit was https://github.com/dotnet/corert/pull/2293/commits/c6571c6eb7b99afec7d69cd5f52fb3c5058a2e3c and v14.0.6 state can be extracted from https://github.com/dotnet/runtime/commit/e57194552327bccaf2b45a9190f0e6e1289472e4.\r\n\r\nMoreover, `unw_get_save_loc` is the API which we test in coreclr PAL introspection code (`src/coreclr/pal/src/configure.cmake`), and based on which we decide whether to use the pinning fallback in GC. If the memory-location-only patch gets upstreamed (without first implementing register locations support), we would probably need to improve our introspection to detect the exact capability we need out of this API for GC; currently HP libunwind (the recommended variant for coreclr PAL) has support for both memory and registers location, which eventually gives us granular control over object lifetime in the GC.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eam11\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`tracking-external-issue`, `area-Infrastructure-coreclr`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-07-22T01:49:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HDfx5",
                                           "createdAt":  "2022-07-22T01:52:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "cc @janvorli",
                                           "updatedAt":  "2022-07-22T01:52:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HFyMF",
                                           "createdAt":  "2022-07-22T15:36:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCoGUXw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2022-07-22T16:43:47Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@am11 thank you for creating this tracking issue. Regarding the unw_get_save_loc and register locations, I believe we don\u0027t generate any unwind instructions that would save / restore managed references in registers to / from other registers and I don\u0027t see us needing such functionality. So adding that would be mostly just for completeness of the implementation.",
                                           "updatedAt":  "2022-07-22T15:36:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5l0eqJ",
                                           "createdAt":  "2023-09-06T12:30:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "An update; LLVM has recently switched from Phabricator to GitHub Pull Requests model, which makes it much convenient to upstream the local patches.",
                                           "updatedAt":  "2023-09-06T12:30:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6ihtZs",
                                           "createdAt":  "2025-03-15T15:34:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "I don\u0027t have good description on, e.g. why we are increasing the cursor sizes. It would be nice if we create a branch in llvm repo where we slice the combined patch into meaningful commits and then open PRs at https://github.com/llvm/llvm-project/pulls. The current patch size is `+571 −237`, so it can be a composite commit in a single PR with combined authorship https://github.com/dotnet/runtime/commit/371905898f2c036cc30d662e8a6df162a21967a5 plus new ones contributed by @filipnavara, @VSadov and others. I don\u0027t know how libunwind group in llvm.org prefers it.\n\nThe latest version of the combined patch on v20.1.0 from #113513 is `https://github.com/dotnet/runtime/pull/113513/commits/d03d1ba7835fdf9e2a6bb537d49fb5ff6584697b`.",
                                           "updatedAt":  "2025-03-15T15:34:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6lEXma",
                                           "createdAt":  "2025-04-01T13:35:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@am11 let me try to remember why we have increased the cursor sizes\n",
                                           "updatedAt":  "2025-04-01T13:35:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6lEoAd",
                                           "createdAt":  "2025-04-01T13:57:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "So, the _LIBUNWIND_CONTEXT_SIZE needs to be enlarged due to the context pointers being stored in the context. The size is in 64 bit units (even on 32 bit architectures), so for each added context pointer we need to add 1. And the _LIBUNWIND_CURSOR_SIZE should grow by the same amount as the cursor contains the context. While it matches e.g. for x64 where we have 17 context pointers, it doesn\u0027t match for the x86, where we have increased the context by 5, the cursor by 4 and the number of added context pointers is 9. So it seems both should grow by 5.",
                                           "updatedAt":  "2025-04-01T13:57:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6lEtmt",
                                           "createdAt":  "2025-04-01T14:04:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "Thank you @janvorli. What do you think about approach taken here: https://github.com/llvm/llvm-project/pull/133909. If accepted, in runtime repo we will define the additonal padding before `#include \u003clibunwind..\u003e`. Or would it be worth proposing the enlaged sizes upstream as we have done in the local tree?",
                                           "updatedAt":  "2025-04-01T14:04:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6lExKo",
                                           "createdAt":  "2025-04-01T14:08:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "I am not sure I understand what would be the benefit of defining a padding. If we didn\u0027t add the context pointers, adding the padding doesn\u0027t seem to have any use and if we added them, then we can have the precise size set in the header.",
                                           "updatedAt":  "2025-04-01T14:08:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6lFDkR",
                                           "createdAt":  "2025-04-01T14:26:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "It is for upstreaming the change to avoid continuous maintenance of the local patch for (growing) number of platforms. Also, we can\u0027t use distro llvm-libunwind today with source-build because the patch is all over the place.\n\nI see two options:\n1. upstream https://github.com/llvm/llvm-project/pull/133909/commits/e91ee785cf82b65205fad0a5f766a5840bbd3c69 and define `LIBUNWIND_{CONTEXT,CURSOR}_PADDING` in runtime with additional delta\n\t\n\t| Architecture               | Context Padding | Cursor Padding |\n\t|----------------------------|-----------------|----------------|\n\t| i386                       | +5              | +4             |\n\t| x86_64 (non-Win64)         | +17             | +17            |\n\t| AArch64 (non-SEH)          | +34             | +34            |\n\t| AArch64 (with SEH)         | +34             | +34            |\n\t| ARM (non-WMMX)             | +8              | +8             |\n\t| RISCV (32-bit, FLEN=0)     | +32             | +32             |\n\t| LoongArch (64-bit)         | +33             | +33            |\n\n\n2. upstream what we have in main; the inline version, as-is\n    \u003cimg width=\"45%\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e61fa06d-31bb-4c6e-8a13-369c09e05be2\" /\u003e",
                                           "updatedAt":  "2025-04-01T17:44:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6lFRD4",
                                           "createdAt":  "2025-04-01T14:44:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "I would prefer the 2nd option (with the fix to the i386 size increase that is not correct). But I guess I am still confused on how would the option 1 help at all. Isn\u0027t the maintenance issue caused by merging the rest of the changes? I would assume this header would be easy to update compared to the actual functional change.",
                                           "updatedAt":  "2025-04-01T14:44:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6lFhVK",
                                           "createdAt":  "2025-04-01T15:06:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "I was thinking we could define `LIBUNWIND_{CONTEXT,CURSOR}_PADDING` in cmake or in code, but that will not help `USE_SYSTEM_LLVM_LIBUNWIND` SB scenario (they will still need to build a special flavor with paddings). Second option is also a bit tricky due to check_fit static assertions on cursor and context. Seems like it ends up using \"at least\" logic https://github.com/llvm/llvm-project/blob/8741412bdfc0a60719f116add7d828694ef48c02/libunwind/src/config.h#L232 in this case, instead of exact fit.\n\nWill update the PR. Thank you!",
                                           "updatedAt":  "2025-04-01T15:06:01Z"
                                       }
                                   ],
                         "totalCount":  13
                     },
        "title":  "Track upstreaming llvm-libunwind patches",
        "labels":  [
                       "tracking-external-issue",
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/74846",
        "createdAt":  "2022-08-30T22:07:04Z",
        "number":  74846,
        "author":  "davidwrighton",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-06T20:43:42Z",
        "body":  "As we convert our tests to Xunit style, its easy to miss the detail that a test needs to be public. Our test wrapper generator should produce an error if it encounters a `[Fact]` or `[Theory]` attribute on a method which isn\u0027t public, or is otherwise restricted from being called by the test wrapper.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSXIolQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5JcieT",
                                           "createdAt":  "2022-08-30T22:07:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2022-08-30T22:07:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JciiV",
                                           "createdAt":  "2022-08-30T22:07:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nAs we convert our tests to Xunit style, its easy to miss the detail that a test needs to be public. Our test wrapper generator should produce an error if it encounters a `[Fact]` or `[Theory]` attribute on a method which isn\u0027t public, or is otherwise restricted from being called by the test wrapper.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003edavidwrighton\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003ejkoritzinsky\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-08-30T22:07:27Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "New test xunit wrapper generator should produce errors when test method isn\u0027t public",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/77236",
        "createdAt":  "2022-10-19T21:31:41Z",
        "number":  77236,
        "author":  "rainersigwald",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-08-17T18:38:30Z",
        "body":  "### Description\n\nWhen a modern application has a PackageReference to an old `Microsoft.NETCore.App` package (including transitively through a package that targeted say `netcoreapp1.1` and hasn\u0027t been updated), the output folder gets some surprising contents, including an old stale copy of `hostfxr.dll`.\n\n### Reproduction Steps\n\n```sh\r\ndotnet new console\r\ndotnet add package Microsoft.NETCore.App --version 2.2.8\r\ndotnet build -r win7-x64 --no-self-contained\r\n```\n\n### Expected behavior\n\nConflict resolution sees `hostfxr.dll`, recognizes that it\u0027s part of the platform, and removes it.\n\n### Actual behavior\n\n```sh-session\r\n❯ dotnet new console\r\nThe template \"Console App\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRestoring S:\\play\\scratch\\scratch.csproj:\r\n  Determining projects to restore...\r\n  Restored S:\\play\\scratch\\scratch.csproj (in 0.8 ms).\r\nRestore succeeded.\r\n\r\n❯ dotnet add package Microsoft.NETCore.App --version 2.2.8\r\n  Determining projects to restore...\r\n  Writing C:\\Users\\raines\\AppData\\Local\\Temp\\tmpE51F.tmp\r\ninfo : X.509 certificate chain validation will use the default trust store selected by .NET.\r\ninfo : Adding PackageReference for package \u0027Microsoft.NETCore.App\u0027 into project \u0027S:\\play\\scratch\\scratch.csproj\u0027.\r\ninfo : Restoring packages for S:\\play\\scratch\\scratch.csproj...\r\ninfo : Package \u0027Microsoft.NETCore.App\u0027 is compatible with all the specified frameworks in project \u0027S:\\play\\scratch\\scratch.csproj\u0027.\r\ninfo : PackageReference for package \u0027Microsoft.NETCore.App\u0027 version \u00272.2.8\u0027 added to file \u0027S:\\play\\scratch\\scratch.csproj\u0027.\r\ninfo : Generating MSBuild file S:\\play\\scratch\\obj\\scratch.csproj.nuget.g.props.\r\ninfo : Generating MSBuild file S:\\play\\scratch\\obj\\scratch.csproj.nuget.g.targets.\r\ninfo : Writing assets file to disk. Path: S:\\play\\scratch\\obj\\project.assets.json\r\nlog  : Restored S:\\play\\scratch\\scratch.csproj (in 139 ms).\r\n\r\n❯ dotnet build -r win7-x64 --no-self-contained\r\nMSBuild version 17.4.0-preview-22470-08+6521b1591 for .NET\r\n  Determining projects to restore...\r\n  Restored S:\\play\\scratch\\scratch.csproj (in 55 ms).\r\nC:\\Program Files\\dotnet\\sdk\\7.0.100-rc.2.22477.23\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.RuntimeIdentifierInferen\r\nce.targets(257,5): message NETSDK1057: You are using a preview version of .NET. See: https://aka.ms/dotnet-support-poli\r\ncy [S:\\play\\scratch\\scratch.csproj]\r\n  scratch -\u003e S:\\play\\scratch\\bin\\Debug\\net7.0\\win7-x64\\scratch.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:00.49\r\n\r\n❯ dir bin\\Debug\\net7.0\\win7-x64\r\n\r\n    Directory: S:\\play\\scratch\\bin\\Debug\\net7.0\\win7-x64\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\n-a---           10/9/2019  2:22 AM         137728 apphost.exe\r\n-a---           10/9/2019  2:22 AM         402536 hostfxr.dll\r\n-a---           10/9/2019  2:22 AM         585600 hostpolicy.dll\r\n-a---          10/19/2022  4:11 PM           6674 scratch.deps.json\r\n-a---          10/19/2022  4:09 PM           4096 scratch.dll\r\n-a---          10/19/2022  4:09 PM         153600 scratch.exe\r\n-a---          10/19/2022  4:09 PM          10920 scratch.pdb\r\n-a---          10/19/2022  4:11 PM            160 scratch.runtimeconfig.json\r\n```\r\n\r\nSpecifically, the `apphost.exe`, `hostfxr.dll`, and `hostpolicy.dll` files with modification dates in 2019 shouldn\u0027t be there.\n\n### Regression?\n\nNot recent, maybe from .NET Core 2.x.\n\n### Known Workarounds\n\nManually remove hostfxr after conflict resolution via MSBuild target.\n\n### Configuration\n\n_No response_\n\n### Other information\n\nI talked about this with @ericstj offline and he thought the files might have been mentioned in `platformmanifest.txt` but they aren\u0027t part of the shared framework itself, so they\u0027re not.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOTKWD5w==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5MkWCe",
                                           "createdAt":  "2022-10-19T21:31:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\n\nWhen a modern application has a PackageReference to an old `Microsoft.NETCore.App` package (including transitively through a package that targeted say `netcoreapp1.1` and hasn\u0027t been updated), the output folder gets some surprising contents, including an old stale copy of `hostfxr.dll`.\n\n### Reproduction Steps\n\n```sh\r\ndotnet new console\r\ndotnet add package Microsoft.NETCore.App --version 2.2.8\r\ndotnet build -r win7-x64 --no-self-contained\r\n```\n\n### Expected behavior\n\nConflict resolution sees `hostfxr.dll`, recognizes that it\u0027s part of the platform, and removes it.\n\n### Actual behavior\n\n```sh-session\r\n❯ dotnet new console\r\nThe template \"Console App\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRestoring S:\\play\\scratch\\scratch.csproj:\r\n  Determining projects to restore...\r\n  Restored S:\\play\\scratch\\scratch.csproj (in 0.8 ms).\r\nRestore succeeded.\r\n\r\n❯ dotnet add package Microsoft.NETCore.App --version 2.2.8\r\n  Determining projects to restore...\r\n  Writing C:\\Users\\raines\\AppData\\Local\\Temp\\tmpE51F.tmp\r\ninfo : X.509 certificate chain validation will use the default trust store selected by .NET.\r\ninfo : Adding PackageReference for package \u0027Microsoft.NETCore.App\u0027 into project \u0027S:\\play\\scratch\\scratch.csproj\u0027.\r\ninfo : Restoring packages for S:\\play\\scratch\\scratch.csproj...\r\ninfo : Package \u0027Microsoft.NETCore.App\u0027 is compatible with all the specified frameworks in project \u0027S:\\play\\scratch\\scratch.csproj\u0027.\r\ninfo : PackageReference for package \u0027Microsoft.NETCore.App\u0027 version \u00272.2.8\u0027 added to file \u0027S:\\play\\scratch\\scratch.csproj\u0027.\r\ninfo : Generating MSBuild file S:\\play\\scratch\\obj\\scratch.csproj.nuget.g.props.\r\ninfo : Generating MSBuild file S:\\play\\scratch\\obj\\scratch.csproj.nuget.g.targets.\r\ninfo : Writing assets file to disk. Path: S:\\play\\scratch\\obj\\project.assets.json\r\nlog  : Restored S:\\play\\scratch\\scratch.csproj (in 139 ms).\r\n\r\n❯ dotnet build -r win7-x64 --no-self-contained\r\nMSBuild version 17.4.0-preview-22470-08+6521b1591 for .NET\r\n  Determining projects to restore...\r\n  Restored S:\\play\\scratch\\scratch.csproj (in 55 ms).\r\nC:\\Program Files\\dotnet\\sdk\\7.0.100-rc.2.22477.23\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.RuntimeIdentifierInferen\r\nce.targets(257,5): message NETSDK1057: You are using a preview version of .NET. See: https://aka.ms/dotnet-support-poli\r\ncy [S:\\play\\scratch\\scratch.csproj]\r\n  scratch -\u003e S:\\play\\scratch\\bin\\Debug\\net7.0\\win7-x64\\scratch.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:00.49\r\n\r\n❯ dir bin\\Debug\\net7.0\\win7-x64\r\n\r\n    Directory: S:\\play\\scratch\\bin\\Debug\\net7.0\\win7-x64\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\n-a---           10/9/2019  2:22 AM         137728 apphost.exe\r\n-a---           10/9/2019  2:22 AM         402536 hostfxr.dll\r\n-a---           10/9/2019  2:22 AM         585600 hostpolicy.dll\r\n-a---          10/19/2022  4:11 PM           6674 scratch.deps.json\r\n-a---          10/19/2022  4:09 PM           4096 scratch.dll\r\n-a---          10/19/2022  4:09 PM         153600 scratch.exe\r\n-a---          10/19/2022  4:09 PM          10920 scratch.pdb\r\n-a---          10/19/2022  4:11 PM            160 scratch.runtimeconfig.json\r\n```\r\n\r\nSpecifically, the `apphost.exe`, `hostfxr.dll`, and `hostpolicy.dll` files with modification dates in 2019 shouldn\u0027t be there.\n\n### Regression?\n\nNot recent, maybe from .NET Core 2.x.\n\n### Known Workarounds\n\nManually remove hostfxr after conflict resolution via MSBuild target.\n\n### Configuration\n\n_No response_\n\n### Other information\n\nI talked about this with @ericstj offline and he thought the files might have been mentioned in `platformmanifest.txt` but they aren\u0027t part of the shared framework itself, so they\u0027re not.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003erainersigwald\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-10-19T21:31:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Mkd5k",
                                           "createdAt":  "2022-10-19T22:14:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rainersigwald",
                                           "body":  "If you publish self-contained, conflict resolution does pick the right versions: `\r\nEncountered conflict between \u0027CopyLocal:C:\\Users\\raines\\.nuget\\packages\\runtime.win-x64.microsoft.netcore.dotnethostresolver\\2.2.8\\runtimes\\win-x64\\native\\hostfxr.dll\u0027 and \u0027CopyLocal:C:\\Users\\raines\\.nuget\\packages\\microsoft.netcore.app.runtime.win-x64\\6.0.10\\runtimes\\win-x64\\native\\hostfxr.dll\u0027. Choosing \u0027CopyLocal:C:\\Users\\raines\\.nuget\\packages\\microsoft.netcore.app.runtime.win-x64\\6.0.10\\runtimes\\win-x64\\native\\hostfxr.dll\u0027 because file version \u00276.0.1022.47605\u0027 is greater than \u00272.2.28209.1\u0027.\r\n`",
                                           "updatedAt":  "2022-10-19T22:14:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5MpXQe",
                                           "createdAt":  "2022-10-20T17:32:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\n\nWhen a modern application has a PackageReference to an old `Microsoft.NETCore.App` package (including transitively through a package that targeted say `netcoreapp1.1` and hasn\u0027t been updated), the output folder gets some surprising contents, including an old stale copy of `hostfxr.dll`.\n\n### Reproduction Steps\n\n```sh\r\ndotnet new console\r\ndotnet add package Microsoft.NETCore.App --version 2.2.8\r\ndotnet build -r win7-x64 --no-self-contained\r\n```\n\n### Expected behavior\n\nConflict resolution sees `hostfxr.dll`, recognizes that it\u0027s part of the platform, and removes it.\n\n### Actual behavior\n\n```sh-session\r\n❯ dotnet new console\r\nThe template \"Console App\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRestoring S:\\play\\scratch\\scratch.csproj:\r\n  Determining projects to restore...\r\n  Restored S:\\play\\scratch\\scratch.csproj (in 0.8 ms).\r\nRestore succeeded.\r\n\r\n❯ dotnet add package Microsoft.NETCore.App --version 2.2.8\r\n  Determining projects to restore...\r\n  Writing C:\\Users\\raines\\AppData\\Local\\Temp\\tmpE51F.tmp\r\ninfo : X.509 certificate chain validation will use the default trust store selected by .NET.\r\ninfo : Adding PackageReference for package \u0027Microsoft.NETCore.App\u0027 into project \u0027S:\\play\\scratch\\scratch.csproj\u0027.\r\ninfo : Restoring packages for S:\\play\\scratch\\scratch.csproj...\r\ninfo : Package \u0027Microsoft.NETCore.App\u0027 is compatible with all the specified frameworks in project \u0027S:\\play\\scratch\\scratch.csproj\u0027.\r\ninfo : PackageReference for package \u0027Microsoft.NETCore.App\u0027 version \u00272.2.8\u0027 added to file \u0027S:\\play\\scratch\\scratch.csproj\u0027.\r\ninfo : Generating MSBuild file S:\\play\\scratch\\obj\\scratch.csproj.nuget.g.props.\r\ninfo : Generating MSBuild file S:\\play\\scratch\\obj\\scratch.csproj.nuget.g.targets.\r\ninfo : Writing assets file to disk. Path: S:\\play\\scratch\\obj\\project.assets.json\r\nlog  : Restored S:\\play\\scratch\\scratch.csproj (in 139 ms).\r\n\r\n❯ dotnet build -r win7-x64 --no-self-contained\r\nMSBuild version 17.4.0-preview-22470-08+6521b1591 for .NET\r\n  Determining projects to restore...\r\n  Restored S:\\play\\scratch\\scratch.csproj (in 55 ms).\r\nC:\\Program Files\\dotnet\\sdk\\7.0.100-rc.2.22477.23\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.RuntimeIdentifierInferen\r\nce.targets(257,5): message NETSDK1057: You are using a preview version of .NET. See: https://aka.ms/dotnet-support-poli\r\ncy [S:\\play\\scratch\\scratch.csproj]\r\n  scratch -\u003e S:\\play\\scratch\\bin\\Debug\\net7.0\\win7-x64\\scratch.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:00.49\r\n\r\n❯ dir bin\\Debug\\net7.0\\win7-x64\r\n\r\n    Directory: S:\\play\\scratch\\bin\\Debug\\net7.0\\win7-x64\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\n-a---           10/9/2019  2:22 AM         137728 apphost.exe\r\n-a---           10/9/2019  2:22 AM         402536 hostfxr.dll\r\n-a---           10/9/2019  2:22 AM         585600 hostpolicy.dll\r\n-a---          10/19/2022  4:11 PM           6674 scratch.deps.json\r\n-a---          10/19/2022  4:09 PM           4096 scratch.dll\r\n-a---          10/19/2022  4:09 PM         153600 scratch.exe\r\n-a---          10/19/2022  4:09 PM          10920 scratch.pdb\r\n-a---          10/19/2022  4:11 PM            160 scratch.runtimeconfig.json\r\n```\r\n\r\nSpecifically, the `apphost.exe`, `hostfxr.dll`, and `hostpolicy.dll` files with modification dates in 2019 shouldn\u0027t be there.\n\n### Regression?\n\nNot recent, maybe from .NET Core 2.x.\n\n### Known Workarounds\n\nManually remove hostfxr after conflict resolution via MSBuild target.\n\n### Configuration\n\n_No response_\n\n### Other information\n\nI talked about this with @ericstj offline and he thought the files might have been mentioned in `platformmanifest.txt` but they aren\u0027t part of the shared framework itself, so they\u0027re not.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003erainersigwald\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-10-20T17:32:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5MpYPn",
                                           "createdAt":  "2022-10-20T17:36:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "Changing the area since I\u0027d like to get the host owners to weigh in here.  \r\n\r\nThe problem is that the host is not dropped by conflict resolution for non-self-contained RID-specific builds.  For self-contained builds conflict resolution sees the actual file from the host-pack and drops it since it\u0027s newer than the one from the old 1.1 package.  For non-self-contained it isn\u0027t dropped since the host is missing from the PlatformManifest.txt and PackageOverrides.txt.  We could add it to either to fix this problem: @jkoritzinsky",
                                           "updatedAt":  "2022-10-20T17:36:23Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "hostfxr and other native libraries copied to output when old NETCore.App package is referenced",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/78342",
        "createdAt":  "2022-11-14T21:30:52Z",
        "number":  78342,
        "author":  "agocke",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC1d6CA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "xoofx",
                                            "createdAt":  "2022-11-16T11:01:09Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "filipnavara",
                                            "createdAt":  "2022-11-16T11:45:41Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "zorbathut",
                                            "createdAt":  "2024-01-27T08:37:05Z"
                                        }
                                    ],
                          "totalCount":  3
                      },
        "updatedAt":  "2024-08-17T17:39:55Z",
        "body":  "By XUnit runner, I mean that there should be a library which allows a set of user-authored XUnit tests to be run that\u0027s substantially identical to the existing XUnit console runners.\r\n\r\nIdeally, running an existing assembly of XUnit unit tests via the generated runner should have the same results as running it under the existing XUnit console runner.\r\n\r\nRestrictions are:\r\n - [ ] Tests must be runnable as a self-contained executable, to support the AOT form-factor\r\n - [ ] Test runner code must be trimmable\r\n - [ ] Runner must not depend on any non-trimmable, non-AOT compatible libraries\r\n\r\nThe desired end state is that the runtime repo can rely on exactly one runner test base for all its unit testing in CI.\r\n\r\nNon-goals:\r\n- [ ] New runner supports end-user scenarios like `dotnet test` or VS test. If the semantics of the runner are the same, existing runner technologies can be used for these scenarios.\r\n \r\nI believe the existing XUnitWrapper project is a good starting point for this work, but it currently doesn\u0027t support conventional XUnit testing. We will need to add those capabilities.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOTlnuaw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5OWGia",
                                           "createdAt":  "2022-11-14T21:30:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nBy XUnit runner, I mean that there should be a library which allows a set of user-authored XUnit tests to be run that\u0027s substantially identical to the existing XUnit console runners.\r\n\r\nIdeally, running an existing assembly of XUnit unit tests via the generated runner should have the same results as running it under the existing XUnit console runner.\r\n\r\nRestrictions are:\r\n - [ ] Tests must be runnable as a self-contained executable, to support the AOT form-factor\r\n - [ ] Test runner code must be trimmable\r\n - [ ] Runner must not depend on any non-trimmable, non-AOT compatible libraries\r\n\r\nThe desired end state is that the runtime repo can rely on exactly one runner test base for all its unit testing in CI.\r\n\r\nNon-goals:\r\n- [ ] New runner supports end-user scenarios like `dotnet test` or VS test. If the semantics of the runner are the same, existing runner technologies can be used for these scenarios.\r\n \r\nI believe the existing XUnitWrapper project is a good starting point for this work, but it currently doesn\u0027t support conventional XUnit testing. We will need to add those capabilities.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eagocke\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e8.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-11-14T21:30:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5OWe5r",
                                           "createdAt":  "2022-11-14T22:59:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "Here\u0027s a non-exhaustive list of features we are missing today in the XUnitWrapperGenerator\u0027s XUnit support that dotnet/runtime or other projects in the .NET product like ASP.NET Core use:\r\n\r\n- [ ]  `IClassFixture\u003cT\u003e`\r\n- [ ]  test methods that are instance methods but whose containing type is not `IDisposable`.\r\n- [ ]  `ITestOutputHelper`\r\n- [ ]  custom fact attributes\r\n- [ ] generic \"trait\" support (the trait attributes that are supported today are hard-coded)\r\n- [ ] parallel execution of tests\r\n- [ ] async tests (Task/ValueTask)",
                                           "updatedAt":  "2022-11-15T00:22:16Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Runtime should have a source-generated, trim/AOT-compatible XUnit runner",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/78854",
        "createdAt":  "2022-11-25T16:14:24Z",
        "number":  78854,
        "author":  "kant2002",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-12-05T04:07:46Z",
        "body":  "I manage to complete `build.sh -s clr+libs` for new architecture, but running `./src/tests/build.sh generatelayoutonly` produce following error\r\n```\r\n__DistroRid: linux-loongarch64\r\nBuilding Tests...\r\n__TargetOS: Linux\r\n__TargetArch: loongarch64\r\n__BuildType: Debug\r\n__TestIntermediatesDir: /home/loongson/runtime/artifacts/tests/coreclr/obj/Linux.loongarch64.Debug\r\n__NativeTestIntermediatesDir: /home/loongson/runtime/artifacts/tests/coreclr/obj/Linux.loongarch64.Debug/Native\r\n__ManagedTestIntermediatesDir: /home/loongson/runtime/artifacts/tests/coreclr/obj/Linux.loongarch64.Debug/Managed\r\nCreating TestBinDir: /home/loongson/runtime/artifacts/tests/coreclr/Linux.loongarch64.Debug\r\nCreating LogsDir: /home/loongson/runtime/artifacts/log\r\nCreating MsbuildDebugLogsDir: /home/loongson/runtime/artifacts/log/MsbuildDebugLogs\r\nBuilding tests via \"/home/loongson/runtime/eng/common/msbuild.sh\"  --warnAsError false /home/loongson/runtime/src/tests/build.proj /t:TestBuild /p:TargetArchitecture=loongarch64 /p:Configuration=Debug /p:TargetOS=Linux /nodeReuse:false    /maxcpucount \"/flp:Verbosity=normal;LogFile=/home/loongson/runtime/artifacts/log/TestBuild.Linux.loongarch64.Debug.log\" \"/flp1:WarningsOnly;LogFile=/home/loongson/runtime/artifacts/log/TestBuild.Linux.loongarch64.Debug.wrn\" \"/flp2:ErrorsOnly;LogFile=/home/loongson/runtime/artifacts/log/TestBuild.Linux.loongarch64.Debug.err\" \"/bl:/home/loongson/runtime/artifacts/log/TestBuild.Linux.loongarch64.Debug.binlog\" /p:NUMBER_OF_PROCESSORS=4\r\n/home/loongson/runtime/.dotnet/sdk/7.0.100/MSBuild.dll /nologo -maxcpucount /m /maxcpucount -verbosity:m /v:minimal /bl:/home/loongson/runtime/artifacts/log/TestBuild.Linux.loongarch64.Debug.binlog /clp:Summary /flp1:WarningsOnly;LogFile=/home/loongson/runtime/artifacts/log/TestBuild.Linux.loongarch64.Debug.wrn /flp2:ErrorsOnly;LogFile=/home/loongson/runtime/artifacts/log/TestBuild.Linux.loongarch64.Debug.err /flp:Verbosity=normal;LogFile=/home/loongson/runtime/artifacts/log/TestBuild.Linux.loongarch64.Debug.log /nr:true /nodeReuse:false /p:TreatWarningsAsErrors=false /p:ContinuousIntegrationBuild=false /p:TargetArchitecture=loongarch64 /p:Configuration=Debug /p:TargetOS=Linux /p:NUMBER_OF_PROCESSORS=4 /t:TestBuild /home/loongson/runtime/src/tests/build.proj\r\n  [00:10:29.96] Restoring all packages...\r\n    Determining projects to restore...\r\n/home/loongson/runtime/src/tests/Common/test_dependencies_fs/test_dependencies.fsproj : error NU1101: Unable to find package Microsoft.NETCore.App.Runtime.linux-loongarch64. No packages exist with this id in source(s): /home/loongson/runtime/.dotnet/sdk/7.0.100/FSharp/library-packs, dotnet-eng, dotnet-libraries, dotnet-public, dotnet-tools, dotnet7, dotnet7-transport, dotnet8, dotnet8-transport, richnav [/home/loongson/runtime/src/tests/build.proj]\r\n    Failed to restore /home/loongson/runtime/src/tests/Common/test_dependencies_fs/test_dependencies.fsproj (in 9.94 sec).\r\n/home/loongson/runtime/src/tests/build.proj(438,5): error MSB3073: 命令“\"/home/loongson/runtime/.dotnet/dotnet\" restore -r linux-loongarch64 Common/test_dependencies_fs/test_dependencies.fsproj  /p:SetTFMForRestore=true /p:TargetOS=Linux /p:TargetArchitecture=loongarch64 /p:Configuration=Debug /p:CrossBuild=”已退出，代码为 1。\r\n\r\n生成失败。\r\n\r\n/home/loongson/runtime/src/tests/Common/test_dependencies_fs/test_dependencies.fsproj : error NU1101: Unable to find package Microsoft.NETCore.App.Runtime.linux-loongarch64. No packages exist with this id in source(s): /home/loongson/runtime/.dotnet/sdk/7.0.100/FSharp/library-packs, dotnet-eng, dotnet-libraries, dotnet-public, dotnet-tools, dotnet7, dotnet7-transport, dotnet8, dotnet8-transport, richnav [/home/loongson/runtime/src/tests/build.proj]\r\n/home/loongson/runtime/src/tests/build.proj(438,5): error MSB3073: 命令“\"/home/loongson/runtime/.dotnet/dotnet\" restore -r linux-loongarch64 Common/test_dependencies_fs/test_dependencies.fsproj  /p:SetTFMForRestore=true /p:TargetOS=Linux /p:TargetArchitecture=loongarch64 /p:Configuration=Debug /p:CrossBuild=”已退出，代码为 1。\r\n    0 个警告\r\n    2 个错误\r\n\r\n已用时间 00:00:25.87\r\nBuild failed with exit code 1. Check errors above.\r\nFailed to build tests. See the build logs:\r\n    /home/loongson/runtime/artifacts/log/TestBuild.Linux.loongarch64.Debug.log\r\n    /home/loongson/runtime/artifacts/log/TestBuild.Linux.loongarch64.Debug.wrn\r\n    /home/loongson/runtime/artifacts/log/TestBuild.Linux.loongarch64.Debug.err\r\n    /home/loongson/runtime/artifacts/log/TestBuild.Linux.loongarch64.Debug.binlog\r\n```\r\n\r\nis there a way how I can use `Microsoft.NETCore.App.Runtime.linux-loongarch64` from local build.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOT6y50w==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5PIp0r",
                                           "createdAt":  "2022-11-25T16:14:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2022-11-25T16:14:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5PIp7c",
                                           "createdAt":  "2022-11-25T16:14:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kant2002",
                                           "body":  "/cc @shushanhf",
                                           "updatedAt":  "2022-11-25T16:14:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5PIvkc",
                                           "createdAt":  "2022-11-25T16:46:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kant2002",
                                           "body":  "Even if I build `./build.sh -s packs -bl /p:PublishReadyToRun=false` and `artifacts/packages/Debug/Shipping/` has `Microsoft.NETCore.App.Runtime.linux-loongarch64.8.0.0-dev.nupkg`",
                                           "updatedAt":  "2022-11-25T16:46:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5PJAmN",
                                           "createdAt":  "2022-11-25T18:09:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nI manage to complete `build.sh -s clr+libs` for new architecture, but running `./src/tests/build.sh generatelayoutonly` produce following error\r\n```\r\n__DistroRid: linux-loongarch64\r\nBuilding Tests...\r\n__TargetOS: Linux\r\n__TargetArch: loongarch64\r\n__BuildType: Debug\r\n__TestIntermediatesDir: /home/loongson/runtime/artifacts/tests/coreclr/obj/Linux.loongarch64.Debug\r\n__NativeTestIntermediatesDir: /home/loongson/runtime/artifacts/tests/coreclr/obj/Linux.loongarch64.Debug/Native\r\n__ManagedTestIntermediatesDir: /home/loongson/runtime/artifacts/tests/coreclr/obj/Linux.loongarch64.Debug/Managed\r\nCreating TestBinDir: /home/loongson/runtime/artifacts/tests/coreclr/Linux.loongarch64.Debug\r\nCreating LogsDir: /home/loongson/runtime/artifacts/log\r\nCreating MsbuildDebugLogsDir: /home/loongson/runtime/artifacts/log/MsbuildDebugLogs\r\nBuilding tests via \"/home/loongson/runtime/eng/common/msbuild.sh\"  --warnAsError false /home/loongson/runtime/src/tests/build.proj /t:TestBuild /p:TargetArchitecture=loongarch64 /p:Configuration=Debug /p:TargetOS=Linux /nodeReuse:false    /maxcpucount \"/flp:Verbosity=normal;LogFile=/home/loongson/runtime/artifacts/log/TestBuild.Linux.loongarch64.Debug.log\" \"/flp1:WarningsOnly;LogFile=/home/loongson/runtime/artifacts/log/TestBuild.Linux.loongarch64.Debug.wrn\" \"/flp2:ErrorsOnly;LogFile=/home/loongson/runtime/artifacts/log/TestBuild.Linux.loongarch64.Debug.err\" \"/bl:/home/loongson/runtime/artifacts/log/TestBuild.Linux.loongarch64.Debug.binlog\" /p:NUMBER_OF_PROCESSORS=4\r\n/home/loongson/runtime/.dotnet/sdk/7.0.100/MSBuild.dll /nologo -maxcpucount /m /maxcpucount -verbosity:m /v:minimal /bl:/home/loongson/runtime/artifacts/log/TestBuild.Linux.loongarch64.Debug.binlog /clp:Summary /flp1:WarningsOnly;LogFile=/home/loongson/runtime/artifacts/log/TestBuild.Linux.loongarch64.Debug.wrn /flp2:ErrorsOnly;LogFile=/home/loongson/runtime/artifacts/log/TestBuild.Linux.loongarch64.Debug.err /flp:Verbosity=normal;LogFile=/home/loongson/runtime/artifacts/log/TestBuild.Linux.loongarch64.Debug.log /nr:true /nodeReuse:false /p:TreatWarningsAsErrors=false /p:ContinuousIntegrationBuild=false /p:TargetArchitecture=loongarch64 /p:Configuration=Debug /p:TargetOS=Linux /p:NUMBER_OF_PROCESSORS=4 /t:TestBuild /home/loongson/runtime/src/tests/build.proj\r\n  [00:10:29.96] Restoring all packages...\r\n    Determining projects to restore...\r\n/home/loongson/runtime/src/tests/Common/test_dependencies_fs/test_dependencies.fsproj : error NU1101: Unable to find package Microsoft.NETCore.App.Runtime.linux-loongarch64. No packages exist with this id in source(s): /home/loongson/runtime/.dotnet/sdk/7.0.100/FSharp/library-packs, dotnet-eng, dotnet-libraries, dotnet-public, dotnet-tools, dotnet7, dotnet7-transport, dotnet8, dotnet8-transport, richnav [/home/loongson/runtime/src/tests/build.proj]\r\n    Failed to restore /home/loongson/runtime/src/tests/Common/test_dependencies_fs/test_dependencies.fsproj (in 9.94 sec).\r\n/home/loongson/runtime/src/tests/build.proj(438,5): error MSB3073: 命令“\"/home/loongson/runtime/.dotnet/dotnet\" restore -r linux-loongarch64 Common/test_dependencies_fs/test_dependencies.fsproj  /p:SetTFMForRestore=true /p:TargetOS=Linux /p:TargetArchitecture=loongarch64 /p:Configuration=Debug /p:CrossBuild=”已退出，代码为 1。\r\n\r\n生成失败。\r\n\r\n/home/loongson/runtime/src/tests/Common/test_dependencies_fs/test_dependencies.fsproj : error NU1101: Unable to find package Microsoft.NETCore.App.Runtime.linux-loongarch64. No packages exist with this id in source(s): /home/loongson/runtime/.dotnet/sdk/7.0.100/FSharp/library-packs, dotnet-eng, dotnet-libraries, dotnet-public, dotnet-tools, dotnet7, dotnet7-transport, dotnet8, dotnet8-transport, richnav [/home/loongson/runtime/src/tests/build.proj]\r\n/home/loongson/runtime/src/tests/build.proj(438,5): error MSB3073: 命令“\"/home/loongson/runtime/.dotnet/dotnet\" restore -r linux-loongarch64 Common/test_dependencies_fs/test_dependencies.fsproj  /p:SetTFMForRestore=true /p:TargetOS=Linux /p:TargetArchitecture=loongarch64 /p:Configuration=Debug /p:CrossBuild=”已退出，代码为 1。\r\n    0 个警告\r\n    2 个错误\r\n\r\n已用时间 00:00:25.87\r\nBuild failed with exit code 1. Check errors above.\r\nFailed to build tests. See the build logs:\r\n    /home/loongson/runtime/artifacts/log/TestBuild.Linux.loongarch64.Debug.log\r\n    /home/loongson/runtime/artifacts/log/TestBuild.Linux.loongarch64.Debug.wrn\r\n    /home/loongson/runtime/artifacts/log/TestBuild.Linux.loongarch64.Debug.err\r\n    /home/loongson/runtime/artifacts/log/TestBuild.Linux.loongarch64.Debug.binlog\r\n```\r\n\r\nis there a way how I can use `Microsoft.NETCore.App.Runtime.linux-loongarch64` from local build.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ekant2002\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-11-25T18:09:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5PJDzh",
                                           "createdAt":  "2022-11-25T18:31:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kant2002",
                                           "body":  "I customize `src/tests/build.proj` to use that location as additional restore source, but it require version of that package to match version of runtime from `.dotnet` folder",
                                           "updatedAt":  "2022-11-25T18:31:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5PZj_4",
                                           "createdAt":  "2022-11-30T12:55:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kant2002",
                                           "body":  "Actually after I add additional package source to the build, I receive another error\r\n```\r\n/home/loongson/runtime/src/tests/Common/ilasm/ilasm.ilproj : error NU1603: ilasm depends on runtime.linux-loongarch64.Microsoft.NETCore.ILAsm (\u003e= 8.0.0-alpha.1.22559.2) but runtime.linux-loongarch64.Microsoft.NETCore.ILAsm 8.0.0-alpha.1.22559.2 was not found. An approximate best match of runtime.linux-loongarch64.Microsoft.NETCore.ILAsm 8.0.0-dev was resolved. [/home/loongson/runtime/src/tests/build.proj]\r\n/home/loongson/runtime/src/tests/Common/ilasm/ilasm.ilproj : error NU1603: ilasm depends on runtime.linux-loongarch64.Microsoft.NETCore.ILDAsm (\u003e= 8.0.0-alpha.1.22559.2) but runtime.linux-loongarch64.Microsoft.NETCore.ILDAsm 8.0.0-alpha.1.22559.2 was not found. An approximate best match of runtime.linux-loongarch64.Microsoft.NETCore.ILDAsm 8.0.0-dev was resolved. [/home/loongson/runtime/src/tests/build.proj]\r\n/home/loongson/runtime/src/tests/build.proj(440,5): error MSB3073: 命令“\"/home/loongson/runtime/.dotnet/dotnet\" restore -r linux-loongarch64 Common/ilasm/ilasm.ilproj  /p:SetTFMForRestore=true /p:TargetOS=Linux /p:TargetArchitecture=loongarch64 /p:Configuration=Debug /p:CrossBuild= /p:RestoreAdditionalProjectSources=/home/loongson/runtime/artifacts/packages/Debug/”已退出， 代码为 1。\r\n```\r\n\r\nso after I patch `ilasm.ilproj` to ignore this Nuget warnig, I was able to produce test layout. So that\u0027s great.",
                                           "updatedAt":  "2022-11-30T12:55:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5PrLnT",
                                           "createdAt":  "2022-12-05T04:07:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "shushanhf",
                                           "body":  "Sorry for late response.\r\nRight now building the runtime directly on LA is depends on the lots of nugets.\r\nWe have to build the whole runtime directly untile the nugets supports LA.\r\n\r\nAs the plan within #69705 , the testing pipeline for LA  maybe in 2023 Q2 or Q3.\r\n\r\nSo we have to debug the runtime8 by the CoreRoot  which liking our previous discusses.",
                                           "updatedAt":  "2022-12-05T04:07:46Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "Cannot create layout on unknown arch Loongarch",
        "labels":  [
                       "area-Infrastructure-coreclr",
                       "arch-loongarch64"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/81577",
        "createdAt":  "2023-02-02T23:44:22Z",
        "number":  81577,
        "author":  "am11",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCuNgMg==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "AaronRobinsonMSFT",
                                            "createdAt":  "2023-02-03T02:01:55Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2024-08-22T15:43:48Z",
        "body":  "Clang 16 has introduced buffer hardening https://discourse.llvm.org/t/rfc-c-buffer-hardening/65734 which https://github.com/dotnet/runtime/pull/81573 is suppressing. Filing this issue so we remember to fix the violations and remove suppression.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOWKkMoQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5UT9ap",
                                           "createdAt":  "2023-02-02T23:44:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2023-02-02T23:44:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5UT9gr",
                                           "createdAt":  "2023-02-02T23:45:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nClang 16 has introduced buffer hardening https://discourse.llvm.org/t/rfc-c-buffer-hardening/65734 which https://github.com/dotnet/runtime/pull/81573 is suppressing. Filing this issue so we remember to fix the violations and remove suppression.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eam11\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-02-02T23:45:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5YqQyh",
                                           "createdAt":  "2023-03-28T19:19:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ayakael",
                                           "body":  "On Alpine edge (clang 16), I also get:\r\n```\r\n/var/lib/gitlab-runner/builds/ayakael/user-aports/user/dotnet7-stage0/src/dotnet-v7.0.104/src/runtime/src/native/libs/System.Security.Cryptography.Native/openssl.c(1444,12): error G6B6F0AA2: incompatible function pointer types passing \u0027void ()\u0027 to parameter of type \u0027void (*)(void)\u0027 [-Wincompatible-function-pointer-types-strict] [/var/lib/gitlab-runner/builds/ayakael/user-aports/user/dotnet7-stage0/src/dotnet-v7.0.104/src/runtime/src/native/libs/build-native.proj]\r\n5587/var/lib/gitlab-runner/builds/ayakael/user-aports/user/dotnet7-stage0/src/dotnet-v7.0.104/src/runtime/src/native/libs/System.Security.Cryptography.Native/openssl.c(1444,12): error G6B6F0AA2: incompatible function pointer types passing \u0027void ()\u0027 to parameter of type \u0027void (*)(void)\u0027 [-Wincompatible-function-pointer-types-strict] [/var/lib/gitlab-runner/builds/ayakael/user-aports/user/dotnet7-stage0/src/dotnet-v7.0.104/src/runtime/src/native/libs/build-native.proj]\r\n5588/var/lib/gitlab-runner/builds/ayakael/user-aports/user/dotnet7-stage0/src/dotnet-v7.0.104/src/runtime/src/native/libs/System.Security.Cryptography.Native/openssl.c(1510,37): error G6B6F0AA2: incompatible function pointer types passing \u0027void ()\u0027 to parameter of type \u0027void (*)(void)\u0027 [-Wincompatible-function-pointer-types-strict] [/var/lib/gitlab-runner/builds/ayakael/user-aports/user/dotnet7-stage0/src/dotnet-v7.0.104/src/runtime/src/native/libs/build-native.proj]\r\n5589/var/lib/gitlab-runner/builds/ayakael/user-aports/user/dotnet7-stage0/src/dotnet-v7.0.104/src/runtime/src/native/libs/System.Security.Cryptography.Native/openssl.c(1510,37): error G6B6F0AA2: incompatible function pointer types passing \u0027void ()\u0027 to parameter of type \u0027void (*)(void)\u0027 [-Wincompatible-function-pointer-types-strict] [/var/lib/gitlab-runner/builds/ayakael/user-aports/user/dotnet7-stage0/src/dotnet-v7.0.104/src/runtime/src/native/libs/build-native.proj]\r\n5590/var/lib/gitlab-runner/builds/ayakael/user-aports/user/dotnet7-stage0/src/dotnet-v7.0.104/src/runtime/src/native/libs/System.Native/pal_console.c(122,38): error G6B6F0AA2: incompatible function pointer types passing \u0027void ()\u0027 to parameter of type \u0027ConsoleSigTtouHandler\u0027 (aka \u0027void (*)(void)\u0027) [-Wincompatible-function-pointer-types-strict] [/var/lib/gitlab-runner/builds/ayakael/user-aports/user/dotnet7-stage0/src/dotnet-v7.0.104/src/runtime/src/native/libs/build-native.proj]\r\n5591/var/lib/gitlab-runner/builds/ayakael/user-aports/user/dotnet7-stage0/src/dotnet-v7.0.104/src/runtime/src/native/libs/System.Native/pal_console.c(122,38): error G6B6F0AA2: incompatible function pointer types passing \u0027void ()\u0027 to parameter of type \u0027ConsoleSigTtouHandler\u0027 (aka \u0027void (*)(void)\u0027) [-Wincompatible-function-pointer-types-strict] [/var/lib/gitlab-runner/builds/ayakael/user-aports/user/dotnet7-stage0/src/dotnet-v7.0.104/src/runtime/src/native/libs/build-native.proj]\r\n5592/var/lib/gitlab-runner/builds/ayakael/user-aports/user/dotnet7-stage0/src/dotnet-v7.0.104/src/runtime/src/native/libs/System.Native/pal_console.c(122,38): error G6B6F0AA2: incompatible function pointer types passing \u0027void ()\u0027 to parameter of type \u0027ConsoleSigTtouHandler\u0027 (aka \u0027void (*)(void)\u0027) [-Wincompatible-function-pointer-types-strict] [/var/lib/gitlab-runner/builds/ayakael/user-aports/user/dotnet7-stage0/src/dotnet-v7.0.104/src/runtime/src/native/libs/build-native.proj]\r\n5593/var/lib/gitlab-runner/builds/ayakael/user-aports/user/dotnet7-stage0/src/dotnet-v7.0.104/src/runtime/src/native/libs/System.Native/pal_console.c(122,38): error G6B6F0AA2: incompatible function pointer types passing \u0027void ()\u0027 to parameter of type \u0027ConsoleSigTtouHandler\u0027 (aka \u0027void (*)(void)\u0027) [-Wincompatible-function-pointer-types-strict] [/var/lib/gitlab-runner/builds/ayakael/user-aports/user/dotnet7-stage0/src/dotnet-v7.0.104/src/runtime/src/native/libs/build-native.proj]\r\n5594/var/lib/gitlab-runner/builds/ayakael/user-aports/user/dotnet7-stage0/src/dotnet-v7.0.104/src/runtime/src/native/libs/System.Security.Cryptography.Native/opensslshim.c(136,34): error G6B6F0AA2: incompatible function pointer types passing \u0027void ()\u0027 to parameter of type \u0027void (*)(void)\u0027 [-Wincompatible-function-pointer-types-strict] [/var/lib/gitlab-runner/builds/ayakael/user-aports/user/dotnet7-stage0/src/dotnet-v7.0.104/src/runtime/src/native/libs/build-native.proj]\r\n5595/var/lib/gitlab-runner/builds/ayakael/user-aports/user/dotnet7-stage0/src/dotnet-v7.0.104/src/runtime/src/native/libs/System.Security.Cryptography.Native/opensslshim.c(136,34): error G6B6F0AA2: incompatible function pointer types passing \u0027void ()\u0027 to parameter of type \u0027void (*)(void)\u0027 [-Wincompatible-function-pointer-types-strict] [/var/lib/gitlab-runner/builds/ayakael/user-aports/user/dotnet7-stage0/src/dotnet-v7.0.104/src/runtime/src/native/libs/build-native.proj]\r\n```\r\n\r\nApplied the following workaround:\r\n```diff\r\ndiff --git a/src/runtime/eng/native/configurecompiler.cmake b/src/runtime/eng/native/configurecompiler.cmake\r\nindex c9a54547c0a..931da2cae5b 100644\r\n--- a/src/runtime/eng/native/configurecompiler.cmake\r\n+++ b/src/runtime/eng/native/configurecompiler.cmake\r\n@@ -488,6 +488,7 @@ if (CLR_CMAKE_HOST_UNIX)\r\n     # other clang 16.0 suppressions\r\n     add_compile_options(-Wno-single-bit-bitfield-constant-conversion)\r\n     add_compile_options(-Wno-cast-function-type-strict)\r\n+    add_compile_options(-Wno-incompatible-function-pointer-types-strict)\r\n   else()\r\n     add_compile_options(-Wno-uninitialized)\r\n     add_compile_options(-Wno-strict-aliasing)\r\n```",
                                           "updatedAt":  "2023-03-28T19:19:24Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Fix `-Wunsafe-buffer-usage` warnings",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/82134",
        "createdAt":  "2023-02-14T22:19:14Z",
        "number":  82134,
        "author":  "TIHan",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-02-14T23:49:34Z",
        "body":  "At the moment, we are using the directive `-FULL-LINE-NEXT:` to verify the exact text of a line for disasm checks. We should consider changing this syntax to be a modifier: `-NEXT{FULL-LINE}:` instead to avoid confusion if the user accidently uses `-NEXT-FULL-LINE:`",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOVUL7oA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5VQvug",
                                           "createdAt":  "2023-02-14T22:19:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nAt the moment, we are using the directive `-FULL-LINE-NEXT:` to verify the exact text of a line for disasm checks. We should consider changing this syntax to be a modifier: `-NEXT{FULL-LINE}:` instead to avoid confusion.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eTIHan\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-02-14T22:19:21Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "[SuperFileCheck] Consider using FileCheck\u0027s modifier syntax for `FULL-LINE`",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/82139",
        "createdAt":  "2023-02-14T23:47:00Z",
        "number":  82139,
        "author":  "TIHan",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-02-14T23:49:26Z",
        "body":  "We should consider adding stronger checks to what is a valid directive when using SuperFileCheck/FileCheck.\r\n\r\nExample of a Valid directive:\r\n```csharp\r\n// X64-NEXT: ...\r\n```\r\n\r\nExample of an Invalid directive:\r\n```csharp\r\n// X64-NEXT-DOOT: ...\r\n```\r\n\r\nAt the moment, the invalid directive will not receive an error in SuperFileCheck, so we could add stronger verification around this.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOVURMqg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5VREyq",
                                           "createdAt":  "2023-02-14T23:47:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nWe should consider adding stronger checks to what is a valid directive when using SuperFileCheck/FileCheck.\r\n\r\nExample of a Valid directive:\r\n```\r\n// X64-NEXT: ...\r\n```\r\n\r\nExample of an Invalid directive:\r\n```\r\n// X64-DOOT:```\r\n```\r\n\r\nAt the moment, the invalid directive will not receive an error in SuperFileCheck, so we could add stronger verification around this.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eTIHan\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-02-14T23:47:06Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "[SuperFileCheck] Stronger verification for directives",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/82199",
        "createdAt":  "2023-02-15T21:05:58Z",
        "number":  82199,
        "author":  "TIHan",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-02-15T21:06:22Z",
        "body":  "At the moment in SuperFileCheck, we use FileCheck\u0027s syntax for matching registers using regexes:\r\n```csharp\r\n// ARM64: cmp {{x[0-9]+}}, {{x[0-9]+}}\r\n```\r\n```csharp\r\n// X64: mov [[REG0:[a-z0-9]+]], [[REG1:[a-z0-9]+]]\r\n```\r\n\r\nThis does hurt readability. We should consider creating built-in helpers at the SuperFileCheck level that expand common regexes to make this easier to write and read. An example of what this might look like:\r\n```csharp\r\n// ARM64: cmp {{$(REGISTER)}}, {{$(REGISTER)}}\r\n```\r\n```csharp\r\n// X64: mov [[REG0:$(REGISTER)]], [[REG1:$(REGISTER)]]\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOVVsUwQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5VWxTB",
                                           "createdAt":  "2023-02-15T21:06:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nAt the moment in SuperFileCheck, we use FileCheck\u0027s syntax for matching registers using regexes:\r\n```csharp\r\n// ARM64: cmp {{x[0-9]+}}, {{x[0-9]+}}\r\n```\r\n```csharp\r\n// X64: mov [[REG0:[a-z0-9]+]], [[REG1:[a-z0-9]+]]\r\n```\r\n\r\nThis does hurt readability. We should consider creating built-in helpers at the SuperFileCheck level that expand common regexes to make this easier to write and read. An example of what this might look like:\r\n```csharp\r\n// ARM64: cmp {{$(REGISTER)}}, {{$(REGISTER)}}\r\n```\r\n```csharp\r\n// X64: mov [[REG0:$(REGISTER)]], [[REG1:$(REGISTER)]]\r\n```\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eTIHan\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-02-15T21:06:05Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "[SuperFileCheck] Consider regex helpers",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/82490",
        "createdAt":  "2023-02-22T16:13:05Z",
        "number":  82490,
        "author":  "huoyaoyuan",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC3gGEQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "RigoLigoRLC",
                                            "createdAt":  "2024-04-26T07:14:32Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2024-07-08T18:04:02Z",
        "body":  "#49906 introduces a caching mechanism for cmake intermediate files. This works fine in daily work, but every time when there\u0027s an update to VS and MSVC, the full path of MSVC (version number included) will change, and an error will be reported by ninja:\r\n\r\n```\r\n    The CMAKE_CXX_COMPILER:\r\n\r\n      C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Tools/MSVC/14.34.31933/bin/Hostx64/x64/cl.exe\r\n\r\n    is not a full path to an existing compiler tool.\r\n```\r\n\r\nSurprised that nobody claimed for this.\r\n\r\nIdeally, the script should detect for MSVC update, and invoke cmake proactively when there\u0027s an update. If this can\u0027t be achieved easily, there should be some documentation about which file to delete in order to regenerate the cache.\r\n\r\nBTW, building coreclr with VS open folder experience refreshes the cache in windows.\\\u003carch\\\u003e.\\\u003cconfiguration\\\u003e, but not linux.\\\u003carch\\\u003e.\\\u003cconfiguration\\\u003e which is used for LinuxDac.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOVpJ8cQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5V2bev",
                                           "createdAt":  "2023-02-22T16:13:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n#49906 introduces a caching mechanism for cmake intermediate files. This works fine in daily work, but every time when there\u0027s an update to VS and MSVC, the full path of MSVC (version number included) will change, and an error will be reported by ninja:\r\n\r\n```\r\n    The CMAKE_CXX_COMPILER:\r\n\r\n      C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Tools/MSVC/14.34.31933/bin/Hostx64/x64/cl.exe\r\n\r\n    is not a full path to an existing compiler tool.\r\n```\r\n\r\nSurprised that nobody claimed for this.\r\n\r\nIdeally, the script should detect for MSVC update, and invoke cmake proactively when there\u0027s an update. If this can\u0027t be achieved easily, there should be some documentation about which file to delete in order to regenerate the cache.\r\n\r\nBTW, building coreclr with VS open folder experience refreshes the cache in windows.\u003carch\u003e.\u003cconfiguration\u003e, but not linux.\u003carch\u003e.\u003cconfiguration\u003e which is used for LinuxDac.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ehuoyaoyuan\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-02-22T16:13:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5WIHHV",
                                           "createdAt":  "2023-02-25T02:54:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "@jkoritzinsky should we try to serialize more than just the commandline? Something like a \"determinism json\" with sorted keys?",
                                           "updatedAt":  "2023-02-25T02:54:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Wknxx",
                                           "createdAt":  "2023-03-02T19:31:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC3Hd7w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "hoyosjs",
                                                                               "createdAt":  "2023-03-03T03:26:35Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "I just tested this locally by removing the cache in #49906 and I still hit the same failure. This is an issue with how CMake resolves and caching compiler paths. CMake caches the paths in the CMakeCache.txt file (CMake\u0027s cache, not ours), which it then loads from even when reconfiguring. It does not try to rediscover the compiler location when reconfiguring. It only does so on the initial configure. The only thing we could do here is check for the existence of the compiler specified in CMake\u0027s cache and wipe the cache file ourselves to force compiler rediscovery.\r\n\r\nThis does not affect the Visual Studio generators as they do not use these CMake paths since MSBuild just uses the MSVC that is in VS. this affects Ninja as Ninja uses a similar compiler discovery mechanism as Make (where you give it a path) so CMake needs to track the path of the compiler.\r\n\r\nHonestly, the right thing to delete when this happens is the entire `artifacts/obj/coreclr` directory as none of the artifacts should be reused as static linking requires a matching toolset version, and a failure in this manner means that your toolset has been updated.",
                                           "updatedAt":  "2023-03-02T19:31:32Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "CMake caching pain with MSVC update",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/82677",
        "createdAt":  "2023-02-25T19:47:57Z",
        "number":  82677,
        "author":  "filipnavara",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-21T17:58:00Z",
        "body":  "- [ ] `src/tests/build.proj` uses MSBuild traversal SDK, not Microsoft.NET.Sdk. It, however, implicitly imports Directory.Build.targets in the same directory that imports `Microsoft.DotNet.ILCompiler.SingleEntry.targets`. It makes no sense to import ILCompiler SDK for the traversal project and there\u0027s no condition which would check it\u0027s actually `Microsoft.NET.Sdk` project build. There are many other live-build properties that make sense only for SDK-based projects. It would make sense to clean up `src/tests/Directory.targets`. We could split off the live-build properties into separate .targets file and include that one with `\u0027$(NETCoreSdkVersion)\u0027 != \u0027\u0027` guard. That way it won\u0027t import unnecessary stuff into the traversal project(s).\r\n- [ ] `src/tests/Common/Directory.Build.targets` doesn\u0027t recursively include `src/tests/Directory.Build.targets`. The `Directory.Build.props` file does. This is inconsistent. Moreover, large part of the logic in the .targets files is duplicated.\r\n- [ ] `src/tests/Directory.Build.targets` sets the `DisableImplicitFrameworkReferences` property to `false`. \u003cstrike\u003eThat has no effect whatsoever since the implicit references are already added by `Microsoft.NET.Sdk.DefaultItems.props` in the SDK before this is evaluated.\u003c/strike\u003e There\u0027s couple of `netstandard` projects so we likely want to keep the implicit references and add `\u003cFrameworkReference Remove=\"Microsoft.NETCore.App\" /\u003e` instead. Also, due to the point, the `DisableImplicitFrameworkReferences` declaration is missing for anything under the `src/tests/Common/` directory.\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOVjHUcg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5WI9z7",
                                           "createdAt":  "2023-02-25T19:48:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n- [ ] `src/tests/build.proj` uses MSBuild traversal SDK, not Microsoft.NET.Sdk. It, however, implicitly imports Directory.Build.targets in the same directory that imports `Microsoft.DotNet.ILCompiler.SingleEntry.targets`. It makes no sense to import ILCompiler SDK for the traversal project and there\u0027s no condition which would check it\u0027s actually `Microsoft.NET.Sdk` project build. There\u0027s many other live-build properties that make sense only for SDK-based projects. It would make sense to clean up `src/tests/Directory.targets`. We could split off the live-build properties into separate .targets file and include that one with `\u0027$(NETCoreSdkVersion)\u0027 != \u0027\u0027` guard. That way it won\u0027t import unnecessary stuff into the traversal project(s).\r\n- [ ] `src/tests/Directory.Build.targets` sets the `DisableImplicitFrameworkReferences` property to `false`. That has no effect whatsoever since the implicit references are already added by `Microsoft.NET.Sdk.DefaultItems.props` in the SDK before this is evaluated. There\u0027s couple of netstandard projects so we likely want to keep the implicit references and add `\u003cFrameworkReference Remove=\"Microsoft.NETCore.App\" /\u003e` instead.\r\n- [ ] `src/tests/Common/Directory.Build.targets` doesn\u0027t recursively include `src/tests/Directory.Build.targets`. The `Directory.Build.props` file does. This is inconsistent. Moreover, large part of the login in the .targets file is duplicated.\r\n\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003efilipnavara\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-02-25T19:48:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5WJDxF",
                                           "createdAt":  "2023-02-25T22:03:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AaronRobinsonMSFT",
                                           "body":  "/cc @trylek ",
                                           "updatedAt":  "2023-02-25T22:03:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5WJFcT",
                                           "createdAt":  "2023-02-25T22:55:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "filipnavara",
                                           "body":  "These issues combine into the fact that some runtime targeting pack is always being restored despite the fact that we are doing builds against the \"live\" framework. The newly added NativeAOT iOS-like platforms don\u0027t have the runtime pack (yet) so this effectively makes running the tests impossible. ",
                                           "updatedAt":  "2023-02-25T22:55:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5WMdRy",
                                           "createdAt":  "2023-02-27T10:52:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "marek-safar",
                                           "body":  "/cc @akoeplinger ",
                                           "updatedAt":  "2023-02-27T10:52:24Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Clean up some inconsistencies in test .proj files",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/83980",
        "createdAt":  "2023-03-27T17:09:40Z",
        "number":  83980,
        "author":  "kunalspathak",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-25T21:44:51Z",
        "body":  "Today we use `TargetArchitecture` to conditionally include or exclude a test project. However, we build universal test projects that should be run for AnyCPU. We build it on linux-x64 or osx-x64 and end up passing `TargetArchitecture=x64`.\r\n\r\nhttps://github.com/dotnet/runtime/blob/922c75c837fc95092e1d9e433a087ac62082953d/eng/pipelines/common/templates/runtimes/build-test-job.yml#L122\r\n\r\nAs such, the test projects that checks for `TargetArchitecture=arm64`, etc. will never become true. Recently we found out in https://github.com/dotnet/runtime/issues/83947 that Arm64 were never run since October 2022.\r\n\r\nCome up a way by splitting the build of test projects to be target specific. This is needed so we can enable only the tests that are relevant on the supported architecture. This will save us some test execution time.\r\n\r\nUpdate [disabling-tests.md](https://github.com/dotnet/runtime/blob/main/docs/workflow/ci/disabling-tests.md) doc accordingly.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOWkVf8A==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5Yi1Eg",
                                           "createdAt":  "2023-03-27T17:09:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nToday we use `TargetArchitecture` to conditionally include or exclude a test project. However, we build universal test projects that should be run for AnyCPU. We build it on linux-x64 or osx-x64 and end up passing `TargetArchitecture=x64`.\r\n\r\nhttps://github.com/dotnet/runtime/blob/922c75c837fc95092e1d9e433a087ac62082953d/eng/pipelines/common/templates/runtimes/build-test-job.yml#L122\r\n\r\nAs such, the test projects that checks for `TargetArchitecture=arm64`, etc. will never become true. Recently we found out in https://github.com/dotnet/runtime/issues/83947 that Arm64 were never run since October 2022.\r\n\r\nCome up a way by splitting the build of test projects to be target specific. This is needed so we can enable only the tests that are relevant on the supported architecture. This will save us some test execution time.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ekunalspathak\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-03-27T17:09:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Yi3Mk",
                                           "createdAt":  "2023-03-27T17:16:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kunalspathak",
                                           "body":  "@hoyosjs @jkoritzinsky ",
                                           "updatedAt":  "2023-03-27T17:16:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Yj679",
                                           "createdAt":  "2023-03-27T20:19:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "@trylek ",
                                           "updatedAt":  "2023-03-27T20:19:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Yj7FU",
                                           "createdAt":  "2023-03-27T20:20:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nToday we use `TargetArchitecture` to conditionally include or exclude a test project. However, we build universal test projects that should be run for AnyCPU. We build it on linux-x64 or osx-x64 and end up passing `TargetArchitecture=x64`.\r\n\r\nhttps://github.com/dotnet/runtime/blob/922c75c837fc95092e1d9e433a087ac62082953d/eng/pipelines/common/templates/runtimes/build-test-job.yml#L122\r\n\r\nAs such, the test projects that checks for `TargetArchitecture=arm64`, etc. will never become true. Recently we found out in https://github.com/dotnet/runtime/issues/83947 that Arm64 were never run since October 2022.\r\n\r\nCome up a way by splitting the build of test projects to be target specific. This is needed so we can enable only the tests that are relevant on the supported architecture. This will save us some test execution time.\r\n\r\nUpdate [disabling-tests.md](https://github.com/dotnet/runtime/blob/main/docs/workflow/ci/disabling-tests.md) doc accordingly.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ekunalspathak\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-03-27T20:20:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Yj9PE",
                                           "createdAt":  "2023-03-27T20:28:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "@sdmaclea refactored runtime tests in 2020 to make sure the managed artifacts (Roslyn compilations) only get produced once for all the execution platforms; this is crucial to save AzDO test build time that would otherwise be enormous. The design plan for future tests established at that time was to create platform variants of such tests, see here for instance:\r\n\r\nhttps://github.com/dotnet/runtime/blob/main/src/tests/JIT/Methodical/xxobj/sizeof/sizeof32_Target_64Bit_and_arm_il_d.ilproj\r\n\r\n@kunalspathak - please let me know if it answers your doubts or concerns and / or whether there\u0027s anything we can do on the infra side to better support architecture-variant tests without ballooning the managed component build times.",
                                           "updatedAt":  "2023-03-27T20:28:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5YkJ_a",
                                           "createdAt":  "2023-03-27T21:15:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kunalspathak",
                                           "body":  "\u003e at that time was to create platform variants of such tests, see here for instance:\r\n\r\nSo in this example, when the `sizeof32_Target_64Bit_and_arm_il_d.ilproj` is build, it will get `TargetArchitecture=x64`. Could you explain when is `CLRTestTargetUnsupported` picked up? Is it during build time or something that wrapper script determines if shouldn\u0027t execute? If it was build time, then clearly, it would never match `x86` and `CLRTestTargetUnsupported` would always be `false` for that project.",
                                           "updatedAt":  "2023-03-27T21:15:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5YkPLK",
                                           "createdAt":  "2023-03-27T21:37:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "IIRC, \u003ccode\u003eCLRTestTargetUnsupported\u003c/code\u003e gets used when building the test execution scripts at the beginning of the (already platform-aware) test run job (in particular I believe it\u0027s happening as part of injecting the prebuilt native test artifacts to test output folders); in that build step we hit the line\r\n\r\nhttps://github.com/dotnet/runtime/blob/ed3721b092e395ac3576c2d93f4134650a44dc08/src/tests/Directory.Build.targets#L98\r\n\r\nand subsequently skip generating the execution script. ",
                                           "updatedAt":  "2023-03-27T21:37:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5YkPvX",
                                           "createdAt":  "2023-03-27T21:40:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC4p5MQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "trylek",
                                                                               "createdAt":  "2023-03-27T21:50:55Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "kunalspathak",
                                           "body":  "So clearly `TargetArchitecture` is used for both build-time (doesn\u0027t work as expected) and execution-time (works as expected) and we should refrain from using `TargetArchitecture` during build-time is what I understand.",
                                           "updatedAt":  "2023-03-27T21:40:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5YkSg2",
                                           "createdAt":  "2023-03-27T21:53:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "To be more precise, we cannot use \u003ccode\u003eTargetArchitecture\u003c/code\u003e to directly conditionally affect building of the managed csproj / ilproj test project. Having said that, it\u0027s perfectly legal to use the property in a \u003ccode\u003eCondition\u003c/code\u003e clause on \u003ccode\u003eCLRTestTargetUnsupported\u003c/code\u003e that is honored later, when the exact targeting platform, build and execution model is known.",
                                           "updatedAt":  "2023-03-27T21:53:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5YkT8D",
                                           "createdAt":  "2023-03-27T21:59:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "(Technically speaking \u003ccode\u003eCLRTestTargetUnsupported\u003c/code\u003e and a host of other properties do get defined and evaluated even at managed component build time but we\u0027re trying to make sure their potentially erroneous values are ignored, to a certain extent this is driven by the special property \u003ccode\u003eBuildAllProjects\u003c/code\u003e that says exactly that - Roslyn everything no matter whether it\u0027s targeting the current platform.)",
                                           "updatedAt":  "2023-03-27T21:59:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5YkZGa",
                                           "createdAt":  "2023-03-27T22:18:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "This situation is quite confusing and needs to be better documented, hence why I suggested https://github.com/dotnet/runtime/blob/main/docs/workflow/ci/disabling-tests.md needs to be updated. In particular, when I wrote that I gave an example of `\u003cGCStressIncompatible Condition=\"\u0027$(TargetArchitecture)\u0027 == \u0027arm64\u0027 ...` which I presume is ok because the GCStressIncompatible property is used when generating the wrapper batch scripts in the platform-specific case. But I did write `(REVIEW: I\u0027m not clear which conditions are allowed, and respected.)`.",
                                           "updatedAt":  "2023-03-27T22:18:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5YkZ0H",
                                           "createdAt":  "2023-03-27T22:21:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "I agree we need to improve the related documentation but as a general rule \u003ccode\u003e*Unsupported\u003c/code\u003e / \u003ccode\u003e*Incompatible\u003c/code\u003e with conditions based on OS / architecture and other build / execution mode details are the way to go and still fully supported.",
                                           "updatedAt":  "2023-03-27T22:21:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Ykc0M",
                                           "createdAt":  "2023-03-27T22:34:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "For merged tests that use the xunit attribute-based `[Fact]` system, aren\u0027t there target platform exclusion mechanisms? E.g., I see:\r\n\r\n```\r\n[ConditionalTheory(typeof(PlatformDetection), nameof(PlatformDetection.IsNotArm64Process))]\r\n```\r\nin the libraries.",
                                           "updatedAt":  "2023-03-27T22:34:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5YkeFG",
                                           "createdAt":  "2023-03-27T22:40:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "Yes, we can use those same mechanisms as the libraries tests. We just need to add the `PlatformDetection` members to the class we have in `CoreCLRTestLibrary` (we can\u0027t use the libraries one as of now because of some weird dependency issues IIRC).",
                                           "updatedAt":  "2023-03-27T22:40:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Yke3a",
                                           "createdAt":  "2023-03-27T22:45:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "I guess some of the appropriate guidance is already in https://github.com/dotnet/runtime/blob/main/docs/workflow/testing/coreclr/test-configuration.md. Maybe it should be expanded to address the confusion seen here. (And maybe https://github.com/dotnet/runtime/blob/main/docs/workflow/ci/disabling-tests.md should link to it).\r\n",
                                           "updatedAt":  "2023-03-27T22:45:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5YkfT2",
                                           "createdAt":  "2023-03-27T22:47:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "IIRC, while library tests have means to express conditional test cases, they\u0027re less often affected by architecture and by execution mode. For instance, I don\u0027t recall a way to mark a library test GC stress-incompatible, perhaps related to the fact that there\u0027s no such thing as GC stress library testing.",
                                           "updatedAt":  "2023-03-27T22:47:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5YkgD-",
                                           "createdAt":  "2023-03-27T22:52:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tannergooding",
                                           "body":  "Copy pasting from https://github.com/dotnet/runtime/pull/83948#issuecomment-1485962216, as I realized this might be a better place to have the discussion.\r\n\r\nThe consideration here is that we have a lot of hardware intrinsic tests. All tests \"can\" run on any machine. However, the test pattern on mismatched hardware is validation that a PlatformNotSupportedException is thrown and this isn\u0027t important coverage to run \"all the time\".\r\n\r\nTherefore, for Pri0 we want to only run the tests that are \"possible supported\" by the underlying hardware. However, for Pri1 we want to run \"everything\", regardless of target architecture. \r\n\r\nSo, for Pri0 on Arm64 we want to run the https://github.com/dotnet/runtime/tree/main/src/tests/JIT/HardwareIntrinsics/Arm tests. But we don\u0027t want to run the https://github.com/dotnet/runtime/tree/main/src/tests/JIT/HardwareIntrinsics/X86 tests. We want to run both for Pri1.\r\n\r\nInversely for Pri0 on x86 Windows and x64 Windows/Linux/MacOS we want to run https://github.com/dotnet/runtime/tree/main/src/tests/JIT/HardwareIntrinsics/X86 but don\u0027t want to run https://github.com/dotnet/runtime/tree/main/src/tests/JIT/HardwareIntrinsics/Arm. We again want to run both sets for Pri1.\r\n\r\nGiven this, is there a setup that would allow this to be achieved?",
                                           "updatedAt":  "2023-03-27T22:52:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5YkgX5",
                                           "createdAt":  "2023-03-27T22:54:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC4qFzw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "trylek",
                                                                               "createdAt":  "2023-03-27T23:07:42Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkoritzinsky",
                                                                               "createdAt":  "2023-03-27T23:19:46Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "\u003e I don\u0027t recall a way to mark a library test GC stress-incompatible\r\n\r\nActually, you can do that with:\r\n\r\n```\r\n[SkipOnCoreClr(\"https://github.com/dotnet/runtime/issues/xxxx\", RuntimeTestModes.AnyGCStress)]\r\n```\r\n\r\n\u003e there\u0027s no such thing as GC stress library testing.\r\n\r\nI created a libraries GCStress pipeline a long time ago but it was too noisy and I didn\u0027t have the time or energy to fix all the problems (mostly timeouts) or add all the appropriate GCStressIncompatible annotations.",
                                           "updatedAt":  "2023-03-27T22:54:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Ykhsl",
                                           "createdAt":  "2023-03-27T23:00:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "Thanks @BruceForstall for pointing that out, if at some point we decide to revive that, it would be definitely ideal to end up with the same annotations for both library and runtime tests. For @tannergooding\u0027s comment, I would expect that this should be achievable by means of something like\r\n\r\n\u003cpre\u003e\r\n\u0026lt;CLRTestTargetUnsupported Condition=\"\u0027$(TargetArchitecture)\u0027 != \u0027x86\u0027 and \u0027$(CLRTestPriorityToBuild)\u0027 == \u00270\u0027\"\u0026gt;\r\n\u003c/pre\u003e\r\n\r\nPlease let me know if I missed your point.\r\n\r\nThanks\r\n\r\nTomas",
                                           "updatedAt":  "2023-03-27T23:01:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5YkisH",
                                           "createdAt":  "2023-03-27T23:04:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "Having said that, I doubt any test project contains this clause today, it can easily be the case that something\u0027s broken in the scripts so that they don\u0027t fully support that, all I\u0027m saying is that I believe today test build script structure is such that the conditional clause I mentioned should be either fully functional already or fixable without excessive effort.",
                                           "updatedAt":  "2023-03-27T23:04:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5YkkaQ",
                                           "createdAt":  "2023-03-27T23:11:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "While trivial, it might be also worth noting that this is only important for tests marked as Pri0, for Pri1 tests the only action needed is getting rid of the \u003ccode\u003eCLRTestTargetUnsupported\u003c/code\u003e property in the test build script altogether.",
                                           "updatedAt":  "2023-03-27T23:11:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Yk-e9",
                                           "createdAt":  "2023-03-28T01:45:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kunalspathak",
                                           "body":  "\u003e\r\n\u003e \u003cCLRTestTargetUnsupported Condition=\"\u0027$(TargetArchitecture)\u0027 != \u0027x86\u0027 and \u0027$(CLRTestPriorityToBuild)\u0027 == \u00270\u0027\"\u003e\r\n\u003e\r\n\r\nPerhaps that can be added in AdvSimd projects in that case. But the way they are included in HardwareIntrinsics_r.csproj, I am not sure if that works. I will try it out.\r\n\r\nhttps://github.com/dotnet/runtime/blob/2ae682e0bfcf9720adb14c3d9eb10f79f6a8e18d/src/tests/JIT/HardwareIntrinsics/HardwareIntrinsics_r.csproj#L17",
                                           "updatedAt":  "2023-03-28T01:45:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5aPlpH",
                                           "createdAt":  "2023-04-19T02:12:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "markples",
                                           "body":  "I\u0027ve been trying to understand everything going on in this discussion and various PRs (#76642, #84948, #84959) and will try to collect that information here.  Things are very complicated because we have multiple runs of msbuild (native, managed, legacy test wrappers), multiple wrappers (legacy vs the new merged wrappers), and multiple ways of specifying conditions (issues.targets, *Incompatible, *Unsupported, various C# attributes).  Some of these are moving targets.  I\u0027ve been focusing on the mechanics of merged tests which has many other constraints (like on duplicate project names), and I\u0027m trying to remove some of the complications and then document where we end up, but that effort is going to stop far short of clearing up all of the confusion across the testing stack.\r\n\r\nThe conceptual change with the merged wrappers is that they are a managed step and therefore occur during that time - specifically the AnyOS, AnyCPU, pri-0 job during CI (\"runtime\").  Test priority should be constant and honored (only pri-0 across CI).  Please let me know if you are not seeing that.  I believe that #76642 was incorrect because it set CLRTestPriority in a few Directory.Build.targets -after- importing the parent Directory.Build.targets which reads that value.\r\n\r\nCLRTestTargetUnsupported and *Incompatible are implemented a bit differently but end up having the same result.  I believe (could use verification) that the per-test .cmd/.sh files are not built alongside the managed test components but instead are created during the test legs.  At that point, CLRTestTargetUnsupported has a target-specific value.  However, the script wrappers are only generated for non-merged-tests and RequiresProcessIsolation merged-tests (normal merged tests just invoke the managed code directly).  Thus, for non-merged tests, the script isn\u0027t generated, and we see this in the test log:\r\n\r\n```\r\n19:05:30.500 Running test: JIT/Regression/CLR-x86-JIT/V1-M12-Beta2/b79250/b79250/b79250.cmd\r\n19:05:30.500 Passed test: JIT/Regression/CLR-x86-JIT/V1-M12-Beta2/b79250/b79250/b79250.cmd\r\n```\r\ndue to a `File.Exists` in `OutOfProcessTest.cs`.\r\n\r\n(where, when enabled, it looks like this:\r\n```\r\n19:18:00.925 Running test: JIT/Regression/CLR-x86-JIT/V1-M12-Beta2/b79250/b79250/b79250.cmd\r\n\r\nReturn code:      0\r\n...\r\n```\r\n\r\nAnd, similar to the priority issue, #84948 appeared to set CLRTestTargetUnsupported after it was processed by the parent Directory.Build.targets.\r\n\r\nFor *Incompatible, these are dependent on environment variables (like whether we are running gc stress).  The cmd/sh script checks those variables and exits early.  Again, merged tests do not go through these scripts.\r\n\r\nRequiredProcessIsolation is fine for a test here and there because having a few doesn\u0027t really impact the overall test throughput.  Unfortunately, it is not appropriate for a large group of tests (like disabling HWIntrinsics tests per-platform).\r\n\r\nIt is probably worth noting here that #84959 is probably the best way to do large-scale exclusion because it precisely does not check per-test.  For these tests that quickly just throw unsupported on off-hardware, any per-test processing is probably going to be more expensive than the tests themselves (as a quick data point - 1000 tests in a merged group that throw/catch an exception take 14 seconds on my old dev box, and half of that time appears to be compiling/executing the methods that call the test methods themselves).  However, there are some additional benefits to not executing them at all (that 0 second running/passed pair above is just confusing and clutters the test results/counts).\r\n\r\nI can think of some theoretical ways to make the test conditions mimic the old behavior more closely.\r\n1. Restructure the wrapper generator for OutOfProcessTests to check for the existence of the cmd/sh -before- printing Running/Passed.  This only helps RequiresProcessIsolation tests, however.\r\n2. If we could generate per-test-run merged wrappers, then they could be customized based on msbuild attributes such as CLRTestTargetUnsupported.  This is less efficient than excluding entire groups at once, but probably only at a cost similar to what I saw above - 14s/1000 tests.  However, I don\u0027t know how feasible this is in our msbuild test system.  It would need to avoid trying to build each test or we\u0027d spend all of our time in msbuild, ruining the point of the shared AnyOS/etc step.\r\n3. Implement these attributes in the merged test wrappers.  This reopens the design question of whether we should even do so or whether we should be using issues.targets, xunit-style attributes, etc., such as the one Bruce showed above.  It would also require changes to CLRTestTargetUnsupported because we\u0027d need the actual expression in the wrapper generator, not the produced value, so we\u0027d have to rewrite that property.  The *Incompatible properties are mostly just set to true for tests, though some of those also have conditionals which would need to be propagated into the wrapper generator.\r\n\r\nTo be honest, I\u0027m not a big fan of any of these, except maybe the first once but it doesn\u0027t help with HardwareIntrinsics.\r\n\r\nI will also mention that there\u0027s a somewhat related issue.  The merged test groups today are sized to not be too large (for various reasons) under pri-1.  However, this often makes them very small pri-0 groups, which then means we\u0027re spending more time setting up helix instances than running tests.  I\u0027ve been starting to think about generating priority-specific groups to handle this.  However, this doesn\u0027t run into any of the Unsupported/Incompatible issues, so the only real connection here is that it also has the same idea of conditional merged groups.",
                                           "updatedAt":  "2023-04-19T02:12:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5aPvJx",
                                           "createdAt":  "2023-04-19T03:15:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tannergooding",
                                           "body":  "Thanks for the writeup @markples, I definitely agree that the overall process is a bit confusing and not well-documented today. I think your explanation makes sense and matches what I ended up finding out to be happening in practice across the PRs that I\u0027ve put up trying to improve things now that the AVX-512 tests are being introduced.\r\n\r\nThere is also another factor that isn\u0027t well covered which is the stress `striping` (`NumberOfStripesToUseInStress`). Prior to the recent set of changes, this was set to `20`. We tried to up that to `32` with the introduction of the `Avx512` tests to try and counter-act some of the timeouts but had been seeing timeouts in the regular runs as well, which don\u0027t have a striping mechanic, and that led to me deciding to split the tests so we could actually filter.\r\n\r\nThe breakdown today is roughly:\r\n* Arm - 2390 generated tests\r\n* General - 2589 generated tests\r\n* X86 - 504 generated tests\r\n* X86_Avx - 500 generated tests\r\n* X86_Avx512 - 200 generated tests (more to be added)\r\n\r\nSo, we originally had around 6000 total tests in one wrapper, prior to the Avx512 introduction, and were already fairly near the timeout limits.\r\n\r\nI also have done some work to minimize the total amount of code each test runs and most recently have https://github.com/dotnet/runtime/pull/85026 up now, which removes the rest of the \"unnecessary\" scenarios and tries to readjust the striping to be more well divided based on the new project setup, so we have around 2 stripes per 600 tests still.\r\n\r\nOf course, not all tests are created equal and some take more or less time than others. Depending on the machine and other factors, we still seem possible to be hitting some timeouts, so more tweaking may be necessary.",
                                           "updatedAt":  "2023-04-19T03:16:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5aRV_w",
                                           "createdAt":  "2023-04-19T10:25:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC6LOLw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "tannergooding",
                                                                               "createdAt":  "2023-04-19T11:42:48Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "markples",
                                           "body":  "Are you talking about https://dev.azure.com/dnceng-public/public/_build?definitionId=235?  The rest of this comment assumes so:\r\n\r\nI don\u0027t think the logs there indicate a timeout due to too many tests.  Looking at the last [completed one](https://dev.azure.com/dnceng-public/public/_build/results?buildId=244008\u0026view=logs\u0026j=bc936583-455b-59a6-ba6a-b6595d929238\u0026t=b93c0282-5af1-5880-fe4a-b9ec04a10b26) - [log](https://helixre107v0xdcypoyl9e7f.blob.core.windows.net/dotnet-runtime-refs-pull-85030-merge-60981141c95e46ebb8/HardwareIntrinsics_X86_Avx512_ro/1/console.8a8d2f0b.log?helixlogtype=result), I see\r\n\r\n```\r\nBEGIN EXECUTION\r\n\"C:\\h\\w\\9FD708F3\\p\\watchdog.exe\" 119 \"C:\\h\\w\\9FD708F3\\p\\corerun.exe\" -p \"System.Reflection.Metadata.MetadataUpdater.IsSupported=false\" -p \"System.Runtime.Serialization.EnableUnsafeBinaryFormatterSerialization=true\"  HardwareIntrinsics_X86_Avx512_ro.dll \r\n06:17:03.712 Running test: _Avx512BW_handwritten_ro::IntelHardwareIntrinsicTest._Avx512BW.Program.Store()\r\n...\r\n06:17:13.249 Passed test: _Avx512DQ_ro::JIT.HardwareIntrinsics.X86._Avx512DQ.Program.XorSingle()\r\n06:17:13.249 Running test: _Avx512DQ_VL_Vector128_ro::JIT.HardwareIntrinsics.X86._Avx512DQ_VL_Vector128.Program.MultiplyLowInt64()\r\nBeginning scenario: RunBasicScenario_UnsafeRead\r\nBeginning scenario: RunBasicScenario_Load\r\nBeginning scenario: RunBasicScenario_LoadAligned\r\nBeginning scenario: RunReflectionScenario_UnsafeRead\r\nApp Exit Code: 259\r\nExpected: 100\r\nActual: 259\r\nEND EXECUTION - FAILED\r\nFAILED\r\n[XUnitLogChecker]: Could not read the file JIT\\HardwareIntrinsics\\HardwareIntrinsics_X86_Avx512_ro\\HardwareIntrinsics_X86_Avx512_ro.testStats.csv. Retrying...\r\n[XUnitLogChecker]: Could not read the file JIT\\HardwareIntrinsics\\HardwareIntrinsics_X86_Avx512_ro\\HardwareIntrinsics_X86_Avx512_ro.testStats.csv. Retrying...\r\n...\r\n[\u0027HardwareIntrinsics_X86_Avx512_ro\u0027 END OF WORK ITEM LOG: Command timed out, and was killed]\r\n```\r\nThe test scenario that fails is only starting 10 seconds after the start, and every log I\u0027ve looked at fails in that same test.  I can\u0027t tell if the test is taking a long time or if it terminates in a strange way and then the LogChecker/etc. afterwards does so.\r\n\r\nSeparately, I don\u0027t think `NumberOfStripesToUseInStress` is doing anything for you here.  In the log, see `set TEST_HARNESS_STRIPE_TO_EXECUTE=.0.1`, which means \"#0 of 1\".  I believe the logic is limited to GCStress today, which is much slower.  We mostly limit the merged groups to a few hundred tests (for other reasons too - like limited the collateral damage when a test takes out an entire run), and even there we stripe some of the groups.  But, as you pointed out, tests vary a lot of running time, and GCStress seems to degrade heavily over time.  It\u0027s possible that you don\u0027t need striping for HardwareIntrinsics, but I haven\u0027t seen the timeout history that you have so perhaps I\u0027m completely off there.",
                                           "updatedAt":  "2023-04-19T10:25:39Z"
                                       }
                                   ],
                         "totalCount":  25
                     },
        "title":  "Usage of TargetArchitecture in managed coreclr test ",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/84182",
        "createdAt":  "2023-03-31T18:56:48Z",
        "number":  84182,
        "author":  "markples",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-14T16:43:22Z",
        "body":  "The main example here is that we remove the OutputType==Exe setting.  What happens if a new test is added with this setting?",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOXJzD0w==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5Y9QcU",
                                           "createdAt":  "2023-03-31T18:58:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThe main example here is that we remove the OutputType==Exe setting.  What happens if a new test is added with this setting?\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003emarkples\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003emarkples\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`, `needs-area-label`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-03-31T18:58:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ZAxK8",
                                           "createdAt":  "2023-04-02T15:34:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThe main example here is that we remove the OutputType==Exe setting.  What happens if a new test is added with this setting?\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003emarkples\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003emarkples\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`test-enhancement`, `area-Infrastructure-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-04-02T15:34:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ZIngG",
                                           "createdAt":  "2023-04-04T06:41:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "markples",
                                           "body":  "Such tests appear to be built but not run during CI, etc.",
                                           "updatedAt":  "2023-04-04T06:41:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5cnMPT",
                                           "createdAt":  "2023-05-18T23:27:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "markples",
                                           "body":  "This needs to be strengthened.  I saw an incorrect test that made it past the check in #84284 though can\u0027t remember it at the moment.  I plan an audit of new tests to see what\u0027s been happening and will see it then.",
                                           "updatedAt":  "2023-05-18T23:27:51Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Merged test groups - check behavior when a test with incorrect settings is added to a merged directory",
        "labels":  [
                       "test-enhancement",
                       "area-Infrastructure-coreclr",
                       "Priority:3"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/89423",
        "createdAt":  "2023-07-25T09:09:34Z",
        "number":  89423,
        "author":  "andriipatsula",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-08T18:17:37Z",
        "body":  "In multiple artifacts produced by build of the runtime repo, such as [runtime.linux-arm.Microsoft.NETCore.ILDAsm](https://dnceng.visualstudio.com/public/_artifacts/feed/darc-pub-sym-dotnet-runtime-4bc0fe95/NuGet/runtime.linux-arm.Microsoft.NETCore.ILDAsm/overview/7.0.10-servicing.23363.10), there are empty PDBs like `runtime.linux-arm.Microsoft.NETCore.ILDAsm\\runtimes\\linux-arm\\native\\_.pdb`.\r\nI found the same issue in packages (the list is not complete):\r\n* runtime.linux-arm.Microsoft.NETCore.DotNetAppHost\r\n* runtime.linux-arm.Microsoft.NETCore.DotNetHost\r\n* runtime.linux-arm.Microsoft.NETCore.DotNetHostPolicy\r\n* runtime.linux-arm.Microsoft.NETCore.DotNetHostResolver\r\n* runtime.linux-arm.Microsoft.NETCore.ILAsm\r\n\r\nIt looks like the `_.pdb` file is just a placeholder and for some reason is shipped with the product.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOYlfrcg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5iV-ty",
                                           "createdAt":  "2023-07-25T14:15:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nIn multiple artifacts produced by build of the runtime repo, such as [runtime.linux-arm.Microsoft.NETCore.ILDAsm](https://dnceng.visualstudio.com/public/_artifacts/feed/darc-pub-sym-dotnet-runtime-4bc0fe95/NuGet/runtime.linux-arm.Microsoft.NETCore.ILDAsm/overview/7.0.10-servicing.23363.10), there are empty PDBs like `runtime.linux-arm.Microsoft.NETCore.ILDAsm\\runtimes\\linux-arm\\native\\_.pdb`.\r\nI found the same issue in packages (the list is not complete):\r\n* runtime.linux-arm.Microsoft.NETCore.DotNetAppHost\r\n* runtime.linux-arm.Microsoft.NETCore.DotNetHost\r\n* runtime.linux-arm.Microsoft.NETCore.DotNetHostPolicy\r\n* runtime.linux-arm.Microsoft.NETCore.DotNetHostResolver\r\n* runtime.linux-arm.Microsoft.NETCore.ILAsm\r\n\r\nIt looks like the `_.pdb` file is just a placeholder and for some reason is shipped with the product.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eandriipatsula\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`, `untriaged`, `needs-area-label`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-07-25T14:15:06Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Empty `_.pdb` files are included in the artifacts produced by build of the runtime repo",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/90782",
        "createdAt":  "2023-08-18T05:17:07Z",
        "number":  90782,
        "author":  "harveylo",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC5GTTQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Wedgetable",
                                            "createdAt":  "2024-02-08T23:06:14Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "nick-beer",
                                            "createdAt":  "2024-02-18T19:00:39Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "spanglerco",
                                            "createdAt":  "2024-05-22T18:15:30Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "marcantonio",
                                            "createdAt":  "2024-07-03T13:36:47Z"
                                        }
                                    ],
                          "totalCount":  4
                      },
        "updatedAt":  "2024-07-02T12:01:07Z",
        "body":  "I encountered a strange issue when building the runtime using the command` .\\build clr -c debug`. The error message states that a file is missing, similar to the issue mentioned in [this link](https://github.com/dotnet/runtime/issues/53930):\r\n\r\n`error MSB3030: Could not copy the file \"C:\\repos\\runtime\\artifacts\\bin\\coreclr\\windows.x64.Release\\jitinterface_x64.dll\" because it was not found.`\r\nAfter investigating, I discovered that this issue was caused by the following command in the `src\\coreclr\\build-runtime.cmd` file:\r\n\r\n`(py -3 %_C% || py -2 %_C% || python3 %_C% || python2 %_C% || python %_C%) \u003e \"%TEMP%\\pythonlocation.txt\" 2\u003e NUL`\r\nThe problem arises because I am using pyenv-win to manage my Python environment, and it redirects my Python calls to a `.bat` file, causing the build script to terminate prematurely and resulting in the missing file exception.\r\n\r\nTo resolve this issue, I uninstalled pyenv-win and installed a Windows release of Python. After making these changes, the build process proceeded normally.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOZFYeHw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5kVh4f",
                                           "createdAt":  "2023-08-18T05:17:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nI encountered a strange issue when building the runtime using the command` .\\build clr -c debug`. The error message states that a file is missing, similar to the issue mentioned in [this link](https://github.com/dotnet/runtime/issues/53930):\r\n\r\n`error MSB3030: Could not copy the file \"C:\\repos\\runtime\\artifacts\\bin\\coreclr\\windows.x64.Release\\jitinterface_x64.dll\" because it was not found.`\r\nAfter investigating, I discovered that this issue was caused by the following command in the `src\\coreclr\\build-runtime.cmd` file:\r\n\r\n`(py -3 %_C% || py -2 %_C% || python3 %_C% || python2 %_C% || python %_C%) \u003e \"%TEMP%\\pythonlocation.txt\" 2\u003e NUL`\r\nThe problem arises because I am using pyenv-win to manage my Python environment, and it redirects my Python calls to a `.bat` file, causing the build script to terminate prematurely and resulting in the missing file exception.\r\n\r\nTo resolve this issue, I uninstalled pyenv-win and installed a Windows release of Python. After making these changes, the build process proceeded normally.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eharveylo\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-08-18T05:17:14Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "build.cmd is not compatible with pyenv-win",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/91564",
        "createdAt":  "2023-09-04T21:33:26Z",
        "number":  91564,
        "author":  "trylek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-25T16:08:46Z",
        "body":  "Today, CoreCLR managed test component build produces a large number of warnings of the following type:\r\n\r\n\u003cpre\u003e\r\nD:\\git\\runtime\\.dotnet\\sdk\\8.0.100-rc.1.23415.11\\Microsoft.Common.CurrentVersion.targets(2365,5): warning MSB3246: Resolved file has a bad image, no metadata, or is otherwise inaccessible. PE image does not have metadata. PE image does not have metadata. [D:\\git\\runtime\\src\\tests\\CoreMangLib\\system\\type\\TypeEquals2.csproj] [D:\\git\\runtime\\src\\tests\\build.proj]\r\n\u003c/pre\u003e\r\n\r\nWe should either fix the real problem if there\u0027s any or otherwise remove the spurious message that\u0027s just spamming output logs and confusing developers.\r\n\r\nThanks\r\n\r\nTomas\r\n\r\n/cc @dotnet/runtime-infrastructure @jkoritzinsky ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOZcRSgA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5lqyGn",
                                           "createdAt":  "2023-09-04T21:33:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nToday, CoreCLR managed test component build produces a large number of warnings of the following type:\r\n\r\n\u003cpre\u003e\r\nD:\\git\\runtime\\.dotnet\\sdk\\8.0.100-rc.1.23415.11\\Microsoft.Common.CurrentVersion.targets(2365,5): warning MSB3246: Resolved file has a bad image, no metadata, or is otherwise inaccessible. PE image does not have metadata. PE image does not have metadata. [D:\\git\\runtime\\src\\tests\\CoreMangLib\\system\\type\\TypeEquals2.csproj] [D:\\git\\runtime\\src\\tests\\build.proj]\r\n\u003c/pre\u003e\r\n\r\nWe should either fix the real problem if there\u0027s any or otherwise remove the spurious message that\u0027s just spamming output logs and confusing developers.\r\n\r\nThanks\r\n\r\nTomas\r\n\r\n/cc @dotnet/runtime-infrastructure @jkoritzinsky \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003etrylek\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-09-04T21:33:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5lxFKA",
                                           "createdAt":  "2023-09-05T22:02:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "The warning also reproduces when building a single test using `dotnet build`. For example, for `src\\tests\\baseservices\\exceptions\\simple\\ArrayInit.csproj`, it generates the warning four times - twice for the ArrayInit.csproj and twice for `tests\\baseservices\\exceptions\\simple\\VT.ilproj`, which is its dependency.\r\nLooking at binlog from that build, it seems that the files it complains about are `artifacts\\TargetingPack\\dia2lib.dll` and `artifacts\\bin\\ref\\net8.0\\msquic.dll`. Both of these are native files and both of them are in the `Assemblies` parameter of the `ResolveAssemblyReference` task. I have no idea what puts them there though, my msbuild knowledge is very limited.",
                                           "updatedAt":  "2023-09-05T22:02:40Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "CoreCLR test infra: get rid of spurious warning \"Resolved file has a bad image, no metadata, or is otherwise inaccessible\"",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/91975",
        "createdAt":  "2023-09-13T00:55:59Z",
        "number":  91975,
        "author":  "BruceForstall",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-02T15:51:56Z",
        "body":  "Looks like in some cases there is a failure to run llvm-symbolizer after a crash.\r\n\r\nhttps://dev.azure.com/dnceng-public/public/_build/results?buildId=403691\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=8742492\u0026resultId=120074\u0026paneView=debug\r\n\r\n```\r\n    GC/API/Frozen/Frozen/Frozen.sh [FAIL]\r\n      apply_reg_state: ip and cfa unchanged; stopping here (ip=0xffea41ab8154)\r\n      waitpid() returned successfully (wstatus 00000000) WEXITSTATUS 0 WTERMSIG 0\r\n      /root/helix/work/workitem/e/GC/API/Frozen/Frozen/Frozen.sh: line 490:  6357 Aborted                 (core dumped) $LAUNCHER $ExePath \"${CLRTestExecutionArguments[@]}\"\r\n      \r\n      Return code:      1\r\n      Raw output file:      /root/helix/work/workitem/uploads/Reports/GC.API/Frozen/Frozen/Frozen.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n      /root/helix/work/correlation/corerun -p System.Reflection.Metadata.MetadataUpdater.IsSupported=false -p System.Runtime.Serialization.EnableUnsafeBinaryFormatterSerialization=true Frozen.dll \u0027\u0027\r\n      [createdump] Gathering state for process 6357 corerun\r\n      [createdump] Crashing thread 18ea signal 5 (0005)\r\n      [createdump] Writing crash report to file /home/helixbot/dotnetbuild/dumps/coredump.6357.dmp.crashreport.json\r\n      [createdump] Crash report successfully written\r\n      [createdump] Writing minidump with heap to file /home/helixbot/dotnetbuild/dumps/coredump.6357.dmp\r\n      [createdump] Written 713596928 bytes (174218 pages) to core file\r\n      [createdump] Target process is alive\r\n      [createdump] Dump successfully written in 1427ms\r\n      Expected: 100\r\n      Actual: 134\r\n      END EXECUTION - FAILED\r\n      Test failed. Trying to see if dump file was created in /home/helixbot/dotnetbuild/dumps since 9/12/2023 9:32:39 PM\r\n      Processing /home/helixbot/dotnetbuild/dumps/coredump.6357.dmp.crashreport.json\r\n      Printing stacktrace from \u0027/home/helixbot/dotnetbuild/dumps/coredump.6357.dmp.crashreport.json\u0027\r\n      Invoking llvm-symbolizer --pretty-print\r\n      Errors while running llvm-symbolizer --pretty-print\r\n      System.ComponentModel.Win32Exception (2): An error occurred trying to start process \u0027llvm-symbolizer\u0027 with working directory \u0027/root/helix/work/workitem/e\u0027. No such file or directory\r\n         at System.Diagnostics.Process.ForkAndExecProcess(ProcessStartInfo startInfo, String resolvedFilename, String[] argv, String[] envp, String cwd, Boolean setCredentials, UInt32 userId, UInt32 groupId, UInt32[] groups, Int32\u0026 stdinFd, Int32\u0026 stdoutFd, Int32\u0026 stderrFd, Boolean usesTerminal, Boolean throwOnNoExec)\r\n         at System.Diagnostics.Process.StartCore(ProcessStartInfo startInfo)\r\n         at System.Diagnostics.Process.Start()\r\n         at CoreclrTestLib.CoreclrTestWrapperLib.TryPrintStackTraceFromCrashReport(String crashReportJsonFile, TextWriter outputWriter)\r\n      Test Harness Exitcode is : 1\r\n\r\n```\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": \"An error occurred trying to start process \u0027llvm-symbolizer\u0027 with working directory\",\r\n  \"BuildRetry\": false,\r\n  \"ErrorPattern\": \"\",\r\n  \"ExcludeConsoleLog\": true\r\n}\r\n```\r\n\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=462152\r\n**Error message validated:** `An error occurred trying to start process \u0027llvm-symbolizer\u0027 with working directory`\r\n**Result validation: :x:** Known issue did not match with the provided build.\r\n**Validation performed at:** 11/7/2023 11:07:49 PM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n### Report\r\n\r\n|Build|Definition|Test|Pull Request|\r\n|---|---|---|---|\r\n|[521052](https://dev.azure.com/dnceng-public/public/_build/results?buildId=521052)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=521052\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12243028\u0026resultId=116652)||\r\n|[520848](https://dev.azure.com/dnceng-public/public/_build/results?buildId=520848)|dotnet/runtime|[JIT/PGO/ProfileCastClassAndIsInst/ProfileCastClassAndIsInst/ProfileCastClassAndIsInst.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=520848\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12236834\u0026resultId=112511)|dotnet/runtime#96650|\r\n|[519755](https://dev.azure.com/dnceng-public/public/_build/results?buildId=519755)|dotnet/runtime|[GC/API/GC/Collect_Aggressive_MultipleParameters/Collect_Aggressive_MultipleParameters.sh](https://dev.azure.com/dnceng-public/public/_build/results?buildId=519755\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12212372\u0026resultId=105726)|dotnet/runtime#96650|\r\n|[519442](https://dev.azure.com/dnceng-public/public/_build/results?buildId=519442)|dotnet/runtime|[tracing/eventpipe/eventsvalidation/ExceptionThrown_V1/ExceptionThrown_V1.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=519442\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12203574\u0026resultId=121524)|dotnet/runtime#96650|\r\n|[519438](https://dev.azure.com/dnceng-public/public/_build/results?buildId=519438)|dotnet/runtime|[tracing/eventpipe/simpleruntimeeventvalidation/simpleruntimeeventvalidation/simpleruntimeeventvalidation.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=519438\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12202282\u0026resultId=114003)|dotnet/runtime#96650|\r\n|[518977](https://dev.azure.com/dnceng-public/public/_build/results?buildId=518977)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=518977\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12190750\u0026resultId=119268)||\r\n|[518680](https://dev.azure.com/dnceng-public/public/_build/results?buildId=518680)|dotnet/runtime|[tracing/eventpipe/simpleruntimeeventvalidation/simpleruntimeeventvalidation/simpleruntimeeventvalidation.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=518680\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12187096\u0026resultId=111039)|dotnet/runtime#96650|\r\n|[518683](https://dev.azure.com/dnceng-public/public/_build/results?buildId=518683)|dotnet/runtime|[Loader/classloader/TSAmbiguities/CollapsedInterfaces/HelloWorld/HelloWorld.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=518683\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12185202\u0026resultId=119355)|dotnet/runtime#96650|\r\n|[518588](https://dev.azure.com/dnceng-public/public/_build/results?buildId=518588)|dotnet/runtime|[tracing/eventpipe/eventsvalidation/ExceptionThrown_V1/ExceptionThrown_V1.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=518588\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12182818\u0026resultId=120069)|dotnet/runtime#96645|\r\n|[518585](https://dev.azure.com/dnceng-public/public/_build/results?buildId=518585)|dotnet/runtime|[tracing/eventpipe/simpleruntimeeventvalidation/simpleruntimeeventvalidation/simpleruntimeeventvalidation.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=518585\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12182298\u0026resultId=113638)|dotnet/runtime#96645|\r\n|[518363](https://dev.azure.com/dnceng-public/public/_build/results?buildId=518363)|dotnet/runtime|[readytorun/coreroot_determinism/coreroot_determinism/coreroot_determinism.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=518363\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12176296\u0026resultId=102076)|dotnet/runtime#96609|\r\n|[518093](https://dev.azure.com/dnceng-public/public/_build/results?buildId=518093)|dotnet/runtime|[profiler/gc/gcallocate/gcallocate.sh](https://dev.azure.com/dnceng-public/public/_build/results?buildId=518093\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12166708\u0026resultId=100015)|dotnet/runtime#96609|\r\n|[517599](https://dev.azure.com/dnceng-public/public/_build/results?buildId=517599)|dotnet/runtime|[profiler/unittest/metadatagetdispenser/metadatagetdispenser.sh](https://dev.azure.com/dnceng-public/public/_build/results?buildId=517599\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12152178\u0026resultId=100010)|dotnet/runtime#96609|\r\n|[517524](https://dev.azure.com/dnceng-public/public/_build/results?buildId=517524)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=517524\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12149078\u0026resultId=119177)||\r\n|[517515](https://dev.azure.com/dnceng-public/public/_build/results?buildId=517515)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=517515\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12148268\u0026resultId=120187)||\r\n|[517412](https://dev.azure.com/dnceng-public/public/_build/results?buildId=517412)|dotnet/runtime|[JIT/Regression/JitBlue/GitHub_65690/GitHub_65690/GitHub_65690.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=517412\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12143562\u0026resultId=112745)||\r\n|[517359](https://dev.azure.com/dnceng-public/public/_build/results?buildId=517359)|dotnet/runtime|[ilasm/System/Runtime/CompilerServices/MethodImplOptionsTests/MethodImplOptionsTests.sh](https://dev.azure.com/dnceng-public/public/_build/results?buildId=517359\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12141326\u0026resultId=117874)||\r\n|[517145](https://dev.azure.com/dnceng-public/public/_build/results?buildId=517145)|dotnet/runtime|[JIT/Regression/JitBlue/GitHub_65690/GitHub_65690/GitHub_65690.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=517145\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12135748\u0026resultId=112081)||\r\n|[517142](https://dev.azure.com/dnceng-public/public/_build/results?buildId=517142)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=517142\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12135412\u0026resultId=113011)||\r\n|[517056](https://dev.azure.com/dnceng-public/public/_build/results?buildId=517056)|dotnet/runtime|[JIT/Regression/JitBlue/GitHub_65690/GitHub_65690/GitHub_65690.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=517056\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12132936\u0026resultId=112467)||\r\n|[517002](https://dev.azure.com/dnceng-public/public/_build/results?buildId=517002)|dotnet/runtime|[ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh](https://dev.azure.com/dnceng-public/public/_build/results?buildId=517002\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12130134\u0026resultId=117873)||\r\n|[516728](https://dev.azure.com/dnceng-public/public/_build/results?buildId=516728)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=516728\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12120686\u0026resultId=114784)||\r\n|[515884](https://dev.azure.com/dnceng-public/public/_build/results?buildId=515884)|dotnet/runtime|[Interop/SuppressGCTransition/SuppressGCTransitionNegativeTest/SuppressGCTransitionNegativeTest.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=515884\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12098946\u0026resultId=121532)|dotnet/runtime#96386|\r\n|[515837](https://dev.azure.com/dnceng-public/public/_build/results?buildId=515837)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=515837\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12097620\u0026resultId=115394)||\r\n|[514408](https://dev.azure.com/dnceng-public/public/_build/results?buildId=514408)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=514408\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12060548\u0026resultId=119119)||\r\n|[513653](https://dev.azure.com/dnceng-public/public/_build/results?buildId=513653)|dotnet/runtime|[JIT/Regression/CLR-x86-JIT/V2.0-Beta2/b441487/b441487/b441487.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=513653\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12039802\u0026resultId=113488)|dotnet/runtime#96440|\r\n|[513448](https://dev.azure.com/dnceng-public/public/_build/results?buildId=513448)|dotnet/runtime|[tracing/eventpipe/rundownvalidation/rundownvalidation/rundownvalidation.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=513448\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12033056\u0026resultId=113995)|dotnet/runtime#96440|\r\n|[513020](https://dev.azure.com/dnceng-public/public/_build/results?buildId=513020)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=513020\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12016272\u0026resultId=116441)||\r\n|[512895](https://dev.azure.com/dnceng-public/public/_build/results?buildId=512895)|dotnet/runtime|[Loader/classloader/regressions/vsw529206/vsw529206ModuleCctor/vsw529206ModuleCctor.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=512895\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12013048\u0026resultId=103577)|dotnet/runtime#96430|\r\n|[512706](https://dev.azure.com/dnceng-public/public/_build/results?buildId=512706)|dotnet/runtime|[Exceptions/UnwindFpBleedTest/UnwindFpBleedTest/UnwindFpBleedTest.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=512706\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12005580\u0026resultId=100069)|dotnet/runtime#96423|\r\n|[511926](https://dev.azure.com/dnceng-public/public/_build/results?buildId=511926)|dotnet/runtime|[Exceptions/UnwindFpBleedTest/UnwindFpBleedTest/UnwindFpBleedTest.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=511926\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11986330\u0026resultId=100032)|dotnet/runtime#96393|\r\n|[511888](https://dev.azure.com/dnceng-public/public/_build/results?buildId=511888)|dotnet/runtime|[Exceptions/UnwindFpBleedTest/UnwindFpBleedTest/UnwindFpBleedTest.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=511888\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11985130\u0026resultId=101248)||\r\n|[511886](https://dev.azure.com/dnceng-public/public/_build/results?buildId=511886)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=511886\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11985064\u0026resultId=121480)||\r\n|[511795](https://dev.azure.com/dnceng-public/public/_build/results?buildId=511795)|dotnet/runtime|[JIT/Directed/tailcall/more_tailcalls/more_tailcalls.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=511795\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11981272\u0026resultId=113485)|dotnet/runtime#96386|\r\n|[511482](https://dev.azure.com/dnceng-public/public/_build/results?buildId=511482)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=511482\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11972686\u0026resultId=119290)||\r\n|[511483](https://dev.azure.com/dnceng-public/public/_build/results?buildId=511483)|dotnet/runtime|[Exceptions/UnwindFpBleedTest/UnwindFpBleedTest/UnwindFpBleedTest.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=511483\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11972448\u0026resultId=105645)||\r\n|[511471](https://dev.azure.com/dnceng-public/public/_build/results?buildId=511471)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=511471\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11972364\u0026resultId=119636)||\r\n|[511268](https://dev.azure.com/dnceng-public/public/_build/results?buildId=511268)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=511268\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11965406\u0026resultId=120439)||\r\n|[511267](https://dev.azure.com/dnceng-public/public/_build/results?buildId=511267)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=511267\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11965072\u0026resultId=113420)||\r\n|[510899](https://dev.azure.com/dnceng-public/public/_build/results?buildId=510899)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=510899\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11953288\u0026resultId=113879)||\r\n|[510780](https://dev.azure.com/dnceng-public/public/_build/results?buildId=510780)|dotnet/runtime|[GC/API/GCHandleCollector/Count/Count.sh](https://dev.azure.com/dnceng-public/public/_build/results?buildId=510780\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11950650\u0026resultId=102239)|dotnet/runtime#96291|\r\n|[510343](https://dev.azure.com/dnceng-public/public/_build/results?buildId=510343)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=510343\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11936934\u0026resultId=110872)||\r\n|[509842](https://dev.azure.com/dnceng-public/public/_build/results?buildId=509842)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=509842\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11922896\u0026resultId=116694)||\r\n|[509358](https://dev.azure.com/dnceng-public/public/_build/results?buildId=509358)|dotnet/runtime|[baseservices/exceptions/unhandled/unhandledTester/unhandledTester.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=509358\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11906318\u0026resultId=118886)||\r\n|[509310](https://dev.azure.com/dnceng-public/public/_build/results?buildId=509310)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=509310\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11902854\u0026resultId=121450)||\r\n|[508915](https://dev.azure.com/dnceng-public/public/_build/results?buildId=508915)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=508915\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11891248\u0026resultId=115258)||\r\n|[508439](https://dev.azure.com/dnceng-public/public/_build/results?buildId=508439)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=508439\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11874490\u0026resultId=119090)||\r\n|[508423](https://dev.azure.com/dnceng-public/public/_build/results?buildId=508423)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=508423\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11874168\u0026resultId=112048)||\r\n|[508162](https://dev.azure.com/dnceng-public/public/_build/results?buildId=508162)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=508162\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11863194\u0026resultId=119183)||\r\n|[508158](https://dev.azure.com/dnceng-public/public/_build/results?buildId=508158)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=508158\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11862834\u0026resultId=121296)||\r\n|[508110](https://dev.azure.com/dnceng-public/public/_build/results?buildId=508110)|dotnet/runtime|[ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh](https://dev.azure.com/dnceng-public/public/_build/results?buildId=508110\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11860710\u0026resultId=135561)|dotnet/runtime#96291|\r\n|[507865](https://dev.azure.com/dnceng-public/public/_build/results?buildId=507865)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=507865\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11852852\u0026resultId=115801)||\r\n|[507196](https://dev.azure.com/dnceng-public/public/_build/results?buildId=507196)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=507196\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11831378\u0026resultId=120306)||\r\n|[506264](https://dev.azure.com/dnceng-public/public/_build/results?buildId=506264)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=506264\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11801638\u0026resultId=121451)||\r\n|[505938](https://dev.azure.com/dnceng-public/public/_build/results?buildId=505938)|dotnet/runtime|[profiler/eventpipe/reverse_startup/reverse_startup.sh](https://dev.azure.com/dnceng-public/public/_build/results?buildId=505938\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11791520\u0026resultId=113489)|dotnet/runtime#94250|\r\n|[505165](https://dev.azure.com/dnceng-public/public/_build/results?buildId=505165)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=505165\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11773314\u0026resultId=119371)||\r\n|[504823](https://dev.azure.com/dnceng-public/public/_build/results?buildId=504823)|dotnet/runtime|[baseservices/exceptions/unhandled/unhandledTester/unhandledTester.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=504823\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11766242\u0026resultId=113969)||\r\n|[504621](https://dev.azure.com/dnceng-public/public/_build/results?buildId=504621)|dotnet/runtime|[baseservices/exceptions/unhandled/unhandledTester/unhandledTester.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=504621\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11761668\u0026resultId=113969)|dotnet/runtime#94825|\r\n|[503981](https://dev.azure.com/dnceng-public/public/_build/results?buildId=503981)|dotnet/runtime|[JIT/Performance/CodeQuality/Bytemark/Bytemark/Bytemark.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=503981\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11759526\u0026resultId=113876)|dotnet/runtime#96150|\r\n|[503978](https://dev.azure.com/dnceng-public/public/_build/results?buildId=503978)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=503978\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11746206\u0026resultId=116320)||\r\n|[503894](https://dev.azure.com/dnceng-public/public/_build/results?buildId=503894)|dotnet/runtime|[GC/Scenarios/BinTree/thdtreelivingobj/thdtreelivingobj.sh](https://dev.azure.com/dnceng-public/public/_build/results?buildId=503894\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11744128\u0026resultId=113841)|dotnet/runtime#96150|\r\n|[502686](https://dev.azure.com/dnceng-public/public/_build/results?buildId=502686)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=502686\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11710236\u0026resultId=116368)||\r\n|[502669](https://dev.azure.com/dnceng-public/public/_build/results?buildId=502669)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=502669\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11709584\u0026resultId=117436)||\r\n|[502281](https://dev.azure.com/dnceng-public/public/_build/results?buildId=502281)|dotnet/runtime|[baseservices/exceptions/unhandled/unhandledTester/unhandledTester.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=502281\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11696346\u0026resultId=113969)||\r\n|[502264](https://dev.azure.com/dnceng-public/public/_build/results?buildId=502264)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=502264\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11695868\u0026resultId=119189)||\r\n|[502261](https://dev.azure.com/dnceng-public/public/_build/results?buildId=502261)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=502261\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11695376\u0026resultId=117550)||\r\n|[502210](https://dev.azure.com/dnceng-public/public/_build/results?buildId=502210)|dotnet/runtime|[Interop/SuppressGCTransition/SuppressGCTransitionNegativeTest/SuppressGCTransitionNegativeTest.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=502210\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11693034\u0026resultId=121498)||\r\n|[501837](https://dev.azure.com/dnceng-public/public/_build/results?buildId=501837)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=501837\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11679916\u0026resultId=118929)||\r\n|[500589](https://dev.azure.com/dnceng-public/public/_build/results?buildId=500589)|dotnet/runtime|[GC/Scenarios/ServerModel/servermodel/servermodel.sh](https://dev.azure.com/dnceng-public/public/_build/results?buildId=500589\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11643352\u0026resultId=100086)||\r\n|[500536](https://dev.azure.com/dnceng-public/public/_build/results?buildId=500536)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=500536\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11642668\u0026resultId=119299)||\r\n|[499113](https://dev.azure.com/dnceng-public/public/_build/results?buildId=499113)|dotnet/runtime|[GC/API/NoGCRegion/Callback_Svr/Callback_Svr.sh](https://dev.azure.com/dnceng-public/public/_build/results?buildId=499113\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11611728\u0026resultId=100064)||\r\n|[499068](https://dev.azure.com/dnceng-public/public/_build/results?buildId=499068)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=499068\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11611444\u0026resultId=120360)||\r\n|[499030](https://dev.azure.com/dnceng-public/public/_build/results?buildId=499030)|dotnet/runtime|[JIT/Regression/JitBlue/Runtime_56953/Runtime_56953/Runtime_56953.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=499030\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11609474\u0026resultId=117777)||\r\n|[497723](https://dev.azure.com/dnceng-public/public/_build/results?buildId=497723)|dotnet/runtime|[GC/API/GC/Collect_Aggressive_MultipleParameters/Collect_Aggressive_MultipleParameters.sh](https://dev.azure.com/dnceng-public/public/_build/results?buildId=497723\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11573846\u0026resultId=100041)||\r\n|[497705](https://dev.azure.com/dnceng-public/public/_build/results?buildId=497705)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=497705\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11573550\u0026resultId=121294)||\r\n|[497685](https://dev.azure.com/dnceng-public/public/_build/results?buildId=497685)|dotnet/runtime|[JIT/Regression/JitBlue/Runtime_56953/Runtime_56953/Runtime_56953.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=497685\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11573002\u0026resultId=117153)||\r\n|[497258](https://dev.azure.com/dnceng-public/public/_build/results?buildId=497258)|dotnet/runtime|[GC/Scenarios/ServerModel/servermodel/servermodel.sh](https://dev.azure.com/dnceng-public/public/_build/results?buildId=497258\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11566558\u0026resultId=100062)|dotnet/runtime#91229|\r\n|[496378](https://dev.azure.com/dnceng-public/public/_build/results?buildId=496378)|dotnet/runtime|[GC/API/NoGCRegion/Callback/Callback.sh](https://dev.azure.com/dnceng-public/public/_build/results?buildId=496378\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11536288\u0026resultId=100079)||\r\n|[496349](https://dev.azure.com/dnceng-public/public/_build/results?buildId=496349)|dotnet/runtime|[JIT/Methodical/Arrays/misc/arrres_il_r/arrres_il_r.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=496349\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11536086\u0026resultId=116795)||\r\n|[496085](https://dev.azure.com/dnceng-public/public/_build/results?buildId=496085)|dotnet/runtime|[JIT/Regression/JitBlue/Runtime_56953/Runtime_56953/Runtime_56953.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=496085\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11528678\u0026resultId=108547)|dotnet/runtime#95854|\r\n|[495731](https://dev.azure.com/dnceng-public/public/_build/results?buildId=495731)|dotnet/runtime|[readytorun/tests/mainv1/mainv1.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=495731\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=11519314\u0026resultId=111256)|dotnet/runtime#95840|\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|3|26|81|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOfxsXAg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5mU_di",
                                           "createdAt":  "2023-09-13T00:56:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nLooks like in some cases there is a failure to run llvm-symbolizer after a crash.\r\n\r\nhttps://dev.azure.com/dnceng-public/public/_build/results?buildId=403691\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=8742492\u0026resultId=120074\u0026paneView=debug\r\n\r\n```\r\n    GC/API/Frozen/Frozen/Frozen.sh [FAIL]\r\n      apply_reg_state: ip and cfa unchanged; stopping here (ip=0xffea41ab8154)\r\n      waitpid() returned successfully (wstatus 00000000) WEXITSTATUS 0 WTERMSIG 0\r\n      /root/helix/work/workitem/e/GC/API/Frozen/Frozen/Frozen.sh: line 490:  6357 Aborted                 (core dumped) $LAUNCHER $ExePath \"${CLRTestExecutionArguments[@]}\"\r\n      \r\n      Return code:      1\r\n      Raw output file:      /root/helix/work/workitem/uploads/Reports/GC.API/Frozen/Frozen/Frozen.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n      /root/helix/work/correlation/corerun -p System.Reflection.Metadata.MetadataUpdater.IsSupported=false -p System.Runtime.Serialization.EnableUnsafeBinaryFormatterSerialization=true Frozen.dll \u0027\u0027\r\n      [createdump] Gathering state for process 6357 corerun\r\n      [createdump] Crashing thread 18ea signal 5 (0005)\r\n      [createdump] Writing crash report to file /home/helixbot/dotnetbuild/dumps/coredump.6357.dmp.crashreport.json\r\n      [createdump] Crash report successfully written\r\n      [createdump] Writing minidump with heap to file /home/helixbot/dotnetbuild/dumps/coredump.6357.dmp\r\n      [createdump] Written 713596928 bytes (174218 pages) to core file\r\n      [createdump] Target process is alive\r\n      [createdump] Dump successfully written in 1427ms\r\n      Expected: 100\r\n      Actual: 134\r\n      END EXECUTION - FAILED\r\n      Test failed. Trying to see if dump file was created in /home/helixbot/dotnetbuild/dumps since 9/12/2023 9:32:39 PM\r\n      Processing /home/helixbot/dotnetbuild/dumps/coredump.6357.dmp.crashreport.json\r\n      Printing stacktrace from \u0027/home/helixbot/dotnetbuild/dumps/coredump.6357.dmp.crashreport.json\u0027\r\n      Invoking llvm-symbolizer --pretty-print\r\n      Errors while running llvm-symbolizer --pretty-print\r\n      System.ComponentModel.Win32Exception (2): An error occurred trying to start process \u0027llvm-symbolizer\u0027 with working directory \u0027/root/helix/work/workitem/e\u0027. No such file or directory\r\n         at System.Diagnostics.Process.ForkAndExecProcess(ProcessStartInfo startInfo, String resolvedFilename, String[] argv, String[] envp, String cwd, Boolean setCredentials, UInt32 userId, UInt32 groupId, UInt32[] groups, Int32\u0026 stdinFd, Int32\u0026 stdoutFd, Int32\u0026 stderrFd, Boolean usesTerminal, Boolean throwOnNoExec)\r\n         at System.Diagnostics.Process.StartCore(ProcessStartInfo startInfo)\r\n         at System.Diagnostics.Process.Start()\r\n         at CoreclrTestLib.CoreclrTestWrapperLib.TryPrintStackTraceFromCrashReport(String crashReportJsonFile, TextWriter outputWriter)\r\n      Test Harness Exitcode is : 1\r\n\r\n```\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eBruceForstall\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003ekunalspathak\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e9.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-09-13T00:56:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5rTiFG",
                                           "createdAt":  "2023-11-07T22:20:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "carlossanlop",
                                           "body":  "I hit this in my PR: https://github.com/dotnet/runtime/pull/93906 ",
                                           "updatedAt":  "2023-11-07T22:20:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5rTohu",
                                           "createdAt":  "2023-11-07T22:37:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kunalspathak",
                                           "body":  "@hoyosjs  - do we know how we can address this problem?",
                                           "updatedAt":  "2023-11-07T22:37:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5rc5rv",
                                           "createdAt":  "2023-11-08T21:53:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "I was gathering some data for this one. Things are looking like:\r\n\r\n![image](https://github.com/dotnet/runtime/assets/19413848/7adfbfb2-b645-46c4-b29b-350aeffa5d62)\r\n\r\n- OSX machines are supposed to have this installed - we\u0027ll have to reach out to dnceng again.\r\n- Alpine and Ubuntu 18.04 containers: I have a working change I think - it just sucks because it bloats image size ridiculously.\r\n- Ubuntu raw queues will need work with dnceng",
                                           "updatedAt":  "2023-11-08T21:53:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5rc62h",
                                           "createdAt":  "2023-11-08T21:57:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "@carlossanlop that addresses the runtime queues/containers. I don\u0027t have the full list where it matters for libs.",
                                           "updatedAt":  "2023-11-08T21:57:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5wZOW7",
                                           "createdAt":  "2024-01-10T20:23:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "JulieLeeMSFT",
                                           "body":  "Removed the known build error label because it masks real crashes from PRs.\r\n\r\nExample: https://github.com/dotnet/runtime/pull/96386/checks?check_run_id=20196770401\r\n\u003cimg width=\"868\" alt=\"image\" src=\"https://github.com/dotnet/runtime/assets/63486087/4d5f5b6b-a857-4993-b4a5-2bf8e2a29b79\"\u003e\r\n\r\nJuan will work on installing LLVM symbolizer on all test machines. ",
                                           "updatedAt":  "2024-01-10T20:23:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5xMNzm",
                                           "createdAt":  "2024-01-18T18:47:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODTLOfg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "hoyosjs",
                                                                               "createdAt":  "2024-01-18T19:06:31Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ericstj",
                                           "body":  "@hoyosjs just double checking that the expectation here is that this component needs to be added to the helix machines and is not already there nor is it expected to come with the test payload.",
                                           "updatedAt":  "2024-01-18T18:47:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5xxK-F",
                                           "createdAt":  "2024-01-24T18:41:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "Oddly telemetry only reports this missing in macOS and ubuntu for inner loop scenarios. I can\u0027t see any other instances where it\u0027s missing except for one alpine group of containers (adding them in https://github.com/dotnet/dotnet-buildtools-prereqs-docker/pull/966). Tracking getting in the queues in https://github.com/dotnet/runtime/issues/91975. ",
                                           "updatedAt":  "2024-01-24T18:41:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc51G56k",
                                           "createdAt":  "2024-02-26T17:47:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "carlossanlop",
                                           "body":  "@hoyosjs - Sharing some fresh hits from my closely related PR where I am forcing a crash in the common native System.IO.Compression.Brotli code to get some XUnitLogChecker results: https://github.com/dotnet/runtime/pull/97135\r\n\r\n- Queue: `Libraries Test Run checked coreclr linux_musl arm Release`\r\n- Job result: https://dev.azure.com/dnceng-public/public/_build/results?buildId=577671\u0026view=logs\u0026j=fd49b2ea-3ee3-5298-d793-bdb9fd631e7e\u0026t=26d44400-a1b8-5ed1-d719-0cc35b38251b\u0026l=56\r\n- Log file: https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-97135-merge-2fc5b6fe4753461abd/System.IO.Compression.Brotli.Tests/1/console.6a25de66.log?helixlogtype=result\r\n- Output:\r\n\u003cdetails\u003e\u003csummary\u003eExpand\u003c/summary\u003e\r\n\r\n```\r\n----- start =============== XUnitLogChecker Output =====================================================\r\nTotal dumps found in /home/helixbot/dotnetbuild/dumps: 1\r\nExecuting XUnitLogChecker in /home/helixbot/dotnetbuild/dumps...\r\n/root/helix/work/correlation/dotnet --roll-forward Major /root/helix/work/correlation/XUnitLogChecker.dll --dumps-path /home/helixbot/dotnetbuild/dumps\r\n[XUnitLogChecker]: 22:04:03.32: Only dumps checking will be done.\r\n[XUnitLogChecker]: 22:04:03.57: Checking for dumps...\r\n[XUnitLogChecker]: 22:04:03.58: Reading crash report \u0027/home/helixbot/dotnetbuild/dumps/coredump.21.dmp.crashreport.json\u0027...\r\n[XUnitLogChecker]: 22:04:03.58: Stack Trace Found:\r\n\r\nInvoking: sudo ls -l /home/helixbot/dotnetbuild/dumps/coredump.21.dmp.crashreport.json\r\nstdout: -rw------- 1 helixbot2 adm 151471 Feb 23 22:04 /home/helixbot/dotnetbuild/dumps/coredump.21.dmp.crashreport.json\r\n\r\n=========================================\r\nPrinting stacktrace from \u0027/home/helixbot/dotnetbuild/dumps/coredump.21.dmp.crashreport.json\u0027\r\nInvoking llvm-symbolizer --pretty-print\r\nErrors while running llvm-symbolizer --pretty-print\r\nSystem.ComponentModel.Win32Exception (2): An error occurred trying to start process \u0027llvm-symbolizer\u0027 with working directory \u0027/root/helix/work/workitem/e\u0027. No such file or directory\r\n   at System.Diagnostics.Process.ForkAndExecProcess(ProcessStartInfo startInfo, String resolvedFilename, String[] argv, String[] envp, String cwd, Boolean setCredentials, UInt32 userId, UInt32 groupId, UInt32[] groups, Int32\u0026 stdinFd, Int32\u0026 stdoutFd, Int32\u0026 stderrFd, Boolean usesTerminal, Boolean throwOnNoExec) in /_/src/libraries/System.Diagnostics.Process/src/System/Diagnostics/Process.Unix.cs:line 499\r\n   at System.Diagnostics.Process.StartCore(ProcessStartInfo startInfo) in /_/src/libraries/System.Diagnostics.Process/src/System/Diagnostics/Process.Unix.cs:line 456\r\n   at CoreclrTestLib.CoreclrTestWrapperLib.TryPrintStackTraceFromCrashReport(String crashReportJsonFile, TextWriter outputWriter) in /__w/1/s/src/tests/Common/Coreclr.TestWrapper/CoreclrTestWrapperLib.cs:line 513\r\n----- end =============== XUnitLogChecker Output - exit code 0 ===========================\r\n```\r\n\u003c/details\u003e",
                                           "updatedAt":  "2024-02-26T17:47:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5_GxcC",
                                           "createdAt":  "2024-05-27T01:17:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "v-wenyuxu",
                                           "body":  "**Failed in:** [runtime-coreclr gcstress-extra 20240525.1](https://dev.azure.com/dnceng-public/public/_build/results?buildId=687709\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=17076978\u0026resultId=100675\u0026paneView=debug)\r\n\r\n**Failed tests:**\r\n```\r\ncoreclr linux arm Checked gcstress0xc_disabler2r @ (Debian.12.Arm32.Open)Ubuntu.2004.ArmArch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:debian-12-helix-arm32v7\r\n    - ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh\r\n```\r\n\r\n**Error message:**\r\n```\r\n \r\nAssert failure(PID 1782 [0x000006f6], Thread: 1782 [0x06f6]): SanityCheck()\r\n    File: /__w/1/s/src/coreclr/vm/methodtable.cpp:8544\r\n    Image: /root/helix/work/correlation/corerun\r\n\r\nwaitpid() returned successfully (wstatus 00000000) WEXITSTATUS 0 WTERMSIG 0\r\n/root/helix/work/workitem/e/ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh: line 441:  1782 Aborted                 (core dumped) $LAUNCHER $ExePath \"${CLRTestExecutionArguments[@]}\"\r\n\r\nReturn code:      1\r\nRaw output file:      /root/helix/work/workitem/uploads/Reports/ilasm.PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n/root/helix/work/correlation/corerun -p System.Reflection.Metadata.MetadataUpdater.IsSupported=false -p System.Runtime.Serialization.EnableUnsafeBinaryFormatterSerialization=true IlasmPortablePdbTests.dll \u0027\u0027\r\n[createdump] Gathering state for process 1782 corerun\r\n[createdump] Crashing thread 06f6 signal 6 (0006)\r\n[createdump] Writing crash report to file /home/helixbot/dotnetbuild/dumps/coredump.1782.dmp.crashreport.json\r\n[createdump] Crash report successfully written\r\n[createdump] Writing minidump with heap to file /home/helixbot/dotnetbuild/dumps/coredump.1782.dmp\r\n[createdump] Written 56971264 bytes (13909 pages) to core file\r\n[createdump] Target process is alive\r\n[createdump] Dump successfully written in 79ms\r\nExpected: 100\r\nActual: 134\r\nEND EXECUTION - FAILED\r\nTest failed. Trying to see if dump file was created in /home/helixbot/dotnetbuild/dumps since 5/25/2024 10:38:09 PM\r\nProcessing /home/helixbot/dotnetbuild/dumps/coredump.1782.dmp.crashreport.json\r\nPrinting stacktrace from \u0027/home/helixbot/dotnetbuild/dumps/coredump.1782.dmp.crashreport.json\u0027\r\nInvoking llvm-symbolizer --pretty-print\r\nStack trace:\r\n----------------------------------\r\nThread Id: 0x6f6\r\n      Child SP               IP Call Site\r\n 0xffc1a5e8 0xf7807614 libc.so.6!\r\n 0xffc1a5f0 0xf78719c0 libc.so.6!__wait4_time64\r\n 0xffc1a658 0xf770c984 libcoreclr.so!PROCCreateCrashDump(std::vector\u003cchar const*, std::allocator\u003cchar const*\u003e \u003e\u0026, char*, int, bool) at /__w/1/s/src/coreclr/pal/src/thread/process.cpp:2308:22\r\n 0xffc1a6a0 0xf770d784 libcoreclr.so!PROCCreateCrashDumpIfEnabled at /__w/1/s/src/coreclr/pal/src/thread/process.cpp:2526:9\r\n 0xffc1a6f0 0xf770ae78 libcoreclr.so!PROCAbort at /__w/1/s/src/coreclr/pal/src/thread/process.cpp:2559:5\r\n (inlined by) RaiseFailFastException at /__w/1/s/src/coreclr/pal/src/thread/process.cpp:1276:14\r\n 0xffc1a708 0xf75f43ac libcoreclr.so!_DbgBreakCheckNoThrow(char const*, int, char const*, int) at /__w/1/s/src/coreclr/utilcode/debug.cpp:300:0\r\n 0xffc1a710 0xf75f4232 libcoreclr.so!SBuffer::~SBuffer() at /__w/1/s/src/coreclr/inc/sbuffer.inl:206:9\r\n (inlined by) _DbgBreakCheck at /__w/1/s/src/coreclr/utilcode/debug.cpp:293:1\r\n 0xffc1b790 0xf75f4406 libcoreclr.so!_DbgBreakCheckNoThrow(char const*, int, char const*, int) at /__w/1/s/src/coreclr/utilcode/debug.cpp:0:0\r\n 0xffc1b7d8 0xf75f4618 libcoreclr.so!DbgAssertDialog at /__w/1/s/src/coreclr/utilcode/debug.cpp:425:22\r\n 0xffc1b800 0xf738a646 libcoreclr.so!MethodTable::Validate() at /__w/1/s/src/coreclr/vm/methodtable.cpp:0:0\r\n 0xffc1b828 0xf738d384 libcoreclr.so!Object::ValidateInner(int, int, int) at /__w/1/s/src/coreclr/vm/object.cpp:553:9\r\n 0xffc1b8a0 0xf7576a38 libcoreclr.so!WKS::GCHeap::Promote(Object**, ScanContext*, unsigned int) at /__w/1/s/src/coreclr/gc/gc.cpp:49013:9\r\n 0xffc1b8d0 0xf7511320 libcoreclr.so!GcInfoDecoder::ReportSlotToGC(GcSlotDecoder\u0026, unsigned int, REGDISPLAY*, bool, unsigned int, void (*)(void*, OBJECTREF*, unsigned int), void*) at /__w/1/s/src/coreclr/inc/gcinfodecoder.h:0:17\r\n 0xffc1b910 0xf750ff02 libcoreclr.so!GcSlotDecoder::GetNumSlots() at /__w/1/s/src/coreclr/inc/gcinfodecoder.h:457:16\r\n (inlined by) GcInfoDecoder::ReportUntrackedSlots(GcSlotDecoder\u0026, REGDISPLAY*, unsigned int, void (*)(void*, OBJECTREF*, unsigned int), void*) at /__w/1/s/src/coreclr/vm/gcinfodecoder.cpp:1130:81\r\n (inlined by) GcInfoDecoder::EnumerateLiveSlots(REGDISPLAY*, bool, unsigned int, \r\n```\r\n\r\n**Stack trace:**\r\n```\r\n   at ilasm_PortablePdb._IlasmPortablePdbTests_IlasmPortablePdbTests_._IlasmPortablePdbTests_IlasmPortablePdbTests_sh()\r\n\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)\r\n```\r\n\r\nQueued | Pipeline | Pipeline_Configuration | OS | Arch | Test | Outcome | Properties | BuildReason\r\n-- | -- | -- | -- | -- | -- | -- | -- | --\r\n2024-05-25T22:20:19.908Z | runtime-coreclr gcstress-extra | Checked-gcstress0xc_disabler2r | ubuntu.2004.armarch.open | arm | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"BuildId\":\"687709\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"BuildNumber\":\"20240525.1\",\"DefinitionId\":\"113\",\"configuration\":\"Checked-gcstress0xc_disabler2r\",\"architecture\":\"arm\",\"System.StageName\":\"Build\",\"System.PhaseAttempt\":\"1\",\"System.JobName\":\"__default\",\"System.JobAttempt\":\"1\",\"System.StageAttempt\":\"1\",\"System.JobId\":\"860c965f-b28e-50d5-65d2-e40bd59f3a69\",\"Reason\":\"Schedule\",\"DefinitionName\":\"runtime-coreclr   gcstress-extra\",\"AzurePipelinesTestRunId\":\"17076978\",\"Project\":\"public\",\"System.PhaseName\":\"run_test_p1__linux_arm_checked\",\"operatingSystem\":\"(Debian.12.Arm32.Open)Ubuntu.2004.ArmArch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:debian-12-helix-arm32v7\"} | Schedule\r\n2024-05-09T02:18:47.007Z | runtime-coreclr outerloop | Checked-no_tiered_compilation | ubuntu.2004.armarch.open | arm | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.JobName\":\"__default\",\"Reason\":\"Schedule\",\"System.PhaseAttempt\":\"1\",\"architecture\":\"arm\",\"configuration\":\"Checked-no_tiered_compilation\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobId\":\"860c965f-b28e-50d5-65d2-e40bd59f3a69\",\"Project\":\"public\",\"DefinitionName\":\"runtime-coreclr   outerloop\",\"operatingSystem\":\"(Ubuntu.1804.Arm32.Open)Ubuntu.2004.Armarch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-helix-arm32v7\",\"BuildId\":\"670046\",\"System.StageAttempt\":\"1\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"System.PhaseName\":\"run_test_p1__linux_arm_checked\",\"BuildNumber\":\"20240508.3\",\"DefinitionId\":\"108\",\"AzurePipelinesTestRunId\":\"16612930\"} | Schedule\r\n2024-05-09T02:18:45.812Z | runtime-coreclr outerloop | Checked | ubuntu.2004.armarch.open | arm | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"DefinitionId\":\"108\",\"DefinitionName\":\"runtime-coreclr   outerloop\",\"System.StageName\":\"Build\",\"System.JobAttempt\":\"1\",\"BuildId\":\"670046\",\"Reason\":\"Schedule\",\"System.JobId\":\"860c965f-b28e-50d5-65d2-e40bd59f3a69\",\"Project\":\"public\",\"BuildNumber\":\"20240508.3\",\"operatingSystem\":\"(Ubuntu.1804.Arm32.Open)Ubuntu.2004.Armarch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-helix-arm32v7\",\"AzurePipelinesTestRunId\":\"16612920\",\"configuration\":\"Checked\",\"architecture\":\"arm\",\"System.PhaseName\":\"run_test_p1__linux_arm_checked\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"System.JobName\":\"__default\"} | Schedule\r\n\u003cdetails\u003e\r\n\u003csummary\u003eMore failures\u003c/summary\u003e\r\n\r\nQueued | Pipeline | Pipeline_Configuration | OS | Arch | Test | Outcome | Properties | BuildReason\r\n-- | -- | -- | -- | -- | -- | -- | -- | --\r\n2024-05-08T20:55:20.943Z | runtime | Checked-no_tiered_compilation | ubuntu.2004.armarch.open | arm | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.JobAttempt\":\"1\",\"System.PhaseName\":\"run_test_p0_coreclr__linux_arm_checked\",\"Reason\":\"Schedule\",\"System.StageName\":\"Build\",\"operatingSystem\":\"(Ubuntu.1804.Arm32.Open)Ubuntu.2004.Armarch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-helix-arm32v7\",\"System.JobId\":\"5875517b-40f2-5b27-5b45-8b8aba144595\",\"configuration\":\"Checked-no_tiered_compilation\",\"DefinitionName\":\"runtime\",\"DefinitionId\":\"129\",\"System.JobName\":\"__default\",\"System.PhaseAttempt\":\"1\",\"BuildId\":\"669797\",\"architecture\":\"arm\",\"AzurePipelinesTestRunId\":\"16607856\",\"BuildNumber\":\"20240508.40\",\"Project\":\"public\",\"System.StageAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\"} | Schedule\r\n2024-05-08T20:55:19.474Z | runtime | Checked | ubuntu.2004.armarch.open | arm | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"DefinitionName\":\"runtime\",\"operatingSystem\":\"(Ubuntu.1804.Arm32.Open)Ubuntu.2004.Armarch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-helix-arm32v7\",\"System.PhaseName\":\"run_test_p0_coreclr__linux_arm_checked\",\"configuration\":\"Checked\",\"DefinitionId\":\"129\",\"BuildNumber\":\"20240508.40\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"BuildId\":\"669797\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobName\":\"__default\",\"Reason\":\"Schedule\",\"System.StageAttempt\":\"1\",\"System.JobId\":\"5875517b-40f2-5b27-5b45-8b8aba144595\",\"Project\":\"public\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"16607854\",\"architecture\":\"arm\"} | Schedule\r\n2024-05-08T19:20:43.463Z | runtime-coreclr outerloop | Checked-no_tiered_compilation | ubuntu.2004.armarch.open | arm | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"AzurePipelinesTestRunId\":\"16606342\",\"DefinitionName\":\"runtime-coreclr   outerloop\",\"BuildId\":\"669628\",\"architecture\":\"arm\",\"configuration\":\"Checked-no_tiered_compilation\",\"Project\":\"public\",\"System.JobId\":\"860c965f-b28e-50d5-65d2-e40bd59f3a69\",\"operatingSystem\":\"(Ubuntu.1804.Arm32.Open)Ubuntu.2004.Armarch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-helix-arm32v7\",\"System.JobAttempt\":\"1\",\"System.PhaseName\":\"run_test_p1__linux_arm_checked\",\"Reason\":\"Schedule\",\"System.PhaseAttempt\":\"1\",\"System.StageAttempt\":\"1\",\"System.JobName\":\"__default\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"BuildNumber\":\"20240508.2\",\"DefinitionId\":\"108\",\"System.StageName\":\"Build\"} | Schedule\r\n2024-05-08T19:20:41.712Z | runtime-coreclr outerloop | Checked | ubuntu.2004.armarch.open | arm | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"BuildNumber\":\"20240508.2\",\"DefinitionId\":\"108\",\"System.JobId\":\"860c965f-b28e-50d5-65d2-e40bd59f3a69\",\"System.JobName\":\"__default\",\"DefinitionName\":\"runtime-coreclr   outerloop\",\"AzurePipelinesTestRunId\":\"16606340\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseAttempt\":\"1\",\"configuration\":\"Checked\",\"architecture\":\"arm\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"BuildId\":\"669628\",\"System.JobAttempt\":\"1\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"System.PhaseName\":\"run_test_p1__linux_arm_checked\",\"operatingSystem\":\"(Ubuntu.1804.Arm32.Open)Ubuntu.2004.Armarch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-helix-arm32v7\"} | Schedule\r\n2024-05-08T10:18:34.795Z | runtime-coreclr outerloop | Checked-no_tiered_compilation | ubuntu.2004.armarch.open | arm | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.StageName\":\"Build\",\"Project\":\"public\",\"AzurePipelinesTestRunId\":\"16596180\",\"System.PhaseName\":\"run_test_p1__linux_arm_checked\",\"BuildNumber\":\"20240508.1\",\"System.JobAttempt\":\"1\",\"System.JobName\":\"__default\",\"BuildId\":\"669221\",\"configuration\":\"Checked-no_tiered_compilation\",\"Reason\":\"Schedule\",\"operatingSystem\":\"(Ubuntu.1804.Arm32.Open)Ubuntu.2004.Armarch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-helix-arm32v7\",\"System.StageAttempt\":\"1\",\"architecture\":\"arm\",\"DefinitionId\":\"108\",\"System.PhaseAttempt\":\"1\",\"DefinitionName\":\"runtime-coreclr   outerloop\",\"System.JobId\":\"860c965f-b28e-50d5-65d2-e40bd59f3a69\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\"} | Schedule\r\n2024-05-08T10:18:33.232Z | runtime-coreclr outerloop | Checked | ubuntu.2004.armarch.open | arm | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.JobName\":\"__default\",\"AzurePipelinesTestRunId\":\"16596178\",\"System.PhaseName\":\"run_test_p1__linux_arm_checked\",\"architecture\":\"arm\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.StageName\":\"Build\",\"BuildId\":\"669221\",\"DefinitionName\":\"runtime-coreclr   outerloop\",\"System.PhaseAttempt\":\"1\",\"System.JobAttempt\":\"1\",\"Project\":\"public\",\"System.JobId\":\"860c965f-b28e-50d5-65d2-e40bd59f3a69\",\"DefinitionId\":\"108\",\"BuildNumber\":\"20240508.1\",\"configuration\":\"Checked\",\"Reason\":\"Schedule\",\"System.StageAttempt\":\"1\",\"operatingSystem\":\"(Ubuntu.1804.Arm32.Open)Ubuntu.2004.Armarch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-helix-arm32v7\"} | Schedule\r\n2024-05-08T09:16:15.601Z | runtime-coreclr pgo | Checked-defaultpgo | ubuntu.2004.armarch.open | arm | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.JobId\":\"860c965f-b28e-50d5-65d2-e40bd59f3a69\",\"BuildNumber\":\"20240508.1\",\"Reason\":\"Schedule\",\"System.JobAttempt\":\"1\",\"System.PhaseName\":\"run_test_p1__linux_arm_checked\",\"System.PhaseAttempt\":\"1\",\"BuildId\":\"669200\",\"Project\":\"public\",\"operatingSystem\":\"(Ubuntu.1804.Arm32.Open)Ubuntu.2004.Armarch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-helix-arm32v7\",\"System.JobName\":\"__default\",\"DefinitionId\":\"144\",\"AzurePipelinesTestRunId\":\"16595346\",\"DefinitionName\":\"runtime-coreclr   pgo\",\"System.StageAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"architecture\":\"arm\",\"configuration\":\"Checked-defaultpgo\",\"System.StageName\":\"Build\"} | Schedule\r\n2024-05-08T08:55:12.152Z | runtime | Checked-no_tiered_compilation | ubuntu.2004.armarch.open | arm | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.StageName\":\"Build\",\"AzurePipelinesTestRunId\":\"16594958\",\"System.JobName\":\"__default\",\"configuration\":\"Checked-no_tiered_compilation\",\"BuildNumber\":\"20240508.1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.StageAttempt\":\"1\",\"DefinitionId\":\"129\",\"System.JobId\":\"5875517b-40f2-5b27-5b45-8b8aba144595\",\"System.PhaseName\":\"run_test_p0_coreclr__linux_arm_checked\",\"architecture\":\"arm\",\"Reason\":\"Schedule\",\"System.PhaseAttempt\":\"1\",\"operatingSystem\":\"(Ubuntu.1804.Arm32.Open)Ubuntu.2004.Armarch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-helix-arm32v7\",\"DefinitionName\":\"runtime\",\"BuildId\":\"669202\",\"System.JobAttempt\":\"1\",\"Project\":\"public\"} | Schedule\r\n2024-05-08T08:55:10.576Z | runtime | Checked | ubuntu.2004.armarch.open | arm | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.StageName\":\"Build\",\"DefinitionId\":\"129\",\"configuration\":\"Checked\",\"System.StageAttempt\":\"1\",\"BuildNumber\":\"20240508.1\",\"System.JobId\":\"5875517b-40f2-5b27-5b45-8b8aba144595\",\"AzurePipelinesTestRunId\":\"16594956\",\"DefinitionName\":\"runtime\",\"Reason\":\"Schedule\",\"Project\":\"public\",\"BuildId\":\"669202\",\"System.JobAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"operatingSystem\":\"(Ubuntu.1804.Arm32.Open)Ubuntu.2004.Armarch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-helix-arm32v7\",\"System.PhaseName\":\"run_test_p0_coreclr__linux_arm_checked\",\"architecture\":\"arm\",\"System.JobName\":\"__default\"} | Schedule\r\n2024-05-08T07:27:00.809Z | coreclr-release-outerloop-nightly | Release-no_tiered_compilation | ubuntu.2004.armarch.open | arm | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.PhaseAttempt\":\"1\",\"architecture\":\"arm\",\"DefinitionName\":\"coreclr-release-outerloop-nightly\",\"System.JobName\":\"__default\",\"AzurePipelinesTestRunId\":\"16592990\",\"configuration\":\"Release-no_tiered_compilation\",\"BuildNumber\":\"20240507.1\",\"BuildId\":\"669106\",\"System.JobAttempt\":\"1\",\"DefinitionId\":\"135\",\"System.StageAttempt\":\"1\",\"System.StageName\":\"Build\",\"operatingSystem\":\"(Ubuntu.1804.Arm32.Open)Ubuntu.2004.Armarch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-helix-arm32v7\",\"Project\":\"public\",\"System.PhaseName\":\"run_test_p1_R2R_linux_arm_release\",\"System.JobId\":\"72dfe29e-04cf-5892-e89c-87a9854dd748\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"Reason\":\"Schedule\"} | Schedule\r\n2024-05-08T07:27:00.809Z | coreclr-release-outerloop-nightly | Release-no_tiered_compilation | ubuntu.2004.armarch.open | arm | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.PhaseAttempt\":\"1\",\"architecture\":\"arm\",\"DefinitionName\":\"coreclr-release-outerloop-nightly\",\"System.JobName\":\"__default\",\"AzurePipelinesTestRunId\":\"16592990\",\"configuration\":\"Release-no_tiered_compilation\",\"BuildNumber\":\"20240507.1\",\"BuildId\":\"669106\",\"System.JobAttempt\":\"1\",\"DefinitionId\":\"135\",\"System.StageAttempt\":\"1\",\"System.StageName\":\"Build\",\"operatingSystem\":\"(Ubuntu.1804.Arm32.Open)Ubuntu.2004.Armarch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-helix-arm32v7\",\"Project\":\"public\",\"System.PhaseName\":\"run_test_p1_R2R_linux_arm_release\",\"System.JobId\":\"72dfe29e-04cf-5892-e89c-87a9854dd748\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"Reason\":\"Schedule\"} | Schedule\r\n2024-05-08T07:26:57.972Z | coreclr-release-outerloop-nightly | Release | ubuntu.2004.armarch.open | arm | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"BuildId\":\"669106\",\"AzurePipelinesTestRunId\":\"16592988\",\"System.PhaseName\":\"run_test_p1_R2R_linux_arm_release\",\"System.PhaseAttempt\":\"1\",\"System.JobAttempt\":\"1\",\"Reason\":\"Schedule\",\"DefinitionId\":\"135\",\"architecture\":\"arm\",\"BuildNumber\":\"20240507.1\",\"System.StageAttempt\":\"1\",\"System.JobId\":\"72dfe29e-04cf-5892-e89c-87a9854dd748\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"Project\":\"public\",\"System.JobName\":\"__default\",\"System.StageName\":\"Build\",\"DefinitionName\":\"coreclr-release-outerloop-nightly\",\"operatingSystem\":\"(Ubuntu.1804.Arm32.Open)Ubuntu.2004.Armarch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-helix-arm32v7\",\"configuration\":\"Release\"} | Schedule\r\n2024-05-08T07:23:41.546Z | coreclr-release-outerloop-nightly | Release-no_tiered_compilation | ubuntu.2004.armarch.open | arm | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"DefinitionName\":\"coreclr-release-outerloop-nightly\",\"operatingSystem\":\"(Ubuntu.1804.Arm32.Open)Ubuntu.2004.Armarch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-helix-arm32v7\",\"System.PhaseName\":\"run_test_p1__linux_arm_release\",\"Reason\":\"Schedule\",\"System.StageAttempt\":\"1\",\"DefinitionId\":\"135\",\"System.JobName\":\"__default\",\"BuildId\":\"669106\",\"System.StageName\":\"Build\",\"BuildNumber\":\"20240507.1\",\"System.JobAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"16592840\",\"architecture\":\"arm\",\"configuration\":\"Release-no_tiered_compilation\",\"Project\":\"public\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobId\":\"ae69a820-8040-5321-6217-15d430a2ab03\"} | Schedule\r\n2024-05-08T07:23:40.155Z | coreclr-release-outerloop-nightly | Release | ubuntu.2004.armarch.open | arm | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"DefinitionId\":\"135\",\"System.StageName\":\"Build\",\"DefinitionName\":\"coreclr-release-outerloop-nightly\",\"System.JobName\":\"__default\",\"AzurePipelinesTestRunId\":\"16592838\",\"Reason\":\"Schedule\",\"configuration\":\"Release\",\"System.JobId\":\"ae69a820-8040-5321-6217-15d430a2ab03\",\"System.StageAttempt\":\"1\",\"System.PhaseName\":\"run_test_p1__linux_arm_release\",\"BuildNumber\":\"20240507.1\",\"Project\":\"public\",\"BuildId\":\"669106\",\"System.PhaseAttempt\":\"1\",\"System.JobAttempt\":\"1\",\"architecture\":\"arm\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"operatingSystem\":\"(Ubuntu.1804.Arm32.Open)Ubuntu.2004.Armarch.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-helix-arm32v7\"} | Schedule\r\n2024-05-06T07:59:26.627Z | runtime-coreclr crossgen2-composite gcstress | Checked-gcstress0xc_disabler2r_jitstress2 | osx.1200.arm64.open | arm64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.PhaseName\":\"run_test_p1_Composite_osx_arm64_checked\",\"System.PhaseAttempt\":\"1\",\"DefinitionId\":\"141\",\"System.JobId\":\"4b5575ba-4f05-5198-bc88-a075c735caa5\",\"System.JobName\":\"__default\",\"operatingSystem\":\"OSX.1200.ARM64.Open\",\"Project\":\"public\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"BuildNumber\":\"20240505.1\",\"DefinitionName\":\"runtime-coreclr   crossgen2-composite   gcstress\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"16531274\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"configuration\":\"Checked-gcstress0xc_disabler2r_jitstress2\",\"architecture\":\"arm64\",\"BuildId\":\"666432\"} | Schedule\r\n2024-05-06T07:27:30.361Z | runtime-coreclr crossgen2-composite gcstress | Checked-gcstress0xc_disabler2r_jitstress2 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"Reason\":\"Schedule\",\"configuration\":\"Checked-gcstress0xc_disabler2r_jitstress2\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"BuildId\":\"666432\",\"BuildNumber\":\"20240505.1\",\"AzurePipelinesTestRunId\":\"16530954\",\"System.JobName\":\"__default\",\"DefinitionName\":\"runtime-coreclr   crossgen2-composite   gcstress\",\"System.PhaseName\":\"run_test_p1_Composite_linux_x64_checked\",\"Project\":\"public\",\"System.JobId\":\"b01b9fd9-8de8-534a-70cd-a32a2dffddff\",\"DefinitionId\":\"141\",\"System.PhaseAttempt\":\"1\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.StageName\":\"Build\",\"System.StageAttempt\":\"1\"} | Schedule\r\n2024-05-06T05:24:02.857Z | runtime-coreclr jitstress | Checked-jitstress1 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"Reason\":\"Schedule\",\"Project\":\"public\",\"System.JobAttempt\":\"1\",\"configuration\":\"Checked-jitstress1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"DefinitionId\":\"109\",\"DefinitionName\":\"runtime-coreclr   jitstress\",\"architecture\":\"x64\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.StageName\":\"Build\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"666407\",\"AzurePipelinesTestRunId\":\"16528844\",\"System.PhaseAttempt\":\"1\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"BuildNumber\":\"20240505.1\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\"} | Schedule\r\n2024-05-06T05:24:01.384Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"16528852\",\"System.JobName\":\"__default\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"Reason\":\"Schedule\",\"System.JobAttempt\":\"1\",\"BuildNumber\":\"20240505.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.StageName\":\"Build\",\"System.PhaseAttempt\":\"1\",\"DefinitionId\":\"109\",\"BuildId\":\"666407\",\"DefinitionName\":\"runtime-coreclr   jitstress\",\"architecture\":\"x64\",\"Project\":\"public\"} | Schedule\r\n2024-05-06T05:24:00.009Z | runtime-coreclr jitstress | Checked-jitstress2 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"Project\":\"public\",\"BuildNumber\":\"20240505.1\",\"System.JobName\":\"__default\",\"Reason\":\"Schedule\",\"System.StageName\":\"Build\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"BuildId\":\"666407\",\"AzurePipelinesTestRunId\":\"16528842\",\"configuration\":\"Checked-jitstress2\",\"DefinitionId\":\"109\",\"System.StageAttempt\":\"1\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"DefinitionName\":\"runtime-coreclr   jitstress\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"System.PhaseAttempt\":\"1\"} | Schedule\r\n2024-05-06T05:23:57.087Z | runtime-coreclr jitstress | Checked-jitstress1_tiered | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"Reason\":\"Schedule\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobAttempt\":\"1\",\"BuildId\":\"666407\",\"AzurePipelinesTestRunId\":\"16528846\",\"System.JobName\":\"__default\",\"DefinitionName\":\"runtime-coreclr   jitstress\",\"Project\":\"public\",\"System.PhaseAttempt\":\"1\",\"DefinitionId\":\"109\",\"BuildNumber\":\"20240505.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress1_tiered\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\"} | Schedule\r\n2024-05-06T03:47:41.1Z | runtime-coreclr r2r-extra | Checked-jitstress1_tiered | osx.1200.arm64.open | arm64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.JobId\":\"99f15f99-448d-5593-a271-dbdf553789a6\",\"operatingSystem\":\"OSX.1200.ARM64.Open\",\"AzurePipelinesTestRunId\":\"16528370\",\"System.StageName\":\"Build\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseAttempt\":\"1\",\"System.JobName\":\"__default\",\"BuildId\":\"666362\",\"DefinitionName\":\"runtime-coreclr   r2r-extra\",\"System.StageAttempt\":\"1\",\"DefinitionId\":\"114\",\"Reason\":\"Schedule\",\"Project\":\"public\",\"BuildNumber\":\"20240505.1\",\"configuration\":\"Checked-jitstress1_tiered\",\"System.JobAttempt\":\"1\",\"architecture\":\"arm64\",\"System.PhaseName\":\"run_test_p1_R2R_osx_arm64_checked\"} | Schedule\r\n2024-05-06T03:47:23.446Z | runtime-coreclr r2r-extra | Checked-jitstress2_tiered | osx.1200.arm64.open | arm64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"configuration\":\"Checked-jitstress2_tiered\",\"System.PhaseName\":\"run_test_p1_R2R_osx_arm64_checked\",\"DefinitionId\":\"114\",\"operatingSystem\":\"OSX.1200.ARM64.Open\",\"System.PhaseAttempt\":\"1\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"BuildId\":\"666362\",\"DefinitionName\":\"runtime-coreclr   r2r-extra\",\"System.JobId\":\"99f15f99-448d-5593-a271-dbdf553789a6\",\"System.JobAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"16528362\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"Project\":\"public\",\"BuildNumber\":\"20240505.1\",\"architecture\":\"arm64\"} | Schedule\r\n2024-05-06T03:31:02.455Z | runtime-coreclr r2r-extra | Checked-jitstress1_tiered | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"AzurePipelinesTestRunId\":\"16527936\",\"BuildNumber\":\"20240505.1\",\"System.StageName\":\"Build\",\"System.JobName\":\"__default\",\"DefinitionId\":\"114\",\"System.PhaseName\":\"run_test_p1_R2R_linux_x64_checked\",\"System.JobAttempt\":\"1\",\"architecture\":\"x64\",\"Project\":\"public\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobId\":\"45a39349-90d5-51c8-4429-a48b2907fbdd\",\"DefinitionName\":\"runtime-coreclr   r2r-extra\",\"configuration\":\"Checked-jitstress1_tiered\",\"System.StageAttempt\":\"1\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"Reason\":\"Schedule\",\"System.PhaseAttempt\":\"1\",\"BuildId\":\"666362\"} | Schedule\r\n2024-05-06T03:30:58.033Z | runtime-coreclr r2r-extra | Checked-jitstress2_tiered | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.JobId\":\"45a39349-90d5-51c8-4429-a48b2907fbdd\",\"AzurePipelinesTestRunId\":\"16527918\",\"System.StageAttempt\":\"1\",\"System.JobName\":\"__default\",\"System.PhaseName\":\"run_test_p1_R2R_linux_x64_checked\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"BuildId\":\"666362\",\"DefinitionName\":\"runtime-coreclr   r2r-extra\",\"System.PhaseAttempt\":\"1\",\"System.StageName\":\"Build\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"BuildNumber\":\"20240505.1\",\"Project\":\"public\",\"DefinitionId\":\"114\",\"System.JobAttempt\":\"1\",\"configuration\":\"Checked-jitstress2_tiered\"} | Schedule\r\n2024-05-05T22:34:40.138Z | runtime-coreclr gcstress-extra | Checked-gcstress0xc_jitstress1 | osx.1200.arm64.open | arm64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"configuration\":\"Checked-gcstress0xc_jitstress1\",\"AzurePipelinesTestRunId\":\"16525526\",\"DefinitionId\":\"113\",\"DefinitionName\":\"runtime-coreclr   gcstress-extra\",\"operatingSystem\":\"OSX.1200.ARM64.Open\",\"System.StageAttempt\":\"1\",\"BuildNumber\":\"20240505.1\",\"System.JobName\":\"__default\",\"Reason\":\"Schedule\",\"System.JobId\":\"765fd5e9-e47f-5cb0-4cbf-499eaaaee93e\",\"architecture\":\"arm64\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"BuildId\":\"666286\",\"System.JobAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__osx_arm64_checked\",\"System.PhaseAttempt\":\"1\"} | Schedule\r\n2024-05-05T22:34:38.606Z | runtime-coreclr gcstress-extra | Checked-gcstress0xc_disabler2r_jitstress2 | osx.1200.arm64.open | arm64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.JobAttempt\":\"1\",\"Reason\":\"Schedule\",\"architecture\":\"arm64\",\"BuildId\":\"666286\",\"AzurePipelinesTestRunId\":\"16525532\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobName\":\"__default\",\"Project\":\"public\",\"System.PhaseName\":\"run_test_p1__osx_arm64_checked\",\"System.PhaseAttempt\":\"1\",\"operatingSystem\":\"OSX.1200.ARM64.Open\",\"System.JobId\":\"765fd5e9-e47f-5cb0-4cbf-499eaaaee93e\",\"System.StageAttempt\":\"1\",\"configuration\":\"Checked-gcstress0xc_disabler2r_jitstress2\",\"DefinitionId\":\"113\",\"System.StageName\":\"Build\",\"DefinitionName\":\"runtime-coreclr   gcstress-extra\",\"BuildNumber\":\"20240505.1\"} | Schedule\r\n2024-05-05T22:34:34.12Z | runtime-coreclr gcstress-extra | Checked-gcstress0xc_jitstress2 | osx.1200.arm64.open | arm64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"AzurePipelinesTestRunId\":\"16525528\",\"System.StageName\":\"Build\",\"System.PhaseAttempt\":\"1\",\"BuildId\":\"666286\",\"configuration\":\"Checked-gcstress0xc_jitstress2\",\"DefinitionName\":\"runtime-coreclr   gcstress-extra\",\"System.JobId\":\"765fd5e9-e47f-5cb0-4cbf-499eaaaee93e\",\"BuildNumber\":\"20240505.1\",\"System.JobName\":\"__default\",\"DefinitionId\":\"113\",\"operatingSystem\":\"OSX.1200.ARM64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__osx_arm64_checked\",\"System.StageAttempt\":\"1\",\"architecture\":\"arm64\",\"Reason\":\"Schedule\",\"Project\":\"public\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2024-05-05T22:22:20.863Z | runtime-coreclr gcstress-extra | Checked-gcstress0xc_jitstress2 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"Project\":\"public\",\"System.JobName\":\"__default\",\"BuildId\":\"666286\",\"System.JobAttempt\":\"1\",\"DefinitionName\":\"runtime-coreclr   gcstress-extra\",\"architecture\":\"x64\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"BuildNumber\":\"20240505.1\",\"System.PhaseAttempt\":\"1\",\"Reason\":\"Schedule\",\"System.StageName\":\"Build\",\"AzurePipelinesTestRunId\":\"16525394\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.StageAttempt\":\"1\",\"DefinitionId\":\"113\",\"configuration\":\"Checked-gcstress0xc_jitstress2\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\"} | Schedule\r\n2024-05-05T22:22:17.888Z | runtime-coreclr gcstress-extra | Checked-gcstress0xc_jitstress1 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobAttempt\":\"1\",\"DefinitionId\":\"113\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"Project\":\"public\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20240505.1\",\"System.StageAttempt\":\"1\",\"configuration\":\"Checked-gcstress0xc_jitstress1\",\"System.StageName\":\"Build\",\"System.PhaseAttempt\":\"1\",\"Reason\":\"Schedule\",\"BuildId\":\"666286\",\"architecture\":\"x64\",\"AzurePipelinesTestRunId\":\"16525398\",\"DefinitionName\":\"runtime-coreclr   gcstress-extra\"} | Schedule\r\n2024-05-05T22:22:16.153Z | runtime-coreclr gcstress-extra | Checked-gcstress0xc_disabler2r_jitstress2 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"16525390\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"System.JobName\":\"__default\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"BuildId\":\"666286\",\"System.StageName\":\"Build\",\"BuildNumber\":\"20240505.1\",\"System.JobAttempt\":\"1\",\"System.StageAttempt\":\"1\",\"configuration\":\"Checked-gcstress0xc_disabler2r_jitstress2\",\"Project\":\"public\",\"DefinitionName\":\"runtime-coreclr   gcstress-extra\",\"DefinitionId\":\"113\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\"} | Schedule\r\n2024-05-05T19:45:02.199Z | runtime-coreclr jitstress-random | Checked-jitstress_random_2 | osx.1200.arm64.open | arm64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"DefinitionName\":\"runtime-coreclr   jitstress-random\",\"BuildNumber\":\"20240505.1\",\"System.JobId\":\"765fd5e9-e47f-5cb0-4cbf-499eaaaee93e\",\"operatingSystem\":\"OSX.1200.ARM64.Open\",\"architecture\":\"arm64\",\"System.JobName\":\"__default\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"System.StageAttempt\":\"1\",\"configuration\":\"Checked-jitstress_random_2\",\"DefinitionId\":\"159\",\"System.PhaseName\":\"run_test_p1__osx_arm64_checked\",\"Reason\":\"Schedule\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"BuildId\":\"666195\",\"System.JobAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"16524460\"} | Schedule\r\n2024-05-05T19:45:00.715Z | runtime-coreclr jitstress-random | Checked-jitstress_random_1 | osx.1200.arm64.open | arm64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.JobName\":\"__default\",\"System.JobAttempt\":\"1\",\"architecture\":\"arm64\",\"configuration\":\"Checked-jitstress_random_1\",\"System.StageAttempt\":\"1\",\"BuildNumber\":\"20240505.1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"AzurePipelinesTestRunId\":\"16524458\",\"Project\":\"public\",\"DefinitionId\":\"159\",\"Reason\":\"Schedule\",\"System.StageName\":\"Build\",\"System.JobId\":\"765fd5e9-e47f-5cb0-4cbf-499eaaaee93e\",\"BuildId\":\"666195\",\"DefinitionName\":\"runtime-coreclr   jitstress-random\",\"System.PhaseName\":\"run_test_p1__osx_arm64_checked\",\"System.PhaseAttempt\":\"1\",\"operatingSystem\":\"OSX.1200.ARM64.Open\"} | Schedule\r\n2024-05-05T19:40:59.246Z | runtime-coreclr jitstress-random | Checked-jitstress_random_1 | osx.1200.amd64.open | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"BuildNumber\":\"20240505.1\",\"System.JobAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"Reason\":\"Schedule\",\"BuildId\":\"666195\",\"System.JobName\":\"__default\",\"DefinitionId\":\"159\",\"System.StageName\":\"Build\",\"DefinitionName\":\"runtime-coreclr   jitstress-random\",\"System.PhaseAttempt\":\"1\",\"configuration\":\"Checked-jitstress_random_1\",\"architecture\":\"x64\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.StageAttempt\":\"1\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"AzurePipelinesTestRunId\":\"16524440\"} | Schedule\r\n2024-05-05T19:21:25.144Z | runtime-coreclr jitstress-random | Checked-jitstress_random_2 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"BuildNumber\":\"20240505.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"configuration\":\"Checked-jitstress_random_2\",\"System.StageAttempt\":\"1\",\"Reason\":\"Schedule\",\"System.JobName\":\"__default\",\"AzurePipelinesTestRunId\":\"16524244\",\"System.JobAttempt\":\"1\",\"Project\":\"public\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"DefinitionId\":\"159\",\"BuildId\":\"666195\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.StageName\":\"Build\",\"System.PhaseAttempt\":\"1\",\"DefinitionName\":\"runtime-coreclr   jitstress-random\",\"architecture\":\"x64\"} | Schedule\r\n2024-05-05T19:21:23.754Z | runtime-coreclr jitstress-random | Checked-jitstress_random_1 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.JobAttempt\":\"1\",\"BuildNumber\":\"20240505.1\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"BuildId\":\"666195\",\"AzurePipelinesTestRunId\":\"16524242\",\"DefinitionName\":\"runtime-coreclr   jitstress-random\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"Reason\":\"Schedule\",\"configuration\":\"Checked-jitstress_random_1\",\"System.PhaseAttempt\":\"1\",\"DefinitionId\":\"159\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.StageName\":\"Build\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"Project\":\"public\",\"architecture\":\"x64\"} | Schedule\r\n2024-05-05T18:24:04.531Z | runtime-coreclr jitstress2-jitstressregs | Checked-jitstress2_jitstressregs0x80 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.StageName\":\"Build\",\"BuildId\":\"666175\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"BuildNumber\":\"20240505.1\",\"configuration\":\"Checked-jitstress2_jitstressregs0x80\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"DefinitionName\":\"runtime-coreclr   jitstress2-jitstressregs\",\"Project\":\"public\",\"Reason\":\"Schedule\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"AzurePipelinesTestRunId\":\"16523722\",\"System.JobAttempt\":\"1\",\"DefinitionId\":\"111\"} | Schedule\r\n2024-05-05T18:24:03.184Z | runtime-coreclr jitstress2-jitstressregs | Checked-jitstress2_jitstressregs0x2000 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"architecture\":\"x64\",\"DefinitionId\":\"111\",\"configuration\":\"Checked-jitstress2_jitstressregs0x2000\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"DefinitionName\":\"runtime-coreclr   jitstress2-jitstressregs\",\"Reason\":\"Schedule\",\"System.JobAttempt\":\"1\",\"BuildId\":\"666175\",\"System.PhaseAttempt\":\"1\",\"System.StageAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"BuildNumber\":\"20240505.1\",\"AzurePipelinesTestRunId\":\"16523730\",\"System.JobName\":\"__default\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\"} | Schedule\r\n2024-05-05T18:24:01.282Z | runtime-coreclr jitstress2-jitstressregs | Checked-jitstress2_jitstressregs8 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"DefinitionName\":\"runtime-coreclr   jitstress2-jitstressregs\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"architecture\":\"x64\",\"BuildNumber\":\"20240505.1\",\"BuildId\":\"666175\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\",\"DefinitionId\":\"111\",\"Reason\":\"Schedule\",\"AzurePipelinesTestRunId\":\"16523724\",\"configuration\":\"Checked-jitstress2_jitstressregs8\"} | Schedule\r\n2024-05-05T18:23:59.746Z | runtime-coreclr jitstress2-jitstressregs | Checked-jitstress2_jitstressregs2 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"16523728\",\"configuration\":\"Checked-jitstress2_jitstressregs2\",\"System.StageName\":\"Build\",\"BuildNumber\":\"20240505.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"666175\",\"Reason\":\"Schedule\",\"DefinitionName\":\"runtime-coreclr   jitstress2-jitstressregs\",\"Project\":\"public\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobName\":\"__default\",\"DefinitionId\":\"111\",\"System.JobAttempt\":\"1\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\"} | Schedule\r\n2024-05-05T18:23:57.921Z | runtime-coreclr jitstress2-jitstressregs | Checked-jitstress2_jitstressregs3 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"DefinitionName\":\"runtime-coreclr   jitstress2-jitstressregs\",\"DefinitionId\":\"111\",\"Project\":\"public\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"BuildId\":\"666175\",\"Reason\":\"Schedule\",\"AzurePipelinesTestRunId\":\"16523726\",\"System.JobName\":\"__default\",\"configuration\":\"Checked-jitstress2_jitstressregs3\",\"BuildNumber\":\"20240505.1\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\"} | Schedule\r\n2024-05-05T18:23:56.453Z | runtime-coreclr jitstress2-jitstressregs | Checked-jitstress2_jitstressregs1 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.JobAttempt\":\"1\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.StageName\":\"Build\",\"BuildNumber\":\"20240505.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"configuration\":\"Checked-jitstress2_jitstressregs1\",\"System.StageAttempt\":\"1\",\"BuildId\":\"666175\",\"DefinitionId\":\"111\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobName\":\"__default\",\"AzurePipelinesTestRunId\":\"16523714\",\"DefinitionName\":\"runtime-coreclr   jitstress2-jitstressregs\",\"Project\":\"public\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\"} | Schedule\r\n2024-05-05T18:23:54.983Z | runtime-coreclr jitstress2-jitstressregs | Checked-jitstress2_jitstressregs0x1000 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"AzurePipelinesTestRunId\":\"16523720\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"666175\",\"System.JobName\":\"__default\",\"System.PhaseAttempt\":\"1\",\"Reason\":\"Schedule\",\"System.StageAttempt\":\"1\",\"System.JobAttempt\":\"1\",\"Project\":\"public\",\"DefinitionName\":\"runtime-coreclr   jitstress2-jitstressregs\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress2_jitstressregs0x1000\",\"architecture\":\"x64\",\"BuildNumber\":\"20240505.1\",\"DefinitionId\":\"111\"} | Schedule\r\n2024-05-05T18:23:53.463Z | runtime-coreclr jitstress2-jitstressregs | Checked-jitstress2_jitstressregs0x10 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.StageAttempt\":\"1\",\"DefinitionId\":\"111\",\"System.PhaseAttempt\":\"1\",\"System.JobName\":\"__default\",\"System.StageName\":\"Build\",\"BuildId\":\"666175\",\"configuration\":\"Checked-jitstress2_jitstressregs0x10\",\"DefinitionName\":\"runtime-coreclr   jitstress2-jitstressregs\",\"System.JobAttempt\":\"1\",\"Project\":\"public\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"AzurePipelinesTestRunId\":\"16523718\",\"BuildNumber\":\"20240505.1\",\"architecture\":\"x64\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"Reason\":\"Schedule\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\"} | Schedule\r\n2024-05-05T18:23:52.046Z | runtime-coreclr jitstress2-jitstressregs | Checked-jitstress2_jitstressregs4 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"configuration\":\"Checked-jitstress2_jitstressregs4\",\"DefinitionName\":\"runtime-coreclr   jitstress2-jitstressregs\",\"BuildId\":\"666175\",\"System.JobName\":\"__default\",\"AzurePipelinesTestRunId\":\"16523716\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.PhaseAttempt\":\"1\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"System.StageAttempt\":\"1\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"Reason\":\"Schedule\",\"DefinitionId\":\"111\",\"BuildNumber\":\"20240505.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"Project\":\"public\",\"architecture\":\"x64\"} | Schedule\r\n2024-05-05T07:36:45.473Z | runtime-coreclr crossgen2-composite gcstress | Checked-gcstress0xc_disabler2r_jitstress2 | osx.1200.arm64.open | arm64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.PhaseAttempt\":\"1\",\"architecture\":\"arm64\",\"System.JobName\":\"__default\",\"AzurePipelinesTestRunId\":\"16516016\",\"System.PhaseName\":\"run_test_p1_Composite_osx_arm64_checked\",\"DefinitionId\":\"141\",\"System.JobAttempt\":\"1\",\"System.StageAttempt\":\"1\",\"configuration\":\"Checked-gcstress0xc_disabler2r_jitstress2\",\"System.StageName\":\"Build\",\"BuildId\":\"665927\",\"System.JobId\":\"4b5575ba-4f05-5198-bc88-a075c735caa5\",\"Reason\":\"Schedule\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"BuildNumber\":\"20240504.1\",\"Project\":\"public\",\"operatingSystem\":\"OSX.1200.ARM64.Open\",\"DefinitionName\":\"runtime-coreclr   crossgen2-composite gcstress\"} | Schedule\r\n2024-05-05T07:25:13.511Z | runtime-coreclr crossgen2-composite gcstress | Checked-gcstress0xc_disabler2r_jitstress2 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"BuildId\":\"665927\",\"System.JobName\":\"__default\",\"System.PhaseAttempt\":\"1\",\"System.PhaseName\":\"run_test_p1_Composite_linux_x64_checked\",\"System.StageName\":\"Build\",\"DefinitionId\":\"141\",\"BuildNumber\":\"20240504.1\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"Reason\":\"Schedule\",\"DefinitionName\":\"runtime-coreclr   crossgen2-composite   gcstress\",\"architecture\":\"x64\",\"System.JobId\":\"b01b9fd9-8de8-534a-70cd-a32a2dffddff\",\"AzurePipelinesTestRunId\":\"16515866\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-gcstress0xc_disabler2r_jitstress2\"} | Schedule\r\n2024-05-05T05:23:23.043Z | runtime-coreclr jitstress | Checked-jitstress2 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.StageName\":\"Build\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20240504.1\",\"System.StageAttempt\":\"1\",\"architecture\":\"x64\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"DefinitionName\":\"runtime-coreclr   jitstress\",\"System.JobAttempt\":\"1\",\"BuildId\":\"665914\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.PhaseAttempt\":\"1\",\"DefinitionId\":\"109\",\"configuration\":\"Checked-jitstress2\",\"Reason\":\"Schedule\",\"AzurePipelinesTestRunId\":\"16515340\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"Project\":\"public\"} | Schedule\r\n2024-05-05T05:23:21.689Z | runtime-coreclr jitstress | Checked-jitstress1_tiered | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"BuildNumber\":\"20240504.1\",\"configuration\":\"Checked-jitstress1_tiered\",\"Reason\":\"Schedule\",\"DefinitionName\":\"runtime-coreclr   jitstress\",\"DefinitionId\":\"109\",\"architecture\":\"x64\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"AzurePipelinesTestRunId\":\"16515342\",\"System.StageName\":\"Build\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"665914\",\"System.JobName\":\"__default\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.StageAttempt\":\"1\"} | Schedule\r\n2024-05-05T05:23:18.752Z | runtime-coreclr jitstress | Checked-jitstress1 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"DefinitionName\":\"runtime-coreclr   jitstress\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"System.PhaseAttempt\":\"1\",\"BuildNumber\":\"20240504.1\",\"AzurePipelinesTestRunId\":\"16515336\",\"System.JobName\":\"__default\",\"Reason\":\"Schedule\",\"Project\":\"public\",\"System.JobAttempt\":\"1\",\"System.StageAttempt\":\"1\",\"System.StageName\":\"Build\",\"architecture\":\"x64\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"DefinitionId\":\"109\",\"BuildId\":\"665914\",\"configuration\":\"Checked-jitstress1\"} | Schedule\r\n2024-05-05T05:23:17.345Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"BuildNumber\":\"20240504.1\",\"DefinitionId\":\"109\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"AzurePipelinesTestRunId\":\"16515338\",\"System.StageAttempt\":\"1\",\"BuildId\":\"665914\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"DefinitionName\":\"runtime-coreclr   jitstress\",\"System.JobName\":\"__default\",\"Project\":\"public\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"Reason\":\"Schedule\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"configuration\":\"Checked-jitstress2_tiered\",\"architecture\":\"x64\",\"System.StageName\":\"Build\",\"System.PhaseAttempt\":\"1\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2024-05-05T03:50:23.556Z | runtime-coreclr r2r-extra | Checked-jitstress2_tiered | osx.1200.arm64.open | arm64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"BuildId\":\"665904\",\"architecture\":\"arm64\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"System.JobName\":\"__default\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"AzurePipelinesTestRunId\":\"16514966\",\"operatingSystem\":\"OSX.1200.ARM64.Open\",\"System.StageName\":\"Build\",\"DefinitionId\":\"114\",\"BuildNumber\":\"20240504.1\",\"DefinitionName\":\"runtime-coreclr   r2r-extra\",\"System.PhaseName\":\"run_test_p1_R2R_osx_arm64_checked\",\"System.JobAttempt\":\"1\",\"Project\":\"public\",\"Reason\":\"Schedule\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.JobId\":\"99f15f99-448d-5593-a271-dbdf553789a6\"} | Schedule\r\n2024-05-05T03:50:18.934Z | runtime-coreclr r2r-extra | Checked-jitstress1_tiered | osx.1200.arm64.open | arm64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"DefinitionId\":\"114\",\"BuildId\":\"665904\",\"System.StageName\":\"Build\",\"System.JobAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"architecture\":\"arm64\",\"operatingSystem\":\"OSX.1200.ARM64.Open\",\"Project\":\"public\",\"AzurePipelinesTestRunId\":\"16514972\",\"System.PhaseAttempt\":\"1\",\"DefinitionName\":\"runtime-coreclr   r2r-extra\",\"System.PhaseName\":\"run_test_p1_R2R_osx_arm64_checked\",\"System.StageAttempt\":\"1\",\"BuildNumber\":\"20240504.1\",\"System.JobName\":\"__default\",\"configuration\":\"Checked-jitstress1_tiered\",\"Reason\":\"Schedule\",\"System.JobId\":\"99f15f99-448d-5593-a271-dbdf553789a6\"} | Schedule\r\n2024-05-05T03:29:30.498Z | runtime-coreclr r2r-extra | Checked-jitstress1_tiered | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.JobId\":\"45a39349-90d5-51c8-4429-a48b2907fbdd\",\"System.JobAttempt\":\"1\",\"Project\":\"public\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"BuildNumber\":\"20240504.1\",\"architecture\":\"x64\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"AzurePipelinesTestRunId\":\"16514726\",\"Reason\":\"Schedule\",\"System.JobName\":\"__default\",\"DefinitionName\":\"runtime-coreclr   r2r-extra\",\"System.StageName\":\"Build\",\"BuildId\":\"665904\",\"configuration\":\"Checked-jitstress1_tiered\",\"DefinitionId\":\"114\",\"System.PhaseAttempt\":\"1\",\"System.StageAttempt\":\"1\",\"System.PhaseName\":\"run_test_p1_R2R_linux_x64_checked\"} | Schedule\r\n2024-05-05T03:29:14.895Z | runtime-coreclr r2r-extra | Checked-jitstress2_tiered | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"AzurePipelinesTestRunId\":\"16514730\",\"System.JobName\":\"__default\",\"BuildId\":\"665904\",\"DefinitionName\":\"runtime-coreclr   r2r-extra\",\"Project\":\"public\",\"System.JobId\":\"45a39349-90d5-51c8-4429-a48b2907fbdd\",\"System.PhaseAttempt\":\"1\",\"System.StageAttempt\":\"1\",\"DefinitionId\":\"114\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress2_tiered\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\",\"BuildNumber\":\"20240504.1\",\"System.PhaseName\":\"run_test_p1_R2R_linux_x64_checked\"} | Schedule\r\n2024-05-04T22:47:34.982Z | runtime-coreclr gcstress-extra | Checked-gcstress0xc_disabler2r_jitstress2 | osx.1200.arm64.open | arm64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"operatingSystem\":\"OSX.1200.ARM64.Open\",\"Reason\":\"Schedule\",\"System.StageName\":\"Build\",\"DefinitionName\":\"runtime-coreclr   gcstress-extra\",\"BuildId\":\"665830\",\"architecture\":\"arm64\",\"Project\":\"public\",\"AzurePipelinesTestRunId\":\"16513548\",\"System.JobId\":\"765fd5e9-e47f-5cb0-4cbf-499eaaaee93e\",\"System.JobName\":\"__default\",\"DefinitionId\":\"113\",\"configuration\":\"Checked-gcstress0xc_disabler2r_jitstress2\",\"System.PhaseName\":\"run_test_p1__osx_arm64_checked\",\"System.StageAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"BuildNumber\":\"20240504.1\",\"System.PhaseAttempt\":\"1\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2024-05-04T22:47:33.479Z | runtime-coreclr gcstress-extra | Checked-gcstress0xc_jitstress1 | osx.1200.arm64.open | arm64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.PhaseAttempt\":\"1\",\"operatingSystem\":\"OSX.1200.ARM64.Open\",\"DefinitionId\":\"113\",\"System.StageAttempt\":\"1\",\"System.StageName\":\"Build\",\"BuildId\":\"665830\",\"DefinitionName\":\"runtime-coreclr   gcstress-extra\",\"BuildNumber\":\"20240504.1\",\"architecture\":\"arm64\",\"configuration\":\"Checked-gcstress0xc_jitstress1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"Project\":\"public\",\"Reason\":\"Schedule\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"765fd5e9-e47f-5cb0-4cbf-499eaaaee93e\",\"AzurePipelinesTestRunId\":\"16513556\",\"System.JobName\":\"__default\",\"System.PhaseName\":\"run_test_p1__osx_arm64_checked\"} | Schedule\r\n2024-05-04T22:47:27.82Z | runtime-coreclr gcstress-extra | Checked-gcstress0xc_jitstress2 | osx.1200.arm64.open | arm64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"DefinitionId\":\"113\",\"configuration\":\"Checked-gcstress0xc_jitstress2\",\"architecture\":\"arm64\",\"System.PhaseAttempt\":\"1\",\"System.PhaseName\":\"run_test_p1__osx_arm64_checked\",\"Project\":\"public\",\"AzurePipelinesTestRunId\":\"16513558\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\",\"DefinitionName\":\"runtime-coreclr   gcstress-extra\",\"System.JobId\":\"765fd5e9-e47f-5cb0-4cbf-499eaaaee93e\",\"System.StageName\":\"Build\",\"System.StageAttempt\":\"1\",\"BuildNumber\":\"20240504.1\",\"System.JobName\":\"__default\",\"Reason\":\"Schedule\",\"operatingSystem\":\"OSX.1200.ARM64.Open\",\"BuildId\":\"665830\"} | Schedule\r\n2024-05-04T22:25:03.188Z | runtime-coreclr gcstress-extra | Checked-gcstress0xc_jitstress1 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"architecture\":\"x64\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"BuildNumber\":\"20240504.1\",\"configuration\":\"Checked-gcstress0xc_jitstress1\",\"DefinitionId\":\"113\",\"System.StageAttempt\":\"1\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"Reason\":\"Schedule\",\"Project\":\"public\",\"BuildId\":\"665830\",\"AzurePipelinesTestRunId\":\"16513434\",\"System.JobAttempt\":\"1\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"DefinitionName\":\"runtime-coreclr   gcstress-extra\",\"System.PhaseAttempt\":\"1\",\"System.StageName\":\"Build\",\"System.JobName\":\"__default\"} | Schedule\r\n2024-05-04T22:25:00.173Z | runtime-coreclr gcstress-extra | Checked-gcstress0xc_disabler2r_jitstress2 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"DefinitionName\":\"runtime-coreclr   gcstress-extra\",\"System.JobAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageName\":\"Build\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"architecture\":\"x64\",\"DefinitionId\":\"113\",\"BuildNumber\":\"20240504.1\",\"Reason\":\"Schedule\",\"System.StageAttempt\":\"1\",\"configuration\":\"Checked-gcstress0xc_disabler2r_jitstress2\",\"Project\":\"public\",\"AzurePipelinesTestRunId\":\"16513444\",\"BuildId\":\"665830\"} | Schedule\r\n2024-05-04T22:24:57.165Z | runtime-coreclr gcstress-extra | Checked-gcstress0xc_jitstress2 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"DefinitionName\":\"runtime-coreclr   gcstress-extra\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"DefinitionId\":\"113\",\"Reason\":\"Schedule\",\"AzurePipelinesTestRunId\":\"16513446\",\"System.StageAttempt\":\"1\",\"BuildNumber\":\"20240504.1\",\"BuildId\":\"665830\",\"configuration\":\"Checked-gcstress0xc_jitstress2\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.JobName\":\"__default\",\"System.StageName\":\"Build\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\"} | Schedule\r\n2024-05-04T21:29:31.966Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_2_x86_nossse3 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageName\":\"Build\",\"System.StageAttempt\":\"1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"System.PhaseAttempt\":\"1\",\"BuildNumber\":\"20240504.1\",\"configuration\":\"Checked-jitstress_isas_2_x86_nossse3\",\"BuildId\":\"665757\",\"DefinitionId\":\"115\",\"Reason\":\"Schedule\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"Project\":\"public\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"16513136\",\"architecture\":\"x64\"} | Schedule\r\n2024-05-04T21:28:50.478Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_2_x86_nosse42 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"Project\":\"public\",\"configuration\":\"Checked-jitstress_isas_2_x86_nosse42\",\"System.StageName\":\"Build\",\"BuildId\":\"665757\",\"System.JobName\":\"__default\",\"DefinitionId\":\"115\",\"System.PhaseAttempt\":\"1\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"16513126\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"System.StageAttempt\":\"1\",\"BuildNumber\":\"20240504.1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\"} | Schedule\r\n2024-05-04T21:28:31.425Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_2_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.JobName\":\"__default\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"AzurePipelinesTestRunId\":\"16513124\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"BuildNumber\":\"20240504.1\",\"System.StageName\":\"Build\",\"Project\":\"public\",\"BuildId\":\"665757\",\"System.JobAttempt\":\"1\",\"DefinitionId\":\"115\",\"Reason\":\"Schedule\",\"System.StageAttempt\":\"1\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"architecture\":\"x64\",\"configuration\":\"Checked-jitstress_isas_2_x86_nosse41\",\"System.PhaseAttempt\":\"1\"} | Schedule\r\n2024-05-04T21:27:31.21Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_2_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"architecture\":\"x64\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"BuildId\":\"665757\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"System.JobName\":\"__default\",\"Reason\":\"Schedule\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_2_x86_nosse3_4\",\"System.PhaseAttempt\":\"1\",\"DefinitionId\":\"115\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"System.StageAttempt\":\"1\",\"System.JobAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"16513120\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"BuildNumber\":\"20240504.1\",\"Project\":\"public\"} | Schedule\r\n2024-05-04T21:01:37.259Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nopclmulqdq | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"architecture\":\"x64\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"Project\":\"public\",\"AzurePipelinesTestRunId\":\"16512600\",\"Reason\":\"Schedule\",\"System.JobAttempt\":\"1\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"BuildNumber\":\"20240504.1\",\"BuildId\":\"665757\",\"System.PhaseAttempt\":\"1\",\"configuration\":\"Checked-jitstress_isas_1_x86_nopclmulqdq\"} | Schedule\r\n2024-05-04T21:01:32.755Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_noaes | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"configuration\":\"Checked-jitstress_isas_1_x86_noaes\",\"AzurePipelinesTestRunId\":\"16512576\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"architecture\":\"x64\",\"DefinitionId\":\"115\",\"Reason\":\"Schedule\",\"BuildId\":\"665757\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"Project\":\"public\",\"System.JobName\":\"__default\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"System.PhaseAttempt\":\"1\",\"BuildNumber\":\"20240504.1\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.StageAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\"} | Schedule\r\n2024-05-04T21:01:28.211Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nobmi2 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"architecture\":\"x64\",\"System.PhaseAttempt\":\"1\",\"System.StageName\":\"Build\",\"System.JobName\":\"__default\",\"Reason\":\"Schedule\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"BuildNumber\":\"20240504.1\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"AzurePipelinesTestRunId\":\"16512594\",\"Project\":\"public\",\"System.StageAttempt\":\"1\",\"System.JobAttempt\":\"1\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"BuildId\":\"665757\",\"configuration\":\"Checked-jitstress_isas_1_x86_nobmi2\",\"DefinitionId\":\"115\"} | Schedule\r\n2024-05-04T21:01:26.552Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nolzcnt | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"configuration\":\"Checked-jitstress_isas_1_x86_nolzcnt\",\"BuildId\":\"665757\",\"architecture\":\"x64\",\"Project\":\"public\",\"System.PhaseAttempt\":\"1\",\"Reason\":\"Schedule\",\"System.StageName\":\"Build\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"AzurePipelinesTestRunId\":\"16512598\",\"DefinitionId\":\"115\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"System.StageAttempt\":\"1\",\"System.JobAttempt\":\"1\",\"BuildNumber\":\"20240504.1\",\"System.JobName\":\"__default\"} | Schedule\r\n2024-05-04T21:01:25.051Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_noavx2 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.StageName\":\"Build\",\"System.StageAttempt\":\"1\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"BuildId\":\"665757\",\"AzurePipelinesTestRunId\":\"16512602\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"configuration\":\"Checked-jitstress_isas_1_x86_noavx2\",\"System.JobAttempt\":\"1\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20240504.1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"Project\":\"public\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"DefinitionId\":\"115\",\"System.PhaseAttempt\":\"1\"} | Schedule\r\n2024-05-04T21:01:23.457Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_2_x86_nobmi2 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.JobName\":\"__default\",\"AzurePipelinesTestRunId\":\"16512588\",\"System.StageName\":\"Build\",\"System.JobAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"BuildId\":\"665757\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"architecture\":\"x64\",\"BuildNumber\":\"20240504.1\",\"configuration\":\"Checked-jitstress_isas_2_x86_nobmi2\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"DefinitionId\":\"115\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"Reason\":\"Schedule\",\"Project\":\"public\",\"System.StageAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\"} | Schedule\r\n2024-05-04T21:01:21.878Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nohwintrinsic | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"Reason\":\"Schedule\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"DefinitionId\":\"115\",\"AzurePipelinesTestRunId\":\"16512572\",\"configuration\":\"Checked-jitstress_isas_1_x86_nohwintrinsic\",\"System.StageName\":\"Build\",\"BuildId\":\"665757\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.StageAttempt\":\"1\",\"System.JobAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"System.JobName\":\"__default\",\"Project\":\"public\",\"architecture\":\"x64\",\"BuildNumber\":\"20240504.1\"} | Schedule\r\n2024-05-04T21:01:19.011Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_2_x86_noavx512 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.StageAttempt\":\"1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"System.JobAttempt\":\"1\",\"System.JobName\":\"__default\",\"AzurePipelinesTestRunId\":\"16512564\",\"BuildId\":\"665757\",\"configuration\":\"Checked-jitstress_isas_2_x86_noavx512\",\"DefinitionId\":\"115\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.PhaseAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"BuildNumber\":\"20240504.1\",\"Project\":\"public\"} | Schedule\r\n2024-05-04T21:01:17.808Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_2_x86_nofma | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"Reason\":\"Schedule\",\"BuildId\":\"665757\",\"System.StageAttempt\":\"1\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"AzurePipelinesTestRunId\":\"16512570\",\"BuildNumber\":\"20240504.1\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_2_x86_nofma\",\"architecture\":\"x64\",\"DefinitionId\":\"115\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobName\":\"__default\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\"} | Schedule\r\n2024-05-04T21:01:15.179Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_2_x86_nosse3 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"Project\":\"public\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.PhaseAttempt\":\"1\",\"configuration\":\"Checked-jitstress_isas_2_x86_nosse3\",\"BuildId\":\"665757\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20240504.1\",\"architecture\":\"x64\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"16512586\",\"DefinitionId\":\"115\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\"} | Schedule\r\n2024-05-04T21:01:12.355Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.JobName\":\"__default\",\"BuildId\":\"665757\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse3_4\",\"System.StageAttempt\":\"1\",\"System.StageName\":\"Build\",\"System.PhaseAttempt\":\"1\",\"Reason\":\"Schedule\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"AzurePipelinesTestRunId\":\"16512556\",\"architecture\":\"x64\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"DefinitionId\":\"115\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"BuildNumber\":\"20240504.1\"} | Schedule\r\n2024-05-04T21:01:10.703Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.StageName\":\"Build\",\"BuildId\":\"665757\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.StageAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"AzurePipelinesTestRunId\":\"16512574\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"DefinitionId\":\"115\",\"architecture\":\"x64\",\"System.JobName\":\"__default\",\"System.JobAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"BuildNumber\":\"20240504.1\",\"Reason\":\"Schedule\",\"Project\":\"public\"} | Schedule\r\n2024-05-04T21:01:08.08Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_noavx | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"AzurePipelinesTestRunId\":\"16512544\",\"System.StageAttempt\":\"1\",\"System.JobAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"architecture\":\"x64\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"System.PhaseAttempt\":\"1\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20240504.1\",\"Reason\":\"Schedule\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"configuration\":\"Checked-jitstress_isas_1_x86_noavx\",\"BuildId\":\"665757\",\"DefinitionId\":\"115\"} | Schedule\r\n2024-05-04T21:01:02.971Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_2_x86_noavx | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"BuildId\":\"665757\",\"System.JobAttempt\":\"1\",\"Reason\":\"Schedule\",\"configuration\":\"Checked-jitstress_isas_2_x86_noavx\",\"AzurePipelinesTestRunId\":\"16512566\",\"Project\":\"public\",\"System.PhaseAttempt\":\"1\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"DefinitionId\":\"115\",\"System.StageAttempt\":\"1\",\"BuildNumber\":\"20240504.1\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"architecture\":\"x64\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"System.StageName\":\"Build\",\"System.JobName\":\"__default\"} | Schedule\r\n2024-05-04T21:01:01.511Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_2_x86_noavx2 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.PhaseAttempt\":\"1\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_2_x86_noavx2\",\"BuildNumber\":\"20240504.1\",\"System.JobName\":\"__default\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\",\"BuildId\":\"665757\",\"System.StageAttempt\":\"1\",\"Reason\":\"Schedule\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"AzurePipelinesTestRunId\":\"16512552\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"Project\":\"public\",\"DefinitionId\":\"115\"} | Schedule\r\n2024-05-04T21:01:00.266Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"System.JobAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.StageAttempt\":\"1\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"BuildNumber\":\"20240504.1\",\"System.PhaseAttempt\":\"1\",\"architecture\":\"x64\",\"System.StageName\":\"Build\",\"Project\":\"public\",\"AzurePipelinesTestRunId\":\"16512560\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"BuildId\":\"665757\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse\",\"Reason\":\"Schedule\"} | Schedule\r\n2024-05-04T21:00:58.734Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nossse3 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"Reason\":\"Schedule\",\"configuration\":\"Checked-jitstress_isas_1_x86_nossse3\",\"System.PhaseAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"Project\":\"public\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"System.StageAttempt\":\"1\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"AzurePipelinesTestRunId\":\"16512592\",\"BuildNumber\":\"20240504.1\",\"architecture\":\"x64\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"BuildId\":\"665757\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2024-05-04T21:00:57.267Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_2_x86_nosse2 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.JobName\":\"__default\",\"configuration\":\"Checked-jitstress_isas_2_x86_nosse2\",\"System.JobAttempt\":\"1\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"DefinitionId\":\"115\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"16512512\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"Reason\":\"Schedule\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"BuildNumber\":\"20240504.1\",\"architecture\":\"x64\",\"BuildId\":\"665757\"} | Schedule\r\n2024-05-04T21:00:51.399Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nobmi1 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.JobAttempt\":\"1\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"BuildNumber\":\"20240504.1\",\"BuildId\":\"665757\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"System.PhaseAttempt\":\"1\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.StageAttempt\":\"1\",\"System.JobName\":\"__default\",\"AzurePipelinesTestRunId\":\"16512542\",\"DefinitionId\":\"115\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"architecture\":\"x64\",\"Reason\":\"Schedule\",\"configuration\":\"Checked-jitstress_isas_1_x86_nobmi1\"} | Schedule\r\n2024-05-04T21:00:49.89Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_2_x86_nobmi1 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"Project\":\"public\",\"configuration\":\"Checked-jitstress_isas_2_x86_nobmi1\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"System.JobName\":\"__default\",\"AzurePipelinesTestRunId\":\"16512516\",\"BuildId\":\"665757\",\"BuildNumber\":\"20240504.1\",\"System.JobAttempt\":\"1\",\"System.StageAttempt\":\"1\",\"architecture\":\"x64\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.StageName\":\"Build\",\"System.PhaseAttempt\":\"1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"Reason\":\"Schedule\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"DefinitionId\":\"115\"} | Schedule\r\n2024-05-04T21:00:48.53Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse3 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"DefinitionId\":\"115\",\"System.JobAttempt\":\"1\",\"Reason\":\"Schedule\",\"AzurePipelinesTestRunId\":\"16512504\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse3\",\"System.StageName\":\"Build\",\"System.StageAttempt\":\"1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"System.JobName\":\"__default\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.PhaseAttempt\":\"1\",\"BuildId\":\"665757\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"architecture\":\"x64\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"BuildNumber\":\"20240504.1\",\"Project\":\"public\"} | Schedule\r\n2024-05-04T21:00:46.952Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_2_x86_nolzcnt | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"AzurePipelinesTestRunId\":\"16512526\",\"Reason\":\"Schedule\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"BuildNumber\":\"20240504.1\",\"configuration\":\"Checked-jitstress_isas_2_x86_nolzcnt\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"BuildId\":\"665757\",\"Project\":\"public\",\"System.PhaseAttempt\":\"1\",\"System.JobName\":\"__default\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.StageAttempt\":\"1\"} | Schedule\r\n2024-05-04T21:00:45.373Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_2_x86_nohwintrinsic | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"Reason\":\"Schedule\",\"System.StageAttempt\":\"1\",\"BuildNumber\":\"20240504.1\",\"AzurePipelinesTestRunId\":\"16512550\",\"architecture\":\"x64\",\"System.PhaseAttempt\":\"1\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"BuildId\":\"665757\",\"Project\":\"public\",\"DefinitionId\":\"115\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.StageName\":\"Build\",\"System.JobName\":\"__default\",\"System.JobAttempt\":\"1\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"configuration\":\"Checked-jitstress_isas_2_x86_nohwintrinsic\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\"} | Schedule\r\n2024-05-04T21:00:42.467Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_2_x86_nosse | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\",\"BuildId\":\"665757\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"BuildNumber\":\"20240504.1\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"configuration\":\"Checked-jitstress_isas_2_x86_nosse\",\"System.JobName\":\"__default\",\"architecture\":\"x64\",\"Reason\":\"Schedule\",\"Project\":\"public\",\"AzurePipelinesTestRunId\":\"16512530\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"System.PhaseAttempt\":\"1\",\"DefinitionId\":\"115\",\"System.StageAttempt\":\"1\",\"System.StageName\":\"Build\"} | Schedule\r\n2024-05-04T21:00:40.919Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nopopcnt | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"BuildNumber\":\"20240504.1\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"BuildId\":\"665757\",\"configuration\":\"Checked-jitstress_isas_1_x86_nopopcnt\",\"System.JobName\":\"__default\",\"Project\":\"public\",\"Reason\":\"Schedule\",\"AzurePipelinesTestRunId\":\"16512522\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"System.JobAttempt\":\"1\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"DefinitionId\":\"115\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.StageName\":\"Build\"} | Schedule\r\n2024-05-04T21:00:32.215Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_noavx512 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"BuildId\":\"665757\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"AzurePipelinesTestRunId\":\"16512524\",\"System.StageAttempt\":\"1\",\"BuildNumber\":\"20240504.1\",\"System.JobName\":\"__default\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"Reason\":\"Schedule\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"DefinitionId\":\"115\",\"System.PhaseAttempt\":\"1\",\"System.StageName\":\"Build\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"Project\":\"public\",\"configuration\":\"Checked-jitstress_isas_1_x86_noavx512\"} | Schedule\r\n2024-05-04T21:00:30.733Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse42 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"architecture\":\"x64\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse42\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"Reason\":\"Schedule\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"AzurePipelinesTestRunId\":\"16512502\",\"BuildId\":\"665757\",\"System.JobName\":\"__default\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.PhaseAttempt\":\"1\",\"System.StageAttempt\":\"1\",\"BuildNumber\":\"20240504.1\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"System.JobAttempt\":\"1\",\"DefinitionId\":\"115\"} | Schedule\r\n2024-05-04T21:00:29.379Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse2 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.JobAttempt\":\"1\",\"BuildNumber\":\"20240504.1\",\"System.PhaseAttempt\":\"1\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse2\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"Project\":\"public\",\"Reason\":\"Schedule\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.StageAttempt\":\"1\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobName\":\"__default\",\"System.StageName\":\"Build\",\"BuildId\":\"665757\",\"architecture\":\"x64\",\"AzurePipelinesTestRunId\":\"16512506\"} | Schedule\r\n2024-05-04T21:00:26.176Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_2_x86_nopopcnt | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.StageAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseAttempt\":\"1\",\"DefinitionId\":\"115\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"AzurePipelinesTestRunId\":\"16512508\",\"System.JobName\":\"__default\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"configuration\":\"Checked-jitstress_isas_2_x86_nopopcnt\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"Reason\":\"Schedule\",\"System.StageName\":\"Build\",\"System.JobAttempt\":\"1\",\"architecture\":\"x64\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildNumber\":\"20240504.1\",\"Project\":\"public\",\"BuildId\":\"665757\"} | Schedule\r\n2024-05-04T21:00:22.863Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_2_x86_noaes | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.JobAttempt\":\"1\",\"architecture\":\"x64\",\"System.PhaseAttempt\":\"1\",\"System.StageAttempt\":\"1\",\"BuildId\":\"665757\",\"configuration\":\"Checked-jitstress_isas_2_x86_noaes\",\"System.StageName\":\"Build\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"DefinitionId\":\"115\",\"BuildNumber\":\"20240504.1\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"AzurePipelinesTestRunId\":\"16512500\",\"Project\":\"public\",\"System.JobName\":\"__default\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"Reason\":\"Schedule\"} | Schedule\r\n2024-05-04T21:00:18.816Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_2_x86_nopclmulqdq | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.StageName\":\"Build\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"System.JobAttempt\":\"1\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.StageAttempt\":\"1\",\"Reason\":\"Schedule\",\"DefinitionId\":\"115\",\"BuildId\":\"665757\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"AzurePipelinesTestRunId\":\"16512498\",\"architecture\":\"x64\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.PhaseAttempt\":\"1\",\"System.JobName\":\"__default\",\"configuration\":\"Checked-jitstress_isas_2_x86_nopclmulqdq\",\"Project\":\"public\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"BuildNumber\":\"20240504.1\"} | Schedule\r\n2024-05-04T21:00:17.263Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nofma | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"BuildNumber\":\"20240504.1\",\"Project\":\"public\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.StageAttempt\":\"1\",\"configuration\":\"Checked-jitstress_isas_1_x86_nofma\",\"Reason\":\"Schedule\",\"BuildId\":\"665757\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageName\":\"Build\",\"architecture\":\"x64\",\"DefinitionName\":\"runtime-coreclr   jitstress-isas-x86\",\"System.JobAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"16512514\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"DefinitionId\":\"115\",\"System.PhaseAttempt\":\"1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\"} | Schedule\r\n2024-05-04T18:24:51.244Z | runtime-coreclr jitstress2-jitstressregs | Checked-jitstress2_jitstressregs0x80 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"BuildId\":\"665686\",\"Reason\":\"Schedule\",\"System.StageName\":\"Build\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobAttempt\":\"1\",\"BuildNumber\":\"20240504.1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.PhaseAttempt\":\"1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"architecture\":\"x64\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"16511542\",\"DefinitionId\":\"111\",\"DefinitionName\":\"runtime-coreclr   jitstress2-jitstressregs\",\"configuration\":\"Checked-jitstress2_jitstressregs0x80\"} | Schedule\r\n2024-05-04T18:24:49.807Z | runtime-coreclr jitstress2-jitstressregs | Checked-jitstress2_jitstressregs8 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.PhaseAttempt\":\"1\",\"System.JobAttempt\":\"1\",\"DefinitionName\":\"runtime-coreclr   jitstress2-jitstressregs\",\"System.StageAttempt\":\"1\",\"DefinitionId\":\"111\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"BuildNumber\":\"20240504.1\",\"architecture\":\"x64\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress2_jitstressregs8\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"BuildId\":\"665686\",\"AzurePipelinesTestRunId\":\"16511550\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"Reason\":\"Schedule\",\"Project\":\"public\"} | Schedule\r\n2024-05-04T18:24:48.244Z | runtime-coreclr jitstress2-jitstressregs | Checked-jitstress2_jitstressregs0x1000 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"Reason\":\"Schedule\",\"configuration\":\"Checked-jitstress2_jitstressregs0x1000\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"AzurePipelinesTestRunId\":\"16511540\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"DefinitionName\":\"runtime-coreclr   jitstress2-jitstressregs\",\"System.StageAttempt\":\"1\",\"System.StageName\":\"Build\",\"architecture\":\"x64\",\"BuildId\":\"665686\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.PhaseAttempt\":\"1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"System.JobName\":\"__default\",\"DefinitionId\":\"111\",\"System.JobAttempt\":\"1\",\"BuildNumber\":\"20240504.1\"} | Schedule\r\n2024-05-04T18:24:46.915Z | runtime-coreclr jitstress2-jitstressregs | Checked-jitstress2_jitstressregs0x10 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"System.JobAttempt\":\"1\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"AzurePipelinesTestRunId\":\"16511554\",\"DefinitionId\":\"111\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"configuration\":\"Checked-jitstress2_jitstressregs0x10\",\"Project\":\"public\",\"System.StageAttempt\":\"1\",\"System.JobName\":\"__default\",\"DefinitionName\":\"runtime-coreclr   jitstress2-jitstressregs\",\"BuildNumber\":\"20240504.1\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"BuildId\":\"665686\",\"System.StageName\":\"Build\"} | Schedule\r\n2024-05-04T18:24:45.479Z | runtime-coreclr jitstress2-jitstressregs | Checked-jitstress2_jitstressregs2 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"Reason\":\"Schedule\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"Project\":\"public\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.StageAttempt\":\"1\",\"DefinitionId\":\"111\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"16511544\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\",\"DefinitionName\":\"runtime-coreclr   jitstress2-jitstressregs\",\"BuildId\":\"665686\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.StageName\":\"Build\",\"BuildNumber\":\"20240504.1\",\"System.JobName\":\"__default\",\"configuration\":\"Checked-jitstress2_jitstressregs2\",\"architecture\":\"x64\"} | Schedule\r\n2024-05-04T18:24:43.947Z | runtime-coreclr jitstress2-jitstressregs | Checked-jitstress2_jitstressregs4 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"AzurePipelinesTestRunId\":\"16511552\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"DefinitionId\":\"111\",\"System.StageName\":\"Build\",\"System.JobAttempt\":\"1\",\"configuration\":\"Checked-jitstress2_jitstressregs4\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"Reason\":\"Schedule\",\"DefinitionName\":\"runtime-coreclr   jitstress2-jitstressregs\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20240504.1\",\"architecture\":\"x64\",\"BuildId\":\"665686\"} | Schedule\r\n2024-05-04T18:24:42.243Z | runtime-coreclr jitstress2-jitstressregs | Checked-jitstress2_jitstressregs1 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"configuration\":\"Checked-jitstress2_jitstressregs1\",\"System.JobAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.StageName\":\"Build\",\"System.JobName\":\"__default\",\"AzurePipelinesTestRunId\":\"16511538\",\"BuildId\":\"665686\",\"BuildNumber\":\"20240504.1\",\"Reason\":\"Schedule\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"DefinitionId\":\"111\",\"architecture\":\"x64\",\"System.PhaseAttempt\":\"1\",\"DefinitionName\":\"runtime-coreclr   jitstress2-jitstressregs\"} | Schedule\r\n2024-05-04T18:24:40.774Z | runtime-coreclr jitstress2-jitstressregs | Checked-jitstress2_jitstressregs3 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress2_jitstressregs3\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildNumber\":\"20240504.1\",\"System.JobName\":\"__default\",\"System.JobAttempt\":\"1\",\"BuildId\":\"665686\",\"DefinitionName\":\"runtime-coreclr   jitstress2-jitstressregs\",\"System.StageAttempt\":\"1\",\"DefinitionId\":\"111\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"AzurePipelinesTestRunId\":\"16511548\",\"architecture\":\"x64\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\"} | Schedule\r\n2024-05-04T18:24:39.166Z | runtime-coreclr jitstress2-jitstressregs | Checked-jitstress2_jitstressregs0x2000 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"AzurePipelinesTestRunId\":\"16511546\",\"architecture\":\"x64\",\"System.PhaseAttempt\":\"1\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.StageName\":\"Build\",\"System.JobName\":\"__default\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"BuildNumber\":\"20240504.1\",\"BuildId\":\"665686\",\"DefinitionId\":\"111\",\"configuration\":\"Checked-jitstress2_jitstressregs0x2000\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.StageAttempt\":\"1\",\"Reason\":\"Schedule\",\"DefinitionName\":\"runtime-coreclr   jitstress2-jitstressregs\"} | Schedule\r\n2024-05-04T05:26:23.627Z | runtime-coreclr jitstress | Checked-jitstress2 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"architecture\":\"x64\",\"Project\":\"public\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.StageAttempt\":\"1\",\"DefinitionName\":\"runtime-coreclr   jitstress\",\"BuildNumber\":\"20240503.1\",\"System.PhaseAttempt\":\"1\",\"Reason\":\"Schedule\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"System.StageName\":\"Build\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"BuildId\":\"665438\",\"configuration\":\"Checked-jitstress2\",\"System.JobName\":\"__default\",\"AzurePipelinesTestRunId\":\"16503820\"} | Schedule\r\n2024-05-04T05:26:21.923Z | runtime-coreclr jitstress | Checked-jitstress1_tiered | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"architecture\":\"x64\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"AzurePipelinesTestRunId\":\"16503818\",\"System.PhaseAttempt\":\"1\",\"BuildId\":\"665438\",\"DefinitionId\":\"109\",\"System.JobName\":\"__default\",\"Reason\":\"Schedule\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"Project\":\"public\",\"DefinitionName\":\"runtime-coreclr   jitstress\",\"System.JobAttempt\":\"1\",\"System.StageAttempt\":\"1\",\"configuration\":\"Checked-jitstress1_tiered\",\"BuildNumber\":\"20240503.1\",\"System.StageName\":\"Build\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\"} | Schedule\r\n2024-05-04T05:26:18.658Z | runtime-coreclr jitstress | Checked-jitstress1 | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.JobName\":\"__default\",\"AzurePipelinesTestRunId\":\"16503822\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobAttempt\":\"1\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.StageAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"Project\":\"public\",\"DefinitionId\":\"109\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"665438\",\"System.StageName\":\"Build\",\"DefinitionName\":\"runtime-coreclr   jitstress\",\"BuildNumber\":\"20240503.1\",\"System.PhaseAttempt\":\"1\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"configuration\":\"Checked-jitstress1\"} | Schedule\r\n2024-05-04T05:26:13.779Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | ubuntu.2204.amd64.open.rt | x64 | ilasm/PortablePdb/IlasmPortablePdbTests/IlasmPortablePdbTests.sh | Failed | {\"System.StageName\":\"Build\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"DefinitionId\":\"109\",\"DefinitionName\":\"runtime-coreclr   jitstress\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"architecture\":\"x64\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"BuildId\":\"665438\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"AzurePipelinesTestRunId\":\"16503824\",\"System.PhaseAttempt\":\"1\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.JobAttempt\":\"1\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"System.JobName\":\"__default\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20240503.1\"} | Schedule\r\n\u003c/details\u003e\r\n\r\n\r\n\r\n",
                                           "updatedAt":  "2024-05-27T01:17:15Z"
                                       }
                                   ],
                         "totalCount":  10
                     },
        "title":  "An error occurred trying to start process \u0027llvm-symbolizer\u0027",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/91977",
        "createdAt":  "2023-09-13T01:15:53Z",
        "number":  91977,
        "author":  "v-wenyuxu",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-08-22T15:43:51Z",
        "body":  "**Failed in:** [runtime-coreclr jitstress-isas-x86 20230912.1](https://dev.azure.com/dnceng-public/public/_build/results?buildId=403680\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=8745482\u0026resultId=117722\u0026paneView=debug)\r\n\r\n**Failed tests:**\r\n```\r\ncoreclr osx x64 Checked jitstress_isas_1_x86_noavx @ OSX.1200.Amd64.Open\r\n    - baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh\r\n```\r\n\r\n**Error message:**\r\n```\r\nTest Infrastructure Failure: System.IO.IOException: No space left on device : \u0027/tmp/helix/working/A62408D3/w/BC2F0A1E/uploads/Reports/baseservices.TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.output.txt\u0027\r\n   at System.IO.RandomAccess.WriteAtOffset(SafeFileHandle handle, ReadOnlySpan`1 buffer, Int64 fileOffset)\r\n   at System.IO.Strategies.OSFileStreamStrategy.Write(ReadOnlySpan`1 buffer)\r\n   at System.IO.Strategies.BufferedFileStreamStrategy.Dispose(Boolean disposing)\r\n   at System.IO.StreamWriter.CloseStreamFromDispose(Boolean disposing)\r\n   at System.IO.StreamWriter.Dispose(Boolean disposing)\r\n   at System.IO.TextWriter.Dispose()\r\n   at CoreclrTestLib.CoreclrTestWrapperLib.RunTest(String executable, String outputFile, String errorFile, String category, String testBinaryBase, String outputDir)\r\n   at baseservices_TieredCompilation._BasicTest_QuickJitForLoopsOn_R2r_BasicTest_QuickJitForLoopsOn_R2r_._BasicTest_QuickJitForLoopsOn_R2r_BasicTest_QuickJitForLoopsOn_R2r_sh()\r\nExpected: True\r\nActual:   False\r\n```\r\n\r\n**Stack trace:**\r\n```\r\n   at baseservices_TieredCompilation._BasicTest_QuickJitForLoopsOn_R2r_BasicTest_QuickJitForLoopsOn_R2r_._BasicTest_QuickJitForLoopsOn_R2r_BasicTest_QuickJitForLoopsOn_R2r_sh()\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)\r\n```\r\n\r\nQueued | Pipeline | Pipeline_Configuration | OS | Arch | Test | Outcome | Properties | BuildReason\r\n-- | -- | -- | -- | -- | -- | -- | -- | --\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n\u003cdetails\u003e\r\n\u003csummary\u003eMore failures\u003c/summary\u003e\r\n\r\nQueued | Pipeline | Pipeline_Configuration | OS | Arch | Test | Outcome | Properties | BuildReason\r\n-- | -- | -- | -- | -- | -- | -- | -- | --\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n\u003c/details\u003e\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOZlbw9g==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5mVCY1",
                                           "createdAt":  "2023-09-13T01:16:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @JulieLeeMSFT, @jakobbotsch\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n**Failed in:** [runtime-coreclr jitstress-isas-x86 20230912.1](https://dev.azure.com/dnceng-public/public/_build/results?buildId=403680\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=8745482\u0026resultId=117722\u0026paneView=debug)\r\n\r\n**Failed tests:**\r\n```\r\ncoreclr osx x64 Checked jitstress_isas_1_x86_noavx @ OSX.1200.Amd64.Open\r\n    - baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh\r\n```\r\n\r\n**Error message:**\r\n```\r\nTest Infrastructure Failure: System.IO.IOException: No space left on device : \u0027/tmp/helix/working/A62408D3/w/BC2F0A1E/uploads/Reports/baseservices.TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.output.txt\u0027\r\n   at System.IO.RandomAccess.WriteAtOffset(SafeFileHandle handle, ReadOnlySpan`1 buffer, Int64 fileOffset)\r\n   at System.IO.Strategies.OSFileStreamStrategy.Write(ReadOnlySpan`1 buffer)\r\n   at System.IO.Strategies.BufferedFileStreamStrategy.Dispose(Boolean disposing)\r\n   at System.IO.StreamWriter.CloseStreamFromDispose(Boolean disposing)\r\n   at System.IO.StreamWriter.Dispose(Boolean disposing)\r\n   at System.IO.TextWriter.Dispose()\r\n   at CoreclrTestLib.CoreclrTestWrapperLib.RunTest(String executable, String outputFile, String errorFile, String category, String testBinaryBase, String outputDir)\r\n   at baseservices_TieredCompilation._BasicTest_QuickJitForLoopsOn_R2r_BasicTest_QuickJitForLoopsOn_R2r_._BasicTest_QuickJitForLoopsOn_R2r_BasicTest_QuickJitForLoopsOn_R2r_sh()\r\nExpected: True\r\nActual:   False\r\n```\r\n\r\n**Stack trace:**\r\n```\r\n   at baseservices_TieredCompilation._BasicTest_QuickJitForLoopsOn_R2r_BasicTest_QuickJitForLoopsOn_R2r_._BasicTest_QuickJitForLoopsOn_R2r_BasicTest_QuickJitForLoopsOn_R2r_sh()\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)\r\n```\r\n\r\nQueued | Pipeline | Pipeline_Configuration | OS | Arch | Test | Outcome | Properties | BuildReason\r\n-- | -- | -- | -- | -- | -- | -- | -- | --\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n\u003cdetails\u003e\r\n\u003csummary\u003eMore failures\u003c/summary\u003e\r\n\r\nQueued | Pipeline | Pipeline_Configuration | OS | Arch | Test | Outcome | Properties | BuildReason\r\n-- | -- | -- | -- | -- | -- | -- | -- | --\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n\u003c/details\u003e\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ev-wenyuxu\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`os-mac-os-x`, `JitStress`, `arch-x64`, `area-CodeGen-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-09-13T01:16:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5mVvD2",
                                           "createdAt":  "2023-09-13T05:31:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n**Failed in:** [runtime-coreclr jitstress-isas-x86 20230912.1](https://dev.azure.com/dnceng-public/public/_build/results?buildId=403680\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=8745482\u0026resultId=117722\u0026paneView=debug)\r\n\r\n**Failed tests:**\r\n```\r\ncoreclr osx x64 Checked jitstress_isas_1_x86_noavx @ OSX.1200.Amd64.Open\r\n    - baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh\r\n```\r\n\r\n**Error message:**\r\n```\r\nTest Infrastructure Failure: System.IO.IOException: No space left on device : \u0027/tmp/helix/working/A62408D3/w/BC2F0A1E/uploads/Reports/baseservices.TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.output.txt\u0027\r\n   at System.IO.RandomAccess.WriteAtOffset(SafeFileHandle handle, ReadOnlySpan`1 buffer, Int64 fileOffset)\r\n   at System.IO.Strategies.OSFileStreamStrategy.Write(ReadOnlySpan`1 buffer)\r\n   at System.IO.Strategies.BufferedFileStreamStrategy.Dispose(Boolean disposing)\r\n   at System.IO.StreamWriter.CloseStreamFromDispose(Boolean disposing)\r\n   at System.IO.StreamWriter.Dispose(Boolean disposing)\r\n   at System.IO.TextWriter.Dispose()\r\n   at CoreclrTestLib.CoreclrTestWrapperLib.RunTest(String executable, String outputFile, String errorFile, String category, String testBinaryBase, String outputDir)\r\n   at baseservices_TieredCompilation._BasicTest_QuickJitForLoopsOn_R2r_BasicTest_QuickJitForLoopsOn_R2r_._BasicTest_QuickJitForLoopsOn_R2r_BasicTest_QuickJitForLoopsOn_R2r_sh()\r\nExpected: True\r\nActual:   False\r\n```\r\n\r\n**Stack trace:**\r\n```\r\n   at baseservices_TieredCompilation._BasicTest_QuickJitForLoopsOn_R2r_BasicTest_QuickJitForLoopsOn_R2r_._BasicTest_QuickJitForLoopsOn_R2r_BasicTest_QuickJitForLoopsOn_R2r_sh()\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)\r\n```\r\n\r\nQueued | Pipeline | Pipeline_Configuration | OS | Arch | Test | Outcome | Properties | BuildReason\r\n-- | -- | -- | -- | -- | -- | -- | -- | --\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n\u003cdetails\u003e\r\n\u003csummary\u003eMore failures\u003c/summary\u003e\r\n\r\nQueued | Pipeline | Pipeline_Configuration | OS | Arch | Test | Outcome | Properties | BuildReason\r\n-- | -- | -- | -- | -- | -- | -- | -- | --\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2023-08-26T21:02:01.969Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_x86_nosse3_4 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Reason\":\"Schedule\",\"BuildNumber\":\"20230826.1\",\"AzurePipelinesTestRunId\":\"8285662\",\"System.StageName\":\"Build\",\"configuration\":\"Checked-jitstress_isas_x86_nosse3_4\",\"DefinitionId\":\"115\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"architecture\":\"x64\",\"System.StageAttempt\":\"1\",\"Project\":\"public\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"System.JobName\":\"__default\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"BuildId\":\"387100\",\"System.PhaseAttempt\":\"1\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.JobAttempt\":\"1\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n2023-08-26T21:01:16.057Z | runtime-coreclr jitstress-isas-x86 | Checked-jitstress_isas_1_x86_nosse41 | ubuntu.2204.amd64.open.rt | x64 | baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh | Failed | {\"DefinitionName\":\"runtime-coreclr jitstress-isas-x86\",\"Project\":\"public\",\"BuildNumber\":\"20230826.1\",\"System.JobId\":\"6dfec640-5b96-5d95-2a5b-7c236ea2d5c5\",\"operatingSystem\":\"Ubuntu.2204.Amd64.Open\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"System.PhaseName\":\"run_test_p1__linux_x64_checked\",\"System.JobName\":\"__default\",\"System.StageAttempt\":\"1\",\"System.PhaseAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"8285604\",\"Reason\":\"Schedule\",\"architecture\":\"x64\",\"System.JobAttempt\":\"1\",\"System.StageName\":\"Build\",\"DefinitionId\":\"115\",\"configuration\":\"Checked-jitstress_isas_1_x86_nosse41\",\"BuildId\":\"387100\"} | Schedule\r\n\u003c/details\u003e\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ev-wenyuxu\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`os-mac-os-x`, `JitStress`, `arch-x64`, `area-CodeGen-coreclr`, `area-Infrastructure-coreclr`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-09-13T05:31:19Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Test failure baseservices/TieredCompilation/BasicTest_QuickJitForLoopsOn_R2r/BasicTest_QuickJitForLoopsOn_R2r.sh",
        "labels":  [
                       "os-mac-os-x",
                       "JitStress",
                       "arch-x64",
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/94720",
        "createdAt":  "2023-11-14T17:37:46Z",
        "number":  94720,
        "author":  "carlossanlop",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-28T16:55:41Z",
        "body":  "Examples from https://github.com/dotnet/runtime/pull/93906:\r\n- https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-93906-merge-5491c59ba3e94b3a88/System.IO.Compression.Brotli.Tests/1/console.24609a8d.log?helixlogtype=result\r\n- https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-93906-merge-d4160ad03abd454cab/System.IO.Compression.Brotli.Tests/1/console.5b69f91a.log?helixlogtype=result\r\n\r\nAt least one dump file should\u0027ve been found, as the log says:\r\n\r\n```\r\n----- start =============== XUnitLogChecker Output ===========================================================================================================\r\n/private/tmp/helix/working/A7DC0945/w/B17809AC/e /private/tmp/helix/working/A7DC0945/w/B17809AC/e\r\n  Discovering: System.IO.Compression.Brotli.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.IO.Compression.Brotli.Tests (found 69 of 80 test cases)\r\n  Starting:    System.IO.Compression.Brotli.Tests (parallel test collections = on, max threads = 6)\r\n[createdump] Gathering state for process 30700 \r\n[createdump] Crashing thread 34239a signal 11 (000b)\r\n[createdump] Writing crash report to file /cores/coredump.30700.dmp.crashreport.json\r\n[createdump] Crash report successfully written\r\n[createdump] Writing minidump with heap to file /cores/coredump.30700.dmp\r\n[createdump] Written 457769336 bytes (111760 pages) to core file\r\n[createdump] Target process is alive\r\n[createdump] Dump successfully written in 2699ms\r\n./RunTests.sh: line 174: 30700 Segmentation fault: 11  \"$RUNTIME_PATH/dotnet\" exec --runtimeconfig System.IO.Compression.Brotli.Tests.runtimeconfig.json --depsfile System.IO.Compression.Brotli.Tests.deps.json xunit.console.dll System.IO.Compression.Brotli.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing $RSP_FILE\r\n/private/tmp/helix/working/A7DC0945/w/B17809AC/e\r\n----- end Mon Nov 13 22:12:18 PST 2023 ----- exit code 139 ----------------------------------------------------------\r\nexit code 139 means SIGSEGV Illegal memory access. Deref invalid pointer, overrunning buffer, stack overflow etc. Core dumped.\r\nulimit -c value: 0\r\nUnable to obtain kernel buffer: Operation not permitted\r\nusage: sudo dmesg\r\nWaiting a few seconds for any dump to be written...\r\nusage: sleep seconds\r\n----- start =============== XUnitLogChecker Output =====================================================\r\nNo dumps found in /cores.\r\nNo dumps found in /cores.\r\n----- end =============== XUnitLogChecker Output - exit code 0 ===========================",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOfbExrw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5r7kn_",
                                           "createdAt":  "2023-11-14T17:37:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nExamples from https://github.com/dotnet/runtime/pull/93906:\r\n- https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-93906-merge-5491c59ba3e94b3a88/System.IO.Compression.Brotli.Tests/1/console.24609a8d.log?helixlogtype=result\r\n- https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-93906-merge-d4160ad03abd454cab/System.IO.Compression.Brotli.Tests/1/console.5b69f91a.log?helixlogtype=result\r\n\r\nAt least one dump file should\u0027ve been found, as the log says:\r\n\r\n```\r\n----- start =============== XUnitLogChecker Output ===========================================================================================================\r\n/private/tmp/helix/working/A7DC0945/w/B17809AC/e /private/tmp/helix/working/A7DC0945/w/B17809AC/e\r\n  Discovering: System.IO.Compression.Brotli.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.IO.Compression.Brotli.Tests (found 69 of 80 test cases)\r\n  Starting:    System.IO.Compression.Brotli.Tests (parallel test collections = on, max threads = 6)\r\n[createdump] Gathering state for process 30700 \r\n[createdump] Crashing thread 34239a signal 11 (000b)\r\n[createdump] Writing crash report to file /cores/coredump.30700.dmp.crashreport.json\r\n[createdump] Crash report successfully written\r\n[createdump] Writing minidump with heap to file /cores/coredump.30700.dmp\r\n[createdump] Written 457769336 bytes (111760 pages) to core file\r\n[createdump] Target process is alive\r\n[createdump] Dump successfully written in 2699ms\r\n./RunTests.sh: line 174: 30700 Segmentation fault: 11  \"$RUNTIME_PATH/dotnet\" exec --runtimeconfig System.IO.Compression.Brotli.Tests.runtimeconfig.json --depsfile System.IO.Compression.Brotli.Tests.deps.json xunit.console.dll System.IO.Compression.Brotli.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing $RSP_FILE\r\n/private/tmp/helix/working/A7DC0945/w/B17809AC/e\r\n----- end Mon Nov 13 22:12:18 PST 2023 ----- exit code 139 ----------------------------------------------------------\r\nexit code 139 means SIGSEGV Illegal memory access. Deref invalid pointer, overrunning buffer, stack overflow etc. Core dumped.\r\nulimit -c value: 0\r\nUnable to obtain kernel buffer: Operation not permitted\r\nusage: sudo dmesg\r\nWaiting a few seconds for any dump to be written...\r\nusage: sleep seconds\r\n----- start =============== XUnitLogChecker Output =====================================================\r\nNo dumps found in /cores.\r\nNo dumps found in /cores.\r\n----- end =============== XUnitLogChecker Output - exit code 0 ===========================\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ecarlossanlop\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-11-14T17:37:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5r-nwd",
                                           "createdAt":  "2023-11-14T23:54:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "carlossanlop",
                                           "body":  "Another example: https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-93906-merge-c82b58211fb64e94bf/System.IO.Compression.Brotli.Tests/1/console.059edaf2.log?helixlogtype=result\r\n\r\n```\r\n===========================================================================================================\r\n/private/tmp/helix/working/AD9E0986/w/ACF409A5/e /private/tmp/helix/working/AD9E0986/w/ACF409A5/e\r\n  Discovering: System.IO.Compression.Brotli.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.IO.Compression.Brotli.Tests (found 69 of 80 test cases)\r\n  Starting:    System.IO.Compression.Brotli.Tests (parallel test collections = on, max threads = 12)\r\n[createdump] Gathering state for process 43261 \r\n[createdump] Crashing thread 451632 signal 11 (000b)\r\n[createdump] Writing crash report to file /cores/coredump.43261.dmp.crashreport.json\r\n[createdump] Crash report successfully written\r\n[createdump] Writing minidump with heap to file /cores/coredump.43261.dmp\r\n[createdump] Written 519066072 bytes (126725 pages) to core file\r\n[createdump] Target process is alive\r\n[createdump] Dump successfully written in 2507ms\r\n./RunTests.sh: line 174: 43261 Segmentation fault: 11  \"$RUNTIME_PATH/dotnet\" exec --runtimeconfig System.IO.Compression.Brotli.Tests.runtimeconfig.json --depsfile System.IO.Compression.Brotli.Tests.deps.json xunit.console.dll System.IO.Compression.Brotli.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing $RSP_FILE\r\n/private/tmp/helix/working/AD9E0986/w/ACF409A5/e\r\n----- end Tue Nov 14 17:56:47 EST 2023 ----- exit code 139 ----------------------------------------------------------\r\nexit code 139 means SIGSEGV Illegal memory access. Deref invalid pointer, overrunning buffer, stack overflow etc. Core dumped.\r\nulimit -c value: 0\r\nUnable to obtain kernel buffer: Operation not permitted\r\nusage: sudo dmesg\r\n----- start =============== XUnitLogChecker Output =====================================================\r\nNo dumps found in /cores.\r\n----- end =============== XUnitLogChecker Output - exit code 0 ===========================\r\n```",
                                           "updatedAt":  "2023-11-14T23:54:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5xC64N",
                                           "createdAt":  "2024-01-17T19:56:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "JulieLeeMSFT",
                                           "body":  "Consider adding unit tests in LogChecker in general.",
                                           "updatedAt":  "2024-01-17T19:56:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5yMjGY",
                                           "createdAt":  "2024-01-30T01:27:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODdLG5A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ericstj",
                                                                               "createdAt":  "2024-04-05T16:15:01Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "Your PR shows that they are found and uploaded by helix:\r\n\r\nhttps://dev.azure.com/dnceng-public/public/_build/results?buildId=531472\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=12534828\u0026paneView=dotnet-dnceng.dnceng-build-release-tasks.helix-test-information-tab\u0026resultId=217183\r\n\r\nThe dumps are [uploaded from cores in the helix log](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-97135-merge-a93c29f448ca48da93/System.IO.Compression.Brotli.Tests/9ae1fb63-452f-4e19-be65-71f702058820.log?helixlogtype=result) after the workitem exits : \r\n```\r\n2024-01-18T05:21:22.154Z\tINFO   \tinterval(67)\tset_abort_after_timer\tSet the timer\u0027s abort_after to 660 seconds from now: abort_after = 2024-01-17 21:32:22.154144\r\n2024-01-18T05:21:22.154Z\tINFO   \texecutor(790)\t_dump_file_upload\tDump files created in /cores are ready to be uploaded\r\n2024-01-18T05:21:22.154Z\tINFO   \texecutor(803)\t_dump_file_upload\tDump file: /cores/coredump.26718.dmp.crashreport.json, size: 386168\r\n2024-01-18T05:21:22.154Z\tINFO   \texecutor(825)\t_dump_file_upload\tCopying...\r\n2024-01-18T05:21:22.156Z\tINFO   \texecutor(828)\t_dump_file_upload\tCopy successful.\r\n2024-01-18T05:21:22.156Z\tINFO   \texecutor(803)\t_dump_file_upload\tDump file: /cores/coredump.26718.dmp, size: 457896328\r\n2024-01-18T05:21:22.156Z\tINFO   \texecutor(825)\t_dump_file_upload\tCopying...\r\n2024-01-18T05:21:22.325Z\tINFO   \texecutor(828)\t_dump_file_upload\tCopy successful.\r\n```\r\n\r\nFeels like we have an issue in globing. ",
                                           "updatedAt":  "2024-01-30T01:27:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc55mu9D",
                                           "createdAt":  "2024-04-05T16:14:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "@hoyosjs  here\u0027s another https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-100658-merge-78b0194c937f405bbe/System.Text.RegularExpressions.Tests/1/console.c3d1a0aa.log?helixlogtype=result\r\n\r\n```\r\n[createdump] Gathering state for process 17802 \r\n[createdump] Crashing thread 12d42b signal 11 (000b)\r\n[createdump] Writing crash report to file /cores/coredump.17802.dmp.crashreport.json\r\n[createdump] Crash report successfully written\r\n[createdump] Writing minidump with heap to file /cores/coredump.17802.dmp\r\n[createdump] Written 2501677768 bytes (610761 pages) to core file\r\n[createdump] Target process is alive\r\n[createdump] Dump successfully written in 12823ms\r\n./RunTests.sh: line 180: 17802 Segmentation fault: 11  \"$RUNTIME_PATH/dotnet\" exec --runtimeconfig System.Text.RegularExpressions.Tests.runtimeconfig.json --depsfile System.Text.RegularExpressions.Tests.deps.json xunit.console.dll System.Text.RegularExpressions.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing $RSP_FILE\r\n/private/tmp/helix/working/A9A0097B/w/B552096D/e\r\n----- end Thu Apr 4 19:43:59 PDT 2024 ----- exit code 139 ----------------------------------------------------------\r\nexit code 139 means SIGSEGV Illegal memory access. Deref invalid pointer, overrunning buffer, stack overflow etc. Core dumped.\r\nulimit -c value: 0\r\nUnable to obtain kernel buffer: Operation not permitted\r\nusage: sudo dmesg\r\n----- start =============== XUnitLogChecker Output =====================================================\r\nNo dumps found in /cores.\r\n```\r\nhttps://dev.azure.com/dnceng-public/public/_build/results?buildId=631279\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=15512006\u0026resultId=215168\u0026paneView=debug\r\n\r\nThe file clearly exists as helix tried to upload it.\r\n![image](https://github.com/dotnet/runtime/assets/8918108/7c4e534e-7440-475f-b792-8aa370af9e45)\r\n\r\nI agree with @hoyosjs that the problem seems to be how the script is locating the files.  Seems like we could just replicate that situation on a mac and try out the subset of the script here to see what it does.\r\n\r\nhttps://github.com/dotnet/runtime/blob/068ba8eba9787bb180878561d443abcf6133be9f/eng/testing/RunnerTemplate.sh#L81C3-L81C57",
                                           "updatedAt":  "2024-04-05T16:16:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc59sTGv",
                                           "createdAt":  "2024-05-13T20:42:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-05-13T20:42:02Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "XUnitLogChecker: In OSX, no dumps are being found in the /cores directory",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/94722",
        "createdAt":  "2023-11-14T17:42:45Z",
        "number":  94722,
        "author":  "carlossanlop",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-28T16:55:14Z",
        "body":  "In PR https://github.com/dotnet/runtime/pull/93906, NativeAOT is skipped on purpose ([code](https://github.com/dotnet/runtime/blob/69df4b6357d0e5fe6d167bd15a40d9936d1f765f/Directory.Build.props#L337)) because test runs are unable to find dotnet.exe to execute XUnitLogChecker.dll, so the logic will need to be adjusted for NativeAOT tests so that the tool gets built as a single file (that\u0027s one option).",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOgenDDA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5r7n46",
                                           "createdAt":  "2023-11-14T17:42:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nIn PR https://github.com/dotnet/runtime/pull/93906, NativeAOT is skipped on purpose ([code](https://github.com/dotnet/runtime/blob/69df4b6357d0e5fe6d167bd15a40d9936d1f765f/Directory.Build.props#L337)) because test runs are unable to find dotnet.exe to execute XUnitLogChecker.dll, so the logic will need to be adjusted for NativeAOT tests so that the tool gets built as a single file (that\u0027s one option).\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ecarlossanlop\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-11-14T17:42:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5sSmos",
                                           "createdAt":  "2023-11-17T17:27:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "carlossanlop",
                                           "body":  "Tagging NativeAOT owners @agocke and @dotnet/ilc-contrib - My change that adds XUnitLogChecker support for libraries tests is skipping NativeAOT tests on purpose because they run the tests differently: https://github.com/dotnet/runtime/pull/94868\r\n\r\nI wanted to put this in your radar to ensure this gets addressed at some point.",
                                           "updatedAt":  "2023-11-17T17:27:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5xCbea",
                                           "createdAt":  "2024-01-17T19:06:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "carlossanlop",
                                           "body":  "Closely related to https://github.com/dotnet/runtime/issues/94270",
                                           "updatedAt":  "2024-01-17T19:06:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6B50RH",
                                           "createdAt":  "2024-06-19T20:25:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "JulieLeeMSFT",
                                           "body":  "@agocke, checking if you plan to enable crash dump on NativeAOT in .NET 9.\r\ncc @jkotas. ",
                                           "updatedAt":  "2024-06-19T20:25:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6B52OE",
                                           "createdAt":  "2024-06-19T20:33:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "JulieLeeMSFT",
                                           "body":  "Same question for https://github.com/dotnet/runtime/issues/94270.",
                                           "updatedAt":  "2024-06-19T20:33:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6B6cMM",
                                           "createdAt":  "2024-06-19T23:44:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "agocke",
                                           "body":  "I would certainly like to compile the logchecker with Native AOT. I\u0027ve been trying to get to the bottom of other infra issues right now, but that would be nice to resolve.",
                                           "updatedAt":  "2024-06-19T23:44:42Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "XUnitLogChecker: Enable for NativeAOT tests",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/96027",
        "createdAt":  "2023-12-14T17:18:13Z",
        "number":  96027,
        "author":  "NikolaMilosavljevic",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-08T18:12:51Z",
        "body":  "Unlike other `runtime` projects and subsets (i.e. `libraries`), `coreclr` build does not honor custom artifacts location.\r\n\r\nCoreCLR build always uses `artifacts` sub-folder of the repo-root: https://github.com/dotnet/runtime/blob/1b882d31622ef1c51ac29c3ffe0f8281b5d7e599/src/coreclr/build-runtime.sh#L95\r\n\r\nI believe `ArtifactsDir` should be used, and passed into `build-runtime` scripts as an argument.\r\n\r\n@jkoritzinsky @ViktorHofer ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHObqQ_Xg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5upD9e",
                                           "createdAt":  "2023-12-14T17:18:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nUnlike other `runtime` projects and subsets (i.e. `libraries`), `coreclr` build does not honor custom artifacts location.\r\n\r\nCoreCLR build always uses `artifacts` sub-folder of the repo-root: https://github.com/dotnet/runtime/blob/1b882d31622ef1c51ac29c3ffe0f8281b5d7e599/src/coreclr/build-runtime.sh#L95\r\n\r\nI believe `ArtifactsDir` should be used, and passed into `build-runtime` scripts as an argument.\r\n\r\n@jkoritzinsky @ViktorHofer \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eNikolaMilosavljevic\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-12-14T17:18:20Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "CoreCLR build does not honor custom artifacts location",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/97113",
        "createdAt":  "2024-01-17T21:15:52Z",
        "number":  97113,
        "author":  "ivdiazsa",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-25T16:31:56Z",
        "body":  "",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOcQ4ppw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5xDimn",
                                           "createdAt":  "2024-01-17T21:16:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nnull\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eivdiazsa\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003eivdiazsa\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2024-01-17T21:16:23Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Set CMP0112 to the `NEW` behavior and fix any target dependency issues.",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/99456",
        "createdAt":  "2024-03-08T16:37:34Z",
        "number":  99456,
        "author":  "jkotas",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-25T21:58:06Z",
        "body":  "## Repro\r\n\r\n1. Download `CoreCLRProduct__osx_x64` artifacts from PR build (e.g. https://dev.azure.com/dnceng-public/_apis/resources/Containers/40000142/CoreCLRProduct__osx_x64_release?itemPath=CoreCLRProduct__osx_x64_release%2FCoreCLRProduct__osx_x64_release.tar.gz)\r\n\r\n## Result\r\n\r\nNo *.dwarf or *.dbg files present in the archive.\r\n\r\nThis makes is impossible to debug OSX crash dumps created by PR test runs.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOdsEY6A==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc52YFK5",
                                           "createdAt":  "2024-03-08T16:37:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-03-08T16:37:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc52YFYe",
                                           "createdAt":  "2024-03-08T16:38:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "@BruceForstall Are you aware of this issue?",
                                           "updatedAt":  "2024-03-08T16:38:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc52ZBHz",
                                           "createdAt":  "2024-03-08T19:21:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "\u003e @BruceForstall Are you aware of this issue?\r\n\r\nI\u0027m wasn\u0027t.\r\n\r\nIt looks like this behavior was introduced by https://github.com/dotnet/runtime/pull/81387 (cc @kunalspathak @agocke ).\r\n\r\nThe build job, but only for PR builds, sets a flag to skip the \"strip_symbols\" step:\r\n\r\nhttps://github.com/dotnet/runtime/blob/40ac297a1101ac293a1bae01f2e2e1556f7ec017/eng/pipelines/coreclr/templates/build-job.yml#L101-L105\r\n\r\nthis ends up setting `CLR_CMAKE_KEEP_NATIVE_SYMBOLS=true` which causes symbol stripping to be skipped (eng/native/functions.cmake).\r\n\r\nIt appears this is ok for Linux, which apparently collect their debug symbols in the built executable. It is not ok for Mac, where the built executable only contains a link to the object files that contain the debug symbols. (The `--keepsymbols` option was specifically introduced to support Linux: https://github.com/dotnet/runtime/pull/39203).\r\n\r\nSo, on Mac, we need to always \"strip\" symbols. \"strip\" is a bit of a misnomer in this case: it\u0027s more like \"collect\" symbols, to put them into a single .dwarf file (or, preferably, a .dSYM bundle).\r\n\r\nA simple fix would be to not do pass `--keepsymbols` to the `build-runtime.sh` script for Mac\r\n\r\nI presume the stack trace stuff has never worked on Mac?\r\n\r\nRelated: https://github.com/dotnet/runtime/issues/92911\r\n",
                                           "updatedAt":  "2024-03-08T19:21:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc52mVNi",
                                           "createdAt":  "2024-03-12T01:39:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "We haven\u0027t notices because macOS queues have largely been unable to collect dumps until recently and even after that, the queues in Helix don\u0027t have the symbolizer. https://github.com/dotnet/arcade/issues/11631",
                                           "updatedAt":  "2024-03-12T01:39:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc52vPHK",
                                           "createdAt":  "2024-03-12T16:38:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "\u003e the queues in Helix don\u0027t have the symbolizer\r\n\r\nInstead of symbolizer, macOS has `atos` tool. An old note from my personal onenote has an example:\r\n```\r\nOn macOS:\r\natos -o artifacts/bin/coreclr/OSX.arm64.Debug/libcoreclr.dylib.dwarf 0x7ac654\r\nEEStartupHelper() (in libcoreclr.dylib.dwarf) (ceemain.cpp:1001)\r\n(use the dwarf file to get the source line)\r\n\r\nOr \r\natos -o artifacts/bin/coreclr/OSX.arm64.Debug/libcoreclr.dylib.dwarf 0x7ac654 -fullPath\r\nEEStartupHelper() (in libcoreclr.dylib.dwarf) (/Users/janvorli/git/runtime/src/coreclr/vm/ceemain.cpp:1001)\r\n```",
                                           "updatedAt":  "2024-03-12T16:38:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc52wRjo",
                                           "createdAt":  "2024-03-12T19:14:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "They claim it\u0027s installed. I\u0027d have to see if it works. Currently the infrastructure is such that it parses the output of that tool. Given this issue I expect it not to work since we don\u0027t have any logic to locate symbols. In the case of atos, it may be dsym-bundling aware which would help, but it\u0027s likely work. cc @JulieLeeMSFT ",
                                           "updatedAt":  "2024-03-12T19:14:56Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "OSX PR build artifacts are missing symbols ",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/100556",
        "createdAt":  "2024-04-02T22:42:08Z",
        "number":  100556,
        "author":  "AndyAyersMS",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-25T22:18:38Z",
        "body":  "Have run into this now on both windows and linux.\r\n\r\nI pull in latest main, but have built against older hashes. Rebuilding then fails with\r\n```\r\n  /home/andy/repos/runtime0/src/coreclr/nativeaot/Runtime/gctoclreventsink.cpp:34:5: error: use of undeclared identifier \u0027FireEtwGCDynamicEvent\u0027\r\n      FireEtwGCDynamicEvent(wideEventName, payloadSize, (const BYTE*)payload, GetClrInstanceId());\r\n      ^\r\n  1 error generated.\r\n  make[2]: *** [nativeaot/Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/build.make:230: nativeaot/Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/gctoclreventsink.cpp.o] Error 1\r\n```\r\nThis can be fixed with `git clean -dfx`\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOeTVBeg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc55NUF6",
                                           "createdAt":  "2024-04-03T05:01:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichalStrehovsky",
                                           "body":  "I hit this too. It was probably introduced in #99862. The EventPipe Python goo that is supposed to generate this is probably not incremental. Don\u0027t really know what area path to put this to.",
                                           "updatedAt":  "2024-04-03T05:01:16Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Incremental builds failing because of missing FireEtwGCDynamicEvent",
        "labels":  [
                       "EventPipe",
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/104077",
        "createdAt":  "2024-06-27T07:50:53Z",
        "number":  104077,
        "author":  "am11",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-06-27T13:34:13Z",
        "body":  "https://github.com/dotnet/runtime/pull/104070#issue-2377283080\r\nThe cdac project is built via `\u003cMSBuild runtime.proj\u003e` invocation, which is where the race might be coming from (parallel tasks evaluation).\r\n\r\ncc @ViktorHofer, @akoeplinger if the binlog screenshots from @MichalStrehovsky\u0027s investigation ring any bells https://github.com/dotnet/runtime/pull/104070#issue-2377283080\r\n\r\nWe are reverting it in the meanwhile https://github.com/dotnet/runtime/pull/104072, but would be good to understand why it fails to restore the package properly intermittently.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOgtCTCQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6CxjkM",
                                           "createdAt":  "2024-06-27T07:51:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-06-27T07:51:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6C0JMJ",
                                           "createdAt":  "2024-06-27T13:34:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODniqfA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2024-06-27T16:22:49Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "I took a look and nothing stood out to me. It\u0027s really hard to say without the static graph restore binlog which unfortunately isn\u0027t available.",
                                           "updatedAt":  "2024-06-27T13:34:13Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "runtime.proj invocation and non-deterministic restore",
        "labels":  [
                       "area-Infrastructure-coreclr",
                       "untriaged"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/104546",
        "createdAt":  "2024-07-08T12:31:52Z",
        "number":  104546,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-21T17:57:28Z",
        "body":  "![image](https://github.com/dotnet/runtime/assets/7412651/48a4c014-5dad-49ce-88ad-064d72768dda)\r\n\r\nThis is coreclr\u0027s System.Private.CoreLib. It also builds x86 by default (on a x64 machine). I assume there\u0027s a mismatch between amd64 and x64.\r\n\r\nRelevant lines:\r\n- https://github.com/dotnet/runtime/blob/e0d8b0deeb243ac370a97f240ff462cf577e87ca/src/coreclr/System.Private.CoreLib/System.Private.CoreLib.csproj#L14\r\n- https://github.com/dotnet/runtime/blob/e0d8b0deeb243ac370a97f240ff462cf577e87ca/src/coreclr/System.Private.CoreLib/System.Private.CoreLib.csproj#L40-L42\r\n\r\ncc @dotnet/runtime-infrastructure ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhDwo2g==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6EN2gj",
                                           "createdAt":  "2024-07-09T16:51:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-07-09T16:51:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6EPCja",
                                           "createdAt":  "2024-07-09T19:46:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-07-09T19:46:29Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "CoreLib configuration picker lists too many architectures and selects the wrong default",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/104788",
        "createdAt":  "2024-07-12T12:32:14Z",
        "number":  104788,
        "author":  "eiriktsarpalis",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-08-17T18:36:59Z",
        "body":  "_Originally posted by @eiriktsarpalis in https://github.com/dotnet/runtime/pull/104763#discussion_r1675712581_\r\n\r\n\u003e Notice this passes `hostarch x64` because this is a build where we need to create an x64 hosted crossgen2, ilc, etc, so that we can execute them on the build machine.\r\n\r\nI see. Is it then perhaps the case that this component isn\u0027t yet supported for ARM64 hosts? I\u0027m getting the following output when cross-compiling to x64 on my arm machine. It very clearly seems to be including amd64 assembly files. I initially assumed that this error was an infrastructural issue, but your remark suggests to me that it\u0027s not.\r\n\r\n```\r\n  Executing \"C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\build-runtime.cmd\" -cmakeargs \"-DCLR_CROSS_COMPONENTS_BUILD=1\" -x64 -debug -os windows -hostarch arm64 -hostos windows -outputrid win-x64 -cmakeargs \"-DCLR_DOTNET_HOST_PATH=C:\\Users\\eitsarpa\\devel\\dotnet\\ru\r\n  ntime-feature3\\.dotnet\\dotnet.exe\" -cmakeargs \"-DCDAC_BUILD_TOOL_BINARY_PATH=C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\artifacts\\bin\\coreclr\\windows.x64.Debug\\cdac-build-tool\\cdac-build-tool.dll\" -component crosscomponents\r\n  BUILD: Starting Build at 12:23:49.35\r\n  BUILD: Commencing CoreCLR product build\r\n  BUILD: Checking prerequisites\r\n  BUILD: Using CMake from C:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe\r\n  \u0027wmic\u0027 is not recognized as an internal or external command,\r\n  operable program or batch file.\r\n  BUILD: Number of processor cores 0\r\n  BUILD: Commencing build of native components for windows.x64.Debug\r\n  BUILD: Using environment: \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\VC\\Auxiliary\\Build\\vcvarsall.bat\" arm64\r\n  **********************************************************************\r\n  ** Visual Studio 2022 Developer Command Prompt v17.11.0-pre.3.0\r\n  ** Copyright (c) 2022 Microsoft Corporation\r\n  **********************************************************************\r\n  [vcvarsall.bat] Environment initialized for: \u0027arm64\u0027\r\n  BUILD: Regenerating the Visual Studio solution\r\n  Calling \"C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\eng\\native\\gen-buildsys.cmd\" \"C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\" \"C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\artifacts\\obj\\coreclr\\windows.x64.Debug\\arm64\" vs2022 arm64 windows \"-DCMAKE_BUI\r\n  LD_TYPE=Debug\" \"-DCLR_CMAKE_TARGET_ARCH=x64\" \"-DCLR_CMAKE_TARGET_OS=windows\" \"-DCLI_CMAKE_FALLBACK_OS=win10\" \"-DCLR_CMAKE_PGO_INSTRUMENT=0\" \"-DCLR_CMAKE_OPTDATA_PATH=\" \"-DCLR_CMAKE_PGO_OPTIMIZE=0\" \"-DCDAC_BUILD_TOOL_BINARY_PATH=C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\a\r\n  rtifacts\\bin\\coreclr\\windows.x64.Debug\\cdac-build-tool\\cdac-build-tool.dll\" \"-DCLR_DOTNET_HOST_PATH=C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\.dotnet\\dotnet.exe\" \"-DCLR_CROSS_COMPONENTS_BUILD=1\"\r\n  Not searching for unused variables given on the command line.\r\n  -- The C compiler identification is MSVC 19.41.34021.0\r\n  -- The CXX compiler identification is MSVC 19.41.34021.0\r\n  -- Detecting C compiler ABI info\r\n  -- Detecting C compiler ABI info - done\r\n  -- Check for working C compiler: C:/Program Files/Microsoft Visual Studio/2022/Preview/VC/Tools/MSVC/14.41.34021/bin/Hostarm64/arm64/cl.exe - skipped\r\n  -- Detecting C compile features\r\n  -- Detecting C compile features - done\r\n  -- Detecting CXX compiler ABI info\r\n  -- Detecting CXX compiler ABI info - done\r\n  -- Check for working CXX compiler: C:/Program Files/Microsoft Visual Studio/2022/Preview/VC/Tools/MSVC/14.41.34021/bin/Hostarm64/arm64/cl.exe - skipped\r\n  -- Detecting CXX compile features\r\n  -- Detecting CXX compile features - done\r\n  CMAKE_ASM_MASM_COMPILER explicitly set to: C:/Program Files/Microsoft Visual Studio/2022/Preview/VC/Tools/MSVC/14.41.34021//bin/HostX86/arm64/armasm64.exe\r\n  -- The ASM compiler identification is MSVC\r\n  -- Found assembler: C:/Program Files/Microsoft Visual Studio/2022/Preview/VC/Tools/MSVC/14.41.34021/bin/HostX86/arm64/armasm64.exe\r\n  -- Looking for accept4\r\n  -- Looking for accept4 - not found\r\n  -- Looking for sys/socket.h\r\n  -- Looking for sys/socket.h - not found\r\n  -- Found Python: C:/Program Files/WindowsApps/PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64__qbz5n2kfra8p0/python3.11.exe (found version \"3.11.9\") found components: Interpreter\r\n  Read file version from native version header at \u0027C:/Users/eitsarpa/devel/dotnet/runtime-feature3/artifacts/obj/_version.h\u0027.\r\n  -- Configuring done (10.5s)\r\n  -- Generating done (0.7s)\r\n  -- Build files have been written to: C:/Users/eitsarpa/devel/dotnet/runtime-feature3/artifacts/obj/coreclr/windows.x64.Debug/arm64\r\n  running \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe\" --build C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\artifacts\\obj\\coreclr\\windows.x64.Debug\\arm64 --target  crosscomponents --config Debug --\r\n  [1/540] Building C object containers\\CMakeFiles\\dn-containers.dir\\dn-umap.c.obj\r\n  [2/540] Building C object containers\\CMakeFiles\\dn-containers.dir\\dn-list.c.obj\r\n  [3/540] Building C object containers\\CMakeFiles\\dn-containers.dir\\dn-simdhash-ptrpair-ptr.c.obj\r\n  [4/540] Building C object containers\\CMakeFiles\\dn-containers.dir\\dn-fwd-list.c.obj\r\n  [5/540] Building C object containers\\CMakeFiles\\dn-containers.dir\\dn-simdhash-ght-compatible.c.obj\r\n  [6/540] Building C object containers\\CMakeFiles\\dn-containers.dir\\dn-queue.c.obj\r\n  [7/540] Building C object containers\\CMakeFiles\\dn-containers.dir\\dn-vector.c.obj\r\n  [8/540] Building C object containers\\CMakeFiles\\dn-containers.dir\\dn-simdhash-string-ptr.c.obj\r\n  [9/540] Building C object containers\\CMakeFiles\\dn-containers.dir\\dn-simdhash-ptr-ptr.c.obj\r\n  [10/540] Building C object containers\\CMakeFiles\\dn-containers.dir\\dn-allocator.c.obj\r\n  [11/540] Building C object containers\\CMakeFiles\\dn-containers.dir\\dn-simdhash.c.obj\r\n  [12/540] Building C object containers\\CMakeFiles\\dn-containers.dir\\dn-simdhash-u32-ptr.c.obj\r\n  [13/540] Building C object containers\\CMakeFiles\\dn-containers.dir\\dn-simdhash-utils.c.obj\r\n  [14/540] Building CXX object tools\\aot\\jitinterface\\CMakeFiles\\jitinterface_arm64.dir\\corinfoexception.cpp.obj\r\n  [15/540] Building CXX object tools\\aot\\jitinterface\\CMakeFiles\\jitinterface_arm64.dir\\jithost.cpp.obj\r\n  [16/540] Building CXX object tools\\aot\\jitinterface\\CMakeFiles\\jitinterface_arm64.dir\\jitinterface.cpp.obj\r\n  [17/540] Building C object minipal\\Windows\\CMakeFiles\\coreclrminipal.dir\\C_\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\native\\minipal\\utf8.c.obj\r\n  [18/540] Building CXX object tools\\aot\\jitinterface\\CMakeFiles\\jitinterface_arm64.dir\\jitwrapper.cpp.obj\r\n  [19/540] Building RC object tools\\aot\\jitinterface\\CMakeFiles\\jitinterface_arm64.dir\\Native.rc.res\r\n  [20/540] Building CXX object debug\\debug-pal\\CMakeFiles\\debug-pal.dir\\win\\twowaypipe.cpp.obj\r\n  [21/540] Building CXX object debug\\debug-pal\\CMakeFiles\\debug-pal.dir\\win\\processdescriptor.cpp.obj\r\n  [22/540] Building CXX object debug\\debug-pal\\CMakeFiles\\debug-pal.dir\\C_\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\native\\eventpipe\\ds-ipc-pal-namedpipe.c.obj\r\n  [23/540] Building C object minipal\\Windows\\CMakeFiles\\coreclrminipal.dir\\C_\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\native\\minipal\\time.c.obj\r\n  [24/540] Building C object tools\\aot\\jitinterface\\CMakeFiles\\jitinterface_arm64.dir\\C_\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\native\\minipal\\cpufeatures.c.obj\r\n  [25/540] Building CXX object minipal\\Windows\\CMakeFiles\\coreclrminipal.dir\\doublemapping.cpp.obj\r\n  [26/540] Building CXX object minipal\\Windows\\CMakeFiles\\coreclrminipal.dir\\dn-u16.cpp.obj\r\n  [27/540] Compiling corprof.idl\r\n  64 bit Processing C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\inc\\corprof.idl\r\n  corprof.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\um\\unknwn.idl\r\n  unknwn.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\wtypes.idl\r\n  wtypes.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\wtypesbase.idl\r\n  wtypesbase.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\basetsd.h\r\n  basetsd.h\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\guiddef.h\r\n  guiddef.h\r\n  [28/540] Compiling xclrdata.idl\r\n  64 bit Processing C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\inc\\xclrdata.idl\r\n  xclrdata.idl\r\n  64 bit Processing C:/Users/eitsarpa/devel/dotnet/runtime-feature3/src/coreclr/inc\\clrdata.idl\r\n  clrdata.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\um\\unknwn.idl\r\n  unknwn.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\wtypes.idl\r\n  wtypes.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\wtypesbase.idl\r\n  wtypesbase.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\basetsd.h\r\n  basetsd.h\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\guiddef.h\r\n  guiddef.h\r\n  [29/540] Compiling clrdata.idl\r\n  64 bit Processing C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\inc\\clrdata.idl\r\n  clrdata.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\um\\unknwn.idl\r\n  unknwn.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\wtypes.idl\r\n  wtypes.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\wtypesbase.idl\r\n  wtypesbase.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\basetsd.h\r\n  basetsd.h\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\guiddef.h\r\n  guiddef.h\r\n  [30/540] Linking CXX static library minipal\\Windows\\coreclrminipal.lib\r\n  [31/540] Building CXX object debug\\dbgutil\\CMakeFiles\\dbgutil.dir\\dbgutil.cpp.obj\r\n  [32/540] Compiling clrinternal.idl\r\n  64 bit Processing C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\inc\\clrinternal.idl\r\n  clrinternal.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\um\\unknwn.idl\r\n  unknwn.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\wtypes.idl\r\n  wtypes.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\wtypesbase.idl\r\n  wtypesbase.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\basetsd.h\r\n  basetsd.h\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\guiddef.h\r\n\r\n  guiddef.h\r\n\r\n  64 bit Processing C:/Users/eitsarpa/devel/dotnet/runtime-feature3/src/coreclr/inc\\mscoree.idl\r\n\r\n  mscoree.idl\r\n\r\n  [33/540] Preprocessing C:/Users/eitsarpa/devel/dotnet/runtime-feature3/src/coreclr/jit/ClrJit.exports. Outputting to C:/Users/eitsarpa/devel/dotnet/runtime-feature3/artifacts/obj/coreclr/windows.x64.Debug/arm64/jit/ClrJit.exports.def\r\n  ClrJit.exports\r\n\r\n  [34/540] Linking CXX static library debug\\dbgutil\\dbgutil.lib\r\n  [35/540] Linking CXX shared library tools\\aot\\jitinterface\\jitinterface_arm64.dll\r\n  [36/540] Compiling xcordebug.idl\r\n  64 bit Processing C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\inc\\xcordebug.idl\r\n  xcordebug.idl\r\n  64 bit Processing C:/Users/eitsarpa/devel/dotnet/runtime-feature3/src/coreclr/inc\\cordebug.idl\r\n  cordebug.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\um\\unknwn.idl\r\n  unknwn.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\wtypes.idl\r\n  wtypes.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\wtypesbase.idl\r\n  wtypesbase.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\basetsd.h\r\n  basetsd.h\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\guiddef.h\r\n  guiddef.h\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\um\\objidl.idl\r\n  objidl.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\um\\oaidl.idl\r\n  oaidl.idl\r\n  [37/540] Compiling cordebug.idl\r\n  64 bit Processing C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\inc\\cordebug.idl\r\n  cordebug.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\um\\unknwn.idl\r\n  unknwn.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\wtypes.idl\r\n  wtypes.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\wtypesbase.idl\r\n  wtypesbase.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\basetsd.h\r\n  basetsd.h\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\guiddef.h\r\n  guiddef.h\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\um\\objidl.idl\r\n  objidl.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\um\\oaidl.idl\r\n  oaidl.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\um\\oaidl.acf\r\n  oaidl.acf\r\n  [38/540] Compiling sospriv.idl\r\n  64 bit Processing C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\inc\\sospriv.idl\r\n  sospriv.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\um\\unknwn.idl\r\n  unknwn.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\wtypes.idl\r\n  wtypes.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\wtypesbase.idl\r\n\r\n  wtypesbase.idl\r\n\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\basetsd.h\r\n\r\n  basetsd.h\r\n\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\guiddef.h\r\n\r\n  guiddef.h\r\n\r\n  64 bit Processing C:/Users/eitsarpa/devel/dotnet/runtime-feature3/src/coreclr/inc\\xclrdata.idl\r\n\r\n  xclrdata.idl\r\n\r\n  64 bit Processing C:/Users/eitsarpa/devel/dotnet/runtime-feature3/src/coreclr/inc\\clrdata.idl\r\n\r\n  clrdata.idl\r\n\r\n  [39/540] Building CXX object gcinfo\\CMakeFiles\\gcinfo_win_x64.dir\\arraylist.cpp.obj\r\n  [40/540] Compiling corpub.idl\r\n  64 bit Processing C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\inc\\corpub.idl\r\n  corpub.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\um\\unknwn.idl\r\n  unknwn.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\wtypes.idl\r\n  wtypes.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\wtypesbase.idl\r\n  wtypesbase.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\basetsd.h\r\n  basetsd.h\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\guiddef.h\r\n  guiddef.h\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\um\\oaidl.idl\r\n  oaidl.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\um\\objidl.idl\r\n  objidl.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\um\\oaidl.acf\r\n  oaidl.acf\r\n  [41/540] Building CXX object dlls\\mscordac\\CMakeFiles\\mscordacobj.dir\\mscordac.cpp.obj\r\n  [42/540] Preprocessing C:/Users/eitsarpa/devel/dotnet/runtime-feature3/src/coreclr/dlls/mscordac/mscordac.src. Outputting to C:/Users/eitsarpa/devel/dotnet/runtime-feature3/artifacts/obj/coreclr/windows.x64.Debug/arm64/dlls/mscordac/./mscordac.def\r\n  mscordac.src\r\n  [43/540] Compiling corsym.idl\r\n  64 bit Processing C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\inc\\corsym.idl\r\n  corsym.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\um\\oaidl.idl\r\n  oaidl.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\um\\objidl.idl\r\n  objidl.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\um\\unknwn.idl\r\n  unknwn.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\wtypes.idl\r\n  wtypes.idl\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\wtypesbase.idl\r\n\r\n  wtypesbase.idl\r\n\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\basetsd.h\r\n\r\n  basetsd.h\r\n\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\shared\\guiddef.h\r\n\r\n  guiddef.h\r\n\r\n  64 bit Processing C:\\Program Files (x86)\\Windows Kits\\10\\\\include\\10.0.22621.0\\\\um\\oaidl.acf\r\n\r\n  oaidl.acf\r\n\r\n  [44/540] Building CXX object gcinfo\\CMakeFiles\\gcinfo_win_x64.dir\\simplerhash.cpp.obj\r\n  [45/540] Building CXX object gcinfo\\CMakeFiles\\gcinfo_win_x64.dir\\gcinfoencoder.cpp.obj\r\n  [46/540] Building C object inc\\CMakeFiles\\corguids.dir\\idls_out\\clrdata_i.c.obj\r\n  [47/540] Building C object inc\\CMakeFiles\\corguids.dir\\idls_out\\cordebug_i.c.obj\r\n  [48/540] Building C object inc\\CMakeFiles\\corguids.dir\\idls_out\\clrinternal_i.c.obj\r\n  [49/540] Building C object inc\\CMakeFiles\\corguids.dir\\idls_out\\xcordebug_i.c.obj\r\n  [50/540] Building C object inc\\CMakeFiles\\corguids.dir\\idls_out\\xclrdata_i.c.obj\r\n  [51/540] Linking CXX static library gcinfo\\gcinfo_win_x64.lib\r\n  [52/540] Building C object inc\\CMakeFiles\\corguids.dir\\idls_out\\corsym_i.c.obj\r\n  [53/540] Building C object inc\\CMakeFiles\\corguids.dir\\idls_out\\corprof_i.c.obj\r\n  [54/540] Building C object inc\\CMakeFiles\\corguids.dir\\idls_out\\corpub_i.c.obj\r\n  [55/540] Building C object inc\\CMakeFiles\\corguids.dir\\idls_out\\sospriv_i.c.obj\r\n  [56/540] Generating eventprovider.timestamp\r\n  [57/540] Building CXX object md\\runtime\\CMakeFiles\\mdruntime_dac.dir\\cmake_pch.cxx.obj\r\n  [58/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler-dbi.dir\\cmake_pch.cxx.obj\r\n  [59/540] Building CXX object md\\runtime\\CMakeFiles\\mdruntime-dbi.dir\\cmake_pch.cxx.obj\r\n  [60/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler_dac.dir\\cmake_pch.cxx.obj\r\n  [61/540] Building CXX object md\\enc\\CMakeFiles\\mdruntimerw-dbi.dir\\cmake_pch.cxx.obj\r\n  [62/540] Building CXX object md\\runtime\\CMakeFiles\\mdruntime_dac.dir\\mdcolumndescriptors.cpp.obj\r\n  [63/540] Building CXX object md\\datasource\\CMakeFiles\\mddatasource_dbi.dir\\cmake_pch.cxx.obj\r\n  [64/540] Building CXX object md\\runtime\\CMakeFiles\\mdruntime_dac.dir\\liteweightstgdb.cpp.obj\r\n  [65/540] Building CXX object md\\runtime\\CMakeFiles\\mdruntime_dac.dir\\mdfileformat.cpp.obj\r\n  [66/540] Building CXX object md\\runtime\\CMakeFiles\\mdruntime_dac.dir\\recordpool.cpp.obj\r\n  [67/540] Building CXX object md\\runtime\\CMakeFiles\\mdruntime_dac.dir\\metamodelro.cpp.obj\r\n  [68/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler_dac.dir\\classfactory.cpp.obj\r\n  [69/540] Building CXX object md\\runtime\\CMakeFiles\\mdruntime_dac.dir\\metamodel.cpp.obj\r\n  [70/540] Building CXX object md\\enc\\CMakeFiles\\mdruntimerw_dac.dir\\cmake_pch.cxx.obj\r\n  [71/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler_dac.dir\\assemblymd_emit.cpp.obj\r\n  [72/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler-dbi.dir\\assemblymd_emit.cpp.obj\r\n  [73/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler-dbi.dir\\assemblymd.cpp.obj\r\n  [74/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler_dac.dir\\assemblymd.cpp.obj\r\n  [75/540] Building CXX object md\\runtime\\CMakeFiles\\mdruntime_dac.dir\\mdinternaldisp.cpp.obj\r\n  [76/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler_dac.dir\\filtermanager.cpp.obj\r\n  [77/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler_dac.dir\\mdutil.cpp.obj\r\n  [78/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler_dac.dir\\emit.cpp.obj\r\n  [79/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler_dac.dir\\helper.cpp.obj\r\n  [80/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler_dac.dir\\custattr_emit.cpp.obj\r\n  [81/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler_dac.dir\\importhelper.cpp.obj\r\n  [82/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler_dac.dir\\disp.cpp.obj\r\n  [83/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler_dac.dir\\regmeta_compilersupport.cpp.obj\r\n  [84/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler_dac.dir\\custattr_import.cpp.obj\r\n  [85/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler_dac.dir\\regmeta.cpp.obj\r\n  [86/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler_dac.dir\\import.cpp.obj\r\n  [87/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler-dbi.dir\\classfactory.cpp.obj\r\n  [88/540] Generating eventing_headers.timestamp\r\n  [89/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler_dac.dir\\regmeta_emit.cpp.obj\r\n  [90/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler_dac.dir\\regmeta_imetadatatables.cpp.obj\r\n  [91/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler_dac.dir\\regmeta_vm.cpp.obj\r\n  [92/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler_dac.dir\\regmeta_import.cpp.obj\r\n  [93/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler-dbi.dir\\emit.cpp.obj\r\n  [94/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler-dbi.dir\\custattr_import.cpp.obj\r\n  [95/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler-dbi.dir\\filtermanager.cpp.obj\r\n  [96/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler-dbi.dir\\custattr_emit.cpp.obj\r\n  [97/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler-dbi.dir\\helper.cpp.obj\r\n  [98/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler-dbi.dir\\disp.cpp.obj\r\n  [99/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler-dbi.dir\\importhelper.cpp.obj\r\n  [100/540] Linking CXX static library md\\compiler\\mdcompiler_dac.lib\r\n  [101/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler-dbi.dir\\mdutil.cpp.obj\r\n  [102/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler-dbi.dir\\import.cpp.obj\r\n  [103/540] Building RC object jit\\CMakeFiles\\clrjit_win_x64_arm64.dir\\Native.rc.res\r\n  [104/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler-dbi.dir\\regmeta.cpp.obj\r\n  [105/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler-dbi.dir\\regmeta_compilersupport.cpp.obj\r\n  [106/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler-dbi.dir\\regmeta_emit.cpp.obj\r\n  [107/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler-dbi.dir\\regmeta_vm.cpp.obj\r\n  [108/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler-dbi.dir\\regmeta_imetadatatables.cpp.obj\r\n  [109/540] Building CXX object md\\compiler\\CMakeFiles\\mdcompiler-dbi.dir\\regmeta_import.cpp.obj\r\n  [110/540] Building CXX object md\\runtime\\CMakeFiles\\mdruntime-dbi.dir\\mdcolumndescriptors.cpp.obj\r\n  [111/540] Building CXX object md\\runtime\\CMakeFiles\\mdruntime_dac.dir\\strongnameinternal.cpp.obj\r\n  [112/540] Building CXX object md\\runtime\\CMakeFiles\\mdruntime-dbi.dir\\mdfileformat.cpp.obj\r\n  [113/540] Building CXX object md\\runtime\\CMakeFiles\\mdruntime-dbi.dir\\liteweightstgdb.cpp.obj\r\n  [114/540] Building CXX object md\\runtime\\CMakeFiles\\mdruntime-dbi.dir\\recordpool.cpp.obj\r\n  [115/540] Building CXX object md\\runtime\\CMakeFiles\\mdruntime_dac.dir\\mdinternalro.cpp.obj\r\n  [116/540] Building CXX object md\\runtime\\CMakeFiles\\mdruntime-dbi.dir\\metamodelro.cpp.obj\r\n  [117/540] Building CXX object md\\runtime\\CMakeFiles\\mdruntime-dbi.dir\\metamodel.cpp.obj\r\n  [118/540] Linking CXX static library md\\compiler\\mdcompiler-dbi.lib\r\n  [119/540] Building CXX object md\\runtime\\CMakeFiles\\mdruntime-dbi.dir\\strongnameinternal.cpp.obj\r\n  [120/540] Building CXX object md\\runtime\\CMakeFiles\\mdruntime-dbi.dir\\mdinternaldisp.cpp.obj\r\n  [121/540] Linking CXX static library md\\runtime\\mdruntime_dac.lib\r\n  [122/540] Building CXX object md\\enc\\CMakeFiles\\mdruntimerw_dac.dir\\metamodelenc.cpp.obj\r\n  [123/540] Building CXX object md\\enc\\CMakeFiles\\mdruntimerw_dac.dir\\stgtiggerstorage.cpp.obj\r\n  [124/540] Building CXX object md\\enc\\CMakeFiles\\mdruntimerw_dac.dir\\stgtiggerstream.cpp.obj\r\n  [125/540] Building CXX object md\\enc\\CMakeFiles\\mdruntimerw_dac.dir\\liteweightstgdbrw.cpp.obj\r\n  [126/540] Building CXX object md\\enc\\CMakeFiles\\mdruntimerw_dac.dir\\rwutil.cpp.obj\r\n  [127/540] Building CXX object md\\enc\\CMakeFiles\\mdruntimerw_dac.dir\\peparse.cpp.obj\r\n  [128/540] Building CXX object md\\runtime\\CMakeFiles\\mdruntime-dbi.dir\\mdinternalro.cpp.obj\r\n  [129/540] Building CXX object md\\enc\\CMakeFiles\\mdruntimerw_dac.dir\\stgio.cpp.obj\r\n  [130/540] Building CXX object md\\enc\\CMakeFiles\\mdruntimerw_dac.dir\\metamodelrw.cpp.obj\r\n  [131/540] Building CXX object md\\enc\\CMakeFiles\\mdruntimerw_dac.dir\\pdbheap.cpp.obj\r\n  [132/540] Building CXX object md\\enc\\CMakeFiles\\mdruntimerw-dbi.dir\\metamodelenc.cpp.obj\r\n  [133/540] Linking CXX static library md\\runtime\\mdruntime-dbi.lib\r\n  [134/540] Building CXX object md\\enc\\CMakeFiles\\mdruntimerw-dbi.dir\\rwutil.cpp.obj\r\n  [135/540] Building CXX object md\\enc\\CMakeFiles\\mdruntimerw-dbi.dir\\liteweightstgdbrw.cpp.obj\r\n  [136/540] Building CXX object md\\enc\\CMakeFiles\\mdruntimerw-dbi.dir\\stgtiggerstorage.cpp.obj\r\n  [137/540] Building CXX object md\\enc\\CMakeFiles\\mdruntimerw-dbi.dir\\stgtiggerstream.cpp.obj\r\n  [138/540] Building CXX object md\\enc\\CMakeFiles\\mdruntimerw-dbi.dir\\peparse.cpp.obj\r\n  [139/540] Building CXX object md\\enc\\CMakeFiles\\mdruntimerw-dbi.dir\\stgio.cpp.obj\r\n  [140/540] Building CXX object md\\enc\\CMakeFiles\\mdruntimerw_dac.dir\\mdinternalrw.cpp.obj\r\n  [141/540] Building CXX object md\\enc\\CMakeFiles\\mdruntimerw-dbi.dir\\pdbheap.cpp.obj\r\n  [142/540] Building CXX object md\\enc\\CMakeFiles\\mdruntimerw-dbi.dir\\metamodelrw.cpp.obj\r\n  [143/540] Building CXX object md\\datasource\\CMakeFiles\\mddatasource_dbi.dir\\api.cpp.obj\r\n  [144/540] Building CXX object md\\datasource\\CMakeFiles\\mddatasource_dbi.dir\\datatargetreader.cpp.obj\r\n  [145/540] Building ASM object debug\\di\\CMakeFiles\\cordbdi.dir\\amd64\\FloatConversion.asm.obj\r\n  FAILED: debug/di/CMakeFiles/cordbdi.dir/amd64/FloatConversion.asm.obj\r\n  C:\\PROGRA~1\\MICROS~3\\2022\\Preview\\VC\\Tools\\MSVC\\1441~1.340\\bin\\HostX86\\arm64\\armasm64.exe -g -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\native -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\native\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\core\r\n  clr\\pal\\prebuilt\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\artifacts\\obj -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\\r\n  coreclr\\debug\\inc\\amd64 -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\inc\\dump -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\md\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\classlibnative\\bcltype -IC:\\Users\\eitsarpa\\de\r\n  vel\\dotnet\\runtime-feature3\\src\\coreclr\\classlibnative\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\artifacts\\obj\\coreclr\\windows.x64.Debug\\arm64\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\hosts\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-featu\r\n  re3\\src\\coreclr\\minipal -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\artifacts\\obj\\coreclr\\windows.x64.Debug\\arm64\\inc\\etw  -o debug\\di\\CMakeFiles\\cordbdi.dir\\amd64\\FloatConversion.asm.obj C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\di\\amd64\\FloatCon\r\n  version.asm\r\n  Microsoft (R) ARM Macro Assembler Version 14.41.34021.0 for 64 bits\r\n  Copyright (C) Microsoft Corporation.  All rights reserved.\r\n\r\n  C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\di\\amd64\\FloatConversion.asm(13) : error A2034: unknown opcode: segment\r\n\r\n  _TEXT segment para \u0027CODE\u0027\r\n  C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\di\\amd64\\FloatConversion.asm(15) : error A2034: unknown opcode: movdqa\r\n\r\n              movdqa  xmm0, [rcx]\r\n  C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\di\\amd64\\FloatConversion.asm(20) : warning A4045: missing END directive\r\n\r\n\r\n  END\r\n\r\n  [146/540] Linking CXX static library md\\enc\\mdruntimerw_dac.lib\r\n  [147/540] Building CXX object md\\datasource\\CMakeFiles\\mddatasource_dbi.dir\\targettypes.cpp.obj\r\n  [148/540] Building CXX object md\\datasource\\CMakeFiles\\mddatasource_dbi.dir\\remotemdinternalrwsource.cpp.obj\r\n  [149/540] Building CXX object md\\enc\\CMakeFiles\\mdruntimerw-dbi.dir\\mdinternalrw.cpp.obj\r\n  [150/540] Building CXX object utilcode\\CMakeFiles\\utilcode_dac.dir\\cmake_pch.cxx.obj\r\n  [151/540] Building CXX object vm\\CMakeFiles\\cee_dac.dir\\cmake_pch.cxx.obj\r\n  FAILED: vm/CMakeFiles/cee_dac.dir/cmake_pch.cxx.obj\r\n [151/540] Building CXX object vm\\CMakeFiles\\cee_dac.dir\\cmake_pch.cxx.obj\r\n  FAILED: vm/CMakeFiles/cee_dac.dir/cmake_pch.cxx.obj\r\n  C:\\PROGRA~1\\MICROS~3\\2022\\Preview\\VC\\Tools\\MSVC\\1441~1.340\\bin\\HOSTAR~1\\arm64\\cl.exe  /nologo /TP -DBUILDENV_DEBUG=1 -DCROSS_COMPILE -DDACCESS_COMPILE -DDEBUG -DDEBUGGING_SUPPORTED -DFEATURE_BASICFREEZE -DFEATURE_CODE_VERSIONING -DFEATURE_COLLECTIBLE_TYPES -DFEATURE_COMINTEROP\r\n   -DFEATURE_COMINTEROP_APARTMENT_SUPPORT -DFEATURE_COMINTEROP_UNMANAGED_ACTIVATION -DFEATURE_COMWRAPPERS -DFEATURE_CORECLR -DFEATURE_DATABREAKPOINT -DFEATURE_DEFAULT_INTERFACES -DFEATURE_EH_FUNCLETS -DFEATURE_EVENT_TRACE -DFEATURE_HIJACK -DFEATURE_ICASTABLE -DFEATURE_IJW -DFEAT\r\n  URE_INSTANTIATINGSTUB_AS_IL -DFEATURE_INTEROP_DEBUGGING -DFEATURE_ISYM_READER -DFEATURE_MANUALLY_MANAGED_CARD_BUNDLES -DFEATURE_METADATA_UPDATER -DFEATURE_MULTICOREJIT -DFEATURE_ON_STACK_REPLACEMENT -DFEATURE_PERFTRACING -DFEATURE_PGO -DFEATURE_PORTABLE_SHUFFLE_THUNKS -DFEATUR\r\n  E_READYTORUN -DFEATURE_REJIT -DFEATURE_REMAP_FUNCTION -DFEATURE_SPECIAL_USER_MODE_APC -DFEATURE_STANDALONE_GC -DFEATURE_SVR_GC -DFEATURE_SYMDIFF -DFEATURE_TIERED_COMPILATION -DFEATURE_TYPEEQUIVALENCE -DFEATURE_USE_ASM_GC_WRITE_BARRIERS -DFEATURE_USE_SOFTWARE_WRITE_WATCH_FOR_GC\r\n  _HEAP -DHOST_64BIT -DHOST_ARM64 -DHOST_WINDOWS -DNOMINMAX -DOUT_OF_PROCESS_SETTHREADCONTEXT -DPROFILING_SUPPORTED_DATA -DTARGET_64BIT -DTARGET_AMD64 -DTARGET_WINDOWS -DUNICODE -DUNIX_AMD64_ABI_ITF -DURTBLDENV_FRIENDLY=Debug -DWIN32 -DWIN32_LEAN_AND_MEAN -DWINVER=0x0602 -DWRITE\r\n  _BARRIER_CHECK -D_CRT_SECURE_NO_WARNINGS -D_DBG -D_DEBUG -D_FILE_OFFSET_BITS=64 -D_SECURE_SCL=0 -D_TIME_BITS=64 -D_UNICODE -D_WIN32 -D_WIN32_WINNT=0x0602 -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\artifacts\\obj\\coreclr\\windows.x64.Debug\\arm64\\vm -IC:\\Users\\eitsarpa\\deve\r\n  l\\dotnet\\runtime-feature3\\src\\coreclr\\vm -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\native -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\native\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\pal\\prebuilt\\inc -IC:\\Users\\eitsarpa\\devel\\dotne\r\n  t\\runtime-feature3\\artifacts\\obj -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\inc\\amd64 -IC:\\Users\\eitsarpa\\devel\\do\r\n  tnet\\runtime-feature3\\src\\coreclr\\debug\\inc\\dump -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\md\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\classlibnative\\bcltype -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\classlibnati\r\n  ve\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\artifacts\\obj\\coreclr\\windows.x64.Debug\\arm64\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\hosts\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\minipal -IC:\\Users\\eitsarpa\\devel\\do\r\n  tnet\\runtime-feature3\\artifacts\\obj\\coreclr\\windows.x64.Debug\\arm64\\inc\\etw -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\vm\\amd64 -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\vm\\..\\interop\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\\r\n  src\\native\\libs\\System.IO.Compression.Native -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\native\\libs\\Common -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\vm\\eventing\\eventpipe -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\vm\\eventing\\u\r\n  serevents /DWIN32 /D_WINDOWS  /GR- /Zi /Ob0 /Od /RTC1 -MT /Od /EHa /nologo /W4 /WX /Oi /Oy- /Gm- /Zp8 /Gy /GS /fp:precise /FC /MP /Zm200 /Zc:strictStrings /Zc:wchar_t /Zc:inline /Zc:forScope /wd4065 /wd4100 /wd4127 /wd4131 /wd4189 /wd4200 /wd4201 /wd4206 /wd4239 /wd4245 /wd429\r\n  1 /wd4310 /wd4324 /wd4366 /wd4456 /wd4457 /wd4458 /wd4459 /wd4463 /wd4505 /wd4702 /wd4706 /wd4733 /wd4815 /wd4838 /wd4918 /wd4960 /wd4961 /wd5105 /wd5205 /we4007 /we4013 /we4102 /we4551 /we4640 /we4806 /we4055 /we4146 /we4242 /we4244 /we4267 /we4302 /we4308 /we4509 /we4510 /we\r\n  4532 /we4533 /we4610 /we4611 /we4700 /we4701 /we4703 /we4789 /we4995 /we4996 /w34092 /w34121 /w34125 /w34130 /w34132 /w34212 /w34530 /w35038 /w44177 /Zi /ZH:SHA_256 /source-charset:utf-8 /guard:cf /Zl /YcC:/Users/eitsarpa/devel/dotnet/runtime-feature3/artifacts/obj/coreclr/win\r\n  dows.x64.Debug/arm64/vm/CMakeFiles/cee_dac.dir/cmake_pch.hxx /FpC:/Users/eitsarpa/devel/dotnet/runtime-feature3/artifacts/obj/coreclr/windows.x64.Debug/arm64/vm/CMakeFiles/cee_dac.dir/./cmake_pch.cxx.pch /FIC:/Users/eitsarpa/devel/dotnet/runtime-feature3/artifacts/obj/coreclr/\r\n  windows.x64.Debug/arm64/vm/CMakeFiles/cee_dac.dir/cmake_pch.hxx /showIncludes /Fovm\\CMakeFiles\\cee_dac.dir\\cmake_pch.cxx.obj /Fdvm\\CMakeFiles\\cee_dac.dir\\cee_dac.pdb /FS -c C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\artifacts\\obj\\coreclr\\windows.x64.Debug\\arm64\\vm\\CMakeFi\r\n  les\\cee_dac.dir\\cmake_pch.cxx\r\n  C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\inc\\dbgtargetcontext.h(296): error C2338: static_assert failed: \u0027DT_CONTEXT size must equal the T_CONTEXT size on AMD64\u0027\r\n  C:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\VC\\Tools\\MSVC\\14.41.34021\\include\\xmmintrin.h(27): fatal error C1189: #error:  This header is specific to X86, X64, ARM64, and ARM64EC targets\r\n  [152/540] Building CXX object utilcode\\CMakeFiles\\utilcodestaticnohost.dir\\cmake_pch.cxx.obj\r\n  [153/540] Building CXX object unwinder\\CMakeFiles\\unwinder_dac.dir\\baseunwinder.cpp.obj\r\n  FAILED: unwinder/CMakeFiles/unwinder_dac.dir/baseunwinder.cpp.obj\r\n  C:\\PROGRA~1\\MICROS~3\\2022\\Preview\\VC\\Tools\\MSVC\\1441~1.340\\bin\\HOSTAR~1\\arm64\\cl.exe  /nologo /TP -DBUILDENV_DEBUG=1 -DCROSS_COMPILE -DDACCESS_COMPILE -DDEBUG -DDEBUGGING_SUPPORTED -DFEATURE_BASICFREEZE -DFEATURE_CODE_VERSIONING -DFEATURE_COLLECTIBLE_TYPES -DFEATURE_COMINTEROP\r\n   -DFEATURE_COMINTEROP_APARTMENT_SUPPORT -DFEATURE_COMINTEROP_UNMANAGED_ACTIVATION -DFEATURE_COMWRAPPERS -DFEATURE_CORECLR -DFEATURE_DATABREAKPOINT -DFEATURE_DEFAULT_INTERFACES -DFEATURE_EH_FUNCLETS -DFEATURE_EVENT_TRACE -DFEATURE_HIJACK -DFEATURE_ICASTABLE -DFEATURE_IJW -DFEAT\r\n  URE_INSTANTIATINGSTUB_AS_IL -DFEATURE_INTEROP_DEBUGGING -DFEATURE_ISYM_READER -DFEATURE_MANUALLY_MANAGED_CARD_BUNDLES -DFEATURE_METADATA_UPDATER -DFEATURE_MULTICOREJIT -DFEATURE_NO_HOST -DFEATURE_ON_STACK_REPLACEMENT -DFEATURE_PERFTRACING -DFEATURE_PGO -DFEATURE_PORTABLE_SHUFF\r\n  LE_THUNKS -DFEATURE_READYTORUN -DFEATURE_REJIT -DFEATURE_REMAP_FUNCTION -DFEATURE_SPECIAL_USER_MODE_APC -DFEATURE_STANDALONE_GC -DFEATURE_SVR_GC -DFEATURE_SYMDIFF -DFEATURE_TIERED_COMPILATION -DFEATURE_TYPEEQUIVALENCE -DFEATURE_USE_ASM_GC_WRITE_BARRIERS -DFEATURE_USE_SOFTWARE_\r\n  WRITE_WATCH_FOR_GC_HEAP -DHOST_64BIT -DHOST_ARM64 -DHOST_WINDOWS -DNOMINMAX -DOUT_OF_PROCESS_SETTHREADCONTEXT -DPROFILING_SUPPORTED_DATA -DTARGET_64BIT -DTARGET_AMD64 -DTARGET_WINDOWS -DUNICODE -DUNIX_AMD64_ABI_ITF -DURTBLDENV_FRIENDLY=Debug -DWIN32 -DWIN32_LEAN_AND_MEAN -DWIN\r\n  VER=0x0602 -D_CRT_SECURE_NO_WARNINGS -D_DBG -D_DEBUG -D_FILE_OFFSET_BITS=64 -D_SECURE_SCL=0 -D_TIME_BITS=64 -D_UNICODE -D_WIN32 -D_WIN32_WINNT=0x0602 -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\unwinder -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\co\r\n  reclr\\vm\\amd64 -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\vm -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\native -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\native\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\pal\\prebu\r\n  ilt\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\artifacts\\obj -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\r\n  \\inc\\amd64 -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\inc\\dump -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\md\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\classlibnative\\bcltype -IC:\\Users\\eitsarpa\\devel\\dotnet\\ru\r\n  ntime-feature3\\src\\coreclr\\classlibnative\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\artifacts\\obj\\coreclr\\windows.x64.Debug\\arm64\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\hosts\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\corec\r\n  lr\\minipal -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\artifacts\\obj\\coreclr\\windows.x64.Debug\\arm64\\inc\\etw -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\ee -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\gc -IC:\\Users\\eitsarpa\\devel\\\r\n  dotnet\\runtime-feature3\\src\\coreclr\\gcdump -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\daccess -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\unwinder\\amd64 /DWIN32 /D_WINDOWS  /GR- /Zi /Ob0 /Od /RTC1 -MT /Od /EHa /nologo /W4 /WX /Oi /Oy-\r\n   /Gm- /Zp8 /Gy /GS /fp:precise /FC /MP /Zm200 /Zc:strictStrings /Zc:wchar_t /Zc:inline /Zc:forScope /wd4065 /wd4100 /wd4127 /wd4131 /wd4189 /wd4200 /wd4201 /wd4206 /wd4239 /wd4245 /wd4291 /wd4310 /wd4324 /wd4366 /wd4456 /wd4457 /wd4458 /wd4459 /wd4463 /wd4505 /wd4702 /wd4706 /\r\n  wd4733 /wd4815 /wd4838 /wd4918 /wd4960 /wd4961 /wd5105 /wd5205 /we4007 /we4013 /we4102 /we4551 /we4640 /we4806 /we4055 /we4146 /we4242 /we4244 /we4267 /we4302 /we4308 /we4509 /we4510 /we4532 /we4533 /we4610 /we4611 /we4700 /we4701 /we4703 /we4789 /we4995 /we4996 /w34092 /w3412\r\n  1 /w34125 /w34130 /w34132 /w34212 /w34530 /w35038 /w44177 /Zi /ZH:SHA_256 /source-charset:utf-8 /guard:cf /Zl /showIncludes /Founwinder\\CMakeFiles\\unwinder_dac.dir\\baseunwinder.cpp.obj /Fdunwinder\\CMakeFiles\\unwinder_dac.dir\\unwinder_dac.pdb /FS -c C:\\Users\\eitsarpa\\devel\\dotn\r\n  et\\runtime-feature3\\src\\coreclr\\unwinder\\baseunwinder.cpp\r\n  C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\inc\\dbgtargetcontext.h(296): error C2338: static_assert failed: \u0027DT_CONTEXT size must equal the T_CONTEXT size on AMD64\u0027\r\n  C:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\VC\\Tools\\MSVC\\14.41.34021\\include\\xmmintrin.h(27): fatal error C1189: #error:  This header is specific to X86, X64, ARM64, and ARM64EC targets\r\n  [154/540] Building CXX object unwinder\\CMakeFiles\\unwinder_dac.dir\\amd64\\unwinder.cpp.obj\r\n  FAILED: unwinder/CMakeFiles/unwinder_dac.dir/amd64/unwinder.cpp.obj\r\n  C:\\PROGRA~1\\MICROS~3\\2022\\Preview\\VC\\Tools\\MSVC\\1441~1.340\\bin\\HOSTAR~1\\arm64\\cl.exe  /nologo /TP -DBUILDENV_DEBUG=1 -DCROSS_COMPILE -DDACCESS_COMPILE -DDEBUG -DDEBUGGING_SUPPORTED -DFEATURE_BASICFREEZE -DFEATURE_CODE_VERSIONING -DFEATURE_COLLECTIBLE_TYPES -DFEATURE_COMINTEROP\r\n   -DFEATURE_COMINTEROP_APARTMENT_SUPPORT -DFEATURE_COMINTEROP_UNMANAGED_ACTIVATION -DFEATURE_COMWRAPPERS -DFEATURE_CORECLR -DFEATURE_DATABREAKPOINT -DFEATURE_DEFAULT_INTERFACES -DFEATURE_EH_FUNCLETS -DFEATURE_EVENT_TRACE -DFEATURE_HIJACK -DFEATURE_ICASTABLE -DFEATURE_IJW -DFEAT\r\n  URE_INSTANTIATINGSTUB_AS_IL -DFEATURE_INTEROP_DEBUGGING -DFEATURE_ISYM_READER -DFEATURE_MANUALLY_MANAGED_CARD_BUNDLES -DFEATURE_METADATA_UPDATER -DFEATURE_MULTICOREJIT -DFEATURE_NO_HOST -DFEATURE_ON_STACK_REPLACEMENT -DFEATURE_PERFTRACING -DFEATURE_PGO -DFEATURE_PORTABLE_SHUFF\r\n  LE_THUNKS -DFEATURE_READYTORUN -DFEATURE_REJIT -DFEATURE_REMAP_FUNCTION -DFEATURE_SPECIAL_USER_MODE_APC -DFEATURE_STANDALONE_GC -DFEATURE_SVR_GC -DFEATURE_SYMDIFF -DFEATURE_TIERED_COMPILATION -DFEATURE_TYPEEQUIVALENCE -DFEATURE_USE_ASM_GC_WRITE_BARRIERS -DFEATURE_USE_SOFTWARE_\r\n  WRITE_WATCH_FOR_GC_HEAP -DHOST_64BIT -DHOST_ARM64 -DHOST_WINDOWS -DNOMINMAX -DOUT_OF_PROCESS_SETTHREADCONTEXT -DPROFILING_SUPPORTED_DATA -DTARGET_64BIT -DTARGET_AMD64 -DTARGET_WINDOWS -DUNICODE -DUNIX_AMD64_ABI_ITF -DURTBLDENV_FRIENDLY=Debug -DWIN32 -DWIN32_LEAN_AND_MEAN -DWIN\r\n  VER=0x0602 -D_CRT_SECURE_NO_WARNINGS -D_DBG -D_DEBUG -D_FILE_OFFSET_BITS=64 -D_SECURE_SCL=0 -D_TIME_BITS=64 -D_UNICODE -D_WIN32 -D_WIN32_WINNT=0x0602 -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\unwinder -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\co\r\n  reclr\\vm\\amd64 -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\vm -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\native -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\native\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\pal\\prebu\r\n  ilt\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\artifacts\\obj -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\r\n  \\inc\\amd64 -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\inc\\dump -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\md\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\classlibnative\\bcltype -IC:\\Users\\eitsarpa\\devel\\dotnet\\ru\r\n  ntime-feature3\\src\\coreclr\\classlibnative\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\artifacts\\obj\\coreclr\\windows.x64.Debug\\arm64\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\hosts\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\corec\r\n  lr\\minipal -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\artifacts\\obj\\coreclr\\windows.x64.Debug\\arm64\\inc\\etw -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\ee -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\gc -IC:\\Users\\eitsarpa\\devel\\\r\n  dotnet\\runtime-feature3\\src\\coreclr\\gcdump -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\daccess -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\unwinder\\amd64 /DWIN32 /D_WINDOWS  /GR- /Zi /Ob0 /Od /RTC1 -MT /Od /EHa /nologo /W4 /WX /Oi /Oy-\r\n   /Gm- /Zp8 /Gy /GS /fp:precise /FC /MP /Zm200 /Zc:strictStrings /Zc:wchar_t /Zc:inline /Zc:forScope /wd4065 /wd4100 /wd4127 /wd4131 /wd4189 /wd4200 /wd4201 /wd4206 /wd4239 /wd4245 /wd4291 /wd4310 /wd4324 /wd4366 /wd4456 /wd4457 /wd4458 /wd4459 /wd4463 /wd4505 /wd4702 /wd4706 /\r\n  wd4733 /wd4815 /wd4838 /wd4918 /wd4960 /wd4961 /wd5105 /wd5205 /we4007 /we4013 /we4102 /we4551 /we4640 /we4806 /we4055 /we4146 /we4242 /we4244 /we4267 /we4302 /we4308 /we4509 /we4510 /we4532 /we4533 /we4610 /we4611 /we4700 /we4701 /we4703 /we4789 /we4995 /we4996 /w34092 /w3412\r\n  1 /w34125 /w34130 /w34132 /w34212 /w34530 /w35038 /w44177 /Zi /ZH:SHA_256 /source-charset:utf-8 /guard:cf /Zl /showIncludes /Founwinder\\CMakeFiles\\unwinder_dac.dir\\amd64\\unwinder.cpp.obj /Fdunwinder\\CMakeFiles\\unwinder_dac.dir\\unwinder_dac.pdb /FS -c C:\\Users\\eitsarpa\\devel\\do\r\n  tnet\\runtime-feature3\\src\\coreclr\\unwinder\\amd64\\unwinder.cpp\r\n  C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\inc\\dbgtargetcontext.h(296): error C2338: static_assert failed: \u0027DT_CONTEXT size must equal the T_CONTEXT size on AMD64\u0027\r\n  C:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\VC\\Tools\\MSVC\\14.41.34021\\include\\xmmintrin.h(27): fatal error C1189: #error:  This header is specific to X86, X64, ARM64, and ARM64EC targets\r\n  [155/540] Building CXX object debug\\di\\CMakeFiles\\cordbdi.dir\\cmake_pch.cxx.obj\r\n  FAILED: debug/di/CMakeFiles/cordbdi.dir/cmake_pch.cxx.obj\r\n  C:\\PROGRA~1\\MICROS~3\\2022\\Preview\\VC\\Tools\\MSVC\\1441~1.340\\bin\\HOSTAR~1\\arm64\\cl.exe  /nologo /TP -DBUILDENV_DEBUG=1 -DCROSS_COMPILE -DDBI_COMPILE -DDEBUG -DDEBUGGING_SUPPORTED -DFEATURE_BASICFREEZE -DFEATURE_CODE_VERSIONING -DFEATURE_COLLECTIBLE_TYPES -DFEATURE_COMINTEROP -DF\r\n  EATURE_COMINTEROP_APARTMENT_SUPPORT -DFEATURE_COMINTEROP_UNMANAGED_ACTIVATION -DFEATURE_COMWRAPPERS -DFEATURE_CORECLR -DFEATURE_DATABREAKPOINT -DFEATURE_DEFAULT_INTERFACES -DFEATURE_EH_FUNCLETS -DFEATURE_EVENT_TRACE -DFEATURE_HIJACK -DFEATURE_ICASTABLE -DFEATURE_IJW -DFEATURE_\r\n  INSTANTIATINGSTUB_AS_IL -DFEATURE_INTEROP_DEBUGGING -DFEATURE_ISYM_READER -DFEATURE_MANUALLY_MANAGED_CARD_BUNDLES -DFEATURE_METADATA_CUSTOM_DATA_SOURCE -DFEATURE_METADATA_DEBUGGEE_DATA_SOURCE -DFEATURE_METADATA_LOAD_TRUSTED_IMAGES -DFEATURE_METADATA_UPDATER -DFEATURE_MULTICORE\r\n  JIT -DFEATURE_NO_HOST -DFEATURE_ON_STACK_REPLACEMENT -DFEATURE_PERFTRACING -DFEATURE_PGO -DFEATURE_PORTABLE_SHUFFLE_THUNKS -DFEATURE_PROFAPI_ATTACH_DETACH -DFEATURE_READYTORUN -DFEATURE_REJIT -DFEATURE_REMAP_FUNCTION -DFEATURE_SPECIAL_USER_MODE_APC -DFEATURE_STANDALONE_GC -DFE\r\n  ATURE_SVR_GC -DFEATURE_SYMDIFF -DFEATURE_TIERED_COMPILATION -DFEATURE_TYPEEQUIVALENCE -DFEATURE_USE_ASM_GC_WRITE_BARRIERS -DFEATURE_USE_SOFTWARE_WRITE_WATCH_FOR_GC_HEAP -DHOST_64BIT -DHOST_ARM64 -DHOST_WINDOWS -DNOMINMAX -DOUT_OF_PROCESS_SETTHREADCONTEXT -DPROFILING_SUPPORTED\r\n  -DTARGET_64BIT -DTARGET_AMD64 -DTARGET_WINDOWS -DUNICODE -DUNIX_AMD64_ABI_ITF -DURTBLDENV_FRIENDLY=Debug -DWIN32 -DWIN32_LEAN_AND_MEAN -DWINVER=0x0602 -D_CRT_SECURE_NO_WARNINGS -D_DBG -D_DEBUG -D_FILE_OFFSET_BITS=64 -D_SECURE_SCL=0 -D_TIME_BITS=64 -D_UNICODE -D_WIN32 -D_WIN32_\r\n  WINNT=0x0602 -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\native -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\native\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\pal\\prebuilt\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\artifacts\r\n  \\obj -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\inc\\amd64 -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\co\r\n  reclr\\debug\\inc\\dump -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\md\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\classlibnative\\bcltype -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\classlibnative\\inc -IC:\\Users\\eitsarpa\\d\r\n  evel\\dotnet\\runtime-feature3\\artifacts\\obj\\coreclr\\windows.x64.Debug\\arm64\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\hosts\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\minipal -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\artifa\r\n  cts\\obj\\coreclr\\windows.x64.Debug\\arm64\\inc\\etw /DWIN32 /D_WINDOWS  /GR- /Zi /Ob0 /Od /RTC1 -MT /Od /EHa /nologo /W4 /WX /Oi /Oy- /Gm- /Zp8 /Gy /GS /fp:precise /FC /MP /Zm200 /Zc:strictStrings /Zc:wchar_t /Zc:inline /Zc:forScope /wd4065 /wd4100 /wd4127 /wd4131 /wd4189 /wd4200\r\n  /wd4201 /wd4206 /wd4239 /wd4245 /wd4291 /wd4310 /wd4324 /wd4366 /wd4456 /wd4457 /wd4458 /wd4459 /wd4463 /wd4505 /wd4702 /wd4706 /wd4733 /wd4815 /wd4838 /wd4918 /wd4960 /wd4961 /wd5105 /wd5205 /we4007 /we4013 /we4102 /we4551 /we4640 /we4806 /we4055 /we4146 /we4242 /we4244 /we42\r\n  67 /we4302 /we4308 /we4509 /we4510 /we4532 /we4533 /we4610 /we4611 /we4700 /we4701 /we4703 /we4789 /we4995 /we4996 /w34092 /w34121 /w34125 /w34130 /w34132 /w34212 /w34530 /w35038 /w44177 /Zi /ZH:SHA_256 /source-charset:utf-8 /guard:cf /Zl /YcC:/Users/eitsarpa/devel/dotnet/runt\r\n  ime-feature3/artifacts/obj/coreclr/windows.x64.Debug/arm64/debug/di/CMakeFiles/cordbdi.dir/cmake_pch.hxx /FpC:/Users/eitsarpa/devel/dotnet/runtime-feature3/artifacts/obj/coreclr/windows.x64.Debug/arm64/debug/di/CMakeFiles/cordbdi.dir/./cmake_pch.cxx.pch /FIC:/Users/eitsarpa/de\r\n  vel/dotnet/runtime-feature3/artifacts/obj/coreclr/windows.x64.Debug/arm64/debug/di/CMakeFiles/cordbdi.dir/cmake_pch.hxx /showIncludes /Fodebug\\di\\CMakeFiles\\cordbdi.dir\\cmake_pch.cxx.obj /Fddebug\\di\\CMakeFiles\\cordbdi.dir\\cordbdi.pdb /FS -c C:\\Users\\eitsarpa\\devel\\dotnet\\runti\r\n  me-feature3\\artifacts\\obj\\coreclr\\windows.x64.Debug\\arm64\\debug\\di\\CMakeFiles\\cordbdi.dir\\cmake_pch.cxx\r\n  C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\inc\\dbgtargetcontext.h(296): error C2338: static_assert failed: \u0027DT_CONTEXT size must equal the T_CONTEXT size on AMD64\u0027\r\n  [156/540] Building CXX object debug\\daccess\\CMakeFiles\\daccess.dir\\cmake_pch.cxx.obj\r\n  FAILED: debug/daccess/CMakeFiles/daccess.dir/cmake_pch.cxx.obj\r\n  C:\\PROGRA~1\\MICROS~3\\2022\\Preview\\VC\\Tools\\MSVC\\1441~1.340\\bin\\HOSTAR~1\\arm64\\cl.exe  /nologo /TP -DBUILDENV_DEBUG=1 -DCROSS_COMPILE -DDACCESS_COMPILE -DDEBUG -DDEBUGGING_SUPPORTED -DFEATURE_BASICFREEZE -DFEATURE_CODE_VERSIONING -DFEATURE_COLLECTIBLE_TYPES -DFEATURE_COMINTEROP\r\n   -DFEATURE_COMINTEROP_APARTMENT_SUPPORT -DFEATURE_COMINTEROP_UNMANAGED_ACTIVATION -DFEATURE_COMWRAPPERS -DFEATURE_CORECLR -DFEATURE_DATABREAKPOINT -DFEATURE_DEFAULT_INTERFACES -DFEATURE_EH_FUNCLETS -DFEATURE_EVENT_TRACE -DFEATURE_HIJACK -DFEATURE_ICASTABLE -DFEATURE_IJW -DFEAT\r\n  URE_INSTANTIATINGSTUB_AS_IL -DFEATURE_INTEROP_DEBUGGING -DFEATURE_ISYM_READER -DFEATURE_MANUALLY_MANAGED_CARD_BUNDLES -DFEATURE_METADATA_UPDATER -DFEATURE_MULTICOREJIT -DFEATURE_NO_HOST -DFEATURE_ON_STACK_REPLACEMENT -DFEATURE_PERFTRACING -DFEATURE_PGO -DFEATURE_PORTABLE_SHUFF\r\n  LE_THUNKS -DFEATURE_READYTORUN -DFEATURE_REJIT -DFEATURE_REMAP_FUNCTION -DFEATURE_SPECIAL_USER_MODE_APC -DFEATURE_STANDALONE_GC -DFEATURE_SVR_GC -DFEATURE_SYMDIFF -DFEATURE_TIERED_COMPILATION -DFEATURE_TYPEEQUIVALENCE -DFEATURE_USE_ASM_GC_WRITE_BARRIERS -DFEATURE_USE_SOFTWARE_\r\n  WRITE_WATCH_FOR_GC_HEAP -DHOST_64BIT -DHOST_ARM64 -DHOST_WINDOWS -DNOMINMAX -DOUT_OF_PROCESS_SETTHREADCONTEXT -DPROFILING_SUPPORTED_DATA -DTARGET_64BIT -DTARGET_AMD64 -DTARGET_WINDOWS -DUNICODE -DUNIX_AMD64_ABI_ITF -DURTBLDENV_FRIENDLY=Debug -DWIN32 -DWIN32_LEAN_AND_MEAN -DWIN\r\n  VER=0x0602 -D_CRT_SECURE_NO_WARNINGS -D_DBG -D_DEBUG -D_FILE_OFFSET_BITS=64 -D_SECURE_SCL=0 -D_TIME_BITS=64 -D_UNICODE -D_WIN32 -D_WIN32_WINNT=0x0602 -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\daccess -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\s\r\n  rc\\coreclr\\vm\\amd64 -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\vm -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\native -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\native\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\pal\\\r\n  prebuilt\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\artifacts\\obj -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\\r\n  debug\\inc\\amd64 -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\inc\\dump -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\md\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\classlibnative\\bcltype -IC:\\Users\\eitsarpa\\devel\\dotn\r\n  et\\runtime-feature3\\src\\coreclr\\classlibnative\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\artifacts\\obj\\coreclr\\windows.x64.Debug\\arm64\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\hosts\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\\r\n  coreclr\\minipal -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\artifacts\\obj\\coreclr\\windows.x64.Debug\\arm64\\inc\\etw -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\ee -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\gcdump -IC:\\Users\\eitsar\r\n  pa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\interop\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\daccess\\amd64 -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\native\\managed\\cdacreader\\inc /DWIN32 /D_WINDOWS  /GR- /Zi /Ob0 /Od /RTC1 -MT /Od /E\r\n  Ha /nologo /W4 /WX /Oi /Oy- /Gm- /Zp8 /Gy /GS /fp:precise /FC /MP /Zm200 /Zc:strictStrings /Zc:wchar_t /Zc:inline /Zc:forScope /wd4065 /wd4100 /wd4127 /wd4131 /wd4189 /wd4200 /wd4201 /wd4206 /wd4239 /wd4245 /wd4291 /wd4310 /wd4324 /wd4366 /wd4456 /wd4457 /wd4458 /wd4459 /wd446\r\n  3 /wd4505 /wd4702 /wd4706 /wd4733 /wd4815 /wd4838 /wd4918 /wd4960 /wd4961 /wd5105 /wd5205 /we4007 /we4013 /we4102 /we4551 /we4640 /we4806 /we4055 /we4146 /we4242 /we4244 /we4267 /we4302 /we4308 /we4509 /we4510 /we4532 /we4533 /we4610 /we4611 /we4700 /we4701 /we4703 /we4789 /we\r\n  4995 /we4996 /w34092 /w34121 /w34125 /w34130 /w34132 /w34212 /w34530 /w35038 /w44177 /Zi /ZH:SHA_256 /source-charset:utf-8 /guard:cf /Zl /YcC:/Users/eitsarpa/devel/dotnet/runtime-feature3/artifacts/obj/coreclr/windows.x64.Debug/arm64/debug/daccess/CMakeFiles/daccess.dir/cmake_\r\n  pch.hxx /FpC:/Users/eitsarpa/devel/dotnet/runtime-feature3/artifacts/obj/coreclr/windows.x64.Debug/arm64/debug/daccess/CMakeFiles/daccess.dir/./cmake_pch.cxx.pch /FIC:/Users/eitsarpa/devel/dotnet/runtime-feature3/artifacts/obj/coreclr/windows.x64.Debug/arm64/debug/daccess/CMak\r\n  eFiles/daccess.dir/cmake_pch.hxx /showIncludes /Fodebug\\daccess\\CMakeFiles\\daccess.dir\\cmake_pch.cxx.obj /Fddebug\\daccess\\CMakeFiles\\daccess.dir\\daccess.pdb /FS -c C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\artifacts\\obj\\coreclr\\windows.x64.Debug\\arm64\\debug\\daccess\\CMake\r\n  Files\\daccess.dir\\cmake_pch.cxx\r\n  C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\inc\\dbgtargetcontext.h(296): error C2338: static_assert failed: \u0027DT_CONTEXT size must equal the T_CONTEXT size on AMD64\u0027\r\n  C:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\VC\\Tools\\MSVC\\14.41.34021\\include\\xmmintrin.h(27): fatal error C1189: #error:  This header is specific to X86, X64, ARM64, and ARM64EC targets\r\n  [157/540] Building CXX object debug\\ee\\dac\\CMakeFiles\\cordbee_dac.dir\\cmake_pch.cxx.obj\r\n  FAILED: debug/ee/dac/CMakeFiles/cordbee_dac.dir/cmake_pch.cxx.obj\r\n  C:\\PROGRA~1\\MICROS~3\\2022\\Preview\\VC\\Tools\\MSVC\\1441~1.340\\bin\\HOSTAR~1\\arm64\\cl.exe  /nologo /TP -DBUILDENV_DEBUG=1 -DCROSS_COMPILE -DDACCESS_COMPILE -DDEBUG -DDEBUGGING_SUPPORTED -DFEATURE_BASICFREEZE -DFEATURE_CODE_VERSIONING -DFEATURE_COLLECTIBLE_TYPES -DFEATURE_COMINTEROP\r\n   -DFEATURE_COMINTEROP_APARTMENT_SUPPORT -DFEATURE_COMINTEROP_UNMANAGED_ACTIVATION -DFEATURE_COMWRAPPERS -DFEATURE_CORECLR -DFEATURE_DATABREAKPOINT -DFEATURE_DEFAULT_INTERFACES -DFEATURE_EH_FUNCLETS -DFEATURE_EVENT_TRACE -DFEATURE_HIJACK -DFEATURE_ICASTABLE -DFEATURE_IJW -DFEAT\r\n  URE_INSTANTIATINGSTUB_AS_IL -DFEATURE_INTEROP_DEBUGGING -DFEATURE_ISYM_READER -DFEATURE_MANUALLY_MANAGED_CARD_BUNDLES -DFEATURE_METADATA_UPDATER -DFEATURE_MULTICOREJIT -DFEATURE_NO_HOST -DFEATURE_ON_STACK_REPLACEMENT -DFEATURE_PERFTRACING -DFEATURE_PGO -DFEATURE_PORTABLE_SHUFF\r\n  LE_THUNKS -DFEATURE_READYTORUN -DFEATURE_REJIT -DFEATURE_REMAP_FUNCTION -DFEATURE_SPECIAL_USER_MODE_APC -DFEATURE_STANDALONE_GC -DFEATURE_SVR_GC -DFEATURE_SYMDIFF -DFEATURE_TIERED_COMPILATION -DFEATURE_TYPEEQUIVALENCE -DFEATURE_USE_ASM_GC_WRITE_BARRIERS -DFEATURE_USE_SOFTWARE_\r\n  WRITE_WATCH_FOR_GC_HEAP -DHOST_64BIT -DHOST_ARM64 -DHOST_WINDOWS -DNOMINMAX -DOUT_OF_PROCESS_SETTHREADCONTEXT -DPROFILING_SUPPORTED_DATA -DTARGET_64BIT -DTARGET_AMD64 -DTARGET_WINDOWS -DUNICODE -DUNIX_AMD64_ABI_ITF -DURTBLDENV_FRIENDLY=Debug -DWIN32 -DWIN32_LEAN_AND_MEAN -DWIN\r\n  VER=0x0602 -D_CRT_SECURE_NO_WARNINGS -D_DBG -D_DEBUG -D_FILE_OFFSET_BITS=64 -D_SECURE_SCL=0 -D_TIME_BITS=64 -D_UNICODE -D_WIN32 -D_WIN32_WINNT=0x0602 -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\artifacts\\obj\\coreclr\\windows.x64.Debug\\arm64\\debug\\ee\\dac -IC:\\Users\\eitsarp\r\n  a\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\ee\\dac -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\ee -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\vm\\amd64 -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\vm -IC:\\Users\\ei\r\n  tsarpa\\devel\\dotnet\\runtime-feature3\\src\\native -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\native\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\pal\\prebuilt\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\artifacts\\obj -IC:\\Users\\eitsarpa\\d\r\n  evel\\dotnet\\runtime-feature3\\src\\coreclr\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\inc\\amd64 -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\inc\\dump -IC:\\\r\n  Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\md\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\classlibnative\\bcltype -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\classlibnative\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-featur\r\n  e3\\artifacts\\obj\\coreclr\\windows.x64.Debug\\arm64\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\hosts\\inc -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\minipal -IC:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\artifacts\\obj\\coreclr\\windows.x6\r\n  4.Debug\\arm64\\inc\\etw /DWIN32 /D_WINDOWS  /GR- /Zi /Ob0 /Od /RTC1 -MT /Od /EHa /nologo /W4 /WX /Oi /Oy- /Gm- /Zp8 /Gy /GS /fp:precise /FC /MP /Zm200 /Zc:strictStrings /Zc:wchar_t /Zc:inline /Zc:forScope /wd4065 /wd4100 /wd4127 /wd4131 /wd4189 /wd4200 /wd4201 /wd4206 /wd4239 /w\r\n  d4245 /wd4291 /wd4310 /wd4324 /wd4366 /wd4456 /wd4457 /wd4458 /wd4459 /wd4463 /wd4505 /wd4702 /wd4706 /wd4733 /wd4815 /wd4838 /wd4918 /wd4960 /wd4961 /wd5105 /wd5205 /we4007 /we4013 /we4102 /we4551 /we4640 /we4806 /we4055 /we4146 /we4242 /we4244 /we4267 /we4302 /we4308 /we4509\r\n   /we4510 /we4532 /we4533 /we4610 /we4611 /we4700 /we4701 /we4703 /we4789 /we4995 /we4996 /w34092 /w34121 /w34125 /w34130 /w34132 /w34212 /w34530 /w35038 /w44177 /Zi /ZH:SHA_256 /source-charset:utf-8 /guard:cf /Zl /YcC:/Users/eitsarpa/devel/dotnet/runtime-feature3/artifacts/obj\r\n  /coreclr/windows.x64.Debug/arm64/debug/ee/dac/CMakeFiles/cordbee_dac.dir/cmake_pch.hxx /FpC:/Users/eitsarpa/devel/dotnet/runtime-feature3/artifacts/obj/coreclr/windows.x64.Debug/arm64/debug/ee/dac/CMakeFiles/cordbee_dac.dir/./cmake_pch.cxx.pch /FIC:/Users/eitsarpa/devel/dotnet\r\n  /runtime-feature3/artifacts/obj/coreclr/windows.x64.Debug/arm64/debug/ee/dac/CMakeFiles/cordbee_dac.dir/cmake_pch.hxx /showIncludes /Fodebug\\ee\\dac\\CMakeFiles\\cordbee_dac.dir\\cmake_pch.cxx.obj /Fddebug\\ee\\dac\\CMakeFiles\\cordbee_dac.dir\\cordbee_dac.pdb /FS -c C:\\Users\\eitsarpa\\\r\n  devel\\dotnet\\runtime-feature3\\artifacts\\obj\\coreclr\\windows.x64.Debug\\arm64\\debug\\ee\\dac\\CMakeFiles\\cordbee_dac.dir\\cmake_pch.cxx\r\n  C:\\Users\\eitsarpa\\devel\\dotnet\\runtime-feature3\\src\\coreclr\\debug\\inc\\dbgtargetcontext.h(296): error C2338: static_assert failed: \u0027DT_CONTEXT size must equal the T_CONTEXT size on AMD64\u0027\r\n  C:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\VC\\Tools\\MSVC\\14.41.34021\\include\\xmmintrin.h(27): fatal error C1189: #error:  This header is specific to X86, X64, ARM64, and ARM64EC targets\r\n```\r\n            ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhKelYw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6Epiy7",
                                           "createdAt":  "2024-07-12T12:32:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-07-12T12:32:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Ep6Vj",
                                           "createdAt":  "2024-07-12T13:20:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODphx8Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "eiriktsarpalis",
                                                                               "createdAt":  "2024-07-12T15:52:25Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "MichalStrehovsky",
                                           "body":  "The CMake files probably have various assumptions that crossbuilds only happen in x64 -\u003e [ARM, ARM64, x86] direction and not the other way around, like\r\n\r\nhttps://github.com/dotnet/runtime/blob/b8ac8b2d7f79aec93f9cad722f3cc4ccb931b826/src/coreclr/CMakeLists.txt#L41-L47\r\n\r\nso it will probably be about finding all of those.",
                                           "updatedAt":  "2024-07-12T13:20:51Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Cross compilation not working on ARM64 machines",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/104794",
        "createdAt":  "2024-07-12T13:25:30Z",
        "number":  104794,
        "author":  "am11",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-08-04T16:23:40Z",
        "body":  "We have a [cleanup action](https://github.com/dotnet/arcade/blob/main/.github/workflows/scheduled-action-cleanup-base.yml) used in [backport action](https://github.com/dotnet/arcade/blob/main/.github/workflows/backport-base.yml#L25) to purge stale entries in the Actions list once a day (around 13:00 UTC). We should consider using it in jit-format workflow to delete entries up-to, e.g., `success: true || created: \u003e a week ago`.\r\n\r\nhttps://github.com/dotnet/runtime/actions/workflows/jit-format.yml\r\n\r\ncc @jkoritzinsky, @akoeplinger",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhKpymA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6Ep8mF",
                                           "createdAt":  "2024-07-12T13:25:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-07-12T13:25:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6EqkrR",
                                           "createdAt":  "2024-07-12T14:47:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "I thought we added the cleanup task on the comment-based workflows because they trigger too often. We don\u0027t have cleanup jobs on the filtered PR actions like MarkdownLint. Do we need one for the JIT-format job?",
                                           "updatedAt":  "2024-07-12T14:47:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6EqnKY",
                                           "createdAt":  "2024-07-12T14:52:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "Over time, the stale entries stay on the index page and GitHub deletes the logs. I think the log retention time is about a month or so, after that those entries are just occupying space.",
                                           "updatedAt":  "2024-07-12T14:52:33Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Setup cleanup task on jit-format workflow",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/104796",
        "createdAt":  "2024-07-12T14:26:38Z",
        "number":  104796,
        "author":  "omajid",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-12T14:39:19Z",
        "body":  "The .NET runtime has a copy of the llvm-libunwind library at src/native/external. Like other libraries in runtime (eg, rapidjson, zlib, libunwind), it would be nice if we could build runtime against the system version of the llvm-libunwind library instead.\r\n\r\nI gave it a quick try and it looks like the runtime uses several internal APIs from llvm-libunwind, which makes it hard to link against just the public API provided by the system llvm-libunwind library.\r\n\r\nThis isn\u0027t an urgent/important issue. I certainly don\u0027t want/expect it to be fixed for .NET 9. I am filing it here so this stays tracked.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhKn_BA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6Eqfja",
                                           "createdAt":  "2024-07-12T14:38:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "Related https://github.com/dotnet/runtime/issues/72655",
                                           "updatedAt":  "2024-07-12T14:38:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Eqf8E",
                                           "createdAt":  "2024-07-12T14:39:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-07-12T14:39:18Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "RFE: Add support for using system version of the llvm-libunwind library",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/104901",
        "createdAt":  "2024-07-15T15:54:59Z",
        "number":  104901,
        "author":  "akoeplinger",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-25T21:42:58Z",
        "body":  "the runtime build is running into some binskim warnings:\r\nhttps://dev.azure.com/dnceng/internal/_build/results?buildId=2495001\u0026view=results\r\n\r\n@hoyosjs found that regular coreclr doesn\u0027t seem to be scanned, so it\u0027s likely a problem even beyond crossdac\r\n \r\n![image](https://github.com/user-attachments/assets/e43ac13d-e628-49bc-979a-4203fcc62f15)",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhNy-Bw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6E2XRF",
                                           "createdAt":  "2024-07-15T15:55:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-07-15T15:55:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6E24xQ",
                                           "createdAt":  "2024-07-15T17:00:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "The crossdac specific issues are well understood - we deliberately don\u0027t compile with some flags given that their security implications don\u0027t apply to us. ",
                                           "updatedAt":  "2024-07-15T17:00:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6E3L4H",
                                           "createdAt":  "2024-07-15T17:47:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "GrabYourPitchforks",
                                           "body":  "BA2024 in particular we are exempt from. If you\u0027re trying to generate a clean build, follow the suppression guidelines here:\r\nhttps://eng.ms/docs/cloud-ai-platform/devdiv/one-engineering-system-1es/1es-docs/1es-pipeline-templates/features/sdlanalysis/baselines\r\n\r\n(That link is MSFT internal only.)",
                                           "updatedAt":  "2024-07-15T17:47:16Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "BinSkim not scanning CoreCLR outputs",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/105964",
        "createdAt":  "2024-08-05T17:31:13Z",
        "number":  105964,
        "author":  "fanyang-mono",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-25T22:41:42Z",
        "body":  "Hit the following error, when removing `\u003cMergedWrapperProjectReference Remove=\"classloader/SequentialLayout/ManagedSequential/LargeStructSize_Mono.csproj\" /\u003e` from `src/tests/Loader/Loader.csproj`\r\n\r\n```\r\n##[error]artifacts/tests/coreclr/obj/AnyOS.x64.Checked/Managed/Loader/Loader/generated/XUnitWrapperGenerator/XUnitWrapperGenerator.XUnitWrapperGenerator/FullRunner.g.cs(1042,17): error CS1525: Invalid expression term \u0027)\u0027 [/__w/1/s/src/tests/Loader/Loader.csproj]\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOh0bZFQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6HRtkV",
                                           "createdAt":  "2024-08-05T17:31:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-08-05T17:31:40Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "[Test] Issue with DecorateWithSkipOnCoreClrConfiguration",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/107632",
        "createdAt":  "2024-09-10T17:26:20Z",
        "number":  107632,
        "author":  "BruceForstall",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-03-31T16:45:53Z",
        "body":  "`src\\tests\\build.cmd x64 checked generatelayoutonly` fails with\r\n\r\n`c:\\gh\\runtime\\artifacts\\bin\\coreclr\\windows.x64.Checked\\build\\Microsoft.NETCore.Native.Publish.targets(77,5): error : The PrivateSdkAssemblies ItemGroup is required for _ComputeAssembliesToCompileToNative [c:\\gh\\runtime\\src\\coreclr\\tools\\aot\\crossgen2\\crossgen2_publish.csproj]`\r\n\r\nfull log:\r\n\r\n```\r\nc:\\gh\\runtime\u003esrc\\tests\\build.cmd x64 checked generatelayoutonly\r\nBUILDTEST: Starting Build at 10:19:41.63\r\nBUILDTEST: Commencing CoreCLR test build\r\nBUILDTEST: Common MSBuild args: \"/p:TargetOS=windows\" \"/p:Configuration=Checked\" \"/p:TargetArchitecture=x64\" \"/p:RuntimeFlavor=coreclr\" /nologo /verbosity:minimal /clp:Summary /maxcpucount\r\n**********************************************************************\r\n** Visual Studio 2022 Developer Command Prompt v17.12.0-pre.3.0\r\n** Copyright (c) 2022 Microsoft Corporation\r\n**********************************************************************\r\n[vcvarsall.bat] Environment initialized for: \u0027x64\u0027\r\nBUILDTEST: powershell -NoProfile -ExecutionPolicy ByPass -NoLogo -Command \"c:\\gh\\runtime\\eng\\common\\msbuild.ps1\"   c:\\gh\\runtime\\src\\tests\\build.proj -warnAsError:0 /t:TestBuild /nodeReuse:false  /p:RestoreDefaultOptimizationDataPackage=false /p:PortableBuild=true  /p:UsePartialNGENOptimization=false /maxcpucount \u0027/flp:Verbosity=normal;LogFile=\"c:\\gh\\runtime\\artifacts\\log\\TestBuild_windows__x64__Checked.log\"\u0027 \u0027/flp1:WarningsOnly;LogFile=\"c:\\gh\\runtime\\artifacts\\log\\TestBuild_windows__x64__Checked.wrn\"\u0027 \u0027/flp2:ErrorsOnly;LogFile=\"c:\\gh\\runtime\\artifacts\\log\\TestBuild_windows__x64__Checked.err\"\u0027 \u0027/bl:\"c:\\gh\\runtime\\artifacts\\log\\TestBuild_windows__x64__Checked.binlog\"\u0027  \"/p:TargetOS=windows\" \"/p:Configuration=Checked\" \"/p:TargetArchitecture=x64\" \"/p:RuntimeFlavor=coreclr\" /nologo /verbosity:minimal /clp:Summary /maxcpucount\r\n\r\n  [10:19:48.56] Restoring all packages...\r\n\r\n    Determining projects to restore...\r\n    Restored c:\\gh\\runtime\\src\\tests\\Common\\test_dependencies_fs\\test_dependencies.fsproj (in 1.69 sec).\r\n\r\n    Determining projects to restore...\r\n    Restored c:\\gh\\runtime\\src\\tests\\Common\\test_dependencies\\test_dependencies.csproj (in 178 ms).\r\n\r\n    Determining projects to restore...\r\n    Restored c:\\gh\\runtime\\src\\tests\\Common\\CoreCLRTestLibrary\\CoreCLRTestLibrary.csproj (in 298 ms).\r\n\r\n    Determining projects to restore...\r\n    Restored c:\\gh\\runtime\\src\\tests\\Common\\GenerateHWIntrinsicTests\\GenerateHWIntrinsicTests_Arm.csproj (in 170 ms).\r\n\r\n    Determining projects to restore...\r\n    Restored c:\\gh\\runtime\\src\\tests\\Common\\GenerateHWIntrinsicTests\\GenerateHWIntrinsicTests_General.csproj (in 165 ms).\r\n\r\n    Determining projects to restore...\r\n    Restored c:\\gh\\runtime\\src\\tests\\Common\\GenerateHWIntrinsicTests\\GenerateHWIntrinsicTests_X86.csproj (in 163 ms).\r\n\r\n    Determining projects to restore...\r\n    Restored c:\\gh\\runtime\\src\\tests\\Common\\XUnitLogChecker\\XUnitLogChecker.csproj (in 247 ms).\r\n\r\n    Determining projects to restore...\r\n    Restored c:\\gh\\runtime\\src\\tests\\Common\\XUnitWrapperGenerator\\XUnitWrapperGenerator.csproj (in 608 ms).\r\n\r\n    Determining projects to restore...\r\n    Restored c:\\gh\\runtime\\src\\tests\\Common\\XUnitWrapperLibrary\\XUnitWrapperLibrary.csproj (in 159 ms).\r\n\r\n    Determining projects to restore...\r\n    Restored c:\\gh\\runtime\\src\\tests\\Common\\XHarnessRunnerLibrary\\XHarnessRunnerLibrary.csproj (in 211 ms).\r\n    1 of 2 projects are up-to-date for restore.\r\n\r\n    Determining projects to restore...\r\n    Restored c:\\gh\\runtime\\src\\tests\\Common\\external\\external.csproj (in 370 ms).\r\n\r\n    Determining projects to restore...\r\n    Restored c:\\gh\\runtime\\src\\tests\\Common\\ilasm\\ilasm.ilproj (in 199 ms).\r\n  [10:20:29.07] Restoring all packages...Done.\r\n  Building Targeting Pack\r\n  external -\u003e\r\n  Determining projects to restore...\r\n  Restored c:\\gh\\runtime\\src\\tools\\illink\\src\\linker\\ref\\Mono.Linker.csproj (in 220 ms).\r\n  Restored c:\\gh\\runtime\\src\\coreclr\\tools\\aot\\crossgen2\\crossgen2_publish.csproj (in 220 ms).\r\n  Restored c:\\gh\\runtime\\src\\coreclr\\tools\\aot\\ILCompiler.ReadyToRun\\ILCompiler.ReadyToRun.csproj (in 227 ms).\r\n  Restored c:\\gh\\runtime\\src\\coreclr\\tools\\aot\\ILCompiler.Diagnostics\\ILCompiler.Diagnostics.csproj (in 220 ms).\r\n  Restored c:\\gh\\runtime\\src\\installer\\pkg\\sfx\\Microsoft.NETCore.App\\Microsoft.NETCore.App.Crossgen2.sfxproj (in 220 ms).\r\n  Restored c:\\gh\\runtime\\src\\coreclr\\tools\\aot\\ILCompiler.TypeSystem\\ILCompiler.TypeSystem.csproj (in 249 ms).\r\n  Restored c:\\gh\\runtime\\src\\tools\\illink\\src\\linker\\Mono.Linker.csproj (in 249 ms).\r\n  Restored c:\\gh\\runtime\\src\\coreclr\\tools\\aot\\ILCompiler.DependencyAnalysisFramework\\ILCompiler.DependencyAnalysisFramework.csproj (in 249 ms).\r\n  Restored c:\\gh\\runtime\\src\\tools\\illink\\src\\ILLink.RoslynAnalyzer\\ILLink.RoslynAnalyzer.csproj (in 290 ms).\r\n  Restored c:\\gh\\runtime\\src\\libraries\\System.Runtime.InteropServices\\gen\\DownlevelLibraryImportGenerator\\DownlevelLibraryImportGenerator.csproj (in 290 ms).\r\n  Restored c:\\gh\\runtime\\src\\tools\\illink\\src\\ILLink.CodeFix\\ILLink.CodeFixProvider.csproj (in 295 ms).\r\n  Restored c:\\gh\\runtime\\src\\libraries\\System.Runtime.InteropServices\\gen\\Microsoft.Interop.SourceGeneration\\Microsoft.Interop.SourceGeneration.csproj (in 297 ms).\r\n  Restored c:\\gh\\runtime\\src\\tools\\illink\\src\\ILLink.Tasks\\ILLink.Tasks.csproj (in 428 ms).\r\n  ILLink.RoslynAnalyzer -\u003e c:\\gh\\runtime\\artifacts\\bin\\ILLink.RoslynAnalyzer\\x64\\Release\\netstandard2.0\\ILLink.RoslynAnalyzer.dll\r\n  ILLink.CodeFixProvider -\u003e c:\\gh\\runtime\\artifacts\\bin\\ILLink.CodeFixProvider\\x64\\Release\\netstandard2.0\\ILLink.CodeFixProvider.dll\r\n  Mono.Linker -\u003e c:\\gh\\runtime\\artifacts\\bin\\Mono.Linker\\ref\\x64\\Release\\net9.0\\illink.dll\r\n  Mono.Linker -\u003e c:\\gh\\runtime\\artifacts\\bin\\Mono.Linker\\x64\\Release\\net9.0\\win-x64\\illink.dll\r\n  ILLink.Tasks -\u003e c:\\gh\\runtime\\artifacts\\bin\\ILLink.Tasks\\x64\\Release\\net9.0\\win-x64\\ILLink.Tasks.dll\r\n  Mono.Linker -\u003e c:\\gh\\runtime\\artifacts\\bin\\Mono.Linker\\x64\\Release\\net9.0\\illink.dll\r\n  ILLink.Tasks -\u003e c:\\gh\\runtime\\artifacts\\bin\\ILLink.Tasks\\x64\\Release\\net9.0\\ILLink.Tasks.dll\r\n  ILCompiler.DependencyAnalysisFramework -\u003e c:\\gh\\runtime\\artifacts\\bin\\ILCompiler.DependencyAnalysisFramework\\x64\\Checked\\ILCompiler.DependencyAnalysisFramework.dll\r\n  ILCompiler.TypeSystem -\u003e c:\\gh\\runtime\\artifacts\\bin\\ILCompiler.TypeSystem\\x64\\Checked\\ILCompiler.TypeSystem.dll\r\n  ILCompiler.Diagnostics -\u003e c:\\gh\\runtime\\artifacts\\bin\\ILCompiler.Diagnostics\\x64\\Checked\\ILCompiler.Diagnostics.dll\r\n  ILCompiler.ReadyToRun -\u003e c:\\gh\\runtime\\artifacts\\bin\\ILCompiler.ReadyToRun\\x64\\Checked\\ILCompiler.ReadyToRun.dll\r\n  crossgen2_publish -\u003e c:\\gh\\runtime\\artifacts\\bin\\crossgen2_publish\\x64\\Checked\\crossgen2.dll\r\nc:\\gh\\runtime\\artifacts\\bin\\coreclr\\windows.x64.Checked\\build\\Microsoft.NETCore.Native.Publish.targets(77,5): error : The PrivateSdkAssemblies ItemGroup is required for _ComputeAssembliesToCompileToNative [c:\\gh\\runtime\\src\\corec\r\nlr\\tools\\aot\\crossgen2\\crossgen2_publish.csproj]\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n\r\nBuild FAILED.\r\n\r\nc:\\gh\\runtime\\artifacts\\bin\\coreclr\\windows.x64.Checked\\build\\Microsoft.NETCore.Native.Publish.targets(77,5): error : The PrivateSdkAssemblies ItemGroup is required for _ComputeAssembliesToCompileToNative [c:\\gh\\runtime\\src\\corec\r\nlr\\tools\\aot\\crossgen2\\crossgen2_publish.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:59.19\r\nBuild failed with exit code 1. Check errors above.\r\n```\r\n\r\nNote that this is documented by https://github.com/dotnet/runtime/blob/main/docs/workflow/testing/coreclr/testing.md#building-the-core_root\r\n\r\nThis was possibly broken by https://github.com/dotnet/runtime/pull/106965?\r\n\r\n@am11 @jkotas \r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOjT7BXQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6LkW1D",
                                           "createdAt":  "2024-09-10T17:33:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "@agocke ",
                                           "updatedAt":  "2024-09-10T17:33:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6LkYJf",
                                           "createdAt":  "2024-09-10T17:36:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "I see some CI jobs use `/p:UsePublishedCrossgen2=false` which causes the script to succeed (and maybe does less work, so might be faster, which is good).",
                                           "updatedAt":  "2024-09-10T17:36:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6LkYzk",
                                           "createdAt":  "2024-09-10T17:38:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "Those CI legs are separate SPMI related mostly, because they don\u0027t require crossgen2. This is passing in CI apparently.",
                                           "updatedAt":  "2024-09-10T17:45:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Lkap_",
                                           "createdAt":  "2024-09-10T17:42:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivdiazsa",
                                           "body":  "Trying to reproduce it on the latest runtime. Just yesterday, I was able to generate the CORE_ROOT just fine with a few days old clone and it worked, at least on Linux.",
                                           "updatedAt":  "2024-09-10T17:42:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Llm9l",
                                           "createdAt":  "2024-09-10T19:51:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "agocke",
                                           "body":  "Tried this locally using the exact instructions at https://github.com/dotnet/runtime/blob/main/docs/workflow/testing/coreclr/testing.md#building-the-core_root, can\u0027t repro.",
                                           "updatedAt":  "2024-09-10T19:51:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Lln25",
                                           "createdAt":  "2024-09-10T19:53:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODxuwkA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ivdiazsa",
                                                                               "createdAt":  "2024-09-10T20:03:37Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkotas",
                                           "body":  "@BruceForstall This error means that your build does not have the live native AOT compiler that is needed by `src\\tests\\build.cmd` now. What are the command that you use to build the runtime?",
                                           "updatedAt":  "2024-09-10T19:53:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6LlrpA",
                                           "createdAt":  "2024-09-10T20:02:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivdiazsa",
                                           "body":  "Was able to reproduce, but it seems to be an expected failure. The trigger to see the error is to not build the `clr.aot` subset, which I assume is a requirement to generate the `CORE_ROOT` as per @jkotas\u0027s comment.\r\n\r\nFor reference, I used these commands to trigger the error:\r\n\r\n```bash\r\n./build.sh --subset host.native+clr.runtime+clr.corelib+clr.nativecorelib+clr.tools+clr.iltools+clr.alljits+clr.spmi+libs --configuration Release --runtimeConfiguration Checked\r\n\r\n./src/tests/build.sh -x64 -checked -generatelayoutonly\r\n```",
                                           "updatedAt":  "2024-09-10T20:07:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Ll2Xa",
                                           "createdAt":  "2024-09-10T20:29:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "Yes, it is a new requirement after #106965.\r\n\r\nThere is a separate discussion we can have on whether it is a good idea to depend on live aot toolchain or whether it would be better to depend on the aot toolchain from the SDK (https://github.com/dotnet/runtime/pull/106965#issuecomment-2315493337 and following comments).",
                                           "updatedAt":  "2024-09-10T20:29:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Ll7dE",
                                           "createdAt":  "2024-09-10T20:43:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "Ok, so there are two solutions:\r\n\r\n1. If building using subsets, include the `clr.aot` subset.\r\n2. invoke `src\\tests\\build.cmd generatelayoutonly` with `/p:UsePublishedCrossgen2=false` (I don\u0027t understand the implications, but it also makes `generatelayoutonly` much faster)\r\n\r\nAnother solution might be using what Jan suggests [above](https://github.com/dotnet/runtime/issues/107632#issuecomment-2341955034).\r\n",
                                           "updatedAt":  "2024-09-10T20:43:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6NFFcH",
                                           "createdAt":  "2024-09-22T19:08:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "VSadov",
                                           "body":  "I am hitting the same problem. \r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\9.0.100-rc.1.24452.12\\Microsoft.Common.CurrentVersion.targets(5322,5): error MSB3030: Could not copy the file \"E:\\dotnet004\\runtime\\artifacts\\obj\\coreclr\\crossg\r\nen2_publish\\windows.x64.Checked\\apphost.exe\" because it was not found. [E:\\dotnet004\\runtime\\src\\coreclr\\tools\\aot\\crossgen2\\crossgen2_publish.csproj]\r\n```\r\n\r\nAs much as I try to read into the messages above, I am not sure I can see what the correct solution is. \r\n\r\nI see that I could use `/p:UsePublishedCrossgen2=false`, with unknown implications.\r\nOr I could do . . . what ?\r\n\r\nFor reference. The way that no longer works is:\r\n```\r\nbuild.cmd clr+libs+libs.tests -rc checked -lc release \u0026 src\\tests\\build.cmd checked\r\n```\r\n\r\nI\u0027ve tried also doing\r\n```\r\nbuild.cmd clr.aot -rc checked -lc release\r\n```\r\n\r\nit does not seem to help.\r\n",
                                           "updatedAt":  "2024-09-22T19:08:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6NMxX-",
                                           "createdAt":  "2024-09-23T17:36:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivdiazsa",
                                           "body":  "\u003e I am hitting the same problem.\r\n\u003e \r\n\u003e ```\r\n\u003e C:\\Program Files\\dotnet\\sdk\\9.0.100-rc.1.24452.12\\Microsoft.Common.CurrentVersion.targets(5322,5): error MSB3030: Could not copy the file \"E:\\dotnet004\\runtime\\artifacts\\obj\\coreclr\\crossg\r\n\u003e en2_publish\\windows.x64.Checked\\apphost.exe\" because it was not found. [E:\\dotnet004\\runtime\\src\\coreclr\\tools\\aot\\crossgen2\\crossgen2_publish.csproj]\r\n\u003e ```\r\n\r\nOk something broke recently. I\u0027m now getting that `apphost` issue even on Linux. Will get to look into it as it also reproduced on a fresh clone of today\u0027s upstream.",
                                           "updatedAt":  "2024-09-23T17:38:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6NNLhG",
                                           "createdAt":  "2024-09-23T18:22:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "VSadov",
                                           "body":  "CI machines are relatively clean and have particular configurations. \r\nIt is likely that some difference on my machine is causing this - but what?\r\n\r\nRegular `git clean -xdf`, delete global nuget cache, update VS, reboot..., generally help when something got stuck. \r\n\r\nI am now adding `/p:UsePublishedCrossgen2=false` to everything, but not sure it is a good thing or, if it is the only way, why this is not the default.\r\n\r\n\r\n ",
                                           "updatedAt":  "2024-09-23T18:23:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6NNeUh",
                                           "createdAt":  "2024-09-23T18:58:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivdiazsa",
                                           "body":  "I\u0027ve found the problem. It is a combination of factors.\r\n\r\nThis code snippet looks for the `apphost` in the `HostConfiguration` path. Building the product like we usually do (`build.sh -s clr+libs -rc Checked -lc Release`) ends up producing a `Debug` apphost. This is totally unintuitive, since we built the runtime in `Checked` and the libraries in `Release`. Moreover, we never mentioned the host, and we have a `host` subset as well, so it is not intuitive that it will be built in the first place.\r\n\r\nWith this context in mind, we can take a look at the following snippet. It looks for the `apphost` first in the `HostConfiguration` path, which is `Checked` in this case, and if it doesn\u0027t exist, it looks in the `LibrariesConfiguration`, which is `Release`. But in this case, neither exist because the initial build created it in `Debug` as I explained in the previous paragraph. And hence, this problem happens.\r\n\r\nThe workaround is to pass `-p:HostConfiguration=Debug` for this specific case. The problem is we have to somehow find the host. We could add an additional check at the end where if `\u003c_apphostPath\u003e` is still empty after looking for it on the paths it currently looks into, then look into the three potential configuration paths:\r\n\r\n- `linux-x64.Debug`\r\n- `linux-x64.Checked`\r\n- `linux-x64.Release`\r\n\r\nOr, we can do additional calculations to find which configuration(s) we haven\u0027t checked and look into that/those one(s) only instead.\r\n\r\n```xml\r\n    \u003cPropertyGroup Condition=\"\u0027$(UsePublishedCrossgen2)\u0027 == \u0027true\u0027\"\u003e\r\n      \u003c_targetOS\u003e$(TargetOS)\u003c/_targetOS\u003e\r\n      \u003c_targetOS Condition=\"\u0027$(_targetOS)\u0027 == \u0027windows\u0027\"\u003ewin\u003c/_targetOS\u003e\r\n      \u003c_apphostPath Condition=\"Exists(\u0027$(ArtifactsBinDir)$(_targetOS)-$(TargetArchitecture).$(HostConfiguration)\\corehost\\apphost$(ExeSuffix)\u0027)\"\u003e$(ArtifactsBinDir)$(_targetOS)-$(TargetArchitecture).$(HostConfiguration)\\corehost\\apphost$(ExeSuffix)\u003c/_apphostPath\u003e\r\n      \u003c_apphostPath Condition=\"\u0027$(_apphostPath)\u0027 == \u0027\u0027 and Exists(\u0027$(ArtifactsBinDir)$(_targetOS)-$(TargetArchitecture).$(LibrariesConfiguration)\\corehost\\apphost$(ExeSuffix)\u0027)\"\u003e$(ArtifactsBinDir)$(_targetOS)-$(TargetArchitecture).$(LibrariesConfiguration)\\corehost\\apphost$(ExeSuffix)\u003c/_apphostPath\u003e\r\n      \u003c_toolsConfiguration Condition=\"Exists(\u0027$(ArtifactsBinDir)ILLink.Tasks\\$(ToolsConfiguration)\\$(NetCoreAppToolCurrent)\\ILLink.Tasks.dll\u0027)\"\u003e$(ToolsConfiguration)\u003c/_toolsConfiguration\u003e\r\n      \u003c_toolsConfiguration Condition=\"Exists(\u0027$(ArtifactsBinDir)ILLink.Tasks\\$(LibrariesConfiguration)\\$(NetCoreAppToolCurrent)\\ILLink.Tasks.dll\u0027)\"\u003e$(LibrariesConfiguration)\u003c/_toolsConfiguration\u003e\r\n    \u003c/PropertyGroup\u003e\r\n\r\n    \u003cMakeDir Condition=\"\u0027$(UsePublishedCrossgen2)\u0027 == \u0027true\u0027\" Directories=\"$(ArtifactsObjDir)coreclr\\crossgen2_publish\\$(TargetOS).$(TargetArchitecture).$(RuntimeConfiguration)\" /\u003e\r\n\r\n    \u003cCopy\r\n      SourceFiles=\"$(_apphostPath)\"\r\n      DestinationFiles=\"$(ArtifactsObjDir)coreclr\\crossgen2_publish\\$(TargetOS).$(TargetArchitecture).$(RuntimeConfiguration)\\apphost$(ExeSuffix)\"\r\n      Condition=\"\u0027$(UsePublishedCrossgen2)\u0027 == \u0027true\u0027\" /\u003e\r\n```",
                                           "updatedAt":  "2024-09-23T19:06:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6NNssQ",
                                           "createdAt":  "2024-09-23T19:26:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "VSadov",
                                           "body":  "Based on the above, I tried the following (after `git clean -xdf`):\r\n\r\n`build.cmd clr+libs+libs.tests -c release -rc checked \u0026 src\\tests\\build.cmd checked` \r\n\r\nIt worked for me!",
                                           "updatedAt":  "2024-09-23T19:26:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6NN8Wd",
                                           "createdAt":  "2024-09-23T19:54:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivdiazsa",
                                           "body":  "\u003e Based on the above, I tried the following (after `git clean -xdf`):\r\n\u003e \r\n\u003e `build.cmd clr+libs+libs.tests -c release -rc checked \u0026 src\\tests\\build.cmd checked`\r\n\u003e \r\n\u003e It worked for me!\r\n\r\nGood to hear. I would\u0027ve expected it to work like this. The `-c Release` qualifies everything except the runtime since you also passed `-rc Checked`. Which means the `apphost` was build in `Release` and therefore it was found by the clause that searches in `LibrariesConfiguration`.\r\n\r\nWe also have to document this while a definite fix is worked on. It is a pitfall very easily fallen into. I\u0027ll add that as well alongside the temporary fix.",
                                           "updatedAt":  "2024-09-23T19:57:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6NN-W-",
                                           "createdAt":  "2024-09-23T19:58:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "It\u0027s working because that\u0027s what CI is using and that is documented. `-lc Release -rc Checked` without specifying host or tools configuration is a recipient of disaster and unnecessary combination to care for.",
                                           "updatedAt":  "2024-09-23T19:58:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6NOClO",
                                           "createdAt":  "2024-09-23T20:06:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivdiazsa",
                                           "body":  "\u003e It\u0027s working because that\u0027s what CI is using and that is documented. `-lc Release -rc Checked` without specifying host or tools configuration is a recipient of disaster and unnecessary combination to care for.\r\n\r\nIt\u0027s not that unknown since it\u0027s not the first time someone falls into it. So, we will document it.",
                                           "updatedAt":  "2024-09-23T20:06:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6NODJl",
                                           "createdAt":  "2024-09-23T20:07:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "VSadov",
                                           "body":  "As another point. I see the same behavior on arm64-linux\r\n\r\nCORE_ROOT does not build due to apphost missing if `-rc checked -lc release` was used.\r\nThe combination `-c release -rc checked` does not have the problem\r\n\r\nSo @ivdiazsa seems right with the theory that host defaults to Debug and thus cannot be found.\r\nWe also see that this is not Windows-only or x64-only issue.\r\n\r\n`-c release -rc checked`  would be acceptable solution for me even as a long term.",
                                           "updatedAt":  "2024-09-23T20:07:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6NOEIg",
                                           "createdAt":  "2024-09-23T20:10:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODzSSGQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkotas",
                                                                               "createdAt":  "2024-09-23T21:34:23Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "VSadov",
                                           "body":  "I kind of always assumed that `-rc checked -lc release` is a shortcut for `-c debug -rc checked -lc release` \r\ni.e. partition config effectively starts with `-c debug` unless `-c somethingElse` is specified",
                                           "updatedAt":  "2024-09-23T20:10:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6NOE0R",
                                           "createdAt":  "2024-09-23T20:11:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivdiazsa",
                                           "body":  "\u003e As another point. I see the same behavior on arm64-linux\r\n\u003e \r\n\u003e CORE_ROOT does not build due to apphost missing if `-rc checked -lc release` was used. The combination `-c release -rc checked` does not have the problem\r\n\u003e \r\n\u003e So @ivdiazsa seems right with the theory that host defaults to Debug and thus cannot be found. We also see that this is not Windows-only or x64-only issue.\r\n\u003e \r\n\u003e `-c release -rc checked` would be acceptable solution for me even as a long term.\r\n\r\nYup it\u0027s universal. I\u0027ll add the fix I proposed and add it to the docs so that it is clear. It is not intuitive that you should also have to use the universal `-c` when you\u0027re already giving all the specific ones for those subsets. Yes, it means `-c Debug` if you omit it, but why would that have an impact on `clr+libs` if you\u0027re already giving `-rc` and `-lc`? It is not intuitive but that\u0027s how the build works. Don\u0027t worry, I\u0027ll document it along with fixing this specific case.",
                                           "updatedAt":  "2024-09-23T20:11:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6NOFPR",
                                           "createdAt":  "2024-09-23T20:12:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "\u003e It\u0027s not that unknown since it\u0027s not the first time someone falls into it. So, we will document it.\r\n\r\nIf it is important, it should be part of the CI. Conversely, since it is not part of the CI and those 500+ legs in CI do exercise all scenarios which are relevant today, it doesn\u0027t seem important.",
                                           "updatedAt":  "2024-09-23T20:12:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6NOF2R",
                                           "createdAt":  "2024-09-23T20:13:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivdiazsa",
                                           "body":  "\u003e \u003e It\u0027s not that unknown since it\u0027s not the first time someone falls into it. So, we will document it.\r\n\u003e \r\n\u003e If it is important, it should be part of the CI. Conversely, since it is not part of the CI and those 500+ legs in CI do exercise all scenarios which are relevant today, it doesn\u0027t seem important.\r\n\r\nCI costs to run. We can\u0027t expect to pay for every case that might happen out there, only the absolute most relevant. This is also confusing hence we will document it appropriately.",
                                           "updatedAt":  "2024-09-23T20:13:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6NOYxo",
                                           "createdAt":  "2024-09-23T20:51:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "VSadov",
                                           "body":  "Ideally if some combinations are known to be problematic, it should be an error. \r\nI guess it is plausible that someone might want \"problematic\" combination on purpose, so maybe a warning. At least it should not be defaulted to.\r\n\r\n`src\\tests\\build` takes a fairly long time and then fails with an error that is a result of something I did 2 steps back in the build. \r\nThat typically leads to \"lets clean everything up carefully and try again\", thus more time is wasted...\r\n\r\nDocumenting might not be as helpful, as some hand-holding on the part of the build script. Many of us, I suspect, do not re-read docs regularly enough to pick up good practice updates. \r\n\r\nI.E. it was not my intent to use debug host. For the thing I need to test, host flavor is irrelevant. I just use something that worked before. \r\nIf the pattern is known to cause troubles, it might be better if it just errored/warned that what I do is not a good idea.",
                                           "updatedAt":  "2024-09-23T20:51:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6NPBO9",
                                           "createdAt":  "2024-09-23T21:43:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODzSapA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ivdiazsa",
                                                                               "createdAt":  "2024-09-23T21:47:02Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e -lc Release -rc Checked without specifying host or tools configuration is a recipient of disaster and unnecessary combination to care for.\r\n\r\nThis configuration is documented in number of places and worked just fine up until recently\r\n\r\nhttps://github.com/dotnet/runtime/blob/main/eng/build.ps1#L114\r\nhttps://github.com/dotnet/runtime/blob/4621bb61cf76ebffc2dd9ae4289844d2c36dd545/docs/workflow/testing/host/testing.md?plain=1#L86\r\n\r\nI do not see why it should be unsupported.",
                                           "updatedAt":  "2024-09-23T21:43:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6NPsFd",
                                           "createdAt":  "2024-09-23T22:54:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "@jkotas first one is:\r\n\r\n\u003e   Write-Host \"* Build Release libraries and their tests with a Checked runtime for Windows x64, and run the tests.\"\r\n\u003e  Write-Host \".\\build.cmd clr+libs+libs.tests -rc checked -lc release -test\"\r\n\r\nit\u0027s not broken and working as expected.\r\n\r\nSecond one is:\r\n\r\n\u003e  build.cmd -vs Microsoft.DotNet.CoreSetup -rc Release -lc Release \r\n\r\nIt is also not broken and working as expected.\r\n\r\nThe problematic part is; with this, the corehost and tools are built with default (Debug) configuration and we try generating layout for runtime tests.\r\n\r\nThe larger issue is src/tests/build was never integrated with rest of the centralized build and the defaults are flipped.\r\n\r\ni.e. for:\r\n\r\n    ./build.sh clr+libs -rc Checked\r\n    ./build.sh clr+libs -rc Checked -c Release\r\n\r\nthe respective test commands should be:\r\n\r\n    src/tests/build.sh -p:RuntimeConfiguration=Checked\r\n    src/tests/build.sh -Release -p:RuntimeConfiguration=Checked\r\n\r\nHowever, since we have the defaults flipped, we are using:\r\n\r\n    src/tests/build.sh -Checked -p:LibrariesConfiguration=Debug\r\n    src/tests/build.sh -Checked -p:LibrariesConfiguration=Release",
                                           "updatedAt":  "2024-09-23T22:55:11Z"
                                       }
                                   ],
                         "totalCount":  25
                     },
        "title":  "Building CORE_ROOT is broken",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/108570",
        "createdAt":  "2024-10-05T12:25:20Z",
        "number":  108570,
        "author":  "am11",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC7nz7A==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "vcsjones",
                                            "createdAt":  "2024-10-05T12:29:09Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "neon-sunset",
                                            "createdAt":  "2024-10-06T02:33:20Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "wellWINeo",
                                            "createdAt":  "2024-10-07T12:30:51Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "lambdageek",
                                            "createdAt":  "2024-10-07T13:36:23Z"
                                        }
                                    ],
                          "totalCount":  4
                      },
        "updatedAt":  "2025-07-21T17:50:55Z",
        "body":  "In the default CI set that runs automatically when a change is made to `src/coreclr`, only **priority 0 test legs** are executed for `osx-arm64`. Meanwhile, for `osx-x64`, the **libraries debug tests** are run by default alongside the priority 0 tests. Given that Apple has moved to ARM64 (Apple Silicon) as the primary architecture, it seems logical to prioritize `osx-arm64` in the default CI, rather than `osx-x64`.\r\n\r\nCurrently, we can manually trigger the `osx-arm64` libraries debug tests if needed, but they are not part of the automatic/default test set.\r\n\r\nIf expanding the CI set for `osx-arm64` leads to longer test cycles, it may be worth considering the trade-off between testing time and coverage, or potentially rebalancing the priority of `osx-x64` tests.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOj-OTpw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6OwWtY",
                                           "createdAt":  "2024-10-05T12:25:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-10-05T12:25:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6P45On",
                                           "createdAt":  "2024-10-15T14:18:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-10-15T14:18:01Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Switch Default CI Focus to osx-arm64 for CoreCLR PRs",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/110407",
        "createdAt":  "2024-12-04T18:39:03Z",
        "number":  110407,
        "author":  "steveharter",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODDJpLg==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Daniel-Svensson",
                                            "createdAt":  "2025-06-02T15:40:44Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-07-21T19:14:56Z",
        "body":  "Having a long directory name causes issues when building the coreclr tests. I verified that long paths are enabled in both git and the registry.\n\nRepro (Windows x64)\n- Create a long directory name such as `C:\\git\\ThisIsSomewhatOfaLongName`\n- Clone runtime repo into that\n- `build -s clr+libs` (this works)\n- `src\\tests\\build.cmd /p:LibrariesConfiguration=Debug` (this fails with the error below)\n\nError:\n```\n[219/384] Building CXX object baseservices\\exceptions\\UnhandledExceptionHandler\\ForeignThreadRevPInvokeUnhandled\\CMakeFiles\\ForeignThreadRevPInvokeUnhandledNative.dir\\ForeignThreadRevPInvokeUnhandledNative.cpp.obj\nFAILED: baseservices/exceptions/UnhandledExceptionHandler/ForeignThreadRevPInvokeUnhandled/CMakeFiles/ForeignThreadRevPInvokeUnhandledNative.dir/ForeignThreadRevPInvokeUnhandledNative.cpp.obj\nC:\\PROGRA~1\\MIB055~1\\2022\\Preview\\VC\\Tools\\MSVC\\1443~1.346\\bin\\Hostx64\\x64\\cl.exe  /nologo /TP -DForeignThreadRevPInvokeUnhandledNative_EXPORTS -DHOST_64BIT -DHOST_AMD64 -DHOST_WINDOWS -DNDEBUG -DTARGET_64BIT -DTARGET_AMD64 -DTARGET_WINDOWS -DURTBLDENV_FRIENDLY=Retail -DWINDOWS -D_FILE_OFFSET_BITS=64 -D_TIME_BITS=64 -IC:\\git\\ThisIsSomewhatOfaLongName\\src\\native -IC:\\git\\ThisIsSomewhatOfaLongName\\src\\tests\\Common\\Platform /DWIN32 /D_WINDOWS  /GR- /O2 /Ob2 /DNDEBUG -MT /GL /Ox /EHa /nologo /W4 /WX /Oi /Oy- /Gm- /Zp8 /Gy /GS /fp:precise /FC /MP /Zm200 /Zc:strictStrings /Zc:wchar_t /Zc:inline /Zc:forScope /wd4065 /wd4100 /wd4127 /wd4131 /wd4189 /wd4200 /wd4201 /wd4206 /wd4239 /wd4245 /wd4291 /wd4310 /wd4324 /wd4366 /wd4456 /wd4457 /wd4458 /wd4459 /wd4463 /wd4505 /wd4702 /wd4706 /wd4733 /wd4815 /wd4838 /wd4918 /wd4960 /wd4961 /wd5105 /wd5205 /we4007 /we4013 /we4102 /we4551 /we4640 /we4806 /we4055 /we4146 /we4242 /we4244 /we4267 /we4302 /we4308 /we4509 /we4510 /we4532 /we4533 /we4610 /we4611 /we4700 /we4701 /we4703 /we4789 /we4995 /we4996 /w34092 /w34121 /w34125 /w34130 /w34132 /w34212 /w34530 /w35038 /w44177 /Zi /ZH:SHA_256 /source-charset:utf-8 /guard:cf /guard:ehcont -wd4100 -wd4242 -wd4244 -wd4514 -wd4625 -wd4626 -wd4668 -wd4710 -wd4711 -wd4774 -wd4820 -wd5025 -wd5026 -wd5027 -wd5039 /showIncludes /Fobaseservices\\exceptions\\UnhandledExceptionHandler\\ForeignThreadRevPInvokeUnhandled\\CMakeFiles\\ForeignThreadRevPInvokeUnhandledNative.dir\\ForeignThreadRevPInvokeUnhandledNative.cpp.obj /Fdbaseservices\\exceptions\\UnhandledExceptionHandler\\ForeignThreadRevPInvokeUnhandled\\CMakeFiles\\ForeignThreadRevPInvokeUnhandledNative.dir\\ /FS -c C:\\git\\ThisIsSomewhatOfaLongName\\src\\tests\\baseservices\\exceptions\\UnhandledExceptionHandler\\ForeignThreadRevPInvokeUnhandled\\ForeignThreadRevPInvokeUnhandledNative.cpp\nC:\\git\\ThisIsSomewhatOfaLongName\\src\\tests\\baseservices\\exceptions\\UnhandledExceptionHandler\\ForeignThreadRevPInvokeUnhandled\\ForeignThreadRevPInvokeUnhandledNative.cpp : fatal error C1083: Cannot open compiler generated file: \u0027\u0027: Invalid argument\n[240/384] Building CXX object profiler\\native\\CMakeFiles\\Profiler.dir\\rejitprofiler\\rejitprofiler.cpp.obj\nninja: build stopped: subcommand failed.\nBUILDTEST: Error: native test build failed.\n```\n\nI did not attempt to diagnose the root cause but note that the path `C:\\git\\ThisIsSomewhatOfaLongName\\src\\tests\\baseservices\\exceptions\\UnhandledExceptionHandler\\ForeignThreadRevPInvokeUnhandled\\ForeignThreadRevPInvokeUnhandledNative.cpp` is 169 characters, short of MAX_PATH (260).",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOsjTyOw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6WGXrW",
                                           "createdAt":  "2024-12-04T18:40:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-12-04T18:40:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6WLkYT",
                                           "createdAt":  "2024-12-05T08:32:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "huoyaoyuan",
                                           "body":  "[Enabling long path support](https://github.com/dotnet/runtime/blob/main/docs/workflow/requirements/windows-requirements.md#enable-long-paths) is listed under Windows requirements. Do you still encounter this error with long path enabled? It can be easily enabled with Dev Home.",
                                           "updatedAt":  "2024-12-05T08:32:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6WPIno",
                                           "createdAt":  "2024-12-05T14:57:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveharter",
                                           "body":  "I do have long paths enabled:\n```\nPS C:\\git\\ThisIsSomewhatOfaLongPath\u003e git config --system core.longpaths\ntrue\n\nPS C:\\git\\ThisIsSomewhatOfaLongPath\u003e Get-ItemProperty HKLM:\\SYSTEM\\CurrentControlSet\\Control\\FileSystem -Name LongPathsEnabled\nLongPathsEnabled : 1\n```\n",
                                           "updatedAt":  "2024-12-05T14:57:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6WQHT-",
                                           "createdAt":  "2024-12-05T16:15:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveharter",
                                           "body":  "I believe `cl.exe` has issues with MAX_PATH even when long paths are enabled in Windows registry:\nhttps://developercommunity.visualstudio.com/t/compiler-cant-find-source-file-in-path-/10221576\nhttps://developercommunity.visualstudio.com/t/clexe-command-line-error-d8022-cannot-open-path-re/1478916\n\nHowever, I didn\u0027t see where I was very close to MAX_PATH. Perhaps there was some artifacts\\bin folders that have a longer path but not shown in the error message.",
                                           "updatedAt":  "2024-12-05T16:15:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6W-VeI",
                                           "createdAt":  "2024-12-10T21:24:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mdh1418",
                                           "body":  "I\u0027m starting to see this too when building runtime tests locally after rebasing on main. It seems to be related to the new test added in https://github.com/dotnet/runtime/pull/109806. I\u0027m also not sure why that test needs to be compiled if I want to just build a separate particular runtime test `.\\src\\tests\\build.cmd test \u003cpath_to_specific_runtime_test_csproj\u003e`",
                                           "updatedAt":  "2024-12-10T21:24:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6XOslt",
                                           "createdAt":  "2024-12-11T21:18:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD-pEaQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "tommcdon",
                                                                               "createdAt":  "2024-12-11T21:49:09Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "mdh1418",
                                           "body":  "I ended up using `subst` to associate my local repo\u0027s path to a drive letter (Thanks @tommcdon for the suggestion), and was able to shorten the generated `ForeignThreadRevPInvokeUnhandledNative` object path to under 250 chars. (I also have long paths enabled, similar to Steve)",
                                           "updatedAt":  "2024-12-11T21:18:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6XPa1j",
                                           "createdAt":  "2024-12-11T23:20:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tommcdon",
                                           "body":  "Another thing to try is to enable long paths in windows per \nhttps://learn.microsoft.com/en-us/windows/win32/fileio/maximum-file-path-limitation?tabs=registry#enable-long-paths-in-windows-10-version-1607-and-later:\n\n```text\nWindows Registry Editor Version 5.00\n\n[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\FileSystem]\n\"LongPathsEnabled\"=dword:00000001\n```",
                                           "updatedAt":  "2024-12-11T23:20:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6YGMnX",
                                           "createdAt":  "2024-12-18T16:24:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveharter",
                                           "body":  "\u003e Another thing to try is to enable long paths in windows per\nhttps://learn.microsoft.com/en-us/windows/win32/fileio/maximum-file-path-limitation?tabs=registry#enable-long-paths-in-windows-10-version-1607-and-later:\n\nLong paths are enabled locally for me and for @mdh1418.\n\nThose instructions also say to update the app\u0027s manifest, however the app here is `cl.exe` and FWIW the links I added above for known issues with `cl.exe` mention other users who tried to update the `cl.exe` manifest but then got other errors.\n\nSo the root problem appears to be with `cl.exe` needing a proper manifest and\\or it doesn\u0027t use the `\\\\?\\` prefix necessary for paths \u003e MAX_PATH.",
                                           "updatedAt":  "2024-12-18T18:42:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6dPPPZ",
                                           "createdAt":  "2025-02-05T21:03:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kkukshtel-unity",
                                           "body":  "I\u0027m also seeing this on windows fwiw:\n\n```\n[221/387] Building CXX object baseservices\\exceptions\\UnhandledExceptionHandler\\ForeignThreadRevPInvokeUnhandled\\CMakeFiles\\ForeignThreadRevPInvokeUnhandledNative.dir\\ForeignThreadRevPInvokeUnhandledNative.cpp.obj\nFAILED: baseservices/exceptions/UnhandledExceptionHandler/ForeignThreadRevPInvokeUnhandled/CMakeFiles/ForeignThreadRevPInvokeUnhandledNative.dir/ForeignThreadRevPInvokeUnhandledNative.cpp.obj\nC:\\PROGRA~1\\MICROS~4\\2022\\COMMUN~1\\VC\\Tools\\MSVC\\1441~1.341\\bin\\Hostx64\\x64\\cl.exe  /nologo /TP -DBUILDENV_DEBUG=1 -DDEBUG -DForeignThreadRevPInvokeUnhandledNative_EXPORTS -DHOST_64BIT -DHOST_AMD64 -DHOST_WINDOWS -DTARGET_64BIT -DTARGET_AMD64 -DTARGET_WINDOWS -DURTBLDENV_FRIENDLY=Debug -DWINDOWS -D_DBG -D_DEBUG -D_FILE_OFFSET_BITS=64 -D_TIME_BITS=64 -ID:\\UnitySrc\\Workspace\\runtime\\src\\native -ID:\\UnitySrc\\Workspace\\runtime\\src\\tests\\Common\\Platform /DWIN32 /D_WINDOWS  /GR- /Zi /Ob0 /Od /RTC1 -MTd /Od /EHa /nologo /W4 /WX /Oi /Oy- /Gm- /Zp8 /Gy /GS /fp:precise /FC /MP /Zm200 /Zc:strictStrings /Zc:wchar_t /Zc:inline /Zc:forScope /wd4065 /wd4100 /wd4127 /wd4131 /wd4189 /wd4200 /wd4201 /wd4206 /wd4239 /wd4245 /wd4291 /wd4310 /wd4324 /wd4366 /wd4456 /wd4457 /wd4458 /wd4459 /wd4463 /wd4505 /wd4702 /wd4706 /wd4733 /wd4815 /wd4838 /wd4918 /wd4960 /wd4961 /wd5105 /wd5205 /we4007 /we4013 /we4102 /we4551 /we4640 /we4806 /we4055 /we4146 /we4242 /we4244 /we4267 /we4302 /we4308 /we4509 /we4510 /we4532 /we4533 /we4610 /we4611 /we4700 /we4701 /we4703 /we4789 /we4995 /we4996 /w34092 /w34121 /w34125 /w34130 /w34132 /w34212 /w34530 /w35038 /w44177 /Zi /ZH:SHA_256 /source-charset:utf-8 /homeparams /guard:cf /guard:ehcont -wd4100 -wd4242 -wd4244 -wd4514 -wd4625 -wd4626 -wd4668 -wd4710 -wd4711 -wd4774 -wd4820 -wd5025 -wd5026 -wd5027 -wd5039 /showIncludes /Fobaseservices\\exceptions\\UnhandledExceptionHandler\\ForeignThreadRevPInvokeUnhandled\\CMakeFiles\\ForeignThreadRevPInvokeUnhandledNative.dir\\ForeignThreadRevPInvokeUnhandledNative.cpp.obj /Fdbaseservices\\exceptions\\UnhandledExceptionHandler\\ForeignThreadRevPInvokeUnhandled\\CMakeFiles\\ForeignThreadRevPInvokeUnhandledNative.dir\\ /FS -c D:\\UnitySrc\\Workspace\\runtime\\src\\tests\\baseservices\\exceptions\\UnhandledExceptionHandler\\ForeignThreadRevPInvokeUnhandled\\ForeignThreadRevPInvokeUnhandledNative.cpp\nD:\\UnitySrc\\Workspace\\runtime\\src\\tests\\baseservices\\exceptions\\UnhandledExceptionHandler\\ForeignThreadRevPInvokeUnhandled\\ForeignThreadRevPInvokeUnhandledNative.cpp : fatal error C1083: Cannot open compiler generated file: \u0027\u0027: Invalid argument\n[258/387] Building CXX object profiler\\native\\CMakeFiles\\Profiler.dir\\classfactory.cpp.obj\nninja: build stopped: subcommand failed.\n```\n\nSetting a reg key isn\u0027t working either. I had to also use `subst` to shorten the path",
                                           "updatedAt":  "2025-02-05T21:03:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6kCoiL",
                                           "createdAt":  "2025-03-25T18:18:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kg",
                                           "body":  "I\u0027m hitting this with a relatively short checkout path (`E:\\documents\\projects\\runtime`) when trying to build tests. Same error as @kkukshtel-unity . I have long paths enabled locally.\nI\u0027m able to build the runtime (`build.cmd`) in the root of the checkout, the problem seems to be building tests.\nAnyone using a regular full path for their checkout similar to the ones suggested by tools like VS i.e. `C:\\users\\somebody\\onedrive\\documents\\projects\\runtime` is gonna have a bad time.\n\nIs this something that can be alleviated by installing a preview build of VS? Or do we want to just officially require use of a dedicated Dev Drive to build .NET on windows going forward?",
                                           "updatedAt":  "2025-03-25T18:18:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6mNMfP",
                                           "createdAt":  "2025-04-09T06:40:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kg",
                                           "body":  "CMake is also generating a warning about this for me:\n```\nCMake Warning in baseservices/exceptions/UnhandledExceptionHandler/ForeignThreadRevPInvokeUnhandled/CMakeLists.txt:\n  The object file directory\n\n    Z:/runtime/artifacts/tests/coreclr/obj/windows.x64.Checked/Native/baseservices/exceptions/UnhandledExceptionHandler/ForeignThreadRevPInvokeUnhandled/CMakeFiles/ForeignThreadRevPInvokeUnhandledNative.dir/./\n\n  has 205 characters.  The maximum full path to an object file is 250\n  characters (see CMAKE_OBJECT_PATH_MAX).  Object file\n\n    ForeignThreadRevPInvokeUnhandledNative.cpp.obj\n\n  cannot be safely placed under this directory.  The build may not work\n  correctly.\n```",
                                           "updatedAt":  "2025-04-09T06:40:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6wXglH",
                                           "createdAt":  "2025-06-10T12:07:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichalStrehovsky",
                                           "body":  "Cc @VSadov who added the test with the long name",
                                           "updatedAt":  "2025-06-10T12:07:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6yJjvC",
                                           "createdAt":  "2025-06-19T18:20:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mdh1418",
                                           "body":  "Originally, using subst to map a virtual drive to my runtime repo worked, but now VS Code `Version: 1.101.0 (user setup)` is not showing any of the files/folders in the Explorer view for that virtual drive. (Previously it did show files/folders, but I think upgrading VS Code versions changed behavior)\n\n![Image](https://github.com/user-attachments/assets/3e31e8ba-9647-4ee5-96b0-f5d17fc5eb2f)\n\nNot sure if this is a temporary thing in VS Code, but regardless, it feels like we should address the underlying issue.\nIs it really mandatory for building a specific native test like `.\\src\\tests\\build.cmd -test tracing/eventpipe/bigevent/bigevent.csproj /p:RuntimeConfiguration=Debug /p:LibrariesConfiguration=Debug` should trigger building `baseservices/exceptions/UnhandledExceptionHandler/ForeignThreadRevPInvokeUnhandled/CMakeLists.txt`?\n\nIs it clear whether or not we can only build what\u0027s necessary when specifying the `-test` arg, instead of trying to [build every subdir\u0027s `CMakeLists.txt`](https://github.com/dotnet/runtime/blob/9b456d48357b8605649df6225469d174116439d6/src/tests/CMakeLists.txt#L44-L66)?",
                                           "updatedAt":  "2025-06-19T18:20:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6yKjtc",
                                           "createdAt":  "2025-06-19T20:40:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AaronRobinsonMSFT",
                                           "body":  "\u003e causes error C1083 when building coreclr tests (cl.exe)\n\nHas anyone reached out to the MSVC team about this issue?",
                                           "updatedAt":  "2025-06-19T20:40:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6yNKwo",
                                           "createdAt":  "2025-06-20T04:57:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "huoyaoyuan",
                                           "body":  "\u003e Has anyone reached out to the MSVC team about this issue?\n\nhttps://developercommunity.visualstudio.com/t/The-C-compiler-doesnt-support-file-ex/10919705",
                                           "updatedAt":  "2025-06-20T04:57:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6yNPI7",
                                           "createdAt":  "2025-06-20T05:10:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AaronRobinsonMSFT",
                                           "body":  "This was mostly from the internal perspective. The issue already references older issues on Developer Community - https://github.com/dotnet/runtime/issues/110407#issuecomment-2520806654.\n",
                                           "updatedAt":  "2025-06-20T17:13:41Z"
                                       }
                                   ],
                         "totalCount":  16
                     },
        "title":  "Long git directory name causes error C1083 when building coreclr tests (cl.exe)",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/111279",
        "createdAt":  "2025-01-10T18:03:03Z",
        "number":  111279,
        "author":  "carlossanlop",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T03:02:40Z",
        "body":  "Note: This was caught in the release/8.0 branch inside the branding PR. We have not flowed changes from release/8.0-staging down to base in a few weeks so if the issue is already fixed in staging, please mention it. If it hasn\u0027t been fixed, please send the PR with the fix to staging. @dotnet/runtime-infrastructure \n\n-----\n\n## Build Information\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=909336\u0026view=logs\u0026j=2eda3965-9146-55d1-4226-c3d3f8432d8f\nBuild error leg or test failing: Build / linux-armel checked CoreCLR_NonPortable / Build product\nPull request: https://github.com/dotnet/runtime.git/pull/111171\n\u003c!-- Error message template  --\u003e\n## Error Message\n\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssueJsonStepByStep.md).\n\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\n\n```json\n{\n  \"ErrorMessage\": \"ld.lld: error: cannot open crtbeginS.o: No such file or directory\",\n  \"ErrorPattern\": \"\",\n  \"BuildRetry\": false,\n  \"ExcludeConsoleLog\": false\n}\n```\n\nOutput:\n```\n...\n  Executing \"/__w/1/s/src/coreclr/build-runtime.sh\" -armel -checked -ci -cross -portablebuild=false -os linux -outputrid tizen.10.0.0-armel\n  Commencing CoreCLR Repo build\n  __OutputRid: tizen.10.0.0-armel\n  Setting up directories for build\n  Checking prerequisites...\n  Commencing build of \"install\" target in \"CoreCLR component\" for linux.armel.Checked in /__w/1/s/artifacts/obj/coreclr/linux.armel.Checked\n  Invoking \"/__w/1/s/eng/native/gen-buildsys.sh\" \"/__w/1/s/src/coreclr\" \"/__w/1/s/artifacts/obj/coreclr/linux.armel.Checked\" armel linux clang Checked \"\"  -DCLR_CMAKE_PGO_INSTRUMENT=0 -DCLR_CMAKE_OPTDATA_PATH= -DCLR_CMAKE_PGO_OPTIMIZE=0 -DCLI_CMAKE_FALLBACK_OS=\"tizen.10.0.0\" -DFEATURE_DISTRO_AGNOSTIC_SSL=0 \n  /__w/1/s/artifacts/obj/coreclr/linux.armel.Checked /__w/1/s/src/coreclr\n  Not searching for unused variables given on the command line.\n  loading initial cache file /__w/1/s/eng/native/tryrun.cmake\n  -- The C compiler identification is Clang 18.1.8\n  -- The CXX compiler identification is Clang 18.1.8\n  -- Detecting C compiler ABI info\n  -- Detecting C compiler ABI info - failed\n  -- Check for working C compiler: /usr/bin/clang-18\n  -- Check for working C compiler: /usr/bin/clang-18 - broken\n  CMake Error at /usr/share/cmake-3.31/Modules/CMakeTestCCompiler.cmake:67 (message):\n      The C compiler\n  \n      \"/usr/bin/clang-18\"\n  \n    is not able to compile a simple test program.\n  \n    It fails with the following output:\n  \n      Change Dir: \u0027/__w/1/s/artifacts/obj/coreclr/linux.armel.Checked/CMakeFiles/CMakeScratch/TryCompile-k64mfq\u0027\n      \n      Run Build Command(s): /usr/bin/cmake -E env VERBOSE=1 /usr/bin/gmake -f Makefile cmTC_30188/fast\n      /usr/bin/gmake  -f CMakeFiles/cmTC_30188.dir/build.make CMakeFiles/cmTC_30188.dir/build\n      gmake[1]: Entering directory \u0027/__w/1/s/artifacts/obj/coreclr/linux.armel.Checked/CMakeFiles/CMakeScratch/TryCompile-k64mfq\u0027\n      Building C object CMakeFiles/cmTC_30188.dir/testCCompiler.c.o\n      /usr/bin/clang-18 --target=arm-linux-gnueabi --gcc-toolchain=/crossrootfs/armel/usr --sysroot=/crossrootfs/armel -DCLR_ARM_FPU_CAPABILITY=0x7 -isystem /crossrootfs/armel/usr/lib/gcc/armv7l-tizen-linux-gnueabi/9.2.0/include/c++ -isystem /crossrootfs/armel/usr/lib/gcc/armv7l-tizen-linux-gnueabi/9.2.0/include/c++/armv7l-tizen-linux-gnueabi -mthumb -mfpu=vfpv3 -mfloat-abi=softfp -Wno-deprecated-declarations -D__extern_always_inline=inline -MD -MT CMakeFiles/cmTC_30188.dir/testCCompiler.c.o -MF CMakeFiles/cmTC_30188.dir/testCCompiler.c.o.d -o CMakeFiles/cmTC_30188.dir/testCCompiler.c.o -c /__w/1/s/artifacts/obj/coreclr/linux.armel.Checked/CMakeFiles/CMakeScratch/TryCompile-k64mfq/testCCompiler.c\n      Linking C executable cmTC_30188\n      /usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_30188.dir/link.txt --verbose=1\n      ld.lld: error: cannot open crtbeginS.o: No such file or directory\n      ld.lld: error: unable to find library -lgcc\n      ld.lld: error: unable to find library -lgcc\n      ld.lld: error: cannot open crtendS.o: No such file or directory\n      clang-18: error: linker command failed with exit code 1 (use -v to see invocation)\n      /usr/bin/clang-18 --target=arm-linux-gnueabi --gcc-toolchain=/crossrootfs/armel/usr --sysroot=/crossrootfs/armel -Wl,--rpath-link=/crossrootfs/armel/lib/arm-linux-gnueabi -Wl,--rpath-link=/crossrootfs/armel/usr/lib/arm-linux-gnueabi -B/crossrootfs/armel/usr/lib/gcc/armv7l-tizen-linux-gnueabi/9.2.0 -L/crossrootfs/armel/lib -L/crossrootfs/armel/usr/lib -L/crossrootfs/armel/usr/lib/gcc/armv7l-tizen-linux-gnueabi/9.2.0 -Wl,--rpath-link=/crossrootfs/armel/lib/arm-linux-gnueabi -Wl,--rpath-link=/crossrootfs/armel/usr/lib/arm-linux-gnueabi -B/crossrootfs/armel/usr/lib/gcc/armv7l-tizen-linux-gnueabi/9.2.0 -L/crossrootfs/armel/lib -L/crossrootfs/armel/usr/lib -L/crossrootfs/armel/usr/lib/gcc/armv7l-tizen-linux-gnueabi/9.2.0 -fuse-ld=lld  CMakeFiles/cmTC_30188.dir/testCCompiler.c.o -o cmTC_30188\n      gmake[1]: *** [CMakeFiles/cmTC_30188.dir/build.make:103: cmTC_30188] Error 1\n      gmake[1]: Leaving directory \u0027/__w/1/s/artifacts/obj/coreclr/linux.armel.Checked/CMakeFiles/CMakeScratch/TryCompile-k64mfq\u0027\n      gmake: *** [Makefile:133: cmTC_30188/fast] Error 2\n      \n    CMake will not be able to correctly generate this project.\n  Call Stack (most recent call first):\n    CMakeLists.txt:9 (project)\n  \n  -- Configuring incomplete, errors occurred!\n  /__w/1/s/src/coreclr\n  /__w/1/s/artifacts/obj/coreclr/linux.armel.Checked /__w/1/s/src/coreclr\n  Executing make install -j 4\n  make: *** No rule to make target \u0027install\u0027.  Stop.\n```\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=909336\r\n**Error message validated:** `[ld.lld: error: cannot open crtbeginS.o: No such file or directory`]\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 1/10/2025 6:03:18 PM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|0|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOoBM3hg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6Z-8Hw",
                                           "createdAt":  "2025-01-10T18:03:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-01-10T18:03:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6aAELK",
                                           "createdAt":  "2025-01-10T19:20:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEB-HaQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2025-01-11T01:40:01Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "sbomer",
                                           "body":  "Looks like it was fixed in staging: https://github.com/dotnet/runtime/commit/771cecf584db2fedc066d4f7cbb1bba091c887a0.",
                                           "updatedAt":  "2025-01-10T19:20:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6gEzeG",
                                           "createdAt":  "2025-02-26T16:44:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeffschwMSFT",
                                           "body":  "removing blocking-clean-ci as this has not failed in 30 days\n\n24-Hour Hit Count | 7-Day Hit Count | 1-Month Count\n-- | -- | --\n0 | 0 | 0\n",
                                           "updatedAt":  "2025-02-26T16:44:19Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "[8.0] CMake build failure in linux armel tizen - ld.lld: error: cannot open crtbeginS.o: No such file or directory",
        "labels":  [
                       "arch-arm32",
                       "os-linux",
                       "area-Infrastructure-coreclr",
                       "os-tizen",
                       "untriaged",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/111491",
        "createdAt":  "2025-01-16T12:12:27Z",
        "number":  111491,
        "author":  "kotlarmilos",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODR2ZcQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ivanpovazan",
                                            "createdAt":  "2025-01-16T17:23:56Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "rgroenewoudt",
                                            "createdAt":  "2025-01-16T18:09:05Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "filipnavara",
                                            "createdAt":  "2025-01-16T21:46:59Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "srxqds",
                                            "createdAt":  "2025-01-17T09:33:54Z"
                                        },
                                        {
                                            "content":  "ROCKET",
                                            "user":  "MineCake147E",
                                            "createdAt":  "2025-01-20T04:22:26Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "RokeJulianLockhart",
                                            "createdAt":  "2025-01-21T18:33:28Z"
                                        },
                                        {
                                            "content":  "ROCKET",
                                            "user":  "SupinePandora43",
                                            "createdAt":  "2025-01-21T23:32:21Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "startewho",
                                            "createdAt":  "2025-02-13T09:01:31Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "NeverMorewd",
                                            "createdAt":  "2025-05-16T09:50:37Z"
                                        },
                                        {
                                            "content":  "ROCKET",
                                            "user":  "NeverMorewd",
                                            "createdAt":  "2025-05-16T09:50:38Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Felix-Dev",
                                            "createdAt":  "2025-05-22T21:28:24Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jeremy-visionaid",
                                            "createdAt":  "2025-09-19T08:39:40Z"
                                        }
                                    ],
                          "totalCount":  12
                      },
        "updatedAt":  "2025-07-23T07:49:05Z",
        "body":  "## Shipping\n- [x] https://github.com/dotnet/runtime/pull/114629\n- [ ] https://github.com/dotnet/runtime/issues/114737\n- [ ] https://github.com/dotnet/runtime/issues/115362\n- [ ] https://github.com/dotnet/runtime/issues/115717\n- [x] https://github.com/dotnet/runtime/issues/116297\n- [ ] https://github.com/dotnet/runtime/issues/116531\n\n## Build\n- [x] https://github.com/dotnet/runtime/pull/112034\n- [x] https://github.com/dotnet/runtime/pull/110471\n- [x] https://github.com/dotnet/runtime/pull/112256\n- [x] Support cross-building on Windows\n- [x] https://github.com/dotnet/runtime/pull/111524\n- [x] Set ANDROID_PLATFORM internally in the build\n- [x] Remove duplicate defines for `CORECLR_HOSTING_API_LINKAGE`\n- [ ] https://github.com/dotnet/runtime/issues/111523\n- [ ] https://github.com/dotnet/runtime/issues/111527\n- [ ] https://github.com/dotnet/runtime/issues/111868\n- [ ] Support CoreCLR builds for `arm` and `x86` architectures\n- [ ] https://github.com/dotnet/runtime/issues/111665\n- [ ] https://github.com/dotnet/runtime/issues/117760",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOnkAuYw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6aslqi",
                                           "createdAt":  "2025-01-16T12:12:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-android\u0027: @vitek-karas, @simonrozsival, @steveisok, @akoeplinger\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-01-16T12:12:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6asmAc",
                                           "createdAt":  "2025-01-16T12:12:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-01-16T12:12:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6ayIH1",
                                           "createdAt":  "2025-01-16T20:29:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEC9WxQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kotlarmilos",
                                                                               "createdAt":  "2025-01-17T09:49:44Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "steveisok",
                                           "body":  "@kotlarmilos I added an item to track building Android on Windows. Current state is not going to work.",
                                           "updatedAt":  "2025-01-16T20:29:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6bIAhR",
                                           "createdAt":  "2025-01-20T14:28:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEDbv9A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "steveisok",
                                                                               "createdAt":  "2025-01-20T14:32:33Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "filipnavara",
                                                                               "createdAt":  "2025-01-20T14:43:36Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "srxqds",
                                                                               "createdAt":  "2025-01-21T01:28:40Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "ivanpovazan",
                                                                               "createdAt":  "2025-01-21T16:49:42Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "I have some changes on a branch somewhere that make building Android on Windows (using mono) almost work, I can upstream those.",
                                           "updatedAt":  "2025-01-20T14:28:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6cyz7P",
                                           "createdAt":  "2025-02-03T10:37:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEGJ1oA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "ivanpovazan",
                                                                               "createdAt":  "2025-02-10T11:39:44Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "matouskozak",
                                                                               "createdAt":  "2025-02-12T18:42:20Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "filipnavara",
                                           "body":  "I have the arm32/x86 build fixes here: https://github.com/filipnavara/runtime/tree/android32. Didn\u0027t test the binaries yet but it builds.",
                                           "updatedAt":  "2025-02-03T10:37:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6eQC5j",
                                           "createdAt":  "2025-02-12T22:45:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivanpovazan",
                                           "body":  "Duplicates removed in: https://github.com/dotnet/runtime/pull/112096",
                                           "updatedAt":  "2025-02-12T22:45:34Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "[Android] Enable building CoreCLR for Android",
        "labels":  [
                       "area-Infrastructure-coreclr",
                       "os-android",
                       "tracking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/111523",
        "createdAt":  "2025-01-17T09:10:43Z",
        "number":  111523,
        "author":  "kotlarmilos",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-23T07:46:31Z",
        "body":  "",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOmtbRZg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6a1sIZ",
                                           "createdAt":  "2025-01-17T09:11:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-security, @bartonjs, @vcsjones\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-01-17T09:11:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6a1s_D",
                                           "createdAt":  "2025-01-17T09:12:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-android\u0027: @vitek-karas, @simonrozsival, @steveisok, @akoeplinger\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-01-17T09:12:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6a1tFm",
                                           "createdAt":  "2025-01-17T09:13:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-01-17T09:13:07Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Export `System.Security.Cryptography` APIs for singlefilehost in CoreCLR build for Android",
        "labels":  [
                       "area-Infrastructure-coreclr",
                       "os-android"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/111527",
        "createdAt":  "2025-01-17T10:02:01Z",
        "number":  111527,
        "author":  "kotlarmilos",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-23T07:46:42Z",
        "body":  "",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOmthTVA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6a2E8I",
                                           "createdAt":  "2025-01-17T10:02:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-android\u0027: @vitek-karas, @simonrozsival, @steveisok, @akoeplinger\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-01-17T10:02:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6a2FNU",
                                           "createdAt":  "2025-01-17T10:02:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-01-17T10:02:43Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Fix libunwind errors in CoreCLR Android build",
        "labels":  [
                       "area-Infrastructure-coreclr",
                       "os-android"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/111665",
        "createdAt":  "2025-01-21T14:53:52Z",
        "number":  111665,
        "author":  "steveisok",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-05-07T12:06:13Z",
        "body":  "From https://android.googlesource.com/platform/bionic/+/master/docs/32-bit-abi.md\n\n```\nAndroid does not require the _LARGEFILE_SOURCE macro to be used to make fseeko and ftello available. Instead they\u0027re always available from API level 24 where they were introduced, and never available before then.\n```\n\nAn easy solution would be to bump the min API level to 24, but that is not solely a technical decision. ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOql1eVQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6bRHd8",
                                           "createdAt":  "2025-01-21T14:54:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-android\u0027: @vitek-karas, @simonrozsival, @steveisok, @akoeplinger\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-01-21T14:54:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6bRHiD",
                                           "createdAt":  "2025-01-21T14:54:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-01-21T14:54:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6bSii1",
                                           "createdAt":  "2025-01-21T17:22:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "Where are these functions used? I can\u0027t seem to find any in the runtime.",
                                           "updatedAt":  "2025-01-21T17:22:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6bSlXB",
                                           "createdAt":  "2025-01-21T17:27:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "It starts here https://github.com/dotnet/runtime/blob/21e92cba6b290c616664902a255e3d00d8ff8667/src/native/corehost/hostmisc/pal.h#L9\n\nI haven\u0027t looked deeply into if we\u0027ll be able to sidestep it somehow.",
                                           "updatedAt":  "2025-01-21T17:27:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6bSo3-",
                                           "createdAt":  "2025-01-21T17:34:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "you mean just including fstream causes these functions to be used somehow?",
                                           "updatedAt":  "2025-01-21T17:34:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6bSqfd",
                                           "createdAt":  "2025-01-21T17:37:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEDcRIw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "akoeplinger",
                                                                               "createdAt":  "2025-01-21T17:49:18Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "steveisok",
                                           "body":  "Yeah, apparently. But we can\u0027t get rid of it because fstream types are used later on in the host PAL. \n\nHere\u0027s an example of the build error you\u0027ll get:\n\n```\nIn file included from /Users/steve/dev/customer-runtime/src/native/corehost/hostmisc/trace.cpp:4:\n  In file included from /Users/steve/dev/customer-runtime/src/native/corehost/hostmisc/trace.h:7:\n  In file included from /Users/steve/dev/customer-runtime/src/native/corehost/hostmisc/pal.h:9:\n  /Users/steve/android-ndk-r27c/toolchains/llvm/prebuilt/darwin-x86_64/sysroot/usr/include/c++/v1/fstream:869:9: error: no member named \u0027fseeko\u0027 in the global namespace; did you mean \u0027fseek\u0027?\n    869 |   if (::fseeko(__file_, __width \u003e 0 ? __width * __off : 0, __whence))\n        |       ~~^\n  /Users/steve/android-ndk-r27c/toolchains/llvm/prebuilt/darwin-x86_64/sysroot/usr/include/stdio.h:207:5: note: \u0027fseek\u0027 declared here\n    207 | int fseek(FILE* _Nonnull __fp, long __offset, int __whence);\n        |     ^\n```",
                                           "updatedAt":  "2025-01-21T17:37:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6bTXec",
                                           "createdAt":  "2025-01-21T19:16:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "These failures cause a lot of complications in our infrastructure today (see all checks around `\u0027$(TargetsLinuxBionic)\u0027 == \u0027true\u0027 and \u0027$(TargetArchitecture)\u0027 == \u0027arm\u0027`.\n\nWe can likely skip defining `_FILE_OFFSET_BITS=64` for android arm32, at least for the hosts layer. It\u0027s highly unlikely that someone would have a 4GB+ runtimeconfig.json or deps.json file for an Android arm32 app.",
                                           "updatedAt":  "2025-01-21T19:16:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6bUDqK",
                                           "createdAt":  "2025-01-21T20:58:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEDfF7g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkoritzinsky",
                                                                               "createdAt":  "2025-01-22T00:59:31Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "vitek-karas",
                                           "body":  "We might be able to rewrite the host pal to not use fstream - the pal is pretty simple, so if we can find other ways to do it... the only limitation is that we don\u0027t want to make the host larger, so ideally use something which already exists in it.",
                                           "updatedAt":  "2025-01-21T20:58:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6bxvq0",
                                           "createdAt":  "2025-01-24T22:25:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "filipnavara",
                                           "body":  "\u003e We might be able to rewrite the host pal to not use fstream\n\nThat seems pretty doable: https://github.com/dotnet/runtime/compare/main...filipnavara:runtime:host-remove-fstream\n\nI didn\u0027t update the test code but that only reads whole file into memory, essentially the same thing as done in `json_parser.cpp`, so I don\u0027t expect to be hard. I also didn\u0027t actually try to run it, so take it with a grain of salt, but it looks like a reasonable approach to take.",
                                           "updatedAt":  "2025-01-24T22:44:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6qXTpR",
                                           "createdAt":  "2025-05-07T11:32:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kotlarmilos",
                                           "body":  "Should we keep this issue open, or close it as not planned for this iteration?",
                                           "updatedAt":  "2025-05-07T11:32:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6qXV5V",
                                           "createdAt":  "2025-05-07T11:36:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOERJ4Ew==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kotlarmilos",
                                                                               "createdAt":  "2025-05-07T12:06:04Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "filipnavara",
                                           "body":  "Keep it open, please. Feel free to change the milestone to Future if appropriate.\n\nI have the 32-bits builds working on a branch but it\u0027s not really a priority at the moment.",
                                           "updatedAt":  "2025-05-07T11:36:20Z"
                                       }
                                   ],
                         "totalCount":  11
                     },
        "title":  "[Android] fseeko and ftello not supported on arm32 \u0026 x86 below API level 24 without disabling _FILE_OFFSET_BITS=64",
        "labels":  [
                       "area-Infrastructure-coreclr",
                       "os-android",
                       "runtime-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/111809",
        "createdAt":  "2025-01-24T21:32:53Z",
        "number":  111809,
        "author":  "carlossanlop",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-21T17:44:45Z",
        "body":  "I am not marking this as a Known-Build-Error because the actual failure\u0027s callstack in managed code is showing up correctly a few lines above. I\u0027ll open another issue for that.\n\nThis was found in this build for `runtime-libraries-coreclr outerloop`: https://dev.azure.com/dnceng-public/public/_build/results?buildId=928464\u0026view=logs\u0026j=592eed89-78f5-5202-9da5-ad17df3bef4a\u0026t=4feb010c-08b1-5201-8e2c-97e3caf24223\u0026l=56\nQueue: `linux_musl-x64 Debug CoreCLR_Debug`\nLog file: https://helixr1107v0xdcypoyl9e7f.blob.core.windows.net/dotnet-runtime-refs-pull-111802-merge-bba755c0744b4f9fbc/System.Net.Sockets.Tests/1/console.43d6c1a0.log?helixlogtype=result\nPR: https://github.com/dotnet/runtime/pull/111802\n\n```\n=========================================\nPrinting stacktrace from \u0027/home/helixbot/dotnetbuild/dumps/coredump.19.dmp.crashreport.json\u0027\nInvoking llvm-symbolizer --pretty-print\nStack trace:\n?? at ??:0:0\n?? at ??:0:0\n?? at ??:0:0\n?? at ??:0:0\n?? at ??:0:0\n?? at ??:0:0\n...\n...\n?? at ??:0:0\n?? at ??:0:0\n?? at ??:0:0\n?? at ??:0:0\n?? at ??:0:0\n?? at ??:0:0\n\n----- end =============== XUnitLogChecker Output - exit code 0 ===========================\n+ export \u0027_commandExitCode=134\u0027\n+ python /root/helix/work/correlation/reporter/run.py https://dev.azure.com/dnceng-public/ public 24571442 eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjdSd2F5dmlYRHFoZnN6MTZSNmxPbXNXWWxTQSJ9.eyJuYW1laWQiOiJjNzczZjJjMi01MTIwLTQyMDctYWZlMi1hZmFmMzVhOGJjMGEiLCJzY3AiOiJhcHBfdG9rZW4iLCJhdWkiOiI4YmU3YTZhMS01YjFmLTRhNjYtOTk0MC1iMjU2MmIyMTdiMDMiLCJzaWQiOiI2MjRmNzUyYy1jYTE5LTRjZDQtOTQxNC1jMmRkYmVlZTI1NzYiLCJCdWlsZElkIjoiY2JiMTgyNjEtYzQ4Zi00YWJiLTg2NTEtOGNkY2I1NDc0NjQ5OzkyODQ2NCIsIkRlZklkIjoiMTI1Iiwiam9icmVmIjoiMjliN2M1MmEtNzYwMy00YzM4LWEyMjYtODc0NTIyOGZiYThkOjU5MmVlZDg5LTc4ZjUtNTIwMi05ZGE1LWFkMTdkZjNiZWY0YSIsInBwaWQiOiJ2c3RmczovLy9CdWlsZC9CdWlsZC85Mjg0NjQiLCJvcmNoaWQiOiIyOWI3YzUyYS03NjAzLTRjMzgtYTIyNi04NzQ1MjI4ZmJhOGQuYnVpbGQuYnVpbGRfbGludXhfbXVzbF94NjRfZGVidWdfY29yZWNscl9kZWJ1Zy5fX2RlZmF1bHQiLCJyZXBvSWRzIjoiIiwiaXNzIjoiYXBwLnZzdG9rZW4udmlzdWFsc3R1ZGlvLmNvbSIsImF1ZCI6ImFwcC52c3Rva2VuLnZpc3VhbHN0dWRpby5jb218dnNvOjZmY2M5MmU1LTczYTctNGY4OC04ZDEzLWQ5MDQ1YjQ1ZmIyNyIsIm5iZiI6MTczNzc0NTIyMSwiZXhwIjoxNzM3NzU3MjIxfQ.nwXpboty33jQXZv7ICtqTDX4SnXyKZSUI_DPnC7jKJ8vcpsJBHSfElRK63UXymGjr1vMFZj2qqQfEcBs5TX7MXGMMTKDB9rynsB7ukOfgizyoNaCiR7Q5cETMNIVycZ4YjmRd83QwHZl6EjNIeXdGiWqy7FDJ3q_F4igaXbPgZbVIHbhTNBQv-ywEjYkCbeyAcxDJf5uKvKOw5oXl4ZFPLxzaR7fiwC9RXeSswnx5vSg7B3IyLgGOw5VQOPgcg3hA_QWaMg9zEFe5660x7WoMsV4b8o0037QbPqTConix-h9Z7fW9GTsgb0ewkh61JuroEoGCAE3eKVt-t5OwMrEoA\nNo module named \u0027pkg_resources\u0027\n2025-01-24T20:09:49.663Z\tINFO   \trun.py\trun(48)\tmain\tBeginning reading of test results.\n2025-01-24T20:09:49.663Z\tINFO   \trun.py\t__init__(42)\tread_results\tSearching \u0027/root/helix/work/workitem/e\u0027 for test results files\n2025-01-24T20:09:49.663Z\tINFO   \trun.py\t__init__(42)\tread_results\tSearching \u0027/root/helix/work/workitem/uploads\u0027 for test results files\n2025-01-24T20:09:49.663Z\tWARNING\trun.py\t__init__(55)\tread_results\tNo results file found in any of the following formats: xunit, junit, trx\n2025-01-24T20:09:49.664Z\tINFO   \trun.py\tpacking_test_reporter(30)\treport_results\tPacking 0 test reports to \u0027/root/helix/work/workitem/e/__test_report.json\u0027\n2025-01-24T20:09:49.664Z\tINFO   \trun.py\tpacking_test_reporter(33)\treport_results\tPacked 1560 bytes\n+ python /root/helix/work/correlation/gen-debug-dump-docs.py -buildid 928464 -workitem System.Net.Sockets.Tests -jobid bba755c0-744b-4f9f-bca6-06acf50390cd -outdir /root/helix/work/workitem/uploads -templatedir /root/helix/work/correlation -dumpdir /home/helixbot/dotnetbuild/dumps -productver 10.0.0\ngen-debug-dump-docs.py: read file: /root/helix/work/correlation/debug-dump-template.md\ngen-debug-dump-docs.py: writing output file: /root/helix/work/workitem/uploads/how-to-debug-dump.md\ngen-debug-dump-docs.py: done writing debug dump information\n+ exit 134\n+ export \u0027_commandExitCode=134\u0027\n+ chmod -R 777 /home/helixbot/dotnetbuild/dumps\n+ exit 134\n\n[END EXECUTION]\nExit Code:134\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOm8WMdQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6bxYx1",
                                           "createdAt":  "2025-01-24T21:33:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-01-24T21:33:24Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "XUnitLogChecker: llvm-symbolizer not printing the stack trace frames",
        "labels":  [
                       "arch-x64",
                       "area-Infrastructure-coreclr",
                       "runtime-coreclr",
                       "blocking-outerloop",
                       "os-linux-musl"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/112071",
        "createdAt":  "2025-02-02T15:05:05Z",
        "number":  112071,
        "author":  "jkotas",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-21T17:53:06Z",
        "body":  "              Yes, our current build setup isn\u0027t conducive to building two flavors of our vendored libraries (we would need to be able to define separate target names and include the subdirectories twice).\r\n\r\nThere are alternative ways we could include the vendored libs, but that would require significant changes to how we build. I think that\u0027s something we can consider in .NET 10 but in a later PR (especially if we want this in P1).\r\n\r\n_Originally posted by @jkoritzinsky in https://github.com/dotnet/runtime/pull/111805#discussion_r1933060344_\r\n            ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOnLn2nw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6cufaQ",
                                           "createdAt":  "2025-02-02T15:05:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "cc @jkoritzinsky ",
                                           "updatedAt":  "2025-02-02T15:05:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6cufaf",
                                           "createdAt":  "2025-02-02T15:06:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-02-02T15:06:02Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Re-enable LTCG optimization for vendored libraries",
        "labels":  [
                       "tenet-performance",
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/112423",
        "createdAt":  "2025-02-11T16:18:01Z",
        "number":  112423,
        "author":  "carlossanlop",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T03:02:54Z",
        "body":  "@jkoritzinsky \n\n## Build Information\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=947948\u0026view=logs\u0026j=fc3f098e-ab70-5b56-d12d-f5fa32e40725\nBuild error leg or test failing: Source Build Validation / Source-Build (CentOS8) / Build\nPull request: N/A\n\u003c!-- Error message template  --\u003e\n## Error Message\n\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssueJsonStepByStep.md).\n\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\n\n```json\n{\n  \"ErrorMessage\": \"Could not find BROTLIDEC using the following names: brotlidec\",\n  \"ErrorPattern\": \"\",\n  \"BuildRetry\": false,\n  \"ExcludeConsoleLog\": false\n}\n```\n\n- Logs:\n  - https://dev.azure.com/dnceng-public/public/_build/results?buildId=947948\u0026view=logs\u0026j=fc3f098e-ab70-5b56-d12d-f5fa32e40725\u0026t=f94e0a17-94f2-5c47-cbbe-d652f433da1c\n  - https://dev.azure.com/dnceng-public/public/_build/results?buildId=947948\u0026view=logs\u0026j=46d4bc78-82b7-5486-55ce-7714ebdf0ac0\u0026t=5940e102-b135-58b6-71a4-2593b90abf9d\u0026l=706\n- Output:\n```\n   Detected Linux x86_64\n    -- Performing Test COMPILER_SUPPORTS_F_STACK_PROTECTOR_STRONG\n    -- Performing Test COMPILER_SUPPORTS_F_STACK_PROTECTOR_STRONG - Success\n    -- Performing Test COMPILER_SUPPORTS_W_IMPLICIT_FALLTHROUGH\n    -- Performing Test COMPILER_SUPPORTS_W_IMPLICIT_FALLTHROUGH - Success\n    -- Performing Test COMPILER_SUPPORTS_W_RESERVED_IDENTIFIER\n    -- Performing Test COMPILER_SUPPORTS_W_RESERVED_IDENTIFIER - Success\n    -- The ASM compiler identification is Clang 17.0.6 with GNU-like command-line\n    -- Found assembler: /usr/bin/clang-17\n    -- Performing Test HAVE_LTO\n    -- Performing Test HAVE_LTO - Success\n    -- Performing Test COMPILER_SUPPORTS_F_ALIGNED_NEW\n    -- Performing Test COMPILER_SUPPORTS_F_ALIGNED_NEW - Success\n    -- Performing Test HAVE_DIRENT_D_TYPE\n    -- Performing Test HAVE_DIRENT_D_TYPE - Success\n    -- Looking for getauxval\n    -- Looking for getauxval - found\n    -- Looking for include file GSS/GSS.h\n    -- Looking for include file GSS/GSS.h - not found\n    CMake Error at /__w/1/s/artifacts/sb/src/src/native/libs/System.IO.Compression.Native/extra_libs.cmake:24 (find_library):\n      Could not find BROTLIDEC using the following names: brotlidec\n    Call Stack (most recent call first):\n      /__w/1/s/artifacts/sb/src/src/native/corehost/apphost/static/CMakeLists.txt:182 (append_extra_compression_libs)\n    \n    \n    -- Configuring incomplete, errors occurred!\n##[error]Failed to generate \"CoreCLR component\" build project!\n  /__w/1/s/artifacts/sb/src/src/coreclr/runtime.proj(108,5): error MSB3073: The command \"\"/__w/1/s/artifacts/sb/src/src/coreclr/build-runtime.sh\" -cmakeargs \" -DCLR_CMAKE_USE_SYSTEM_BROTLI=true\" -x64 -release -ci -portablebuild=false -keepnativesymbols -os linux -outputrid centos.8-x64 -cmakeargs \"-DCLR_DOTNET_HOST_PATH=/__w/1/s/.dotnet/dotnet\" -cmakeargs \"-DCDAC_BUILD_TOOL_BINARY_PATH=/__w/1/s/artifacts/sb/src/artifacts/bin/coreclr/linux.x64.Release/cdac-build-tool/cdac-build-tool.dll\"\" exited with code 1.\n  \n  Build FAILED.\n```\n\n\u003c!-- Known issue validation start --\u003e\n ### Known issue validation\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=947948\n**Error message validated:** `[Could not find BROTLIDEC using the following names: brotlidec`]\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\n**Validation performed at:** 2/11/2025 4:18:39 PM UTC\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|0|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOsXmZqg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6eB9Bh",
                                           "createdAt":  "2025-02-11T16:18:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-02-11T16:18:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6eCQt2",
                                           "createdAt":  "2025-02-11T16:42:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEF_cHw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkoritzinsky",
                                                                               "createdAt":  "2025-02-11T16:49:27Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "mthalman",
                                           "body":  "I think this would be fixed by upgrading to CentOS Stream 9. An image tag for that already exists. Note that 8 is EOL. I know that the 8 image does not contain the `brotli-dev` package but the 9 image does. So assuming that `brotli-dev` provides this missing `BROTLIDEC`, then things should be good.\n\nHere are the two references to 8 that I see:\n\nhttps://github.com/dotnet/runtime/blob/689f4e9a5a2f8430455266a27921444ec1605eb6/eng/pipelines/common/templates/pipeline-with-resources.yml#L82-L84\n\nhttps://github.com/dotnet/runtime/blob/689f4e9a5a2f8430455266a27921444ec1605eb6/eng/pipelines/common/templates/pipeline-with-resources.yml#L108-L109",
                                           "updatedAt":  "2025-02-11T16:42:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6eCY2k",
                                           "createdAt":  "2025-02-11T16:49:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mthalman",
                                           "body":  "Related: https://github.com/dotnet/dotnet-buildtools-prereqs-docker/pull/1197",
                                           "updatedAt":  "2025-02-11T16:49:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6eCxcv",
                                           "createdAt":  "2025-02-11T17:23:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "carlossanlop",
                                           "body":  "Any fixes for the 9.0 branch need to go directly to the `release/9.0` branch right now so that we can unblock internal immediately after merging.",
                                           "updatedAt":  "2025-02-11T17:23:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6xeZmq",
                                           "createdAt":  "2025-06-16T18:00:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeffschwMSFT",
                                           "body":  "removing blocking-clean-ci as it has not failed in 30 days\n\n24-Hour Hit Count | 7-Day Hit Count | 1-Month Count\n-- | -- | --\n0 | 0 | 0",
                                           "updatedAt":  "2025-06-16T18:00:58Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "[9.0][source-build] Could not find BROTLIDEC using the following names: brotlidec",
        "labels":  [
                       "os-linux",
                       "area-Infrastructure-coreclr",
                       "source-build",
                       "untriaged",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/113431",
        "createdAt":  "2025-03-12T17:58:58Z",
        "number":  113431,
        "author":  "radekdoulik",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-06-21T02:41:27Z",
        "body":  "Look at current mono wasm build infra and also runtimelab/nativeaot to see how much we can reuse",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOp1I4iA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6iDe9c",
                                           "createdAt":  "2025-03-12T18:54:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-03-12T18:54:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6iDfpM",
                                           "createdAt":  "2025-03-12T18:55:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-03-12T18:55:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6nUjiI",
                                           "createdAt":  "2025-04-15T18:54:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "maraf",
                                           "body":  "It should leverage the Wasm SDK (and underlaying StaticWebAssets SDK) as those solve various issues and situations related to web app development. NativeAOT-LLVM doesn\u0027t integrate with them and has some very simple one instead for supporting dotnet.js mode, the other mode is just plain emscripten setup",
                                           "updatedAt":  "2025-04-15T18:54:57Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "[wasm coreclr] plan app build infrastructure",
        "labels":  [
                       "arch-wasm",
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/113465",
        "createdAt":  "2025-03-13T09:44:33Z",
        "number":  113465,
        "author":  "radekdoulik",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-03-19T14:50:26Z",
        "body":  "",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOojQkCQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6iKVT-",
                                           "createdAt":  "2025-03-13T09:45:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-03-13T09:45:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6iNCQJ",
                                           "createdAt":  "2025-03-13T13:48:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-03-13T13:48:16Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "[wasm coreclr] resolve problem with broken symbol stripping",
        "labels":  [
                       "arch-wasm",
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/113885",
        "createdAt":  "2025-03-25T17:38:32Z",
        "number":  113885,
        "author":  "radekdoulik",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-29T15:25:39Z",
        "body":  "- update https://github.com/dotnet/runtime/blob/main/docs/workflow/requirements/linux-requirements.md#clang-for-wasm\n- mention the benefits and limitations of -subset mono.emsdk (and consider renaming it)",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOwPcieg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6kCPc3",
                                           "createdAt":  "2025-03-25T17:39:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-03-25T17:39:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7A9yJ6",
                                           "createdAt":  "2025-08-29T15:25:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "maybe this could be closed by https://github.com/dotnet/runtime/pull/119104",
                                           "updatedAt":  "2025-08-29T15:25:39Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "[wasm coreclr] document how to build coreclr on wasm",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/114397",
        "createdAt":  "2025-04-08T19:05:06Z",
        "number":  114397,
        "author":  "BruceForstall",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-04-08T19:14:33Z",
        "body":  "Building coreclr tests generates the warning:\n```\nRuntime_74635_1.il(24): warning : Reference to undeclared extern assembly \u0027mscorlib\u0027. Attempting autodetect [c:\\gh\\runtime\\src\\tests\\JIT\\Regression\\JitBlue\\Runtime_74635\\Runtime_74635_1.ilproj] [c:\\gh\\runtime\\src\\tests\\build.proj]\n```\n\n@jkoritzinsky It looks like you introduced this warning with #107118",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOpiTnJg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6mJOcm",
                                           "createdAt":  "2025-04-08T19:14:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-04-08T19:14:32Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Test build warning: Reference to undeclared extern assembly \u0027mscorlib\u0027. Attempting autodetect",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/114693",
        "createdAt":  "2025-04-15T15:40:55Z",
        "number":  114693,
        "author":  "carlossanlop",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T03:03:24Z",
        "body":  "@hoyosjs Unable to access the dump json file.\n\n## Build Information\n\nBuild: https://dev.azure.com/dnceng-public/public/_build/results?buildId=1016432\nBuild error leg or test failing: profiler/handles/handles/handles.sh\n\n## Error Message\n\n```json\n{\n  \"ErrorMessage\" : \"Problem launching createdump\",\n  \"BuildRetry\" : false,\n  \"ExcludeConsoleLog\" : false\n}\n```\n\n- PR: https://github.com/dotnet/runtime/pull/114662\n- Queue: `coreclr Pri0 Runtime Tests Run linux arm64 checked`\n- Job result: https://dev.azure.com/dnceng-public/public/_build/results?buildId=1016432\u0026view=logs\u0026j=15d7b3ca-f7a5-5373-9266-3c1554d785ae\u0026t=d1ceec29-6ebd-5c8e-2a21-7abb8dff8831\u0026l=37\n- Log file: https://helixr18s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-heads-release-90-staging-0950d4c86688440188/profiler.handles/1/console.27506fd3.log?helixlogtype=result\n- Output:\n\nDuring a test timeout, successfully collect a dump file for it:\n```\n Starting:    profiler.handles.XUnitWrapper (parallel test collections = on [2 threads], stop on fail = off)\n   profiler.handles.XUnitWrapper: [Long Running Test] \u0027profiler/handles/handles/handles.sh\u0027, Elapsed: 00:03:59\n   profiler.handles.XUnitWrapper: [Long Running Test] \u0027profiler/handles/handles/handles.sh\u0027, Elapsed: 00:06:00\n   profiler.handles.XUnitWrapper: [Long Running Test] \u0027profiler/handles/handles/handles.sh\u0027, Elapsed: 00:08:00\nAttempting to collect crash dump: /home/helixbot/dotnetbuild/dumps/crashdump_48.dmp\nInvoking: sudo /root/helix/work/correlation/createdump --crashreport --name \"/home/helixbot/dotnetbuild/dumps/crashdump_48.dmp\" 48 --withheap\n   profiler.handles.XUnitWrapper: [Long Running Test] \u0027profiler/handles/handles/handles.sh\u0027, Elapsed: 00:10:00\ncreatedump stdout:\n[createdump] Gathering state for process 48 corerun\n[createdump] Writing crash report to file /home/helixbot/dotnetbuild/dumps/crashdump_48.dmp.crashreport.json\n[createdump] Crash report successfully written\n[createdump] Writing minidump with heap to file /home/helixbot/dotnetbuild/dumps/crashdump_48.dmp\n[createdump] Written 97964032 bytes (23917 pages) to core file\n[createdump] Target process is alive\n[createdump] Dump successfully written in 340ms\n\ncreatedump stderr:\n\nInvoking: sudo ls -l /home/helixbot/dotnetbuild/dumps/crashdump_48.dmp.crashreport.json\nstdout: -rw------- 1 root root 29218 Apr 15 04:39 /home/helixbot/dotnetbuild/dumps/crashdump_48.dmp.crashreport.json\n```\n\nBut then when we try to access the crashreport.json, access is denied:\n```\n=========================================\nError reading /home/helixbot/dotnetbuild/dumps/crashdump_48.dmp.crashreport.json: System.UnauthorizedAccessException: Access to the path \u0027/home/helixbot/dotnetbuild/dumps/crashdump_48.dmp.crashreport.json\u0027 is denied.\n ---\u003e System.IO.IOException: Permission denied\n   --- End of inner exception stack trace ---\n   at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirError)\n   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode, Boolean failForSymlink, Boolean\u0026 wasSymlink, Func`4 createOpenException)\n   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, UnixFileMode openPermissions, Int64\u0026 fileLength, UnixFileMode\u0026 filePermissions, Boolean failForSymlink, Boolean\u0026 wasSymlink, Func`4 createOpenException)\n   at System.IO.Strategies.OSFileStreamStrategy..ctor(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)\n   at System.IO.StreamReader.ValidateArgsAndOpenPath(String path, Encoding encoding, Int32 bufferSize)\n   at System.IO.File.ReadAllText(String path, Encoding encoding)\n   at CoreclrTestLib.CoreclrTestWrapperLib.TryPrintStackTraceFromCrashReport(String crashReportJsonFile, TextWriter outputWriter)\nCollected crash dump: /home/helixbot/dotnetbuild/dumps/crashdump_48.dmp\n    profiler/handles/handles/handles.sh [FAIL]\n      Problem launching createdump (may not have execute permissions): execve(���ϰ) FAILED No such file or directory (2)\n      \n      Assert failure(PID 57 [0x00000039], Thread: 64 [0x0040]): !PreemptiveGCDisabled()\n          File: /__w/1/s/src/coreclr/vm/threads.cpp:911\n          Image: /root/helix/work/correlation/corerun\n```\n\u003c!-- Known issue validation start --\u003e\n ### Known issue validation\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=1016432\n**Error message validated:** `[[Long Running Test] \u0027profiler/handles/handles/handles.sh\u0027`]\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\n**Validation performed at:** 4/15/2025 3:41:30 PM UTC\n\u003c!-- Known issue validation end --\u003e\n\u003c!--Known issue error report start --\u003e\n\n### Report\n\n|Build|Definition|Test|Pull Request|\n|---|---|---|---|\n|[1016432](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1016432)|dotnet/runtime|[profiler/handles/handles/handles.sh](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1016432\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=27194228\u0026resultId=117009)||\n#### Summary\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\n|---|---|---|\n|0|0|1|\n\u003c!--Known issue error report end --\u003e\n\u003c!-- Known issue validation start --\u003e\n ### Known issue validation\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=1016432\n**Error message validated:** `[Access to the path \u0027.*crashreport.json\u0027 is denied.`]\n**Result validation:** :x: Known issue did not match with the provided build.\n**Validation performed at:** 4/22/2025 8:52:38 PM UTC\n\u003c!-- Known issue validation end --\u003e\n\u003c!--Known issue error report start --\u003e\n\n### Report\n\n|Build|Definition|Test|Pull Request|\n|---|---|---|---|\n|[1016432](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1016432)|dotnet/runtime|[profiler/handles/handles/handles.sh](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1016432\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=27194228\u0026resultId=117009)||\n#### Summary\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\n|---|---|---|\n|0|0|1|\n\u003c!--Known issue error report end --\u003e\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=1016432\r\n**Error message validated:** `[Problem launching createdump`]\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 4/22/2025 8:55:30 PM UTC\r\n\u003c!-- Known issue validation end --\u003e\n\u003c!--Known issue error report start --\u003e\n\n### Report\n\n|Build|Definition|Test|Pull Request|\n|---|---|---|---|\n|[1016432](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1016432)|dotnet/runtime|[profiler/handles/handles/handles.sh](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1016432\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=27194228\u0026resultId=117009)||\n#### Summary\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\n|---|---|---|\n|0|0|1|\n\u003c!--Known issue error report end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n\r\n|Build|Definition|Test|Pull Request|\r\n|---|---|---|---|\r\n|[1150708](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150708)|dotnet/runtime|[profiler/handles/handles/handles.sh](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150708\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31788532\u0026resultId=108686)||\r\n|[1148160](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148160)|dotnet/runtime|[profiler/handles/handles/handles.sh](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148160\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31704324\u0026resultId=108686)||\r\n|[1147472](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147472)|dotnet/runtime|[profiler/handles/handles/handles.sh](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147472\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31672804\u0026resultId=108686)||\r\n|[1138340](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138340)|dotnet/runtime|[HostActivation.Tests.SymbolicLinks.HostActivation.Tests.SymbolicLinks.Put_app_directory_behind_symlink](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138340\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31356004\u0026resultId=100170)|dotnet/runtime#119217|\r\n|[1137908](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137908)|dotnet/runtime|[HostActivation.Tests.SymbolicLinks.HostActivation.Tests.SymbolicLinks.Put_app_directory_behind_symlink](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137908\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31339540\u0026resultId=100368)|dotnet/runtime#119217|\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|3|5|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOqDtXFA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6nRi-n",
                                           "createdAt":  "2025-04-15T15:41:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @tommcdon\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-04-15T15:41:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6nXmpn",
                                           "createdAt":  "2025-04-16T01:54:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tommcdon",
                                           "body":  "@mdh1418 ",
                                           "updatedAt":  "2025-04-16T01:54:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6oBS6c",
                                           "createdAt":  "2025-04-21T16:10:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mdh1418",
                                           "body":  "The profiler test itself passed `Profilee STDOUT: PROFILER TEST PASSES`, but for some reason the process isn\u0027t exiting given theres no `Expected: 100\\nActual:100` that is supposed to output in the test script.\n\nThis happens occasionally, and is not clear how to reproduce, I don\u0027t believe this is specific to the handles profiler test at all, but something going awry with the child process exiting.\n\nThere\u0027s some extra logging that we\u0027ve added to CoreclrTestWrapperLib that didn\u0027t make it to release/9.0-staging, so for example, if the environment var for USER is not set, that might be why the crashdump couldn\u0027t be opened. @kunalspathak Do you know what\u0027s responsible for setting the USER env var?",
                                           "updatedAt":  "2025-04-21T16:10:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6oOwp2",
                                           "createdAt":  "2025-04-22T20:43:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mdh1418",
                                           "body":  "The test timeout is not unique: https://github.com/dotnet/runtime/issues/66174 https://github.com/dotnet/runtime/issues/107067\n\nClosing the `profiler/handles/handles/handles.sh` side of this issue.",
                                           "updatedAt":  "2025-04-22T20:43:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6oO1cU",
                                           "createdAt":  "2025-04-22T20:53:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-04-22T20:53:50Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "[9.0-staging] Unable to open dump json file",
        "labels":  [
                       "arch-arm64",
                       "os-linux",
                       "area-Infrastructure-coreclr",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/114737",
        "createdAt":  "2025-04-16T14:26:30Z",
        "number":  114737,
        "author":  "ivanpovazan",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-06-04T17:09:35Z",
        "body":  "## Description\n\nThis is a tracking issue for potential work regarding static linking CoreCLR runtime and its components. Tentative list of work items is as follows:\n\n**Scenario agnostic**\n\n- [ ] Consider componentization of CoreCLR runtime components (debugger, event pipe, GC variants, etc) similarly to: https://github.com/dotnet/runtime/blob/24d87073054240c3b7bc3d53e3a33d4bbf8b0ac2/docs/design/mono/components.md#monovm-runtime-components ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOp4IBsg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6neaYJ",
                                           "createdAt":  "2025-04-16T14:26:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-android\u0027: @vitek-karas, @simonrozsival, @steveisok, @akoeplinger\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-04-16T14:26:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6neamJ",
                                           "createdAt":  "2025-04-16T14:27:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-04-16T14:27:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6nggGy",
                                           "createdAt":  "2025-04-16T17:59:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AaronRobinsonMSFT",
                                           "body":  "/cc @jkotas @janvorli @davidwrighton @mangod9 @agocke @tommcdon @MichalStrehovsky ",
                                           "updatedAt":  "2025-04-16T17:59:40Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Implement componentization of CoreCLR runtime",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/115324",
        "createdAt":  "2025-05-06T04:54:37Z",
        "number":  115324,
        "author":  "Liangjia0411",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-25T22:03:35Z",
        "body":  "## Description\nWhen attempting to build the .NET Runtime with Address Sanitizer (ASan), adding the `packs.product` parameter causes the build to fail. Building just `clr` or `clr+libs` with ASan works fine, but adding `packs.product` results in failure during the crossgen2 step.\n\n## Repro Steps\n1. Clone the dotnet/runtime repository\n2. Check out the dotnet9 branch\n3. Execute the following commands:\n```bash\n# This command works correctly\nbuild.cmd -s clr -fsanitize address\n\n# This command fails\nbuild.cmd -s clr+libs+packs.product -fsanitize address\n```\n\n## Error Message\n```\nH:\\MonoGroup\\dotnet\\runtime\\src\\installer\\pkg\\sfx\\Microsoft.NETCore.App\\Microsoft.NETCore.App.Crossgen2.sfxproj(53,5): error MSB3073: The command \"H:\\MonoGroup\\dotnet\\runtime\\artifacts\\bin\\crossgen2_publish\\x64\\Release\\win-x64\\publish\\crossgen2.exe H:\\MonoGroup\\dotnet\\runtime\\artifacts\\bin\\coreclr\\windows.x64.Release\\IL/System.Private.CoreLib.dll --out H:\\MonoGroup\\dotnet\\runtime\\artifacts\\obj\\Microsoft.NETCore.App.Crossgen2\\Release\\net9.0\\win-x64\\S.P.C.tmp\" exited with code -1073741515.\n0 warnings\n1 error\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOsPTDhA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6qEY6i",
                                           "createdAt":  "2025-05-06T04:55:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-05-06T04:55:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6w9MOE",
                                           "createdAt":  "2025-06-13T02:55:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Liangjia0411",
                                           "body":  "This is my current solution: modify the `eng/Subsets.props` file to remove the relevant description of Crossgen2.\n\n![Image](https://github.com/user-attachments/assets/cf63d6f7-94d9-41e1-aad3-7f57b441e890)",
                                           "updatedAt":  "2025-06-13T02:55:40Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Build Error: Build failure with Address Sanitizer when using clr+libs+packs.product",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/115362",
        "createdAt":  "2025-05-07T11:34:58Z",
        "number":  115362,
        "author":  "kotlarmilos",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-05-08T22:58:34Z",
        "body":  "## Description\n\nUse CMake exports to generate a CMake module that the AppleAppBuilder and AndroidAppBuilder templates would consume (and as such would allow the runtime to control the complexity and the various templates just say \"link against this target\"). With that option, we\u0027d limit the amount of knowledge that consuming repos would need to have.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOqr6uuA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6qXVnu",
                                           "createdAt":  "2025-05-07T11:35:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-05-07T11:35:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6qZPnZ",
                                           "createdAt":  "2025-05-07T14:08:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "Does mobile user tooling have a dependency on cmake today? Would this introduce a new dependency that needs to get acquired somehow, etc.?",
                                           "updatedAt":  "2025-05-07T14:08:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6qZZbv",
                                           "createdAt":  "2025-05-07T14:21:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "Yes, both AndroidAppBuilder and AppleAppBuilder depend on CMake today to build the final app.",
                                           "updatedAt":  "2025-05-07T14:21:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6qmPB4",
                                           "createdAt":  "2025-05-08T08:06:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "grendello",
                                           "body":  "SDKs (Android, iOS and WASM), however, don\u0027t have dependency on cmake and it\u0027s unlikely they can take it (I\u0027m thinking of application build time, not SDK build). In Android, we ship a minimal LLVM-based toolchain (in the context of static linking we have **just** the linker). It would be impossible for the SDKs to easily parse the cmake export statements. Instead, I would propose that the runtime build produces a file (e.g. JSON) that describes the following:\n\n  1. What static libraries have to be linked into the final application and in which order. This must allow for duplicate entries (since linker processes inputs in-order, sometimes it is necessary to mention a library twice if there are e.g. circular dependencies)\n  2. What **required** flags are to be passed to the linker. We currently have 3 linkers in use across the SDKs, the file would need to take each of them into account\n  3. Optional components (not used right now, but might be in the future - something a\u0027la Mono components)\n\nAll that information is available for the CoreCLR build, so it shouldn\u0027t be a problem generating such a file. With the above information, the entire application linking process on the SDK side would be quite painless. And with the 1. above requiring a list of libraries, the runtime would have flexibility in how it distributes its components.\n\n/cc @rolfbjarne @lewing @steveisok",
                                           "updatedAt":  "2025-05-08T08:06:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6qmj8G",
                                           "createdAt":  "2025-05-08T08:38:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rolfbjarne",
                                           "body":  "1. I\u0027ve never seen any ordering issues on macOS (and other Apple platforms), so that is hopefully a non-issue. As for selecting which object files to link with: if there are no duplicate symbols across all object files, and all required symbols can be seen by the native linker (i.e. no dynamic linking / dlopen / dlsym) then we can just link with all of them, and the native linker will pick the object files it needs.\n \n2. At least for Mach-O files, it\u0027s possible to add any linker flags inside `.o` files using the `LC_LINKER_OPTION` load command:\n     \n    * https://www.smileykeith.com/2022/02/23/lc-linker-option/\n    * https://milen.me/writings/auto-linking-on-ios-and-macos/\n\n    This would avoid the whole problem of passing required linker flags elsewhere.\n\n3. If there are duplicate symbols across object files, this might be solved with something like Mono\u0027s components.\n",
                                           "updatedAt":  "2025-05-08T08:38:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6qrduO",
                                           "createdAt":  "2025-05-08T15:44:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "grendello",
                                           "body":  "@rolfbjarne 1. might not be a problem now, but it\u0027s better to account for this possibility. In our case we also link against dynamic libraries (we produce a .so), we also add lead and trail object files, but that\u0027s outside of runtime scope.\n\n2. I don\u0027t think it\u0027s possible in ELF files, and we need something that works for all 3 SDKs, possibly other consumers too, so I think an array of arguments in the JSON file is a better choice here.",
                                           "updatedAt":  "2025-05-08T15:44:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6qsDoG",
                                           "createdAt":  "2025-05-08T16:43:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "Just to confirm my understanding: Does the .NET on iOS and Android tooling in the SDK/workloads use the AppleAppBuilder and AndroidAppBuilder tasks from this repository, or do they build the final apps a different way?",
                                           "updatedAt":  "2025-05-08T16:43:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6qsnI4",
                                           "createdAt":  "2025-05-08T17:48:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rolfbjarne",
                                           "body":  "At least in the iOS sdk we use our own logic.",
                                           "updatedAt":  "2025-05-08T17:48:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6qtHyf",
                                           "createdAt":  "2025-05-08T18:38:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jonpryor",
                                           "body":  "@jkoritzinsky [asked](https://github.com/dotnet/runtime/issues/115362#issuecomment-2863675910):\n\n\u003e Just to confirm my understanding: Does the .NET on iOS and Android tooling in the SDK/workloads use the AppleAppBuilder and AndroidAppBuilder tasks from this repository, or do they build the final apps a different way?\n\n.NET for Android does *not* use `AndroidAppBuilder`.  We have lots of our own special logic.",
                                           "updatedAt":  "2025-05-08T18:38:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6qtLik",
                                           "createdAt":  "2025-05-08T18:45:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOERZIpQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkotas",
                                                                               "createdAt":  "2025-05-08T21:16:54Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "In that case, this isn\u0027t worth doing. Also we should reconsider shipping AndroidAppBuilder externally if .NET for Android doesn\u0027t use it.",
                                           "updatedAt":  "2025-05-08T18:45:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6qvq64",
                                           "createdAt":  "2025-05-08T22:53:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "Opened https://github.com/dotnet/samples/issues/7045 to track removing the only usages of the various `*AppBuilder` packages and the `Microsoft.NET.Runtime.*.Samples` packages outside of the runtime repo and switching samples to point users at the official tooling.",
                                           "updatedAt":  "2025-05-08T22:58:33Z"
                                       }
                                   ],
                         "totalCount":  11
                     },
        "title":  "[Mobile] Implement CMake export module for CoreCLR on Android and Apple mobile",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/115622",
        "createdAt":  "2025-05-15T17:05:58Z",
        "number":  115622,
        "author":  "am11",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-06-02T20:30:56Z",
        "body":  "On linux-riscv64:\n```sh\n$ ./build.sh --bootstrap\n```\n\nsucceeds. Then the subsequent libs.tests build fails:\n```sh\n$ ./build.sh libs.tests --use-bootstrap\n  Determining projects to restore...\n  Tool \u0027coverlet.console\u0027 (version \u00276.0.4\u0027) was restored. Available commands: coverlet\n  Tool \u0027dotnet-reportgenerator-globaltool\u0027 (version \u00275.4.3\u0027) was restored. Available commands: reportgenerator\n  Tool \u0027microsoft.dotnet.xharness.cli\u0027 (version \u002710.0.0-prerelease.25255.1\u0027) was restored. Available commands: xharness\n  Tool \u0027microsoft.visualstudio.slngen.tool\u0027 (version \u002711.1.0\u0027) was restored. Available commands: slngen\n  \n  Restore was successful.\n  All projects are up-to-date for restore.\n  Determining projects to restore...\n/home/am11/projects/runtime/.dotnet/sdk/10.0.100-preview.5.25255.3/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(188,5): error MSB4018: The \"ResolveAppHosts\" task failed unexpectedly. [/home/am11/projects/runtime/Build.proj]\n/home/am11/projects/runtime/.dotnet/sdk/10.0.100-preview.5.25255.3/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(188,5): error MSB4018: System.IO.DirectoryNotFoundException: Could not find a part of the path \u0027/home/am11/projects/runtime/artifacts/bootstrap/ridgraph/runtime.json\u0027. [/home/am11/projects/runtime/Build.proj]\n/home/am11/projects/runtime/.dotnet/sdk/10.0.100-preview.5.25255.3/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(188,5): error MSB4018:    at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirError) [/home/am11/projects/runtime/Build.proj]\n/home/am11/projects/runtime/.dotnet/sdk/10.0.100-preview.5.25255.3/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(188,5): error MSB4018:    at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, UnixFileMode openPermissions, Int64\u0026 fileLength, UnixFileMode\u0026 filePermissions, Boolean failForSymlink, Boolean\u0026 wasSymlink, Func`4 createOpenException) [/home/am11/projects/runtime/Build.proj]\n/home/am11/projects/runtime/.dotnet/sdk/10.0.100-preview.5.25255.3/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(188,5): error MSB4018:    at System.IO.Strategies.OSFileStreamStrategy..ctor(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode) [/home/am11/projects/runtime/Build.proj]\n/home/am11/projects/runtime/.dotnet/sdk/10.0.100-preview.5.25255.3/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(188,5): error MSB4018:    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, Int64 preallocationSize) [/home/am11/projects/runtime/Build.proj]\n/home/am11/projects/runtime/.dotnet/sdk/10.0.100-preview.5.25255.3/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(188,5): error MSB4018:    at System.IO.File.OpenRead(String path) [/home/am11/projects/runtime/Build.proj]\n/home/am11/projects/runtime/.dotnet/sdk/10.0.100-preview.5.25255.3/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(188,5): error MSB4018:    at NuGet.RuntimeModel.JsonRuntimeFormat.ReadRuntimeGraph(String filePath) [/home/am11/projects/runtime/Build.proj]\n/home/am11/projects/runtime/.dotnet/sdk/10.0.100-preview.5.25255.3/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(188,5): error MSB4018:    at Microsoft.NET.Build.Tasks.RuntimeGraphCache.GetRuntimeGraph(String runtimeJsonPath) [/home/am11/projects/runtime/Build.proj]\n/home/am11/projects/runtime/.dotnet/sdk/10.0.100-preview.5.25255.3/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(188,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolveAppHosts.GetHostItem(String runtimeIdentifier, List`1 knownAppHostPacksForTargetFramework, IDictionary`2 packagesToDownload, String hostNameWithoutExtension, String itemName, Boolean isExecutable, Boolean errorIfNotFound) [/home/am11/projects/runtime/Build.proj]\n/home/am11/projects/runtime/.dotnet/sdk/10.0.100-preview.5.25255.3/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(188,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolveAppHosts.ExecuteCore() [/home/am11/projects/runtime/Build.proj]\n/home/am11/projects/runtime/.dotnet/sdk/10.0.100-preview.5.25255.3/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(188,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() [/home/am11/projects/runtime/Build.proj]\n/home/am11/projects/runtime/.dotnet/sdk/10.0.100-preview.5.25255.3/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(188,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(TaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [/home/am11/projects/runtime/Build.proj]\n  Nothing to do. None of the projects specified contain packages to restore.\n```\n\ncc @jkoritzinsky",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOrsiRfQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6r7jGT",
                                           "createdAt":  "2025-05-15T17:06:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-05-15T17:06:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6uyIvX",
                                           "createdAt":  "2025-06-02T20:30:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-06-02T20:30:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6uyJF9",
                                           "createdAt":  "2025-06-02T20:30:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "I changed the area since @jkoritzinsky self-assigned, but feel free to correct this if I got it wrong.  CC @ViktorHofer ",
                                           "updatedAt":  "2025-06-02T20:30:55Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "bootstrap: libs.tests subsets fails",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/115717",
        "createdAt":  "2025-05-19T09:39:36Z",
        "number":  115717,
        "author":  "kotlarmilos",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-23T07:46:09Z",
        "body":  "## Description\n\nBuild machines run out of disk space without symbol stripping. However, enabling symbol stripping removes debug symbols, which makes the app non-debuggable and breaks adb shell run-as access to internal storage. For test infrastructure, we need both: debuggable builds and stripped binaries.\n\n## Tasks\n - Keep the app debuggable during build\n - Strip debug symbols from native libraries after the build step",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOrEdDkg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6sR0J_",
                                           "createdAt":  "2025-05-19T09:40:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-05-19T09:40:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6sR0OS",
                                           "createdAt":  "2025-05-19T09:40:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-android\u0027: @vitek-karas, @simonrozsival, @steveisok, @akoeplinger\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-05-19T09:40:14Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "[Android] Implement post-build symbol stripping",
        "labels":  [
                       "good first issue",
                       "area-Infrastructure-coreclr",
                       "os-android"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/116531",
        "createdAt":  "2025-06-11T14:17:55Z",
        "number":  116531,
        "author":  "kotlarmilos",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-01T10:15:57Z",
        "body":  "## Description\n\nThe static library coreclr_static.a, which includes all runtime object files for Android, is currently 701,631,922 bytes (~700 MB). This does not affect static linking behavior but significantly impacts package size.\n\nSource code: https://github.com/dotnet/runtime/blob/main/src/coreclr/dlls/mscoree/coreclr/CMakeLists.txt\n\n## Tasks\n - [x] Investigate contents of coreclr_static.a and identify large contributors\n - [ ] Trim unused object files or symbols",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOuvLdQg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6wnDWp",
                                           "createdAt":  "2025-06-11T14:18:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-android\u0027: @vitek-karas, @simonrozsival, @steveisok, @akoeplinger\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-06-11T14:18:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6wnDlz",
                                           "createdAt":  "2025-06-11T14:18:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-06-11T14:18:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6wqhoR",
                                           "createdAt":  "2025-06-11T19:33:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "filipnavara",
                                           "body":  "That sounds like it includes all the debug symbols. Do we have some comparison with MonoVM? Were the MonoVM static libraries stripped?",
                                           "updatedAt":  "2025-06-11T19:33:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6xpsyN",
                                           "createdAt":  "2025-06-17T13:58:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEW6SbA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "filipnavara",
                                                                               "createdAt":  "2025-06-17T14:21:08Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "kotlarmilos",
                                           "body":  "Here is a comparison in bytes with MonoVM from Microsoft.NETCore.App.Runtime[.Mono].android-arm64.10.0.0-preview.6.25316.109:\n```\n579840 runtimes/android-arm64/native/libSystem.Globalization.Native.a\n34880 runtimes/android-arm64/native/libSystem.IO.Compression.Native.a\n833190 runtimes/android-arm64/native/libSystem.Native.a\n2061684 runtimes/android-arm64/native/libSystem.Security.Cryptography.Native.Android.a\n172616 runtimes/android-arm64/native/libbrotlicommon.a\n419584 runtimes/android-arm64/native/libbrotlidec.a\n3960526 runtimes/android-arm64/native/libbrotlienc.a\n701268296 runtimes/android-arm64/native/libcoreclr_static.a\n```\n```\n566528 runtimes/android-arm64/native/libSystem.Globalization.Native.a\n34616 runtimes/android-arm64/native/libSystem.IO.Compression.Native.a\n825846 runtimes/android-arm64/native/libSystem.Native.a\n2057724 runtimes/android-arm64/native/libSystem.Security.Cryptography.Native.Android.a\n171832 runtimes/android-arm64/native/libbrotlicommon.a\n418696 runtimes/android-arm64/native/libbrotlidec.a\n3959934 runtimes/android-arm64/native/libbrotlienc.a\n2142872 runtimes/android-arm64/native/libmono-component-debugger-static.a\n109494 runtimes/android-arm64/native/libmono-component-debugger-stub-static.a\n4221190 runtimes/android-arm64/native/libmono-component-diagnostics_tracing-static.a\n47464 runtimes/android-arm64/native/libmono-component-diagnostics_tracing-stub-static.a\n511248 runtimes/android-arm64/native/libmono-component-hot_reload-static.a\n74826 runtimes/android-arm64/native/libmono-component-hot_reload-stub-static.a\n317602 runtimes/android-arm64/native/libmono-component-marshal-ilgen-static.a\n95534 runtimes/android-arm64/native/libmono-component-marshal-ilgen-stub-static.a\n44559048 runtimes/android-arm64/native/libmonosgen-2.0.a\n```\n\nI tried stripping symbols using `strip -S`, but it didn\u0027t reduce the file size.",
                                           "updatedAt":  "2025-06-17T13:59:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6x3xNU",
                                           "createdAt":  "2025-06-18T13:18:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kotlarmilos",
                                           "body":  "I was using the Apple toolchain, not the Android one. I produced a stripped static library\n```\n26723754 runtimes/android-arm64/native/libcoreclr_static_stripped.a\n```\nusing the following commands:\n```\ntoolchains/llvm/prebuilt/darwin-x86_64/bin/llvm-ar -x libcoreclr_static.a \n\nfor f in *.o; do\n    /toolchains/llvm/prebuilt/darwin-x86_64/bin/llvm-strip --strip-debug \"$f\"\ndone\n\ntoolchains/llvm/prebuilt/darwin-x86_64/bin/llvm-ar rcs libcoreclr_static_stripped.a *.o\n```",
                                           "updatedAt":  "2025-06-18T13:18:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6x317n",
                                           "createdAt":  "2025-06-18T13:24:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "I would prioritize diagnosability over optimizing package size. If we strip symbols by default, what is the debugging the runtime code going to be like?",
                                           "updatedAt":  "2025-06-18T13:24:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6x4ldA",
                                           "createdAt":  "2025-06-18T14:15:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kotlarmilos",
                                           "body":  "I am thinking to provide symbols as separate file. There are two nuget packages:\n```\nMicrosoft.NETCore.App.Runtime.android-arm64.10.0.0-ci.nupkg\nMicrosoft.NETCore.App.Runtime.android-arm64.10.0.0-ci.symbols.nupkg\n```\n\nCurrently, the `.symbols.nupkg` contains the same content as the base package + debug symbols. I suggest providing stripped library in the base package and the  stripped library + symbols in `symbols.nupkg`.",
                                           "updatedAt":  "2025-06-18T14:15:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6x4mAE",
                                           "createdAt":  "2025-06-18T14:15:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "filipnavara",
                                           "body":  "\u003e I would prioritize diagnosability over optimizing package size. If we strip symbols by default, what is the debugging the runtime code going to be like?\n\nI\u0027m torn on this.\n\nI\u0027d prefer to match what we do for dynamic libraries where the symbols are distributed separately. Unfortunately that may not be a viable option for static libraries, depending on the tooling.\n\nFailing that, I think the safe path is to do what we do for MonoVM, which presumably is doing some kind of stripping?",
                                           "updatedAt":  "2025-06-18T14:15:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6x8X57",
                                           "createdAt":  "2025-06-18T19:02:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEcWTbQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "filipnavara",
                                                                               "createdAt":  "2025-06-18T19:28:09Z"
                                                                           },
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "davidnguyen-tech",
                                                                               "createdAt":  "2025-07-29T15:19:00Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e which presumably is doing some kind of stripping?\n\nIt does not look like it to me by looking at the numbers above. I think the difference is that Mono is written in C and so it does not have symbols bloated by C++ templates.",
                                           "updatedAt":  "2025-06-18T19:02:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6yDXDK",
                                           "createdAt":  "2025-06-19T08:37:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kotlarmilos",
                                           "body":  "\u003e I\u0027d prefer to match what we do for dynamic libraries where the symbols are distributed separately. Unfortunately that may not be a viable option for static libraries, depending on the tooling.\n\nAre you referring to tooling on the user side?\n\nIt seems the unified build doesn’t produce a .symbols.nupkg. If we ship the stripped static library and the debug symbols as separate files in the same .nupkg, what are the benefits?",
                                           "updatedAt":  "2025-06-19T08:37:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6yqjWb",
                                           "createdAt":  "2025-06-23T18:25:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEXsmrA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kotlarmilos",
                                                                               "createdAt":  "2025-06-24T09:00:48Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e It seems the unified build doesn’t produce a .symbols.nupkg\n\nIt does. You can find them here:\n\n![Image](https://github.com/user-attachments/assets/9f25def8-d2a5-44bf-9099-e74764f8df4a)\n\nSpeaking just for managed packages and symbols, they don\u0027t belong into the main package. They should be put into the .symbols package. That\u0027s usually handled by NuGet Pack but obviously this is different for native code packaging and shared framework packaging.",
                                           "updatedAt":  "2025-06-23T18:25:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6zEUOz",
                                           "createdAt":  "2025-06-25T10:25:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kotlarmilos",
                                           "body":  "I tried to strip debug symbols using `llvm-strip --strip-debug` on object files extracted from `libcoreclr_static.a`, but linking `singlefilehost` then fails due to undefined symbols.\n\nOne option is to disable building singlefilehost for Android. A good side is that static libraries are stripped during app linking and are not shipped to end users anyway.\n\nHere is the linker error output:\n```\n  [ 97%] Linking CXX executable singlefilehost\n  ld.lld: error: undefined symbol: GetCurrentProcessCpuCount()\n  \u003e\u003e\u003e referenced by debugger.cpp.o:(DataTest::DataTest()) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced by gcenv.ee.cpp.o:(GCToEEInterface::GetCurrentProcessCpuCount()) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced by ceemain.cpp.o:(EEStartupHelper()) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced 17 more times\n  \n  ld.lld: error: undefined symbol: GetOsPageSize()\n  \u003e\u003e\u003e referenced by fptrstubs.cpp.o:(SHash\u003cFuncPtrStubs::PrecodeTraits\u003e::Lookup(Precode**, unsigned int, FuncPtrStubs::PrecodeKey) const) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced by fptrstubs.cpp.o:(SHash\u003cFuncPtrStubs::PrecodeTraits\u003e::Add_GrowthChecked(Precode* const\u0026)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced by fptrstubs.cpp.o:(SHash\u003cFuncPtrStubs::PrecodeTraits\u003e::ReplaceTable(Precode**, unsigned int)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced 147 more times\n  \n  ld.lld: error: undefined symbol: YieldProcessorNormalization::s_yieldsPerNormalizedYield\n  \u003e\u003e\u003e referenced by threadsuspend.cpp.o:(Thread::SetAbortEndTime(unsigned long, int)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced by threadsuspend.cpp.o:(Thread::SetAbortEndTime(unsigned long, int)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced by threadsuspend.cpp.o:(Thread::MarkThreadForAbort(EEPolicy::ThreadAbortTypes)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced 25 more times\n  \n  ld.lld: error: undefined symbol: IsIPInModule(void*, unsigned long)\n  \u003e\u003e\u003e referenced by debugger.cpp.o:(Debugger::HandleIPCEvent(DebuggerIPCEvent*)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \n  ld.lld: error: undefined symbol: g_nClrInstanceId\n  \u003e\u003e\u003e referenced by gctoclreventsink.cpp.o:(GCToCLREventSink::FireDynamicEvent(char const*, void*, unsigned int)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced by gctoclreventsink.cpp.o:(GCToCLREventSink::FireDynamicEvent(char const*, void*, unsigned int)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced by gctoclreventsink.cpp.o:(GCToCLREventSink::FireGCGenerationRange(unsigned char, void*, unsigned long, unsigned long)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced 315 more times\n  \n  ld.lld: error: undefined symbol: __FreeBuildAssertFail\n  \u003e\u003e\u003e referenced by writebarriermanager.cpp.o:(WriteBarrierManager::Initialize()) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced by writebarriermanager.cpp.o:(WriteBarrierManager::Initialize()) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced by writebarriermanager.cpp.o:(WriteBarrierManager::Initialize()) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced 14 more times\n  \n  ld.lld: error: undefined symbol: InitializeCGroup()\n  \u003e\u003e\u003e referenced by gcenv.unix.cpp.o:(GCToOSInterface::Initialize()) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \n  ld.lld: error: undefined symbol: GetRestrictedPhysicalMemoryLimit()\n  \u003e\u003e\u003e referenced by gcenv.unix.cpp.o:(GCToOSInterface::GetPhysicalMemoryLimit(bool*)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \n  ld.lld: error: undefined symbol: GetPhysicalMemoryUsed(unsigned long*)\n  \u003e\u003e\u003e referenced by gcenv.unix.cpp.o:(GCToOSInterface::GetMemoryStatus(unsigned long, unsigned int*, unsigned long*, unsigned long*)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \n  ld.lld: error: undefined symbol: noWayAssertBodyConditional()\n  \u003e\u003e\u003e referenced by fgflow.cpp.o:(FlowEdge* Compiler::fgAddRefPred\u003cfalse\u003e(BasicBlock*, BasicBlock*, FlowEdge*)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced by fgflow.cpp.o:(FlowEdge* Compiler::fgAddRefPred\u003ctrue\u003e(BasicBlock*, BasicBlock*, FlowEdge*)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced by importer.cpp.o:(Compiler::impNormStructType(CORINFO_CLASS_STRUCT_*, CorInfoType*)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced 1036 more times\n  \n  ld.lld: error: undefined symbol: noWayAssertBody()\n  \u003e\u003e\u003e referenced by utils.cpp:0 (/Users/miloskotlar/dotnet/runtime-android/src/coreclr/jit/utils.cpp:0)\n  \u003e\u003e\u003e               utils.cpp.o:(CheckedOps::CastFromIntOverflows(int, var_types, bool)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced by utils.cpp:0 (/Users/miloskotlar/dotnet/runtime-android/src/coreclr/jit/utils.cpp:0)\n  \u003e\u003e\u003e               utils.cpp.o:(CheckedOps::CastFromLongOverflows(long, var_types, bool)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced by utils.cpp:4209 (/Users/miloskotlar/dotnet/runtime-android/src/coreclr/jit/utils.cpp:4209)\n  \u003e\u003e\u003e               utils.cpp.o:(CheckedOps::CastFromFloatOverflows(float, var_types)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced 337 more times\n  \n  ld.lld: error: undefined symbol: badCode()\n  \u003e\u003e\u003e referenced by importer.cpp.o:(Compiler::impPushOnStack(GenTree*, typeInfo)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced by importer.cpp.o:(Compiler::impPopStack()) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced by importer.cpp.o:(Compiler::impStackTop(unsigned int)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced 36 more times\n  \n  ld.lld: error: undefined symbol: NOMEM()\n  \u003e\u003e\u003e referenced by gentree.cpp.o:(GenTreeCall::AddGDVCandidateInfo(Compiler*, InlineCandidateInfo*)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced by gentree.cpp.o:(GenTreeVisitor\u003cCompiler::gtSplitTree(BasicBlock*, Statement*, GenTree*, Statement**, GenTree***, bool)::Splitter\u003e::WalkTree(GenTree**, GenTree*)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced by gentree.cpp.o:(GenTreeMultiOp::ResetOperandArray(unsigned long, Compiler*, GenTree**, unsigned long)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced 92 more times\n  \n  ld.lld: error: undefined symbol: noWay()\n  \u003e\u003e\u003e referenced by flowgraph.cpp.o:(Compiler::fgCreateGCPoll(Compiler::GCPollType, BasicBlock*)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced by gentree.cpp.o:(Compiler::gtSetEvalOrder(GenTree*)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced by importercalls.cpp.o:(Compiler::impImportCall(opcode_t, CORINFO_RESOLVED_TOKEN*, CORINFO_RESOLVED_TOKEN*, GenTree*, int, CORINFO_CALL_INFO*, unsigned int)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced 26 more times\n  \n  ld.lld: error: undefined symbol: implLimitation()\n  \u003e\u003e\u003e referenced by importercalls.cpp.o:(Compiler::impImportCall(opcode_t, CORINFO_RESOLVED_TOKEN*, CORINFO_RESOLVED_TOKEN*, GenTree*, int, CORINFO_CALL_INFO*, unsigned int)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced by flowgraph.cpp.o:(Compiler::fgAddSyncMethodEnterExit()) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced by importercalls.cpp.o:(Compiler::impPopArgsForSwiftCall(GenTreeCall*, CORINFO_SIG_INFO*, GenTree**)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced 14 more times\n  \n  ld.lld: error: undefined symbol: notYetImplemented(char const*, char const*, unsigned int)\n  \u003e\u003e\u003e referenced by morph.cpp.o:(CallArgs::AddFinalArgsAndDetermineABIInfo(Compiler*, GenTreeCall*)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced by lsraarm64.cpp.o:(LinearScan::BuildNode(GenTree*)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced by codegenarmarch.cpp.o:(CodeGen::genCodeForLclFld(GenTreeLclFld*)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced 8 more times\n  \n  ld.lld: error: undefined symbol: ArrayListBase::GetPtr(unsigned int) const\n  \u003e\u003e\u003e referenced by ceemain.cpp.o:(GetThreadUICultureNames(StringArrayList*)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced by ceemain.cpp.o:(GetThreadUICultureNames(StringArrayList*)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced by applicationcontext.cpp.o:(BINDER_SPACE::ApplicationContext::~ApplicationContext()) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced 7 more times\n  \n  ld.lld: error: undefined symbol: __JITfilter(_EXCEPTION_POINTERS*, void*)\n  \u003e\u003e\u003e referenced by compiler.cpp.o:(jitNativeCode(CORINFO_METHOD_STRUCT_*, CORINFO_MODULE_STRUCT_*, ICorJitInfo*, CORINFO_METHOD_INFO*, void**, unsigned int*, JitFlags*, void*)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \u003e\u003e\u003e referenced by compiler.cpp.o:(NativeExceptionHolder\u003cjitNativeCode(CORINFO_METHOD_STRUCT_*, CORINFO_MODULE_STRUCT_*, ICorJitInfo*, CORINFO_METHOD_INFO*, void**, unsigned int*, JitFlags*, void*)::$_2\u003e::InvokeFilter(PAL_SEHException\u0026)) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n  \n  ld.lld: error: undefined symbol: ValidateModuleName(char16_t const*)\n  \u003e\u003e\u003e referenced by codeman.cpp.o:(EEJitManager::LoadJIT()) in archive ../dlls/mscoree/coreclr/libcoreclr_static.a\n\n```\n\nBuild system changes for static libraries:\n```\ndiff --git a/eng/native/functions.cmake b/eng/native/functions.cmake\nindex 05c09a2a6fc..c1796f9f4a7 100644\n--- a/eng/native/functions.cmake\n+++ b/eng/native/functions.cmake\n@@ -422,6 +422,37 @@ function(strip_symbols targetName outputFilename)\n   if (CLR_CMAKE_HOST_UNIX)\n     set(strip_source_file $\u003cTARGET_FILE:${targetName}\u003e)\n \n+     if (CLR_CMAKE_TARGET_ANDROID)\n+      get_target_property(target_type ${targetName} TYPE)\n+      if (target_type STREQUAL \"STATIC_LIBRARY\")\n+        set(NDK_BIN \"${ANDROID_NDK}/toolchains/llvm/prebuilt/darwin-x86_64/bin\")\n+        set(AR \"${NDK_BIN}/llvm-ar\")\n+        set(STRIP \"${NDK_BIN}/llvm-strip\")\n+        if(NOT EXISTS \"${AR}\")\n+          message(FATAL_ERROR \"llvm-ar not found at ${AR}\")\n+        endif()\n+        if(NOT EXISTS \"${STRIP}\")\n+          message(FATAL_ERROR \"llvm-strip not found at ${STRIP}\")\n+        endif()\n+\n+        set(strip_temp_dir \"${CMAKE_CURRENT_BINARY_DIR}/${targetName}_strip_temp\")\n+        file(MAKE_DIRECTORY \"${strip_temp_dir}\")\n+\n+        add_custom_command(\n+          TARGET ${targetName}\n+          POST_BUILD\n+          VERBATIM\n+          COMMAND sh -c \"echo Stripping object files in \u0027${strip_source_file}\u0027\"\n+          COMMAND ${CMAKE_COMMAND} -E rm -rf \"${strip_temp_dir}/*\"\n+          COMMAND ${CMAKE_COMMAND} -E chdir \"${strip_temp_dir}\" \"${AR}\" -x \"${strip_source_file}\"\n+          COMMAND /bin/sh -c \"cd \u0027${strip_temp_dir}\u0027 \u0026\u0026 for f in *.o; do [ -e \\\"\\$f\\\" ] \u0026\u0026 \u0027${STRIP}\u0027 --strip-debug \\\"\\$f\\\"; done\"\n+          COMMAND /bin/sh -c \"cd \u0027${strip_temp_dir}\u0027 \u0026\u0026 [ -n \\\"\\$(ls *.o 2\u003e/dev/null)\\\" ] \u0026\u0026 \u0027${AR}\u0027 rcs \u0027${strip_source_file}\u0027 *.o\"\n+          COMMAND ${CMAKE_COMMAND} -E rm -rf \"${strip_temp_dir}\"\n+        )\n+        return()\n+      endif()\n+    endif()\n+\n     if (CLR_CMAKE_TARGET_APPLE)\n```\n\n\u003e Failing that, I think the safe path is to do what we do for MonoVM, which presumably is doing some kind of stripping?\n\nAccording to the `strip_symbols` function static libraries aren\u0027t stripped in MonoVM. How big of a challenge would it be to ship static libraries unstripped in terms of their size?",
                                           "updatedAt":  "2025-06-25T10:26:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6zEXzt",
                                           "createdAt":  "2025-06-25T10:30:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "filipnavara",
                                           "body":  "\u003e How big of a challenge would it be to ship static libraries unstripped in terms of their size?\n\nI think that\u0027s more of an infrastructure issue on Microsoft side. I think the linker shipped with Android SDK can handle quite large files so I don\u0027t have too many worries about the consumption side.\n\nDo we know how well does it compress? The packages update roughly once a month as part of servicing and we have a lot of build machines that have to download them. It\u0027s not necessarily big amount of data for us but it may add up on the infrastructure side which serves them. Just sayin\u0027.\n\n(Not sure what are the size consequences for the debug symbols of the linked apps. We upload them to Sentry and that may turn out to be a bottleneck.)",
                                           "updatedAt":  "2025-06-25T10:31:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6zFdou",
                                           "createdAt":  "2025-06-25T12:14:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e linking singlefilehost then fails due to undefined symbols.\n\nI expect that the app static linking would fail with the exact same build errors.",
                                           "updatedAt":  "2025-06-25T12:14:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6zQhWf",
                                           "createdAt":  "2025-06-26T07:21:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kotlarmilos",
                                           "body":  "\u003e Do we know how well does it compress?\n\nAbout 4x (821 MB vs 186,2 MB).\n\n\u003e \u003e linking singlefilehost then fails due to undefined symbols.\n\u003e \n\u003e I expect that the app static linking would fail with the exact same build errors.\n\nFrom what I can tell, static linking doesn’t strip symbols in the runtime tests: https://github.com/dotnet/runtime/blob/main/src/tasks/AndroidAppBuilder/Templates/CMakeLists-android.txt.\n@grendello Does the dotnet/android build system strip symbols after static linking?",
                                           "updatedAt":  "2025-06-26T07:21:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6zQle2",
                                           "createdAt":  "2025-06-26T07:26:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEcoJqQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kotlarmilos",
                                                                               "createdAt":  "2025-06-26T10:24:43Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "davidnguyen-tech",
                                                                               "createdAt":  "2025-07-31T09:22:44Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "jkotas",
                                           "body":  "I meant that the static linking of the app would fail the same way if it used `libcoreclr_static.a` with stripped symbols as input.",
                                           "updatedAt":  "2025-06-26T07:26:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6zQ4rF",
                                           "createdAt":  "2025-06-26T07:54:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "grendello",
                                           "body":  "@kotlarmilos yep, the symbols are extracted to a separate .so by default. You can tell the build system to leave them alone or strip and discard, instead of saving.",
                                           "updatedAt":  "2025-06-26T07:54:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6zS38q",
                                           "createdAt":  "2025-06-26T10:55:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kotlarmilos",
                                           "body":  "@akoeplinger @ViktorHofer We can\u0027t strip static libraries at shipping time since they are linked afterward. The only option is to experiment with compressed debug data options, but it\u0027s unclear what improvements that would bring. How big of a challenge is it for infrastructure to ship static libraries unstripped, in terms of their size (as they are now)? Can we live with the current size of the runtime packs?",
                                           "updatedAt":  "2025-06-26T10:56:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6zTlVa",
                                           "createdAt":  "2025-06-26T12:06:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "I don\u0027t see so much an issue with that if we move the symbols into the symbols package.",
                                           "updatedAt":  "2025-06-26T12:06:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6zUyQN",
                                           "createdAt":  "2025-06-26T13:48:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kotlarmilos",
                                           "body":  "The problem is that we can\u0027t easily strip symbols from static libraries, as they are used during linking. We don\u0027t have this problem with dynamic libraries since they are loaded at runtime.\n\n\u003e I tried to strip debug symbols using llvm-strip --strip-debug on object files extracted from libcoreclr_static.a, but linking singlefilehost then fails due to undefined symbols.",
                                           "updatedAt":  "2025-06-26T13:48:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6zU0Ab",
                                           "createdAt":  "2025-06-26T13:51:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEYDa9g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kotlarmilos",
                                                                               "createdAt":  "2025-06-26T14:02:49Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Oh I see. They are embedded.",
                                           "updatedAt":  "2025-06-26T13:51:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6zVMgh",
                                           "createdAt":  "2025-06-26T14:22:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e Can we live with the current size of the runtime packs?\n\nHow far are we from hitting nuget limits on maximum package size? Or are we over that limit?\n\n\u003e The only option is to experiment with compressed debug data options\n\nYou can also look at where the bloat is coming from. I expect that it is going to be some C++ templates. Once we identify the heavy hitters. it should be possible to replace them with something more compact.",
                                           "updatedAt":  "2025-06-26T14:22:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6zWbIO",
                                           "createdAt":  "2025-06-26T16:04:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e How far are we from hitting nuget limits on maximum package size? Or are we over that limit?\n\nAzure artifacts has a package size limit of 500MB and nuget.org has 250MB.",
                                           "updatedAt":  "2025-06-26T16:04:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6zkMsj",
                                           "createdAt":  "2025-06-27T11:01:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEYMuaQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "filipnavara",
                                                                               "createdAt":  "2025-06-27T11:32:49Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "I\u0027d rather avoid having the 180MB nuget if we can, even if it will technically \"work\". As soon as you\u0027ll include it in a workload it will be wrapped inside of an .msi too and that just causes installs and updates to take even longer and uncompressing those 700MB will cause Defender activity etc.\n\nhttps://www.amyspark.me/blog/posts/2024/01/10/stripping-rust-libraries.html#linux-based-platforms says there\u0027s a way to do the stripping that preserves being able to link.",
                                           "updatedAt":  "2025-06-27T11:01:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6zkVt2",
                                           "createdAt":  "2025-06-27T11:16:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "grendello",
                                           "body":  "It doesn\u0027t have to live in the same nuget as the standard, dynamic, runtime. I suppose it\u0027s possible to reference an additional nuget when static linking of the runtime is enabled?\n@akoeplinger I\u0027d rather avoid stripping anything from the .a file, because we might want to take advantage of e.g. LTO information there or CFG, and anything the linker might find useful that we can\u0027t think of.",
                                           "updatedAt":  "2025-06-27T11:16:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc60Ba66",
                                           "createdAt":  "2025-06-30T18:26:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kotlarmilos",
                                           "body":  "\u003e You can also look at where the bloat is coming from. I expect that it is going to be some C++ templates. Once we identify the heavy hitters. it should be possible to replace them with something more compact.\n\nAnalysis of `libcoreclr_static.a` shows that the largest object file is `gcwks.cpp.o`, with a size of 5.4 MB. For reference, size distribution is presented below. Command: `llvm-ar -x libcoreclr_static.a`\n\n\u003cimg width=\"1492\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f0c1ab2e-76b9-406b-9364-8ff0ccbcdb81\" /\u003e\n\nObject dump indicates that debug information consumes nearly half the total size. Command: `objdump -h gcwks.cpp.o`\n```\nIdx Name                                                                                                            Size     VMA              Type\n1770 .debug_loc                                          000996da 0000000000000000 DEBUG\n1771 .rela.debug_loc                                     00036378 0000000000000000 \n1772 .debug_abbrev                                       000012ac 0000000000000000 DEBUG\n1773 .debug_info                                         000c32c9 0000000000000000 DEBUG\n1774 .rela.debug_info                                    00150378 0000000000000000 \n1775 .debug_ranges                                       0002d630 0000000000000000 DEBUG\n1776 .rela.debug_ranges                                  00064c20 0000000000000000 \n1777 .debug_str                                          000d1469 0000000000000000 DEBUG\n1778 .group                                              0000000c 0000000000000000 \n1779 .data.DW.ref.__gxx_personality_v0                   00000008 0000000000000000 DATA\n1780 .rela.data.DW.ref.__gxx_personality_v0              00000018 0000000000000000 \n1781 .comment                                            000000b9 0000000000000000 \n1782 .note.GNU-stack                                     00000000 0000000000000000 \n1783 .eh_frame                                           00006e90 0000000000000000 DATA\n1784 .rela.eh_frame                                      000046b0 0000000000000000 \n1785 .debug_line                                         000357f1 0000000000000000 DEBUG\n1786 .rela.debug_line                                    00004608 0000000000000000 \n1787 .symtab                                             00013848 0000000000000000 \n```\n\nThe largest contributors to size are variable location info and strings:\n```\n.debug_str: 857193 bytes\n.debug_info: 799433 bytes\n.debug_loc: 628442 bytes\n```\n\nDwarf dump provides size estimates for various categories. Command:  `llvm-dwarfdump --statistics gcwks.cpp.o`\n```\n{\n  \"version\": 9,\n  \"file\": \"gcwks.cpp.o\",\n  \"format\": \"elf64-littleaarch64\",\n  \"#functions\": 1371,\n  \"#functions with location\": 1319,\n  \"#inlined functions\": 7841,\n  \"#inlined functions with abstract origins\": 7841,\n  \"#unique source variables\": 6038,\n  \"#source variables\": 21022,\n  \"#source variables with location\": 15356,\n  \"#call site entries\": 7841,\n  \"#call site DIEs\": 821,\n  \"#call site parameter DIEs\": 1257,\n  \"sum_all_variables(#bytes in parent scope)\": 3459340,\n  \"sum_all_variables(#bytes in any scope covered by DW_AT_location)\": 1964060,\n  \"sum_all_variables(#bytes in parent scope covered by DW_AT_location)\": 1905496,\n  \"sum_all_variables(#bytes in parent scope covered by DW_OP_entry_value)\": 42644,\n  \"sum_all_params(#bytes in parent scope)\": 862388,\n  \"sum_all_params(#bytes in parent scope covered by DW_AT_location)\": 673704,\n  \"sum_all_params(#bytes in parent scope covered by DW_OP_entry_value)\": 42644,\n  \"sum_all_local_vars(#bytes in parent scope)\": 2596952,\n  \"sum_all_local_vars(#bytes in parent scope covered by DW_AT_location)\": 1231792,\n  \"sum_all_local_vars(#bytes in parent scope covered by DW_OP_entry_value)\": 0,\n  \"#bytes within functions\": 241412,\n  \"#bytes within inlined functions\": 126636,\n  \"#params\": 6792,\n  \"#params with source location\": 6791,\n  \"#params with type\": 6792,\n  \"#params with binary location\": 6738,\n  \"#local vars\": 6495,\n  \"#local vars with source location\": 6495,\n  \"#local vars with type\": 6495,\n  \"#local vars with binary location\": 5986,\n  \"#bytes in .debug_loc\": 628442,\n  \"#bytes in .debug_abbrev\": 4780,\n  \"#bytes in .debug_info\": 799433,\n  \"#bytes in .debug_ranges\": 185904,\n  \"#bytes in .debug_str\": 857193,\n  \"#bytes in .debug_line\": 219121,\n  \"#variables processed by location statistics\": 19396,\n  \"#variables with 0% of parent scope covered by DW_AT_location\": 4768,\n  \"#variables with (0%,10%) of parent scope covered by DW_AT_location\": 595,\n  \"#variables with [10%,20%) of parent scope covered by DW_AT_location\": 705,\n  \"#variables with [20%,30%) of parent scope covered by DW_AT_location\": 677,\n  \"#variables with [30%,40%) of parent scope covered by DW_AT_location\": 1192,\n  \"#variables with [40%,50%) of parent scope covered by DW_AT_location\": 558,\n  \"#variables with [50%,60%) of parent scope covered by DW_AT_location\": 1104,\n  \"#variables with [60%,70%) of parent scope covered by DW_AT_location\": 713,\n  \"#variables with [70%,80%) of parent scope covered by DW_AT_location\": 689,\n  \"#variables with [80%,90%) of parent scope covered by DW_AT_location\": 859,\n  \"#variables with [90%,100%) of parent scope covered by DW_AT_location\": 993,\n  \"#variables with 100% of parent scope covered by DW_AT_location\": 6543,\n  \"#variables - entry values with 0% of parent scope covered by DW_AT_location\": 429,\n  \"#variables - entry values with (0%,10%) of parent scope covered by DW_AT_location\": 608,\n  \"#variables - entry values with [10%,20%) of parent scope covered by DW_AT_location\": 720,\n  \"#variables - entry values with [20%,30%) of parent scope covered by DW_AT_location\": 698,\n  \"#variables - entry values with [30%,40%) of parent scope covered by DW_AT_location\": 1208,\n  \"#variables - entry values with [40%,50%) of parent scope covered by DW_AT_location\": 577,\n  \"#variables - entry values with [50%,60%) of parent scope covered by DW_AT_location\": 1150,\n  \"#variables - entry values with [60%,70%) of parent scope covered by DW_AT_location\": 746,\n  \"#variables - entry values with [70%,80%) of parent scope covered by DW_AT_location\": 718,\n  \"#variables - entry values with [80%,90%) of parent scope covered by DW_AT_location\": 911,\n  \"#variables - entry values with [90%,100%) of parent scope covered by DW_AT_location\": 1175,\n  \"#variables - entry values with 100% of parent scope covered by DW_AT_location\": 6116,\n  \"#params processed by location statistics\": 12134,\n  \"#params with 0% of parent scope covered by DW_AT_location\": 3048,\n  \"#params with (0%,10%) of parent scope covered by DW_AT_location\": 87,\n  \"#params with [10%,20%) of parent scope covered by DW_AT_location\": 152,\n  \"#params with [20%,30%) of parent scope covered by DW_AT_location\": 203,\n  \"#params with [30%,40%) of parent scope covered by DW_AT_location\": 806,\n  \"#params with [40%,50%) of parent scope covered by DW_AT_location\": 168,\n  \"#params with [50%,60%) of parent scope covered by DW_AT_location\": 564,\n  \"#params with [60%,70%) of parent scope covered by DW_AT_location\": 323,\n  \"#params with [70%,80%) of parent scope covered by DW_AT_location\": 240,\n  \"#params with [80%,90%) of parent scope covered by DW_AT_location\": 361,\n  \"#params with [90%,100%) of parent scope covered by DW_AT_location\": 384,\n  \"#params with 100% of parent scope covered by DW_AT_location\": 5798,\n  \"#params - entry values with 0% of parent scope covered by DW_AT_location\": 101,\n  \"#params - entry values with (0%,10%) of parent scope covered by DW_AT_location\": 100,\n  \"#params - entry values with [10%,20%) of parent scope covered by DW_AT_location\": 167,\n  \"#params - entry values with [20%,30%) of parent scope covered by DW_AT_location\": 224,\n  \"#params - entry values with [30%,40%) of parent scope covered by DW_AT_location\": 822,\n  \"#params - entry values with [40%,50%) of parent scope covered by DW_AT_location\": 187,\n  \"#params - entry values with [50%,60%) of parent scope covered by DW_AT_location\": 610,\n  \"#params - entry values with [60%,70%) of parent scope covered by DW_AT_location\": 356,\n  \"#params - entry values with [70%,80%) of parent scope covered by DW_AT_location\": 269,\n  \"#params - entry values with [80%,90%) of parent scope covered by DW_AT_location\": 413,\n  \"#params - entry values with [90%,100%) of parent scope covered by DW_AT_location\": 566,\n  \"#params - entry values with 100% of parent scope covered by DW_AT_location\": 5371,\n  \"#local vars processed by location statistics\": 7262,\n  \"#local vars with 0% of parent scope covered by DW_AT_location\": 1720,\n  \"#local vars with (0%,10%) of parent scope covered by DW_AT_location\": 508,\n  \"#local vars with [10%,20%) of parent scope covered by DW_AT_location\": 553,\n  \"#local vars with [20%,30%) of parent scope covered by DW_AT_location\": 474,\n  \"#local vars with [30%,40%) of parent scope covered by DW_AT_location\": 386,\n  \"#local vars with [40%,50%) of parent scope covered by DW_AT_location\": 390,\n  \"#local vars with [50%,60%) of parent scope covered by DW_AT_location\": 540,\n  \"#local vars with [60%,70%) of parent scope covered by DW_AT_location\": 390,\n  \"#local vars with [70%,80%) of parent scope covered by DW_AT_location\": 449,\n  \"#local vars with [80%,90%) of parent scope covered by DW_AT_location\": 498,\n  \"#local vars with [90%,100%) of parent scope covered by DW_AT_location\": 609,\n  \"#local vars with 100% of parent scope covered by DW_AT_location\": 745,\n  \"#local vars - entry values with 0% of parent scope covered by DW_AT_location\": 328,\n  \"#local vars - entry values with (0%,10%) of parent scope covered by DW_AT_location\": 508,\n  \"#local vars - entry values with [10%,20%) of parent scope covered by DW_AT_location\": 553,\n  \"#local vars - entry values with [20%,30%) of parent scope covered by DW_AT_location\": 474,\n  \"#local vars - entry values with [30%,40%) of parent scope covered by DW_AT_location\": 386,\n  \"#local vars - entry values with [40%,50%) of parent scope covered by DW_AT_location\": 390,\n  \"#local vars - entry values with [50%,60%) of parent scope covered by DW_AT_location\": 540,\n  \"#local vars - entry values with [60%,70%) of parent scope covered by DW_AT_location\": 390,\n  \"#local vars - entry values with [70%,80%) of parent scope covered by DW_AT_location\": 449,\n  \"#local vars - entry values with [80%,90%) of parent scope covered by DW_AT_location\": 498,\n  \"#local vars - entry values with [90%,100%) of parent scope covered by DW_AT_location\": 609,\n  \"#local vars - entry values with 100% of parent scope covered by DW_AT_location\": 745\n}\n```\n\nBased on the analysis, these are likely the largest contributors to the object file size:\n - Large debug string table\n - High number of inlined functions `#inlined functions = 7841`\n - Extensive variable location tracking `#source variables = 21,022, #params = 6792, #local vars = 6495`",
                                           "updatedAt":  "2025-06-30T18:26:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc60CHTD",
                                           "createdAt":  "2025-06-30T19:30:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEcd12w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "davidnguyen-tech",
                                                                               "createdAt":  "2025-07-30T10:04:33Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e Analysis of libcoreclr_static.a shows that the largest object file is gcwks.cpp.o, with a size of 5.4 MB\n\nThis makes sense given that gc.cpp is the largest source file in the codebase. \n\nGC is built as a standalone component without much use of modern C++ constructs that tend to produce large object files. I do not think it is representative sample for where the bloat is coming from.\n\nWe should start by looking at how much each of the key directories (GC, VM, JIT, utilcode, debug, ...) contribute to the final libcoreclr_static.a. Exclude the given directory from libcoreclr_static.a build and measure how much the libcoreclr_static.a drops.\n\nI expect that the VM is going to be the main offender. Then the next step should be to analyze a few files from the VM directory (e.g. jitinterface.cpp or methodtablebuilder.cpp).",
                                           "updatedAt":  "2025-06-30T19:31:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc668t1C",
                                           "createdAt":  "2025-07-30T13:58:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidnguyen-tech",
                                           "body":  "Sharing some results from running a custom script.\n\nThese are the top 3 components contributing to the `.a` size.\n\n- `vm` object files ~ 330 MB\n- `jit` object files ~ 150 MB\n- `gc` object files ~ 30 MB\n\n",
                                           "updatedAt":  "2025-07-30T14:34:11Z"
                                       }
                                   ],
                         "totalCount":  28
                     },
        "title":  "[Android] Investigate and reduce `coreclr_static.a` size",
        "labels":  [
                       "area-Infrastructure-coreclr",
                       "os-android"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/116864",
        "createdAt":  "2025-06-20T15:01:22Z",
        "number":  116864,
        "author":  "ManickaP",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-25T22:55:30Z",
        "body":  "I used to be able to debug runtime libraries in VSCode based on this https://github.com/dotnet/runtime/blob/main/docs/workflow/debugging/libraries/debugging-vscode.md\n\nI\u0027ve tried clean build, update VSCode, with OmniSharp / C# DevKit, attaching to a running process... All of them fail with this error:\n```\n12648:  binding file /home/manicka/repositories/runtime.2/artifacts/bin/testhost/net10.0-linux-Debug-x64/shared/Microsoft.NETCore.App/10.0.0/libcoreclr.so [0] to /home/manicka/repositories/runtime.2/artifacts/bin/testhost/net10.0-linux-Debug-x64/shared/Microsoft.NETCore.App/10.0.0/libcoreclr.so [0]: normal symbol `DllMain\u0027\n     12648:  symbol=PAL_RegisterModule;  lookup in file=/home/manicka/repositories/runtime.2/artifacts/bin/testhost/net10.0-linux-Debug-x64/shared/Microsoft.NETCore.App/10.0.0/libcoreclr.so [0]\n     12648:  symbol=PAL_RegisterModule;  lookup in file=/usr/lib/libgcc_s.so.1 [0]\n     12648:  symbol=PAL_RegisterModule;  lookup in file=/usr/lib/libstdc++.so.6 [0]\n     12648:  symbol=PAL_RegisterModule;  lookup in file=/usr/lib/libm.so.6 [0]\n     12648:  symbol=PAL_RegisterModule;  lookup in file=/usr/lib/libc.so.6 [0]\n     12648:  symbol=PAL_RegisterModule;  lookup in file=/lib64/ld-linux-x86-64.so.2 [0]\n     12648:  /home/manicka/repositories/runtime.2/artifacts/bin/testhost/net10.0-linux-Debug-x64/shared/Microsoft.NETCore.App/10.0.0/libcoreclr.so: error: symbol lookup error: undefined symbol: PAL_RegisterModule (fatal)\nUnable to attach to CoreCLR. Failed to load the .NET Debugging Services. See https://aka.ms/VSCode-DotNet-LoadDebugServicesError for help troubleshooting.\nThe program \u0027[12648] dotnet\u0027 has exited with code -1 (0xffffffff).\n```\n\nThis is affecting my inner-loop, as VSCode is the only option for Linux development.\n\nNote that I can debug other .NET 10 projects in VSCode without an issue.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOuN0m9w==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6yVZGb",
                                           "createdAt":  "2025-06-20T15:02:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-06-20T15:02:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6yV4Ml",
                                           "createdAt":  "2025-06-20T15:34:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Which SDK version are you using in your global.json / what\u0027s the HEAD commit?",
                                           "updatedAt":  "2025-06-20T15:39:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6yWD62",
                                           "createdAt":  "2025-06-20T15:54:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ManickaP",
                                           "body":  "`10.0.100-preview.6.25302.104`\n\ncommit 5ebfca2bb9b9c33e4a6e4db0ed2d11591f70d2b6 (upstream/main, upstream/HEAD, main)\nAuthor: Jan Vorlicek \u003cjanvorli@microsoft.com\u003e\nDate:   Fri Jun 20 13:14:10 2025 +0200\n\nI do have some changes in HTTP library on top of that.",
                                           "updatedAt":  "2025-06-20T15:56:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6yWLVY",
                                           "createdAt":  "2025-06-20T16:08:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEXah2g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "ManickaP",
                                                                               "createdAt":  "2025-06-20T16:30:43Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Yes, this uses an unsigned SDK build which causes issues when debugging in vscode. https://github.com/dotnet/runtime/pull/116782 brings a signed one in that might fix this. You can either wait for that to get merged and then try your workflow again or test with those changes locally.",
                                           "updatedAt":  "2025-06-20T16:08:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6yWXOd",
                                           "createdAt":  "2025-06-20T16:31:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ManickaP",
                                           "body":  "Thank you! I\u0027ll try it out when it gets merged. I\u0027m gonna close this for now. I\u0027ll re-open if the linked PR doesn\u0027t fix it.",
                                           "updatedAt":  "2025-06-20T16:31:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc63JO6D",
                                           "createdAt":  "2025-07-15T08:27:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ManickaP",
                                           "body":  "Re-tested today (15.7.2025) still doesn\u0027t work, re-opening.",
                                           "updatedAt":  "2025-07-15T08:27:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc63kw5s",
                                           "createdAt":  "2025-07-16T18:44:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-07-16T18:44:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc63kzVM",
                                           "createdAt":  "2025-07-16T18:46:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "I\u0027m guessing we\u0027re still on an unsigned SDK.  Based on what I see here: \nhttps://github.com/dotnet/runtime/blob/05e00fc911c01de2a3f85e4e2b4d37f8c75dfdc8/global.json#L3\n\nSince Preview7 hasn\u0027t shipped to customers.\n\n@ManickaP -- maybe try manually changing these version to https://dotnet.microsoft.com/en-us/download/dotnet/10.0 to see if that helps?  Tagging @hoyosjs for confirmation.",
                                           "updatedAt":  "2025-07-16T18:46:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc63mFE7",
                                           "createdAt":  "2025-07-16T20:08:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEbE8xQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ManickaP",
                                                                               "createdAt":  "2025-07-17T06:38:53Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Yoticc",
                                                                               "createdAt":  "2025-07-18T10:39:47Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "This has nothing to do with signing - this is Linux. This is a missing symbol",
                                           "updatedAt":  "2025-07-16T20:08:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc64p15d",
                                           "createdAt":  "2025-07-21T18:44:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "@ManickaP - I am not able to repro this nonetheless. I can debug console apps just fine. I\u0027ll try to see if I can repro with the markdown instructions. That being said - can you please run \n\n`ldd -r -d /home/manicka/repositories/runtime.2/artifacts/bin/testhost/net10.0-linux-Debug-x64/shared/Microsoft.NETCore.App/10.0.0/libcoreclr.so` ",
                                           "updatedAt":  "2025-07-21T18:44:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc643Sb3",
                                           "createdAt":  "2025-07-22T07:51:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ManickaP",
                                           "body":  "```\nldd -r -d /home/manicka/repositories/runtime/artifacts/bin/testhost/net10.0-linux-Debug-x64/shared/Microsoft.NETCore.App/10.0.0/libcoreclr.so\n        linux-vdso.so.1 (0x00007fa6ed23b000)\n        libgcc_s.so.1 =\u003e /usr/lib/libgcc_s.so.1 (0x00007fa6ed1d6000)\n        libstdc++.so.6 =\u003e /usr/lib/libstdc++.so.6 (0x00007fa6ec600000)\n        libm.so.6 =\u003e /usr/lib/libm.so.6 (0x00007fa6ec908000)\n        libc.so.6 =\u003e /usr/lib/libc.so.6 (0x00007fa6ec410000)\n        /usr/lib64/ld-linux-x86-64.so.2 (0x00007fa6ed23d000)\n```\nDoesn\u0027t look broken to me.\n\n\u003e I can debug console apps just fine. \n\nNote that I wrote that debugging works for other console app, just not for dotnet/runtime:\n\n\u003e Note that I can debug other .NET 10 projects in VSCode without an issue.\n\nI retested, and I still can debug standalone console app, but not a runtime test project.",
                                           "updatedAt":  "2025-07-22T07:51:45Z"
                                       }
                                   ],
                         "totalCount":  11
                     },
        "title":  "Unable to Debug in VSCode",
        "labels":  [
                       "area-Infrastructure-coreclr",
                       "dev-innerloop"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/116997",
        "createdAt":  "2025-06-24T23:59:05Z",
        "number":  116997,
        "author":  "tstellar",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-10T17:06:52Z",
        "body":  "### Description\n\nHere is the build error:\n```\n             In file included from \u003cbuilt-in\u003e:1:\n             In file included from /builddir/build/BUILD/dotnet-8.0.17/src/runtime/artifacts/source-build/self/src/artifacts/obj/coreclr/linux.x64.Release/debug/di/CMakeFiles/cordbdi.dir/cmake_pch.hxx:5:\n             In file included from /builddir/build/BUILD/dotnet-8.0.17/src/runtime/artifacts/source-build/self/src/src/coreclr/debug/di/stdafx.h:30:\n             /builddir/build/BUILD/dotnet-8.0.17/src/runtime/artifacts/source-build/self/src/src/coreclr/debug/di/rspriv.h:6357:36: error: in-class initializer for static data member is not a constant expression\n              6357 |     static const CorDebugUserState kInvalidUserState = CorDebugUserState(-1);\n                   |                                    ^                   ~~~~~~~~~~~~~~~~~~~~~\n             /builddir/build/BUILD/dotnet-8.0.17/src/runtime/artifacts/source-build/self/src/src/coreclr/debug/di/rspriv.h:6357:56: note: integer value -1 is outside the valid range of values [0, 511] for the enumeration type \u0027CorDebugUserState\u0027\n              6357 |     static const CorDebugUserState kInvalidUserState = CorDebugUserState(-1);\n                   |                                                        ^\n             1 error generated.\n             make[2]: *** [debug/di/CMakeFiles/cordbdi.dir/build.make:77: debug/di/CMakeFiles/cordbdi.dir/cmake_pch.hxx.pch] Error 1\n             make[2]: Leaving directory \u0027/builddir/build/BUILD/dotnet-8.0.17/src/runtime/artifacts/source-build/self/src/artifacts/obj/coreclr/linux.x64.Release\u0027\n             make[1]: *** [CMakeFiles/Makefile2:4477: debug/di/CMakeFiles/cordbdi.dir/all] Error 2\n             make[1]: *** Waiting for unfinished jobs....\n```\n\n### Reproduction Steps\n\nOn a Fedora system or container, you can install a snapshot of clang that will demonstrate the error:\n\n```\ndnf copr enable @fedora-llvm-team/llvm-snapshots-big-merge-20250622\ndnf install clang\n```\n\n### Expected behavior\n\nThe runtime should compile successfully.\n\n### Actual behavior\n\nThe build fails with the above error message.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOw0CCfA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6zJrqs",
                                           "createdAt":  "2025-06-25T17:52:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-06-25T17:52:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7DQIJ8",
                                           "createdAt":  "2025-09-10T17:06:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "omajid",
                                           "body":  "This is now preventing us from building .NET 8 on Fedora.",
                                           "updatedAt":  "2025-09-10T17:06:52Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Compilation fails with latest clang from git  (https://github.com/llvm/llvm-project/commit/f280d3b705de7f)",
        "labels":  [
                       "area-Infrastructure-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/117528",
        "createdAt":  "2025-07-11T00:35:37Z",
        "number":  117528,
        "author":  "CarnaViire",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T03:03:59Z",
        "body":  "## Build Information\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=1091177\u0026view=logs\u0026j=c0686322-d91a-543b-408d-47a5e75cb762\nBuild error leg or test failing: Build / browser-wasm windows Debug AllSubsets_CoreCLR / Build product\nPull request: https://github.com/dotnet/runtime/pull/117507\n\n```\n  [87/133] Linking C static library _deps\\fetchzlibng-build\\libz.a\n  FAILED: _deps/fetchzlibng-build/libz.a \n...\n  ninja: build stopped: subcommand failed.\n  Failed to generate native component build project!\n```\n\n\u003c!-- Error message template  --\u003e\n## Error Message\n\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssueJsonStepByStep.md).\n\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\n\n```json\n{\n  \"ErrorMessage\": \"\",\n  \"ErrorPattern\": \"FAILED:.*libz.a\",\n  \"BuildRetry\": false,\n  \"ExcludeConsoleLog\": false\n}\n```\n\n\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=1091177\r\n**Error message validated:** `[FAILED:.*libz.a`]\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 7/11/2025 12:35:59 AM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|0|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOtpEZ-Q==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc62YH3b",
                                           "createdAt":  "2025-07-11T00:47:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-07-11T00:47:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc62kRn5",
                                           "createdAt":  "2025-07-11T16:35:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-07-11T16:35:27Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "fetchzlibng-build failed in browser-wasm windows Debug AllSubsets_CoreCLR / Build product",
        "labels":  [
                       "arch-wasm",
                       "area-Infrastructure-coreclr",
                       "Known Build Error",
                       "os-browser"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/118223",
        "createdAt":  "2025-07-31T00:27:29Z",
        "number":  118223,
        "author":  "AndyAyersMS",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODObpJA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "MitchRazga",
                                            "createdAt":  "2025-09-04T15:08:18Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-08-03T14:14:22Z",
        "body":  "We should find an alternative\n\nhttps://github.com/dotnet/runtime/blob/ac764af3e2d77aa582dff3511295ee701b831a7d/src/coreclr/build-runtime.cmd#L276\n\nhttps://learn.microsoft.com/en-us/windows/win32/wmisdk/wmic",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOu6mOxw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc67DwvU",
                                           "createdAt":  "2025-07-31T02:01:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-07-31T02:01:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc67SNll",
                                           "createdAt":  "2025-08-01T04:16:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "This was introduced by https://github.com/dotnet/runtime/commit/ac172ef854429dd68b4aa30e8020827cbf2630cf . \n\nIs this workaround for a buggy parallelism still needed?",
                                           "updatedAt":  "2025-08-01T04:16:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc67qY7H",
                                           "createdAt":  "2025-08-03T14:14:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "teo-tsirpanis",
                                           "body":  "Maybe that commit can just be reverted; I think the built-in parallelization facilities of MSBuild and MSVC have improved since then.",
                                           "updatedAt":  "2025-08-03T14:14:22Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "wmic deprecated/missing on newer builds of windows",
        "labels":  [
                       "area-Infrastructure-coreclr",
                       "untriaged"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/118661",
        "createdAt":  "2025-08-13T01:32:58Z",
        "number":  118661,
        "author":  "SakeTao",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-13T07:07:06Z",
        "body":  "**Failed in:** [runtime-coreclr libraries-jitstress 20250812.1](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=1120162)\n\n**Failed tests:**\n```\nnet10.0-linux-Release-x64-jitstress2_tiered-AzureLinux.3.Amd64.Open\n    - Microsoft.Extensions.Hosting.Tests.HostTests.CreateDefaultBuilder_SecretsDoesReload\n```\n\n**Error message:**\n```\nSystem.IO.IOException : No space left on device : \u0027/home/helixbot/.microsoft\u0027\n```\n\n**Stack trace:**\n```\n   at System.IO.FileSystem.CreateParentsAndDirectory(String fullPath, UnixFileMode unixCreateMode) in /_/src/libraries/System.Private.CoreLib/src/System/IO/FileSystem.Unix.cs:line 321\n   at System.IO.FileSystem.CreateDirectory(String fullPath, UnixFileMode unixCreateMode) in /_/src/libraries/System.Private.CoreLib/src/System/IO/FileSystem.Unix.cs:line 309\n   at System.IO.Directory.CreateDirectory(String path) in /_/src/libraries/System.Private.CoreLib/src/System/IO/Directory.cs:line 34\n   at Microsoft.Extensions.Hosting.Tests.HostTests.CreateDefaultBuilder_SecretsDoesReload() in /_/src/libraries/Microsoft.Extensions.Hosting/tests/UnitTests/HostTests.cs:line 380\n--- End of stack trace from previous location ---\n```\n\nQueued | Pipeline | Pipeline_Configuration | OS | Arch | Test | Outcome | Properties | BuildReason\n-- | -- | -- | -- | -- | -- | -- | -- | --\n8/12/2025, 7:43:17.381 AM | runtime-coreclr libraries-jitstress | Release | azurelinux.3.amd64.open.rt | x64 | Microsoft.Extensions.Hosting.Tests.HostTests.CreateDefaultBuilder_SecretsDoesReload | Failed | {\"System.PhaseName\":\"build_linux_x64_Release_\",\"Reason\":\"Schedule\",\"Project\":\"public\",\"operatingSystem\":\"AzureLinux.3.Amd64.Open\",\"AzurePipelinesTestRunId\":\"30769874\",\"System.PhaseAttempt\":\"1\",\"System.JobName\":\"__default\",\"DefinitionId\":\"138\",\"scenario\":\"jitstress2_tiered\",\"BuildId\":\"1120162\",\"System.StageName\":\"Build\",\"System.JobAttempt\":\"1\",\"BuildNumber\":\"20250812.1\",\"runtimeFlavor\":\"coreclr\",\"DefinitionName\":\"runtime-coreclr libraries-jitstress\",\"System.StageAttempt\":\"1\",\"architecture\":\"x64\",\"configuration\":\"Release\",\"System.JobId\":\"faaa3af4-06d2-51dd-5d8a-97b08f66fd9a\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\"} | Schedule\n8/12/2025, 7:43:17.381 AM | runtime-coreclr libraries-jitstress | Release | azurelinux.3.amd64.open.rt | x64 | Microsoft.Extensions.Hosting.Tests.HostTests.CreateDefaultBuilder_SecretsDoesReload | Failed | {\"System.PhaseName\":\"build_linux_x64_Release_\",\"Reason\":\"Schedule\",\"Project\":\"public\",\"operatingSystem\":\"AzureLinux.3.Amd64.Open\",\"AzurePipelinesTestRunId\":\"30769874\",\"System.PhaseAttempt\":\"1\",\"System.JobName\":\"__default\",\"DefinitionId\":\"138\",\"scenario\":\"jitstress2_tiered\",\"BuildId\":\"1120162\",\"System.StageName\":\"Build\",\"System.JobAttempt\":\"1\",\"BuildNumber\":\"20250812.1\",\"runtimeFlavor\":\"coreclr\",\"DefinitionName\":\"runtime-coreclr libraries-jitstress\",\"System.StageAttempt\":\"1\",\"architecture\":\"x64\",\"configuration\":\"Release\",\"System.JobId\":\"faaa3af4-06d2-51dd-5d8a-97b08f66fd9a\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\"} | Schedule\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOvbBBBw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc69qADD",
                                           "createdAt":  "2025-08-13T01:33:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-io\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-08-13T01:33:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc69qAdb",
                                           "createdAt":  "2025-08-13T01:35:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MihuBot",
                                           "body":  "Possible related and/or duplicate issue:\n- https://github.com/dotnet/runtime/issues/50751",
                                           "updatedAt":  "2025-08-13T01:35:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc69sDah",
                                           "createdAt":  "2025-08-13T07:06:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "adamsitnik",
                                           "body":  "\u003e System.IO.IOException : No space left on device : \u0027/home/helixbot/.microsoft\u0027\n\nIt\u0027s not an IO issue, it\u0027s infra issue ;)",
                                           "updatedAt":  "2025-08-13T07:06:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc69sDz0",
                                           "createdAt":  "2025-08-13T07:06:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-08-13T07:06:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc69sEEH",
                                           "createdAt":  "2025-08-13T07:07:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-08-13T07:07:05Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Test failure: Microsoft.Extensions.Hosting.Tests.HostTests.CreateDefaultBuilder_SecretsDoesReload",
        "labels":  [
                       "os-linux",
                       "JitStress",
                       "arch-x64",
                       "area-Infrastructure-coreclr",
                       "untriaged",
                       "blocking-clean-ci-optional"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/118789",
        "createdAt":  "2025-08-15T17:36:01Z",
        "number":  118789,
        "author":  "jozkee",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T03:04:19Z",
        "body":  "## Build Information\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=1114492\nBuild error leg or test failing: threading_group1.WorkItemExecution\nPull request: https://github.com/dotnet/runtime/pull/118763\n\u003c!-- Error message template  --\u003e\n## Error Message\n\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssueJsonStepByStep.md).\n\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\n\n```json\n{\n  \"ErrorMessage\": \"\u0027threading_group1\u0027 END OF WORK ITEM LOG: Command timed out, and was killed\",\n  \"ErrorPattern\": \"\",\n  \"BuildRetry\": false,\n  \"ExcludeConsoleLog\": false\n}\n```\n\n\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=1114492\r\n**Error message validated:** `[\u0027threading_group1\u0027 END OF WORK ITEM LOG: Command timed out, and was killed`]\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 8/15/2025 5:36:38 PM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|0|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOw0-U0g==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6-RkY-",
                                           "createdAt":  "2025-08-15T17:37:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-08-15T17:37:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7DT5TS",
                                           "createdAt":  "2025-09-10T22:51:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeffschwMSFT",
                                           "body":  "removing blocking-clean-ci as this issue has not happened in 30 days\n\n24-Hour Hit Count | 7-Day Hit Count | 1-Month Count\n-- | -- | --\n0 | 0 | 0\n",
                                           "updatedAt":  "2025-09-10T22:51:06Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "threading_group1 time out",
        "labels":  [
                       "area-Infrastructure-coreclr",
                       "untriaged",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/119512",
        "createdAt":  "2025-09-09T22:35:31Z",
        "number":  119512,
        "author":  "MichalPetryka",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-09T23:46:38Z",
        "body":  "Since the new toolset that comes with VS 2026 [doesn\u0027t support targeting anything below Windows 10/Server 2016](https://learn.microsoft.com/en-us/visualstudio/releases/vs18/release-notes-insiders), dotnet needs to set `CMAKE_VS_PLATFORM_TOOLSET` in CMake to `v143` to avoid using it due to Windows Server 2012 still being supported by dotnet 10.\n\nEDIT: NativeAOT probably needs to be adjusted for it too. cc @MichalStrehovsky",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOwxC3RA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc7DEA8p",
                                           "createdAt":  "2025-09-09T23:33:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-09-09T23:33:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7DELdE",
                                           "createdAt":  "2025-09-09T23:46:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEhnm5w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MichalStrehovsky",
                                                                               "createdAt":  "2025-09-10T07:54:04Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkotas",
                                           "body":  "This is only a problem if dotnet10 build images upgrade to VS 2026.\n\n\u003e EDIT: NativeAOT probably needs to be adjusted for it too.\n\nWe default to latest native toolsets and we do not try to validate whether it is compatible. This is common on macOS and Linux where the current native toolsets have limited down-level targeting. Windows is on this plan with Windows Server 2012 too. We can add a brief note about this to the documentation, but I do not think we need to do any changes.",
                                           "updatedAt":  "2025-09-09T23:46:38Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "VS toolset version needs to be forced to v143",
        "labels":  [
                       "area-Infrastructure-coreclr",
                       "untriaged"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/119750",
        "createdAt":  "2025-09-16T09:11:22Z",
        "number":  119750,
        "author":  "startewho",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-16T09:48:36Z",
        "body":  "### Description\n\nfollow the debug doc \n\n[debuging-runtime](https://github.com/dotnet/runtime/blob/main/docs/workflow/debugging/coreclr/debugging-runtime.md)\n\n\u003cimg width=\"1343\" height=\"313\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ea3700eb-4eac-48f2-a07a-c76b3ed4b48a\" /\u003e\n\nit show the error \n\n\u003cimg width=\"1537\" height=\"307\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/9373d504-1aed-48e2-88a8-c6e7620ecf79\" /\u003e\n\nand i found the build.ps1.it\u0027s content is \n```bat\n# Auto-generated solution file that still uses the sln format\n  if ($vs -ieq \"coreclr.sln\" -or $vs -ieq \"coreclr\") {\n    # If someone passes in coreclr.sln or just coreclr (case-insensitive),\n    # launch the generated CMake solution.\n    $vs = Split-Path $PSScriptRoot -Parent | Join-Path -ChildPath \"artifacts\\obj\\coreclr\" | Join-Path -ChildPath \"windows.$archToOpen.$((Get-Culture).TextInfo.ToTitleCase($configToOpen))\" | Join-Path -ChildPath \"ide\" | Join-Path -ChildPath \"CoreCLR.sln\"\n    if (-Not (Test-Path $vs)) {\n      Invoke-Expression \"\u0026 `\"$repoRoot/eng/common/msbuild.ps1`\" $repoRoot/src/coreclr/runtime.proj /clp:nosummary /restore /p:Ninja=false /p:Configuration=$configToOpen /p:TargetArchitecture=$archToOpen /p:ConfigureOnly=true /p:ClrFullNativeBuild=true\"\n      if ($lastExitCode -ne 0) {\n        Write-Error \"Failed to generate the CoreCLR solution file.\"\n        exit 1\n      }\n      if (-Not (Test-Path $vs)) {\n        Write-Error \"Unable to find the CoreCLR solution file at $vs.\"\n      }\n    }\n  }\n```\nuse the command \n```\n .\\build.cmd -vs CoreClr.sln -a x64 -c Debug\n```\nit works.\nif I open a pr, should I change the build.ps1 or update the doc?\n\n\n\n\n\n\n### Reproduction Steps\n\ndebug \n\n### Expected behavior\n\nthe doc or ps1 file should have same behavior\n\n### Actual behavior\n\nthe doc or ps1 file does not have same behavior\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOxId8sg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc7EhyQL",
                                           "createdAt":  "2025-09-16T09:45:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "huoyaoyuan",
                                           "body":  "Maybe the CMake generator hasn\u0027t moved to slnx format. Using sln in command line is more appropriate.\n\nYou can also try the open folder approach. It doesn\u0027t require any step in prior.",
                                           "updatedAt":  "2025-09-16T09:45:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7Eh3yy",
                                           "createdAt":  "2025-09-16T09:48:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-09-16T09:48:35Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Debug X64 on windows error",
        "labels":  [
                       "area-Infrastructure-coreclr",
                       "untriaged"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/119771",
        "createdAt":  "2025-09-16T16:27:18Z",
        "number":  119771,
        "author":  "radekdoulik",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-18T07:36:20Z",
        "body":  "We should start running tests with wasm/coreclr\n\nInterpreter tests are good start. `src/tests/JIT/Interpreter`.\n\nThey are currently failing quickly, because the `System.Globalization.GlobalizationMode::LoadICU` doesn\u0027t succeed.\n\nRelated issues:\n\n- [ ] load ICU data  https://github.com/dotnet/runtime/issues/119769",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOxKqMGg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc7Eqokh",
                                           "createdAt":  "2025-09-16T16:27:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-09-16T16:27:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7Eqowa",
                                           "createdAt":  "2025-09-16T16:27:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-09-16T16:27:46Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "[wasm coreclr] run coreclr tests",
        "labels":  [
                       "arch-wasm",
                       "area-Infrastructure-coreclr"
                   ]
    }
]
