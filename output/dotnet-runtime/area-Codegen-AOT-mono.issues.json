[
    {
        "url":  "https://github.com/dotnet/runtime/issues/49640",
        "createdAt":  "2021-03-15T12:08:24Z",
        "number":  49640,
        "author":  "lewing",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-03-23T03:54:15Z",
        "body":  "https://github.com/dotnet/runtime/pull/49622 disables /OPT:ICF on the mono windows build as it was breaking the cross compilers when resolving direct icalls.  Once all the AOT lanes are running in CI we should investigate the benefits of reenabling that optimization and resoling the issue some other way.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONMKM1A==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5OTM2ODQ0MQ==",
                                           "createdAt":  "2021-03-15T12:08:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-03-15T12:08:27Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5OTM2OTUyMQ==",
                                           "createdAt":  "2021-03-15T12:10:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "cc @jaykrell ",
                                           "updatedAt":  "2021-03-15T12:10:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5OTM3MTI5Ng==",
                                           "createdAt":  "2021-03-15T12:13:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "\r\nhttps://developercommunity.visualstudio.com/t/link-opticf-is-too-aggressive/1369631",
                                           "updatedAt":  "2021-03-15T12:13:27Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5OTM3MzY2OQ==",
                                           "createdAt":  "2021-03-15T12:17:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jaykrell",
                                           "body":  "Try not to stress too much. Visual C++ has had the same behavior here for like 20 years, with very rare complaints. This is like the second complaint I\u0027ve seen, albeit the other was kinda recent (less than 2 years ago). Not that I see all complaints.\r\nBut here is simple diligence:\r\n  link /verbose\r\nIt is super duper verbose, redirect it to a file, and if you look near the end for \"ICF\" it should tell you how many bytes saved.\r\nThere might be a more direct link /verbose:icf also.",
                                           "updatedAt":  "2021-03-15T12:17:32Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5OTcxMjczMA==",
                                           "createdAt":  "2021-03-15T20:01:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBzmtrg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jaykrell",
                                                                               "createdAt":  "2021-07-23T06:05:56Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "jaykrell",
                                                                               "createdAt":  "2021-07-23T06:06:01Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "MichalStrehovsky",
                                           "body":  "\u003e Try not to stress too much. Visual C++ has had the same behavior here for like 20 years, with very rare complaints\r\n\r\nLink.exe has an undocumented `/opt:stricticf` that does what we would want it to do here but it also requires the obj file to have an extra section (again, undocumented) telling it which pointers need to be unique. This was added a couple years ago for .NET Native (we needed it for delegate equivalence purposes). If we could at least get the VC++ team to document this, we could take it and run with it.",
                                           "updatedAt":  "2021-03-15T20:01:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40wozU",
                                           "createdAt":  "2021-07-22T19:10:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SamMonoRT",
                                           "body":  "Moving this to 7.0.0",
                                           "updatedAt":  "2021-07-22T19:10:43Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "[mono] Investigate reenabling identical code folding with msvc",
        "labels":  [
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/50609",
        "createdAt":  "2021-04-01T21:00:47Z",
        "number":  50609,
        "author":  "jeromelaban",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBzZlXQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "mmarinchenko",
                                            "createdAt":  "2021-06-02T13:24:38Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "thesn10",
                                            "createdAt":  "2021-06-10T15:08:03Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "HavenDV",
                                            "createdAt":  "2021-07-21T18:24:46Z"
                                        }
                                    ],
                          "totalCount":  3
                      },
        "updatedAt":  "2022-04-11T13:57:57Z",
        "body":  "### Description\r\n\r\nWhen running an application with WebAssembly Full AOT, the following exception happens at runtime:\r\n\r\n```\r\nSystem.ExecutionEngineException: AOT Compilation failed for method \u0027void System.IO.Strategies.Net5CompatFileStreamStrategy:Dispose (bool)\u0027.\r\n```\r\n\r\nNot sure to produce a repro for this one, as there\u0027s no stack trace because of AOT. Will try to get one from the newer js-based exception tracing.\r\n\r\n**edit**: Unfortunately, adding :\r\n\r\n```\r\nmono_trace_enable(1);\r\nmono_trace_set_options(\"E:all\");\r\n```\r\n\r\ndoes not raise this type of exceptions in a way that can be shown in browser logs.\r\n\r\n\r\n### Configuration\r\n\r\n2784aadb026\r\n\r\n### Regression?\r\n\r\nNot sure.\r\n\r\n### Other information\r\n\r\n\u003c!--\r\n* Please include any relevant stack traces or error messages. If possible please include text as text rather than images (so it shows up in searches).\r\n* If you have an idea where the problem might lie, let us know that here. Please include any pointers to code, relevant changes, or related issues you know of.\r\n* Do you know of any workarounds?\r\n  --\u003e\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOQUW0vQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgxMjE2OTk3OQ==",
                                           "createdAt":  "2021-04-01T21:00:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-04-01T21:00:50Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgxMjE4OTY0Mw==",
                                           "createdAt":  "2021-04-01T21:47:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeromelaban",
                                           "body":  "And it\u0027s caused by a filter....\r\n\r\nhttps://github.com/dotnet/runtime/blob/5b4d984b67d454e0ef29caff37dc48a3036f7e05/src/libraries/System.Private.CoreLib/src/System/IO/Strategies/Net5CompatFileStreamStrategy.Unix.cs#L175",
                                           "updatedAt":  "2021-04-01T21:47:10Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgxMjIyMzkyMw==",
                                           "createdAt":  "2021-04-01T23:07:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @carlossanlop\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\r\n\r\nWhen running an application with WebAssembly Full AOT, the following exception happens at runtime:\r\n\r\n```\r\nSystem.ExecutionEngineException: AOT Compilation failed for method \u0027void System.IO.Strategies.Net5CompatFileStreamStrategy:Dispose (bool)\u0027.\r\n```\r\n\r\nNot sure to produce a repro for this one, as there\u0027s no stack trace because of AOT. Will try to get one from the newer js-based exception tracing.\r\n\r\n**edit**: Unfortunately, adding :\r\n\r\n```\r\nmono_trace_enable(1);\r\nmono_trace_set_options(\"E:all\");\r\n```\r\n\r\ndoes not raise this type of exceptions in a way that can be shown in browser logs.\r\n\r\n\r\n### Configuration\r\n\r\n2784aadb026\r\n\r\n### Regression?\r\n\r\nNot sure.\r\n\r\n### Other information\r\n\r\n\u003c!--\r\n* Please include any relevant stack traces or error messages. If possible please include text as text rather than images (so it shows up in searches).\r\n* If you have an idea where the problem might lie, let us know that here. Please include any pointers to code, relevant changes, or related issues you know of.\r\n* Do you know of any workarounds?\r\n  --\u003e\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ejeromelaban\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-wasm`, `area-System.IO`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-04-01T23:07:56Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgxMjI2Njc5MQ==",
                                           "createdAt":  "2021-04-02T01:26:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\r\n\r\nWhen running an application with WebAssembly Full AOT, the following exception happens at runtime:\r\n\r\n```\r\nSystem.ExecutionEngineException: AOT Compilation failed for method \u0027void System.IO.Strategies.Net5CompatFileStreamStrategy:Dispose (bool)\u0027.\r\n```\r\n\r\nNot sure to produce a repro for this one, as there\u0027s no stack trace because of AOT. Will try to get one from the newer js-based exception tracing.\r\n\r\n**edit**: Unfortunately, adding :\r\n\r\n```\r\nmono_trace_enable(1);\r\nmono_trace_set_options(\"E:all\");\r\n```\r\n\r\ndoes not raise this type of exceptions in a way that can be shown in browser logs.\r\n\r\n\r\n### Configuration\r\n\r\n2784aadb026\r\n\r\n### Regression?\r\n\r\nNot sure.\r\n\r\n### Other information\r\n\r\n\u003c!--\r\n* Please include any relevant stack traces or error messages. If possible please include text as text rather than images (so it shows up in searches).\r\n* If you have an idea where the problem might lie, let us know that here. Please include any pointers to code, relevant changes, or related issues you know of.\r\n* Do you know of any workarounds?\r\n  --\u003e\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ejeromelaban\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-wasm`, `area-Codegen-AOT-mono`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-04-02T01:26:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0NjU3MzM3MA==",
                                           "createdAt":  "2021-05-23T14:38:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HavenDV",
                                           "body":  "Not sure if this helps or not, but I\u0027ll leave it here.\r\n![image](https://user-images.githubusercontent.com/3002068/119264897-32af6000-bc28-11eb-8c80-a8287d9162f3.png)\r\n",
                                           "updatedAt":  "2021-05-23T14:38:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0NjU3OTE5Mg==",
                                           "createdAt":  "2021-05-23T15:16:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeromelaban",
                                           "body":  "@HavenDV which `WasmShellMonoRuntimeExecutionMode` value have you set ? Currently, FullAOT causes this issue (because of exception filters).",
                                           "updatedAt":  "2021-05-23T15:16:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0NjYxOTgzNQ==",
                                           "createdAt":  "2021-05-23T20:25:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HavenDV",
                                           "body":  "Yes, this is for FullAOT. Other settings:\r\n```xml\r\n\u003cProject Sdk=\"Microsoft.NET.Sdk.Web\"\u003e\r\n\r\n  \u003cPropertyGroup\u003e\r\n    \u003cOutputType\u003eExe\u003c/OutputType\u003e\r\n    \u003cTargetFramework\u003enet5.0\u003c/TargetFramework\u003e\r\n    \u003cRootNamespace\u003eDedoose\u003c/RootNamespace\u003e\r\n    \u003cApplicationIcon\u003eicon.ico\u003c/ApplicationIcon\u003e\r\n    \u003cNoWarn\u003e($NoWarn);NU1701;CS8669;Uno0001\u003c/NoWarn\u003e\r\n  \u003c/PropertyGroup\u003e\r\n\r\n  \u003cPropertyGroup Label=\"WASM\"\u003e\r\n    \u003cWasmHead\u003etrue\u003c/WasmHead\u003e\r\n    \u003cWasmShellEnableLongPathSupport\u003efalse\u003c/WasmShellEnableLongPathSupport\u003e\r\n    \u003cDefineConstants\u003e$(DefineConstants);__WASM__\u003c/DefineConstants\u003e\r\n    \u003cMonoRuntimeDebuggerEnabled Condition=\" \u0027$(Configuration)\u0027 == \u0027Debug\u0027 \"\u003etrue\u003c/MonoRuntimeDebuggerEnabled\u003e\r\n    \u003cWasmShellILLinkerEnabled\u003efalse\u003c/WasmShellILLinkerEnabled\u003e\r\n    \u003cWasmShellMonoRuntimeExecutionMode Condition=\" \u0027$(Configuration)\u0027 == \u0027Release\u0027 \"\u003eFullAOT\u003c/WasmShellMonoRuntimeExecutionMode\u003e\r\n  \u003c/PropertyGroup\u003e\r\n\r\n  \u003cItemGroup\u003e\r\n    \u003cLinkerDescriptor Include=\"LinkerConfig.xml\" /\u003e\r\n    \u003cContent Include=\"..\\..\\shared\\Dedoose.Apps.Uno.Shared\\Assets\\*.png\" Link=\"Assets\\%(FileName)%(Extension)\" /\u003e\r\n    \u003cContent Include=\"LinkerConfig.xml\" /\u003e\r\n    \u003cEmbeddedResource Include=\"WasmCSS\\Fonts.css\" /\u003e\r\n    \u003cEmbeddedResource Include=\"WasmScripts\\AppManifest.js\" /\u003e\r\n    \u003cUpToDateCheckInput Include=\"..\\..\\shared\\Dedoose.Apps.Uno.Shared\\**\\*.xaml\" /\u003e\r\n  \u003c/ItemGroup\u003e\r\n\r\n  \u003cItemGroup\u003e\r\n    \u003cPackageReference Include=\"Microsoft.Windows.Compatibility\" Version=\"5.0.0\" /\u003e\r\n    \u003cPackageReference Include=\"ReactiveUI.Uno\" Version=\"13.3.2\" /\u003e\r\n    \u003cPackageReference Include=\"Uno.Microsoft.Toolkit.Uwp.UI.Controls.Core\" Version=\"7.1.0-build.2.g0e224f133a\" /\u003e\r\n    \u003cPackageReference Include=\"Uno.Microsoft.Toolkit.Uwp.UI.Controls.DataGrid\" Version=\"7.1.0-build.2.g0e224f133a\" /\u003e\r\n    \u003cPackageReference Include=\"Uno.Microsoft.Toolkit.Uwp.UI.Controls.Layout\" Version=\"7.1.0-build.2.g0e224f133a\" /\u003e\r\n    \u003cPackageReference Include=\"Uno.Microsoft.Xaml.Behaviors.Uwp.Managed\" Version=\"2.0.3-uno.95\" /\u003e\r\n    \u003cPackageReference Include=\"Uno.UI.WebAssembly\" Version=\"3.8.0-dev.241\" /\u003e\r\n    \u003cPackageReference Include=\"Uno.Wasm.Bootstrap\" Version=\"2.1.0\" /\u003e\r\n    \u003cPackageReference Include=\"Uno.Wasm.Bootstrap.DevServer\" Version=\"2.1.0\" PrivateAssets=\"all\" /\u003e\r\n  \u003c/ItemGroup\u003e\r\n\r\n  \u003cItemGroup\u003e\r\n    \u003cProjectReference Include=\"..\\..\\libs\\Dedoose.Apps.Core\\Dedoose.Apps.Core.csproj\" /\u003e\r\n  \u003c/ItemGroup\u003e\r\n\r\n  \u003cImport Project=\"..\\..\\shared\\Dedoose.Apps.Shared\\Dedoose.Apps.Shared.projitems\" Label=\"Shared\" /\u003e\r\n  \u003cImport Project=\"..\\..\\shared\\Dedoose.Apps.Uno.Shared\\Dedoose.Apps.Uno.Shared.projitems\" Label=\"Shared\" /\u003e\r\n\r\n\u003c/Project\u003e\r\n```\r\n\r\nI tried InterpreterAndAOT and got the following error:\r\n![image](https://user-images.githubusercontent.com/3002068/119275416-483c7e00-bc58-11eb-8c06-85dccd146e71.png)\r\n",
                                           "updatedAt":  "2021-05-23T20:25:42Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0NjY5NTg3Nw==",
                                           "createdAt":  "2021-05-24T02:53:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeromelaban",
                                           "body":  "As of today, until exception filtering is supported, the `FullAOT` mode is not functional in the runtime. Try running with `InterpreterAndAOT` instead. \r\n\r\nAlso, disabling the linker is not a good idea when building with AOT enabled, as it will generate excessive amounts of code that will not be used by the app.",
                                           "updatedAt":  "2021-05-24T02:53:58Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0NjcwMDYwNg==",
                                           "createdAt":  "2021-05-24T03:09:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HavenDV",
                                           "body":  "Yes I understand this. But, before I take the time to create the LinkerConfig, I wanted to make sure everything works without it.\r\n\r\n`InterpreterAndAOT` issued a function signature mismatch error. Perhaps I am using the wrong version of Microsoft.Windows.Compatibility? Without explicitly specifying this package, compilation will fail with Microsoft.Win32.Registry.AccessControl not found error\r\n",
                                           "updatedAt":  "2021-05-25T03:54:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0NzQ0NzgwNA==",
                                           "createdAt":  "2021-05-25T00:43:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBsCD_Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "HavenDV",
                                                                               "createdAt":  "2021-05-25T03:55:43Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jeromelaban",
                                           "body":  "I order to troubleshoot the mismatch error, you\u0027ll need to add the following property: \r\n```xml\r\n\u003cPropertyGroup\u003e\r\n   \u003cWasmShellEnableEmccProfiling\u003etrue\u003c/WasmShellEnableEmccProfiling\u003e\r\n\u003c/PropertyGroup\u003e\r\n```\r\n\r\nThis will show the full stack trace of the error, so it can be analyzed.\r\n\r\nAs for the `Microsoft.Windows.Compatibility`, yes, it is needed.\r\n",
                                           "updatedAt":  "2021-05-25T00:43:07Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0NzU1NTgxMw==",
                                           "createdAt":  "2021-05-25T05:50:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HavenDV",
                                           "body":  "Looks like an issue with ReactiveUI, since Linq.Expressions are heavily used there\r\n```\r\nUno.UI.js:97 Unhandled dispatcher exception: RuntimeError: function signature mismatch (RuntimeError: function signature mismatch\r\n    at ReactiveUI_ReactiveUI_PropertyBinderImplementation_BindImpl_TViewModel_REF_TView_REF_TVMProp_REF_TVProp_REF_TDontCare_REF_TViewModel_REF_TView_REF_System_Linq_Expressions_Expression_1_System_Func_2_TViewModel_REF_TVMProp_REF_System_Linq_Expressions_Expression_1_System_Func_2_TView_REF_TVProp_REF_System_IObservable_1_TDontCare_REF_ReactiveUI_PropertyBinderImplementation_OutFunc_2_TVMProp_REF_TVProp_REF_ReactiveUI_PropertyBinderImplementation_OutFunc_2_TVProp_REF_TVMProp_REF (\u003canonymous\u003e:wasm-function[184528]:0x779fa99)\r\n    at ReactiveUI_ReactiveUI_PropertyBinderImplementation_Bind_TViewModel_REF_TView_REF_TVMProp_REF_TVProp_REF_TDontCare_REF_TViewModel_REF_TView_REF_System_Linq_Expressions_Expression_1_System_Func_2_TViewModel_REF_TVMProp_REF_System_Linq_Expressions_Expression_1_System_Func_2_TView_REF_TVProp_REF_System_IObservable_1_TDontCare_REF_object_ReactiveUI_IBindingTypeConverter_ReactiveUI_IBindingTypeConverter (\u003canonymous\u003e:wasm-function[184520]:0x77999ce)\r\n    at ReactiveUI_ReactiveUI_PropertyBindingMixins_Bind_TViewModel_REF_TView_REF_TVMProp_REF_TVProp_REF_TDontCare_REF_TView_REF_TViewModel_REF_System_Linq_Expressions_Expression_1_System_Func_2_TViewModel_REF_TVMProp_REF_System_Linq_Expressions_Expression_1_System_Func_2_TView_REF_TVProp_REF_System_IObservable_1_TDontCare_REF_object_ReactiveUI_IBindingTypeConverter_ReactiveUI_IBindingTypeConverter (\u003canonymous\u003e:wasm-function[184439]:0x778c67b)\r\n    at Dedoose_Apps_Uno_WebAssembly_Dedoose_Views_LoginView___ctorb__0_0_System_Reactive_Disposables_CompositeDisposable (\u003canonymous\u003e:wasm-function[201317]:0x84191fb)\r\n    at Dedoose_Apps_Uno_WebAssembly_wrapper_delegate_invoke_System_Action_1_System_Reactive_Disposables_CompositeDisposable_invoke_void_T_System_Reactive_Disposables_CompositeDisposable (\u003canonymous\u003e:wasm-function[200837]:0x83bb0e5)\r\n    at ReactiveUI_ReactiveUI_ViewForMixins__c__DisplayClass9_0__WhenActivatedb__0 (\u003canonymous\u003e:wasm-function[183977]:0x774e782)\r\n    at ReactiveUI_wrapper_delegate_invoke_System_Func_1_System_Collections_Generic_IEnumerable_1_System_IDisposable_invoke_TResult (\u003canonymous\u003e:wasm-function[183289]:0x76b381a)\r\n    at ReactiveUI_ReactiveUI_ViewForMixins__c__DisplayClass10_0__HandleViewActivationb__0_bool (\u003canonymous\u003e:wasm-function[183984]:0x774fac9)\r\n    at aot_instances_wrapper_delegate_invoke_System_Action_1_bool_invoke_void_T_bool (\u003canonymous\u003e:wasm-function[71860]:0x33e71a6)\r\n    at aot_instances_aot_wrapper_gsharedvt_out_sig_void_this_u1 (\u003canonymous\u003e:wasm-function[27128]:0x1103f33))\r\n(anonymous) @ Uno.UI.js:97\r\nUno.UI.js:98 Uncaught RuntimeError: function signature mismatch\r\n    at ReactiveUI_ReactiveUI_PropertyBinderImplementation_BindImpl_TViewModel_REF_TView_REF_TVMProp_REF_TVProp_REF_TDontCare_REF_TViewModel_REF_TView_REF_System_Linq_Expressions_Expression_1_System_Func_2_TViewModel_REF_TVMProp_REF_System_Linq_Expressions_Expression_1_System_Func_2_TView_REF_TVProp_REF_System_IObservable_1_TDontCare_REF_ReactiveUI_PropertyBinderImplementation_OutFunc_2_TVMProp_REF_TVProp_REF_ReactiveUI_PropertyBinderImplementation_OutFunc_2_TVProp_REF_TVMProp_REF (\u003canonymous\u003e:wasm-function[184528]:0x779fa99)\r\n    at ReactiveUI_ReactiveUI_PropertyBinderImplementation_Bind_TViewModel_REF_TView_REF_TVMProp_REF_TVProp_REF_TDontCare_REF_TViewModel_REF_TView_REF_System_Linq_Expressions_Expression_1_System_Func_2_TViewModel_REF_TVMProp_REF_System_Linq_Expressions_Expression_1_System_Func_2_TView_REF_TVProp_REF_System_IObservable_1_TDontCare_REF_object_ReactiveUI_IBindingTypeConverter_ReactiveUI_IBindingTypeConverter (\u003canonymous\u003e:wasm-function[184520]:0x77999ce)\r\n    at ReactiveUI_ReactiveUI_PropertyBindingMixins_Bind_TViewModel_REF_TView_REF_TVMProp_REF_TVProp_REF_TDontCare_REF_TView_REF_TViewModel_REF_System_Linq_Expressions_Expression_1_System_Func_2_TViewModel_REF_TVMProp_REF_System_Linq_Expressions_Expression_1_System_Func_2_TView_REF_TVProp_REF_System_IObservable_1_TDontCare_REF_object_ReactiveUI_IBindingTypeConverter_ReactiveUI_IBindingTypeConverter (\u003canonymous\u003e:wasm-function[184439]:0x778c67b)\r\n    at Dedoose_Apps_Uno_WebAssembly_Dedoose_Views_LoginView___ctorb__0_0_System_Reactive_Disposables_CompositeDisposable (\u003canonymous\u003e:wasm-function[201317]:0x84191fb)\r\n    at Dedoose_Apps_Uno_WebAssembly_wrapper_delegate_invoke_System_Action_1_System_Reactive_Disposables_CompositeDisposable_invoke_void_T_System_Reactive_Disposables_CompositeDisposable (\u003canonymous\u003e:wasm-function[200837]:0x83bb0e5)\r\n    at ReactiveUI_ReactiveUI_ViewForMixins__c__DisplayClass9_0__WhenActivatedb__0 (\u003canonymous\u003e:wasm-function[183977]:0x774e782)\r\n    at ReactiveUI_wrapper_delegate_invoke_System_Func_1_System_Collections_Generic_IEnumerable_1_System_IDisposable_invoke_TResult (\u003canonymous\u003e:wasm-function[183289]:0x76b381a)\r\n    at ReactiveUI_ReactiveUI_ViewForMixins__c__DisplayClass10_0__HandleViewActivationb__0_bool (\u003canonymous\u003e:wasm-function[183984]:0x774fac9)\r\n    at aot_instances_wrapper_delegate_invoke_System_Action_1_bool_invoke_void_T_bool (\u003canonymous\u003e:wasm-function[71860]:0x33e71a6)\r\n    at aot_instances_aot_wrapper_gsharedvt_out_sig_void_this_u1 (\u003canonymous\u003e:wasm-function[27128]:0x1103f33)\r\n```\r\n\r\nTrying to use\r\n```xml\r\n\u003cMonoRuntimeMixedModeExcludedAssembly Include=\"ReactiveUI\" /\u003e\r\n```",
                                           "updatedAt":  "2021-05-25T05:57:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg0NzY1MTUzNg==",
                                           "createdAt":  "2021-05-25T08:08:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "HavenDV",
                                           "body":  "Next errors:\r\n![image](https://user-images.githubusercontent.com/3002068/119462586-37892680-bd84-11eb-9e20-f48c7ce716d9.png)\r\n[dedoose-app.herokuapp.com-1621929964720.log](https://github.com/dotnet/runtime/files/6537576/dedoose-app.herokuapp.com-1621929964720.log)\r\n\r\nTrying to use\r\n```xml\r\n\u003cMonoRuntimeMixedModeExcludedAssembly Include=\"System.Reactive\" /\u003e\r\n\u003cMonoRuntimeMixedModeExcludedAssembly Include=\"System.Reactive.Linq\" /\u003e\r\n```\r\n\r\nP.S. Yes, it works with\r\n```xml\r\n\u003cMonoRuntimeMixedModeExcludedAssembly Include=\"ReactiveUI\" /\u003e\r\n\u003cMonoRuntimeMixedModeExcludedAssembly Include=\"System.Reactive\" /\u003e\r\n\u003cMonoRuntimeMixedModeExcludedAssembly Include=\"DynamicData\" /\u003e\r\n```",
                                           "updatedAt":  "2021-05-25T13:10:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5BOaGf",
                                           "createdAt":  "2022-04-10T15:20:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "andreakarasho",
                                           "body":  "Landed here by the following readme: https://github.com/unoplatform/Uno.Wasm.Bootstrap#full-aot-mode\r\n\r\nThis has been removed [?]\r\nhttps://github.com/dotnet/runtime/pull/57735",
                                           "updatedAt":  "2022-04-10T15:20:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5BPH0b",
                                           "createdAt":  "2022-04-11T02:33:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeromelaban",
                                           "body":  "@andreakarasho The issue is actually wider than that, as for now, the runtime needs the use of the interpreter for parts of Exception Handling. That dependency has been drastically reduced in net7, but it is still needed (@vargaz may be able to confirm). \r\n\r\nThat being said, current AOT mode which compiles everything it can is pretty close to FullAOT, so the performance is not as impacted as it once was in net6.",
                                           "updatedAt":  "2022-04-11T02:33:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5BRBNS",
                                           "createdAt":  "2022-04-11T12:19:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vargaz",
                                           "body":  "This is probably fixed now. All methods with filters are now AOTed.\r\n",
                                           "updatedAt":  "2022-04-11T12:19:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5BRDvm",
                                           "createdAt":  "2022-04-11T12:30:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeromelaban",
                                           "body":  "\u003e This is probably fixed now. All methods with filters are now AOTed.\r\n\r\nAre the exception handlers/finally fully AOTed as well ? I though there were still some small interpreted portions.",
                                           "updatedAt":  "2022-04-11T12:30:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5BRbS9",
                                           "createdAt":  "2022-04-11T13:57:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCXcXVA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jeromelaban",
                                                                               "createdAt":  "2022-04-11T14:07:19Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "vargaz",
                                           "body":  "The finally code will be AOTed, and run using AOT in the non-exception case, and using the interpreter in the exception case.\r\n",
                                           "updatedAt":  "2022-04-11T13:57:57Z"
                                       }
                                   ],
                         "totalCount":  17
                     },
        "title":  "[Wasm][AOT] AOT Compilation failed for method \u0027void System.IO.Strategies.Net5CompatFileStreamStrategy:Dispose (bool)\u0027.",
        "labels":  [
                       "arch-wasm",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/50957",
        "createdAt":  "2021-04-08T20:35:08Z",
        "number":  50957,
        "author":  "radical",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-06-16T00:01:32Z",
        "body":  "Tests failing due to stacktrace APIs not being supported. The relevant tests are disabled.\r\n\r\n- `System.Diagnostics.Tests`\r\n- `System.Runtime.Extensions.Tests`\r\n- `System.IO.Pipelines.Tests` (~https://github.com/dotnet/runtime/issues/50959~)\r\n\r\n-- `System.Diagnostics.Tests` \r\n[Logs](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-48226-merge-76d6323478354200b5/System.Diagnostics.StackTrace.Tests/console.9d7e642b.log?sv=2019-07-07\u0026se=2021-04-27T19%3A10%3A01Z\u0026sr=c\u0026sp=rl\u0026sig=sD%2BRBEufPbrlRruQFK0D%2FkcngP%2Bdu6qiZlchrTM%2Fu10%3D)\r\n\r\n```\r\n[19:39:33] fail: [FAIL] System.Diagnostics.Tests.StackFrameExtensionsTests.HasMethod_Invoke_ReturnsExpected(stackFrame: \u003cnull\u003e\r\n[19:39:33] info: , expected: True)\r\n[19:39:33] info: Assert.Equal() Failure\r\n[19:39:33] info: Expected: True\r\n[19:39:33] info: Actual:   False\r\n[19:39:33] info: \r\n[19:39:33] info: , expected: False)\r\n[19:39:33] info: )\r\n[19:39:33] info: )\r\n[19:39:33] info: )\r\n[19:39:33] info: )\r\n[19:39:33] info: )\r\n[19:39:33] info: )\r\n[19:39:33] info: , expected: False)\r\n[19:39:33] info: , expected: True)\r\n[19:39:33] info: , expected: False)\r\n[19:39:33] fail: [FAIL] System.Diagnostics.Tests.StackFrameExtensionsTests.HasILOffset_Invoke_ReturnsExpected(stackFrame: \u003cnull\u003e\r\n[19:39:33] info: , expected: True)\r\n[19:39:33] info: Assert.Equal() Failure\r\n[19:39:33] info: Expected: True\r\n[19:39:33] info: Actual:   False\r\n[19:39:33] info: \r\n[19:39:33] info: , expected: False)\r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackTraceTests.Ctor_Bool_ThrownException_GetFramesReturnsExpected(fNeedFileInfo: True)\r\n[19:39:34] info: Assert.True() Failure\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackTraceTests.Ctor_Bool_ThrownException_GetFramesReturnsExpected(fNeedFileInfo: False)\r\n[19:39:34] info: Assert.True() Failure\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackTraceTests.Ctor_SkipFrames(skipFrames: 0)\r\n[19:39:34] info: Assert.True() Failure\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackTraceTests.Ctor_SkipFrames(skipFrames: 1)\r\n[19:39:34] info: Assert.Equal() Failure\r\n[19:39:34] info: Expected: -1\r\n[19:39:34] info: Actual:   0\r\n[19:39:34] info: \r\n[19:39:34] info: )\r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackTraceTests.Ctor_Default\r\n[19:39:34] info: Assert.True() Failure\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackTraceTests.Ctor_ThrownException_GetFramesReturnsExpected\r\n[19:39:34] info: Assert.True() Failure\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackTraceTests.Ctor_FNeedFileInfo(fNeedFileInfo: True)\r\n[19:39:34] info: Assert.True() Failure\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackTraceTests.Ctor_FNeedFileInfo(fNeedFileInfo: False)\r\n[19:39:34] info: Assert.True() Failure\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackTraceTests.Ctor_SkipFrames_FNeedFileInfo(skipFrames: 0, fNeedFileInfo: True)\r\n[19:39:34] info: Assert.True() Failure\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackTraceTests.Ctor_SkipFrames_FNeedFileInfo(skipFrames: 1, fNeedFileInfo: True)\r\n[19:39:34] info: Assert.Equal() Failure\r\n[19:39:34] info: Expected: -1\r\n[19:39:34] info: Actual:   0\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackTraceTests.Ctor_SkipFrames_FNeedFileInfo(skipFrames: 0, fNeedFileInfo: False)\r\n[19:39:34] info: Assert.True() Failure\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackTraceTests.Ctor_SkipFrames_FNeedFileInfo(skipFrames: 1, fNeedFileInfo: False)\r\n[19:39:34] info: Assert.Equal() Failure\r\n[19:39:34] info: Expected: -1\r\n[19:39:34] info: Actual:   0\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackFrameTests.SkipFrames_CallMethod_ReturnsExpected\r\n[19:39:34] info: Assert.Equal() Failure\r\n[19:39:34] info: Expected: Void SkipFrames_CallMethod_ReturnsExpected()\r\n[19:39:34] info: Actual:   (null)\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackFrameTests.Ctor_Default\r\n[19:39:34] info: Expected GetILOffset() -1 for \u003cnull\u003e\r\n[19:39:34] info:  to be greater or equal to zero.\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackFrameTests.Ctor_FNeedFileInfo(fNeedFileInfo: True)\r\n[19:39:34] info: Expected GetILOffset() -1 for \u003cnull\u003e\r\n[19:39:34] info:  to be greater or equal to zero.\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackFrameTests.Ctor_FNeedFileInfo(fNeedFileInfo: False)\r\n[19:39:34] info: Expected GetILOffset() -1 for \u003cnull\u003e\r\n[19:39:34] info:  to be greater or equal to zero.\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackFrameTests.Ctor_Filename_LineNumber(fileName: null, lineNumber: -1)\r\n[19:39:34] info: Expected GetILOffset() -1 for \u003cnull\u003e\r\n[19:39:34] info:  to be greater or equal to zero.\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackFrameTests.Ctor_Filename_LineNumber(fileName: \"\", lineNumber: 0)\r\n[19:39:34] info: Expected GetILOffset() -1 for \u003cnull\u003e\r\n[19:39:34] info:  to be greater or equal to zero.\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackFrameTests.Ctor_Filename_LineNumber(fileName: \"FileName\", lineNumber: 1)\r\n[19:39:34] info: Expected GetILOffset() -1 for \u003cnull\u003e\r\n[19:39:34] info:  to be greater or equal to zero.\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHORPe5gA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgxNjE2NzAxMw==",
                                           "createdAt":  "2021-04-08T20:35:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n[Logs](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-48226-merge-76d6323478354200b5/System.Diagnostics.StackTrace.Tests/console.9d7e642b.log?sv=2019-07-07\u0026se=2021-04-27T19%3A10%3A01Z\u0026sr=c\u0026sp=rl\u0026sig=sD%2BRBEufPbrlRruQFK0D%2FkcngP%2Bdu6qiZlchrTM%2Fu10%3D)\r\n\r\n```\r\n[19:39:33] fail: [FAIL] System.Diagnostics.Tests.StackFrameExtensionsTests.HasMethod_Invoke_ReturnsExpected(stackFrame: \u003cnull\u003e\r\n[19:39:33] info: , expected: True)\r\n[19:39:33] info: Assert.Equal() Failure\r\n[19:39:33] info: Expected: True\r\n[19:39:33] info: Actual:   False\r\n[19:39:33] info: \r\n[19:39:33] info: , expected: False)\r\n[19:39:33] info: )\r\n[19:39:33] info: )\r\n[19:39:33] info: )\r\n[19:39:33] info: )\r\n[19:39:33] info: )\r\n[19:39:33] info: )\r\n[19:39:33] info: , expected: False)\r\n[19:39:33] info: , expected: True)\r\n[19:39:33] info: , expected: False)\r\n[19:39:33] fail: [FAIL] System.Diagnostics.Tests.StackFrameExtensionsTests.HasILOffset_Invoke_ReturnsExpected(stackFrame: \u003cnull\u003e\r\n[19:39:33] info: , expected: True)\r\n[19:39:33] info: Assert.Equal() Failure\r\n[19:39:33] info: Expected: True\r\n[19:39:33] info: Actual:   False\r\n[19:39:33] info: \r\n[19:39:33] info: , expected: False)\r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackTraceTests.Ctor_Bool_ThrownException_GetFramesReturnsExpected(fNeedFileInfo: True)\r\n[19:39:34] info: Assert.True() Failure\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackTraceTests.Ctor_Bool_ThrownException_GetFramesReturnsExpected(fNeedFileInfo: False)\r\n[19:39:34] info: Assert.True() Failure\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackTraceTests.Ctor_SkipFrames(skipFrames: 0)\r\n[19:39:34] info: Assert.True() Failure\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackTraceTests.Ctor_SkipFrames(skipFrames: 1)\r\n[19:39:34] info: Assert.Equal() Failure\r\n[19:39:34] info: Expected: -1\r\n[19:39:34] info: Actual:   0\r\n[19:39:34] info: \r\n[19:39:34] info: )\r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackTraceTests.Ctor_Default\r\n[19:39:34] info: Assert.True() Failure\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackTraceTests.Ctor_ThrownException_GetFramesReturnsExpected\r\n[19:39:34] info: Assert.True() Failure\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackTraceTests.Ctor_FNeedFileInfo(fNeedFileInfo: True)\r\n[19:39:34] info: Assert.True() Failure\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackTraceTests.Ctor_FNeedFileInfo(fNeedFileInfo: False)\r\n[19:39:34] info: Assert.True() Failure\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackTraceTests.Ctor_SkipFrames_FNeedFileInfo(skipFrames: 0, fNeedFileInfo: True)\r\n[19:39:34] info: Assert.True() Failure\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackTraceTests.Ctor_SkipFrames_FNeedFileInfo(skipFrames: 1, fNeedFileInfo: True)\r\n[19:39:34] info: Assert.Equal() Failure\r\n[19:39:34] info: Expected: -1\r\n[19:39:34] info: Actual:   0\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackTraceTests.Ctor_SkipFrames_FNeedFileInfo(skipFrames: 0, fNeedFileInfo: False)\r\n[19:39:34] info: Assert.True() Failure\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackTraceTests.Ctor_SkipFrames_FNeedFileInfo(skipFrames: 1, fNeedFileInfo: False)\r\n[19:39:34] info: Assert.Equal() Failure\r\n[19:39:34] info: Expected: -1\r\n[19:39:34] info: Actual:   0\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackFrameTests.SkipFrames_CallMethod_ReturnsExpected\r\n[19:39:34] info: Assert.Equal() Failure\r\n[19:39:34] info: Expected: Void SkipFrames_CallMethod_ReturnsExpected()\r\n[19:39:34] info: Actual:   (null)\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackFrameTests.Ctor_Default\r\n[19:39:34] info: Expected GetILOffset() -1 for \u003cnull\u003e\r\n[19:39:34] info:  to be greater or equal to zero.\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackFrameTests.Ctor_FNeedFileInfo(fNeedFileInfo: True)\r\n[19:39:34] info: Expected GetILOffset() -1 for \u003cnull\u003e\r\n[19:39:34] info:  to be greater or equal to zero.\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackFrameTests.Ctor_FNeedFileInfo(fNeedFileInfo: False)\r\n[19:39:34] info: Expected GetILOffset() -1 for \u003cnull\u003e\r\n[19:39:34] info:  to be greater or equal to zero.\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackFrameTests.Ctor_Filename_LineNumber(fileName: null, lineNumber: -1)\r\n[19:39:34] info: Expected GetILOffset() -1 for \u003cnull\u003e\r\n[19:39:34] info:  to be greater or equal to zero.\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackFrameTests.Ctor_Filename_LineNumber(fileName: \"\", lineNumber: 0)\r\n[19:39:34] info: Expected GetILOffset() -1 for \u003cnull\u003e\r\n[19:39:34] info:  to be greater or equal to zero.\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n[19:39:34] info: \r\n[19:39:34] fail: [FAIL] System.Diagnostics.Tests.StackFrameTests.Ctor_Filename_LineNumber(fileName: \"FileName\", lineNumber: 1)\r\n[19:39:34] info: Expected GetILOffset() -1 for \u003cnull\u003e\r\n[19:39:34] info:  to be greater or equal to zero.\r\n[19:39:34] info: Expected: True\r\n[19:39:34] info: Actual:   False\r\n```\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eradical\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-wasm`, `area-Codegen-AOT-mono`, `wasm-aot-test`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-04-08T20:35:10Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzNDQ0NjQ1MA==",
                                           "createdAt":  "2021-05-07T14:20:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BrzVlad",
                                           "body":  "I don\u0027t see how it would be possible to implement this, unless we would be manually linking frames with each call, which sounds like a bad idea.",
                                           "updatedAt":  "2021-05-07T14:20:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzNDQ4MjY0Mg==",
                                           "createdAt":  "2021-05-07T14:55:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "yeah I think we should probably just skip these with platform detection on AOT",
                                           "updatedAt":  "2021-05-07T14:55:03Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzNDQ4ODQzNg==",
                                           "createdAt":  "2021-05-07T15:00:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "Only the failing tests, or the entire library?",
                                           "updatedAt":  "2021-05-07T15:00:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzNDgwMjkxNQ==",
                                           "createdAt":  "2021-05-07T21:47:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBqE-_g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "radical",
                                                                               "createdAt":  "2021-05-07T21:48:21Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "lewing",
                                           "body":  "Don\u0027t skip the library.  Leave them active issue for now.  We may want to consider an AOT analyzer for cases like this too.  Thoughts @marek-safar ",
                                           "updatedAt":  "2021-05-07T21:47:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2MjUxMTI4Mw==",
                                           "createdAt":  "2021-06-16T16:09:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "Merging https://github.com/dotnet/runtime/issues/51676 with this.\r\n\r\n```\r\nInstead of the crash, we have one test failure now:\r\n\r\n[22:22:31] fail: [FAIL] System.Tests.EnvironmentStackTrace.StackTraceDoesNotStartWithInternalFrame\r\n[22:22:31] info: System.NullReferenceException : Object reference not set to an instance of an object.\r\n[22:22:31] info:    at System.Reflection.RuntimeMethodInfo.Invoke(Object , BindingFlags , Binder , Object[] , CultureInfo )\r\n```",
                                           "updatedAt":  "2021-06-16T16:09:52Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3MDM4NTAwOA==",
                                           "createdAt":  "2021-06-29T08:20:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BrzVlad",
                                           "body":  "Having stack traces on wasm is a bit complicated and I think we should revisit this for .net 7. @lewing Any thoughts on moving the milestone ?",
                                           "updatedAt":  "2021-06-29T08:20:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40intp",
                                           "createdAt":  "2021-07-16T14:26:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SamMonoRT",
                                           "body":  "Moving to 7.0.0",
                                           "updatedAt":  "2021-07-16T14:26:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5E6jLi",
                                           "createdAt":  "2022-06-15T09:04:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ilonatommy",
                                           "body":  "@BrzVlad, did you hit into any blocker in the part of https://github.com/dotnet/runtime/issues/63399 targeting prev 2?",
                                           "updatedAt":  "2022-06-15T09:04:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5E8qi0",
                                           "createdAt":  "2022-06-15T17:38:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BrzVlad",
                                           "body":  "\u003e @BrzVlad, did you hit into any blocker in the part of #63399 targeting prev 2?\r\n\r\nThat approach was abandoned. I\u0027m not sure what is the best way to support stack traces with wasm code, maybe there will be some additions to the spec that will allow to implement this more easily.",
                                           "updatedAt":  "2022-06-15T17:38:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5E97mA",
                                           "createdAt":  "2022-06-16T00:01:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "we\u0027re getting enough diagnostic info from the current stacks that this isn\u0027t urgent, we\u0027ll go over it again when planning for 8",
                                           "updatedAt":  "2022-06-16T00:01:32Z"
                                       }
                                   ],
                         "totalCount":  11
                     },
        "title":  "[wasm][tests][aot] Tests failing due to stacktrace not supported",
        "labels":  [
                       "arch-wasm",
                       "area-Codegen-AOT-mono",
                       "wasm-aot-test"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/52393",
        "createdAt":  "2021-05-06T15:31:03Z",
        "number":  52393,
        "author":  "radical",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-26T14:55:30Z",
        "body":  "[System.Runtime.Tests](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-52004-merge-3dd81fa5d0b34cd8a4/System.Runtime.Tests/console.c20daf34.log?sv=2019-07-07\u0026se=2021-05-26T09%3A41%3A25Z\u0026sr=c\u0026sp=rl\u0026sig=SMjMqOkkeGjsu3Qw%2BsJS%2BdyJoKkGBOex3M5va3FGvNk%3D)\r\n\r\nSeen in https://github.com/dotnet/runtime/pull/52004/checks?check_run_id=2517540700\r\n\r\n```\r\nfail: console.error: RuntimeError: invalid index into function table\r\nfail: console.error: RuntimeError: invalid index into function table\r\n\r\nfail:     at corlib_System_Type_Equals_System_Type (\u003canonymous\u003e:wasm-function[54851]:0x1700cf7)\r\nfail:     at xunit_assert_Xunit_Assert_Throws_System_Type_System_Exception (\u003canonymous\u003e:wasm-function[23832]:0x53a43d)\r\nfail:     at xunit_assert_Xunit_Assert_Throws_T_REF_System_Action (\u003canonymous\u003e:wasm-function[23830]:0x53a08a)\r\nfail:     at System_Runtime_Tests_System_Tests_ArrayTests_VerifyArrayAsIList_System_Array (\u003canonymous\u003e:wasm-function[31042]:0x87e9d5)\r\nfail:     at System_Runtime_Tests_System_Tests_ArrayTests_VerifyArray_System_Array_System_Type_int___int__ (\u003canonymous\u003e:wasm-function[30805]:0x84105b)\r\nfail:     at System_Runtime_Tests_System_Tests_ArrayTests_VerifyArray_System_Array_System_Type_int___int___object (\u003canonymous\u003e:wasm-function[30901]:0x85aa85)\r\nfail:     at System_Runtime_Tests_System_Tests_ArrayTests_CreateInstance_Advanced_System_Type_int___int___object (\u003canonymous\u003e:wasm-function[30900]:0x85a9bd)\r\nfail:     at System_Runtime_Tests_System_Tests_ArrayTests_CreateInstance_System_Type_object (\u003canonymous\u003e:wasm-function[30899]:0x859cf0)\r\nfail:     at corlib_aot_wrapper_gsharedvt_out_sig_pinvoke_void_objobj (\u003canonymous\u003e:wasm-function[67910]:0x1bac49d)\r\nfail:     at corlib_wrapper_runtime_invoke_object_runtime_invoke_sig_void_intptr_intptr_intptr_object_intptr_intptr_intptr (\u003canonymous\u003e:wasm-function[67587]:0x1b7095c)\r\nfail:     at mono_llvmonly_runtime_invoke (\u003canonymous\u003e:wasm-function[5011]:0xe4577)\r\nfail:     at mono_jit_runtime_invoke (\u003canonymous\u003e:wasm-function[4983]:0xe2ce7)\r\nfail:     at do_runtime_invoke (\u003canonymous\u003e:wasm-function[2302]:0x9d5f5)\r\nfail:     at mono_runtime_invoke_checked (\u003canonymous\u003e:wasm-function[2300]:0x9d5a0)\r\nfail:     at mono_runtime_try_invoke_array (\u003canonymous\u003e:wasm-function[2452]:0xa1760)\r\nfail:     at mono_runtime_invoke_array_checked (\u003canonymous\u003e:wasm-function[2456]:0xa1d81)\r\nfail:     at ves_icall_InternalInvoke (\u003canonymous\u003e:wasm-function[1085]:0x7b0ca)\r\nfail:     at ves_icall_InternalInvoke_raw (\u003canonymous\u003e:wasm-function[1281]:0x813b1)\r\nfail:     at aot_wrapper_corlib_System_dot_Reflection_System_dot_Reflection_dot_RuntimeMethodInfo__InternalInvoke_pinvoke_obj_this_objclc_object_5b_5d_bclsc_Exception_26__attrs_2obj_cls1d_Reflection_dRuntimeMethodInfo_objclc_object_5b_5d_bclsc_Exception_26__attrs_2 (\u003canonymous\u003e:wasm-function[62779]:0x19af330)\r\nfail:     at invoke_iiiiii (dotnet.js:12145:32)\r\nfail:     at corlib_System_Reflection_RuntimeMethodInfo_Invoke_object_System_Reflection_BindingFlags_System_Reflection_Binder_object___System_Globalization_CultureInfo (\u003canonymous\u003e:wasm-function[62780]:0x19af8ad)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1_TTestCase_REF_CallTestMethod_object (\u003canonymous\u003e:wasm-function[20157]:0x3c8fb9)\r\nfail:     at invoke_iiii (dotnet.js:12101:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1__c__DisplayClass48_1___InvokeTestMethodAsyncb__1d_TTestCase_REF_MoveNext (\u003canonymous\u003e:wasm-function[20172]:0x3cc1e6)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_INST_TStateMachine_INST__6 (\u003canonymous\u003e:wasm-function[22447]:0x4d8a10)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_Start_TStateMachine_INST_TStateMachine_INST_ (\u003canonymous\u003e:wasm-function[21885]:0x4b3a19)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1__c__DisplayClass48_1_TTestCase_REF__InvokeTestMethodAsyncb__1 (\u003canonymous\u003e:wasm-function[20171]:0x3ca632)\r\nfail:     at corlib_wrapper_delegate_invoke_System_Func_1_System_Threading_Tasks_Task_invoke_TResult (\u003canonymous\u003e:wasm-function[66470]:0x1b09ad4)\r\nfail:     at invoke_iii (dotnet.js:12090:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_ExecutionTimer__AggregateAsyncd__4_MoveNext (\u003canonymous\u003e:wasm-function[20004]:0x3ab6ba)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_Xunit_Sdk_ExecutionTimer__AggregateAsyncd__4_Xunit_Sdk_ExecutionTimer__AggregateAsyncd__4_ (\u003canonymous\u003e:wasm-function[21800]:0x4adf5e)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_ExecutionTimer_AggregateAsync_System_Func_1_System_Threading_Tasks_Task (\u003canonymous\u003e:wasm-function[20002]:0x3ab327)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1__c__DisplayClass48_1_TTestCase_REF__InvokeTestMethodAsyncb__0 (\u003canonymous\u003e:wasm-function[20170]:0x3ca518)\r\nfail:     at corlib_wrapper_delegate_invoke_System_Func_1_System_Threading_Tasks_Task_invoke_TResult (\u003canonymous\u003e:wasm-function[66470]:0x1b09ad4)\r\nfail:     at invoke_iii (dotnet.js:12090:32)\r\nfail:     at xunit_core_Xunit_Sdk_ExceptionAggregator__RunAsyncd__9_MoveNext (\u003canonymous\u003e:wasm-function[23198]:0x504d3d)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_core_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_Xunit_Sdk_ExceptionAggregator__RunAsyncd__9_Xunit_Sdk_ExceptionAggregator__RunAsyncd__9_ (\u003canonymous\u003e:wasm-function[23419]:0x521816)\r\nfail:     at xunit_core_Xunit_Sdk_ExceptionAggregator_RunAsync_System_Func_1_System_Threading_Tasks_Task (\u003canonymous\u003e:wasm-function[23194]:0x5045fa)\r\nfail:     at corlib_aot_wrapper_gsharedvt_out_sig_pinvoke_obj_this_obj (\u003canonymous\u003e:wasm-function[67845]:0x1baab2b)\r\nfail:     at jit_call_cb (\u003canonymous\u003e:wasm-function[9183]:0x1706d2)\r\nfail:     at invoke_vi (dotnet.js:12057:25)\r\nfail:     at mono_llvm_cpp_catch_exception (\u003canonymous\u003e:wasm-function[6009]:0x1043a0)\r\nfail:     at do_jit_call (\u003canonymous\u003e:wasm-function[9142]:0x16f98d)\r\nfail:     at interp_exec_method (\u003canonymous\u003e:wasm-function[9083]:0x1627b9)\r\nfail:     at interp_entry (\u003canonymous\u003e:wasm-function[9125]:0x16ef3b)\r\nfail:     at interp_entry_instance_1 (\u003canonymous\u003e:wasm-function[9198]:0x170b87)\r\nfail:     at corlib_aot_wrapper_gsharedvt_in_sig_void_this_bii (\u003canonymous\u003e:wasm-function[69842]:0x1be36ab)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1_TTestCase_REF_InvokeTestMethodAsync_object (\u003canonymous\u003e:wasm-function[20160]:0x3c9bef)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTestInvoker_InvokeTestMethodAsync_object (\u003canonymous\u003e:wasm-function[20345]:0x3fd5d8)\r\nfail:     at corlib_aot_wrapper_gsharedvt_out_sig_pinvoke_obj_this_obj (\u003canonymous\u003e:wasm-function[67845]:0x1baab2b)\r\nfail:     at jit_call_cb (\u003canonymous\u003e:wasm-function[9183]:0x1706d2)\r\nfail:     at invoke_vi (dotnet.js:12057:25)\r\nfail:     at mono_llvm_cpp_catch_exception (\u003canonymous\u003e:wasm-function[6009]:0x1043a0)\r\nfail:     at do_jit_call (\u003canonymous\u003e:wasm-function[9142]:0x16f98d)\r\nfail:     at interp_exec_method (\u003canonymous\u003e:wasm-function[9083]:0x162673)\r\nfail:     at interp_entry (\u003canonymous\u003e:wasm-function[9125]:0x16ef3b)\r\nfail:     at interp_entry_instance_1 (\u003canonymous\u003e:wasm-function[9198]:0x170b87)\r\nfail:     at corlib_aot_wrapper_gsharedvt_in_sig_void_this_bii (\u003canonymous\u003e:wasm-function[69842]:0x1be36ab)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1_TTestCase_REF__RunAsyncb__47_0 (\u003canonymous\u003e:wasm-function[20162]:0x3c9df4)\r\nfail:     at xunit_execution_dotnet_wrapper_delegate_invoke_System_Func_1_System_Threading_Tasks_Task_1_System_Decimal_invoke_TResult (\u003canonymous\u003e:wasm-function[21281]:0x476b40)\r\nfail:     at invoke_iii (dotnet.js:12090:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_ExceptionAggregator__RunAsyncd__10_1_System_Decimal_MoveNext (\u003canonymous\u003e:wasm-function[21882]:0x4b2db6)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_Xunit_Sdk_ExceptionAggregator__RunAsyncd__10_1_System_Decimal_Xunit_Sdk_ExceptionAggregator__RunAsyncd__10_1_System_Decimal_ (\u003canonymous\u003e:wasm-function[22437]:0x4d7a65)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_ExceptionAggregator_RunAsync_System_Decimal_System_Func_1_System_Threading_Tasks_Task_1_System_Decimal (\u003canonymous\u003e:wasm-function[21881]:0x4b2acd)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1_TTestCase_REF_RunAsync (\u003canonymous\u003e:wasm-function[20159]:0x3c9ab5)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTestRunner_InvokeTestMethodAsync_Xunit_Sdk_ExceptionAggregator (\u003canonymous\u003e:wasm-function[20359]:0x3ff60f)\r\nfail:     at invoke_iiii (dotnet.js:12101:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTestRunner__InvokeTestAsyncd__4_MoveNext (\u003canonymous\u003e:wasm-function[20360]:0x3ffbc9)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_Xunit_Sdk_XunitTestRunner__InvokeTestAsyncd__4_Xunit_Sdk_XunitTestRunner__InvokeTestAsyncd__4_ (\u003canonymous\u003e:wasm-function[21994]:0x4bcc80)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTestRunner_InvokeTestAsync_Xunit_Sdk_ExceptionAggregator (\u003canonymous\u003e:wasm-function[20358]:0x3ff2d0)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestRunner_1__c__DisplayClass43_0_TTestCase_REF__RunAsyncb__0 (\u003canonymous\u003e:wasm-function[20225]:0x3d6750)\r\nfail:     at xunit_execution_dotnet_wrapper_delegate_invoke_System_Func_1_System_Threading_Tasks_Task_1_System_Tuple_2_System_Decimal_string_invoke_TResult (\u003canonymous\u003e:wasm-function[21317]:0x479068)\r\nfail:     at invoke_iii (dotnet.js:12090:32)\r\nfail:     at xunit_core_Xunit_Sdk_ExceptionAggregator__RunAsyncd__10_1_T_REF_MoveNext (\u003canonymous\u003e:wasm-function[23200]:0x505a9d)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_core_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_INST_TStateMachine_INST_ (\u003canonymous\u003e:wasm-function[23565]:0x527c40)\r\nfail:     at xunit_core_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_REF_Start_TStateMachine_INST_TStateMachine_INST_ (\u003canonymous\u003e:wasm-function[23421]:0x521b6e)\r\nfail:     at xunit_core_Xunit_Sdk_ExceptionAggregator_RunAsync_T_REF_System_Func_1_System_Threading_Tasks_Task_1_T_REF (\u003canonymous\u003e:wasm-function[23195]:0x5047c9)\r\nfail:     at invoke_iiii (dotnet.js:12101:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestRunner_1__RunAsyncd__43_TTestCase_REF_MoveNext (\u003canonymous\u003e:wasm-function[20226]:0x3d7ba6)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_INST_TStateMachine_INST__9 (\u003canonymous\u003e:wasm-function[22452]:0x4d99fc)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_REF_Start_TStateMachine_INST_TStateMachine_INST__8 (\u003canonymous\u003e:wasm-function[21894]:0x4b3f1c)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestRunner_1_TTestCase_REF_RunAsync (\u003canonymous\u003e:wasm-function[20223]:0x3d65a3)\r\nfail:     at invoke_iii (dotnet.js:12090:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTheoryTestCaseRunner__RunTestAsyncd__11_MoveNext (\u003canonymous\u003e:wasm-function[20383]:0x40e35d)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_Xunit_Sdk_XunitTheoryTestCaseRunner__RunTestAsyncd__11_Xunit_Sdk_XunitTheoryTestCaseRunner__RunTestAsyncd__11_ (\u003canonymous\u003e:wasm-function[22006]:0x4bde38)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTheoryTestCaseRunner_RunTestAsync (\u003canonymous\u003e:wasm-function[20368]:0x401087)\r\nfail:     at invoke_iii (dotnet.js:12090:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestCaseRunner_1__RunAsyncd__19_TTestCase_REF_MoveNext (\u003canonymous\u003e:wasm-function[20065]:0x3b66d8)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_INST_TStateMachine_INST__1 (\u003canonymous\u003e:wasm-function[22427]:0x4d5fe8)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_REF_Start_TStateMachine_INST_TStateMachine_INST__1 (\u003canonymous\u003e:wasm-function[21862]:0x4b17cd)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestCaseRunner_1_TTestCase_REF_RunAsync (\u003canonymous\u003e:wasm-function[19996]:0x3aaa0e)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTheoryTestCase_RunAsync_Xunit_Abstractions_IMessageSink_Xunit_Sdk_IMessageBus_object___Xunit_Sdk_ExceptionAggregator_System_Threading_CancellationTokenSource (\u003canonymous\u003e:wasm-function[20616]:0x438440)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTestMethodRunner_RunTestCaseAsync_Xunit_Sdk_IXunitTestCase (\u003canonymous\u003e:wasm-function[20356]:0x3ff17d)\r\nfail:     at invoke_iiii (dotnet.js:12101:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestMethodRunner_1__RunTestCasesAsyncd__32_TTestCase_REF_MoveNext (\u003canonymous\u003e:wasm-function[20200]:0x3d4f0e)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_INST_TStateMachine_INST__8 (\u003canonymous\u003e:wasm-function[22449]:0x4d93b8)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_REF_Start_TStateMachine_INST_TStateMachine_INST__7 (\u003canonymous\u003e:wasm-function[21890]:0x4b3c99)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestMethodRunner_1_TTestCase_REF_RunTestCasesAsync (\u003canonymous\u003e:wasm-function[20194]:0x3d1bd6)\r\nfail:     at invoke_iii (dotnet.js:12090:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestMethodRunner_1__RunAsyncd__31_TTestCase_REF_MoveNext (\u003canonymous\u003e:wasm-function[20195]:0x3d2443)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_INST_TStateMachine_INST__7 (\u003canonymous\u003e:wasm-function[22448]:0x4d8ee7)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_REF_Start_TStateMachine_INST_TStateMachine_INST__6 (\u003canonymous\u003e:wasm-function[21889]:0x4b3c22)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestMethodRunner_1_TTestCase_REF_RunAsync (\u003canonymous\u003e:wasm-function[20193]:0x3d1a16)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTestClassRunner_RunTestMethodAsync_Xunit_Abstractions_ITestMethod_Xunit_Abstractions_IReflectionMethodInfo_System_Collections_Generic_IEnumerable_1_Xunit_Sdk_IXunitTestCase_object__ (\u003canonymous\u003e:wasm-function[20288]:0x3e8f05)\r\nfail:     at invoke_iiiiiii (dotnet.js:12233:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestClassRunner_1__RunTestMethodsAsyncd__38_TTestCase_REF_MoveNext (\u003canonymous\u003e:wasm-function[20106]:0x3c17b7)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_INST_TStateMachine_INST__3 (\u003canonymous\u003e:wasm-function[22430]:0x4d69d9)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_REF_Start_TStateMachine_INST_TStateMachine_INST__3 (\u003canonymous\u003e:wasm-function[21870]:0x4b2481)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestClassRunner_1_TTestCase_REF_RunTestMethodsAsync (\u003canonymous\u003e:wasm-function[20093]:0x3baeed)\r\nfail:     at invoke_iii (dotnet.js:12090:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestClassRunner_1__RunAsyncd__37_TTestCase_REF_MoveNext (\u003canonymous\u003e:wasm-function[20101]:0x3bc9d5)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_INST_TStateMachine_INST__2 (\u003canonymous\u003e:wasm-function[22429]:0x4d654b)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_REF_Start_TStateMachine_INST_TStateMachine_INST__2 (\u003canonymous\u003e:wasm-function[21869]:0x4b240a)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestClassRunner_1_TTestCase_REF_RunAsync (\u003canonymous\u003e:wasm-function[20092]:0x3bad2d)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTestCollectionRunner_RunTestClassAsync_Xunit_Abstractions_ITestClass_Xunit_Abstractions_IReflectionTypeInfo_System_Collections_Generic_IEnumerable_1_Xunit_Sdk_IXunitTestCase (\u003canonymous\u003e:wasm-function[20321]:0x3f627b)\r\nfail:     at invoke_iiiiii (dotnet.js:12145:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestCollectionRunner_1__RunTestClassesAsyncd__28_TTestCase_REF_MoveNext (\u003canonymous\u003e:wasm-function[20133]:0x3c7303)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_INST_TStateMachine_INST__5 (\u003canonymous\u003e:wasm-function[22434]:0x4d74ab)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_REF_Start_TStateMachine_INST_TStateMachine_INST__5 (\u003canonymous\u003e:wasm-function[21877]:0x4b2834)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestCollectionRunner_1_TTestCase_REF_RunTestClassesAsync (\u003canonymous\u003e:wasm-function[20124]:0x3c2b49)\r\nfail:     at invoke_iii (dotnet.js:12090:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestCollectionRunner_1__RunAsyncd__27_TTestCase_REF_MoveNext (\u003canonymous\u003e:wasm-function[20125]:0x3c3821)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_INST_TStateMachine_INST__4 (\u003canonymous\u003e:wasm-function[22433]:0x4d701d)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_REF_Start_TStateMachine_INST_TStateMachine_INST__4 (\u003canonymous\u003e:wasm-function[21876]:0x4b27bd)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestCollectionRunner_1_TTestCase_REF_RunAsync (\u003canonymous\u003e:wasm-function[20123]:0x3c2989)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTestAssemblyRunner_RunTestCollectionAsync_Xunit_Sdk_IMessageBus_Xunit_Abstractions_ITestCollection_System_Collections_Generic_IEnumerable_1_Xunit_Sdk_IXunitTestCase_System_Threading_CancellationTokenSource (\u003canonymous\u003e:wasm-function[20244]:0x3deb4b)\r\nfail:     at invoke_iiiiiii (dotnet.js:12233:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestAssemblyRunner_1__RunTestCollectionsAsyncd__42_TTestCase_REF_MoveNext (\u003canonymous\u003e:wasm-function[20053]:0x3b514b)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_INST_TStateMachine_INST__0 (\u003canonymous\u003e:wasm-function[22423]:0x4d5946)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_REF_Start_TStateMachine_INST_TStateMachine_INST__0 (\u003canonymous\u003e:wasm-function[21854]:0x4b146b)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestAssemblyRunner_1_TTestCase_REF_RunTestCollectionsAsync_Xunit_Sdk_IMessageBus_System_Threading_CancellationTokenSource (\u003canonymous\u003e:wasm-function[20040]:0x3b0878)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTestAssemblyRunner__n__0_Xunit_Sdk_IMessageBus_System_Threading_CancellationTokenSource (\u003canonymous\u003e:wasm-function[20246]:0x3ded95)\r\nfail:     at invoke_iiiii (dotnet.js:12167:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTestAssemblyRunner__RunTestCollectionsAsyncd__14_MoveNext (\u003canonymous\u003e:wasm-function[20258]:0x3e0181)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_Xunit_Sdk_XunitTestAssemblyRunner__RunTestCollectionsAsyncd__14_Xunit_Sdk_XunitTestAssemblyRunner__RunTestCollectionsAsyncd__14_ (\u003canonymous\u003e:wasm-function[21898]:0x4b4197)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTestAssemblyRunner_RunTestCollectionsAsync_Xunit_Sdk_IMessageBus_System_Threading_CancellationTokenSource (\u003canonymous\u003e:wasm-function[20243]:0x3de8c5)\r\nfail:     at invoke_iiiii (dotnet.js:12167:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestAssemblyRunner_1__RunAsyncd__41_TTestCase_REF_MoveNext (\u003canonymous\u003e:wasm-function[20048]:0x3b2076)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_INST_TStateMachine_INST_ (\u003canonymous\u003e:wasm-function[22422]:0x4d54a2)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_REF_Start_TStateMachine_INST_TStateMachine_INST_ (\u003canonymous\u003e:wasm-function[21853]:0x4b13f4)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestAssemblyRunner_1_TTestCase_REF_RunAsync (\u003canonymous\u003e:wasm-function[20039]:0x3b0634)\r\nfail:     at invoke_iii (dotnet.js:12090:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTestFrameworkExecutor__RunTestCasesd__8_MoveNext (\u003canonymous\u003e:wasm-function[20613]:0x437811)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_Xunit_Sdk_XunitTestFrameworkExecutor__RunTestCasesd__8_Xunit_Sdk_XunitTestFrameworkExecutor__RunTestCasesd__8_ (\u003canonymous\u003e:wasm-function[22063]:0x4c1409)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTestFrameworkExecutor_RunTestCases_System_Collections_Generic_IEnumerable_1_Xunit_Sdk_IXunitTestCase_Xunit_Abstractions_IMessageSink_Xunit_Abstractions_ITestFrameworkExecutionOptions (\u003canonymous\u003e:wasm-function[20611]:0x4372c4)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestFrameworkExecutor_1_TTestCase_REF_RunTests_System_Collections_Generic_IEnumerable_1_Xunit_Abstractions_ITestCase_Xunit_Abstractions_IMessageSink_Xunit_Abstractions_ITestFrameworkExecutionOptions (\u003canonymous\u003e:wasm-function[20486]:0x419c9f)\r\nfail:     at xunit_runner_utility_netcoreapp10_Xunit_Xunit2_RunTests_System_Collections_Generic_IEnumerable_1_Xunit_Abstractions_ITestCase_Xunit_Abstractions_IMessageSink_Xunit_Abstractions_ITestFrameworkExecutionOptions (\u003canonymous\u003e:wasm-function[16069]:0x23a780)\r\nfail:     at invoke_viiiii (dotnet.js:12200:25)\r\nfail:     at Microsoft_DotNet_XHarness_TestRunners_Xunit_Microsoft_DotNet_XHarness_TestRunners_Xunit_ThreadlessXunitTestRunner__Rund__0_MoveNext (\u003canonymous\u003e:wasm-function[93660]:0x25ed865)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at Microsoft_DotNet_XHarness_TestRunners_Xunit_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_Microsoft_DotNet_XHarness_TestRunners_Xunit_ThreadlessXunitTestRunner__Rund__0_Microsoft_DotNet_XHarness_TestRunners_Xunit_ThreadlessXunitTestRunner__Rund__0_ (\u003canonymous\u003e:wasm-function[93784]:0x25fc863)\r\nfail:     at Microsoft_DotNet_XHarness_TestRunners_Xunit_Microsoft_DotNet_XHarness_TestRunners_Xunit_ThreadlessXunitTestRunner_Run_string_bool_Xunit_XunitFilters (\u003canonymous\u003e:wasm-function[93647]:0x25e89b0)\r\nfail:     at invoke_iiiii (dotnet.js:12167:32)\r\nfail:     at Microsoft_DotNet_XHarness_TestRunners_Xunit_Microsoft_DotNet_XHarness_TestRunners_Xunit_WasmApplicationEntryPoint__Rund__24_MoveNext (\u003canonymous\u003e:wasm-function[93681]:0x25f3781)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at Microsoft_DotNet_XHarness_TestRunners_Xunit_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_Microsoft_DotNet_XHarness_TestRunners_Xunit_WasmApplicationEntryPoint__Rund__24_Microsoft_DotNet_XHarness_TestRunners_Xunit_WasmApplicationEntryPoint__Rund__24_ (\u003canonymous\u003e:wasm-function[93846]:0x25fee7a)\r\nfail:     at Microsoft_DotNet_XHarness_TestRunners_Xunit_Microsoft_DotNet_XHarness_TestRunners_Xunit_WasmApplicationEntryPoint_Run (\u003canonymous\u003e:wasm-function[93678]:0x25efee1)\r\nfail:     at invoke_iii (dotnet.js:12090:32)\r\nfail:     at WasmTestRunner_SimpleWasmTestRunner__Maind__0_MoveNext (\u003canonymous\u003e:wasm-function[24567]:0x57f1dc)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at WasmTestRunner_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_SimpleWasmTestRunner__Maind__0_SimpleWasmTestRunner__Maind__0_ (\u003canonymous\u003e:wasm-function[24609]:0x58324f)\r\nfail:     at WasmTestRunner_SimpleWasmTestRunner_Main_string__ (\u003canonymous\u003e:wasm-function[24563]:0x57c502)\r\nfail:     at corlib_aot_wrapper_gsharedvt_out_sig_pinvoke_obj_obj (\u003canonymous\u003e:wasm-function[67822]:0x1baa40e)\r\nfail:     at invoke_viii (dotnet.js:12112:25)\r\nfail:     at corlib_wrapper_runtime_invoke_object_runtime_invoke_sig_void_intptr_intptr_intptr_object_intptr_intptr_intptr (\u003canonymous\u003e:wasm-function[67587]:0x1b70bcc)\r\nfail:     at mono_llvmonly_runtime_invoke (\u003canonymous\u003e:wasm-function[5011]:0xe4577)\r\nfail:     at mono_jit_runtime_invoke (\u003canonymous\u003e:wasm-function[4983]:0xe2ce7)\r\nfail:     at do_runtime_invoke (\u003canonymous\u003e:wasm-function[2302]:0x9d5f5)\r\nfail:     at mono_runtime_try_invoke (\u003canonymous\u003e:wasm-function[2311]:0x9dbea)\r\nfail:     at mono_runtime_invoke (\u003canonymous\u003e:wasm-function[2386]:0x9fc2c)\r\nfail:     at mono_wasm_invoke_method (\u003canonymous\u003e:wasm-function[101777]:0x290fc59)\r\nfail:     at Object.Module._mono_wasm_invoke_method [as invoke_method] (dotnet.js:11320:117)\r\nfail:     at Object._call_method_with_converted_args (dotnet.js:9235:30)\r\nfail:     at Object.call_method (dotnet.js:9195:18)\r\nfail:     at dotnet.js:9454:29\r\nfail:     at Object.call_assembly_entry_point (dotnet.js:9461:66)\r\nfail:     at Object.init (runtime.js:355:24)\r\nfail:     at Object.config.loaded_cb (runtime.js:241:8)\r\nfail:     at Object._finalize_startup (dotnet.js:7411:11)\r\nfail:     at onPendingRequestComplete (dotnet.js:7448:14)\r\nfail:     at processFetchResponseBuffer (dotnet.js:7463:8)\r\ninfo: Process v8 exited with 1\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONBzu4g==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMzYxNzgyNw==",
                                           "createdAt":  "2021-05-06T15:31:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n[System.Runtime.Tests](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-52004-merge-3dd81fa5d0b34cd8a4/System.Runtime.Tests/console.c20daf34.log?sv=2019-07-07\u0026se=2021-05-26T09%3A41%3A25Z\u0026sr=c\u0026sp=rl\u0026sig=SMjMqOkkeGjsu3Qw%2BsJS%2BdyJoKkGBOex3M5va3FGvNk%3D)\r\n\r\nSeen in https://github.com/dotnet/runtime/pull/52004/checks?check_run_id=2517540700\r\n\r\n```\r\nfail: console.error: RuntimeError: invalid index into function table\r\nfail: console.error: RuntimeError: invalid index into function table\r\n\r\nfail:     at corlib_System_Type_Equals_System_Type (\u003canonymous\u003e:wasm-function[54851]:0x1700cf7)\r\nfail:     at xunit_assert_Xunit_Assert_Throws_System_Type_System_Exception (\u003canonymous\u003e:wasm-function[23832]:0x53a43d)\r\nfail:     at xunit_assert_Xunit_Assert_Throws_T_REF_System_Action (\u003canonymous\u003e:wasm-function[23830]:0x53a08a)\r\nfail:     at System_Runtime_Tests_System_Tests_ArrayTests_VerifyArrayAsIList_System_Array (\u003canonymous\u003e:wasm-function[31042]:0x87e9d5)\r\nfail:     at System_Runtime_Tests_System_Tests_ArrayTests_VerifyArray_System_Array_System_Type_int___int__ (\u003canonymous\u003e:wasm-function[30805]:0x84105b)\r\nfail:     at System_Runtime_Tests_System_Tests_ArrayTests_VerifyArray_System_Array_System_Type_int___int___object (\u003canonymous\u003e:wasm-function[30901]:0x85aa85)\r\nfail:     at System_Runtime_Tests_System_Tests_ArrayTests_CreateInstance_Advanced_System_Type_int___int___object (\u003canonymous\u003e:wasm-function[30900]:0x85a9bd)\r\nfail:     at System_Runtime_Tests_System_Tests_ArrayTests_CreateInstance_System_Type_object (\u003canonymous\u003e:wasm-function[30899]:0x859cf0)\r\nfail:     at corlib_aot_wrapper_gsharedvt_out_sig_pinvoke_void_objobj (\u003canonymous\u003e:wasm-function[67910]:0x1bac49d)\r\nfail:     at corlib_wrapper_runtime_invoke_object_runtime_invoke_sig_void_intptr_intptr_intptr_object_intptr_intptr_intptr (\u003canonymous\u003e:wasm-function[67587]:0x1b7095c)\r\nfail:     at mono_llvmonly_runtime_invoke (\u003canonymous\u003e:wasm-function[5011]:0xe4577)\r\nfail:     at mono_jit_runtime_invoke (\u003canonymous\u003e:wasm-function[4983]:0xe2ce7)\r\nfail:     at do_runtime_invoke (\u003canonymous\u003e:wasm-function[2302]:0x9d5f5)\r\nfail:     at mono_runtime_invoke_checked (\u003canonymous\u003e:wasm-function[2300]:0x9d5a0)\r\nfail:     at mono_runtime_try_invoke_array (\u003canonymous\u003e:wasm-function[2452]:0xa1760)\r\nfail:     at mono_runtime_invoke_array_checked (\u003canonymous\u003e:wasm-function[2456]:0xa1d81)\r\nfail:     at ves_icall_InternalInvoke (\u003canonymous\u003e:wasm-function[1085]:0x7b0ca)\r\nfail:     at ves_icall_InternalInvoke_raw (\u003canonymous\u003e:wasm-function[1281]:0x813b1)\r\nfail:     at aot_wrapper_corlib_System_dot_Reflection_System_dot_Reflection_dot_RuntimeMethodInfo__InternalInvoke_pinvoke_obj_this_objclc_object_5b_5d_bclsc_Exception_26__attrs_2obj_cls1d_Reflection_dRuntimeMethodInfo_objclc_object_5b_5d_bclsc_Exception_26__attrs_2 (\u003canonymous\u003e:wasm-function[62779]:0x19af330)\r\nfail:     at invoke_iiiiii (dotnet.js:12145:32)\r\nfail:     at corlib_System_Reflection_RuntimeMethodInfo_Invoke_object_System_Reflection_BindingFlags_System_Reflection_Binder_object___System_Globalization_CultureInfo (\u003canonymous\u003e:wasm-function[62780]:0x19af8ad)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1_TTestCase_REF_CallTestMethod_object (\u003canonymous\u003e:wasm-function[20157]:0x3c8fb9)\r\nfail:     at invoke_iiii (dotnet.js:12101:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1__c__DisplayClass48_1___InvokeTestMethodAsyncb__1d_TTestCase_REF_MoveNext (\u003canonymous\u003e:wasm-function[20172]:0x3cc1e6)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_INST_TStateMachine_INST__6 (\u003canonymous\u003e:wasm-function[22447]:0x4d8a10)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_Start_TStateMachine_INST_TStateMachine_INST_ (\u003canonymous\u003e:wasm-function[21885]:0x4b3a19)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1__c__DisplayClass48_1_TTestCase_REF__InvokeTestMethodAsyncb__1 (\u003canonymous\u003e:wasm-function[20171]:0x3ca632)\r\nfail:     at corlib_wrapper_delegate_invoke_System_Func_1_System_Threading_Tasks_Task_invoke_TResult (\u003canonymous\u003e:wasm-function[66470]:0x1b09ad4)\r\nfail:     at invoke_iii (dotnet.js:12090:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_ExecutionTimer__AggregateAsyncd__4_MoveNext (\u003canonymous\u003e:wasm-function[20004]:0x3ab6ba)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_Xunit_Sdk_ExecutionTimer__AggregateAsyncd__4_Xunit_Sdk_ExecutionTimer__AggregateAsyncd__4_ (\u003canonymous\u003e:wasm-function[21800]:0x4adf5e)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_ExecutionTimer_AggregateAsync_System_Func_1_System_Threading_Tasks_Task (\u003canonymous\u003e:wasm-function[20002]:0x3ab327)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1__c__DisplayClass48_1_TTestCase_REF__InvokeTestMethodAsyncb__0 (\u003canonymous\u003e:wasm-function[20170]:0x3ca518)\r\nfail:     at corlib_wrapper_delegate_invoke_System_Func_1_System_Threading_Tasks_Task_invoke_TResult (\u003canonymous\u003e:wasm-function[66470]:0x1b09ad4)\r\nfail:     at invoke_iii (dotnet.js:12090:32)\r\nfail:     at xunit_core_Xunit_Sdk_ExceptionAggregator__RunAsyncd__9_MoveNext (\u003canonymous\u003e:wasm-function[23198]:0x504d3d)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_core_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_Xunit_Sdk_ExceptionAggregator__RunAsyncd__9_Xunit_Sdk_ExceptionAggregator__RunAsyncd__9_ (\u003canonymous\u003e:wasm-function[23419]:0x521816)\r\nfail:     at xunit_core_Xunit_Sdk_ExceptionAggregator_RunAsync_System_Func_1_System_Threading_Tasks_Task (\u003canonymous\u003e:wasm-function[23194]:0x5045fa)\r\nfail:     at corlib_aot_wrapper_gsharedvt_out_sig_pinvoke_obj_this_obj (\u003canonymous\u003e:wasm-function[67845]:0x1baab2b)\r\nfail:     at jit_call_cb (\u003canonymous\u003e:wasm-function[9183]:0x1706d2)\r\nfail:     at invoke_vi (dotnet.js:12057:25)\r\nfail:     at mono_llvm_cpp_catch_exception (\u003canonymous\u003e:wasm-function[6009]:0x1043a0)\r\nfail:     at do_jit_call (\u003canonymous\u003e:wasm-function[9142]:0x16f98d)\r\nfail:     at interp_exec_method (\u003canonymous\u003e:wasm-function[9083]:0x1627b9)\r\nfail:     at interp_entry (\u003canonymous\u003e:wasm-function[9125]:0x16ef3b)\r\nfail:     at interp_entry_instance_1 (\u003canonymous\u003e:wasm-function[9198]:0x170b87)\r\nfail:     at corlib_aot_wrapper_gsharedvt_in_sig_void_this_bii (\u003canonymous\u003e:wasm-function[69842]:0x1be36ab)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1_TTestCase_REF_InvokeTestMethodAsync_object (\u003canonymous\u003e:wasm-function[20160]:0x3c9bef)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTestInvoker_InvokeTestMethodAsync_object (\u003canonymous\u003e:wasm-function[20345]:0x3fd5d8)\r\nfail:     at corlib_aot_wrapper_gsharedvt_out_sig_pinvoke_obj_this_obj (\u003canonymous\u003e:wasm-function[67845]:0x1baab2b)\r\nfail:     at jit_call_cb (\u003canonymous\u003e:wasm-function[9183]:0x1706d2)\r\nfail:     at invoke_vi (dotnet.js:12057:25)\r\nfail:     at mono_llvm_cpp_catch_exception (\u003canonymous\u003e:wasm-function[6009]:0x1043a0)\r\nfail:     at do_jit_call (\u003canonymous\u003e:wasm-function[9142]:0x16f98d)\r\nfail:     at interp_exec_method (\u003canonymous\u003e:wasm-function[9083]:0x162673)\r\nfail:     at interp_entry (\u003canonymous\u003e:wasm-function[9125]:0x16ef3b)\r\nfail:     at interp_entry_instance_1 (\u003canonymous\u003e:wasm-function[9198]:0x170b87)\r\nfail:     at corlib_aot_wrapper_gsharedvt_in_sig_void_this_bii (\u003canonymous\u003e:wasm-function[69842]:0x1be36ab)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1_TTestCase_REF__RunAsyncb__47_0 (\u003canonymous\u003e:wasm-function[20162]:0x3c9df4)\r\nfail:     at xunit_execution_dotnet_wrapper_delegate_invoke_System_Func_1_System_Threading_Tasks_Task_1_System_Decimal_invoke_TResult (\u003canonymous\u003e:wasm-function[21281]:0x476b40)\r\nfail:     at invoke_iii (dotnet.js:12090:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_ExceptionAggregator__RunAsyncd__10_1_System_Decimal_MoveNext (\u003canonymous\u003e:wasm-function[21882]:0x4b2db6)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_Xunit_Sdk_ExceptionAggregator__RunAsyncd__10_1_System_Decimal_Xunit_Sdk_ExceptionAggregator__RunAsyncd__10_1_System_Decimal_ (\u003canonymous\u003e:wasm-function[22437]:0x4d7a65)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_ExceptionAggregator_RunAsync_System_Decimal_System_Func_1_System_Threading_Tasks_Task_1_System_Decimal (\u003canonymous\u003e:wasm-function[21881]:0x4b2acd)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1_TTestCase_REF_RunAsync (\u003canonymous\u003e:wasm-function[20159]:0x3c9ab5)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTestRunner_InvokeTestMethodAsync_Xunit_Sdk_ExceptionAggregator (\u003canonymous\u003e:wasm-function[20359]:0x3ff60f)\r\nfail:     at invoke_iiii (dotnet.js:12101:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTestRunner__InvokeTestAsyncd__4_MoveNext (\u003canonymous\u003e:wasm-function[20360]:0x3ffbc9)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_Xunit_Sdk_XunitTestRunner__InvokeTestAsyncd__4_Xunit_Sdk_XunitTestRunner__InvokeTestAsyncd__4_ (\u003canonymous\u003e:wasm-function[21994]:0x4bcc80)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTestRunner_InvokeTestAsync_Xunit_Sdk_ExceptionAggregator (\u003canonymous\u003e:wasm-function[20358]:0x3ff2d0)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestRunner_1__c__DisplayClass43_0_TTestCase_REF__RunAsyncb__0 (\u003canonymous\u003e:wasm-function[20225]:0x3d6750)\r\nfail:     at xunit_execution_dotnet_wrapper_delegate_invoke_System_Func_1_System_Threading_Tasks_Task_1_System_Tuple_2_System_Decimal_string_invoke_TResult (\u003canonymous\u003e:wasm-function[21317]:0x479068)\r\nfail:     at invoke_iii (dotnet.js:12090:32)\r\nfail:     at xunit_core_Xunit_Sdk_ExceptionAggregator__RunAsyncd__10_1_T_REF_MoveNext (\u003canonymous\u003e:wasm-function[23200]:0x505a9d)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_core_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_INST_TStateMachine_INST_ (\u003canonymous\u003e:wasm-function[23565]:0x527c40)\r\nfail:     at xunit_core_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_REF_Start_TStateMachine_INST_TStateMachine_INST_ (\u003canonymous\u003e:wasm-function[23421]:0x521b6e)\r\nfail:     at xunit_core_Xunit_Sdk_ExceptionAggregator_RunAsync_T_REF_System_Func_1_System_Threading_Tasks_Task_1_T_REF (\u003canonymous\u003e:wasm-function[23195]:0x5047c9)\r\nfail:     at invoke_iiii (dotnet.js:12101:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestRunner_1__RunAsyncd__43_TTestCase_REF_MoveNext (\u003canonymous\u003e:wasm-function[20226]:0x3d7ba6)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_INST_TStateMachine_INST__9 (\u003canonymous\u003e:wasm-function[22452]:0x4d99fc)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_REF_Start_TStateMachine_INST_TStateMachine_INST__8 (\u003canonymous\u003e:wasm-function[21894]:0x4b3f1c)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestRunner_1_TTestCase_REF_RunAsync (\u003canonymous\u003e:wasm-function[20223]:0x3d65a3)\r\nfail:     at invoke_iii (dotnet.js:12090:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTheoryTestCaseRunner__RunTestAsyncd__11_MoveNext (\u003canonymous\u003e:wasm-function[20383]:0x40e35d)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_Xunit_Sdk_XunitTheoryTestCaseRunner__RunTestAsyncd__11_Xunit_Sdk_XunitTheoryTestCaseRunner__RunTestAsyncd__11_ (\u003canonymous\u003e:wasm-function[22006]:0x4bde38)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTheoryTestCaseRunner_RunTestAsync (\u003canonymous\u003e:wasm-function[20368]:0x401087)\r\nfail:     at invoke_iii (dotnet.js:12090:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestCaseRunner_1__RunAsyncd__19_TTestCase_REF_MoveNext (\u003canonymous\u003e:wasm-function[20065]:0x3b66d8)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_INST_TStateMachine_INST__1 (\u003canonymous\u003e:wasm-function[22427]:0x4d5fe8)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_REF_Start_TStateMachine_INST_TStateMachine_INST__1 (\u003canonymous\u003e:wasm-function[21862]:0x4b17cd)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestCaseRunner_1_TTestCase_REF_RunAsync (\u003canonymous\u003e:wasm-function[19996]:0x3aaa0e)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTheoryTestCase_RunAsync_Xunit_Abstractions_IMessageSink_Xunit_Sdk_IMessageBus_object___Xunit_Sdk_ExceptionAggregator_System_Threading_CancellationTokenSource (\u003canonymous\u003e:wasm-function[20616]:0x438440)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTestMethodRunner_RunTestCaseAsync_Xunit_Sdk_IXunitTestCase (\u003canonymous\u003e:wasm-function[20356]:0x3ff17d)\r\nfail:     at invoke_iiii (dotnet.js:12101:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestMethodRunner_1__RunTestCasesAsyncd__32_TTestCase_REF_MoveNext (\u003canonymous\u003e:wasm-function[20200]:0x3d4f0e)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_INST_TStateMachine_INST__8 (\u003canonymous\u003e:wasm-function[22449]:0x4d93b8)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_REF_Start_TStateMachine_INST_TStateMachine_INST__7 (\u003canonymous\u003e:wasm-function[21890]:0x4b3c99)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestMethodRunner_1_TTestCase_REF_RunTestCasesAsync (\u003canonymous\u003e:wasm-function[20194]:0x3d1bd6)\r\nfail:     at invoke_iii (dotnet.js:12090:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestMethodRunner_1__RunAsyncd__31_TTestCase_REF_MoveNext (\u003canonymous\u003e:wasm-function[20195]:0x3d2443)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_INST_TStateMachine_INST__7 (\u003canonymous\u003e:wasm-function[22448]:0x4d8ee7)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_REF_Start_TStateMachine_INST_TStateMachine_INST__6 (\u003canonymous\u003e:wasm-function[21889]:0x4b3c22)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestMethodRunner_1_TTestCase_REF_RunAsync (\u003canonymous\u003e:wasm-function[20193]:0x3d1a16)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTestClassRunner_RunTestMethodAsync_Xunit_Abstractions_ITestMethod_Xunit_Abstractions_IReflectionMethodInfo_System_Collections_Generic_IEnumerable_1_Xunit_Sdk_IXunitTestCase_object__ (\u003canonymous\u003e:wasm-function[20288]:0x3e8f05)\r\nfail:     at invoke_iiiiiii (dotnet.js:12233:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestClassRunner_1__RunTestMethodsAsyncd__38_TTestCase_REF_MoveNext (\u003canonymous\u003e:wasm-function[20106]:0x3c17b7)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_INST_TStateMachine_INST__3 (\u003canonymous\u003e:wasm-function[22430]:0x4d69d9)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_REF_Start_TStateMachine_INST_TStateMachine_INST__3 (\u003canonymous\u003e:wasm-function[21870]:0x4b2481)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestClassRunner_1_TTestCase_REF_RunTestMethodsAsync (\u003canonymous\u003e:wasm-function[20093]:0x3baeed)\r\nfail:     at invoke_iii (dotnet.js:12090:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestClassRunner_1__RunAsyncd__37_TTestCase_REF_MoveNext (\u003canonymous\u003e:wasm-function[20101]:0x3bc9d5)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_INST_TStateMachine_INST__2 (\u003canonymous\u003e:wasm-function[22429]:0x4d654b)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_REF_Start_TStateMachine_INST_TStateMachine_INST__2 (\u003canonymous\u003e:wasm-function[21869]:0x4b240a)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestClassRunner_1_TTestCase_REF_RunAsync (\u003canonymous\u003e:wasm-function[20092]:0x3bad2d)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTestCollectionRunner_RunTestClassAsync_Xunit_Abstractions_ITestClass_Xunit_Abstractions_IReflectionTypeInfo_System_Collections_Generic_IEnumerable_1_Xunit_Sdk_IXunitTestCase (\u003canonymous\u003e:wasm-function[20321]:0x3f627b)\r\nfail:     at invoke_iiiiii (dotnet.js:12145:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestCollectionRunner_1__RunTestClassesAsyncd__28_TTestCase_REF_MoveNext (\u003canonymous\u003e:wasm-function[20133]:0x3c7303)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_INST_TStateMachine_INST__5 (\u003canonymous\u003e:wasm-function[22434]:0x4d74ab)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_REF_Start_TStateMachine_INST_TStateMachine_INST__5 (\u003canonymous\u003e:wasm-function[21877]:0x4b2834)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestCollectionRunner_1_TTestCase_REF_RunTestClassesAsync (\u003canonymous\u003e:wasm-function[20124]:0x3c2b49)\r\nfail:     at invoke_iii (dotnet.js:12090:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestCollectionRunner_1__RunAsyncd__27_TTestCase_REF_MoveNext (\u003canonymous\u003e:wasm-function[20125]:0x3c3821)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_INST_TStateMachine_INST__4 (\u003canonymous\u003e:wasm-function[22433]:0x4d701d)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_REF_Start_TStateMachine_INST_TStateMachine_INST__4 (\u003canonymous\u003e:wasm-function[21876]:0x4b27bd)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestCollectionRunner_1_TTestCase_REF_RunAsync (\u003canonymous\u003e:wasm-function[20123]:0x3c2989)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTestAssemblyRunner_RunTestCollectionAsync_Xunit_Sdk_IMessageBus_Xunit_Abstractions_ITestCollection_System_Collections_Generic_IEnumerable_1_Xunit_Sdk_IXunitTestCase_System_Threading_CancellationTokenSource (\u003canonymous\u003e:wasm-function[20244]:0x3deb4b)\r\nfail:     at invoke_iiiiiii (dotnet.js:12233:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestAssemblyRunner_1__RunTestCollectionsAsyncd__42_TTestCase_REF_MoveNext (\u003canonymous\u003e:wasm-function[20053]:0x3b514b)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_INST_TStateMachine_INST__0 (\u003canonymous\u003e:wasm-function[22423]:0x4d5946)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_REF_Start_TStateMachine_INST_TStateMachine_INST__0 (\u003canonymous\u003e:wasm-function[21854]:0x4b146b)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestAssemblyRunner_1_TTestCase_REF_RunTestCollectionsAsync_Xunit_Sdk_IMessageBus_System_Threading_CancellationTokenSource (\u003canonymous\u003e:wasm-function[20040]:0x3b0878)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTestAssemblyRunner__n__0_Xunit_Sdk_IMessageBus_System_Threading_CancellationTokenSource (\u003canonymous\u003e:wasm-function[20246]:0x3ded95)\r\nfail:     at invoke_iiiii (dotnet.js:12167:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTestAssemblyRunner__RunTestCollectionsAsyncd__14_MoveNext (\u003canonymous\u003e:wasm-function[20258]:0x3e0181)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_Xunit_Sdk_XunitTestAssemblyRunner__RunTestCollectionsAsyncd__14_Xunit_Sdk_XunitTestAssemblyRunner__RunTestCollectionsAsyncd__14_ (\u003canonymous\u003e:wasm-function[21898]:0x4b4197)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTestAssemblyRunner_RunTestCollectionsAsync_Xunit_Sdk_IMessageBus_System_Threading_CancellationTokenSource (\u003canonymous\u003e:wasm-function[20243]:0x3de8c5)\r\nfail:     at invoke_iiiii (dotnet.js:12167:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestAssemblyRunner_1__RunAsyncd__41_TTestCase_REF_MoveNext (\u003canonymous\u003e:wasm-function[20048]:0x3b2076)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_INST_TStateMachine_INST_ (\u003canonymous\u003e:wasm-function[22422]:0x4d54a2)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_REF_Start_TStateMachine_INST_TStateMachine_INST_ (\u003canonymous\u003e:wasm-function[21853]:0x4b13f4)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestAssemblyRunner_1_TTestCase_REF_RunAsync (\u003canonymous\u003e:wasm-function[20039]:0x3b0634)\r\nfail:     at invoke_iii (dotnet.js:12090:32)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTestFrameworkExecutor__RunTestCasesd__8_MoveNext (\u003canonymous\u003e:wasm-function[20613]:0x437811)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at xunit_execution_dotnet_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_Xunit_Sdk_XunitTestFrameworkExecutor__RunTestCasesd__8_Xunit_Sdk_XunitTestFrameworkExecutor__RunTestCasesd__8_ (\u003canonymous\u003e:wasm-function[22063]:0x4c1409)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_XunitTestFrameworkExecutor_RunTestCases_System_Collections_Generic_IEnumerable_1_Xunit_Sdk_IXunitTestCase_Xunit_Abstractions_IMessageSink_Xunit_Abstractions_ITestFrameworkExecutionOptions (\u003canonymous\u003e:wasm-function[20611]:0x4372c4)\r\nfail:     at xunit_execution_dotnet_Xunit_Sdk_TestFrameworkExecutor_1_TTestCase_REF_RunTests_System_Collections_Generic_IEnumerable_1_Xunit_Abstractions_ITestCase_Xunit_Abstractions_IMessageSink_Xunit_Abstractions_ITestFrameworkExecutionOptions (\u003canonymous\u003e:wasm-function[20486]:0x419c9f)\r\nfail:     at xunit_runner_utility_netcoreapp10_Xunit_Xunit2_RunTests_System_Collections_Generic_IEnumerable_1_Xunit_Abstractions_ITestCase_Xunit_Abstractions_IMessageSink_Xunit_Abstractions_ITestFrameworkExecutionOptions (\u003canonymous\u003e:wasm-function[16069]:0x23a780)\r\nfail:     at invoke_viiiii (dotnet.js:12200:25)\r\nfail:     at Microsoft_DotNet_XHarness_TestRunners_Xunit_Microsoft_DotNet_XHarness_TestRunners_Xunit_ThreadlessXunitTestRunner__Rund__0_MoveNext (\u003canonymous\u003e:wasm-function[93660]:0x25ed865)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at Microsoft_DotNet_XHarness_TestRunners_Xunit_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_Microsoft_DotNet_XHarness_TestRunners_Xunit_ThreadlessXunitTestRunner__Rund__0_Microsoft_DotNet_XHarness_TestRunners_Xunit_ThreadlessXunitTestRunner__Rund__0_ (\u003canonymous\u003e:wasm-function[93784]:0x25fc863)\r\nfail:     at Microsoft_DotNet_XHarness_TestRunners_Xunit_Microsoft_DotNet_XHarness_TestRunners_Xunit_ThreadlessXunitTestRunner_Run_string_bool_Xunit_XunitFilters (\u003canonymous\u003e:wasm-function[93647]:0x25e89b0)\r\nfail:     at invoke_iiiii (dotnet.js:12167:32)\r\nfail:     at Microsoft_DotNet_XHarness_TestRunners_Xunit_Microsoft_DotNet_XHarness_TestRunners_Xunit_WasmApplicationEntryPoint__Rund__24_MoveNext (\u003canonymous\u003e:wasm-function[93681]:0x25f3781)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at Microsoft_DotNet_XHarness_TestRunners_Xunit_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_Microsoft_DotNet_XHarness_TestRunners_Xunit_WasmApplicationEntryPoint__Rund__24_Microsoft_DotNet_XHarness_TestRunners_Xunit_WasmApplicationEntryPoint__Rund__24_ (\u003canonymous\u003e:wasm-function[93846]:0x25fee7a)\r\nfail:     at Microsoft_DotNet_XHarness_TestRunners_Xunit_Microsoft_DotNet_XHarness_TestRunners_Xunit_WasmApplicationEntryPoint_Run (\u003canonymous\u003e:wasm-function[93678]:0x25efee1)\r\nfail:     at invoke_iii (dotnet.js:12090:32)\r\nfail:     at WasmTestRunner_SimpleWasmTestRunner__Maind__0_MoveNext (\u003canonymous\u003e:wasm-function[24567]:0x57f1dc)\r\nfail:     at invoke_vii (dotnet.js:12079:25)\r\nfail:     at WasmTestRunner_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_SimpleWasmTestRunner__Maind__0_SimpleWasmTestRunner__Maind__0_ (\u003canonymous\u003e:wasm-function[24609]:0x58324f)\r\nfail:     at WasmTestRunner_SimpleWasmTestRunner_Main_string__ (\u003canonymous\u003e:wasm-function[24563]:0x57c502)\r\nfail:     at corlib_aot_wrapper_gsharedvt_out_sig_pinvoke_obj_obj (\u003canonymous\u003e:wasm-function[67822]:0x1baa40e)\r\nfail:     at invoke_viii (dotnet.js:12112:25)\r\nfail:     at corlib_wrapper_runtime_invoke_object_runtime_invoke_sig_void_intptr_intptr_intptr_object_intptr_intptr_intptr (\u003canonymous\u003e:wasm-function[67587]:0x1b70bcc)\r\nfail:     at mono_llvmonly_runtime_invoke (\u003canonymous\u003e:wasm-function[5011]:0xe4577)\r\nfail:     at mono_jit_runtime_invoke (\u003canonymous\u003e:wasm-function[4983]:0xe2ce7)\r\nfail:     at do_runtime_invoke (\u003canonymous\u003e:wasm-function[2302]:0x9d5f5)\r\nfail:     at mono_runtime_try_invoke (\u003canonymous\u003e:wasm-function[2311]:0x9dbea)\r\nfail:     at mono_runtime_invoke (\u003canonymous\u003e:wasm-function[2386]:0x9fc2c)\r\nfail:     at mono_wasm_invoke_method (\u003canonymous\u003e:wasm-function[101777]:0x290fc59)\r\nfail:     at Object.Module._mono_wasm_invoke_method [as invoke_method] (dotnet.js:11320:117)\r\nfail:     at Object._call_method_with_converted_args (dotnet.js:9235:30)\r\nfail:     at Object.call_method (dotnet.js:9195:18)\r\nfail:     at dotnet.js:9454:29\r\nfail:     at Object.call_assembly_entry_point (dotnet.js:9461:66)\r\nfail:     at Object.init (runtime.js:355:24)\r\nfail:     at Object.config.loaded_cb (runtime.js:241:8)\r\nfail:     at Object._finalize_startup (dotnet.js:7411:11)\r\nfail:     at onPendingRequestComplete (dotnet.js:7448:14)\r\nfail:     at processFetchResponseBuffer (dotnet.js:7463:8)\r\ninfo: Process v8 exited with 1\r\n```\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eradical\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-wasm`, `area-Codegen-AOT-mono`, `wasm-aot-test`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-05-06T15:31:07Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzNTM5NTQ1Mw==",
                                           "createdAt":  "2021-05-08T15:04:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vargaz",
                                           "body":  "Sometimes it fails in the WaitHandle tests, a small testcase:\r\n```\r\n        WaitHandle toSignal = new Mutex();\r\n        AutoResetEvent toWaitOn = new AutoResetEvent(false);\r\n\r\n        toWaitOn.Set();\r\n\r\n        try {\r\n            WaitHandle.SignalAndWait (toSignal, toWaitOn);\r\n        } catch (Exception ex) {\r\n            Console.WriteLine (\"EX: \" + ex);\r\n        }\r\n\r\n        toWaitOn.WaitOne(0);\r\n```\r\nThis runs with the interpreter, and hangs with AOT.",
                                           "updatedAt":  "2021-05-08T15:04:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2MTEyOTc4Ng==",
                                           "createdAt":  "2021-06-15T02:52:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "Instead of a crash, or build error, we get test failures (last week or so):\r\n\r\n```\r\n[18:58:12] info: Starting:    System.Runtime.Tests.dll\r\n[18:58:23] fail: [FAIL] System.Tests.StackTraceHiddenAttributeTests.MethodHidden_ExceptionStackTrace\r\n[18:58:23] info: Assert.Contains() Failure\r\n[18:58:23] info: Not found: ThrowStackTraceMethodA\r\n[18:58:23] info: In value:     at System.Tests.StackTraceHiddenAttributeTests.MethodHidden_ExceptionStackTrace()\r\n[18:58:23] info:    at System.Tests.StackTraceHiddenAttributeTests.MethodHidden_ExceptionStackTrace()\r\n[18:58:38] info:    at System.Reflection.RuntimeMethodInfo.Invoke(Object , BindingFlags , Binder , Object[] , CultureInfo )\r\n[18:58:38] fail: [FAIL] System.Tests.StackTraceHiddenAttributeTests.MethodHidden_EnvironmentStackTrace\r\n[18:58:38] info: Assert.Contains() Failure\r\n[18:58:38] info: Not found: GetStackTraceMethodA\r\n[18:58:38] info: In value:\r\n[18:58:38] info:    at System.Reflection.RuntimeMethodInfo.Invoke(Object , BindingFlags , Binder , Object[] , CultureInfo )\r\n[18:58:38] fail: [FAIL] System.Tests.StackTraceHiddenAttributeTests.ConstructorHidden_EnvironmentStackTrace\r\n[18:58:38] info: Assert.Contains() Failure\r\n[18:58:38] info: Not found: NotHiddenConstructor\r\n[18:58:38] info: In value:\r\n[18:58:38] info:    at System.Reflection.RuntimeMethodInfo.Invoke(Object , BindingFlags , Binder , Object[] , CultureInfo )\r\n[18:58:38] fail: [FAIL] System.Tests.TypeTests.GetTypeByName_InvokeViaReflection_Success\r\n[18:58:38] info: Assert.Equal() Failure\r\n[18:58:38] info: Expected: typeof(System.Tests.TypeTests)\r\n[18:58:38] info: Actual:   (null)\r\n[18:58:38] info:    at System.Reflection.RuntimeMethodInfo.Invoke(Object , BindingFlags , Binder , Object[] , CultureInfo )\r\n[18:59:42] fail: [FAIL] System.Tests.ExceptionTests.Exception_TargetSite_Rethrow\r\n[18:59:42] info: Assert.Equal() Failure\r\n[18:59:42] info:           â†“ (pos 0)\r\n[18:59:42] info: Expected: ThrowException\r\n[18:59:42] info: Actual:   RethrowException\r\n[18:59:42] info:           â†‘ (pos 0)\r\n[18:59:42] info:    at System.Reflection.RuntimeMethodInfo.Invoke(Object , BindingFlags , Binder , Object[] , CultureInfo )\r\n[18:59:42] fail: [FAIL] System.Tests.ExceptionTests.Exception_TargetSite_OtherMethod\r\n[18:59:42] info: Assert.Equal() Failure\r\n[18:59:42] info:           â†“ (pos 0)\r\n[18:59:42] info: Expected: ThrowException\r\n[18:59:42] info: Actual:   \u003cException_TargetSite_OtherMethod\u003eb__8_0\r\n[18:59:42] info:           â†‘ (pos 0)\r\n[18:59:42] info:    at System.Reflection.RuntimeMethodInfo.Invoke(Object , BindingFlags , Binder , Object[] , CultureInfo )\r\n[19:00:58] fail: [FAIL] System.Runtime.ExceptionServices.Tests.ExceptionDispatchInfoTests.SetCurrentStackTrace_IncludedInExceptionStackTrace\r\n[19:00:58] info: Assert.Contains() Failure\r\n[19:00:58] info: Not found: ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\n[19:00:58] info: In value:\r\n[19:00:58] info: --- End of stack trace from previous location ---\r\n[19:00:58] info: \r\n[19:00:58] info:    at System.Runtime.ExceptionServices.Tests.ExceptionDispatchInfoTests.SetCurrentStackTrace_IncludedInExceptionStackTrace()\r\n[19:00:58] info:    at System.Reflection.RuntimeMethodInfo.Invoke(Object , BindingFlags , Binder , Object[] , CultureInfo )\r\n```",
                                           "updatedAt":  "2021-06-15T02:53:22Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2MTg2ODI0Nw==",
                                           "createdAt":  "2021-06-15T22:07:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "Most of these are AOT stack trace related",
                                           "updatedAt":  "2021-06-15T22:07:31Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2MjgwNTcxOA==",
                                           "createdAt":  "2021-06-16T23:47:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "The stacktrace related tests have been disabled. Last remaining test:\r\n\r\n```\r\n[22:09:18] fail: [FAIL] System.Tests.TypeTests.GetTypeByName_InvokeViaReflection_Success\r\n[22:09:18] info: Assert.Equal() Failure\r\n[22:09:18] info: Expected: typeof(System.Tests.TypeTests)\r\n[22:09:18] info: Actual:   (null)\r\n[22:09:18] info:    at System.Reflection.RuntimeMethodInfo.Invoke(Object , BindingFlags , Binder , Object[] , CultureInfo )\r\n```",
                                           "updatedAt":  "2021-06-16T23:47:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2Mjg1Mjg0Mw==",
                                           "createdAt":  "2021-06-17T01:52:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "this doesn\u0027t fail with eat?",
                                           "updatedAt":  "2021-06-17T01:52:53Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2NjM4NTM3OA==",
                                           "createdAt":  "2021-06-22T22:44:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "\u003e this doesn\u0027t fail with eat?\r\n\r\nYep\r\n```xml\r\n  \u003ctest name=\"System.Tests.TypeTests.GetTypeByName_InvokeViaReflection_Success\" \r\n        type=\"System.Tests.TypeTests\"\r\n        method=\"GetTypeByName_InvokeViaReflection_Success\"\r\n        time=\"0.000297\"\r\n        result=\"Pass\" /\u003e\r\n```",
                                           "updatedAt":  "2021-06-22T22:44:22Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2NjM4NjUwOA==",
                                           "createdAt":  "2021-06-22T22:47:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vargaz",
                                           "body":  "This is not going to work with aot because it calls Type.GetType (\"FOO\"); which uses a stack walk to obtain the calling assembly which is used to resolved FOO.\r\n",
                                           "updatedAt":  "2021-06-22T22:47:23Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2NzAwOTcxNQ==",
                                           "createdAt":  "2021-06-23T17:04:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "Should the test be disabled with this as the ActiveIssue, or just disable it?",
                                           "updatedAt":  "2021-06-23T17:04:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3NDMxMTM5NA==",
                                           "createdAt":  "2021-07-05T20:14:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vargaz",
                                           "body":  "Just disable it imho it\u0027s not going to get fixed.\r\n",
                                           "updatedAt":  "2021-07-05T20:14:57Z"
                                       }
                                   ],
                         "totalCount":  10
                     },
        "title":  "[wasm][aot] test fails because it calls `Type.GetType (\"FOO\")` which uses a stack walk to obtain the calling assembly which is used to resolved `FOO`",
        "labels":  [
                       "arch-wasm",
                       "disabled-test",
                       "area-Codegen-AOT-mono",
                       "wasm-aot-test"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/52559",
        "createdAt":  "2021-05-10T19:33:30Z",
        "number":  52559,
        "author":  "MichalStrehovsky",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCESl_A==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "antonfirsov",
                                            "createdAt":  "2021-11-28T21:49:31Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2023-07-25T15:52:56Z",
        "body":  "Brought up on Twitter here: https://twitter.com/James_M_South/status/1391758920117538827\r\n\r\nSee the comments at the top of the file:\r\n\r\nhttps://github.com/SixLabors/ImageSharp/blob/master/src/ImageSharp/Advanced/AotCompilerTools.cs\r\n\r\nFrom the Twitter exchange, this is not caused by unpredictable dynamic reflection (MakeGenericMethod/MakeGenericType and friends). It doesn\u0027t look right that we would need this for \"regular\" C# - I think this is an AOT compiler bug.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSD1XDQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2MTUyMjA5MA==",
                                           "createdAt":  "2021-06-15T13:57:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SamMonoRT",
                                           "body":  "@vargaz @lambdageek any thoughts ?",
                                           "updatedAt":  "2021-06-15T13:57:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2MTUzODY5Mw==",
                                           "createdAt":  "2021-06-15T14:17:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vargaz",
                                           "body":  "Would need to see the actual errors this one works around.\r\n\r\n",
                                           "updatedAt":  "2021-06-15T14:17:42Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2MTk5NjA0NA==",
                                           "createdAt":  "2021-06-16T02:51:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "JimBobSquarePants",
                                           "body":  "Here\u0027s all the issues tagged AOT we\u0027ve faced.\r\nhttps://github.com/SixLabors/ImageSharp/issues?q=aot+label%3Aarea%3Aaot\r\n\r\nI have zero experience building Xamarin or UWP apps so I can only go with what I have been told.",
                                           "updatedAt":  "2021-06-16T02:51:15Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2ODY5NzQ0NQ==",
                                           "createdAt":  "2021-06-25T16:49:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SamMonoRT",
                                           "body":  "cc @vargaz ",
                                           "updatedAt":  "2021-06-25T16:49:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40i4qd",
                                           "createdAt":  "2021-07-16T16:10:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vargaz",
                                           "body":  "This is not a 6.0 issue.\r\n",
                                           "updatedAt":  "2021-07-16T16:10:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46e0Iz",
                                           "createdAt":  "2021-11-28T21:36:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "antonfirsov",
                                           "body":  "@vargaz this is related to cases when there are open generic factory methods creating generic subclasses through generic interfaces, and the generic factory methods are not directly invoked in application code. Here is simplified version of stuff we do in ImageSharp:\r\n\r\n```C#\r\n// Library code in a netstandard dll:\r\n\r\npublic interface IPixel { void Foo(); }\r\npublic interface IPixel\u003cTPixel\u003e : IPixel { void Bar(); }\r\npublic struct Rgb : IPixel\u003cRgb\u003e {\r\n    public void Foo() { }\r\n    public void Bar() { }\r\n}\r\n\r\npublic interface IProcessor {\r\n    IProcessor\u003cTPixel\u003e CreatePixelSpecificProcessor() where TPixel : unmanaged, IPixel\u003cTPixel\u003e;\r\n}\r\n\r\npublic interface IProcessor\u003cTPixel\u003e where TPixel : unmanaged, IPixel\u003cTPixel\u003e { void Execute(Image\u003cTPixel\u003e image); }\r\n\r\npublic class ShinyProcessor : IProcessor {\r\n    public IProcessor\u003cTPixel\u003e CreatePixelSpecificProcessor() where TPixel : unmanaged, IPixel\u003cTPixel\u003e =\u003e new ShinyProcessor\u003cTPixel\u003e();\r\n}\r\n\r\npublic class ProcessorBase\u003cTPixel\u003e where TPixel : unmanaged, IPixel\u003cTPixel\u003e { public abstract void Execute(); }\r\n\r\npublic class ShinyProcessor : ProcessorBase\u003cTPixel\u003e where TPixel : unmanaged, IPixel\u003cTPixel\u003e {\r\n    public override void Execute(Image\u003cTPixel\u003e image) { }\r\n}\r\n\r\npublic class Image {\r\n    abstract void ExecuteProcessor(IProcessor processor);\r\n    public static void Load() =\u003e new Image\u003cRgb\u003e();\r\n}\r\n\r\npublic class Image\u003cTPixel\u003e : Image where TPixel : unmanaged, IPixel\u003cTPixel\u003e {\r\n    override void ExecuteProcessor(IProcessor processor) =\u003e processor.CreatePixelSpecificProcessor\u003cTPixel\u003e().Execute(this);\r\n}\r\n\r\nstatic class ShinyExtensions {\r\n    public static void Shine(this Image image) =\u003e image.ExecuteProcessor(new ShinyProcessor());\r\n}\r\n\r\n// Xamarin app code:\r\n\r\nvar image = Image.Load();\r\nimage.Shine();\r\n```\r\n\r\nNo idea if the generic `TPixel` constraints or other details have any significance, shared them for completeness. In the actual library there is even more virtual dispatch around the stuff I simplified here as `Image.ExecuteProcessor()`. If the code above doesn\u0027t help you obtaining a repro, I can share a real library use case that fails today with Xamarin.",
                                           "updatedAt":  "2021-11-28T21:50:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46e2jd",
                                           "createdAt":  "2021-11-28T22:43:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vargaz",
                                           "body":  "Is this something that happens with the current version of xamarin.ios ? If it is, what is the exact error message, and what is the method whose AOT code is not found without these changes ?",
                                           "updatedAt":  "2021-11-28T22:43:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46gM5A",
                                           "createdAt":  "2021-11-29T10:52:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCEWyyg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "JimBobSquarePants",
                                                                               "createdAt":  "2021-11-29T11:11:50Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "antonfirsov",
                                           "body":  "I\u0027m not a Xamarin user myself, don\u0027t know how to try it, working based on the reports of ImageSharp consumers, [one of the recent reports](https://github.com/SixLabors/ImageSharp/issues/1703#issuecomment-918084043) mentions Xamarin.Forms `5.0.0.2012`. Error message is always something like:\r\n\r\n```\r\nSystem.ExecutionEngineException: Attempting to JIT compile method \u0027Foo.Bar\u003cSomePixelType\u003e(...)\u0027 while running in aot-only mode. See https://docs.microsoft.com/xamarin/ios/internals/limitations for more information.\r\n```\r\n\r\nThese reports have been around for a very long time, for me it seemed that it\u0027s the mentioned [AotCompilerTools.cs](https://github.com/SixLabors/ImageSharp/blob/master/src/ImageSharp/Advanced/AotCompilerTools.cs) workaround that made them less frequent recently. Was there a recent fix from which you expect this should be gone? Any chance we can work towards a confirmation if it\u0027s fixed or not considering my limited understanding on Xamarin? I can for example create a custom build without the mentioned workaround and provide a code snippet that is expected to fail, if that helps.",
                                           "updatedAt":  "2021-11-29T10:52:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46gU-Q",
                                           "createdAt":  "2021-11-29T11:36:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vargaz",
                                           "body":  "With recent versions of xamarin.ios, these errors should not happen except in very special cases. Having a test case would help.",
                                           "updatedAt":  "2021-11-29T11:36:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46gdMP",
                                           "createdAt":  "2021-11-29T12:24:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "antonfirsov",
                                           "body":  "Doesn\u0027t Xamarin.Forms 5.0.0.2012 imply recent Xamarin.iOS? Or are these versions unrelated?",
                                           "updatedAt":  "2021-11-29T12:24:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46gexr",
                                           "createdAt":  "2021-11-29T12:33:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vargaz",
                                           "body":  "Looks like there were recent fixes in this area, but they are only in dotnet/runtime, not in the mono/mono version used by current versions of xamarin.ios. So its possible that these workarounds are still needed. Also, even if its fixed, without having access to these pre-seeded generic instances, the runtime could fall back to much slower implementations, so keeping these workarounds is still useful even if the original problem is fixed.",
                                           "updatedAt":  "2021-11-29T12:33:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46giVq",
                                           "createdAt":  "2021-11-29T12:55:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCEXxHg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "JimBobSquarePants",
                                                                               "createdAt":  "2021-11-29T13:02:46Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "antonfirsov",
                                           "body":  "So the next release will be based on .NET 6 mono right? Are there any regression tests to make sure this stuff will not be broken in the future?\r\n\r\n\u003e Also, even if its fixed, without having access to these pre-seeded generic instances, the runtime could fall back to much slower implementations\r\n\r\nShouldn\u0027t be this considered as a bug, according to OP? Those interpreted code paths are reported to be 60x slower than they should be, rendering such code useless in practice. The workarounds are very hard to manage from library developer\u0027s perspective, with two generic arguments the combinations can explode. Also - as mentioned by @MichalStrehovsky in https://github.com/SixLabors/ImageSharp/issues/1703#issuecomment-882319202 - seeding will trigger generation of unused code.",
                                           "updatedAt":  "2021-11-29T12:55:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46goPM",
                                           "createdAt":  "2021-11-29T13:24:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "antonfirsov",
                                           "body":  "If the fix means that slow code is generated for everything that is not pre-seeded, the situation is far from good IMHO.",
                                           "updatedAt":  "2021-11-29T13:25:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46ijxg",
                                           "createdAt":  "2021-11-29T23:51:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichalStrehovsky",
                                           "body":  "https://github.com/SixLabors/ImageSharp/issues/1703 is about Unity IL2CPP specifically, so it\u0027s not a good Xamarin example. But the underlying issue might be similar. I think a lot of these (maybe all?) will be around generic virtual method dispatch - the exception in https://github.com/SixLabors/ImageSharp/issues/1703 complains about `PngDecoderCore::Decode\u003cSixLabors.ImageSharp.PixelFormats.Rgba32\u003e` and that\u0027s a generic virtual method (the method implements a generic interface method).",
                                           "updatedAt":  "2021-11-29T23:51:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5IPVcN",
                                           "createdAt":  "2022-08-11T13:19:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SamMonoRT",
                                           "body":  "Moving to 8.0.0",
                                           "updatedAt":  "2022-08-11T13:19:22Z"
                                       }
                                   ],
                         "totalCount":  15
                     },
        "title":  "ImageSharp needs to pre-seed generics to avoid \"Attempting to JIT compile method... while running in aot-only mode.\"",
        "labels":  [
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/53679",
        "createdAt":  "2021-06-03T15:05:11Z",
        "number":  53679,
        "author":  "MaximLipnin",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-07-21T16:48:10Z",
        "body":  "- System.IO.Tests\r\n- System.IO.Pipelines.Tests\r\n\r\n```\r\n06-01 08:02:54.688 26912 27454 F libc    : Fatal signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0xa8 in tid 27454 (Thread-55), pid 26912 (System.IO.Tests)\r\n06-01 08:02:54.848 27460 27460 I crash_dump64: obtaining output fd from tombstoned, type: kDebuggerdTombstone\r\n06-01 08:02:54.855   863   863 I tombstoned: received crash request for pid 27454\r\n06-01 08:02:54.856 27460 27460 I crash_dump64: performing dump of process 26912 (target tid = 27454)\r\n06-01 08:02:54.875 27460 27460 F DEBUG   : *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n06-01 08:02:54.876 27460 27460 F DEBUG   : Build fingerprint: \u0027google/sargo/sargo:11/RQ1A.201205.003/6906706:user/release-keys\u0027\r\n06-01 08:02:54.876 27460 27460 F DEBUG   : Revision: \u0027MP1.0\u0027\r\n06-01 08:02:54.876 27460 27460 F DEBUG   : ABI: \u0027arm64\u0027\r\n06-01 08:02:54.885 27460 27460 F DEBUG   : Timestamp: 2021-06-01 08:02:54-0700\r\n06-01 08:02:54.885 27460 27460 F DEBUG   : pid: 26912, tid: 27454, name: Thread-55  \u003e\u003e\u003e net.dot.System.IO.Tests \u003c\u003c\u003c\r\n06-01 08:02:54.885 27460 27460 F DEBUG   : uid: 10272\r\n06-01 08:02:54.885 27460 27460 F DEBUG   : signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0xa8\r\n06-01 08:02:54.885 27460 27460 F DEBUG   : Cause: null pointer dereference\r\n06-01 08:02:54.885 27460 27460 F DEBUG   :     x0  0000000000000090  x1  0000007b3d1cf558  x2  00000000000000bb  x3  2b7322bb90000000\r\n06-01 08:02:54.885 27460 27460 F DEBUG   :     x4  0000000000000000  x5  17230d1c12000000  x6  000000121c0d2317  x7  6473687156fefefe\r\n06-01 08:02:54.885 27460 27460 F DEBUG   :     x8  0000000000000015  x9  0000000000000000  x10 0101010101010101  x11 000000000000001b\r\n06-01 08:02:54.885 27460 27460 F DEBUG   :     x12 0000000000000000  x13 64616552646e456e  x14 0000000000000200  x15 0000007d28356128\r\n06-01 08:02:54.885 27460 27460 F DEBUG   :     x16 0000007b3d261e28  x17 0000007e3ada8a40  x18 0000007b2c6a8000  x19 0000007ce81abc00\r\n06-01 08:02:54.885 27460 27460 F DEBUG   :     x20 0000007d281e2070  x21 0000007ca819bdc0  x22 0000000000000002  x23 0000007cc81bbbc8\r\n06-01 08:02:54.885 27460 27460 F DEBUG   :     x24 0000007b3d268000  x25 0000007b3d268000  x26 0000007d08181120  x27 0000007b96cda000\r\n06-01 08:02:54.885 27460 27460 F DEBUG   :     x28 0000007b3d278000  x29 0000007b96cc5920\r\n06-01 08:02:54.885 27460 27460 F DEBUG   :     lr  0000007b3cfac35c  sp  0000007b96cc5890  pc  0000007b3cfac370  pst 0000000000000000\r\n06-01 08:02:55.015 27460 27460 F DEBUG   : backtrace:\r\n06-01 08:02:55.015 27460 27460 F DEBUG   :       #00 pc 0000000000060370  /data/app/~~AU8bGdg6iY0AtfuFyKAfvg==/net.dot.System.IO.Tests-3Jd5re4ixecPbYEzukDqSg==/lib/arm64/libmonosgen-2.0.so (ves_icall_System_IO_Stream_HasOverriddenBeginEndRead_raw+188) (BuildId: dbdf497d1026bca525d47c1a383d551e039ea37e)\r\n06-01 08:02:55.015 27460 27460 F DEBUG   :       #01 pc 000000000068480c  /data/app/~~AU8bGdg6iY0AtfuFyKAfvg==/net.dot.System.IO.Tests-3Jd5re4ixecPbYEzukDqSg==/lib/arm64/libmonodroid.so (wrapper_managed_to_native_System_IO_Stream_HasOverriddenBeginEndRead_System_IO_Stream+124) (BuildId: 7ef659f31299d2da98a84d461aea529016952a08)\r\n```\r\n\r\n@steveisok ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONLXn3w==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1Mzk0MTAyNw==",
                                           "createdAt":  "2021-06-03T15:05:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-06-03T15:05:14Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1Mzk0NTI5Mw==",
                                           "createdAt":  "2021-06-03T15:11:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "/cc @vargaz ",
                                           "updatedAt":  "2021-06-03T15:11:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40teff",
                                           "createdAt":  "2021-07-21T16:48:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "Since this is fullaot on Android, the priority on this issue is low.",
                                           "updatedAt":  "2021-07-21T16:48:06Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "[Android][AOT] Some library test suites fail due to a crash",
        "labels":  [
                       "os-android",
                       "area-Codegen-AOT-mono",
                       "runtime-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/53815",
        "createdAt":  "2021-06-07T15:39:45Z",
        "number":  53815,
        "author":  "radical",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-08-10T16:34:47Z",
        "body":  "With https://github.com/dotnet/runtime/pull/52883 [Microsoft.VisualBasic.Tests.FileSystemTests`]() started to fail with:\r\n\r\n```\r\n[18:33:08] fail: [FAIL] Microsoft.VisualBasic.Tests.FileSystemTests.Write_ArgumentException\r\n[18:33:08] info: System.IO.IOException : Bad file name or number.\r\n[18:33:08] info:    at Microsoft.VisualBasic.FileSystem.Write(Int32 , Object[] )\r\n[18:33:08] info:    at Microsoft.VisualBasic.Tests.FileSystemTests.\u003c\u003ec__DisplayClass21_0.\u003cWrite_ArgumentException\u003eb__0()\r\n[18:33:08] info:    at Microsoft.VisualBasic.Tests.FileSystemTests.AssertThrows[ArgumentException](Action action)\r\n[18:33:08] info:    at System.Reflection.RuntimeMethodInfo.Invoke(Object , BindingFlags , Binder , Object[] , CultureInfo )\r\n[18:33:08] fail: [FAIL] Microsoft.VisualBasic.Tests.FileSystemTests.FileClose\r\n[18:33:08] info: Assert.Equal() Failure\r\n[18:33:08] info: Expected: 2\r\n[18:33:08] info: Actual:   1\r\n[18:33:08] info:    at System.Reflection.RuntimeMethodInfo.Invoke(Object , BindingFlags , Binder , Object[] , CultureInfo )\r\n[18:33:08] fail: [FAIL] Microsoft.VisualBasic.Tests.FileSystemTests.FileOpen\r\n[18:33:08] info: Assert.Throws() Failure\r\n[18:33:08] info: Expected: typeof(System.IO.IOException)\r\n[18:33:08] info: Actual:   (No exception was thrown)\r\n[18:33:08] info:    at Microsoft.VisualBasic.Tests.FileSystemTests.AssertThrows[IOException](Action action)\r\n[18:33:08] info:    at System.Reflection.RuntimeMethodInfo.Invoke(Object , BindingFlags , Binder , Object[] , CultureInfo )\r\n[18:33:27] info: Finished:    Microsoft.VisualBasic.Core.Tests.dll\r\n[18:33:27] info: \r\n[18:33:27] info: === TEST EXECUTION SUMMARY ===\r\n```\r\n\r\n@vargaz [said](https://github.com/dotnet/runtime/pull/52883#issuecomment-848385262):\r\n\r\n`The Microsoft.VisualBasic failures seem to be related to calls made to Assembly.GetCallingAssembly () which is not supported in wasm+aot, not sure why this worked previously.`",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOMwZCyw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NjA0ODMzMQ==",
                                           "createdAt":  "2021-06-07T15:39:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nWith https://github.com/dotnet/runtime/pull/52883 [Microsoft.VisualBasic.Tests.FileSystemTests`]() started to fail with:\r\n\r\n```\r\n[18:33:08] fail: [FAIL] Microsoft.VisualBasic.Tests.FileSystemTests.Write_ArgumentException\r\n[18:33:08] info: System.IO.IOException : Bad file name or number.\r\n[18:33:08] info:    at Microsoft.VisualBasic.FileSystem.Write(Int32 , Object[] )\r\n[18:33:08] info:    at Microsoft.VisualBasic.Tests.FileSystemTests.\u003c\u003ec__DisplayClass21_0.\u003cWrite_ArgumentException\u003eb__0()\r\n[18:33:08] info:    at Microsoft.VisualBasic.Tests.FileSystemTests.AssertThrows[ArgumentException](Action action)\r\n[18:33:08] info:    at System.Reflection.RuntimeMethodInfo.Invoke(Object , BindingFlags , Binder , Object[] , CultureInfo )\r\n[18:33:08] fail: [FAIL] Microsoft.VisualBasic.Tests.FileSystemTests.FileClose\r\n[18:33:08] info: Assert.Equal() Failure\r\n[18:33:08] info: Expected: 2\r\n[18:33:08] info: Actual:   1\r\n[18:33:08] info:    at System.Reflection.RuntimeMethodInfo.Invoke(Object , BindingFlags , Binder , Object[] , CultureInfo )\r\n[18:33:08] fail: [FAIL] Microsoft.VisualBasic.Tests.FileSystemTests.FileOpen\r\n[18:33:08] info: Assert.Throws() Failure\r\n[18:33:08] info: Expected: typeof(System.IO.IOException)\r\n[18:33:08] info: Actual:   (No exception was thrown)\r\n[18:33:08] info:    at Microsoft.VisualBasic.Tests.FileSystemTests.AssertThrows[IOException](Action action)\r\n[18:33:08] info:    at System.Reflection.RuntimeMethodInfo.Invoke(Object , BindingFlags , Binder , Object[] , CultureInfo )\r\n[18:33:27] info: Finished:    Microsoft.VisualBasic.Core.Tests.dll\r\n[18:33:27] info: \r\n[18:33:27] info: === TEST EXECUTION SUMMARY ===\r\n```\r\n\r\n@vargaz [said](https://github.com/dotnet/runtime/pull/52883#issuecomment-848385262):\r\n\r\n`The Microsoft.VisualBasic failures seem to be related to calls made to Assembly.GetCallingAssembly () which is not supported in wasm+aot, not sure why this worked previously.`\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eradical\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-wasm`, `area-Codegen-AOT-mono`, `wasm-aot-test`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-06-07T15:39:48Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "[wasm][aot] `Microsoft.VisualBasic.Tests.FileSystemTests` failing due to use of `Assembly.GetCallingAssembly`",
        "labels":  [
                       "arch-wasm",
                       "area-Codegen-AOT-mono",
                       "wasm-aot-test"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/54265",
        "createdAt":  "2021-06-16T04:55:20Z",
        "number":  54265,
        "author":  "danroth27",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-08-18T08:08:52Z",
        "body":  "From @lbargaoanu https://github.com/dotnet/runtime/discussions/53994\r\n\r\nI have [this project](https://github.com/lbargaoanu/RoslynInBlazor). It uses Roslyn to compile some code.\r\nA lot of time is spent JIT-ing, so AOT compiling makes sense. For the console application, I get a significant benefit with ReadyToRun.\r\nFor the Blazor app compiled with AOT, I get no improvement. As far as I can tell, it is indeed compiled AOT :)\r\n\r\n@lewing",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONbGBow==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2MjA2Mzc5Mw==",
                                           "createdAt":  "2021-06-16T05:51:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nFrom @lbargaoanu https://github.com/dotnet/runtime/discussions/53994\r\n\r\nI have [this project](https://github.com/lbargaoanu/RoslynInBlazor). It uses Roslyn to compile some code.\r\nA lot of time is spent JIT-ing, so AOT compiling makes sense. For the console application, I get a significant benefit with ReadyToRun.\r\nFor the Blazor app compiled with AOT, I get no improvement. As far as I can tell, it is indeed compiled AOT :)\r\n\r\n@lewing\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003edanroth27\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-wasm`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-06-16T05:51:53Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2MjY3NjA0OQ==",
                                           "createdAt":  "2021-06-16T20:04:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "How are you compiling and running the application?",
                                           "updatedAt":  "2021-06-16T20:04:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2Mjg5ODQ2OA==",
                                           "createdAt":  "2021-06-17T03:48:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lbargaoanu",
                                           "body":  "dotnet publish -c Release and browsed to the publish folder. I was testing in Firefox. But I think it\u0027s the same in Chrome. In another [branch](https://github.com/lbargaoanu/RoslynInBlazor/tree/VB) Chrome is 2 to 3 times slower than Firefox (both up to date).",
                                           "updatedAt":  "2021-06-18T15:36:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41r5g9",
                                           "createdAt":  "2021-08-17T23:36:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "We\u0027re still validating the AOT perf for .NET 6 but this is an open ended issue so treating it at such.",
                                           "updatedAt":  "2021-08-17T23:36:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41sYGj",
                                           "createdAt":  "2021-08-18T05:36:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lbargaoanu",
                                           "body":  "As far as I\u0027m concerned, this is a specific scenario, but I guess you\u0027re saying, implementation wise, it\u0027s open ended. Because there\u0027s no profiler for .Net in the browser, I don\u0027t think this issue can be more specific without going into runtime internals.",
                                           "updatedAt":  "2021-08-18T08:08:52Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Blazor AOT performance vs ReadyToRun",
        "labels":  [
                       "arch-wasm",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/57232",
        "createdAt":  "2021-08-11T19:15:02Z",
        "number":  57232,
        "author":  "vsfeedback",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-08-08T04:40:38Z",
        "body":  "_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Unable-to-deserialize-JSON/1465458)._\n\n---\nI\u0027m referencing _System.Text.Json_ NuGet package version 5.0.2. I\u0027m not able to deserialize valid JSON file. The method _JsonSerializer.Deserialize\u003cT\u003e(string json, JsonSerializerOptions? options = null)_ throws following exception:\n\n```\nSystem.ExecutionEngineException: \u0027Attempting to JIT compile method \u0027int System.Text.Json.JsonWriterHelper:NeedsEscaping (System.ReadOnlySpan`1\u003cbyte\u003e,System.Text.Encodings.Web.JavaScriptEncoder)\u0027 while running in aot-only mode. See https://docs.microsoft.com/xamarin/ios/internals/limitations for more information.\n\nat System.Text.Json.JsonEncodedText.EncodeHelper (System.ReadOnlySpan`1[T] utf8Value, System.Text.Encodings.Web.JavaScriptEncoder encoder) [0x00000] in \u003ccb68364b029e41c3bf425990b94c94d9\u003e:0 \n  at System.Text.Json.JsonEncodedText.TranscodeAndEncode (System.ReadOnlySpan`1[T] value, System.Text.Encodings.Web.JavaScriptEncoder encoder) [0x00033] in \u003ccb68364b029e41c3bf425990b94c94d9\u003e:0 \n  at System.Text.Json.JsonEncodedText.Encode (System.ReadOnlySpan`1[T] value, System.Text.Encodings.Web.JavaScriptEncoder encoder) [0x00014] in \u003ccb68364b029e41c3bf425990b94c94d9\u003e:0 \n  at System.Text.Json.JsonEncodedText.Encode (System.String value, System.Text.Encodings.Web.JavaScriptEncoder encoder) [0x00014] in \u003ccb68364b029e41c3bf425990b94c94d9\u003e:0 \n  at System.Text.Json.JsonSerializer.. cctor () [0x00042] in \u003ccb68364b029e41c3bf425990b94c94d9\u003e:0 \n```\n\n---\n### Original Comments\n\n#### Feedback Bot on 7/1/2021, 01:35 AM: \n\n\u003cp\u003eWe have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.\u003c/p\u003e\n\n#### Václav Dajbych on 7/8/2021, 01:38 PM: \n\n(private comment, text removed)\n\n---\n### Original Solutions\n(no solutions)",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONdwJyw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc41eGqF",
                                           "createdAt":  "2021-08-11T19:15:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @eiriktsarpalis, @layomia\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Unable-to-deserialize-JSON/1465458)._\n\n---\nI\u0027m referencing _System.Text.Json_ NuGet package version 5.0.2. I\u0027m not able to deserialize valid JSON file. The method _JsonSerializer.Deserialize\u003cT\u003e(string json, JsonSerializerOptions? options = null)_ throws following exception:\n\n```\nSystem.ExecutionEngineException: \u0027Attempting to JIT compile method \u0027int System.Text.Json.JsonWriterHelper:NeedsEscaping (System.ReadOnlySpan`1\u003cbyte\u003e,System.Text.Encodings.Web.JavaScriptEncoder)\u0027 while running in aot-only mode. See https://docs.microsoft.com/xamarin/ios/internals/limitations for more information.\n\nat System.Text.Json.JsonEncodedText.EncodeHelper (System.ReadOnlySpan`1[T] utf8Value, System.Text.Encodings.Web.JavaScriptEncoder encoder) [0x00000] in \u003ccb68364b029e41c3bf425990b94c94d9\u003e:0 \n  at System.Text.Json.JsonEncodedText.TranscodeAndEncode (System.ReadOnlySpan`1[T] value, System.Text.Encodings.Web.JavaScriptEncoder encoder) [0x00033] in \u003ccb68364b029e41c3bf425990b94c94d9\u003e:0 \n  at System.Text.Json.JsonEncodedText.Encode (System.ReadOnlySpan`1[T] value, System.Text.Encodings.Web.JavaScriptEncoder encoder) [0x00014] in \u003ccb68364b029e41c3bf425990b94c94d9\u003e:0 \n  at System.Text.Json.JsonEncodedText.Encode (System.String value, System.Text.Encodings.Web.JavaScriptEncoder encoder) [0x00014] in \u003ccb68364b029e41c3bf425990b94c94d9\u003e:0 \n  at System.Text.Json.JsonSerializer.. cctor () [0x00042] in \u003ccb68364b029e41c3bf425990b94c94d9\u003e:0 \n```\n\n---\n### Original Comments\n\n#### Feedback Bot on 7/1/2021, 01:35 AM: \n\n\u003cp\u003eWe have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.\u003c/p\u003e\n\n#### Václav Dajbych on 7/8/2021, 01:38 PM: \n\n(private comment, text removed)\n\n---\n### Original Solutions\n(no solutions)\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003evsfeedback\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-System.Text.Json`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-08-11T19:15:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41er41",
                                           "createdAt":  "2021-08-11T23:53:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "https://github.com/dotnet/runtime/issues/56533\r\nhttps://github.com/dotnet/runtime/issues/47114\r\nhttps://github.com/dotnet/runtime/pull/55503\r\n\r\nseems it\u0027s fixed -- perhaps there is a workaround we can share with this customer?",
                                           "updatedAt":  "2021-08-11T23:53:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41fZUn",
                                           "createdAt":  "2021-08-12T07:47:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eiriktsarpalis",
                                           "body":  "cc @MaximLipnin ",
                                           "updatedAt":  "2021-08-12T07:47:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc413AnL",
                                           "createdAt":  "2021-08-23T09:48:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dajbych",
                                           "body":  "@danmoseley I have updated Visual Studio 2019 to version 16.11.1 and Xamarin.iOS SDK to version 14.20.0.25. This error remains.",
                                           "updatedAt":  "2021-08-23T11:23:04Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Unable to deserialize JSON",
        "labels":  [
                       "area-Codegen-AOT-mono",
                       "os-ios",
                       "needs-further-triage"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/60249",
        "createdAt":  "2021-10-11T12:41:09Z",
        "number":  60249,
        "author":  "jacob-l",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCO9uqA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "SupinePandora43",
                                            "createdAt":  "2021-10-11T15:48:33Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "andivlad-talentia",
                                            "createdAt":  "2021-10-12T08:20:58Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "tbancila-talentia",
                                            "createdAt":  "2021-10-12T08:22:17Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ralucacolta",
                                            "createdAt":  "2021-10-12T08:26:01Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "oleclant",
                                            "createdAt":  "2021-10-12T08:26:21Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "cdumitrascu-talentia",
                                            "createdAt":  "2021-10-13T08:27:23Z"
                                        },
                                        {
                                            "content":  "EYES",
                                            "user":  "jirisykora83",
                                            "createdAt":  "2022-02-08T14:44:19Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "alessiocavallo",
                                            "createdAt":  "2022-02-16T14:53:53Z"
                                        }
                                    ],
                          "totalCount":  8
                      },
        "updatedAt":  "2024-04-26T04:05:16Z",
        "body":  "\u003c!--This is just a template - feel free to delete any and all of it and replace as appropriate.--\u003e\r\n\r\n### Description\r\n\r\nWe have a Blazor application, which we compile with AOT. The output dotnet.wasm is approximately 300 MB. And when we run the app, it uses 3GB of RAM in the Browser. And as a result, the app works slow, significantly slower compared to the Interpreter mode.\r\n\r\nIs there a way to reduce the size of dotnet.wasm and the memory consumption?\r\nAre there any tools to analyze it?\r\n\r\n\r\n### Configuration\r\n\r\ndotnet --info\r\n.NET SDK (reflecting any global.json):\r\n Version:   6.0.100-rc.1.21463.6\r\n Commit:    e627d556a1\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19043\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.100-rc.1.21463.6\\\r\n\r\nHost (useful for support):\r\n  Version: 6.0.0-rc.1.21451.13\r\n  Commit:  d7619cd4b1\r\n\r\n### Regression?\r\n\r\nIt is not a regression, we have the same issue for .NET 6 Preview 3,4,7, RC1\r\n\r\n### Analysis\r\n\r\nMaybe we attached too many 3rd party libraries. Is there a way to understand which libraries cause the issue?\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOZqcd4A==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc44BypN",
                                           "createdAt":  "2021-10-11T12:41:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-10-11T12:41:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44CHkM",
                                           "createdAt":  "2021-10-11T14:23:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n\u003c!--This is just a template - feel free to delete any and all of it and replace as appropriate.--\u003e\r\n\r\n### Description\r\n\r\nWe have a Blazor application, which we compile with AOT. The output dotnet.wasm is approximately 300 MB. And when we run the app, it uses 3GB of RAM in the Browser. And as a result, the app works slow, significantly slower compared to the Interpreter mode.\r\n\r\nIs there a way to reduce the size of dotnet.wasm and the memory consumption?\r\nAre there any tools to analyze it?\r\n\r\n\r\n### Configuration\r\n\r\ndotnet --info\r\n.NET SDK (reflecting any global.json):\r\n Version:   6.0.100-rc.1.21463.6\r\n Commit:    e627d556a1\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19043\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.100-rc.1.21463.6\\\r\n\r\nHost (useful for support):\r\n  Version: 6.0.0-rc.1.21451.13\r\n  Commit:  d7619cd4b1\r\n\r\n### Regression?\r\n\r\nIt is not a regression, we have the same issue for .NET 6 Preview 3,4,7, RC1\r\n\r\n### Analysis\r\n\r\nMaybe we attached too more 3rd party libraries. Is there a way to understand which libraries cause the issue?\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ejacob-l\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-wasm`, `tenet-performance`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-10-11T14:23:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc49ZmkY",
                                           "createdAt":  "2022-02-04T16:00:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "todd-urbo",
                                           "body":  "We are seeing this issue as well while using AOT. The wasm app is taking an extremely long time to load. Curious if there are any work arounds in the meantime before 7.0.0.",
                                           "updatedAt":  "2022-02-04T16:01:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_XgLF",
                                           "createdAt":  "2022-03-09T16:41:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sajjadarashhh",
                                           "body":  "What happend in .net 7 to solved this problem!?",
                                           "updatedAt":  "2022-03-09T16:42:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FO24L",
                                           "createdAt":  "2022-06-21T09:51:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ilonatommy",
                                           "body":  "@lewing, can you help here?",
                                           "updatedAt":  "2022-06-21T09:51:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5llvIU",
                                           "createdAt":  "2023-09-03T20:11:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sajjadarashhh",
                                           "body":  "300MB is very large for all environment that problem is solved, but for now\r\nMy application size is around 5MB in compression mode brotli and this very bad for web\r\nI dont know why but if problem is dotnet runtime\r\nWe must be choose another way to handle this",
                                           "updatedAt":  "2023-09-03T20:29:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5mpx3g",
                                           "createdAt":  "2023-09-16T13:15:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sajjadarashhh",
                                           "body":  "We can Hope to we have size and performance like react in blazor wasm?",
                                           "updatedAt":  "2023-09-16T13:15:29Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "The size of dotnet.wasm(Blazor AOT) is big and it causes the performance issues",
        "labels":  [
                       "arch-wasm",
                       "tenet-performance",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/61307",
        "createdAt":  "2021-11-07T19:42:43Z",
        "number":  61307,
        "author":  "Xyncgas",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-11-10T15:22:41Z",
        "body":  "We still don\u0027t have IDE for compiling c++ to wasm, let alone c#.\r\nSince webassembly runs on the web, would be nice if asp.net hash tooling support for compiling,\r\nusing wasm modules in the project.\r\n\r\nfurther more, if anyone compiled wasm modules from other places, they should be able to used in the project.\r\neither in project setting making that happen, or even dynamically loading webassembly modules from bytes or text formats into wasmtime.net",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOOWjaNw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc45ZBf1",
                                           "createdAt":  "2021-11-08T06:54:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Xyncgas",
                                           "body":  "Blazor already has AOT compiling in .NET 6 which compiles c# directly to webassembly. I am happy. it implies even something like I can write code in c++ then produce dll library for my blazor which eventually compiles into webassembly which is like c++ compiled into webassembly, but if I already have the wasm module I would like to load it directly to my projects just like I would be adding a c# files. then the IDE should be able to look at the exports in the module and enable intellisense on it along with someway to call them in asp.net",
                                           "updatedAt":  "2021-11-08T06:54:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc45Z7cS",
                                           "createdAt":  "2021-11-08T12:21:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "javiercn",
                                           "body":  "I would check https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-net-6-rc-2/#native-dependencies-support-for-blazor-webassembly-apps for native dependencies support.\r\n\r\nAs for tooling specific to compile to wasm, this is not something the ASP.NET Core team would work on. Moving this issue to the runtime in case they want to add something.",
                                           "updatedAt":  "2021-11-08T12:21:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc45Z7eh",
                                           "createdAt":  "2021-11-08T12:21:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-11-08T12:21:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc45aNo3",
                                           "createdAt":  "2021-11-08T13:56:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nWe still don\u0027t have IDE for compiling c++ to wasm, let alone c#.\r\nSince webassembly runs on the web, would be nice if asp.net hash tooling support for compiling,\r\nusing wasm modules in the project.\r\n\r\nfurther more, if anyone compiled wasm modules from other places, they should be able to used in the project.\r\neither in project setting making that happen, or even dynamically loading webassembly modules from bytes or text formats into wasmtime.net\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eXyncgas\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-wasm`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-11-08T13:56:24Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "[asp.net core7] Webassembly toolings",
        "labels":  [
                       "arch-wasm",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/61720",
        "createdAt":  "2021-11-17T06:18:13Z",
        "number":  61720,
        "author":  "radical",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-08T02:13:46Z",
        "body":  "https://github.com/dotnet/runtime/pull/59479 enables AOT tests on windows, and needs to disable some tests. But we need to be able to detect WASM/Browser+Windows-host case, and surface to `PlatformDetection`.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOOeO3nA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc4547eE",
                                           "createdAt":  "2021-11-17T06:18:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-11-17T06:18:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4547ec",
                                           "createdAt":  "2021-11-17T06:18:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nhttps://github.com/dotnet/runtime/pull/59479 enables AOT tests on windows, and needs to disable some tests. But we need to be able to detect WASM/Browser+Windows-host case, and surface to `PlatformDetection`.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eradical\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-wasm`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-11-17T06:18:20Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "[wasm] Figure out a way to detect wasm+windows+aot for tests",
        "labels":  [
                       "arch-wasm",
                       "disabled-test",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/62149",
        "createdAt":  "2021-11-18T21:43:43Z",
        "number":  62149,
        "author":  "legistek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCqy4yg==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Jack-Edwards",
                                            "createdAt":  "2022-04-18T02:02:19Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jirisykora83",
                                            "createdAt":  "2022-05-24T09:32:51Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "sengiv",
                                            "createdAt":  "2022-09-29T18:39:24Z"
                                        }
                                    ],
                          "totalCount":  3
                      },
        "updatedAt":  "2023-02-03T11:48:55Z",
        "body":  "Hi, unfortunately this closed issue seems to have re-emerged. \r\n\r\nAOT .NET6 works perfectly in Chrome on Windows but on mobile Android the Webassembly piece starts to load, then gives the \"Aw Snap\" reload screen of death.  Also works perfectly on mobile Chrome when using interpreted mode so this is limited to AOT on Chrome Mobile. \r\n\r\nOther info:\r\nChrome 96.0.4664.45\r\nAndroid 11\r\nPixel 4 XL Build RQ3A.210905.001\r\n\r\nMy co-worker had the same problem on his Pixel 5, but NOT when using the Adblock browser - only Chrome.\r\n\r\nI\u0027m afraid I\u0027m not in a position to post code and have not found the minimal reproducible steps yet. I\u0027m hoping someone might understand the basics of what might be going on sufficiently to suggest some diagnostic steps. \r\n\r\nBTW, it took me awhile to get around to upgrading to NET6 to try AOT but it\u0027s really fantastic. My application is MUCH MUCH faster across the board and honestly the file sizes and startup times aren\u0027t any worse than our legacy Angular app primarily because our main JS payload is so much smaller now. \r\n\r\nSo I really think AOT will be important for mobile devices and will do what I can to assist in finding a solution to this.\r\n\r\n_Originally posted by @danroth27 in https://github.com/dotnet/aspnetcore/issues/33559#issuecomment-885895324_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOVGLJYg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc46BKkg",
                                           "createdAt":  "2021-11-18T23:06:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "daniel-p-tech",
                                           "body":  "@legistek my comment that you\u0027ve linked was related to an issue with a Blazor app running in the interpreted mode, which had been fixed by Google (at least for the time being). You may be experiencing a different problem.",
                                           "updatedAt":  "2021-11-18T23:06:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46BNE8",
                                           "createdAt":  "2021-11-18T23:11:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "legistek",
                                           "body":  "Ohh, thanks @daniel-p-tech sorry I missed that detail. Could be a different issue then.\r\n\r\nI will confess I\u0027m doing some, let\u0027s say, unconventional stuff with WASM-Javascript interop.  But, since everything works fine in interpreted mode and AOT in Windows Chrome, it seems reasonably likely that it\u0027s not anything I\u0027m doing wrong and that this is affecting other people/applications.",
                                           "updatedAt":  "2021-11-18T23:11:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46KNVV",
                                           "createdAt":  "2021-11-22T17:26:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mkArtakMSFT",
                                           "body":  "Can you please create a new project, publish with AOT and try to run on the same device and see whether you hit that issue or not?",
                                           "updatedAt":  "2021-11-22T17:26:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46KNYD",
                                           "createdAt":  "2021-11-22T17:26:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Hi @legistek. We have added the \"Needs: Author Feedback\" label to this issue, which indicates that we have an open question for you before we can take further action. This issue will be closed automatically in 7 days if we do not hear back from you by then - please feel free to re-open it if you come back to this issue after that time.",
                                           "updatedAt":  "2021-11-22T17:26:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46bS2q",
                                           "createdAt":  "2021-11-26T18:00:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "This issue has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **4 days**. It will be closed if no further activity occurs **within 3 days of this comment**. If it *is* closed, feel free to comment when you are able to provide the additional information and we will re-investigate.\n\nSee [our Issue Management Policies](https://aka.ms/aspnet/issue-policies) for more information.",
                                           "updatedAt":  "2021-11-26T18:00:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46bWWb",
                                           "createdAt":  "2021-11-26T18:13:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "legistek",
                                           "body":  "I will get you an answer shortly. Please don\u0027t close it. Thanks. ",
                                           "updatedAt":  "2021-11-26T18:13:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46dd-y",
                                           "createdAt":  "2021-11-27T23:04:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "legistek",
                                           "body":  "Ok, so not surprisingly, just compiling the default project with AOT and publishing it on a server works fine with my Android Pixel. \r\n\r\nI definitely want to try to do what I can do diagnose this, but I\u0027m going to need a little bit of help/guidance. After all, publishing AOT is pretty slow, so trying to find the exact thing in my code that causes it is going to be excrutiatingly difficult without some guidance. \r\n\r\nSo the question is what sorts of things could possibly be different between AOT and interpreted that could cause the browser to totally crash in one and not the other?\r\n\r\nAs I mentioned I am pushing the envelope a bit. For example I\u0027m using some of the low-level JS interop (the same things that Blazor itself uses), such as providing a custom argument signature to `bind_static_method`, returning pure Mono objects to my C# code,, etc. The stuff that the Mono source code says not to use unless I \"know what [I\u0027m] doing\". (Well, I thought I did...)\r\n\r\nBut this bears repeating:\r\n- It works fine interpreted on all devices\r\n- It works fine AOT on Windows Chrome\r\n- It works fine AOT on Android Adblocker Browser\r\n- It **crashes** on AOT on Android Chrome\r\n\r\nThere must be a finite number of things it could be.\r\n\r\nAny suggestions of things to try to diagnose this would be welcome! Thanks!",
                                           "updatedAt":  "2021-11-27T23:04:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46enro",
                                           "createdAt":  "2021-11-28T15:35:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "legistek",
                                           "body":  "I managed to do a remote debug on my phone and see this in the browser console:\r\n\r\n**Streaming compilation failed. Falling back to ArrayBuffer instantiation.  RangeError: WebAssembly.instantiate(): Out of memory: wasm memory**\r\n\r\nHope that means something?",
                                           "updatedAt":  "2021-11-28T15:35:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46eswq",
                                           "createdAt":  "2021-11-28T17:58:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCtDOgw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "sengiv",
                                                                               "createdAt":  "2022-09-29T18:30:49Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "legistek",
                                           "body":  "I can also confirm that my `Program.cs` never actually gets executed, as I have a `Console.WriteLine` message as the first line of `Main`. In other words my C# code never gets executed before the browser crashes.",
                                           "updatedAt":  "2021-11-28T17:58:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46g1zk",
                                           "createdAt":  "2021-11-29T14:30:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "legistek",
                                           "body":  "I found this related [issue](https://github.com/flutter/flutter/issues/75976) and so added this to my WASM project\u0027s CSPROJ to reduce the initial memory allocation:\r\n`\u003cEmccTotalMemory\u003e134217728\u003c/EmccTotalMemory\u003e`\r\n\r\nNow instead I get this console error:\r\n\r\n```\r\nStreaming compilation failed. Falling back to ArrayBuffer instantiation.  TypeError: Could not download wasm module\r\nblazor.webassembly.js:1 TypeError: Failed to execute \u0027arrayBuffer\u0027 on \u0027Response\u0027: body stream is locked\r\nwindow.Module.s.printErr.e @ blazor.webassembly.js:1\r\n(anonymous) @ blazor.webassembly.js:1\r\nasync function (async)\r\n(anonymous) @ blazor.webassembly.js:1\r\nwindow.Module.s.instantiateWasm @ blazor.webassembly.js:1\r\ncreateWasm @ dotnet.6.0.0.qb2grxhl7x.js:1\r\n(anonymous) @ dotnet.6.0.0.qb2grxhl7x.js:1\r\nblazor.webassembly.js:1 Uncaught (in promise) TypeError: Failed to fetch\r\nasync function (async)\r\naddToCacheAsync @ blazor.webassembly.js:1\r\nloadResourceWithCaching @ blazor.webassembly.js:1\r\nasync function (async)\r\nloadResourceWithCaching @ blazor.webassembly.js:1\r\nloadResource @ blazor.webassembly.js:1\r\n(anonymous) @ blazor.webassembly.js:1\r\nwindow.__wasmmodulecallback__ @ blazor.webassembly.js:1\r\n(anonymous) @ VM20:1\r\n(anonymous) @ blazor.webassembly.js:1\r\nPromise @ blazor.webassembly.js:1\r\nstart @ blazor.webassembly.js:1\r\nSt @ blazor.webassembly.js:1\r\nasync function (async)\r\nSt @ blazor.webassembly.js:1\r\n(anonymous) @ blazor.webassembly.js:1\r\n(anonymous) @ blazor.webassembly.js:1\r\nblazor.webassembly.js:1 Uncaught (in promise) TypeError: Failed to execute \u0027arrayBuffer\u0027 on \u0027Response\u0027: body stream is locked\r\n    at e.response.then.e (blazor.webassembly.js:1)\r\n```\r\n\r\n\r\n",
                                           "updatedAt":  "2021-11-29T14:30:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46hjd4",
                                           "createdAt":  "2021-11-29T17:55:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-11-29T17:55:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46hjfa",
                                           "createdAt":  "2021-11-29T17:55:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mkArtakMSFT",
                                           "body":  "@lewing can you guys please look into this? Thanks!",
                                           "updatedAt":  "2021-11-29T17:55:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46tQ6v",
                                           "createdAt":  "2021-12-02T19:41:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "legistek",
                                           "body":  "Just a little more information that may help:\r\n\r\nI tried a second project that shares a lot of the code with the first one, but is quite a bit smaller. This one originally crashed with the same issue, prior to me using the `EmccTotalMemory` tag.\r\n\r\nOnce I added `EmccTotalMemory` to 128MB, it worked fine.\r\n\r\nMy main project, however, crashes no matter what memory setting I used. (Well, I\u0027ve tried 128MB and 256MB). \r\n\r\nIt does seem likely that the `EmccTotalMemory` issue has something to do with this though.\r\n\r\nPerhaps someone close to that issue could provide some tips on how to set it properly? Or is there any way of knowing how much memory a particular Chrome version will allow for the array buffer on a particular device?\r\n\r\nThanks!\r\n",
                                           "updatedAt":  "2021-12-02T19:41:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc47Fi_i",
                                           "createdAt":  "2021-12-10T21:33:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nHi, unfortunately this closed issue seems to have re-emerged. \r\n\r\nAOT .NET6 works perfectly in Chrome on Windows but on mobile Android the Webassembly piece starts to load, then gives the \"Aw Snap\" reload screen of death.  Also works perfectly on mobile Chrome when using interpreted mode so this is limited to AOT on Chrome Mobile. \r\n\r\nOther info:\r\nChrome 96.0.4664.45\r\nAndroid 11\r\nPixel 4 XL Build RQ3A.210905.001\r\n\r\nMy co-worker had the same problem on his Pixel 5, but NOT when using the Adblock browser - only Chrome.\r\n\r\nI\u0027m afraid I\u0027m not in a position to post code and have not found the minimal reproducible steps yet. I\u0027m hoping someone might understand the basics of what might be going on sufficiently to suggest some diagnostic steps. \r\n\r\nBTW, it took me awhile to get around to upgrading to NET6 to try AOT but it\u0027s really fantastic. My application is MUCH MUCH faster across the board and honestly the file sizes and startup times aren\u0027t any worse than our legacy Angular app primarily because our main JS payload is so much smaller now. \r\n\r\nSo I really think AOT will be important for mobile devices and will do what I can to assist in finding a solution to this.\r\n\r\n_Originally posted by @danroth27 in https://github.com/dotnet/aspnetcore/issues/33559#issuecomment-885895324_\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003elegistek\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-wasm`, `area-Codegen-AOT-mono`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-12-10T21:33:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc47FjF3",
                                           "createdAt":  "2021-12-10T21:34:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "cc @radekdoulik",
                                           "updatedAt":  "2021-12-10T21:34:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc48b5bj",
                                           "createdAt":  "2022-01-16T20:25:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "legistek",
                                           "body":  "Hi all - I realize it may be awhile before anyone can turn to this, but I figured I\u0027d offer this update -\r\n\r\nMy application works fine, AOT or interpreted, on a new iPad.\r\n\r\nThus, so far, the only issue is AOT on Android.",
                                           "updatedAt":  "2022-01-16T20:25:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5BoERG",
                                           "createdAt":  "2022-04-18T02:02:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Jack-Edwards",
                                           "body":  "I am experiencing the same issue with several browsers on Android: Chrome, Firefox, and DuckDuckGo.  Either the page is stuck in \"Loading...\" mode (Firefox and DuckDuckGo) or Chrome shows the \"Aw, Snap!\" error page.  This only occurs when I enable AOT compilation.  Everything works fine after disabling AOT compilation and republishing/redeploying.",
                                           "updatedAt":  "2022-04-18T02:02:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5BqX87",
                                           "createdAt":  "2022-04-18T18:18:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "legistek",
                                           "body":  "Sorry for your trouble but glad to know it\u0027s not just me.  Is anyone on the Blazor team able to look into this? Unfortunately it makes AOT unusable for us.",
                                           "updatedAt":  "2022-04-18T18:18:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CLwfS",
                                           "createdAt":  "2022-04-27T00:32:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCZ_eOw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "legistek",
                                                                               "createdAt":  "2022-04-27T00:34:35Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "benny-adiwijaya",
                                                                               "createdAt":  "2022-04-27T03:33:57Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "Norsotec",
                                           "body":  "i need this to be fixed asap tbh. I bet on blazor and my app is running on \u003e100 Android Devices, now without AOT. My client reported me already about the performance decrease. Hope to get any fix asap.",
                                           "updatedAt":  "2022-04-27T00:32:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CPpwB",
                                           "createdAt":  "2022-04-27T19:30:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "It sounds like the apps are hitting chrome android wasm memory limits when aot compiled.  Since this is likely application specific we\u0027d need a way to reproduce the error to even begin to understand why.",
                                           "updatedAt":  "2022-04-27T19:30:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CPshJ",
                                           "createdAt":  "2022-04-27T19:44:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Jack-Edwards",
                                           "body":  "My application is open source.  Feel free to compile and run it.  When I run the app locally using `dotnet run`, the ArrayBuffer memory consumption reported by desktop browsers is under 90 MiB.",
                                           "updatedAt":  "2022-04-27T19:44:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CP1Rm",
                                           "createdAt":  "2022-04-27T20:24:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "legistek",
                                           "body":  "\u003e chrome android wasm memory limits\r\n\r\nDo we have any way of knowing what those are? Do they vary by device? \r\n\r\n\u003e Since this is likely application specific we\u0027d need a way to reproduce the error to even begin to understand why.\r\n\r\nThe \"why\" is the applications are complex. Since they work perfectly in interpreted mode and other devices this is plainly not an issue with our code. If we have to keep our app sizes low to avoid crashing, then we need some way of knowing what the size limits are.",
                                           "updatedAt":  "2022-04-27T20:24:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CP1_r",
                                           "createdAt":  "2022-04-27T20:27:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "legistek",
                                           "body":  "Also just to be clear, whether it crashes is based solely on the size of the executables and not any memory allocation done by our applications. I know because my application\u0027s WASM never actually gets invoked (I have console.logs etc. to trigger when main() is executed). ",
                                           "updatedAt":  "2022-04-27T20:27:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CQAT7",
                                           "createdAt":  "2022-04-27T21:16:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "can you please attach the output of chrome://version from a failing device",
                                           "updatedAt":  "2022-04-27T21:16:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CQBIi",
                                           "createdAt":  "2022-04-27T21:20:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "legistek",
                                           "body":  "Of course. Hope this helps.\r\n\r\n ```\r\nGoogle LLC\r\nCopyright 2022 Google LLC. All rights reserved.\r\nGoogle Chrome\t100.0.4896.127 (Official Build) (32-bit) \r\nRevision\tff0d0695743e65305d7194f9bd309e5e1c824aa0-refs/branch-heads/4896_88@{#4}\r\nOS\tAndroid 12; Pixel 4 XL Build/SP2A.220305.012\r\nGoogle Play services\tSDK=220680000; Installed=221514044; Access=1p\r\nJavaScript\tV8 10.0.139.15\r\nUser Agent\tMozilla/5.0 (Linux; Android 12; Pixel 4 XL) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Mobile Safari/537.36\r\nCommand Line\t--use-mobile-user-agent --top-controls-show-threshold=0.5 --top-controls-hide-threshold=0.5 --use-mobile-user-agent --enable-viewport --validate-input-event-stream --enable-longpress-drag-selection --touch-selection-strategy=direction --disable-composited-antialiasing --enable-dom-distiller --flag-switches-begin --flag-switches-end --top-controls-show-threshold=0.5 --top-controls-hide-threshold=0.5\r\nExecutable Path\tNo such file or directory\r\nProfile Path\t/data/user/0/com.android.chrome/app_chrome/Default\r\nVariations\t4f59692b-ca7d8d80\r\n65ac254a-377be55a\r\n5c56da73-ca7d8d80\r\ne306c0f3-ca7d8d80\r\n62f1d3ce-fd5dd07c\r\n3a66a871-377be55a\r\n4547826d-ea65074f\r\nd382db9b-377be55a\r\n61704cf4-5df7abeb\r\n38213490-33c3eba5\r\n112b64df-ca7d8d80\r\n47722f0d-ca7d8d80\r\n3e7d7783-ca7d8d80\r\n7e184ca7-33c3eba5\r\nf908d585-377be55a\r\nb515b249-ca7d8d80\r\na112f012-6edc92c7\r\n16b16054-377be55a\r\n50d45193-ca7d8d80\r\n59b6f412-377be55a\r\n60d4b352-377be55a\r\n3e8fe123-ca7d8d80\r\n15e85316-ca7d8d80\r\n8fb64725-12ede6a2\r\n534138de-ca7d8d80\r\n72233f8b-ca7d8d80\r\n273268f8-935c8049\r\n6cb5e962-377be55a\r\na77166f2-ca7d8d80\r\n6e08fc3e-42aa9e1d\r\neddd0d82-107edff7\r\n53879ff4-ca7d8d80\r\nf3763f99-ca7d8d80\r\n826f3281-ca7d8d80\r\n87f33ad6-ca7d8d80\r\n91c89351-377be55a\r\n421c54-377be55a\r\n3095aa95-3f4a17df\r\nda05e4eb-3e0c486f\r\n18ed1312-b89512ca\r\n2f63bb4b-ee68549f\r\n38262571-6edc92c7\r\nc2fcf59c-f29a9da2\r\nfa0fb40b-ca7d8d80\r\nf26e9e11-ca7d8d80\r\n7aa01420-6dea9697\r\ne548d538-ca7d8d80\r\n41e765a5-65c2de82\r\n44c2e2c0-fc111c29\r\n56fb8525-3f4a17df\r\n84ef82df-ca7d8d80\r\nf6c8ea70-ca7d8d80\r\n65570806-ebfb497f\r\n440a1764-377be55a\r\n53fd5552-5f66ab04\r\ndd8d67e-a9080253\r\n363012bc-ca7d8d80\r\na582a1b8-ad75ce17\r\n8d569531-62714bf0\r\na5b9261b-219af806\r\na37c6974-ca7d8d80\r\nf2e6ae40-dfec247a\r\nda2d8531-ca7d8d80\r\n1f5e8c3a-cfdfb84f\r\n62c71f3-d88bc9c1\r\n6cd75d26-ca7d8d80\r\ne4a357e9-a8ca353b\r\nd9384a1d-ca7d8d80\r\n2ba47366-ca7d8d80\r\n248c3fbd-ca7d8d80\r\n6ea69886-ca7d8d80\r\n25ad6029-ca7d8d80\r\nabf5aad6-5bd15e37\r\nb4d9badf-40e2b871\r\n8835ae81-e6e520d9\r\n906834f5-9da5e2a0\r\n8bf75a63-ca7d8d80\r\n5e3a236d-4113a79e\r\n8bccc03b-ca7d8d80\r\n69d4ebd5-1f8c5973\r\neaae7a36-667038f7\r\n72e4712b-33c3eba5\r\n8500acb0-f0b68a85\r\n94fbee8a-ca7d8d80\r\nf7a3ec9-377be55a\r\n470b3a8b-12ede6a2\r\ne153f4cb-377be55a\r\nf4187eec-ca7d8d80\r\nca5a2953-ca7d8d80\r\nda493d3c-ca7d8d80\r\n64a3b934-ca7d8d80\r\na284ff81-ca7d8d80\r\nf677f007-73bd376b\r\n47de1263-3d47f4f4\r\n4ea303a6-ecbb250e\r\nc5dfd685-ca7d8d80\r\n89f54299-93fbae77\r\nbfaf635f-ca7d8d80\r\nfc7e4d22-a2d707c6\r\n7d74eac0-ca7d8d80\r\n597963a0-891c71fc\r\n56bf6ea2-12ede6a2\r\n9af490f6-ee63ae02\r\n622d1a3c-ca7d8d80\r\n62e55d5e-377be55a\r\n5404a50f-28ad44a\r\n22723ee1-ca7d8d80\r\n2afb0ba9-ca7d8d80\r\n3aa1e8b7-377be55a\r\n931c5f72-5c0c1f00\r\n494d8760-52325d43\r\n7b2873c2-5f08a1ab\r\n3ac60855-486e2a9c\r\nf48c01d3-2a0e5f33\r\n63dcb6a3-45641d72\r\ne706e746-8282a32d\r\nf296190c-eaceac83\r\n4442aae2-7158671e\r\nf690cf64-6e3b1976\r\ned1d377-e1cc0f14\r\n75f0f0a0-4ad60575\r\n710c3f90-6bdfffe7\r\ne2b18481-cdc3d902\r\ne7e71889-4ad60575\r\n3a8271ac-12c226\r\n2d3dfd19-377be55a\r\n6979ab2b-ca7d8d80\r\n248e3a0-377be55a\r\n4ebfaf88-ca7d8d80\r\n595f5eb0-ca7d8d80\r\nbef5c006-ca7d8d80\r\n1166396-ab02a1cf\r\n4c973162-64762731\r\nc2f68a06-ca7d8d80\r\nc3859e82-93b196c8\r\n636e2847-ca7d8d80\r\n5e31bb48-ca7d8d80\r\nc4c291c4-50cfd6a4\r\n```",
                                           "updatedAt":  "2022-04-27T21:20:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CQCTJ",
                                           "createdAt":  "2022-04-27T21:26:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Jack-Edwards",
                                           "body":  "I think @legistek is on the right track with large file sizes being the problem.  As I recall when testing, Chrome reported there was only 10-12 MB worth of stuff in the browser cache after a crash occurred.  `dotnet.wasm` is 53 MB uncompressed when using AOT compilation.",
                                           "updatedAt":  "2022-04-27T21:27:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CQD99",
                                           "createdAt":  "2022-04-27T21:35:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "does the app work in edge on android?",
                                           "updatedAt":  "2022-04-27T21:35:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CQEvP",
                                           "createdAt":  "2022-04-27T21:39:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "legistek",
                                           "body":  "\u003e does the app work in edge on android?\r\n\r\nI didn\u0027t know there was such a thing. ;) I\u0027ll try it out. Like Jack I gave up on AOT awhile ago so will have to rebuild. \r\nIt DID work on the Adblock browser on Android, which is not Chromium based.",
                                           "updatedAt":  "2022-04-27T21:39:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CQUn5",
                                           "createdAt":  "2022-04-27T23:29:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "\u003e \u003e does the app work in edge on android?\r\n\u003e \r\n\u003e I didn\u0027t know there was such a thing. ;) I\u0027ll try it out. Like Jack I gave up on AOT awhile ago so will have to rebuild. It DID work on the Adblock browser on Android, which is not Chromium based.\r\n\r\nedge _is_ chromium based but there is an important difference that suspect is the cause of the problem here",
                                           "updatedAt":  "2022-04-27T23:29:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CSoIA",
                                           "createdAt":  "2022-04-28T13:05:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "legistek",
                                           "body":  "AOT seems to work fine in Edge for Android. Man I forgot how much faster it was; would really be great if this could be sorted out.\r\n\r\nJust for kicks I tried it again in Chrome Android and this time - for the first time - I was able to get the app running for awhile before I got \"Aw Snap\". But I did get \"Aw Snap\" eventually. I must be at the borderline of RAM usage?",
                                           "updatedAt":  "2022-04-28T13:05:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CU_ib",
                                           "createdAt":  "2022-04-29T01:24:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCt4LDw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Jack-Edwards",
                                                                               "createdAt":  "2022-04-29T01:26:18Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kg",
                                                                               "createdAt":  "2022-10-14T17:15:28Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "lewing",
                                           "body":  "The behavior you are experiencing is due to a 32bit build of Chrome and the resulting lack of address space.  The issue and the comment here https://github.com/WebAssembly/design/issues/1397#issuecomment-963561649 describe the situation.  Edge on android is a 64bit build so it doesn\u0027t have the same issue.  We\u0027re discussing if there anything we can do on the runtime side to make the problem less acute.",
                                           "updatedAt":  "2022-04-29T01:24:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CWzME",
                                           "createdAt":  "2022-04-29T12:47:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "legistek",
                                           "body":  "Whoa, that issue comment you linked to seems to be saying WASM across the board is not suitable for mobile devices. \r\n\r\nWhy doesn\u0027t this happen in interpreted mode? And should we expect it will if the application gets complex enough?",
                                           "updatedAt":  "2022-04-29T12:47:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5KIDMB",
                                           "createdAt":  "2022-09-12T11:50:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Webreaper",
                                           "body":  "Also hitting this - my .Net 7-preview-7 app runs fine on Android unless I enable AOT compilation, at which point it breaks (never gets to the point of executing any code in Program.cs in WASM). \r\n\r\nThis is running on Android 12, Chrome 105. It runs fine in Edge. According to the earlier comment, the issue is a lack of 64-bit Chrome, because that isn\u0027t available for devices with less than 8GB. I\u0027m running this on an S21FE which has 8GB....\r\n\r\nLooking forward to seeing what can be done to make this a) work and b) easier to debug.",
                                           "updatedAt":  "2022-09-12T11:57:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5KWVLQ",
                                           "createdAt":  "2022-09-14T22:32:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "legistek",
                                           "body":  "\u003e Looking forward to seeing what can be done to make this a) work and b) easier to debug.\r\n\r\nI imagine if Microsoft ever decided to port its Office apps to Blazor it would be addressed REAL fast. Until then there doesn\u0027t seem to be much attention being placed on mobile device compatibility. ",
                                           "updatedAt":  "2022-09-14T22:32:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5LQtSi",
                                           "createdAt":  "2022-09-29T18:37:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sengiv",
                                           "body":  "Problem with **Chrome Android**  still persists in **.NET 7.0.100-rc.1 preview.**\r\nBased on this stat, it looks like if you use **Blazor AoT**,\r\nyou will only abandon about 50% of users out there.\r\n\r\n![2022-09-30 08_36_29-Mobile browsers market shares _ world](https://user-images.githubusercontent.com/43817262/193165782-c41d2254-afd5-4a7b-9072-a5dd6e9c0ebf.png)\r\n",
                                           "updatedAt":  "2022-09-30T00:44:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5LSE4B",
                                           "createdAt":  "2022-09-30T02:26:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Jack-Edwards",
                                           "body":  "A pretty straightforward work-around is to host a separate, non-AOT compiled version of your application for mobile browsers.  Feel free to use the Nginx configurations I am making available in the pull request linked above (or [here](https://github.com/Crypter-File-Transfer/Crypter/pull/413)).  The redirect criteria were pulled from http://detectmobilebrowsers.com/",
                                           "updatedAt":  "2022-09-30T02:47:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5UWY5W",
                                           "createdAt":  "2023-02-03T06:53:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "praschl",
                                           "body":  "We are also experiencing this issue:\r\n- AOT works on PC with Chrome, Edge, Firefox\r\n- AOT works on Android with Edge, Firefox, Brave and at least one more I cant remember\r\n- AOT fails on Android with Chrome\r\n- AOT fails on iOS (all browsers, since all use the same engine)\r\n\r\nHosting a non-AOT version for mobile is no option. The performance gain is crucial even more for  mobile devices.",
                                           "updatedAt":  "2023-02-03T06:53:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5UYsli",
                                           "createdAt":  "2023-02-03T11:48:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "\u003e Once I added `EmccTotalMemory` to 128MB, it worked fine.\r\n\r\nThat would be probably hotfixed by https://github.com/dotnet/runtime/pull/80849 for next Net7 service release. \r\nIn Net8 is even better fix for that.\r\nThe property is now called `EmccInitialHeapSize`\r\n\r\n\u003e My main project, however, crashes no matter what memory setting I used. (Well, I\u0027ve tried 128MB and 256MB).\r\n\r\nLarge projects produce large AOT images. \r\nThere are good improvements for AOT size by @vargaz in Net8 under \"dedup\" theme.\r\nhttps://github.com/dotnet/runtime/pulls?q=is%3Apr+author%3Avargaz+sort%3Aupdated-desc+is%3Aclosed+dedup",
                                           "updatedAt":  "2023-02-03T11:48:54Z"
                                       }
                                   ],
                         "totalCount":  38
                     },
        "title":  "Webassembly AOT Crashes Android Mobile (v96)",
        "labels":  [
                       "arch-wasm",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/61844",
        "createdAt":  "2021-11-19T16:24:03Z",
        "number":  61844,
        "author":  "lambdageek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCDVyBA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "grendello",
                                            "createdAt":  "2021-11-19T16:31:16Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2024-05-27T16:35:07Z",
        "body":  "We should generate AOT images with the NX bit set for AOT on android.\r\n\r\nEssentially we would need to pass the `--noexecstack` bit to the linker for the final linking step.\r\n\r\nWe should probably set this linker flag by default for all Android AOT.\r\n\r\nRelated to https://github.com/xamarin/xamarin-android/issues/6502",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOaB8Gug==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc46EVsV",
                                           "createdAt":  "2021-11-19T16:24:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027arch-android\u0027: @steveisok, @akoeplinger\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nWe should generate AOT images with the NX bit set for profiled AOT.\r\n\r\nEssentially we would need to pass the `--noexecstack` bit to the linker for the final linking step.\r\n\r\nWe should probably set this linker flag by default for all Android AOT.\r\n\r\nRelated to https://github.com/xamarin/xamarin-android/issues/6502\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003elambdageek\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`os-android`, `area-Codegen-AOT-mono`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e6.0.x\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-11-19T16:24:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46EVvL",
                                           "createdAt":  "2021-11-19T16:24:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "We may need to do this in mono/mono, too",
                                           "updatedAt":  "2021-11-19T16:24:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5h6xTE",
                                           "createdAt":  "2023-07-19T21:44:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "@lambdageek do you want me to add this to the .net 8 backlog?",
                                           "updatedAt":  "2023-07-19T21:44:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5h_QMV",
                                           "createdAt":  "2023-07-20T13:53:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "@steveisok yea, It seems like https://github.com/xamarin/xamarin-android/issues/6502 has a fairly compelling use case.  AFAICT we would \"just\" need to teach the aot compiler to pass this extra flag to the linker, and then add something to the aot compiler msuild task to to pass this flag.   Actually do we have a generic \"extra linker flags\" property that the aot compiler would respect? maybe this can be fixed in xamarin-android instead of the runtime?",
                                           "updatedAt":  "2023-07-20T13:53:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5h_X9d",
                                           "createdAt":  "2023-07-20T14:12:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "\u003e Actually do we have a generic \"extra linker flags\" property that the aot compiler would respect? maybe this can be fixed in xamarin-android instead of the runtime?\r\n\r\nThere are aot arguments that can be passed on a per assembly basis. Android already does this w/ setting things like temp-path and other extras.",
                                           "updatedAt":  "2023-07-20T14:12:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5oHwa6",
                                           "createdAt":  "2023-10-04T13:18:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SamMonoRT",
                                           "body":  "@simonrozsival @mdh1418 - this seems in the broader linker area, passing flags from the aot compiler. ",
                                           "updatedAt":  "2023-10-04T13:18:58Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "[Android] Support creating NX DSOs for AOT",
        "labels":  [
                       "os-android",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/61845",
        "createdAt":  "2021-11-19T16:28:37Z",
        "number":  61845,
        "author":  "lambdageek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCDV0gQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "grendello",
                                            "createdAt":  "2021-11-19T16:35:02Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-08-09T10:56:10Z",
        "body":  "We should support generating AOT code compatible with `-fstack-protector` and emit [CFI directives](https://sourceware.org/binutils/docs/as/CFI-directives.html) or the relevant LLVM bitcode, for mini AOT and LLVM AOT, respectively.\r\n\r\nOne use case is Android profiled AOT, see https://github.com/xamarin/xamarin-android/issues/6502\r\nBut it is something that may be useful on other targets",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOvPui0g==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc46EYw9",
                                           "createdAt":  "2021-11-19T16:39:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "On LLVM, it looks like this is the `ssp` function attribute https://llvm.org/docs/LangRef.html#function-attributes.  I\u0027m not sure if it\u0027s enough to set the `ssp` flag on the functions we emit, or if we also need to change some other aspects of our LLVM backend.  We would need to investigate.",
                                           "updatedAt":  "2021-11-19T16:39:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc68-6LS",
                                           "createdAt":  "2025-08-09T10:56:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danardelean",
                                           "body":  "This would actually be required for increasing application security. When running an Mobile Application Penetration Test on an .NET MAUI Android application a red flag was raised for:\n\nM07:2024 - BINARY LIBRARIES WITHOUT SECURE PROPRIETIES\nHigh 7.6\nCVSS v3.0 Base Score 7.6\nCVSS:3.0/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N\nCVSS v4.0 Base Score 8.2\nCVSS:4.0/AV:L/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N\n\nThe absence of stack canary–based protection and the partial application of\nRELRO (Relocation Read-Only) have been detected in some of the native libraries (.so) included in the application.\nThese protections are essential mechanisms for mitigating low-level attacks, such as buffer overflows, memory corruption, or Return-Oriented Programming (ROP) techniques.\nThe absence or incomplete implementation of these properties makes the libraries more susceptible to exploitation through memory vulnerabilities and compromises the overall resilience of the app.\nNative code can benefit from various protection measures, including:\nRELRO (RELocation Read-Only): a memory-hardening technique that makes the Global Offset Table (GOT) section partially or fully read-only, preventing typical GOT-overwrite attacks used in memory-corruption exploits.\nASLR (Address Space Layout Randomization): an address-space randomization technique that dynamically changes the loading addresses of code sections and shared libraries, reducing predictability and preventing controlled jumps within memory.\nNX (No-eXecute) / DEP (Data Execution Prevention): a protection flag that marks specific memory regions (e.g., stack, heap) as non-executable, preventing arbitrary code execution in areas reserved for data.\nStack Canary: a protection mechanism that inserts a guard value (canary) between the frame pointer and the return address on the stack. In the event of a stack overflow, the value is corrupted and detected before returning from the function, preventing the execution of the exploit.\n\n\u003cimg width=\"1948\" height=\"1304\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/9cebe62b-7e15-4ca9-a0ea-360724f342e2\" /\u003e\n\nIMPACT\nIncreased risk of memory-based attacks, such as stack overflows or code-reuse exploits\nPotential execution of arbitrary code in compromised environments or on rooted devices\nPossible local privilege escalation on vulnerable or shared devices\nExpanded attack surface, especially in critical apps (e.g., fintech, enterprise)\nREMEDIATION ACTIONS\nRecompile all native libraries with security options:\n-fstack-protector-strong to enable stack canary\n-z relro -z now to enable full RELRO\nCombine with -fPIE -pie to ensure ASLR compatibility\nPerform automated scans using tools such as checksec, hardening-check, readelf\nAutomate binary security checks within the CI/CD process\nAvoid using third-party .so libraries that are not hardened or not up-to-date\nREFERENCES\nOWASP Mobile Top 10 – 2024: M7 – Inadequate Supply Chain, Code, or Resource Protection\nhttps://owasp.org/www-project-mobile-top-10/\nOWASP MSTG-CODE-9: Binary Protections\nhttps://owasp.org/www-project-mobile-security-testing-guide/latest/Testing-Code-Quality-and-Build-Settings/\nCWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\nhttps://cwe.mitre.org/data/definitions/119.html\nLinux Hardening – checksec.sh\nhttps://github.com/slimm609/checksec.sh",
                                           "updatedAt":  "2025-08-09T10:56:09Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "[mini] Support stack protector codegen",
        "labels":  [
                       "area-Codegen-AOT-mono",
                       "feature-request"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/61855",
        "createdAt":  "2021-11-19T22:06:53Z",
        "number":  61855,
        "author":  "pranavkm",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCsRAUA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ScottRFrost",
                                            "createdAt":  "2021-12-01T21:30:13Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "georg-jung",
                                            "createdAt":  "2022-04-29T03:03:51Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jirisykora83",
                                            "createdAt":  "2022-05-24T09:26:59Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "pavelsavara",
                                            "createdAt":  "2023-01-16T10:37:09Z"
                                        }
                                    ],
                          "totalCount":  4
                      },
        "updatedAt":  "2021-11-19T22:10:05Z",
        "body":  "This issue came up as part of Blazor\u0027s bottom-up planning. \r\n\r\nToday, as part of AOT compilation, wasm-tools performs a best effort work trying to AOT as much of the app as possible. While this means faster performance for CPU intensive work, the fallout is the increased app size as a result of code that would not benefit from such optimization. One option to mitigate this might be to allow annotating the code so that a user is able to opt-in / opt-out out of AOT for assemblies (similar to `\u003cTrimmable\u003etrue\u003c/Trimmable\u003e` for trimming).",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOOhXF8Q==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc46FcXx",
                                           "createdAt":  "2021-11-19T22:10:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThis issue came up as part of Blazor\u0027s bottom-up planning. \r\n\r\nToday, as part of AOT compilation, wasm-tools performs a best effort work trying to AOT as much of the app as possible. While this means faster performance for CPU intensive work, the fallout is the increased app size as a result of code that would not benefit from such optimization. One option to mitigate this might be to allow annotating the code so that a user is able to opt-in / opt-out out of AOT for assemblies (similar to `\u003cTrimmable\u003etrue\u003c/Trimmable\u003e` for trimming).\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003epranavkm\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-wasm`, `area-Codegen-AOT-mono`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003eFuture\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-11-19T22:10:04Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "[WASM] Allow users to selectively AOT certain assemblies",
        "labels":  [
                       "arch-wasm",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/62334",
        "createdAt":  "2021-12-03T14:37:14Z",
        "number":  62334,
        "author":  "thaystg",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-05-21T16:25:15Z",
        "body":  "The new test from https://github.com/dotnet/runtime/pull/60770\r\n```\r\nLoader/classloader/DefaultInterfaceMethods/regressions/github60486/github60486.sh\r\n```\r\n\r\nTest from #60770 is failing on the AOT lane - looks like context-\u003emethod_inst is non-NULL but garbage:\r\n\r\nhttps://helix.dot.net/api/2019-06-17/jobs/37967d43-ee2b-411f-aa01-5e4f6f0fab43/workitems/Loader.classloader/console\r\n\r\nLook at collect_ginst_images in frame 6\r\n\r\n```\r\n      Thread 1 (Thread 0x7f5b14887740 (LWP 15280)):\r\n      #0  0x00007f5b1426032a in __waitpid (pid=15312, stat_loc=0x7fff9c8a4840, options=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30\r\n      #1  0x00007f5b11ea4917 in dump_native_stacktrace (signal=\u003coptimized out\u003e, mctx=\u003coptimized out\u003e) at /__w/1/s/src/mono/mono/mini/mini-posix.c:842\r\n      #2  mono_dump_native_crash_info (signal=\u003coptimized out\u003e, mctx=0x7fff9c8a53b0, info=\u003coptimized out\u003e) at /__w/1/s/src/mono/mono/mini/mini-posix.c:869\r\n      #3  0x00007f5b11e46a1e in mono_handle_native_crash (signal=0x7f5b116e9be9 \"SIGSEGV\", mctx=0x7fff9c8a53b0, info=0x7fff9c8a5670) at /__w/1/s/src/mono/mono/mini/mini-exceptions.c:2947\r\n      #4  0x00007f5b11da6741 in mono_sigsegv_signal_handler_debug (_dummy=11, _info=0x7fff9c8a5670, context=0x7fff9c8a5540, debug_fault_addr=0x17) at /__w/1/s/src/mono/mono/mini/mini-runtime.c:3709\r\n      #5  \u003csignal handler called\u003e\r\n      #6  collect_ginst_images (ginst=0x13, data=0x7fff9c8a5af8) at /__w/1/s/src/mono/mono/metadata/metadata.c:3031\r\n      #7  collect_method_images (method=0x55dba8cdb080, data=0x7fff9c8a5af8) at /__w/1/s/src/mono/mono/metadata/metadata.c:3074\r\n      #8  mono_metadata_get_mem_manager_for_method (method=0x55dba8cdb080) at /__w/1/s/src/mono/mono/metadata/metadata.c:3324\r\n      #9  0x00007f5b11c6a4ff in mono_class_inflate_generic_method_full_checked (method=0x55dba84312c0, klass_hint=\u003coptimized out\u003e, context=0x7fff9c8a5da8, error=0x7fff9c8a5db8) at /__w/1/s/src/mono/mono/metadata/class.c:1210\r\n      #10 0x00007f5b11e43871 in get_method_from_stack_frame (ji=0x55dba8ceac00, generic_info=0x55dba8407e28) at /__w/1/s/src/mono/mono/mini/mini-exceptions.c:899\r\n      #11 0x00007f5b11e44323 in ves_icall_get_frame_info (skip=-1, need_file_info=1 \u0027\\001\u0027, method=0x7fff9c8a6370, iloffset=0x7fff9c8a6360, native_offset=0x7fff9c8a6364, file=0x7fff9c8a6378, line=0x7fff9c8a6368, column=0x7fff9c8a636c) at /__w/1/s/src/mono/mono/mini/mini-exceptions.c:1465\r\n      #12 0x0000000041bfc3da in ?? ()\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOOsHNPw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc46vqCG",
                                           "createdAt":  "2021-12-03T14:37:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-12-03T14:37:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46wap-",
                                           "createdAt":  "2021-12-03T19:24:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "We backported the original fix to https://github.com/mono/mono/pull/21356 - will need to update there too",
                                           "updatedAt":  "2021-12-03T19:24:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46wa3K",
                                           "createdAt":  "2021-12-03T19:25:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "/cc @vargaz ",
                                           "updatedAt":  "2021-12-03T19:25:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46wc0_",
                                           "createdAt":  "2021-12-03T19:39:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "frame 10 is `get_method_from_stack_frame`\r\n\r\nhttps://github.com/dotnet/runtime/blob/5789792167571c4121ef1d397e4678ba360c77b3/src/mono/mono/mini/mini-exceptions.c#L895-L899  \r\n\r\nwhich calls `mono_get_generic_context_from_stack_frame`\r\nthat has new code\r\n https://github.com/dotnet/runtime/blob/5789792167571c4121ef1d397e4678ba360c77b3/src/mono/mono/mini/mini-exceptions.c#L847-L849 \r\n\r\nwhich is setting `method_inst` to something from `mrgctx`\r\n\r\nAnd then that context is passed to `mono_class_inflate_generic_method_checked` and from there we get the stack trace in the crash",
                                           "updatedAt":  "2021-12-03T19:40:39Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "[mono] Context-\u003emethod_inst is non-NULL but garbage on AOT",
        "labels":  [
                       "disabled-test",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/63654",
        "createdAt":  "2022-01-11T22:59:50Z",
        "number":  63654,
        "author":  "jkoritzinsky",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCJnYEA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_DOWN",
                                            "user":  "lambdageek",
                                            "createdAt":  "2022-01-12T16:31:14Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2023-10-11T17:01:30Z",
        "body":  "We would like to add the ability to defer some AOT compilation errors until execution time.\r\n\r\nWhen the AOT compiler is generating code, there are some assemblies that contain code that it cannot handle (for example platform-dependent code that is never executed on mobile that depends on assemblies that are only present on desktop Windows). In this case instead of preventing the whole assembly from compiling, we should defer the actual error until execution time.\r\n\r\nAdditionally the runtime tests in `src/tests` include some test cases that intentionally have malformed metadata or that are expected to not compile with AOT.  In this case, we would like to allow some of the methods in the assemblies to be AOTed, without the problematic test cases blocking the testing of the whole assembly.\r\n\r\nTasks:\r\n\r\n- [x] Add an aot compiler option to allow some class of errors to be AOT-time warnings and to defer the actual error to runtime (initially as our generic \"Attempting to JIT compile method... while running in aot-only mode\") #64640 \r\n- [ ] Adjust mono AOT compiler errors and warnings to emit the prefix that MSBuild uses to capture warnings/errors from Exec tasks\r\n- [ ] Add `allow-errors` option to the MonoAOTCompiler task\r\n- [ ] Enable `\u0027allow-errors\u0027` mode in CI, re-enable disabled tests\r\n- [ ] For cases where it makes sense, make Mono AOT produce the same warning/error codes as NativeAOT \r\n- [ ] Add some support for specific execution-time AOT failure errors (either by emitting stub method bodies, or adding some error table to the AOT images, or something else)\r\n\r\n\r\n\r\nOriginal issue, below\r\n\r\n---\r\n\r\nIn the `src/tests` test tree, we test a number of corner cases of invalid code, including type layouts and `UnmanagedCallersOnly` usage. When running tests on Mono with LLVMFullAOT, some of these failures, including ones seen https://github.com/dotnet/runtime/pull/63320 and in some tests I\u0027ve listed below cause AOT-time failures. As a result, we need to exclude these assemblies from running through the AOT compiler.\r\n\r\nToday, we handle this by excluding the tests from AOT compilation via `issues.targets`. However, we\u0027re looking at moving away from `issues.targets` and towards using `[ActiveIssue]` attributes throughout our whole repo. This gets into a problem where we can\u0027t easily exclude methods from LLVMFullAOT, but we can\u0027t easily mark an assembly as \"skip AOT\" in the attribute model.\r\n\r\nI talked with @imhameed offline, and we thought of an idea that is similar to some mechanisms used within CoreCLR\u0027s NativeAOT for some scenarios like IL stub generation: Provide a mode for the Mono AOT compiler that, on failure, emits a stub method body that throws the exception that would have been thrown if the method was generated at runtime. In this mode, AOT compilation would succeed for cases where the program will ultimately fail at runtime, whereas today it fails at AOT-compilation time.\r\n\r\nThis will allow us to re-enable some tests on llvmfullaot runs or at least exclude them in a manner more accessible with `[ActiveIssue]` attributes.\r\n\r\nTests that are disabled today because they fail at AOT-time instead of run time:\r\n\r\n- All tests in the `Loader/classloader/explicitlayout/objrefandnonobjrefoverlap` subtree\r\n- `Loader/classloader/explicitlayout/NestedStructs/case03`\r\n- `Loader/classloader/explicitlayout/NestedStructs/case04`\r\n- `Loader/classloader/explicitlayout/NestedStructs/case05`\r\n- The `RuntimeMarshallingDisabled_NativeAssemblyEnabled` test suite in #63320\r\n\r\nThere may be others in that section that are disabled for the same reason but based on the issue metadata it looks like they fail at runtime.\r\n\r\ncc: @MichalStrehovsky I don\u0027t know if there\u0027s other places in NativeAOT where a mechanism like this might be useful for testing scenarios.\r\ncc: @trylek as this affects our work with refactoring the test tree",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOZWGTpw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc48Ol29",
                                           "createdAt":  "2022-01-11T23:25:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "This sounds like a good direction to me. /cc @davidwrighton and @jkotas in case they might have additional feedback to share.",
                                           "updatedAt":  "2022-01-11T23:25:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc48OnLE",
                                           "createdAt":  "2022-01-11T23:36:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "imhameed",
                                           "body":  "cc @lambdageek @vargaz ",
                                           "updatedAt":  "2022-01-11T23:36:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc48OreN",
                                           "createdAt":  "2022-01-11T23:49:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCJfGCg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkoritzinsky",
                                                                               "createdAt":  "2022-01-11T23:51:36Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "MichalStrehovsky",
                                           "body":  "\u003e cc: @MichalStrehovsky I don\u0027t know if there\u0027s other places in NativeAOT where a mechanism like this might be useful for testing scenarios.\r\n\r\nThe NativeAOT compiler does this here:\r\n\r\nhttps://github.com/dotnet/runtime/blob/032129cb2730a1609a8377d07cbcf891a7c8c5bb/src/coreclr/tools/aot/ILCompiler.RyuJit/Compiler/RyuJitCompilation.cs#L182-L214\r\n\r\nWe have a well-defined set of exception types that map to runtime exceptions (TypeLoadException, MarshalDirectiveException, BadImageFormatException, InvalidProgramException, FileNotFoundException, etc.). If one is thrown during a method body compilation, we catch it and recompile a method body that throws the matching exception type (and localized exception message) at runtime when the method body is reached.",
                                           "updatedAt":  "2022-01-11T23:49:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc48PLA3",
                                           "createdAt":  "2022-01-12T04:03:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vargaz",
                                           "body":  "The mono AOT compiler used to silently ignore AOT methods whose compilation caused an exception, but this was changed because those failures showed up at runtime, causing confusion with customers, so now the failures show up at build time.\r\n\r\n",
                                           "updatedAt":  "2022-01-12T04:03:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc48PLig",
                                           "createdAt":  "2022-01-12T04:08:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCJn-xQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkotas",
                                                                               "createdAt":  "2022-01-12T17:20:02Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "MichalStrehovsky",
                                           "body":  "\u003e those failures showed up at runtime, causing confusion with customers, so now the failures show up at build time.\r\n\r\nWhat was the failure mode? If they got \"Attempting to JIT compile method... while running in aot-only mode\" I can see how that would be confusing, but it can be done better.\r\n\r\nWe did this feature in .NET Native and NativeAOT because it\u0027s very common for customers to have broken/mismatched dependencies and AOT compilation failure resulted in customer sadness.",
                                           "updatedAt":  "2022-01-12T04:08:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc48PNSX",
                                           "createdAt":  "2022-01-12T04:22:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vargaz",
                                           "body":  "Yes, \u0027attempting to JIT compile method\u0027 was the common runtime error. The most common cause was mismatched dependencies. If these mismatches do not cause a build failure, then the resulting app would work sometimes, and would fail sometimes, which is not desirable either.",
                                           "updatedAt":  "2022-01-12T04:22:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc48PN5v",
                                           "createdAt":  "2022-01-12T04:26:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCMksew==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkotas",
                                                                               "createdAt":  "2022-01-12T17:20:24Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "lambdageek",
                                                                               "createdAt":  "2022-02-01T18:42:17Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "MichalStrehovsky",
                                           "body":  "\u003e the resulting app would work sometimes, and would fail sometimes, which is not desirable either.\r\n\r\nIt matches the behavior of non-AOT configuration, making the AOT step transparent to the user.",
                                           "updatedAt":  "2022-01-12T04:26:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc48PO5S",
                                           "createdAt":  "2022-01-12T04:34:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vargaz",
                                           "body":  "The build system for the mobile platforms have access to all the assemblies, so in theory, it can actually check whenever the assemblies are matching, and report some kind of user friendly error. This is not done right now, so the failures show up during the AOT process or at runtime.",
                                           "updatedAt":  "2022-01-12T04:34:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc48PTYs",
                                           "createdAt":  "2022-01-12T05:16:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichalStrehovsky",
                                           "body":  "For the scope of this bug, I think it would be sufficient to restore the old behavior under a command line switch. This would allow the amalgamated test to compile and the `ActiveIssue` on the method would prevent the \"Attempting to JIT compile\" exception from happening.\r\n\r\nGenerating the throwing stub is nice to have. I still believe it\u0027s better to allow these things to compile in general because it\u0027s pretty widespread (we still get bug reports every couple months for cases where even this is not sufficient - the customer has input that is so broken we don\u0027t detect it when compiling a method, only later when we generate data structures and at that point there\u0027s no spot to generate a throwing body; the fix for those is usually doing more eager validation during method compilation to hit these problems earlier).",
                                           "updatedAt":  "2022-01-12T05:16:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc48Rjfu",
                                           "createdAt":  "2022-01-12T16:35:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "I don\u0027t think this is the right approach. We want to test what is the actual behavior that customers experience. FullAOT fails the build at  conpile-time if there is a conpile-time error. Deferring errors to runtime would introduce a new behavior different from what users experience.\n\nIf we want to productize \"defer AOT errors to runtime\", then we can test that configuration. Otherwise this is just adding complexity to our tests.\n\nThe right approach, IMO, is for the test infrastructure to understand FullAOT testing and to be able to mark assemblies as expected to fail AOT. ",
                                           "updatedAt":  "2022-01-12T16:35:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc48RyBB",
                                           "createdAt":  "2022-01-12T17:39:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCJqscA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MichalStrehovsky",
                                                                               "createdAt":  "2022-01-12T22:03:16Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "The problem with marking assemblies as expected to fail AOT is that we lose coverage of other tests in that assembly. For example, in #63320, only one test case has failures during AOT compilation, but it would be useful to run the other test cases in the FullAOT configuration. As it is today, we\u0027re losing test coverage. Additionally, as we move forward with consolidating assemblies in the `src/tests` tree to reduce build times, we\u0027d end up with less ability to disable tests at a smaller scale without disabling tons of other tests.",
                                           "updatedAt":  "2022-01-12T17:39:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc48xm85",
                                           "createdAt":  "2022-01-24T01:45:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichalStrehovsky",
                                           "body":  "\u003e I don\u0027t think this is the right approach. We want to test what is the actual behavior that customers experience. FullAOT fails the build at conpile-time if there is a conpile-time error. Deferring errors to runtime would introduce a new behavior different from what users experience.\r\n\r\nI think we should change that behavior for fullAOT so that it can defer the failure to runtime.\r\n\r\nErrors deferred to runtime is the behavior users get sans AOT compilation. The runtime doesn\u0027t fail to load an assembly if one of the references is missing at startup: instead, it lets the code run until a problematic codepath is hit. The deferred failure mode is why people often don\u0027t notice that they\u0027re shipping broken assemblies and there are so many of those in the wild.\r\n\r\nWe design/ship our tools (IL Linker, crossgen2, NativeAOT) to be tolerant to such garbage input. Mono fullAOT should align with how other tools handle it.",
                                           "updatedAt":  "2022-01-24T01:45:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc49NjKe",
                                           "createdAt":  "2022-02-01T15:22:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "I\u0027m more open to this as a customer-visible change.  In terms of badness, I think having a \"special testing mode\" that is unlike what customers actual use is a bad idea.  \r\n\r\nOn the other hand, having a customer-visible option for FullAOT to be tolerant of bad input and to signal problems at runtime seems less bad.  (I still think it should be an option, not an uncontrollable change in behavior.  Detecting problems at compile time is _good_.)\r\n\r\nThere will be new problems that \"AOT errors as warnings\" will bring.  For example it will be harder to diagnose mismatches between the compile-time and the runtime environment (e.g. referenced assemblies missing at AOT-time but present at runtime).\r\n\r\n",
                                           "updatedAt":  "2022-02-01T15:22:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc49R9GY",
                                           "createdAt":  "2022-02-02T16:25:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCM1Yyw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MichalStrehovsky",
                                                                               "createdAt":  "2022-02-03T02:17:34Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "I will update this issue to be a tracking issue for the whole user experience but some of the things we will need to do include:\r\n\r\n- Add an aot compiler option to allow some class of errors to be AOT-time warnings and to defer the actual error to runtime (initially as our generic \"Attempting to JIT compile method... while running in aot-only mode\") #64640 \r\n- Adjust mono AOT compiler errors and warnings to emit the prefix that MSBuild uses to capture warnings/errors from Exec tasks\r\n- Add `allow-errors` option to the MonoAOTCompiler task\r\n- Enable `\u0027allow-errors\u0027` mode in CI, re-enable disabled tests\r\n- For cases where it makes sense, make Mono AOT produce the same warning/error codes as NativeAOT \r\n- Add some support for specific execution-time AOT failure errors (either by emitting stub method bodies, or adding some error table to the AOT images, or something else)\r\n\r\nDoes this make sense? /cc @vargaz @marek-safar ",
                                           "updatedAt":  "2022-02-02T16:25:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc49fA_I",
                                           "createdAt":  "2022-02-07T14:40:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "/cc @SamMonoRT @steveisok ",
                                           "updatedAt":  "2022-02-07T14:40:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5lYZOn",
                                           "createdAt":  "2023-08-31T11:51:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODFYJAA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "LeVladIonescu",
                                                                               "createdAt":  "2023-08-31T11:56:35Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jandupej",
                                           "body":  "Some of the disabled unit tests mentioned here are being addressed in https://github.com/dotnet/runtime/pull/91261",
                                           "updatedAt":  "2023-08-31T11:51:39Z"
                                       }
                                   ],
                         "totalCount":  16
                     },
        "title":  "Provide a \"fail at runtime\" mechanism for better LLVMFullAOT testability",
        "labels":  [
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/66118",
        "createdAt":  "2022-03-02T23:07:25Z",
        "number":  66118,
        "author":  "radical",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-03-22T23:52:25Z",
        "body":  "Hitting on rolling builds, and PRs. This is when building the tests with AOT, and happens on linux, and windows.\r\n\r\n[Build](https://dev.azure.com/dnceng/public/_build/results?buildId=1641292\u0026view=logs\u0026j=55f4943c-f76d-585b-7250-deab324f0a54\u0026t=9d909c2f-e8c7-58b9-4308-45796ed0b70f), and\r\n[log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-heads-main-d84710afb40d4a9793/normal-System.Text.RegularExpressions.Unit.Tests/1/console.d76b225b.log?sv=2019-07-07\u0026se=2022-03-22T21%3A55%3A03Z\u0026sr=c\u0026sp=rl\u0026sig=727BzB0WjftXm1dA%2BnDfhPd6xAFlMhNseO4AH4sJ6j0%3D):\r\n\r\n```\r\ninfo: Discovered:  System.Text.RegularExpressions.Unit.Tests.dll (found 13 of 13 test cases)\r\ninfo: Using random seed for test cases: 1824947855\r\ninfo: Using random seed for collections: 1824947855\r\ninfo: Starting:    System.Text.RegularExpressions.Unit.Tests.dll\r\nfail: {}\r\nfail: RangeError: Maximum call stack size exceeded\r\nfail:     at pthread_getspecific (\u003canonymous\u003e:wasm-function[74267]:0xf7c81e)\r\nfail:     at get_context (\u003canonymous\u003e:wasm-function[56607]:0xd70b64)\r\nfail:     at interp_sufficient_stack (\u003canonymous\u003e:wasm-function[56663]:0xd7ee7c)\r\nfail:     at mini_interp_sufficient_stack (\u003canonymous\u003e:wasm-function[72917]:0xf53721)\r\nfail:     at ves_icall_System_Runtime_CompilerServices_RuntimeHelpers_SufficientExecutionStack (\u003canonymous\u003e:wasm-function[60228]:0xdec29e)\r\nfail:     at aot_wrapper_corlib_System_dot_Runtime_dot_CompilerServices_System_dot_Runtime_dot_CompilerServices_dot_RuntimeHelpers__SufficientExecutionStack_pinvoke_bool_bool_ (\u003canonymous\u003e:wasm-function[27205]:0x7454cf)\r\nfail:     at corlib_System_Runtime_CompilerServices_RuntimeHelpers_TryEnsureSufficientExecutionStack (\u003canonymous\u003e:wasm-function[26554]:0x72be45)\r\nfail:     at System_Text_RegularExpressions_Unit_Tests_System_Threading_StackHelper_TryEnsureSufficientExecutionStack (\u003canonymous\u003e:wasm-function[44081]:0xa5dcf9)\r\nfail:     at System_Text_RegularExpressions_Unit_Tests_System_Text_RegularExpressions_RegexNode_FindAndMakeLoopsAtomic (\u003canonymous\u003e:wasm-function[44280]:0xa79a36)\r\nfail:     at System_Text_RegularExpressions_Unit_Tests_System_Text_RegularExpressions_RegexNode_FindAndMakeLoopsAtomic (\u003canonymous\u003e:wasm-function[44280]:0xa79a8e)\r\n...\r\n```\r\n\r\ncc @radekdoulik @vargaz ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOQfrY5g==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc4_B-Iw",
                                           "createdAt":  "2022-03-02T23:07:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nHitting on rolling builds, and PRs. This is when building the tests with AOT, and happens on linux, and windows.\r\n\r\n[Build](https://dev.azure.com/dnceng/public/_build/results?buildId=1641292\u0026view=logs\u0026j=55f4943c-f76d-585b-7250-deab324f0a54\u0026t=9d909c2f-e8c7-58b9-4308-45796ed0b70f), and\r\n[log](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-heads-main-d84710afb40d4a9793/normal-System.Text.RegularExpressions.Unit.Tests/1/console.d76b225b.log?sv=2019-07-07\u0026se=2022-03-22T21%3A55%3A03Z\u0026sr=c\u0026sp=rl\u0026sig=727BzB0WjftXm1dA%2BnDfhPd6xAFlMhNseO4AH4sJ6j0%3D):\r\n\r\n```\r\ninfo: Discovered:  System.Text.RegularExpressions.Unit.Tests.dll (found 13 of 13 test cases)\r\ninfo: Using random seed for test cases: 1824947855\r\ninfo: Using random seed for collections: 1824947855\r\ninfo: Starting:    System.Text.RegularExpressions.Unit.Tests.dll\r\nfail: {}\r\nfail: RangeError: Maximum call stack size exceeded\r\nfail:     at pthread_getspecific (\u003canonymous\u003e:wasm-function[74267]:0xf7c81e)\r\nfail:     at get_context (\u003canonymous\u003e:wasm-function[56607]:0xd70b64)\r\nfail:     at interp_sufficient_stack (\u003canonymous\u003e:wasm-function[56663]:0xd7ee7c)\r\nfail:     at mini_interp_sufficient_stack (\u003canonymous\u003e:wasm-function[72917]:0xf53721)\r\nfail:     at ves_icall_System_Runtime_CompilerServices_RuntimeHelpers_SufficientExecutionStack (\u003canonymous\u003e:wasm-function[60228]:0xdec29e)\r\nfail:     at aot_wrapper_corlib_System_dot_Runtime_dot_CompilerServices_System_dot_Runtime_dot_CompilerServices_dot_RuntimeHelpers__SufficientExecutionStack_pinvoke_bool_bool_ (\u003canonymous\u003e:wasm-function[27205]:0x7454cf)\r\nfail:     at corlib_System_Runtime_CompilerServices_RuntimeHelpers_TryEnsureSufficientExecutionStack (\u003canonymous\u003e:wasm-function[26554]:0x72be45)\r\nfail:     at System_Text_RegularExpressions_Unit_Tests_System_Threading_StackHelper_TryEnsureSufficientExecutionStack (\u003canonymous\u003e:wasm-function[44081]:0xa5dcf9)\r\nfail:     at System_Text_RegularExpressions_Unit_Tests_System_Text_RegularExpressions_RegexNode_FindAndMakeLoopsAtomic (\u003canonymous\u003e:wasm-function[44280]:0xa79a36)\r\nfail:     at System_Text_RegularExpressions_Unit_Tests_System_Text_RegularExpressions_RegexNode_FindAndMakeLoopsAtomic (\u003canonymous\u003e:wasm-function[44280]:0xa79a8e)\r\n...\r\n```\r\n\r\ncc @radekdoulik @vargaz \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eradical\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-wasm`, `blocking-clean-ci`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-03-02T23:07:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_B_IN",
                                           "createdAt":  "2022-03-02T23:14:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "[This](https://github.com/dotnet/runtime/commit/093bdc466693e847dc75b6fd86d895bf603acdee) seems to be only relevant commit compared the previous build that passed.\r\n```\r\ncommit 093bdc466693e847dc75b6fd86d895bf603acdee\r\nAuthor: Stephen Toub \u003cstoub@microsoft.com\u003e\r\nDate:   Wed Mar 2 07:52:37 2022 -0500\r\n\r\n    Avoid RegexCode/RegexWriter for all engines other than RegexInterpreter (#65986)\r\n\r\n    * Avoid RegexCode/RegexWriter for all engines other than RegexInterpreter\r\n\r\n    * Address PR feedback\r\n  ```\r\n\r\ncc @stephentoub ",
                                           "updatedAt":  "2022-03-02T23:14:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_CP1s",
                                           "createdAt":  "2022-03-03T00:57:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCRKPmQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "radical",
                                                                               "createdAt":  "2022-03-03T00:58:24Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "stephentoub",
                                           "body":  "The purpose of TryEnsureSufficientExecutionStack is that code should be able to call it to know when it\u0027s too deep on the stack to do what it\u0027s about to do, and Regex uses that API to determine whether it can do certain processing.  Seems like a mono bug if calling that API is producing some kind of exception about being too deep.\r\n\r\nThe cited PR also didn\u0027t add any code that would trigger this, but it did move some tests around.  Was the regex test suite previously being suppressed somewhere in this configuration?  If so, its new unit tests project might also need to be suppressed in the same place.\r\n\r\nBut it also seems like there\u0027s a bug here in mono that might have been previously hidden because of such suppression.",
                                           "updatedAt":  "2022-03-03T00:57:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_CWvU",
                                           "createdAt":  "2022-03-03T01:56:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vargaz",
                                           "body":  "SufficientExecutionStack probably has some problems on wasm. Does this happen on linux+wasm as well ?\r\n",
                                           "updatedAt":  "2022-03-03T01:56:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_E-5x",
                                           "createdAt":  "2022-03-03T17:07:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "Yep, linux and windows.",
                                           "updatedAt":  "2022-03-03T17:07:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_Fn2R",
                                           "createdAt":  "2022-03-03T20:08:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "`AppBundle` from my Mac.\r\n[AppBundle.zip](https://github.com/dotnet/runtime/files/8180816/AppBundle.zip)\r\n",
                                           "updatedAt":  "2022-03-03T20:08:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_GJXH",
                                           "createdAt":  "2022-03-03T22:33:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vargaz",
                                           "body":  "So it looks like that on wasm, TryEnsureSufficientExecutionStack cannot really be implemented since the real execution stack is hidden from the program. We can only check that we don\u0027t run out of the C stack which is in linear memory.\r\nIn this case, the \u0027real\u0027 execution stack overflows, and the wasm vm aborts.\r\n",
                                           "updatedAt":  "2022-03-03T22:33:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_G43K",
                                           "createdAt":  "2022-03-04T02:41:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vargaz",
                                           "body":  "Decreasing the depth in MinMaxLengthIsCorrect_HugeDepth to 5000 works around the problem. The recursion code should have some kind of hardcoded limit imho, \r\nFindAndMakeLoopsAtomic () was on the stack 8k times when it crashed.\r\n",
                                           "updatedAt":  "2022-03-04T02:41:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_QIr2",
                                           "createdAt":  "2022-03-07T22:17:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "stephentoub",
                                           "body":  "\u003e Decreasing the depth in MinMaxLengthIsCorrect_HugeDepth to 5000 works around the problem. The recursion code should have some kind of hardcoded limit imho, FindAndMakeLoopsAtomic () was on the stack 8k times when it crashed.\r\n\r\nIt\u0027s using TryEnsureSufficientExecutionStack to avoid needing a hardcoded limit.  This particular test is a stress test validating that behavior is functional.",
                                           "updatedAt":  "2022-03-07T22:17:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_QJLv",
                                           "createdAt":  "2022-03-07T22:18:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "stephentoub",
                                           "body":  "(Multiple places use TryEnsureSufficientExecutionStack for this same purpose, e.g. `await` for determining whether it should queue long async continuation chains, System.Linq.Expressions, I believe Roslyn in various places, etc.)",
                                           "updatedAt":  "2022-03-07T22:18:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_bnc9",
                                           "createdAt":  "2022-03-10T15:47:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "\u003e (Multiple places use TryEnsureSufficientExecutionStack for this same purpose, e.g. `await` for determining whether it should queue long async continuation chains, System.Linq.Expressions, I believe Roslyn in various places, etc.)\r\n\r\nThis is especially tricky for wasm given that different wasm runtimes have different limits and at times use wildly different amounts of execution stack for the same code.  For AOT we may need to make a configurable limit based on testing.\r\n",
                                           "updatedAt":  "2022-03-10T15:47:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_boNH",
                                           "createdAt":  "2022-03-10T15:50:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "stephentoub",
                                           "body":  "\u003e For AOT we may need to make a configurable limit based on testing.\r\n\r\nA configurable limit in TryEnsureSufficientExecutionStack, or a configurable limit everywhere that uses TryEnsureSufficientExecutionStack?  I don\u0027t think the latter is reasonable in general (even if we were to do so everywhere we use it, we can\u0027t expect that to be true for all 3rd-party usage), but if there\u0027s really no way to correctly implement TryEnsureSufficientExecutionStack on wasm, imbuing it there with a conservative limit _in_ TryEnsureSufficientExecutionStack seems like an ok fallback.",
                                           "updatedAt":  "2022-03-10T15:50:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_bouj",
                                           "createdAt":  "2022-03-10T15:52:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCSWEsg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "stephentoub",
                                                                               "createdAt":  "2022-03-10T15:53:35Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "lewing",
                                           "body":  "A limit in TryEnsureSufficientExecutionStack, agreed about the latter. @radekdoulik can you take a look at this.",
                                           "updatedAt":  "2022-03-10T15:52:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5B-tjm",
                                           "createdAt":  "2022-04-22T22:38:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "removing \u0027blocking-clean-ci\u0027 as it\u0027s not, as zero regex tests are now running on WASM, pending a fix for TryEnsureSufficientExecutionStack.",
                                           "updatedAt":  "2022-04-22T22:38:26Z"
                                       }
                                   ],
                         "totalCount":  14
                     },
        "title":  "[wasm][aot] `System.Text.RegularExpressions.Unit.Tests` failing due to `Maximum call stack size exceeded`",
        "labels":  [
                       "arch-wasm",
                       "disabled-test",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/69832",
        "createdAt":  "2022-05-25T23:16:34Z",
        "number":  69832,
        "author":  "ericstj",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-28T20:40:58Z",
        "body":  "Failures 7/5-8/5 (incl. PRs) based on Runfo in [last 30 days](https://runfo.azurewebsites.net/search/tests/?q=started%3A%7E30+definition%3Aruntime+name%3A%22methodical_others+work+item%22):\r\n\r\nDay | Run | Failure\r\n-- | -- | --\r\n8/4 | PR #73174 - [1923945](https://runfo.azurewebsites.net/view/build/?number=1923945) | Crash dump\r\n8/4 | **Rolling run** [1923908](https://runfo.azurewebsites.net/view/build/?number=1923908) | Crash dump\r\n~8/4~ | ~PR #73073 - [1922939](https://runfo.azurewebsites.net/view/build/?number=1922939)~ | fail: Application has finished with exit code 1 but 0 was expected - likely infra hiccup\r\n8/3 | PR #73265 - [1921135](https://runfo.azurewebsites.net/view/build/?number=1921135) | Crash dump\r\n8/2 | PR #72443 - [1918306](https://runfo.azurewebsites.net/view/build/?number=1918306) | Crash dump\r\n8/2 | PR #72851 - [1917737](https://runfo.azurewebsites.net/view/build/?number=1917737) | Crash dump\r\n8/2 | PR #72143 - [1917321](https://runfo.azurewebsites.net/view/build/?number=1917321) | Crash dump\r\n~7/30~ | ~PR #72934 - [1913487](https://runfo.azurewebsites.net/view/build/?number=1913487)~ | No clear error - likely infra hiccup\r\n~7/29~ | ~PR #49576 - [1912700](https://runfo.azurewebsites.net/view/build/?number=1912700)~ | 2x Segmentation fault - most likely caused by the PR\r\n7/29 | PR #73009 - [1912477](https://runfo.azurewebsites.net/view/build/?number=1912477) | Crash dump\r\n~7/29~ | ~PR #49576 - [1912185](https://runfo.azurewebsites.net/view/build/?number=1912185)~ | 2x Segmentation fault - most likely caused by the PR\r\n~7/29~ | ~PR #49576 - [1910538](https://runfo.azurewebsites.net/view/build/?number=1910538)~ | 2x Segmentation fault - most likely caused by the PR\r\n7/28 | PR #67272 - [1909374](https://runfo.azurewebsites.net/view/build/?number=1909374) | Unhandled Exception\r\n7/28 | PR #72762 - [1908782](https://runfo.azurewebsites.net/view/build/?number=1908782) | Unhandled Exception\r\n7/28 | PR #69542 - [1908613](https://runfo.azurewebsites.net/view/build/?number=1908613) | Crash dump\r\n7/26 | PR #71661 - [1905330](https://runfo.azurewebsites.net/view/build/?number=1905330) | Unhandled Exception\r\n7/26 | **Rolling run** [1904930](https://runfo.azurewebsites.net/view/build/?number=1904930) | Crash dump\r\n7/24 | PR #72448 - [1900699](https://runfo.azurewebsites.net/view/build/?number=1900699) | Crash dump\r\n7/24 | PR #72732 - [1900156](https://runfo.azurewebsites.net/view/build/?number=1900156) | Crash dump\r\n7/22  | PR #72672 - [1897479](https://runfo.azurewebsites.net/view/build/?number=1897479) | Unhandled Exception\r\n7/20 | PR #72482 - [1893721](https://runfo.azurewebsites.net/view/build/?number=1893721) | Crash dump\r\n7/20 | PR #72529 - [1892945](https://runfo.azurewebsites.net/view/build/?number=1892945) | Crash dump\r\n7/19 | PR #72394 - [1891289](https://runfo.azurewebsites.net/view/build/?number=1891289) | Crash dump\r\n7/19 | PR #72452 - [1891146](https://runfo.azurewebsites.net/view/build/?number=1891146) | Unhandled Exception\r\n7/16 | PR #71827 - [1885040](https://runfo.azurewebsites.net/view/build/?number=1885040) | Crash dump\r\n7/16 | PR #72275 - [1885005](https://runfo.azurewebsites.net/view/build/?number=1885005) | Crash dump\r\n7/15 | PR #72021 - [1882959](https://runfo.azurewebsites.net/view/build/?number=1882959) | Crash dump\r\n4/5-7/14 | Logs not available\r\n\r\n### Unhandled Exception\r\n\r\nExample: [Console log](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-72672-merge-36c38f333c0f4c4ba8/Methodical_others/1/console.2b2328f4.log?%3Fhelixlogtype%3Dresult)\r\n\r\n```\r\n16:13:46.844 Running test: JIT/Methodical/Coverage/copy_prop_byref_to_native_int/copy_prop_byref_to_native_int.cmd\r\n\r\nUnhandled Exception:\r\nSystem.NullReferenceException: Object reference not set to an instance of an object\r\n   at System.Net.Sockets.SocketAsyncContext.OperationQueue`1.ProcessAsyncOperation(TOperation_REF op)\r\n   at System.Net.Sockets.SocketAsyncContext.ProcessAsyncReadOperation(ReadOperation op)\r\n   at System.Net.Sockets.SocketAsyncContext.ReadOperation.System.Threading.IThreadPoolWorkItem.Execute()\r\n   at System.Net.Sockets.SocketAsyncContext.AsyncOperation.Process()\r\n   at System.Net.Sockets.SocketAsyncContext.HandleEvents(SocketEvents events)\r\n   at System.Net.Sockets.SocketAsyncEngine.System.Threading.IThreadPoolWorkItem.Execute()\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n   at System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart()\r\n   at System.Threading.Thread.StartCallback()\r\n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\r\n   at System.Net.Sockets.SocketAsyncContext.OperationQueue`1.ProcessAsyncOperation(TOperation_REF op)\r\n   at System.Net.Sockets.SocketAsyncContext.ProcessAsyncReadOperation(ReadOperation op)\r\n   at System.Net.Sockets.SocketAsyncContext.ReadOperation.System.Threading.IThreadPoolWorkItem.Execute()\r\n   at System.Net.Sockets.SocketAsyncContext.AsyncOperation.Process()\r\n   at System.Net.Sockets.SocketAsyncContext.HandleEvents(SocketEvents events)\r\n   at System.Net.Sockets.SocketAsyncEngine.System.Threading.IThreadPoolWorkItem.Execute()\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n   at System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart()\r\n   at System.Threading.Thread.StartCallback()\r\n```\r\n\r\n### Crash dump\r\n\r\nObserved in https://dev.azure.com/dnceng/public/_build/results?buildId=1789473\r\n\r\nConsole output: https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-69813-merge-212c7ffc453c4eb2a8/Methodical_others/1/console.b7c2b95a.log?helixlogtype=result\r\n\r\n\u003cdetails\u003e\u003csummary\u003eRelevant log snippet:\u003c/summary\u003e\r\n\u003cp\u003e\r\n\r\n```\r\n22:49:29.737 Running test: JIT/Methodical/Coverage/copy_prop_byref_to_native_int/copy_prop_byref_to_native_int.cmd\r\n\r\n=================================================================\r\n\tNative Crash Reporting\r\n=================================================================\r\nGot a SIGSEGV while executing native code. This usually indicates\r\na fatal error in the mono runtime or one of the native libraries \r\nused by your application.\r\n=================================================================\r\n\r\n=================================================================\r\n\tNative stacktrace:\r\n=================================================================\r\n\t0x7fa4c2a98722 - Unknown\r\n\t0x7fa4c2a39a2e - Unknown\r\n\t0x7fa4c2996d71 - Unknown\r\n\t0x7fa4c4e52980 - Unknown\r\n\t0x7fa4c29e5494 - Unknown\r\n\t0x7fa4bed63df3 - Unknown\r\n\r\n=================================================================\r\n\tExternal Debugger Dump:\r\n=================================================================\r\n[New LWP 26773]\r\n[New LWP 26774]\r\n[New LWP 26775]\r\n[New LWP 26776]\r\n[New LWP 26781]\r\n[New LWP 26785]\r\n[New LWP 26786]\r\n[New LWP 26787]\r\n[Thread debugging using libthread_db enabled]\r\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\r\nwarning: the debug information found in \"/datadisks/disk1/work/B4770A02/p/libcoreclr.so.dbg\" does not match \"/datadisks/disk1/work/B4770A02/p/libcoreclr.so\" (CRC mismatch).\r\n\r\n0x00007fa4c4e4dad3 in futex_wait_cancelable (private=\u003coptimized out\u003e, expected=0, futex_word=0x562701fd5188) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n88\t../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory.\r\n  Id   Target Id         Frame \r\n* 1    Thread 0x7fa4c5479740 (LWP 26772) \"corerun\" 0x00007fa4c4e4dad3 in futex_wait_cancelable (private=\u003coptimized out\u003e, expected=0, futex_word=0x562701fd5188) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n  2    Thread 0x7fa4c13ff700 (LWP 26773) \"SGen worker\" 0x00007fa4c4e4dad3 in futex_wait_cancelable (private=\u003coptimized out\u003e, expected=0, futex_word=0x7fa4c40d95c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n  3    Thread 0x7fa4be6cc700 (LWP 26774) \"corerun\" 0x00007fa4c4224bb9 in __GI___poll (fds=0x7fa4b8002d50, nfds=1, timeout=-1) at ../sysdeps/unix/sysv/linux/poll.c:29\r\n  4    Thread 0x7fa4be4cb700 (LWP 26775) \"Finalizer\" 0x00007fa4c4e507c6 in futex_abstimed_wait_cancelable (private=0, abstime=0x0, expected=0, futex_word=0x7fa4c40ca530) at ../sysdeps/unix/sysv/linux/futex-internal.h:205\r\n  5    Thread 0x7fa4b63fe700 (LWP 26776) \"corerun\" 0x00007fa4c4e51474 in __libc_read (fd=7, buf=0x7fa4b63fdee7, nbytes=1) at ../sysdeps/unix/sysv/linux/read.c:27\r\n  6    Thread 0x7fa4a8194700 (LWP 26781) \".NET Sockets\" 0x00007fa4c4231947 in epoll_wait (epfd=13, events=0x5627021f5630, maxevents=32, timeout=-1) at ../sysdeps/unix/sysv/linux/epoll_wait.c:30\r\n  7    Thread 0x7fa4a7d8d700 (LWP 26785) \".NET ThreadPool\" 0x00007fa4c4e4dfb9 in futex_reltimed_wait_cancelable (private=\u003coptimized out\u003e, reltime=0x7fa4a7d8c6f0, expected=0, futex_word=0x7fa4a7d8c828) at ../sysdeps/unix/sysv/linux/futex-internal.h:142\r\n  8    Thread 0x7fa4a7b8c700 (LWP 26786) \".NET ThreadPool\" 0x00007fa4c4e4dad3 in futex_wait_cancelable (private=\u003coptimized out\u003e, expected=0, futex_word=0x7fa49c002c90) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n  9    Thread 0x7fa4a7b4b700 (LWP 26787) \".NET ThreadPool\" 0x00007fa4c4e5232a in __waitpid (pid=26788, stat_loc=0x7fa4a7b491c0, options=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30\r\n\r\nThread 9 (Thread 0x7fa4a7b4b700 (LWP 26787)):\r\n#0  0x00007fa4c4e5232a in __waitpid (pid=26788, stat_loc=0x7fa4a7b491c0, options=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30\r\n#1  0x00007fa4c2a98867 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#2  0x00007fa4c2a39a2e in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#3  0x00007fa4c2996d71 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#4  \u003csignal handler called\u003e\r\n#5  0x00007fa4c29e5494 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#6  0x00007fa4bed63df3 in System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_INT_SetExistingTaskResult_System_Threading_Tasks_Task_1_TResult_INT_TResult_INT () from /datadisks/disk1/work/B4770A02/p/System.Private.CoreLib.dll.so\r\n#7  0x00005627026707f8 in ?? ()\r\n#8  0x00007fa4c143f198 in ?? ()\r\n#9  0x00007fa4c143f620 in ?? ()\r\n#10 0x0000000000000000 in ?? ()\r\n\r\nThread 8 (Thread 0x7fa4a7b8c700 (LWP 26786)):\r\n#0  0x00007fa4c4e4dad3 in futex_wait_cancelable (private=\u003coptimized out\u003e, expected=0, futex_word=0x7fa49c002c90) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n#1  __pthread_cond_wait_common (abstime=0x0, mutex=0x7fa49c002c40, cond=0x7fa49c002c68) at pthread_cond_wait.c:502\r\n#2  __pthread_cond_wait (cond=0x7fa49c002c68, mutex=0x7fa49c002c40) at pthread_cond_wait.c:655\r\n#3  0x00007fa4bcf3d1fc in SystemNative_LowLevelMonitor_Wait (monitor=0x7fa49c002c40) at /__w/1/s/src/native/libs/System.Native/pal_threading.c:155\r\n#4  0x00007fa4bf0ee1e6 in wrapper_managed_to_native_Interop_Sys_LowLevelMonitor_Wait_intptr () from /datadisks/disk1/work/B4770A02/p/System.Private.CoreLib.dll.so\r\n#5  0x00007fa4bea252df in System_Threading_WaitSubsystem_ThreadWaitInfo_Wait_int_bool_bool () from /datadisks/disk1/work/B4770A02/p/System.Private.CoreLib.dll.so\r\n#6  0x00007fa4bea2688e in System_Threading_WaitSubsystem_WaitableObject_Wait_Locked_System_Threading_WaitSubsystem_ThreadWaitInfo_int_bool_bool () from /datadisks/disk1/work/B4770A02/p/System.Private.CoreLib.dll.so\r\n#7  0x00007fa4bea265fb in System_Threading_WaitSubsystem_WaitableObject_Wait_System_Threading_WaitSubsystem_ThreadWaitInfo_int_bool_bool () from /datadisks/disk1/work/B4770A02/p/System.Private.CoreLib.dll.so\r\n#8  0x00007fa4a7b8bbb0 in ?? ()\r\n#9  0x0000000000000000 in ?? ()\r\n\r\nThread 7 (Thread 0x7fa4a7d8d700 (LWP 26785)):\r\n#0  0x00007fa4c4e4dfb9 in futex_reltimed_wait_cancelable (private=\u003coptimized out\u003e, reltime=0x7fa4a7d8c6f0, expected=0, futex_word=0x7fa4a7d8c828) at ../sysdeps/unix/sysv/linux/futex-internal.h:142\r\n#1  __pthread_cond_wait_common (abstime=0x7fa4a7d8c7a8, mutex=0x7fa4a000b800, cond=0x7fa4a7d8c800) at pthread_cond_wait.c:533\r\n#2  __pthread_cond_timedwait (cond=0x7fa4a7d8c800, mutex=0x7fa4a000b800, abstime=0x7fa4a7d8c7a8) at pthread_cond_wait.c:667\r\n#3  0x00007fa4c292a474 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#4  0x00007fa4c292fb74 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#5  0x00007fa4bef1e863 in wrapper_managed_to_native_System_Threading_LowLevelLifoSemaphore_TimedWaitInternal_intptr_int () from /datadisks/disk1/work/B4770A02/p/System.Private.CoreLib.dll.so\r\n#6  0x00007fa4be9fb9cd in System_Threading_LowLevelLifoSemaphore_WaitForSignal_int () from /datadisks/disk1/work/B4770A02/p/System.Private.CoreLib.dll.so\r\n#7  0x00007fa4c1441d08 in ?? ()\r\n#8  0x0000000000000002 in ?? ()\r\n#9  0xfffeffffffffffff in ?? ()\r\n#10 0x0000000000004e20 in ?? ()\r\n#11 0x0000000000000046 in ?? ()\r\n#12 0x00007fa4c410ee30 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#13 0x00007fa4be9fb6db in System_Threading_LowLevelLifoSemaphore_Wait_int_bool () from /datadisks/disk1/work/B4770A02/p/System.Private.CoreLib.dll.so\r\n#14 0x00007fa4c1441998 in ?? ()\r\n#15 0x00007fa4a7d8c9d0 in ?? ()\r\n#16 0x00007fa4a7d8ca08 in ?? ()\r\n#17 0x00007fa4a7d8cdc8 in ?? ()\r\n#18 0x00007fa4c410ee30 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#19 0x00007fa4a7d8ca80 in ?? ()\r\n#20 0x00007fa4bea20b1d in System_Threading_PortableThreadPool_WorkerThread_WorkerThreadStart () from /datadisks/disk1/work/B4770A02/p/System.Private.CoreLib.dll.so\r\nBacktrace stopped: previous frame inner to this frame (corrupt stack?)\r\n\r\nThread 6 (Thread 0x7fa4a8194700 (LWP 26781)):\r\n#0  0x00007fa4c4231947 in epoll_wait (epfd=13, events=0x5627021f5630, maxevents=32, timeout=-1) at ../sysdeps/unix/sysv/linux/epoll_wait.c:30\r\n#1  0x00007fa4bcf37f9e in WaitForSocketEventsInner (port=13, buffer=0x5627021f5630, count=0x7fa4a81939d4) at /__w/1/s/src/native/libs/System.Native/pal_networking.c:2717\r\n#2  0x00007fa4bcf37ebf in SystemNative_WaitForSocketEvents (port=13, buffer=0x5627021f5630, count=0x7fa4a81939d4) at /__w/1/s/src/native/libs/System.Native/pal_networking.c:3017\r\n#3  0x00007fa4a8eef485 in wrapper_managed_to_native_Interop_Sys_WaitForSocketEvents_intptr_Interop_Sys_SocketEvent__int_ (param0=13, param1=94725539321392, param2=140345171589588) at /_/src/libraries/System.Collections.Concurrent/src/System/Collections/Concurrent/ConcurrentDictionary.cs:2264\r\n#4  0x00007fa4a8e30f1c in System_Net_Sockets_SocketAsyncEngine_EventLoop () at /_/src/libraries/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEngine.Unix.cs:184\r\n#5  0x0000000000000000 in ?? ()\r\n\r\nThread 5 (Thread 0x7fa4b63fe700 (LWP 26776)):\r\n#0  0x00007fa4c4e51474 in __libc_read (fd=7, buf=0x7fa4b63fdee7, nbytes=1) at ../sysdeps/unix/sysv/linux/read.c:27\r\n#1  0x00007fa4bcf3c60e in SignalHandlerLoop (arg=0x562702331280) at /__w/1/s/src/native/libs/System.Native/pal_signal.c:323\r\n#2  0x00007fa4c4e476db in start_thread (arg=0x7fa4b63fe700) at pthread_create.c:463\r\n#3  0x00007fa4c423161f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n\r\nThread 4 (Thread 0x7fa4be4cb700 (LWP 26775)):\r\n#0  0x00007fa4c4e507c6 in futex_abstimed_wait_cancelable (private=0, abstime=0x0, expected=0, futex_word=0x7fa4c40ca530) at ../sysdeps/unix/sysv/linux/futex-internal.h:205\r\n#1  do_futex_wait (sem=sem@entry=0x7fa4c40ca530, abstime=0x0) at sem_waitcommon.c:111\r\n#2  0x00007fa4c4e508b8 in __new_sem_wait_slow (sem=0x7fa4c40ca530, abstime=0x0) at sem_waitcommon.c:181\r\n#3  0x00007fa4c29011c6 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#4  0x00007fa4c28da2ba in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#5  0x00007fa4c28da149 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#6  0x00007fa4c4e476db in start_thread (arg=0x7fa4be4cb700) at pthread_create.c:463\r\n#7  0x00007fa4c423161f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n\r\nThread 3 (Thread 0x7fa4be6cc700 (LWP 26774)):\r\n#0  0x00007fa4c4224bb9 in __GI___poll (fds=0x7fa4b8002d50, nfds=1, timeout=-1) at ../sysdeps/unix/sysv/linux/poll.c:29\r\n#1  0x00007fa4c2b5f84a in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#2  0x00007fa4c2b5cd45 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#3  0x00007fa4c2b5b5a9 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#4  0x00007fa4c2b5ec61 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#5  0x00007fa4c4e476db in start_thread (arg=0x7fa4be6cc700) at pthread_create.c:463\r\n#6  0x00007fa4c423161f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n\r\nThread 2 (Thread 0x7fa4c13ff700 (LWP 26773)):\r\n#0  0x00007fa4c4e4dad3 in futex_wait_cancelable (private=\u003coptimized out\u003e, expected=0, futex_word=0x7fa4c40d95c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n#1  __pthread_cond_wait_common (abstime=0x0, mutex=0x7fa4c40d9578, cond=0x7fa4c40d95a0) at pthread_cond_wait.c:502\r\n#2  __pthread_cond_wait (cond=0x7fa4c40d95a0, mutex=0x7fa4c40d9578) at pthread_cond_wait.c:655\r\n#3  0x00007fa4c297ee73 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#4  0x00007fa4c4e476db in start_thread (arg=0x7fa4c13ff700) at pthread_create.c:463\r\n#5  0x00007fa4c423161f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n\r\nThread 1 (Thread 0x7fa4c5479740 (LWP 26772)):\r\n#0  0x00007fa4c4e4dad3 in futex_wait_cancelable (private=\u003coptimized out\u003e, expected=0, futex_word=0x562701fd5188) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n#1  __pthread_cond_wait_common (abstime=0x0, mutex=0x562701fd5138, cond=0x562701fd5160) at pthread_cond_wait.c:502\r\n#2  __pthread_cond_wait (cond=0x562701fd5160, mutex=0x562701fd5138) at pthread_cond_wait.c:655\r\n#3  0x00007fa4c292a490 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#4  0x00007fa4c28df52a in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#5  0x00007fa4c28df3a8 in mono_w32handle_wait_one () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#6  0x00007fa4c2902bb4 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#7  0x00007fa4c2892b93 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#8  0x00007fa4bef1d79d in wrapper_managed_to_native_System_Threading_Monitor_Monitor_wait_object_int_bool () from /datadisks/disk1/work/B4770A02/p/System.Private.CoreLib.dll.so\r\n#9  0x00007fa4be9f5986 in System_Threading_Monitor_ObjWait_int_object () from /datadisks/disk1/work/B4770A02/p/System.Private.CoreLib.dll.so\r\n#10 0x0000000000000001 in ?? ()\r\n#11 0x00007fa4c1440a30 in ?? ()\r\n#12 0x0000000000000000 in ?? ()\r\n\r\n=================================================================\r\n\tBasic Fault Address Reporting\r\n=================================================================\r\nMemory around native instruction pointer (0x7fa4c29e5494):0x7fa4c29e5484  57 01 48 8b 40 38 48 8b 80 98 00 00 00 48 8b 38  W.H.@8H......H.8\r\n0x7fa4c29e5494  41 8b 46 10 8d 34 c5 08 00 00 00 e8 6c 91 f1 ff  A.F..4......l...\r\n0x7fa4c29e54a4  48 89 04 24 41 83 7e 10 00 0f 8e 80 00 00 00 48  H..$A.~........H\r\n0x7fa4c29e54b4  63 c5 48 89 44 24 10 f7 d8 48 89 44 24 08 48 8d  c.H.D$...H.D$.H.\r\n\r\n=================================================================\r\n\tManaged Stacktrace:\r\n=================================================================\r\n=================================================================\r\nJIT/Methodical/Methodical_others/Methodical_others.sh: line 382: 26772 Aborted                 (core dumped) $LAUNCHER $ExePath \"${CLRTestExecutionArguments[@]}\"\r\n```\r\n\r\n\u003c/p\u003e\r\n\u003c/details\u003e\r\n\r\nCrashdump: https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-69813-merge-212c7ffc453c4eb2a8/Methodical_others/1/core.1000.26772?helixlogtype=result\r\n\u003c!-- runfo report start --\u003e\r\nRunfo Tracking Issue: [methodical_others work item](https://runfo.azurewebsites.net/tracking/issue/371)\r\n|Build|Definition|Kind|Run Name|\r\n|---|---|---|---|\r\n\r\n\r\n\r\nBuild Result Summary\r\n|Day Hit Count|Week Hit Count|Month Hit Count|\r\n|---|---|---|\r\n|0|0|0|\r\n\r\n\u003c!-- runfo report end --\u003e\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSTYw8Q==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5D05Iz",
                                           "createdAt":  "2022-05-25T23:16:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2022-05-25T23:16:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5D05c-",
                                           "createdAt":  "2022-05-25T23:17:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @JulieLeeMSFT\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nObserved in https://dev.azure.com/dnceng/public/_build/results?buildId=1789473\r\n\r\nConsole output: https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-69813-merge-212c7ffc453c4eb2a8/Methodical_others/1/console.b7c2b95a.log?helixlogtype=result\r\n\r\n\u003cdetails\u003e\u003csummary\u003eRelevant log snippet:\u003c/summary\u003e\r\n\u003cp\u003e\r\n\r\n```\r\n22:49:29.737 Running test: JIT/Methodical/Coverage/copy_prop_byref_to_native_int/copy_prop_byref_to_native_int.cmd\r\n\r\n=================================================================\r\n\tNative Crash Reporting\r\n=================================================================\r\nGot a SIGSEGV while executing native code. This usually indicates\r\na fatal error in the mono runtime or one of the native libraries \r\nused by your application.\r\n=================================================================\r\n\r\n=================================================================\r\n\tNative stacktrace:\r\n=================================================================\r\n\t0x7fa4c2a98722 - Unknown\r\n\t0x7fa4c2a39a2e - Unknown\r\n\t0x7fa4c2996d71 - Unknown\r\n\t0x7fa4c4e52980 - Unknown\r\n\t0x7fa4c29e5494 - Unknown\r\n\t0x7fa4bed63df3 - Unknown\r\n\r\n=================================================================\r\n\tExternal Debugger Dump:\r\n=================================================================\r\n[New LWP 26773]\r\n[New LWP 26774]\r\n[New LWP 26775]\r\n[New LWP 26776]\r\n[New LWP 26781]\r\n[New LWP 26785]\r\n[New LWP 26786]\r\n[New LWP 26787]\r\n[Thread debugging using libthread_db enabled]\r\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\r\nwarning: the debug information found in \"/datadisks/disk1/work/B4770A02/p/libcoreclr.so.dbg\" does not match \"/datadisks/disk1/work/B4770A02/p/libcoreclr.so\" (CRC mismatch).\r\n\r\n0x00007fa4c4e4dad3 in futex_wait_cancelable (private=\u003coptimized out\u003e, expected=0, futex_word=0x562701fd5188) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n88\t../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory.\r\n  Id   Target Id         Frame \r\n* 1    Thread 0x7fa4c5479740 (LWP 26772) \"corerun\" 0x00007fa4c4e4dad3 in futex_wait_cancelable (private=\u003coptimized out\u003e, expected=0, futex_word=0x562701fd5188) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n  2    Thread 0x7fa4c13ff700 (LWP 26773) \"SGen worker\" 0x00007fa4c4e4dad3 in futex_wait_cancelable (private=\u003coptimized out\u003e, expected=0, futex_word=0x7fa4c40d95c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n  3    Thread 0x7fa4be6cc700 (LWP 26774) \"corerun\" 0x00007fa4c4224bb9 in __GI___poll (fds=0x7fa4b8002d50, nfds=1, timeout=-1) at ../sysdeps/unix/sysv/linux/poll.c:29\r\n  4    Thread 0x7fa4be4cb700 (LWP 26775) \"Finalizer\" 0x00007fa4c4e507c6 in futex_abstimed_wait_cancelable (private=0, abstime=0x0, expected=0, futex_word=0x7fa4c40ca530) at ../sysdeps/unix/sysv/linux/futex-internal.h:205\r\n  5    Thread 0x7fa4b63fe700 (LWP 26776) \"corerun\" 0x00007fa4c4e51474 in __libc_read (fd=7, buf=0x7fa4b63fdee7, nbytes=1) at ../sysdeps/unix/sysv/linux/read.c:27\r\n  6    Thread 0x7fa4a8194700 (LWP 26781) \".NET Sockets\" 0x00007fa4c4231947 in epoll_wait (epfd=13, events=0x5627021f5630, maxevents=32, timeout=-1) at ../sysdeps/unix/sysv/linux/epoll_wait.c:30\r\n  7    Thread 0x7fa4a7d8d700 (LWP 26785) \".NET ThreadPool\" 0x00007fa4c4e4dfb9 in futex_reltimed_wait_cancelable (private=\u003coptimized out\u003e, reltime=0x7fa4a7d8c6f0, expected=0, futex_word=0x7fa4a7d8c828) at ../sysdeps/unix/sysv/linux/futex-internal.h:142\r\n  8    Thread 0x7fa4a7b8c700 (LWP 26786) \".NET ThreadPool\" 0x00007fa4c4e4dad3 in futex_wait_cancelable (private=\u003coptimized out\u003e, expected=0, futex_word=0x7fa49c002c90) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n  9    Thread 0x7fa4a7b4b700 (LWP 26787) \".NET ThreadPool\" 0x00007fa4c4e5232a in __waitpid (pid=26788, stat_loc=0x7fa4a7b491c0, options=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30\r\n\r\nThread 9 (Thread 0x7fa4a7b4b700 (LWP 26787)):\r\n#0  0x00007fa4c4e5232a in __waitpid (pid=26788, stat_loc=0x7fa4a7b491c0, options=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30\r\n#1  0x00007fa4c2a98867 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#2  0x00007fa4c2a39a2e in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#3  0x00007fa4c2996d71 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#4  \u003csignal handler called\u003e\r\n#5  0x00007fa4c29e5494 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#6  0x00007fa4bed63df3 in System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_INT_SetExistingTaskResult_System_Threading_Tasks_Task_1_TResult_INT_TResult_INT () from /datadisks/disk1/work/B4770A02/p/System.Private.CoreLib.dll.so\r\n#7  0x00005627026707f8 in ?? ()\r\n#8  0x00007fa4c143f198 in ?? ()\r\n#9  0x00007fa4c143f620 in ?? ()\r\n#10 0x0000000000000000 in ?? ()\r\n\r\nThread 8 (Thread 0x7fa4a7b8c700 (LWP 26786)):\r\n#0  0x00007fa4c4e4dad3 in futex_wait_cancelable (private=\u003coptimized out\u003e, expected=0, futex_word=0x7fa49c002c90) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n#1  __pthread_cond_wait_common (abstime=0x0, mutex=0x7fa49c002c40, cond=0x7fa49c002c68) at pthread_cond_wait.c:502\r\n#2  __pthread_cond_wait (cond=0x7fa49c002c68, mutex=0x7fa49c002c40) at pthread_cond_wait.c:655\r\n#3  0x00007fa4bcf3d1fc in SystemNative_LowLevelMonitor_Wait (monitor=0x7fa49c002c40) at /__w/1/s/src/native/libs/System.Native/pal_threading.c:155\r\n#4  0x00007fa4bf0ee1e6 in wrapper_managed_to_native_Interop_Sys_LowLevelMonitor_Wait_intptr () from /datadisks/disk1/work/B4770A02/p/System.Private.CoreLib.dll.so\r\n#5  0x00007fa4bea252df in System_Threading_WaitSubsystem_ThreadWaitInfo_Wait_int_bool_bool () from /datadisks/disk1/work/B4770A02/p/System.Private.CoreLib.dll.so\r\n#6  0x00007fa4bea2688e in System_Threading_WaitSubsystem_WaitableObject_Wait_Locked_System_Threading_WaitSubsystem_ThreadWaitInfo_int_bool_bool () from /datadisks/disk1/work/B4770A02/p/System.Private.CoreLib.dll.so\r\n#7  0x00007fa4bea265fb in System_Threading_WaitSubsystem_WaitableObject_Wait_System_Threading_WaitSubsystem_ThreadWaitInfo_int_bool_bool () from /datadisks/disk1/work/B4770A02/p/System.Private.CoreLib.dll.so\r\n#8  0x00007fa4a7b8bbb0 in ?? ()\r\n#9  0x0000000000000000 in ?? ()\r\n\r\nThread 7 (Thread 0x7fa4a7d8d700 (LWP 26785)):\r\n#0  0x00007fa4c4e4dfb9 in futex_reltimed_wait_cancelable (private=\u003coptimized out\u003e, reltime=0x7fa4a7d8c6f0, expected=0, futex_word=0x7fa4a7d8c828) at ../sysdeps/unix/sysv/linux/futex-internal.h:142\r\n#1  __pthread_cond_wait_common (abstime=0x7fa4a7d8c7a8, mutex=0x7fa4a000b800, cond=0x7fa4a7d8c800) at pthread_cond_wait.c:533\r\n#2  __pthread_cond_timedwait (cond=0x7fa4a7d8c800, mutex=0x7fa4a000b800, abstime=0x7fa4a7d8c7a8) at pthread_cond_wait.c:667\r\n#3  0x00007fa4c292a474 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#4  0x00007fa4c292fb74 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#5  0x00007fa4bef1e863 in wrapper_managed_to_native_System_Threading_LowLevelLifoSemaphore_TimedWaitInternal_intptr_int () from /datadisks/disk1/work/B4770A02/p/System.Private.CoreLib.dll.so\r\n#6  0x00007fa4be9fb9cd in System_Threading_LowLevelLifoSemaphore_WaitForSignal_int () from /datadisks/disk1/work/B4770A02/p/System.Private.CoreLib.dll.so\r\n#7  0x00007fa4c1441d08 in ?? ()\r\n#8  0x0000000000000002 in ?? ()\r\n#9  0xfffeffffffffffff in ?? ()\r\n#10 0x0000000000004e20 in ?? ()\r\n#11 0x0000000000000046 in ?? ()\r\n#12 0x00007fa4c410ee30 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#13 0x00007fa4be9fb6db in System_Threading_LowLevelLifoSemaphore_Wait_int_bool () from /datadisks/disk1/work/B4770A02/p/System.Private.CoreLib.dll.so\r\n#14 0x00007fa4c1441998 in ?? ()\r\n#15 0x00007fa4a7d8c9d0 in ?? ()\r\n#16 0x00007fa4a7d8ca08 in ?? ()\r\n#17 0x00007fa4a7d8cdc8 in ?? ()\r\n#18 0x00007fa4c410ee30 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#19 0x00007fa4a7d8ca80 in ?? ()\r\n#20 0x00007fa4bea20b1d in System_Threading_PortableThreadPool_WorkerThread_WorkerThreadStart () from /datadisks/disk1/work/B4770A02/p/System.Private.CoreLib.dll.so\r\nBacktrace stopped: previous frame inner to this frame (corrupt stack?)\r\n\r\nThread 6 (Thread 0x7fa4a8194700 (LWP 26781)):\r\n#0  0x00007fa4c4231947 in epoll_wait (epfd=13, events=0x5627021f5630, maxevents=32, timeout=-1) at ../sysdeps/unix/sysv/linux/epoll_wait.c:30\r\n#1  0x00007fa4bcf37f9e in WaitForSocketEventsInner (port=13, buffer=0x5627021f5630, count=0x7fa4a81939d4) at /__w/1/s/src/native/libs/System.Native/pal_networking.c:2717\r\n#2  0x00007fa4bcf37ebf in SystemNative_WaitForSocketEvents (port=13, buffer=0x5627021f5630, count=0x7fa4a81939d4) at /__w/1/s/src/native/libs/System.Native/pal_networking.c:3017\r\n#3  0x00007fa4a8eef485 in wrapper_managed_to_native_Interop_Sys_WaitForSocketEvents_intptr_Interop_Sys_SocketEvent__int_ (param0=13, param1=94725539321392, param2=140345171589588) at /_/src/libraries/System.Collections.Concurrent/src/System/Collections/Concurrent/ConcurrentDictionary.cs:2264\r\n#4  0x00007fa4a8e30f1c in System_Net_Sockets_SocketAsyncEngine_EventLoop () at /_/src/libraries/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncEngine.Unix.cs:184\r\n#5  0x0000000000000000 in ?? ()\r\n\r\nThread 5 (Thread 0x7fa4b63fe700 (LWP 26776)):\r\n#0  0x00007fa4c4e51474 in __libc_read (fd=7, buf=0x7fa4b63fdee7, nbytes=1) at ../sysdeps/unix/sysv/linux/read.c:27\r\n#1  0x00007fa4bcf3c60e in SignalHandlerLoop (arg=0x562702331280) at /__w/1/s/src/native/libs/System.Native/pal_signal.c:323\r\n#2  0x00007fa4c4e476db in start_thread (arg=0x7fa4b63fe700) at pthread_create.c:463\r\n#3  0x00007fa4c423161f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n\r\nThread 4 (Thread 0x7fa4be4cb700 (LWP 26775)):\r\n#0  0x00007fa4c4e507c6 in futex_abstimed_wait_cancelable (private=0, abstime=0x0, expected=0, futex_word=0x7fa4c40ca530) at ../sysdeps/unix/sysv/linux/futex-internal.h:205\r\n#1  do_futex_wait (sem=sem@entry=0x7fa4c40ca530, abstime=0x0) at sem_waitcommon.c:111\r\n#2  0x00007fa4c4e508b8 in __new_sem_wait_slow (sem=0x7fa4c40ca530, abstime=0x0) at sem_waitcommon.c:181\r\n#3  0x00007fa4c29011c6 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#4  0x00007fa4c28da2ba in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#5  0x00007fa4c28da149 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#6  0x00007fa4c4e476db in start_thread (arg=0x7fa4be4cb700) at pthread_create.c:463\r\n#7  0x00007fa4c423161f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n\r\nThread 3 (Thread 0x7fa4be6cc700 (LWP 26774)):\r\n#0  0x00007fa4c4224bb9 in __GI___poll (fds=0x7fa4b8002d50, nfds=1, timeout=-1) at ../sysdeps/unix/sysv/linux/poll.c:29\r\n#1  0x00007fa4c2b5f84a in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#2  0x00007fa4c2b5cd45 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#3  0x00007fa4c2b5b5a9 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#4  0x00007fa4c2b5ec61 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#5  0x00007fa4c4e476db in start_thread (arg=0x7fa4be6cc700) at pthread_create.c:463\r\n#6  0x00007fa4c423161f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n\r\nThread 2 (Thread 0x7fa4c13ff700 (LWP 26773)):\r\n#0  0x00007fa4c4e4dad3 in futex_wait_cancelable (private=\u003coptimized out\u003e, expected=0, futex_word=0x7fa4c40d95c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n#1  __pthread_cond_wait_common (abstime=0x0, mutex=0x7fa4c40d9578, cond=0x7fa4c40d95a0) at pthread_cond_wait.c:502\r\n#2  __pthread_cond_wait (cond=0x7fa4c40d95a0, mutex=0x7fa4c40d9578) at pthread_cond_wait.c:655\r\n#3  0x00007fa4c297ee73 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#4  0x00007fa4c4e476db in start_thread (arg=0x7fa4c13ff700) at pthread_create.c:463\r\n#5  0x00007fa4c423161f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n\r\nThread 1 (Thread 0x7fa4c5479740 (LWP 26772)):\r\n#0  0x00007fa4c4e4dad3 in futex_wait_cancelable (private=\u003coptimized out\u003e, expected=0, futex_word=0x562701fd5188) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n#1  __pthread_cond_wait_common (abstime=0x0, mutex=0x562701fd5138, cond=0x562701fd5160) at pthread_cond_wait.c:502\r\n#2  __pthread_cond_wait (cond=0x562701fd5160, mutex=0x562701fd5138) at pthread_cond_wait.c:655\r\n#3  0x00007fa4c292a490 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#4  0x00007fa4c28df52a in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#5  0x00007fa4c28df3a8 in mono_w32handle_wait_one () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#6  0x00007fa4c2902bb4 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#7  0x00007fa4c2892b93 in ?? () from /datadisks/disk1/work/B4770A02/p/libcoreclr.so\r\n#8  0x00007fa4bef1d79d in wrapper_managed_to_native_System_Threading_Monitor_Monitor_wait_object_int_bool () from /datadisks/disk1/work/B4770A02/p/System.Private.CoreLib.dll.so\r\n#9  0x00007fa4be9f5986 in System_Threading_Monitor_ObjWait_int_object () from /datadisks/disk1/work/B4770A02/p/System.Private.CoreLib.dll.so\r\n#10 0x0000000000000001 in ?? ()\r\n#11 0x00007fa4c1440a30 in ?? ()\r\n#12 0x0000000000000000 in ?? ()\r\n\r\n=================================================================\r\n\tBasic Fault Address Reporting\r\n=================================================================\r\nMemory around native instruction pointer (0x7fa4c29e5494):0x7fa4c29e5484  57 01 48 8b 40 38 48 8b 80 98 00 00 00 48 8b 38  W.H.@8H......H.8\r\n0x7fa4c29e5494  41 8b 46 10 8d 34 c5 08 00 00 00 e8 6c 91 f1 ff  A.F..4......l...\r\n0x7fa4c29e54a4  48 89 04 24 41 83 7e 10 00 0f 8e 80 00 00 00 48  H..$A.~........H\r\n0x7fa4c29e54b4  63 c5 48 89 44 24 10 f7 d8 48 89 44 24 08 48 8d  c.H.D$...H.D$.H.\r\n\r\n=================================================================\r\n\tManaged Stacktrace:\r\n=================================================================\r\n=================================================================\r\nJIT/Methodical/Methodical_others/Methodical_others.sh: line 382: 26772 Aborted                 (core dumped) $LAUNCHER $ExePath \"${CLRTestExecutionArguments[@]}\"\r\n```\r\n\r\n\u003c/p\u003e\r\n\u003c/details\u003e\r\n\r\nCrashdump: https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-69813-merge-212c7ffc453c4eb2a8/Methodical_others/1/core.1000.26772?helixlogtype=result\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eericstj\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-CodeGen-coreclr`, `blocking-clean-ci`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-05-25T23:17:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5D0572",
                                           "createdAt":  "2022-05-25T23:19:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "Changing the tag as this happened in `llvmfullaot`",
                                           "updatedAt":  "2022-05-25T23:19:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GEtQ0",
                                           "createdAt":  "2022-07-06T00:45:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "Occurred here again:\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=1861609\u0026view=logs\u0026j=ac444259-14dc-5e9e-4846-f4aabcc22cf0\u0026t=8b5dcf28-4222-5bb1-452d-824912c72244\u0026l=29\r\n\r\nhttps://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-71501-merge-6f012c604d60484ca0/Methodical_others/1/console.d462ba5d.log?helixlogtype=result",
                                           "updatedAt":  "2022-07-06T00:45:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5H7Rvj",
                                           "createdAt":  "2022-08-05T18:16:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "karelz",
                                           "body":  "This happens more than 1x per day. We should disable the test ASAP. @vargaz can you please do it? Thanks!",
                                           "updatedAt":  "2022-08-05T18:16:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5IFLM1",
                                           "createdAt":  "2022-08-09T12:26:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "karelz",
                                           "body":  "Test disabled in PR #73511 - not blocking CI anymore.\r\nNote: Disabled only on Mono interpreter by accident.",
                                           "updatedAt":  "2022-08-26T09:34:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ILgKG",
                                           "createdAt":  "2022-08-10T16:41:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCqZdbQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jandupej",
                                                                               "createdAt":  "2022-08-11T08:27:20Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "SamMonoRT",
                                           "body":  "Assigning to @jandupej and moving to 8.0.0  We will triage the fix and consider backporting to re-enable the tests.",
                                           "updatedAt":  "2022-08-10T16:41:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JNjDx",
                                           "createdAt":  "2022-08-26T09:43:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "karelz",
                                           "body":  "Test disabled on all Mono configs in main (8.0) in PR #74265 and in 7.0 (RC2) in PR #74636\r\n\r\nNote: It happened in release/7.0 rolling run [1967536](https://runfo.azurewebsites.net/view/build/?number=1967536) on 8/25 - therefore backporting the disabling test into 7.0 branch.",
                                           "updatedAt":  "2022-08-26T09:43:39Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "Methodical_others test JIT/Methodical/Coverage/copy_prop_byref_to_native_int crashing ",
        "labels":  [
                       "disabled-test",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/71323",
        "createdAt":  "2022-06-07T12:18:59Z",
        "number":  71323,
        "author":  "MariyaGordeeva",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCrhWlg==",
                          "nodes":  [
                                        {
                                            "content":  "EYES",
                                            "user":  "J-Swift",
                                            "createdAt":  "2022-11-18T18:26:10Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2022-08-22T16:31:01Z",
        "body":  "### Description\r\n\r\nHello, I am developing [DevExpress .NET MAUI controls](https://www.devexpress.com/maui/), and I experienced a bug described below. It is severe for us.\r\n\r\nPlease see following project to reproduce this issue: [test.zip](https://github.com/dotnet/maui/files/8853079/test.zip)\r\nSame code works perfectly in Xamarin.Forms (iOS release).\r\n\r\n### Steps to Reproduce\r\n\r\n1. Open project folder in terminal\r\n2. Run \u0027dotnet build -t:run -f:net6.0-ios -p:_DeviceName=insert_device_id_here /p:RuntimeIdentifier=ios-arm64 -c release\u0027\r\n\r\n### Version with bug\r\n\r\n6.0 (current)\r\n\r\n### Last version that worked well\r\n\r\nUnknown/Other\r\n\r\n### Affected platforms\r\n\r\niOS\r\n\r\n### Affected platform versions\r\n\r\niOS 15\r\n\r\n### Did you find any workaround?\r\n\r\n_No response_\r\n\r\n### Relevant log output\r\n\r\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSN98CQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5FkSTr",
                                           "createdAt":  "2022-06-07T18:00:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "drasticactions",
                                           "body":  "Can you try running that code on a new net6.0 iOS app? (`dotnet new ios`)\r\n\r\nDoes it break there?",
                                           "updatedAt":  "2022-06-07T18:00:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FkSTw",
                                           "createdAt":  "2022-06-07T18:01:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Hi @MariyaGordeeva. We have added the \"s/needs-info\" label to this issue, which indicates that we have an open question for you before we can take further action. This issue will be closed automatically in 7 days if we do not hear back from you by then - please feel free to re-open it if you come back to this issue after that time.",
                                           "updatedAt":  "2022-06-07T18:01:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FkST0",
                                           "createdAt":  "2022-06-07T18:48:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MariyaGordeeva",
                                           "body":  "I run our code on a new net 6.0 iOS app, and the app crashes with the same exception \r\n\u003e \r\n[TEST_IOS.zip](https://github.com/dotnet/maui/files/8855779/TEST_IOS.zip)",
                                           "updatedAt":  "2022-06-07T18:55:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FkST3",
                                           "createdAt":  "2022-06-13T10:54:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jfversluis",
                                           "body":  "@dalexsoto @rolfbjarne Since it\u0027s happening on pure iOS as well I guess this is something for you?",
                                           "updatedAt":  "2022-06-13T10:54:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FkST7",
                                           "createdAt":  "2022-06-13T12:05:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rolfbjarne",
                                           "body":  "Is there a stack trace / crash report? This might be either for xamarin/xamarin-macios or dotnet/runtime, depending on what\u0027s happening.",
                                           "updatedAt":  "2022-06-13T12:05:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FkST-",
                                           "createdAt":  "2022-06-24T10:22:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODNfdug==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Lug16",
                                                                               "createdAt":  "2023-11-24T02:13:35Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "AntonKosenkoDX",
                                           "body":  "@rolfbjarne Here it is:\r\n```\r\n\r\n2022-06-24 14:20:42.443 TEST_IOS[59568:4380379] System.ExecutionEngineException: Attempting to JIT compile method \u0027(wrapper delegate-invoke) string \u003cModule\u003e:invoke_callvirt_string_object (object)\u0027 while running in aot-only mode. See https://docs.microsoft.com/xamarin/ios/internals/limitations for more information.\r\n2022-06-24 14:20:42.443 TEST_IOS[59568:4380379]    at System.Linq.Expressions.Interpreter.FuncCallInstruction`2[[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Run(InterpretedFrame )\r\n   at System.Linq.Expressions.Interpreter.Interpreter.Run(InterpretedFrame )\r\n   at System.Linq.Expressions.Interpreter.LightLambda.Run(Object[] )\r\n2022-06-24 14:20:42.443 TEST_IOS[59568:4380379]    at System.Linq.Expressions.Interpreter.CallInstruction.InterpretLambdaInvoke(LightLambda , Object[] )\r\n2022-06-24 14:20:42.443 TEST_IOS[59568:4380379]    at System.Linq.Expressions.Interpreter.FuncCallInstruction`3[[System.Func`2[[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Run(InterpretedFrame )\r\n   at System.Linq.Expressions.Interpreter.Interpreter.Run(InterpretedFrame )\r\n2022-06-24 14:20:42.443 TEST_IOS[59568:4380379]    at System.Linq.Expressions.Interpreter.LightLambda.Run(Object[] )\r\n   at System.Linq.Expressions.Interpreter.CallInstruction.InterpretLambdaInvoke(LightLambda , Object[] )\r\n2022-06-24 14:20:42.443 TEST_IOS[59568:4380379]    at System.Linq.Expressions.Interpreter.FuncCallInstruction`4[[System.Func`3[[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Run(InterpretedFrame )\r\n2022-06-24 14:20:42.443 TEST_IOS[59568:4380379]    at System.Linq.Expressions.Interpreter.Interpreter.Run(InterpretedFrame )\r\n   at System.Linq.Expressions.Interpreter.LightLambda.Run(Object[] )\r\n   at System.Dynamic.Utils.DelegateHelpers.FuncThunk1[Object[],Object](Func`2 handler, Object[] t1)\r\n2022-06-24 14:20:42.443 TEST_IOS[59568:4380379]    at TEST_IOS.AppDelegate.EvaluateLambdableContainsFunction(Object[] args)\r\n   at TEST_IOS.AppDelegate.FinishedLaunching(UIApplication application, NSDictionary launchOptions)\r\n\r\n```",
                                           "updatedAt":  "2022-06-24T10:22:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FkSUt",
                                           "createdAt":  "2022-06-27T09:53:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2022-06-27T09:53:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FsiYV",
                                           "createdAt":  "2022-06-28T21:42:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027os-ios\u0027: @steveisok, @akoeplinger\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\r\n\r\nHello, I am developing [DevExpress .NET MAUI controls](https://www.devexpress.com/maui/), and I experienced a bug described below. It is severe for us.\r\n\r\nPlease see following project to reproduce this issue: [test.zip](https://github.com/dotnet/maui/files/8853079/test.zip)\r\nSame code works perfectly in Xamarin.Forms (iOS release).\r\n\r\n### Steps to Reproduce\r\n\r\n1. Open project folder in terminal\r\n2. Run \u0027dotnet build -t:run -f:net6.0-ios -p:_DeviceName=insert_device_id_here /p:RuntimeIdentifier=ios-arm64 -c release\u0027\r\n\r\n### Version with bug\r\n\r\n6.0 (current)\r\n\r\n### Last version that worked well\r\n\r\nUnknown/Other\r\n\r\n### Affected platforms\r\n\r\niOS\r\n\r\n### Affected platform versions\r\n\r\niOS 15\r\n\r\n### Did you find any workaround?\r\n\r\n_No response_\r\n\r\n### Relevant log output\r\n\r\n_No response_\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eMariyaGordeeva\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`untriaged`, `area-VM-meta-mono`, `os-ios`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-06-28T21:42:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HL-kY",
                                           "createdAt":  "2022-07-25T16:30:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "Likely a duplicate of https://github.com/dotnet/runtime/issues/69410\r\n\r\nTo get this to work, you will have to enable the interpreter as this is not supported in full aot mode\r\n\r\n```\r\n\u003cPropertyGroup\u003e\r\n    \u003cUseInterpreter\u003etrue\u003c/UseInterpreter\u003e\r\n\u003c/PropertyGroup\u003e\r\n```",
                                           "updatedAt":  "2022-08-22T16:30:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Ime5O",
                                           "createdAt":  "2022-08-17T13:57:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rolfbjarne",
                                           "body":  "@steveisok the link to the duplicate is a link to this issue...",
                                           "updatedAt":  "2022-08-17T13:57:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5I33wJ",
                                           "createdAt":  "2022-08-22T16:31:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "\u003e @steveisok the link to the duplicate is a link to this issue...\r\n\r\nWhoops!  Fixed in the comment.",
                                           "updatedAt":  "2022-08-22T16:31:01Z"
                                       }
                                   ],
                         "totalCount":  11
                     },
        "title":  "Crash on function invoking in a release mode (iOS), if a function was created from lambda expression",
        "labels":  [
                       "area-Codegen-AOT-mono",
                       "os-ios"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/70490",
        "createdAt":  "2022-06-09T15:15:58Z",
        "number":  70490,
        "author":  "ivanpovazan",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-05-21T16:25:25Z",
        "body":  "### Summary\r\n\r\nThe runtime test: `Interop/SuppressGCTransition/SuppressGCTransitionTest/*` fails in FullAOT mode on Mono with the following output:\r\n \r\n```\r\nInline_NoGCTransition (1) ...\r\nInline_GCTransition (2) ...\r\nNoInline_NoGCTransition (3) ...\r\nNoInline_GCTransition (4) ...\r\nMixed (5) ...\r\nMixed_TightLoop (9) ...\r\nInline_NoGCTransition (266) ...\r\nInline_GCTransition (267) ...\r\nSystem.ExecutionEngineException: Attempting to JIT compile method \u0027(wrapper managed-to-native) int SuppressGCTransitionTest:wrapper_native_indirect_0x6000012e8b40 (intptr\u0026,int*)\u0027 while running in aot-only mode. See https://docs.microsoft.com/xamarin/ios/internals/limitations for more information.\r\n\r\n   at SuppressGCTransitionTest.Inline_GCTransition_FunctionPointer(Int32 expected) in /Users/ivan/repos/runtime-mono-AOT/src/tests/Interop/SuppressGCTransition/SuppressGCTransitionTest.cs:line 208\r\n   at SuppressGCTransitionTest.Main(String[] args)\r\nExpected: 100\r\nActual: 101\r\nEND EXECUTION - FAILED\r\n```\r\n\r\n### Repro\r\n1) Enable building the test with Mono AOT\r\n``` diff\r\ndiff --git a/src/tests/Interop/SuppressGCTransition/SuppressGCTransitionTest.csproj b/src/tests/Interop/SuppressGCTransition/SuppressGCTransitionTest.csproj\r\nindex c08644530f6..abb1fec49b7 100644\r\n--- a/src/tests/Interop/SuppressGCTransition/SuppressGCTransitionTest.csproj\r\n+++ b/src/tests/Interop/SuppressGCTransition/SuppressGCTransitionTest.csproj\r\n@@ -2,7 +2,6 @@\r\n   \u003cPropertyGroup\u003e\r\n     \u003cOutputType\u003eExe\u003c/OutputType\u003e\r\n     \u003cAllowUnsafeBlocks\u003eTrue\u003c/AllowUnsafeBlocks\u003e\r\n-    \u003cMonoAotIncompatible\u003etrue\u003c/MonoAotIncompatible\u003e\r\n   \u003c/PropertyGroup\u003e\r\n   \u003cItemGroup\u003e\r\n     \u003cCompile Include=\"$(InteropCommonDir)CheckGCMode.cs\" /\u003e\r\n```\r\n2) Build Mono\r\n``` bash\r\n./build.sh mono+libs+clr.hosts -c debug /p:MonoEnableLlvm=true /p:MonoLLVMUseCxx11Abi=true\r\n```\r\n3) Build the test\r\n``` bash \r\n./src/tests/build.sh mono debug /p:LibrariesConfiguration=Debug -test:Interop/SuppressGCTransition/SuppressGCTransitionTest.csproj\r\n```\r\n4) AOT compile the test\r\n``` bash\r\n./src/tests/build.sh mono_fullaot debug /p:LibrariesConfiguration=Debug -test:Interop/SuppressGCTransition/SuppressGCTransitionTest.csproj\r\n```\r\n5) Run the test (note: adjust the paths)\r\n``` bash\r\nMONO_ENV_OPTIONS=--full-aot bash /Users/ivan/repos/runtime-mono-AOT/artifacts/tests/coreclr/OSX.arm64.Debug/Interop/SuppressGCTransition/SuppressGCTransitionTest/SuppressGCTransitionTest.sh -coreroot=/Users/ivan/repos/runtime-mono-AOT/artifacts/tests/coreclr/OSX.arm64.Debug/Tests/Core_Root\r\n```\r\n\r\n### Additional notes\r\n~~Test exclusion details should be updated to reference this tracking issue:~~ Done.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOYTZPVw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5Ens0b",
                                           "createdAt":  "2022-06-09T15:17:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivanpovazan",
                                           "body":  "@lambdageek should we try to fix this for .NET7?",
                                           "updatedAt":  "2022-06-09T15:17:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hNk9X",
                                           "createdAt":  "2023-07-11T14:35:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivanpovazan",
                                           "body":  "Moving to 9.0.0",
                                           "updatedAt":  "2023-07-11T14:35:24Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "[mono] Fix SuppressGCTransitionTest for Mono FullAOT mode",
        "labels":  [
                       "area-Codegen-AOT-mono",
                       "runtime-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/70492",
        "createdAt":  "2022-06-09T15:46:05Z",
        "number":  70492,
        "author":  "ivanpovazan",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-06-28T20:49:50Z",
        "body":  "### Summary\r\n\r\nRuntime tests: \r\n- [x] `/JIT/Directed/callconv/PlatformDefaultMemberFunction/PlatformDefaultMemberFunctionTest/*`\r\n- [x] `/JIT/Directed/callconv/CdeclMemberFunction/CdeclMemberFunctionTest/*`\r\n- [x] `/JIT/Directed/callconv/StdCallMemberFunction/StdCallMemberFunctionTest/*`\r\n- [ ] `/JIT/Directed/callconv/ThisCall/ThisCallTest/*`\r\n\r\nare failing in FullAOT mode on Mono with nearly the same `Attempting to JIT compile method xxx while running in aot-only mode`.\r\n\r\n### StdCallMemberFunctionTest\r\n\r\n#### Output\r\nFull output for `/JIT/Directed/callconv/StdCallMemberFunction/StdCallMemberFunctionTest/*`:\r\n```\r\nSystem.ExecutionEngineException: Attempting to JIT compile method \u0027(wrapper managed-to-native) StdCallMemberFunctionNative/SizeF modopt(System.Runtime.CompilerServices.CallConvMemberFunction) modopt(System.Runtime.CompilerServices.CallConvStdcall) StdCallMemberFunctionTest:wrapper_native_indirect_0x600003ce7140 (intptr\u0026,StdCallMemberFunctionNative/C*,int)\u0027 while running in aot-only mode. See https://docs.microsoft.com/xamarin/ios/internals/limitations for more information.\r\n\r\n   at StdCallMemberFunctionTest.Test8ByteHFA(C* instance) in /Users/ivan/repos/runtime-mono-AOT/src/tests/JIT/Directed/callconv/StdCallMemberFunction/StdCallMemberFunctionTest.cs:line 96\r\n   at StdCallMemberFunctionTest.Main(String[] args)\r\nExpected: 100\r\nActual: 101\r\nEND EXECUTION - FAILED\r\n```\r\n\r\n#### Repro\r\n1) Enable building the test with Mono AOT\r\n``` diff\r\ndiff --git a/src/tests/JIT/Directed/callconv/Directory.Build.props b/src/tests/JIT/Directed/callconv/Directory.Build.props\r\nindex 49b99b7a101..9ed3161df40 100644\r\n--- a/src/tests/JIT/Directed/callconv/Directory.Build.props\r\n+++ b/src/tests/JIT/Directed/callconv/Directory.Build.props\r\n@@ -2,6 +2,6 @@\r\n   \u003cImport Project=\"$([MSBuild]::GetPathOfFileAbove(Directory.Build.props, $(MSBuildThisFileDirectory)..))\" /\u003e\r\n \r\n   \u003cPropertyGroup\u003e\r\n-    \u003cMonoAotIncompatible\u003etrue\u003c/MonoAotIncompatible\u003e\r\n+    \u003cMonoAotIncompatible\u003efalse\u003c/MonoAotIncompatible\u003e\r\n   \u003c/PropertyGroup\u003e\r\n \u003c/Project\u003e\r\n```\r\n2) Build Mono\r\n``` bash\r\n./build.sh mono+libs+clr.hosts -c debug /p:MonoEnableLlvm=true /p:MonoLLVMUseCxx11Abi=true\r\n```\r\n3) Build the test\r\n``` bash \r\n./src/tests/build.sh mono debug /p:LibrariesConfiguration=Debug -test:JIT/Directed/callconv/StdCallMemberFunction/StdCallMemberFunctionTest.csproj\r\n```\r\n4) AOT compile the test\r\n``` bash\r\n./src/tests/build.sh mono_fullaot debug /p:LibrariesConfiguration=Debug -test:JIT/Directed/callconv/StdCallMemberFunction/StdCallMemberFunctionTest.csproj\r\n```\r\n5) Run the test (note: adjust the paths)\r\n``` bash\r\nMONO_ENV_OPTIONS=--full-aot bash /Users/ivan/repos/runtime-mono-AOT/artifacts/tests/coreclr/OSX.arm64.Debug/JIT/Directed/callconv/StdCallMemberFunction/StdCallMemberFunctionTest/StdCallMemberFunctionTest.sh  -coreroot=/Users/ivan/repos/runtime-mono-AOT/artifacts/tests/coreclr/OSX.arm64.Debug/Tests/Core_Root\r\n```\r\n\r\n### Additional notes\r\n\r\n~~Tests exclusion details should be updated to reference this tracking issue:~~ Done.\r\n\r\nPossibly related to: https://github.com/dotnet/runtime/issues/50440\r\n\r\ncc: @lambdageek @lateralusX ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOdCA5HQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5En4dc",
                                           "createdAt":  "2022-06-09T15:47:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivanpovazan",
                                           "body":  "@lambdageek should we try to fix this for .NET7?",
                                           "updatedAt":  "2022-06-09T15:47:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hNRkD",
                                           "createdAt":  "2023-07-11T13:48:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SamMonoRT",
                                           "body":  "Assigning to @LeVladIonescu related to current work",
                                           "updatedAt":  "2023-07-11T13:48:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5uxCv8",
                                           "createdAt":  "2023-12-15T18:55:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "matouskozak",
                                           "body":  "Current situation. Mono is reporting the following warnings for `StdCallMemberFunctionTest` and `CdeclMemberFunctionTest` tests:\r\n```\r\nMultiple calling conventions are not supported for UnmanagedCallersOnlyAttribute parameter CallConvs, specified for method GetWidthAsLong. Only the first calling convention will be taken into account\r\nMultiple calling conventions are not supported for UnmanagedCallersOnlyAttribute parameter CallConvs, specified for method GetE. Only the first calling convention will be taken into account\r\nMultiple calling conventions are not supported for UnmanagedCallersOnlyAttribute parameter CallConvs, specified for method GetHeightAsInt. Only the first calling convention will be taken into account\r\nMultiple calling conventions are not supported for UnmanagedCallersOnlyAttribute parameter CallConvs, specified for method GetWidth. Only the first calling convention will be taken into account\r\nMultiple calling conventions are not supported for UnmanagedCallersOnlyAttribute parameter CallConvs, specified for method GetSize. Only the first calling convention will be taken into account\r\n```\r\nThis could be related to missing support for CallConvMemberFunction https://github.com/dotnet/runtime/issues/50440 as is listed in the PR description.\r\n\r\nThe `ThisCallTest` is still failing with:\r\n```\r\nSystem.ExecutionEngineException: Attempting to JIT compile method \u0027(wrapper native-to-managed) ThisCallNative/SizeF ThisCallTest/\u003c\u003ec:\u003cget_ManagedVtable\u003eb__20_0 (ThisCallNative/C*,int)\u0027 while running in aot-only mode. See https://docs.microsoft.com/xamarin/ios/internals/limitations for more information.\r\n\r\n   at System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(Delegate d)\r\n   at System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate[GetSizeFn](GetSizeFn d)\r\n   at ThisCallTest.get_ManagedVtable()\r\n   at ThisCallTest.Test8ByteHFAReverse()\r\n   at ThisCallTest.TestEntryPoint()\r\nXunit.Sdk.EqualException: Assert.Equal() Failure: Values differ\r\nExpected: 100\r\nActual:   101\r\n   at Xunit.Assert.Equal[Int32](Int32 expected, Int32 actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[Int32](Int32 expected, Int32 actual)\r\n   at __GeneratedMainWrapper.Main()\r\nExpected: 100\r\nActual: 101\r\nEND EXECUTION - FAILED\r\n```\r\n\r\nand `PlatformDefaultMemberFunctionTest` is passing correctly.",
                                           "updatedAt":  "2023-12-15T18:56:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5uxxDG",
                                           "createdAt":  "2023-12-15T22:00:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODQTGJw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "matouskozak",
                                                                               "createdAt":  "2023-12-21T14:17:29Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ivanpovazan",
                                           "body":  "@matouskozak I suggest we enable the tests that are now passing. ",
                                           "updatedAt":  "2023-12-15T22:00:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc50HxSg",
                                           "createdAt":  "2024-02-16T11:09:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODXCQtQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ivanpovazan",
                                                                               "createdAt":  "2024-02-16T12:01:45Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "matouskozak",
                                           "body":  "Enabled tests (https://github.com/dotnet/runtime/pull/96243):\r\n- PlatformDefaultMemberFunctionTest\r\n- StdCallMemberFunctionTest\r\n- CdeclMemberFunctionTest\r\n\r\nTest to fix:\r\n- ThisCallTest ",
                                           "updatedAt":  "2024-02-16T11:09:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc50IDkd",
                                           "createdAt":  "2024-02-16T12:04:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODXCh7A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "matouskozak",
                                                                               "createdAt":  "2024-02-16T12:39:32Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ivanpovazan",
                                           "body":  "@matouskozak are you currently actively working on the fix for `ThisCallTest`?\r\nIf not, I would suggest updating the issue description with the current state and add a disabled test label.",
                                           "updatedAt":  "2024-02-16T12:04:52Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "[mono] Runtime tests failing with \u0027Attempting to JIT compile method\u0027 for Mono FullAOT mode",
        "labels":  [
                       "disabled-test",
                       "area-Codegen-AOT-mono",
                       "runtime-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/70957",
        "createdAt":  "2022-06-19T15:32:00Z",
        "number":  70957,
        "author":  "unicomp21",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-03-07T02:58:59Z",
        "body":  "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nCould someone hold my hand on this one?  Given tail calls are not currently supported in webassembly, how is the \"tail\" instruction being implemented in Blazor?\n\n### Describe the solution you\u0027d like\n\nI\u0027m wondering if we can reuse the same implementation on the emscripten side for co_await, until tail calls land in webassembly?\n\n### Additional context\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOVt6i-w==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5FIPZQ",
                                           "createdAt":  "2022-06-19T18:21:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2022-06-19T18:21:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FIQNP",
                                           "createdAt":  "2022-06-19T18:47:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "EgorBo",
                                           "body":  "I hope the mono team will correct me if I am wrong but it looks like explicit tails calls are handled well in Mono-Interpreter (including wasm)\r\nbut it\u0027s unlikely they\u0027re handled in WASM-AOT since, as you said, there is no built-in WASM support for that. So maybe mono-aot fallbacks to interp for methods with explicit tail calls inside?\r\n\r\nPS: quoting ECMA 335:\r\n![image](https://user-images.githubusercontent.com/523221/174495943-fbaf7591-3cee-4b9e-b1e1-47a8f9409ecf.png)\r\n",
                                           "updatedAt":  "2022-06-19T18:50:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FIjXk",
                                           "createdAt":  "2022-06-20T01:29:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Is your feature request related to a problem? Please describe the problem.\n\nCould someone hold my hand on this one?  Given tail calls are not currently supported in webassembly, how is the \"tail\" instruction being implemented in Blazor?\n\n### Describe the solution you\u0027d like\n\nI\u0027m wondering if we can reuse the same implementation on the emscripten side for co_await, until tail calls land in webassembly?\n\n### Additional context\n\n_No response_\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eunicomp21\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`question`, `arch-wasm`, `untriaged`, `area-Codegen-meta-mono`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-06-20T01:29:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FQo4z",
                                           "createdAt":  "2022-06-21T16:34:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "unicomp21",
                                           "body":  "Is this an argument for having clang target wasm3?",
                                           "updatedAt":  "2022-06-21T16:34:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FQpc_",
                                           "createdAt":  "2022-06-21T16:35:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "unicomp21",
                                           "body":  "Or maybe clang could target the byte code being used by the mono interpreter?",
                                           "updatedAt":  "2022-06-21T16:35:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GDAmQ",
                                           "createdAt":  "2022-07-05T15:28:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "Egor is correct.  The interpreter supports tailcalls, but AOT doesn\u0027t.\r\n\r\n\u003e Or maybe clang could target the byte code being used by the mono interpreter?\r\n\r\nThe interpreter\u0027s bytecode is failry specific to the needs of a .NET runtime.  There would not be much value in trying to use it as a general-purpose clang backend.\r\n\r\n---\r\n\r\nFor Emscripten, it might be possible to use something like [Asyncify](https://emscripten.org/docs/porting/asyncify.html) (or some rewriting approach inspired by Asyncify) to transform C++ coroutines to tailcalls by bouncing back into JS.",
                                           "updatedAt":  "2022-07-05T15:28:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GDAwO",
                                           "createdAt":  "2022-07-05T15:28:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "Keeping this open - when wasm adds tailcall ops, we should revisit AOT support",
                                           "updatedAt":  "2022-07-05T15:28:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5W3qL7",
                                           "createdAt":  "2023-03-07T02:58:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "unicomp21",
                                           "body":  "wasm tail calls get released in chrome 113, right?",
                                           "updatedAt":  "2023-03-07T02:58:58Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "tail calls in wasm",
        "labels":  [
                       "enhancement",
                       "question",
                       "arch-wasm",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/71072",
        "createdAt":  "2022-06-21T16:48:15Z",
        "number":  71072,
        "author":  "ivanpovazan",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-05-21T16:25:30Z",
        "body":  "With the change introduced at https://github.com/dotnet/runtime/pull/70838 it can happen that uninflated generic methods are collected for AOTing. Compiling these methods fails and is skipped, which can be observed by passing `--aot=print-skipped` to the AOT compiler when compiling:\r\n\r\n``` csharp\r\nprivate static void Foo1\u003cT\u003e(T p) where T : struct\r\n{\r\n}\r\n```\r\nOutput:\r\n```\r\nSkip (gshared failure): void HelloWorld.Program:Foo1\u003cT\u003e (T) ((null))\r\n```\r\n\r\nThe root cause of this problem is that the AOT runtime assumes that the index of \u0027normal\u0027 methods is the same as their token as pointed out by @vargaz [here](https://github.com/dotnet/runtime/pull/70838#discussion_r901114163), which means that solving this problem would require either:\r\n- to remove this assumption and not to collect uninflated generic methods, or\r\n- mark collected uninflated generic methods to be skipped when compiling\r\n\r\nEven though this issue does not cause the AOT compiler to crash, nor it causes runtime failures, it is still an unwanted behaviour.\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOYTZUWw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5hNlRb",
                                           "createdAt":  "2023-07-11T14:36:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivanpovazan",
                                           "body":  "Moving to 9.0.0",
                                           "updatedAt":  "2023-07-11T14:36:04Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "[mono] Do not collect uninflated generic methods for AOT compilation",
        "labels":  [
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/71333",
        "createdAt":  "2022-06-27T13:47:56Z",
        "number":  71333,
        "author":  "dalexsoto",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-06-30T18:11:12Z",
        "body":  "From xamarin-macios created by [vsfeedback](https://github.com/vsfeedback): xamarin/xamarin-macios#15286  \n\n_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/XamariniOS-device-builds-freeze-after-X/10070412)._\n\n---\nAfter updating to Xcode 13.4.1 Xamarin.iOS device builds fails on both my macs (running the same version of Xcode, Visual Studio for Mac, and Xamarin.iOS). One of the machines is an Intel mac, while the other is an M1, so same behaviour on both architectures.\n\nAfter force quiting Visual Studio, I still have one or more orphan arm64-darwin-mono-sgen processes lingering, causing high CPU load.\n\nThe problem happens consistently. I can build for Simulator and other project types (such as .NET 6 Unit Test projects) just fine.\n\n---\n### Original Comments\n\n#### Feedback Bot on 6/14/2022, 08:09 PM: \n\n(private comment, text removed)\n#### Jonas Follesø on 6/15/2022, 00:44 AM: \n\n(private comment, text removed)\n#### Jonas Follesø on 6/15/2022, 04:29 AM: \n\n(private comment, text removed)\n\n---\n### Original Solutions\n(no solutions)",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHORbJGxg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5FlL3U",
                                           "createdAt":  "2022-06-27T13:47:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dalexsoto",
                                           "body":  "I reported this issue through the Visual Studio for Mac feedback tool. After further investigation I have narrowed the issue down, and have published a repository reproducing the problem at https://github.com/follesoe/DeedleBuildIssue.\r\n\r\nIt is a default single view iOS application created using the Visual Studio for Mac 2022 template, where the only changes I have done is:\r\n\r\n- Add a package reference to [Deedle v2.5.0](https://www.nuget.org/packages/Deedle)\r\n- Add a C# class called `FrameBuilder`, with a simple method returning a type from the Deedle library\r\n\r\n```csharp\r\nusing System;\r\nusing Deedle;\r\n\r\nnamespace DeedleBuildIssue\r\n{\r\n\tpublic class FrameBuilder\r\n\t{\r\n\t\tpublic FrameBuilder()\r\n\t\t{\r\n\t\t}\r\n\r\n\t\t// If I uncomment this method, the build hangs.\r\n\t\t/*\r\n\t\tpublic Frame\u003cDateTimeOffset, string\u003e ToFrame()\r\n\t\t{\r\n\t\t\treturn Frame.CreateEmpty\u003cDateTimeOffset, string\u003e();\r\n\t\t}\r\n\t\t*/\r\n\t}\r\n}\r\n```\r\n\r\nIf I uncomment the method returning `Frame\u003cDateTimeOffset, string\u003e`, the build hangs indefinitely when building for a device, and I have `arm64-darwin-mono-sgen` processes consuming 100% CPU. If I kill Visual Studio, these processes become orphan, and I have to kill them through Activity Monitor.\r\n\r\nIt builds just fine for simulator, and it builds fine for device if I remove that method (so it is not related to incorrect provisioning profiles or certificates).\r\n\r\nI am using the following versions:\r\n```\r\nVisual Studio Community 2022 for Mac\r\nVersion 17.0.3 (build 21)\r\nInstallation UUID: 1db6fcf0-e35f-49d9-a62e-05b5e81e0f2b\r\n\r\nRuntime\r\n.NET 6.0.3 (64-bit)\r\nArchitecture: Arm64\r\n\r\nRoslyn (Language Service)\r\n4.1.0-3.22075.3+592501cbb9c9394072a245c15b3458ff88155d85\r\n\r\nNuGet\r\nVersion: 6.0.0.262\r\n\r\n.NET SDK (Arm64)\r\nSDK: /usr/local/share/dotnet/sdk/6.0.301/Sdks\r\nSDK Versions:\r\n\t6.0.301\r\n\t6.0.300\r\nMSBuild SDKs: /Applications/Visual Studio.app/Contents/MonoBundle/MSBuild/Current/bin/Sdks\r\n\r\n.NET SDK (x64)\r\nSDK Versions:\r\n\t3.1.420\r\n\t3.1.419\r\n\r\n.NET Runtime (Arm64)\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t6.0.6\r\n\t6.0.5\r\n\r\n.NET Runtime (x64)\r\nRuntime: /usr/local/share/dotnet/x64/dotnet\r\nRuntime Versions:\r\n\t3.1.26\r\n\t3.1.25\r\n\r\nXamarin.Profiler\r\nVersion: 1.8.0.19\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\nUpdater\r\nVersion: 11\r\n\r\nApple Developer Tools\r\nXcode 13.4.1 (20504)\r\nBuild 13F100\r\n\r\nXamarin.Mac\r\nVersion: 8.10.0.5 (Visual Studio Community)\r\nHash: 96b3edb6d\r\nBranch: d17-2\r\nBuild date: 2022-05-18 07:32:06-0400\r\n\r\nXamarin.iOS\r\nVersion: 15.10.0.5 (Visual Studio Community)\r\nHash: 96b3edb6d\r\nBranch: d17-2\r\nBuild date: 2022-05-18 07:32:07-0400\r\n\r\nXamarin Designer\r\nVersion: 17.1.5.90\r\nHash: 53f47efde\r\nBranch: remotes/origin/d17-0-vsmac\r\nBuild date: 2022-06-09 16:39:06 UTC\r\n\r\nXamarin.Android\r\nVersion: 12.3.3.3 (Visual Studio Community)\r\nCommit: xamarin-android/d17-2/4e061b7\r\nAndroid SDK: /Users/follesoe/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t12.0 (API level 31)\r\n\t\t11.0 (API level 30)\r\n\r\nSDK Command-line Tools Version: 5.0\r\nSDK Platform Tools Version: 31.0.3\r\nSDK Build Tools Version: 30.0.3\r\n\r\nBuild Information: \r\nMono: dffa5ab\r\nJava.Interop: xamarin/java.interop/d17-2@9760f0a9\r\nProGuard: Guardsquare/proguard/v7.0.1@912d149\r\nSQLite: xamarin/sqlite/3.38.2@7b1e016\r\nXamarin.Android Tools: xamarin/xamarin-android-tools/d17-2@fc3c2ac\r\n\r\nMicrosoft Build of OpenJDK\r\nJava SDK: /Library/Java/JavaVirtualMachines/microsoft-11.jdk\r\n11.0.12\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\nEclipse Temurin JDK\r\nJava SDK: /Library/Java/JavaVirtualMachines/temurin-8.jdk\r\n1.8.0.302\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\nAndroid SDK Manager\r\nVersion: 17.2.0.37\r\nHash: 7f5a6ef\r\nBranch: remotes/origin/d17-2\r\nBuild date: 2022-06-09 16:39:11 UTC\r\n\r\nAndroid Device Manager\r\nVersion: 0.0.0.1116\r\nHash: e47e6c8\r\nBranch: remotes/origin/d17-2\r\nBuild date: 2022-06-09 16:39:11 UTC\r\n\r\nBuild Information\r\nRelease ID: 1700030021\r\nGit revision: ee0430307512fc60e73f5c27f93e6ef73b7a5ba0\r\nBuild date: 2022-06-09 16:37:14+00\r\nBuild branch: release-17.0\r\nBuild lane: release-17.0\r\n\r\nOperating System\r\nMac OS X 12.4.0\r\nDarwin 21.5.0 Darwin Kernel Version 21.5.0\r\n    Tue Apr 26 21:08:37 PDT 2022\r\n    root:xnu-8020.121.3~4/RELEASE_ARM64_T6000 arm64\r\n```",
                                           "updatedAt":  "2022-06-27T13:47:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FlL3V",
                                           "createdAt":  "2022-06-27T13:47:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dalexsoto",
                                           "body":  "I can definitely repro this with NET 6, that said I left it run it for an hour and it did not finish.\r\n\r\n![image](https://user-images.githubusercontent.com/204671/175953160-41e03b71-c949-46fd-a09a-d90d314f14cf.png)\r\n",
                                           "updatedAt":  "2022-06-27T13:47:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FlL3W",
                                           "createdAt":  "2022-06-27T13:47:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dalexsoto",
                                           "body":  "@dalexsoto this would be on the runtime side, but two questions come up:\r\n\r\n1. Which version of legacy Xamarin.iOS worked? We\u0027ve had very few changes to the AOT compiler in Xamarin.iOS in recent years, so it\u0027s surprising it regressed (maybe Deedle or a dependency was updated? in which case this wouldn\u0027t be a regression on our side)\r\n2. Does it also happen in a .NET project? If so, we should move this to the dotnet/runtime repo (if it\u0027s only legacy Xamarin.iOS, then we should move it to mono/mono instead).",
                                           "updatedAt":  "2022-06-27T13:47:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FlL3X",
                                           "createdAt":  "2022-06-27T13:47:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dalexsoto",
                                           "body":  "I was able to reproduce this bug with the outlined steps I have attached the sample I used and the binlog, that said I used Xcode 13.3 to reproduce this so this is definitely not something because of Xcode 13.4. I used Xamarin.iOS Legacy.\r\n\r\nI can\u0027t attach mtouch-cache folder because the directory itself is 22 GB and the big culprit is deedle.dll.s\r\n\r\n![image](https://user-images.githubusercontent.com/204671/174508045-c92691ea-1943-40f3-9580-b039f93f01e1.png)\r\n\r\n[TestAppiOS.zip](https://github.com/xamarin/xamarin-macios/files/8936783/TestAppiOS.zip)\r\n[build.binlog.zip](https://github.com/xamarin/xamarin-macios/files/8936768/build.binlog.zip)\r\n\r\n@rolfbjarne would this be on our side or the runtime? This is an F# library so probably this is hitting an edge case in the AOT compiler.\r\n\r\n\u003cdetails\u003e\r\n  \u003csummary\u003eClick to expand system info!\u003c/summary\u003e\r\n\r\n```\r\nVisual Studio Enterprise 2022 for Mac Preview\r\nVersion 17.3 Preview (17.3 build 1030)\r\nInstallation UUID: 537d6eae-21d8-474f-8494-54111827a342\r\n\r\nRuntime\r\n.NET 6.0.5 (64-bit)\r\nArchitecture: X64\r\n\r\nRoslyn (Language Service)\r\n4.3.0-2.22307.14+b91fc5b06135deb5bd72c105a1b96ce278ad6beb\r\n\r\nNuGet\r\nVersion: 6.0.0.262\r\n\r\n.NET SDK (x64)\r\nSDK: /usr/local/share/dotnet/sdk/6.0.301/Sdks\r\nSDK Versions:\r\n\t6.0.301\r\n\t6.0.201\r\n\t6.0.103\r\n\t6.0.102\r\n\t5.0.408\r\n\t5.0.407\r\n\t5.0.406\r\n\t5.0.405\r\n\t5.0.404\r\n\t5.0.200\r\n\t3.1.420\r\n\t3.1.418\r\n\t3.1.417\r\n\t3.1.416\r\nMSBuild SDKs: /Applications/Visual Studio.app/Contents/MonoBundle/MSBuild/Current/bin/Sdks\r\n\r\n.NET Runtime (x64)\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t6.0.6\r\n\t6.0.3\r\n\t6.0.2\r\n\t5.0.17\r\n\t5.0.16\r\n\t5.0.15\r\n\t5.0.14\r\n\t5.0.13\r\n\t5.0.3\r\n\t3.1.26\r\n\t3.1.24\r\n\t3.1.23\r\n\t3.1.22\r\n\r\nXamarin.Profiler\r\nVersion: 1.8.0.19\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\nUpdater\r\nVersion: 11\r\n\r\nXamarin.Android\r\nVersion: 12.3.99.95 (Visual Studio Enterprise)\r\nCommit: xamarin-android/main/5432886\r\nAndroid SDK: /Users/alex/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t12.0 (API level 31)\r\n\t\t11.0 (API level 30)\r\n\r\nSDK Command-line Tools Version: 5.0\r\nSDK Platform Tools Version: 33.0.1\r\nSDK Build Tools Version: 30.0.3\r\n\r\nBuild Information: \r\nMono: dffa5ab\r\nJava.Interop: xamarin/java.interop/main@1f27ab55\r\nSQLite: xamarin/sqlite/3.38.5@df4deab\r\nXamarin.Android Tools: xamarin/xamarin-android-tools/main@fc3c2ac\r\n\r\nMicrosoft Build of OpenJDK\r\nJava SDK: /Library/Java/JavaVirtualMachines/microsoft-11.jdk\r\n11.0.14.1\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\nEclipse Temurin JDK\r\nJava SDK: /Library/Java/JavaVirtualMachines/temurin-8.jdk\r\n1.8.0.302\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\nAndroid SDK Manager\r\nVersion: 17.2.0.47\r\nHash: d6dd135\r\nBranch: remotes/origin/dev/tondat/main-menues~3\r\nBuild date: 2022-06-17 17:46:59 UTC\r\n\r\nAndroid Device Manager\r\nVersion: 0.0.0.1127\r\nHash: 4bb4d48\r\nBranch: remotes/origin/dev/tondat/main-1536295~1\r\nBuild date: 2022-06-17 17:46:59 UTC\r\n\r\nXamarin Designer\r\nVersion: 17.3.0.110\r\nHash: 01d90a6c4\r\nBranch: remotes/origin/d17-3\r\nBuild date: 2022-06-17 17:46:54 UTC\r\n\r\nApple Developer Tools\r\nXcode 13.3 (20102)\r\nBuild 13E113\r\n\r\nXamarin.Mac\r\nVersion: 8.10.0.5 (Visual Studio Enterprise)\r\nHash: 96b3edb6d\r\nBranch: d17-2\r\nBuild date: 2022-05-18 07:32:06-0400\r\n\r\nXamarin.iOS\r\nVersion: 15.10.0.5 (Visual Studio Enterprise)\r\nHash: 96b3edb6d\r\nBranch: d17-2\r\nBuild date: 2022-05-18 07:32:07-0400\r\n\r\nBuild Information\r\nRelease ID: 1703001030\r\nGit revision: b2c8d4a15a1c1cfe1dfedffe61f43d64a27fb7c3\r\nBuild date: 2022-06-17 17:44:27+00\r\nBuild branch: release-17.3\r\nBuild lane: release-17.3\r\n\r\nOperating System\r\nMac OS X 12.4.0\r\nDarwin 21.5.0 Darwin Kernel Version 21.5.0\r\n    Tue Apr 26 21:08:22 PDT 2022\r\n    root:xnu-8020.121.3~4/RELEASE_X86_64 x86_64\r\n```\r\n\r\n\u003c/details\u003e",
                                           "updatedAt":  "2022-06-27T13:47:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FlL3Y",
                                           "createdAt":  "2022-06-27T13:47:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dalexsoto",
                                           "body":  "\u003e Which version of Xamarin.iOS worked?\r\n\r\n@follesoe do you know?",
                                           "updatedAt":  "2022-06-27T13:47:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FlL3Z",
                                           "createdAt":  "2022-06-27T13:47:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dalexsoto",
                                           "body":  "A tip from @praeclarum is that the AOT compiler can be quite slow with F# libraries using large amounts of generics, which is also the case for Deedle. So it could be a generic (pun intended) performance issue with AOT of F# code, or Deedle sends the AOT compiler into a path that stalls/never completes?\r\n\r\nIt does not complete in ~60 min on AppCenter build agents (the build gets terminated).",
                                           "updatedAt":  "2022-06-27T13:47:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FlL3b",
                                           "createdAt":  "2022-06-27T13:47:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dalexsoto",
                                           "body":  "I let it run until completion on my local computer, and got 699 build errors:\r\n\r\n```\r\n\r\nBuilding DeedleBuildIssue (Debug|iPhone)\r\nBuild started 6/17/2022 12:15:31 PM.\r\n__________________________________________________\r\nProject \"/Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/DeedleBuildIssue.csproj\" (Build target(s)):\r\n\r\nTarget _DetectDebugNetworkConfiguration:\r\n      DebugIPAddresses: \u003cnull\u003e\r\nTarget _BeforeCoreCompileImageAssets:\r\n  Skipping target \"_BeforeCoreCompileImageAssets\" because all output files are up-to-date with respect to the input files.\r\nTarget _DetectSigningIdentity:\r\n    Detected signing identity:\r\n            \r\n      Code Signing Key: \"Apple Development: Jonas Folleso (7L2SP8X3M6)\" (E3688F124B2A23A7736470A90D4F042D3A2DE5B8)\r\n      Provisioning Profile: \"iOS Team Provisioning Profile: *\" (2450e87c-aee8-460d-9406-2cdaf06e1ab3)\r\n      Bundle Id: no.follesoe.DeedleBuildIssue\r\n      App Id: C698838EFC.no.follesoe.DeedleBuildIssue\r\nTarget _CoreCompileImageAssets:\r\n  Skipping target \"_CoreCompileImageAssets\" because all output files are up-to-date with respect to the input files.\r\nTarget _BeforeCoreCompileInterfaceDefinitions:\r\n  Skipping target \"_BeforeCoreCompileInterfaceDefinitions\" because all output files are up-to-date with respect to the input files.\r\nTarget _CoreCompileInterfaceDefinitions:\r\n  Skipping target \"_CoreCompileInterfaceDefinitions\" because all output files are up-to-date with respect to the input files.\r\nTarget _BeforeCoreCompileSceneKitAssets:\r\n  Skipping target \"_BeforeCoreCompileSceneKitAssets\" because it has no inputs.\r\nTarget _BeforeCoreCompileSceneKitAssets:\r\n  Skipping target \"_BeforeCoreCompileSceneKitAssets\" because it has no inputs.\r\nTarget _BeforeCoreCompileSceneKitAssets:\r\n  Skipping target \"_BeforeCoreCompileSceneKitAssets\" because it has no inputs.\r\nTarget _CoreCompileSceneKitAssets:\r\n  Skipping target \"_CoreCompileSceneKitAssets\" because it has no inputs.\r\nTarget _CoreCompileColladaAssets:\r\n  Skipping target \"_CoreCompileColladaAssets\" because it has no inputs.\r\nTarget _BeforeCompileTextureAtlases:\r\n  Skipping target \"_BeforeCompileTextureAtlases\" because it has no inputs.\r\nTarget _BeforeCompileTextureAtlases:\r\n  Skipping target \"_BeforeCompileTextureAtlases\" because it has no inputs.\r\nTarget _BeforeCompileTextureAtlases:\r\n  Skipping target \"_BeforeCompileTextureAtlases\" because it has no inputs.\r\nTarget _CoreCompileTextureAtlases:\r\n  Skipping target \"_CoreCompileTextureAtlases\" because it has no inputs.\r\nTarget _BeforeCompileCoreMLModels:\r\n  Skipping target \"_BeforeCompileCoreMLModels\" because all output files are up-to-date with respect to the input files.\r\nTarget _CoreCompileCoreMLModels:\r\n  Skipping target \"_CoreCompileCoreMLModels\" because all output files are up-to-date with respect to the input files.\r\nTarget _CoreOptimizePngImages:\r\n  Skipping target \"_CoreOptimizePngImages\" because it has no outputs.\r\nTarget _CoreOptimizePropertyLists:\r\n  Skipping target \"_CoreOptimizePropertyLists\" because it has no inputs.\r\nTarget _CoreOptimizeLocalizationFiles:\r\n  Skipping target \"_CoreOptimizeLocalizationFiles\" because it has no inputs.\r\nTarget ResolveAssemblyReferences:\r\n    Consider app.config remapping of assembly \"System.Runtime, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" from Version \"4.1.0.0\" [/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Runtime.dll] to Version \"4.1.2.0\" [] to solve conflict and get rid of warning.\r\n    Consider app.config remapping of assembly \"System.Reflection, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" from Version \"4.1.0.0\" [/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Reflection.dll] to Version \"4.1.2.0\" [] to solve conflict and get rid of warning.\r\n    Consider app.config remapping of assembly \"System.Runtime.Extensions, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" from Version \"4.1.0.0\" [/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Runtime.Extensions.dll] to Version \"4.1.2.0\" [] to solve conflict and get rid of warning.\r\n    Consider app.config remapping of assembly \"System.Globalization, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" from Version \"4.0.10.0\" [/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Globalization.dll] to Version \"4.0.11.0\" [] to solve conflict and get rid of warning.\r\n    Consider app.config remapping of assembly \"System.Threading, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" from Version \"4.0.10.0\" [/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Threading.dll] to Version \"4.0.11.0\" [] to solve conflict and get rid of warning.\r\n    /Applications/Visual Studio.app/Contents/MonoBundle/MSBuild/Current/bin/Microsoft.Common.CurrentVersion.targets(2218,5): warning MSB3276: Found conflicts between different versions of the same dependent assembly. Please set the \"AutoGenerateBindingRedirects\" property to true in the project file. For more information, see http://go.microsoft.com/fwlink/?LinkId=294190.\r\nDone building target \"ResolveAssemblyReferences\" in project \"DeedleBuildIssue.csproj\".\r\nTarget GenerateTargetFrameworkMonikerAttribute:\r\n  Skipping target \"GenerateTargetFrameworkMonikerAttribute\" because all output files are up-to-date with respect to the input files.\r\nTarget CoreCompile:\r\n    /Applications/Visual Studio.app/Contents/MonoBundle/MSBuild/Current/bin/Roslyn/csc.exe /noconfig /nowarn:2008 /fullpaths /nostdlib+ /errorreport:prompt /warn:4 /define:__IOS__;__MOBILE__;__UNIFIED__;DEBUG /errorendlocation /preferreduilang:en-US /reference:/Users/follesoe/.nuget/packages/deedle/2.5.0/lib/netstandard2.0/Deedle.dll /reference:/Users/follesoe/.nuget/packages/fsharp.core/4.5.2/lib/netstandard1.6/FSharp.Core.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/mscorlib.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/OpenTK-1.0.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/System.Core.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/System.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Drawing.Common.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/System.Numerics.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/System.Numerics.Vectors.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/System.Xml.dll /reference:/Users/follesoe/.nuget/packages/xamarin.essentials/1.7.3/lib/xamarinios10/Xamarin.Essentials.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Xamarin.iOS.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/Microsoft.Win32.Primitives.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/Microsoft.Win32.Registry.AccessControl.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/Microsoft.Win32.Registry.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/netstandard.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.AppContext.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Buffers.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Collections.Concurrent.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Collections.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Collections.NonGeneric.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Collections.Specialized.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.ComponentModel.Annotations.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.ComponentModel.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.ComponentModel.EventBasedAsync.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.ComponentModel.Primitives.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.ComponentModel.TypeConverter.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Console.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Data.Common.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Data.SqlClient.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Diagnostics.Contracts.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Diagnostics.Debug.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Diagnostics.FileVersionInfo.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Diagnostics.Process.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Diagnostics.StackTrace.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Diagnostics.TextWriterTraceListener.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Diagnostics.Tools.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Diagnostics.TraceEvent.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Diagnostics.TraceSource.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Diagnostics.Tracing.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Drawing.Primitives.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Dynamic.Runtime.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Globalization.Calendars.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Globalization.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Globalization.Extensions.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.IO.Compression.ZipFile.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.IO.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.IO.FileSystem.AccessControl.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.IO.FileSystem.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.IO.FileSystem.DriveInfo.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.IO.FileSystem.Primitives.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.IO.FileSystem.Watcher.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.IO.IsolatedStorage.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.IO.MemoryMappedFiles.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.IO.Pipes.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.IO.UnmanagedMemoryStream.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Linq.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Linq.Expressions.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Linq.Parallel.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Linq.Queryable.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Memory.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Net.AuthenticationManager.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Net.Cache.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Net.HttpListener.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Net.Mail.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Net.NameResolution.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Net.NetworkInformation.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Net.Ping.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Net.Primitives.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Net.Requests.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Net.Security.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Net.ServicePoint.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Net.Sockets.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Net.Utilities.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Net.WebHeaderCollection.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Net.WebSockets.Client.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Net.WebSockets.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.ObjectModel.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Reflection.DispatchProxy.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Reflection.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Reflection.Emit.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Reflection.Emit.ILGeneration.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Reflection.Emit.Lightweight.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Reflection.Extensions.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Reflection.Primitives.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Reflection.TypeExtensions.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Resources.Reader.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Resources.ReaderWriter.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Resources.ResourceManager.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Resources.Writer.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Runtime.CompilerServices.VisualC.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Runtime.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Runtime.Extensions.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Runtime.Handles.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Runtime.InteropServices.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Runtime.InteropServices.RuntimeInformation.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Runtime.InteropServices.WindowsRuntime.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Runtime.Loader.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Runtime.Numerics.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Runtime.Serialization.Formatters.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Runtime.Serialization.Json.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Runtime.Serialization.Primitives.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Runtime.Serialization.Xml.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Security.AccessControl.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Security.Claims.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Security.Cryptography.Algorithms.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Security.Cryptography.Cng.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Security.Cryptography.Csp.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Security.Cryptography.DeriveBytes.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Security.Cryptography.Encoding.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Security.Cryptography.Encryption.Aes.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Security.Cryptography.Encryption.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Security.Cryptography.Encryption.ECDiffieHellman.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Security.Cryptography.Encryption.ECDsa.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Security.Cryptography.Hashing.Algorithms.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Security.Cryptography.Hashing.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Security.Cryptography.OpenSsl.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Security.Cryptography.Pkcs.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Security.Cryptography.Primitives.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Security.Cryptography.ProtectedData.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Security.Cryptography.RandomNumberGenerator.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Security.Cryptography.RSA.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Security.Cryptography.X509Certificates.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Security.Principal.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Security.Principal.Windows.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Security.SecureString.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.ServiceModel.Duplex.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.ServiceModel.Http.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.ServiceModel.NetTcp.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.ServiceModel.Primitives.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.ServiceModel.Security.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.ServiceProcess.ServiceController.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Text.Encoding.CodePages.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Text.Encoding.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Text.Encoding.Extensions.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Text.RegularExpressions.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Threading.AccessControl.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Threading.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Threading.Overlapped.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Threading.Tasks.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Threading.Tasks.Extensions.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Threading.Tasks.Parallel.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Threading.Thread.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Threading.ThreadPool.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Threading.Timer.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.ValueTuple.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Xml.ReaderWriter.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Xml.XDocument.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Xml.XmlDocument.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Xml.XmlSerializer.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Xml.XPath.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Xml.XPath.XDocument.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Xml.XPath.XmlDocument.dll /reference:/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/Facades/System.Xml.Xsl.Primitives.dll /debug+ /debug:portable /optimize- /out:obj/iPhone/Debug/DeedleBuildIssue.exe /target:exe /utf8output /langversion:default Main.cs AppDelegate.cs SceneDelegate.cs ViewController.cs ViewController.designer.cs FrameBuilder.cs \"obj/iPhone/Debug/Xamarin.iOS,Version=v1.0.AssemblyAttributes.cs\"\r\n    CompilerServer: server - server processed compilation - 38633558-2caa-4105-8327-a08a8b13f71e\r\nTarget _CopyFilesMarkedCopyLocal:\r\n    Touching \"/Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/DeedleBuildIssue.csproj.CopyComplete\".\r\nTarget CopyFilesToOutputDirectory:\r\n    Copying file from \"/Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/DeedleBuildIssue.exe\" to \"/Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/bin/iPhone/Debug/DeedleBuildIssue.exe\".\r\n    DeedleBuildIssue -\u003e /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/bin/iPhone/Debug/DeedleBuildIssue.exe\r\n    Copying file from \"/Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/DeedleBuildIssue.pdb\" to \"/Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/bin/iPhone/Debug/DeedleBuildIssue.pdb\".\r\nTarget _CopyResourcesToBundle:\r\n  Skipping target \"_CopyResourcesToBundle\" because all output files are up-to-date with respect to the input files.\r\nTarget _WriteAppManifest:\r\n  Skipping target \"_WriteAppManifest\" because all output files are up-to-date with respect to the input files.\r\nTarget _CompileToNative:\r\n    /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/bin/mtouch @/Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/response-file.rsp \r\n    Xamarin.iOS 15.10.0.5 (d17-2: 96b3edb6d) using framework: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.5.sdk\r\n    Cached assemblies reloaded.\r\n    Compilation failed with code 1, command:\r\n    /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.5.sdk -Qunused-arguments -miphoneos-version-min=15.4 -arch arm64 -c -o /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.o -x assembler -D DEBUG /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88899713,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88899751,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88899789,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88899827,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88899860,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88899898,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88899945,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88899984,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88900031,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88900070,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88900127,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88900174,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88900234,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88900282,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88900347,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88900397,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88900447,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88900504,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88900680,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88900829,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88900950,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88900972,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88900976,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88901052,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88901194,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88901216,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88901220,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88901293,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88901369,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88901501,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88901594,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88901687,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88901780,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88901872,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88901926,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88901999,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88902067,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88902089,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88902093,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88902176,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88902226,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88902391,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88902422,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88902439,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88902466,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88902537,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88902619,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88902707,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88902746,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88902894,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88903040,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88903057,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88903121,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88903186,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88903206,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88903221,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88903231,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88903261,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88903290,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88903334,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88903387,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88903419,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88903540,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88903562,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88903566,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88903645,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88903744,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88903820,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88903865,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88903898,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88903985,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88904131,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88904261,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88904278,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88904342,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88904420,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88904454,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88904491,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88904639,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88904666,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88904689,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88904704,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88904846,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88904891,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88904924,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88905002,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88905090,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88905121,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88905177,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88905227,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88905279,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88905337,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88905385,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88905457,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88905526,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88905530,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88905605,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88905628,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88905647,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88905676,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88905681,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88905686,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88905732,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88905762,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88905781,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88905792,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88905863,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88905867,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88905940,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88906012,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88906023,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88906034,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88906096,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88906100,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88906163,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88906352,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88906387,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88906391,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88906464,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88906486,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88906529,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88906557,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88906572,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88906622,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88906791,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88906809,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88906823,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88906827,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88906907,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88907053,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88907208,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88907243,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88907247,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88907319,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88907344,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88907364,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88907391,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88907396,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88907401,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88907411,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88907449,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88907478,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88907500,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88907527,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88907532,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88907537,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88907547,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88907587,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88907714,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88907734,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88907745,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88907816,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88907820,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88907896,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908023,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908043,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908054,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908125,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908129,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908161,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908202,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908228,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908235,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908240,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908245,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908257,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908269,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908274,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908279,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908289,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908323,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908401,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908421,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908425,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908476,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908515,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908546,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908555,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908560,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908565,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908575,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908609,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908640,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908660,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908749,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908753,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908817,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908909,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908924,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908945,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908957,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88908961,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88909036,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88909176,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88909198,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88909202,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88909235,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88909273,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88909300,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88909316,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88909323,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88909346,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88909380,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88909389,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88909416,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88909561,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88909583,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88909587,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88909672,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88909752,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88909832,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88909913,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88910038,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88910163,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88910288,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88910413,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88910538,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88910663,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88910788,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88910913,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88911038,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88911163,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88911288,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88911413,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88911538,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88911663,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88911788,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88911913,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88912038,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88912164,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88912296,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88912428,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88912560,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88912692,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88912824,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88912956,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88913088,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88913223,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88913564,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88913905,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88914246,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88914587,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88914928,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88915269,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88915610,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88915951,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88916292,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88916633,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88916974,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88917315,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88917656,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88917993,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88918118,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88918242,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88918322,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88918402,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88918482,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88918562,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88918642,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88918722,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88918802,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88918882,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88918962,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88919042,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88919122,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88919202,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88919282,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88919362,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88919442,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88919522,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88919602,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88919682,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88919762,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88919846,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88919869,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88919950,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88920023,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88920082,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88920098,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88920114,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88920191,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88920243,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88920310,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88920652,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88920671,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88920685,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88920736,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88920757,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88920772,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88920783,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88920798,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88920841,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88920959,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88920963,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88921013,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88921107,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88921111,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88921159,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88921214,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88921301,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88921339,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88921377,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88921415,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88921469,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88921613,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88921708,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88921965,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88921980,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88922024,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88922051,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88922068,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88922072,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88922135,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88922173,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88922226,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88922300,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88922339,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88922387,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88922527,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88922556,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88922891,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88922921,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88922938,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88923061,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88923079,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88923111,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88923154,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88923232,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88923367,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88923442,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88923483,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88923588,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88923680,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_DeedleBuildIssue_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s(88923740,1): error GC0FE68B0: addend too big for relocation\r\n    MTOUCH : warning MT5108: The compiler output is too long, it\u0027s been limited to 1000 lines.\r\n    \t\t\r\n    Compilation failed with code 1, command:\r\n    /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.5.sdk -Qunused-arguments -miphoneos-version-min=15.4 -arch arm64 -c -o /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.o -x assembler -D DEBUG /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89002215,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89002295,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89002375,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89002455,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89002535,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89002615,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89002695,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89002775,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89002855,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89002935,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89003015,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89003095,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89003175,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89003255,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89003335,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89003415,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89003495,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89003575,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89003655,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89003739,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89003762,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89003843,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89003916,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89003975,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89003991,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89004007,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89004084,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89004136,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89004203,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89004536,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89004555,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89004569,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89004620,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89004641,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89004656,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89004667,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89004682,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89004725,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89004831,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89004897,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89005042,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89005181,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89005219,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89005257,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89005295,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89005349,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89005431,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89005556,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89005604,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89005650,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89005691,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89005772,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89005847,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89005889,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89006018,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89006094,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89006137,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89006328,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89006397,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89006498,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89006554,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89006647,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89006772,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89006814,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89006961,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89007094,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89007125,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89007414,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89007453,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89007508,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89007622,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89007648,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89007665,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89007766,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89007784,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89007816,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89007846,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89007913,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89007961,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89007984,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89007988,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89008039,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89008081,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89008245,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89008438,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89008673,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89008786,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89008824,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89008862,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89008900,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89008938,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89008967,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89009004,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89009051,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89009090,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89009137,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89009176,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89009230,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89009271,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89009328,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89009374,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89009439,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89009489,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89009539,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89009596,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89009772,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89009921,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89010042,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89010064,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89010068,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89010144,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89010286,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89010308,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89010312,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89010385,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89010459,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89010584,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89010673,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89010762,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89010851,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89010940,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89010994,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89011067,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89011135,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89011157,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89011161,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89011239,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89011284,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89011445,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89011474,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89011490,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89011513,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89011570,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89011637,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89011712,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89011749,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89011893,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89012031,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89012047,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89012092,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89012150,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89012171,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89012185,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89012195,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89012224,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89012253,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89012296,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89012346,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89012378,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89012499,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89012521,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89012525,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89012599,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89012691,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89012760,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89012802,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89012831,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89012905,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89013045,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89013166,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89013182,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89013227,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89013302,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89013336,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89013372,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89013514,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89013541,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89013564,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89013579,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89013714,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89013759,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89013792,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89013869,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89013957,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89013987,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89014040,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89014090,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89014142,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89014200,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89014245,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89014311,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89014380,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89014384,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89014459,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89014482,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89014501,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89014530,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89014535,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89014540,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89014586,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89014616,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89014635,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89014646,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89014717,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89014721,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89014794,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89014866,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89014877,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89014888,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89014950,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89014954,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89015017,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89015206,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89015241,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89015245,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89015318,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89015340,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89015383,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89015411,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89015426,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89015476,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89015645,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89015663,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89015677,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89015681,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89015761,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89015907,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016062,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016097,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016101,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016173,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016198,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016218,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016245,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016250,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016255,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016265,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016302,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016329,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016350,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016377,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016382,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016387,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016397,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016437,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016564,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016584,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016595,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016666,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016670,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016746,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016873,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016893,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016904,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016975,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89016979,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017011,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017052,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017078,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017085,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017090,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017095,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017107,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017119,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017124,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017129,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017139,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017173,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017251,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017271,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017275,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017326,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017365,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017396,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017405,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017410,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017415,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017425,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017459,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017490,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017510,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017599,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017603,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017667,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017759,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017774,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017795,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017807,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017811,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89017886,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89018026,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89018048,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89018052,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89018085,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89018123,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89018150,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89018166,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89018173,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89018196,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89018230,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89018239,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89018266,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89018411,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89018433,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89018437,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89018522,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89018602,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89018682,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89018763,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89018888,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89019013,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89019138,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89019263,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89019388,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89019513,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89019638,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89019763,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89019888,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89020013,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89020138,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89020263,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89020388,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89020513,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89020638,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89020763,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89020888,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89021014,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89021146,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89021278,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89021410,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89021542,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89021674,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89021806,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89021938,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89022073,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89022414,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89022755,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89023096,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89023437,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89023778,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89024119,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89024460,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89024801,1): error GC0FE68B0: addend too big for relocation\r\n    adrp x16, mono_aot_Deedle_got@PAGE+8388608\r\n    ^\r\n    /Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/Deedle.dll.s(89025142,1): error GC0FE68B0: addend too big for relocation\r\n    MTOUCH : warning MT5108: The compiler output is too long, it\u0027s been limited to 1000 lines.\r\n    \t\t\r\n    MTOUCH : error MT5106: Could not compile the file(s) \u0027/Users/follesoe/source/DeedleBuildIssue/DeedleBuildIssue/obj/iPhone/Debug/device-builds/iphone14.2-15.4.1/mtouch-cache/arm64/DeedleBuildIssue.exe.s\u0027. Please file a bug report at https://github.com/xamarin/xamarin-macios/issues/new\r\n    \t\t\r\nDone building target \"_CompileToNative\" in project \"DeedleBuildIssue.csproj\" -- FAILED.\r\n\r\nDone building project \"DeedleBuildIssue.csproj\" -- FAILED.\r\n\r\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\r\n\r\nBuild: 669 errors, 3 warnings\r\n```",
                                           "updatedAt":  "2022-06-27T13:47:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FlL9H",
                                           "createdAt":  "2022-06-27T13:48:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-meta\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nFrom xamarin-macios created by [vsfeedback](https://github.com/vsfeedback): xamarin/xamarin-macios#15286  \n\n_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/XamariniOS-device-builds-freeze-after-X/10070412)._\n\n---\nAfter updating to Xcode 13.4.1 Xamarin.iOS device builds fails on both my macs (running the same version of Xcode, Visual Studio for Mac, and Xamarin.iOS). One of the machines is an Intel mac, while the other is an M1, so same behaviour on both architectures.\n\nAfter force quiting Visual Studio, I still have one or more orphan arm64-darwin-mono-sgen processes lingering, causing high CPU load.\n\nThe problem happens consistently. I can build for Simulator and other project types (such as .NET 6 Unit Test projects) just fine.\n\n---\n### Original Comments\n\n#### Feedback Bot on 6/14/2022, 08:09 PM: \n\n(private comment, text removed)\n#### Jonas Follesø on 6/15/2022, 00:44 AM: \n\n(private comment, text removed)\n#### Jonas Follesø on 6/15/2022, 04:29 AM: \n\n(private comment, text removed)\n\n---\n### Original Solutions\n(no solutions)\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003edalexsoto\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`bug`, `area-Meta`, `iOS`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-06-27T13:48:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FlNEt",
                                           "createdAt":  "2022-06-27T13:52:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dalexsoto",
                                           "body":  "Adding repro project:\r\n\r\n[DeedleNet6.zip](https://github.com/dotnet/runtime/files/8992572/DeedleNet6.zip)\r\n",
                                           "updatedAt":  "2022-06-27T13:52:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Fsi1h",
                                           "createdAt":  "2022-06-28T21:44:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027os-ios\u0027: @steveisok, @akoeplinger\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nFrom xamarin-macios created by [vsfeedback](https://github.com/vsfeedback): xamarin/xamarin-macios#15286  \n\n_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/XamariniOS-device-builds-freeze-after-X/10070412)._\n\n---\nAfter updating to Xcode 13.4.1 Xamarin.iOS device builds fails on both my macs (running the same version of Xcode, Visual Studio for Mac, and Xamarin.iOS). One of the machines is an Intel mac, while the other is an M1, so same behaviour on both architectures.\n\nAfter force quiting Visual Studio, I still have one or more orphan arm64-darwin-mono-sgen processes lingering, causing high CPU load.\n\nThe problem happens consistently. I can build for Simulator and other project types (such as .NET 6 Unit Test projects) just fine.\n\n---\n### Original Comments\n\n#### Feedback Bot on 6/14/2022, 08:09 PM: \n\n(private comment, text removed)\n#### Jonas Follesø on 6/15/2022, 00:44 AM: \n\n(private comment, text removed)\n#### Jonas Follesø on 6/15/2022, 04:29 AM: \n\n(private comment, text removed)\n\n---\n### Original Solutions\n(no solutions)\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003edalexsoto\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`bug`, `untriaged`, `area-Codegen-AOT-mono`, `os-ios`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-06-28T21:44:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FskbG",
                                           "createdAt":  "2022-06-28T21:46:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "/cc @vargaz ",
                                           "updatedAt":  "2022-06-28T21:46:46Z"
                                       }
                                   ],
                         "totalCount":  11
                     },
        "title":  "[iOS] Deedle nuget package causes aot compiler to hang",
        "labels":  [
                       "bug",
                       "area-Codegen-AOT-mono",
                       "os-ios"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/72016",
        "createdAt":  "2022-07-12T13:04:30Z",
        "number":  72016,
        "author":  "ivanpovazan",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-05-21T16:25:40Z",
        "body":  "### Summary\r\n\r\nNoticed when investigating failures of the `UnmanagedCallersOnlyTest` tests when running in full AOT mode: https://github.com/dotnet/runtime/blob/cf2187b0463df38c12ea5b4bcc22c18b4ccc50a0/src/tests/Interop/UnmanagedCallersOnly/UnmanagedCallersOnlyTest.cs#L258 \r\n\r\nExtracting the code of the test in question into a `HelloWorld` app:\r\n``` csharp\r\n// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nusing System;\r\nusing System.IO;\r\nusing System.Runtime.InteropServices;\r\nusing System.Runtime.CompilerServices;\r\n\r\nnamespace HelloWorld\r\n{\r\n    unsafe internal class Program\r\n    {\r\n        private static int DoubleImpl(int n) =\u003e 2 * n;\r\n\r\n        [UnmanagedCallersOnly]\r\n        public static int CallbackViaUnmanagedCalli(int val) =\u003e DoubleImpl(val);\r\n\r\n        private static void Main(string[] args)\r\n        {\r\n            int n = 12345;\r\n            delegate* unmanaged\u003cint, int\u003e nativeMethod = \u0026CallbackViaUnmanagedCalli;\r\n            int result = nativeMethod(n);\r\n            Console.WriteLine(\"Result: \" + result);\r\n        }\r\n    }\r\n}\r\n```\r\nBuilding and running this example in `FullAot` mode with Mono gives the following error:\r\n\r\n```\r\nUnhandled Exception:\r\nSystem.ExecutionEngineException: Attempting to JIT compile method \u0027(wrapper managed-to-native) int HelloWorld.Program:wrapper_native_indirect_0x600003b7d3a0 (intptr\u0026,int)\u0027 while running in aot-only mode. See https://docs.microsoft.com/xamarin/ios/internals/limitations for more information.\r\n\r\n   at HelloWorld.Program.Main(String[] args) in /Users/ivan/repos/runtime-mono-AOT/src/mono/sample/HelloWorld/Program.cs:line 22\r\n[ERROR] FATAL UNHANDLED EXCEPTION: System.ExecutionEngineException: Attempting to JIT compile method \u0027(wrapper managed-to-native) int HelloWorld.Program:wrapper_native_indirect_0x600003b7d3a0 (intptr\u0026,int)\u0027 while running in aot-only mode. See https://docs.microsoft.com/xamarin/ios/internals/limitations for more information.\r\n\r\n   at HelloWorld.Program.Main(String[] args) in /Users/ivan/repos/runtime-mono-AOT/src/mono/sample/HelloWorld/Program.cs:line 22\r\n```\r\n\r\n### Repro\r\n1) Build Mono\r\n``` bash\r\n./build.sh mono+libs+clr.hosts -c debug /p:MonoEnableLlvm=true /p:MonoLLVMUseCxx11Abi=true\r\n```\r\n2) Replace [HelloWorld](https://github.com/dotnet/runtime/blob/main/src/mono/sample/HelloWorld/Program.cs) code with the above\r\n3) Build `HelloWorld` in `FullAot` mode with the following configuration on `arm64`\r\n`MONO_ENV_OPTIONS=\"--aot=full,llvm,llvm-path=$LLVM_PATH,mattr=crc,mattr=crypto\"`\r\n4) Run `HelloWorld` in `FullAot` mode with:\r\n`MONO_ENV_OPTIONS=--full-aot`\r\n\r\nPossible related to https://github.com/dotnet/runtime/issues/70490\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOYTZfGQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5Gb-C5",
                                           "createdAt":  "2022-07-12T13:05:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivanpovazan",
                                           "body":  "cc @vargaz ",
                                           "updatedAt":  "2022-07-12T13:05:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GiDde",
                                           "createdAt":  "2022-07-13T14:57:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "naricc",
                                           "body":  "This test is failing the monollvmaot  lane, right? Can we disable the test for now?",
                                           "updatedAt":  "2022-07-13T14:57:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GlzI6",
                                           "createdAt":  "2022-07-14T11:09:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivanpovazan",
                                           "body":  "@naricc, just to add my comments here as well. \r\n`UnmanagedCallersOnlyTest` is different from `UnmanagedCallersOnly_MonoAotTest`.\r\n\r\n- `UnmanagedCallersOnlyTest` is **disabled** on monollvmaot lane\r\n- `UnmanagedCallersOnly_MonoAotTest` is **enabled** on monollvmaot lane and should **pass**\r\n\r\nI admit the namings are confusing, there is https://github.com/dotnet/runtime/pull/71535 which will resolve the confusion.",
                                           "updatedAt":  "2022-07-14T11:09:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HB8KX",
                                           "createdAt":  "2022-07-21T16:20:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "I don\u0027t understand why this test is legal @AaronRobinsonMSFT.  The method plainly says \"unmanaged callers only\" but it is being called from managed. It seems like an accident of CoreCLR\u0027s implementation that this works.  Roslyn should issue an error, IMO.",
                                           "updatedAt":  "2022-07-21T16:20:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HB9hM",
                                           "createdAt":  "2022-07-21T16:26:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCn5hoA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "lambdageek",
                                                                               "createdAt":  "2022-07-21T16:32:37Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ivanpovazan",
                                                                               "createdAt":  "2022-07-21T16:39:07Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "AaronRobinsonMSFT",
                                           "body":  "\u003e I don\u0027t understand why this test is legal @AaronRobinsonMSFT. The method plainly says \"unmanaged callers only\" but it is being called from managed. It seems like an accident of CoreCLR\u0027s implementation that this works. Roslyn should issue an error, IMO.\r\n\r\nThis is entirely legal, but subtle. Notice the function is being executed through a C# function pointer. That function pointer is marked with the `unmanaged` keyword so should be treated exactly as if the function were an actual native function.\r\n",
                                           "updatedAt":  "2022-07-21T16:26:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HB_X4",
                                           "createdAt":  "2022-07-21T16:34:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCn5hjg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "AaronRobinsonMSFT",
                                                                               "createdAt":  "2022-07-21T16:37:23Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ivanpovazan",
                                                                               "createdAt":  "2022-07-21T16:39:00Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "\u003e \u003e I don\u0027t understand why this test is legal @AaronRobinsonMSFT. The method plainly says \"unmanaged callers only\" but it is being called from managed. It seems like an accident of CoreCLR\u0027s implementation that this works. Roslyn should issue an error, IMO.\r\n\u003e \r\n\u003e This is entirely legal, but subtle. Notice the function is being executed through a C# function pointer. That function pointer is marked with the `unmanaged` keyword so should be treated exactly as if the function were an actual native function.\r\n\r\nAh makes sense. Thanks!\r\n\r\nso for mono here we would expect a callstack kind of like this:\r\n```\r\nDoubleImpl\r\nCallbackViaUnmanagedCalli\r\n(native-to-managed wrapper CallbackViaUnmanagedCalli)\r\n(managed-to-native wrapper delegate* unmanaged\u003cint, int\u003e)\r\nMain\r\n```\r\n",
                                           "updatedAt":  "2022-07-21T16:34:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hNl8Z",
                                           "createdAt":  "2023-07-11T14:37:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivanpovazan",
                                           "body":  "Moving to 9.0.0",
                                           "updatedAt":  "2023-07-11T14:37:39Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "[mono] Invoking function pointers with unmanaged calling convention fails in the full AOT mode",
        "labels":  [
                       "area-Codegen-AOT-mono",
                       "runtime-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/73041",
        "createdAt":  "2022-07-29T03:42:36Z",
        "number":  73041,
        "author":  "runfoapp",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-08-31T15:02:21Z",
        "body":  "These \"Attempting to JIT compile\" errors are showing up in 100s of different tests. See the failures in https://runfo.azurewebsites.net/view/build/?number=1910126. These errors are so numerous that it overwhelms UI pages designed to show error lists and will likely interfere with detecting any other CI problems while this remains active.\r\n\r\nhttps://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-heads-main-3cff2cfeb42c4b83ac/Microsoft.CSharp.Tests/1/testResults.xml?%3Fhelixlogtype%3Dresult\r\n\r\n```\r\n\u003cassembly name=\"Microsoft.CSharp.Tests.dll\" environment=\"64-bit .NET .NET 7.0 [collection-per-class, non-parallel]\" test-framework=\"xUnit.net 2.4.2.0\" run-date=\"2022-07-28\" run-time=\"15:32:51\" total=\"4802\" passed=\"336\" failed=\"4466\" skipped=\"0\" time=\"77.427\" errors=\"0\"\u003e\r\n    \u003cerrors /\u003e\r\n    \u003ccollection total=\"6\" passed=\"0\" failed=\"6\" skipped=\"0\" name=\"Test collection for Microsoft.CSharp.RuntimeBinder.Tests.DelegateInDynamicTests\" time=\"0.094\"\u003e\r\n      \u003ctest name=\"Microsoft.CSharp.RuntimeBinder.Tests.DelegateInDynamicTests.DelegateInDynamicImplicitInvokeWithBadArgument\" type=\"Microsoft.CSharp.RuntimeBinder.Tests.DelegateInDynamicTests\" method=\"DelegateInDynamicImplicitInvokeWithBadArgument\" time=\"0.0561464\" result=\"Fail\"\u003e\r\n        \u003cfailure exception-type=\"Xunit.Sdk.ThrowsException\"\u003e\r\n          \u003cmessage\u003e\u003c![CDATA[Assert.Throws() Failure\\nExpected: typeof(Microsoft.CSharp.RuntimeBinder.RuntimeBinderException)\\nActual:   typeof(System.ExecutionEngineException): Attempting to JIT compile method \u0027(wrapper dynamic-method) object object:Thunk1ret_Object_CallSite_Object_String (System.Func`2\u003cobject[], object\u003e,System.Runtime.CompilerServices.CallSite,object,string)\u0027 while running in aot-only mode. See https://docs.microsoft.com/xamarin/ios/internals/limitations for more information.\\n          \\n---- System.ExecutionEngineException : Attempting to JIT compile method \u0027(wrapper dynamic-method) object object:Thunk1ret_Object_CallSite_Object_String (System.Func`2\u003cobject[], object\u003e,System.Runtime.CompilerServices.CallSite,object,string)\u0027 while running in aot-only mode. See https://docs.microsoft.com/xamarin/ios/internals/limitations for more information.\\n]]\u003e\u003c/message\u003e\r\n          \u003cstack-trace\u003e\u003c![CDATA[   at System.Delegate.CreateDelegate(Type type, Object firstArgument, MethodInfo method, Boolean throwOnBindFailure, Boolean allowClosed)\r\n   at System.Reflection.Emit.DynamicMethod.CreateDelegate(Type delegateType, Object target)\r\n   at System.Dynamic.Utils.DelegateHelpers.CreateObjectArrayDelegateRefEmit(Type delegateType, Func`2 handler)\r\n   at System.Dynamic.Utils.DelegateHelpers.CreateObjectArrayDelegate(Type delegateType, Func`2 handler)\r\n   at System.Linq.Expressions.Interpreter.LightLambda.MakeDelegate(Type delegateType)\r\n   at System.Linq.Expressions.Interpreter.LightDelegateCreator.CreateDelegate(IStrongBox[] closure)\r\n   at System.Linq.Expressions.Expression`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Compile()\r\n   at System.Runtime.CompilerServices.CallSite`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].CreateCustomNoMatchDelegate(MethodInfo invoke)\r\n   at System.Runtime.CompilerServices.CallSite`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MakeUpdateDelegate()\r\n   at System.Runtime.CompilerServices.CallSite`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].GetUpdateDelegate(Func`4\u0026 addr)\r\n   at System.Runtime.CompilerServices.CallSite`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].GetUpdateDelegate()\r\n   at System.Runtime.CompilerServices.CallSite`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]..ctor(CallSiteBinder binder)\r\n   at System.Runtime.CompilerServices.CallSite`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Create(CallSiteBinder binder)\r\n   at Microsoft.CSharp.RuntimeBinder.Tests.DelegateInDynamicTests.\u003c\u003ec__DisplayClass3_0.\u003cDelegateInDynamicImplicitInvokeWithBadArgument\u003eb__1()\r\n----- Inner Stack Trace -----\r\n   at System.Delegate.CreateDelegate(Type type, Object firstArgument, MethodInfo method, Boolean throwOnBindFailure, Boolean allowClosed)\r\n   at System.Reflection.Emit.DynamicMethod.CreateDelegate(Type delegateType, Object target)\r\n   at System.Dynamic.Utils.DelegateHelpers.CreateObjectArrayDelegateRefEmit(Type delegateType, Func`2 handler)\r\n   at System.Dynamic.Utils.DelegateHelpers.CreateObjectArrayDelegate(Type delegateType, Func`2 handler)\r\n   at System.Linq.Expressions.Interpreter.LightLambda.MakeDelegate(Type delegateType)\r\n   at System.Linq.Expressions.Interpreter.LightDelegateCreator.CreateDelegate(IStrongBox[] closure)\r\n   at System.Linq.Expressions.Expression`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Compile()\r\n   at System.Runtime.CompilerServices.CallSite`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].CreateCustomNoMatchDelegate(MethodInfo invoke)\r\n   at System.Runtime.CompilerServices.CallSite`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MakeUpdateDelegate()\r\n   at System.Runtime.CompilerServices.CallSite`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].GetUpdateDelegate(Func`4\u0026 addr)\r\n   at System.Runtime.CompilerServices.CallSite`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].GetUpdateDelegate()\r\n   at System.Runtime.CompilerServices.CallSite`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]..ctor(CallSiteBinder binder)\r\n   at System.Runtime.CompilerServices.CallSite`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Create(CallSiteBinder binder)\r\n   at Microsoft.CSharp.RuntimeBinder.Tests.DelegateInDynamicTests.\u003c\u003ec__DisplayClass3_0.\u003cDelegateInDynamicImplicitInvokeWithBadArgument\u003eb__1()]]\u003e\u003c/stack-trace\u003e\r\n        \u003c/failure\u003e\r\n      \u003c/test\u003e\r\n```\r\n\r\n\r\n\u003c!-- runfo report start --\u003e\r\nRunfo Tracking Issue: [Attempting to JIT compile in AOT only mode](https://runfo.azurewebsites.net/tracking/issue/409)\r\n|Build|Definition|Kind|Run Name|\r\n|---|---|---|---|\r\n\r\n\r\n\r\nBuild Result Summary\r\n|Day Hit Count|Week Hit Count|Month Hit Count|\r\n|---|---|---|\r\n|0|0|0|\r\n\r\n\u003c!-- runfo report end --\u003e\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOR5_mUQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5HdPi-",
                                           "createdAt":  "2022-07-29T03:42:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @cston\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n\u003c!-- runfo report start --\u003e\r\nRunfo Creating Tracking Issue (data being generated)\r\n\u003c!-- runfo report end --\u003e\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003erunfoapp[bot]\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Microsoft.CSharp`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-07-29T03:42:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HdQMT",
                                           "createdAt":  "2022-07-29T03:49:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027os-tvos\u0027: @steveisok, @akoeplinger\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThese \"Attempting to JIT compile\" errors are showing up in 100s of different tests. See the failures in https://runfo.azurewebsites.net/view/build/?number=1910126\r\n\r\nhttps://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-heads-main-3cff2cfeb42c4b83ac/Microsoft.CSharp.Tests/1/testResults.xml?%3Fhelixlogtype%3Dresult\r\n\r\n```\r\n\u003cassembly name=\"Microsoft.CSharp.Tests.dll\" environment=\"64-bit .NET .NET 7.0 [collection-per-class, non-parallel]\" test-framework=\"xUnit.net 2.4.2.0\" run-date=\"2022-07-28\" run-time=\"15:32:51\" total=\"4802\" passed=\"336\" failed=\"4466\" skipped=\"0\" time=\"77.427\" errors=\"0\"\u003e\r\n    \u003cerrors /\u003e\r\n    \u003ccollection total=\"6\" passed=\"0\" failed=\"6\" skipped=\"0\" name=\"Test collection for Microsoft.CSharp.RuntimeBinder.Tests.DelegateInDynamicTests\" time=\"0.094\"\u003e\r\n      \u003ctest name=\"Microsoft.CSharp.RuntimeBinder.Tests.DelegateInDynamicTests.DelegateInDynamicImplicitInvokeWithBadArgument\" type=\"Microsoft.CSharp.RuntimeBinder.Tests.DelegateInDynamicTests\" method=\"DelegateInDynamicImplicitInvokeWithBadArgument\" time=\"0.0561464\" result=\"Fail\"\u003e\r\n        \u003cfailure exception-type=\"Xunit.Sdk.ThrowsException\"\u003e\r\n          \u003cmessage\u003e\u003c![CDATA[Assert.Throws() Failure\\nExpected: typeof(Microsoft.CSharp.RuntimeBinder.RuntimeBinderException)\\nActual:   typeof(System.ExecutionEngineException): Attempting to JIT compile method \u0027(wrapper dynamic-method) object object:Thunk1ret_Object_CallSite_Object_String (System.Func`2\u003cobject[], object\u003e,System.Runtime.CompilerServices.CallSite,object,string)\u0027 while running in aot-only mode. See https://docs.microsoft.com/xamarin/ios/internals/limitations for more information.\\n          \\n---- System.ExecutionEngineException : Attempting to JIT compile method \u0027(wrapper dynamic-method) object object:Thunk1ret_Object_CallSite_Object_String (System.Func`2\u003cobject[], object\u003e,System.Runtime.CompilerServices.CallSite,object,string)\u0027 while running in aot-only mode. See https://docs.microsoft.com/xamarin/ios/internals/limitations for more information.\\n]]\u003e\u003c/message\u003e\r\n          \u003cstack-trace\u003e\u003c![CDATA[   at System.Delegate.CreateDelegate(Type type, Object firstArgument, MethodInfo method, Boolean throwOnBindFailure, Boolean allowClosed)\r\n   at System.Reflection.Emit.DynamicMethod.CreateDelegate(Type delegateType, Object target)\r\n   at System.Dynamic.Utils.DelegateHelpers.CreateObjectArrayDelegateRefEmit(Type delegateType, Func`2 handler)\r\n   at System.Dynamic.Utils.DelegateHelpers.CreateObjectArrayDelegate(Type delegateType, Func`2 handler)\r\n   at System.Linq.Expressions.Interpreter.LightLambda.MakeDelegate(Type delegateType)\r\n   at System.Linq.Expressions.Interpreter.LightDelegateCreator.CreateDelegate(IStrongBox[] closure)\r\n   at System.Linq.Expressions.Expression`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Compile()\r\n   at System.Runtime.CompilerServices.CallSite`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].CreateCustomNoMatchDelegate(MethodInfo invoke)\r\n   at System.Runtime.CompilerServices.CallSite`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MakeUpdateDelegate()\r\n   at System.Runtime.CompilerServices.CallSite`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].GetUpdateDelegate(Func`4\u0026 addr)\r\n   at System.Runtime.CompilerServices.CallSite`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].GetUpdateDelegate()\r\n   at System.Runtime.CompilerServices.CallSite`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]..ctor(CallSiteBinder binder)\r\n   at System.Runtime.CompilerServices.CallSite`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Create(CallSiteBinder binder)\r\n   at Microsoft.CSharp.RuntimeBinder.Tests.DelegateInDynamicTests.\u003c\u003ec__DisplayClass3_0.\u003cDelegateInDynamicImplicitInvokeWithBadArgument\u003eb__1()\r\n----- Inner Stack Trace -----\r\n   at System.Delegate.CreateDelegate(Type type, Object firstArgument, MethodInfo method, Boolean throwOnBindFailure, Boolean allowClosed)\r\n   at System.Reflection.Emit.DynamicMethod.CreateDelegate(Type delegateType, Object target)\r\n   at System.Dynamic.Utils.DelegateHelpers.CreateObjectArrayDelegateRefEmit(Type delegateType, Func`2 handler)\r\n   at System.Dynamic.Utils.DelegateHelpers.CreateObjectArrayDelegate(Type delegateType, Func`2 handler)\r\n   at System.Linq.Expressions.Interpreter.LightLambda.MakeDelegate(Type delegateType)\r\n   at System.Linq.Expressions.Interpreter.LightDelegateCreator.CreateDelegate(IStrongBox[] closure)\r\n   at System.Linq.Expressions.Expression`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Compile()\r\n   at System.Runtime.CompilerServices.CallSite`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].CreateCustomNoMatchDelegate(MethodInfo invoke)\r\n   at System.Runtime.CompilerServices.CallSite`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MakeUpdateDelegate()\r\n   at System.Runtime.CompilerServices.CallSite`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].GetUpdateDelegate(Func`4\u0026 addr)\r\n   at System.Runtime.CompilerServices.CallSite`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].GetUpdateDelegate()\r\n   at System.Runtime.CompilerServices.CallSite`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]..ctor(CallSiteBinder binder)\r\n   at System.Runtime.CompilerServices.CallSite`1[[System.Func`4[[System.Runtime.CompilerServices.CallSite, System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Create(CallSiteBinder binder)\r\n   at Microsoft.CSharp.RuntimeBinder.Tests.DelegateInDynamicTests.\u003c\u003ec__DisplayClass3_0.\u003cDelegateInDynamicImplicitInvokeWithBadArgument\u003eb__1()]]\u003e\u003c/stack-trace\u003e\r\n        \u003c/failure\u003e\r\n      \u003c/test\u003e\r\n```\r\n\r\n\r\n\u003c!-- runfo report start --\u003e\r\nRunfo Tracking Issue: [Attempting to JIT compile in AOT only mode](https://runfo.azurewebsites.net/tracking/issue/409)\r\n|Build|Definition|Kind|Run Name|Console|Core Dump|Test Results|Run Client|\r\n|---|---|---|---|---|---|---|---|\r\n|[1910126](https://dev.azure.com/dnceng/public/_build/results?buildId=1910126)|[runtime-extra-platforms](https://dnceng.visualstudio.com/public/_build?definitionId=1080)|Rolling|net7.0-tvOS-Release-arm64-Mono_Release-OSX.1100.Amd64.AppleTV.Open|[console.log](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-heads-main-3cff2cfeb42c4b83ac/Microsoft.CSharp.Tests/1/console.53cc5991.log?%3F%253Fhelixlogtype%253Dresult)||[test results](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-heads-main-3cff2cfeb42c4b83ac/Microsoft.CSharp.Tests/1/testResults.xml?%3F%253Fhelixlogtype%253Dresult)|[runclient.py](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-heads-main-3cff2cfeb42c4b83ac/Microsoft.CSharp.Tests/78745919-a114-4de8-a7b3-0ce88a5c503e.log?%3F%253Fhelixlogtype%253Dresult)|\r\n|[1909874](https://dev.azure.com/dnceng/public/_build/results?buildId=1909874)|[runtime-extra-platforms](https://dnceng.visualstudio.com/public/_build?definitionId=1080)|[PR 67861](https://github.com/dotnet/runtime/pull/67861)|net7.0-tvOS-Release-arm64-Mono_Release-OSX.1100.Amd64.AppleTV.Open|[console.log](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-67861-merge-32f05ba44d0c43949e/Microsoft.CSharp.Tests/1/console.41136ea9.log?%3F%253Fhelixlogtype%253Dresult)||[test results](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-67861-merge-32f05ba44d0c43949e/Microsoft.CSharp.Tests/1/testResults.xml?%3F%253Fhelixlogtype%253Dresult)|[runclient.py](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-67861-merge-32f05ba44d0c43949e/Microsoft.CSharp.Tests/82e30870-e3bb-4125-ba8f-db69aa574f62.log?%3F%253Fhelixlogtype%253Dresult)|\r\n|[1909866](https://dev.azure.com/dnceng/public/_build/results?buildId=1909866)|[runtime-extra-platforms](https://dnceng.visualstudio.com/public/_build?definitionId=1080)|[PR 72394](https://github.com/dotnet/runtime/pull/72394)|net7.0-tvOS-Release-arm64-Mono_Release-OSX.1100.Amd64.AppleTV.Open|[console.log](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-72394-merge-b0de6789261e47848c/Microsoft.CSharp.Tests/1/console.2d0e2a27.log?%3F%253Fhelixlogtype%253Dresult)||[test results](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-72394-merge-b0de6789261e47848c/Microsoft.CSharp.Tests/1/testResults.xml?%3F%253Fhelixlogtype%253Dresult)|[runclient.py](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-72394-merge-b0de6789261e47848c/Microsoft.CSharp.Tests/1e6ee95b-66bb-479c-bbd9-bf159facffae.log?%3F%253Fhelixlogtype%253Dresult)|\r\n\r\n\r\n\r\nBuild Result Summary\r\n|Day Hit Count|Week Hit Count|Month Hit Count|\r\n|---|---|---|\r\n|3|3|3|\r\n\r\n\u003c!-- runfo report end --\u003e\r\n\r\n\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003erunfoapp[bot]\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Microsoft.CSharp`, `blocking-clean-ci`, `untriaged`, `os-tvos`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-07-29T03:49:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Hn-ZR",
                                           "createdAt":  "2022-08-01T20:10:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "https://github.com/dotnet/runtime/pull/73061 was merged, which skips the tests on tvOS.  Blocking-clean-ci is no longer needed.",
                                           "updatedAt":  "2022-08-01T20:10:10Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Attempting to JIT compile in Full AOT mode ExecutionEngineException failing tests in CI",
        "labels":  [
                       "area-Codegen-AOT-mono",
                       "os-tvos"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/73159",
        "createdAt":  "2022-08-01T16:19:30Z",
        "number":  73159,
        "author":  "ivanpovazan",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC_XulA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "snakefoot",
                                            "createdAt":  "2025-02-23T08:55:12Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-05-21T16:26:13Z",
        "body":  "### Motivation\r\nQuite often it is required to understand why a method has been AOTed, which function, type or instantiation caused the compilation of the method and what are its dependencies.\r\n\r\nThis information is needed when we are trying to answer some of the following questions:\r\n\r\n- Why a certain instantiation of a method has been generated?\r\n- Why a certain optimisation has not been performed?\r\n- What are all the wrapper (extra) methods generated by mono for a with a particular method?\r\n- Why is the generated binary so large?\r\n- How much a newly added type impacts the size of the generated binary?\r\n- etc ...\r\n\r\nBy just disassembling the binary and examining generated symbols, it is quite hard, and sometimes impossible, to answer these kind of questions.\r\n\r\n### Idea\r\n\r\n- Introduce a new feature to the AOT compiler to build a type/call dependency graph by recording when for example:\r\n\r\n    - a method calls another method\r\n    - a method instantiates a type \r\n    - a method requires a runtime wrapper(s) - with a reason (eg: interpreter requires gsharedvt_out wrappers in order to call AOTed code) \r\n    - ...\r\n\r\n- The dependency information should be logged into a file in a well-known graph description language for example:\r\n     -  [DOT-graphviz](https://graphviz.org/doc/info/lang.html)\r\n     - [DGML-MS](https://docs.microsoft.com/en-us/visualstudio/modeling/directed-graph-markup-language-dgml-reference?view=vs-2022) \r\n- The feature should be controlled by a command-line switch.\r\n\r\n### Benefits\r\nThe generated dependency graphs would:\r\n- Help us understand and visualize why a specific type or a method has been generated\r\n- Reduce the time that takes to discover the cause of an issue (improve debugging)\r\n- Enable further analysis for potential improvements of the generated code (code size reduction)\r\n- Help us discover problems with the AOTed code.\r\n\r\n---\r\n\r\nThis is merely an idea for the improvement, not an official proposal, making this issue open for discussions and ideas.\r\n\r\nCC: @lambdageek @vargaz ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOYjeXkg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5QRpXP",
                                           "createdAt":  "2022-12-12T16:09:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "It would be nice to have a simpler version of this feature, which prints out a list of AOT compiled methods for il strip tool to consume. That feature would help with stripping IL\u0027s for MAUI Android apps, which used Profiled AOT mode. (https://github.com/dotnet/runtime/issues/44855)",
                                           "updatedAt":  "2022-12-12T16:09:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5QS0jx",
                                           "createdAt":  "2022-12-12T19:05:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCxHx2g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ivanpovazan",
                                                                               "createdAt":  "2022-12-12T21:05:29Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "\u003e It would be nice to have a simpler version of this feature, which prints out a list of AOT compiled methods for il strip tool to consume. That feature would help with stripping IL\u0027s for MAUI Android apps, which used Profiled AOT mode. (#44855)\r\n\r\nCreated a separated issue for this https://github.com/dotnet/runtime/issues/79551",
                                           "updatedAt":  "2022-12-12T19:05:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5c0Ant",
                                           "createdAt":  "2023-05-22T12:31:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC8KpNw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "lambdageek",
                                                                               "createdAt":  "2023-05-22T15:23:46Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ivanpovazan",
                                           "body":  "Implementing this feature has been paused for now, as we are trying to prove whether it is possible to use NativeAOT\u0027s dependency analysis to drive MonoAOT compilation in order to reduce the generated code size (especially in case of generics): https://github.com/dotnet/runtime/issues/80941 ",
                                           "updatedAt":  "2023-05-22T12:31:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5iN5eS",
                                           "createdAt":  "2023-07-24T12:22:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivanpovazan",
                                           "body":  "Moving to 9.0.0",
                                           "updatedAt":  "2023-07-24T12:22:15Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "[mono] Enable AOT compiler to generate a dependency graph of the compiled code",
        "labels":  [
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/74587",
        "createdAt":  "2022-08-25T15:21:08Z",
        "number":  74587,
        "author":  "lambdageek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-08-08T18:38:02Z",
        "body":  "See https://github.com/dotnet/runtime/issues/73454 (issue 2) for the motivation.\r\n\r\nCurrently the BCL intrinsics support is defined using static classes that provide one intrinsic function per operation (for example [`System.Runtime.Intrinsics.Arm.AdvSimd.AbsoluteDifferenceWideningUpperAndAdd(Vector128\u003cInt32\u003e, Vector128\u003cInt16\u003e, Vector128\u003cInt16\u003e)`](https://docs.microsoft.com/en-us/dotnet/api/system.runtime.intrinsics.arm.advsimd.absolutedifferencewideningupperandadd?view=net-6.0#system-runtime-intrinsics-arm-advsimd-absolutedifferencewideningupperandadd(system-runtime-intrinsics-vector128((system-int32))-system-runtime-intrinsics-vector128((system-int16))-system-runtime-intrinsics-vector128((system-int16)))) ) together with an [`IsSupported` property](https://docs.microsoft.com/en-us/dotnet/api/system.runtime.intrinsics.arm.advsimd.issupported?view=net-6.0) that can be used to decide whether the whole class of intrinsic operations is supported or not.\r\n\r\nA natural approach is to write two classes that implement the same interface: a specialized version that takes advantage of intrinsics, and a slow version that uses baseline scalar math.\r\n\r\n```csharp\r\n  interface IMyAlgorithms {\r\n     short MyMathAlgorithm(ReadOnlySpan\u003cshort\u003e input);\r\n  }\r\n\r\n  class MyFastAlgorithms : IMyAlgorithms {\r\n     short MyMathAlgorithm(ReadOnlySpan\u003cshort\u003e input) {\r\n        /* uses Arm.AdvSimd.AbsoluteDifferenceWideningUpperAndAdd(Vector128\u003cInt32\u003e, Vector128\u003cInt16\u003e, Vector128\u003cInt16\u003e) */\r\n  }\r\n\r\n  class MySlowAlgorithms : IMyAlgorithms {\r\n    short MyMathAlgorithm(ReadOnlySpan\u003cshort\u003e input) {\r\n      /* uses normal scalar math operations */\r\n    }\r\n  }\r\n\r\n  class Program {\r\n    public static void Main () {\r\n       IMyAlgorithms algo = Arm.AdvSimd.IsSupported ? new MyFastAlgorithms () : new MySlowAlgoritms ();\r\n       /* read inputs, etc */\r\n      algo.MyMathAlgorithm (inputs);\r\n    }\r\n  }\r\n```\r\n\r\nThe decision of whether to use the fast or the slow version of the algorithms is made upfront based on processor capabilities available at runtime.\r\n\r\n---\r\n\r\nThe problem is that in Mono (and CoreCLR) the code that makes the decision may run under a different execution engine than the code that actually implements the algorithm.\r\n\r\nThis can lead to problems if the \"fallback\" execution engine (a JIT or interpreter) does not support the intrinsics while the preferred execution engine (e.g. LLVM AOT) does support them.\r\n\r\nIf we cannot AOT compile `MyFastAlgorithm.MyMathAlgorithm` for some reason, but we can AOT compile `Program.Main`, we will get `AdvSimd.IsSupported == true` (because LLVM AOT supports the AdvSimd intrinsics), but at runtime calling `MyFastAlgorithm.MyMathAlgorithm` will throw `PlatformNotSupportedException` exceptions (because the interpreter and Mono JIT do not support the intrinsics).\r\n\r\n---\r\n\r\nThere are two issues here:\r\n\r\n1. If the preferred execution engine says `IsSupported`, the fallback execution engine cannot say `!IsSupported`.  We must implement some kind of support for the intrinsics in the fallback execution engine.\r\n2. There should be a mechanism to mark `MyFastAlgorithm.MyMathAlgorithm` so that the AOT compiler **must** successfully AOT it, or issue a diagnostic if that is not possible.  The goal is to help algorithm authors write code that the AOT compiler can support so that the fallbacks from (1) are never used.\r\n\r\n---\r\n\r\nSupport in the fallback execution engine.\r\n\r\nWe have a couple of options\r\n\r\n* Faithfully implement support for all the intrinsics in the mono interpreter and the mono JIT.  This is possible but represents a huge amount of work.  There are hundreds of intrinsics.\r\n* Modify the AOT compiler to always emit method bodies for the intrinsic functions and \"support\" the intrinsics in the JIT and interpreter by emitting calls to the AOTed versions.  This will be slow, but it\u0027s probably the least duplicated work because we can take advantage of the work already done for the LLVM backend.\r\n* Implement fallback versions of the intrinsics in a separate C# class and teach the JIT and the interpreter to substitute calls to `AdvSimd.AbsoluteDifferenceWideningUpperAndAdd` to `FallbackAdvSimd.AbsoluteDifferenceWideningUpperAndAdd`.  This is still a ton of work, but the C# versions are easier to implement than JIT\u0026interp support in C.  These won\u0027t be fast but they will at least provide a baseline (that could also be useful for testing).\r\n\r\n---\r\n\r\nSupport marking certain methods as \"must AOT\".\r\n\r\nWe could add an attribute that informs the AOT compiler that a certain method must be AOTed, if certain conditions are true:\r\n\r\n```csharp\r\nclass MyFastAlgorithms : IMyAlgorithms {\r\n    [MustAOTWhen (typeof(System.Runtime.Intrinsics.Arm.AdvSimd), nameof(IsSupported)]\r\n    short MyMathAlgorithm(ReadOnlySpan\u003cshort\u003e input) {\r\n       /* uses Arm.AdvSimd.AbsoluteDifferenceWideningUpperAndAdd(Vector128\u003cInt32\u003e, Vector128\u003cInt16\u003e, Vector128\u003cInt16\u003e) */\r\n    }\r\n}\r\n```\r\n\r\nAny method marked with `MustAOTWhen` will be AOTed if the AOT compiler is in a mode such that the given property is statically known to be `true`.  If the method uses an unsupported mechanism, the AOT compiler can issue a diagnostic.\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSamHEw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5JKNDE",
                                           "createdAt":  "2022-08-25T15:21:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "/cc @davidwrighton  @SamMonoRT @fanyang-mono @vargaz \r\n",
                                           "updatedAt":  "2022-08-25T15:21:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JKN8i",
                                           "createdAt":  "2022-08-25T15:23:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "This isn\u0027t an exhaustive list of options.  Primarily I wanted to capture the problem.  We may be able to come up with alternate approaches to resolving it\r\n",
                                           "updatedAt":  "2022-08-25T15:23:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JKaPp",
                                           "createdAt":  "2022-08-25T15:57:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "FYI  @tannergooding, appreciate any insights you might have",
                                           "updatedAt":  "2022-08-25T15:57:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JKhpq",
                                           "createdAt":  "2022-08-25T16:24:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCrKlDw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkotas",
                                                                               "createdAt":  "2022-08-25T17:04:10Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "tannergooding",
                                           "body":  "\u003e Implement fallback versions of the intrinsics in a separate C# class and teach the JIT and the interpreter to substitute calls to AdvSimd.AbsoluteDifferenceWideningUpperAndAdd to FallbackAdvSimd.AbsoluteDifferenceWideningUpperAndAdd. This is still a ton of work, but the C# versions are easier to implement than JIT\u0026interp support in C. These won\u0027t be fast but they will at least provide a baseline (that could also be useful for testing).\r\n\r\nThis is, IMO, the least desirable and most expensive option. I wouldn\u0027t agree that its easier to implement than JIT/interp support either.\r\n\r\nAdding support for new intrinsics to RyuJIT is \"trivial\" the vast majority of the time. It is almost exclusively table driven and effectively just requires that you support the `VEX` encoding.\r\n\r\nWe are about to add support for AVX-512 in .NET 8 as well and it is expected that once we add `EVEX` encoding support to the emitter, that each .NET API with a unique name is effectively just a new line in `hwintrinsiclistxarch.h` and potentially new encoding metadata in `instrsxarch.h` for instructions which are entirely new (and not just exposing a 512-bit variant).\r\n\r\nMono could, and likely should, have a similar metadata driven approach in which case it would be equally simple to add new intrinsic support there.\r\n\r\nIn the case of something like the `interpreter`, such a metadata table could have a mapping to the corresponding `C` intrinsic (e.g. `Sse.Add` maps to `_mm_add_ps`). This would similarly allow a fast and entirely table driven approach that does the \"right\" thing.\r\n\r\n\u003e Faithfully implement support for all the intrinsics in the mono interpreter and the mono JIT. This is possible but represents a huge amount of work. There are hundreds of intrinsics.\r\n\r\nAs indicated above, I don\u0027t think this is as much work as thought provided that Mono goes about this in a mechanism similarly to how RyuJIT did. It\u0027s still work, and quite a bit, but its not like doing this in C# where we\u0027d have to determine the actual behavior of each instruction and exactly emulate it + any relevant quirks.\r\n\r\n\u003e Modify the AOT compiler to always emit method bodies for the intrinsic functions and \"support\" the intrinsics in the JIT and interpreter by emitting calls to the AOTed versions. This will be slow, but it\u0027s probably the least duplicated work because we can take advantage of the work already done for the LLVM backend.\r\n\r\nI think this would be viable as well and is effectively required for \"indirect\" invocation anyways (e.g. if a user calls `Sse.Add` via reflection or a delegate, etc). It\u0027s slow, but correct.\r\n\r\n-------------------------\r\n\r\n\u003e Any method marked with MustAOTWhen\r\n\r\nConceivably the AOT compiler could just say that any method which uses a hardware intrinsic must be AOT\u0027d.\r\n\r\nIt could also say that any method which uses hardware intrinsics not within a corresponding `if (Isa.IsSupported)` check must be AOT\u0027d if it wanted to be slightly less restrictive.",
                                           "updatedAt":  "2022-08-25T16:24:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JKjAd",
                                           "createdAt":  "2022-08-25T16:29:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCrKlFg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkotas",
                                                                               "createdAt":  "2022-08-25T17:04:20Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "tannergooding",
                                           "body":  "I believe CG2 handles this specially for corelib and other libraries differently.\r\n\r\ncorelib is treated specially and we assume that we always do the right thing and the two paths are equivalent.\r\n\r\nWhile it assumes other libraries may differ in behavior between two paths and so I believe it forces jitting for various `IsSupported` checks were present that couldn\u0027t be emitted as a dynamic check.\r\n\r\nWe of course can rely on the JIT being present for that scenario, so its fine for us. NAOT doesn\u0027t have any issues because it exactly targets a given baseline.",
                                           "updatedAt":  "2022-08-25T16:29:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JKuxo",
                                           "createdAt":  "2022-08-25T17:17:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "\u003e Conceivably the AOT compiler could just say that any method which uses a hardware intrinsic must be AOT\u0027d.\r\n\r\nThat will slow down AOT compilation time. We would have to look at every method in every assembly.",
                                           "updatedAt":  "2022-08-25T17:17:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JKzfU",
                                           "createdAt":  "2022-08-25T17:32:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCrZ1tg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "lambdageek",
                                                                               "createdAt":  "2022-08-25T17:40:04Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "HighPerfDotNet",
                                                                               "createdAt":  "2022-08-30T20:27:04Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e That will slow down AOT compilation time. We would have to look at every method in every assembly.\r\n\r\nYes, how much? A simple scan of all methods in the app, without generating any code, should be pretty fast.",
                                           "updatedAt":  "2022-08-25T17:32:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JK6rB",
                                           "createdAt":  "2022-08-25T18:04:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "\u003e Mono could, and likely should, have a similar metadata driven approach in which case it would be equally simple to add new intrinsic support there.\r\n\r\nIn theory Mono is using some kind of table-driven approach for this, too. but evidently we still end up with a lot of manual plumbing.  it would be good to investigate where the gap is @SamMonoRT \r\n\r\n---\r\n\r\n\u003e \u003e Modify the AOT compiler to always emit method bodies for the intrinsic functions and \"support\" the intrinsics in the JIT and interpreter by emitting calls to the AOTed versions. This will be slow, but it\u0027s probably the least duplicated work because we can take advantage of the work already done for the LLVM backend.\r\n\r\n\u003e I think this would be viable as well and is effectively required for \"indirect\" invocation anyways (e.g. if a user calls Sse.Add via reflection or a delegate, etc). It\u0027s slow, but correct.\r\n\r\nI think this is probably the right place to start in net8 for Mono.  That will at least get us back to \"correct\".  And we can measure AOT size regressions and make a decision whether it makes sense to add faster support to the fallback execution engines.\r\n\r\n---\r\n\r\n\u003e A simple scan of all methods in the app, without generating any code, should be pretty fast.\r\n\r\nThis is also probably a good place to start - we could make a table of \"must AOT\" methods and measure the impact on compilation time and see if there are false positives.\r\n",
                                           "updatedAt":  "2022-08-25T18:05:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JqJsE",
                                           "createdAt":  "2022-09-02T18:18:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "/cc @vargaz @BrzVlad ",
                                           "updatedAt":  "2022-09-02T18:18:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JqYcT",
                                           "createdAt":  "2022-09-02T19:51:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vargaz",
                                           "body":  "Implementing the intrinsics in the mono JIT is doable, the bigger problem is that the generated code will not be very good quality, since the SIMD code in the BCL assumes a good optimizing compiler.",
                                           "updatedAt":  "2022-09-02T19:51:29Z"
                                       }
                                   ],
                         "totalCount":  10
                     },
        "title":  "Support for intrinsics with multiple execution engines with divergent capabilities",
        "labels":  [
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/79567",
        "createdAt":  "2022-12-12T22:05:17Z",
        "number":  79567,
        "author":  "danroth27",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCsER6Q==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "rogihee",
                                            "createdAt":  "2022-12-16T21:23:26Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "raju-kumar",
                                            "createdAt":  "2022-12-31T17:35:52Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2023-07-21T23:10:46Z",
        "body":  ".NET support ahead-of-time (AOT) compilation to WebAssembly, which can significantly improve runtime performance at the expense of download size. It may be that not all .NET code in the app are performance critical and only certain code paths need to be optimized using AOT compilation. Having the flexibility to decide how much of the app gets AOT compiled enables the developer to make appropriate tradeoffs between app download size and runtime performance. Assembly level granularity for this decision seems like a good starting point.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOUPi1tA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5QT8Vt",
                                           "createdAt":  "2022-12-12T22:05:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2022-12-12T22:05:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5QT8ob",
                                           "createdAt":  "2022-12-12T22:06:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n.NET support ahead-of-time (AOT) compilation to WebAssembly, which can significantly improve runtime performance at the expense of download size. It may be that not all .NET code in the app are performance critical and only certain code paths need to be optimized using AOT compilation. Having the flexibility to decide how much of the app gets AOT compiled enables the developer to make appropriate tradeoffs between app download size and runtime performance. Assembly level granularity for this decision seems like a good starting point.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003edanroth27\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-wasm`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-12-12T22:06:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5QUFTT",
                                           "createdAt":  "2022-12-12T22:40:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "charlesroddie",
                                           "body":  "Dotnet does not support full AOT compilation to WASM and currently only supports mixed mode compilation. https://github.com/dotnet/aspnetcore/issues/35302 . The file size problem of current mixed mode WASM results from that (and from the use of Mono), since both compiled code and IL code are deployed.",
                                           "updatedAt":  "2022-12-12T22:40:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5QUIE4",
                                           "createdAt":  "2022-12-12T22:51:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "RChrisCoble",
                                           "body":  "Thanks for opening this @danroth27!  Appreciate it.",
                                           "updatedAt":  "2022-12-12T22:51:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5QUIRs",
                                           "createdAt":  "2022-12-12T22:53:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "RChrisCoble",
                                           "body":  "\u003e Dotnet does not support full AOT compilation to WASM and currently only supports mixed mode compilation. [dotnet/aspnetcore#35302](https://github.com/dotnet/aspnetcore/issues/35302) . The file size problem of current mixed mode WASM results from that (and from the use of Mono), since both compiled code and IL code are deployed.\r\n\r\nHow about Profile Guided AOT?",
                                           "updatedAt":  "2022-12-12T22:53:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5QUOTD",
                                           "createdAt":  "2022-12-12T23:16:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danroth27",
                                           "body":  "\u003e Dotnet does not support full AOT compilation to WASM and currently only supports mixed mode compilation. [dotnet/aspnetcore#35302](https://github.com/dotnet/aspnetcore/issues/35302) . The file size problem of current mixed mode WASM results from that (and from the use of Mono), since both compiled code and IL code are deployed.\r\n\r\nThat\u0027s technically true to a point. There are cases where we still need the .NET IL interpreter even when using AOT, which is why we still need the DLLs. So we already operate in a sort of limited mixed mode to maintain .NET compatibility. We\u0027re exploring ways to reduce the size overhead of these DLLs and alternative packaging solutions when using AOT. But even if we completely got rid of the DLLs the AOT compiled code would still be larger. It takes more WebAssembly code to represent the equivalent .NET IL. \r\n\r\nRegardless, this issue is about providing more flexibility to the developer on how much of the app gets AOT compiled to WebAssembly.",
                                           "updatedAt":  "2022-12-12T23:16:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5QqkXZ",
                                           "createdAt":  "2022-12-15T16:11:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "LoganDunning",
                                           "body":  "Nice! Excited for This! ",
                                           "updatedAt":  "2022-12-15T16:11:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Q-LW0",
                                           "createdAt":  "2022-12-19T22:11:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Timmoth",
                                           "body":  "Out of interest do you have any metrics for the increase in dll size vs performance vs publish time for AOT vs JIT? It would be good to see the scope of improvement mixed mode may bring. \r\n\r\nI have a [Mandelbrot set zoom project](https://timmoth.com/showcase/mandelbrotcpu) I\u0027ve used to benchmark AOT myself that produced the following results:\r\n\r\ndll **size** vs **performance** vs publish **time**\r\nJIT:    9.84 MB 14 fps 00:42.684 \r\nAOT: 30.3 MB 27fps 02:39.244\r\n\r\nThis seems like a best case scenario for AOT - a small project with a heavy workload. I\u0027d be keen to see best / worst case scenarios for mixed mode to better understand what I should be looking forward to!  ",
                                           "updatedAt":  "2022-12-19T23:59:44Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "WebAssembly mixed mode ahead-of-time (AOT) compilation",
        "labels":  [
                       "arch-wasm",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/80936",
        "createdAt":  "2023-01-20T18:05:13Z",
        "number":  80936,
        "author":  "lewing",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-07-24T17:04:42Z",
        "body":  "We continue to get reports of performance issues in a Safari and now that JavaScriptCore has initial Wasm SIMD support we should enable testing on jsc in perf and CI\r\n\r\nRelated issues\r\n- [ ] https://github.com/dotnet/runtime/pull/80797\r\n- [ ] https://github.com/dotnet/runtime/pull/80808\r\n\r\nTODO:\r\n- [ ] Install jsc on the docker images (@radekdoulik)\r\n- [ ] Install jsc on perf runs (@radical)\r\n- [ ] Add a jsc library tests run\r\n- [ ] Add a jsc job for perf - microbenchmarks",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOU19Piw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5TX00_",
                                           "createdAt":  "2023-01-20T18:05:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nWe continue to get reports of performance issues in a Safari and now that JavaScriptCore has initial Wasm SIMD support we should enable testing on jsc in perf and CI\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003elewing\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-wasm`, `area-Codegen-AOT-mono`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e8.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-01-20T18:05:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5TX0-L",
                                           "createdAt":  "2023-01-20T18:05:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC0j3GA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "radical",
                                                                               "createdAt":  "2023-01-20T18:06:28Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "lewing",
                                           "body":  "cc @SamMonoRT @radekdoulik @radical ",
                                           "updatedAt":  "2023-01-20T18:05:54Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "[wasm] Stand up JavaScriptCore wasm testing and benchmarks",
        "labels":  [
                       "arch-wasm",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/82405",
        "createdAt":  "2023-02-20T17:15:07Z",
        "number":  82405,
        "author":  "lateralusX",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-02-21T09:14:52Z",
        "body":  "Current direct icall logic in Mono is spread out at different locations, some is part of emit_and_reloc, while other is in mono_aot_get_direct_call_symbol called by LLVM and LLVMOnly modes. We should unify the logic and handle lowering of direct icalls the same across Mono AOT modes.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "[Mono]: Cleanup direct icall logic used in Mono AOT scenarios.",
        "labels":  [
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/82717",
        "createdAt":  "2023-02-27T16:31:14Z",
        "number":  82717,
        "author":  "rolfbjarne",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-05-21T16:26:24Z",
        "body":  "The AOT compiler supports inlining calls to `Selector.GetHandle(string)`:\r\n\r\nhttps://github.com/dotnet/runtime/blob/2bdc3cb8dd3500aa2b3a51b558782560b26b5973/src/mono/mono/mini/intrinsics.c#L1987-L2027\r\n\r\nand we\u0027d like to [add a new overload](https://github.com/xamarin/xamarin-macios/issues/17630): `Selector.GetHandle(ReadOnlySpan\u003cbyte\u003e)`, where the constant value would be a UTF8 string:\r\n\r\n```cs\r\nSelector.GetHandle (\"mySelector\"u8);\r\n```\r\n\r\nAnd where the call to the new overload would also be optimized.\r\n\r\nWould this be possible to implement?\r\n\r\nCC @vargaz ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOVjuiyg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5WO6LK",
                                           "createdAt":  "2023-02-27T17:31:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vargaz",
                                           "body":  "Here is how the IL looks:\r\n```\r\n    IL_0000:  ldsflda    int32 \u0027\u003cPrivateImplementationDetails\u003e\u0027::F9E5DF8B4E118810BA431209F1BFB47819AE57578BAADA047095340A3159E7A4\r\n    IL_0005:  ldc.i4.3\r\n    IL_0006:  newobj     instance void valuetype [System.Runtime]System.ReadOnlySpan`1\u003cuint8\u003e::.ctor(void*,\r\n                                                                                                     int32)\r\n    IL_000b:  call       void HelloWorld.Program::foo(valuetype [System.Runtime]System.ReadOnlySpan`1\u003cuint8\u003e)\r\n```\r\nIt might be doable, but not simple.",
                                           "updatedAt":  "2023-02-27T17:31:07Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Support new overload for ObjCRuntime.Selector.GetHandle in the AOT compiler",
        "labels":  [
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/83426",
        "createdAt":  "2023-03-14T22:19:29Z",
        "number":  83426,
        "author":  "carlossanlop",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-07-24T15:53:24Z",
        "body":  "Found in the internal-\u003epublic merge PR for 6.0: https://github.com/dotnet/runtime/pull/83404\r\n- Queue: `Mono llvmaot Pri0 Runtime Tests Run Linux arm64 release`\r\n- Job: https://dev.azure.com/dnceng-public/public/_build/results?buildId=204115\u0026view=logs\u0026j=74e689b1-5e71-5f30-9486-7c2c5ff44021\u0026t=bc7664d5-2e7c-57dc-1337-ab0ada348ecf\r\n- Log file: https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-83404-merge-2c2fd1a68a554032ad/JIT.HardwareIntrinsics/1/console.5bc1a453.log?helixlogtype=result\r\n- Some examples of callstacks:\r\n\r\n```\r\n    JIT/HardwareIntrinsics/Arm/Dp/Dp_r/Dp_r.sh [FAIL]\r\n      \r\n      Return code:      1\r\n      Raw output file:      /root/helix/work/workitem/uploads/Reports/JIT.HardwareIntrinsics/Arm/Dp/Dp_r/Dp_r.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n      /root/helix/work/correlation/corerun -p System.Reflection.Metadata.MetadataUpdater.IsSupported=false Dp_r.dll \u0027\u0027\r\n      Supported ISAs:\r\n        AdvSimd:   True\r\n        Aes:       True\r\n        ArmBase:   True\r\n        Crc32:     True\r\n        Dp:        True\r\n        Rdm:       True\r\n        Sha1:      True\r\n        Sha256:    True\r\n```\r\n\r\n\r\n```\r\n      Ending test case at 3/14/2023 6:17:17 PM\r\n      Expected: 100\r\n      Actual: 0\r\n      END EXECUTION - FAILED\r\n      Test Harness Exitcode is : 1\r\n      To run the test:\r\n      \u003e set CORE_ROOT=/root/helix/work/correlation\r\n      \u003e /root/helix/work/workitem/e/JIT/HardwareIntrinsics/Arm/Dp/Dp_r/Dp_r.sh\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n           at JIT_HardwareIntrinsics._Arm_Dp_Dp_r_Dp_r_._Arm_Dp_Dp_r_Dp_r_sh()\r\n      Output:\r\n        \r\n        Return code:      1\r\n        Raw output file:      /root/helix/work/workitem/uploads/Reports/JIT.HardwareIntrinsics/Arm/Dp/Dp_r/Dp_r.output.txt\r\n        Raw output:\r\n        BEGIN EXECUTION\r\n        /root/helix/work/correlation/corerun -p System.Reflection.Metadata.MetadataUpdater.IsSupported=false Dp_r.dll \u0027\u0027\r\n        Supported ISAs:\r\n          AdvSimd:   True\r\n          Aes:       True\r\n          ArmBase:   True\r\n          Crc32:     True\r\n          Dp:        True\r\n          Rdm:       True\r\n          Sha1:      True\r\n          Sha256:    True\r\n```\r\n\r\n\r\n```\r\n        Ending test case at 3/14/2023 6:17:17 PM\r\n        Expected: 100\r\n        Actual: 0\r\n        END EXECUTION - FAILED\r\n        Test Harness Exitcode is : 1\r\n        To run the test:\r\n        \u003e set CORE_ROOT=/root/helix/work/correlation\r\n        \u003e /root/helix/work/workitem/e/JIT/HardwareIntrinsics/Arm/Dp/Dp_r/Dp_r.sh\r\n    JIT/HardwareIntrinsics/Arm/Rdm.Arm64/Rdm.Arm64_ro/Rdm.Arm64_ro.sh [FAIL]\r\n      \r\n      Return code:      1\r\n      Raw output file:      /root/helix/work/workitem/uploads/Reports/JIT.HardwareIntrinsics/Arm/Rdm.Arm64/Rdm.Arm64_ro/Rdm.Arm64_ro.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n      /root/helix/work/correlation/corerun -p System.Reflection.Metadata.MetadataUpdater.IsSupported=false Rdm.Arm64_ro.dll \u0027\u0027\r\n      Supported ISAs:\r\n        AdvSimd:   True\r\n        Aes:       True\r\n        ArmBase:   True\r\n        Crc32:     True\r\n        Dp:        True\r\n        Rdm:       True\r\n        Sha1:      True\r\n        Sha256:    True\r\n```\r\n```\r\n        Ending test case at 3/14/2023 6:18:27 PM\r\n        Expected: 100\r\n        Actual: 0\r\n        END EXECUTION - FAILED\r\n        Test Harness Exitcode is : 1\r\n        To run the test:\r\n        \u003e set CORE_ROOT=/root/helix/work/correlation\r\n        \u003e /root/helix/work/workitem/e/JIT/HardwareIntrinsics/Arm/Rdm/Rdm_ro/Rdm_ro.sh\r\n    JIT/HardwareIntrinsics/Arm/Rdm.Arm64/Rdm.Arm64_r/Rdm.Arm64_r.sh [FAIL]\r\n      \r\n      Return code:      1\r\n      Raw output file:      /root/helix/work/workitem/uploads/Reports/JIT.HardwareIntrinsics/Arm/Rdm.Arm64/Rdm.Arm64_r/Rdm.Arm64_r.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n      /root/helix/work/correlation/corerun -p System.Reflection.Metadata.MetadataUpdater.IsSupported=false Rdm.Arm64_r.dll \u0027\u0027\r\n      Supported ISAs:\r\n        AdvSimd:   True\r\n        Aes:       True\r\n        ArmBase:   True\r\n        Crc32:     True\r\n        Dp:        True\r\n        Rdm:       True\r\n        Sha1:      True\r\n        Sha256:    True\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOV8MKng==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5XjeWU",
                                           "createdAt":  "2023-03-14T22:19:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2023-03-14T22:19:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5XsKi4",
                                           "createdAt":  "2023-03-16T02:38:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "/cc @SamMonoRT ",
                                           "updatedAt":  "2023-03-16T02:38:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Xu9cC",
                                           "createdAt":  "2023-03-16T13:10:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SamMonoRT",
                                           "body":  "@carlossanlop - how do I query for list of backported PRs approved in the timespan just before these started failing ?",
                                           "updatedAt":  "2023-03-16T13:10:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5XwSO6",
                                           "createdAt":  "2023-03-16T16:12:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "carlossanlop",
                                           "body":  "Hmm good question...\r\n\r\nI think the best option is for manually write a Kusto query with your desired filters: https://kusto.azure.com/clusters/engsrvprod/databases/engineeringdata\r\n\r\nI would alternatively try by using the [.NET Core Telemetry Report (public)](https://dev.azure.com/dnceng/public/_dashboards/dashboard/40ac4990-3498-4b3a-85dd-2ffde961d672).\r\n\r\n- Right click on the runtime horizontal bar.\r\n- Select \"Drill through\" -\u003e \"Build Investigation\" in the context menu.\r\n- You\u0027ll be shown the execution history of the rolling builds (for main).\r\n\r\nFrom there, it\u0027s just a matter of finding a way to filter by:\r\n- Servicing branch instead of main \r\n- Increase the timespan to show older results\r\n- Figure out if you can also filter by keywords\r\n\r\n@steveisok do you have a better option?",
                                           "updatedAt":  "2023-03-16T16:12:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Xwwqe",
                                           "createdAt":  "2023-03-16T17:26:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "\u003e @steveisok do you have a better option?\r\n\r\nI don\u0027t other than bisecting, but that would be painful.\r\n",
                                           "updatedAt":  "2023-03-16T17:26:05Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "[6.0] JIT.HardwareIntrinsics test failures in mono arm64 linux llvmaot",
        "labels":  [
                       "arch-arm64",
                       "os-linux",
                       "area-Codegen-AOT-mono",
                       "runtime-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/83588",
        "createdAt":  "2023-03-17T13:11:51Z",
        "number":  83588,
        "author":  "jandupej",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-26T16:13:35Z",
        "body":  "Move from emit vector + xequal to `OP_XEXTRACT` as in mini JIT. This should simplify code by removing `if (COMPILE_LLVM (cfg))` branches and possibly improve codegen. See https://github.com/dotnet/runtime/pull/83515",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "[mono][llvm] Unify *All and *Any SIMD intrinsics with mini implementations",
        "labels":  [
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/86164",
        "createdAt":  "2023-05-12T18:04:26Z",
        "number":  86164,
        "author":  "radical",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-04-25T21:39:24Z",
        "body":  "[Rolling build](https://dev.azure.com/dnceng-public/public/_build/results?buildId=271463\u0026view=logs\u0026j=13711b3e-fe09-5ef6-c164-4a62d0e4a813\u0026t=6dec0b95-e615-547d-21bf-e2196019e00f) failing.\r\n\r\nFor [v8 11.3.203](https://helixre107v0xdcypoyl9e7f.blob.core.windows.net/dotnet-runtime-refs-heads-main-079d12cf06214e2ab5/normal-System.Text.Json.Tests/1/console.3b7d3380.log?helixlogtype=result):\r\n```\r\n[09:57:54] info: [STRT] System.Text.Json.Serialization.Tests.ConstructorTests_SyncStream.NonPublicCtors_NotSupported\r\n[09:58:08] info: /home/helixbot/.jsvu/bin/v8: line 2:    69 Killed                  \"/home/helixbot/.jsvu/engines/v8/v8\" --snapshot_blob=\"/home/helixbot/.jsvu/engines/v8/snapshot_blob.bin\" \"$@\"\r\n[09:58:08] info: Process v8 exited with 137\r\n                 \r\n[09:58:08] info: Waiting to flush log messages with a timeout of 120 secs ..\r\n[09:58:09] fail: Application has finished with exit code 137 but 0 was expected\r\nXHarness exit code: 71 (GENERAL_FAILURE)\r\n```\r\n\r\nFor [chrome](https://helix.dot.net/api/2019-06-17/jobs/64f0b7a0-c72d-44ae-835b-9e73eb561dbb/workitems/WasmTestOnBrowser-System.Text.Json.Tests/console) which shows a timeout. And from `wasm-console.log`:\r\n```\r\n...\r\n[2023-05-12T10:01:20.947Z] [STRT] System.Text.Json.Tests.Utf8JsonReaderTests.TestDepthWithObjectArrayMismatch(depth: 512)\r\nUnable to evaluate script: disconnected: received Inspector.detached event\r\n```\r\n\u003c!-- Error message template  --\u003e\r\n### Known Issue Error Message\r\nFill the error message using [known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssues.md#how-to-fill-out-a-known-issue-error-section).\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": \"\",\r\n  \"BuildRetry\": false\r\n}\r\n```\r\n\u003c!--Known issue error report start --\u003e\r\n### Report\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|0|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOXR464Q==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5cJ6Ez",
                                           "createdAt":  "2023-05-12T18:04:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n[Rolling build](https://dev.azure.com/dnceng-public/public/_build/results?buildId=271463\u0026view=logs\u0026j=13711b3e-fe09-5ef6-c164-4a62d0e4a813\u0026t=6dec0b95-e615-547d-21bf-e2196019e00f) failing.\r\n\r\nFor [v8 11.3.203](https://helixre107v0xdcypoyl9e7f.blob.core.windows.net/dotnet-runtime-refs-heads-main-079d12cf06214e2ab5/normal-System.Text.Json.Tests/1/console.3b7d3380.log?helixlogtype=result):\r\n```\r\n[09:57:54] info: [STRT] System.Text.Json.Serialization.Tests.ConstructorTests_SyncStream.NonPublicCtors_NotSupported\r\n[09:58:08] info: /home/helixbot/.jsvu/bin/v8: line 2:    69 Killed                  \"/home/helixbot/.jsvu/engines/v8/v8\" --snapshot_blob=\"/home/helixbot/.jsvu/engines/v8/snapshot_blob.bin\" \"$@\"\r\n[09:58:08] info: Process v8 exited with 137\r\n                 \r\n[09:58:08] info: Waiting to flush log messages with a timeout of 120 secs ..\r\n[09:58:09] fail: Application has finished with exit code 137 but 0 was expected\r\nXHarness exit code: 71 (GENERAL_FAILURE)\r\n```\r\n\r\nFor [chrome](https://helix.dot.net/api/2019-06-17/jobs/64f0b7a0-c72d-44ae-835b-9e73eb561dbb/workitems/WasmTestOnBrowser-System.Text.Json.Tests/console) which shows a timeout. And from `wasm-console.log`:\r\n```\r\n...\r\n[2023-05-12T10:01:20.947Z] [STRT] System.Text.Json.Tests.Utf8JsonReaderTests.TestDepthWithObjectArrayMismatch(depth: 512)\r\nUnable to evaluate script: disconnected: received Inspector.detached event\r\n```\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eradical\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-wasm`, `area-System.Text.Json`, `blocking-clean-ci`, `area-Codegen-AOT-mono`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-05-12T18:04:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5cKD_W",
                                           "createdAt":  "2023-05-12T18:45:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "@pavelsavara please take a look",
                                           "updatedAt":  "2023-05-12T18:45:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5cKGzk",
                                           "createdAt":  "2023-05-12T18:58:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vargaz",
                                           "body":  "Is this reproducible ?\r\n",
                                           "updatedAt":  "2023-05-12T18:58:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5cKHzN",
                                           "createdAt":  "2023-05-12T19:01:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "it appears to be across multiple runtime-extra-platform runs last test is ConstructorTests_SyncStream.NonPublicCtors_NotSupported in all the ones I\u0027ve looked at",
                                           "updatedAt":  "2023-05-12T19:01:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5cSEBL",
                                           "createdAt":  "2023-05-15T17:10:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "Chrome [log](https://helixre107v0xdcypoyl9e7f.blob.core.windows.net/dotnet-runtime-refs-heads-main-64f0b7a0c72d44ae83/WasmTestOnBrowser-System.Text.Json.Tests/de1c3a3b-a7ed-430d-abdd-8c70605cfc85.log?helixlogtype=result) shows charmap problem again, after running too long.\r\n`ERROR  \texecutor(733)\t_execute_command_in_container\tException: \u0027charmap\u0027 codec can\u0027t encode characters in position 339794-339795: character maps to \u003cundefined\u003e`\r\n\r\nV8 is just slow, no ?\r\n\r\n",
                                           "updatedAt":  "2023-05-15T17:10:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5dHjrh",
                                           "createdAt":  "2023-05-25T04:49:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "[Rolling build](https://dev.azure.com/dnceng-public/public/_build/results?buildId=285287\u0026view=results), and [log](https://helixre107v0xdcypoyl9e7f.blob.core.windows.net/dotnet-runtime-refs-heads-main-24e5f5503e894879af/normal-System.Text.Json.Tests/1/console.9363db71.log?helixlogtype=result):\r\n```\r\n[22:06:45] info: [STRT] System.Text.Json.Serialization.Tests.StreamTests_DeserializeAsyncEnumerable.DeserializeAsyncEnumerable_ReadSimpleObjectAsync(count: 1000, bufferSize: 1000)\r\n[22:06:56] info: \r\n[22:06:56] info: \u003c--- Last few GCs ---\u003e\r\n[22:06:56] info: \r\n[22:06:56] info: [70:0x560a9068c280]    63266 ms: Mark-Compact (reduce) 2048.2 (2071.2) -\u003e 2048.2 (2071.2) MB, 667.36 / 0.00 ms  (average mu = 0.728, current mu = 0.001) allocation failure; scavenge might not succeed\r\n[22:06:56] info: \r\n[22:06:56] info: \r\n[22:06:56] info: \u003c--- JS stacktrace ---\u003e\r\n[22:06:56] info: \r\n[22:06:56] info: \r\n[22:06:56] info: #\r\n[22:06:56] info: # Fatal JavaScript out of memory: Reached heap limit\r\n[22:06:56] info: #\r\n[22:06:56] info: \r\n[22:07:23] info: /home/helixbot/.jsvu/bin/v8: line 2:    70 Trace/breakpoint trap   (core dumped) \"/home/helixbot/.jsvu/engines/v8/v8\" --snapshot_blob=\"/home/helixbot/.jsvu/engines/v8/snapshot_blob.bin\" \"$@\"\r\n[22:07:23] info: Process v8 exited with 133\r\n```",
                                           "updatedAt":  "2023-05-25T04:49:56Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "[wasm] `System.Text.Json.Tests` AOT failing with v8, and chrome",
        "labels":  [
                       "test-failure",
                       "arch-wasm",
                       "disabled-test",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/87513",
        "createdAt":  "2023-06-13T19:17:54Z",
        "number":  87513,
        "author":  "fanyang-mono",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-04T14:29:09Z",
        "body":  "Follow-up work for https://github.com/dotnet/runtime/pull/86722\r\n\r\nAdd a functional test for it.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "[Mono] Add a test for trimming method body",
        "labels":  [
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/88625",
        "createdAt":  "2023-07-10T19:59:11Z",
        "number":  88625,
        "author":  "jonathanpeppers",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-07-12T16:28:02Z",
        "body":  "### Description\r\n\r\nThis happened during code flow here: https://github.com/xamarin/xamarin-android/pull/8176\r\n\r\n```\r\nMicrosoft.Android.Sdk.Aot.targets(109,5): error : The system cannot find the file specified.\r\nMicrosoft.Android.Sdk.Aot.targets(109,5): error : AOT of image C:\\a\\_work\\1\\a\\TestRelease\\07-10_18.28.32\\temp\\BuildAot And├£ml├ñ├╝ts_armeabiv7ax86_True_True\\obj\\Release\\android-x86\\linked\\_Microsoft.Android.Resource.Designer.dll failed.\r\nMicrosoft.Android.Sdk.Aot.targets(109,5): error : Mono Ahead of Time compiler - compiling assembly C:\\a\\_work\\1\\a\\TestRelease\\07-10_18.28.32\\temp\\BuildAot And├£ml├ñ├╝ts_armeabiv7ax86_True_True\\obj\\Release\\android-x86\\linked\\_Microsoft.Android.Resource.Designer.dll\r\nMicrosoft.Android.Sdk.Aot.targets(109,5): error : AOTID 289CA072-6C75-216D-F0DC-CB1E0B63A631\r\nMicrosoft.Android.Sdk.Aot.targets(109,5): error : Using profile data file \u0027dotnet.aotprofile\u0027\r\nMicrosoft.Android.Sdk.Aot.targets(109,5): error : Added 0 methods from profile.\r\nMicrosoft.Android.Sdk.Aot.targets(109,5): error : Executing opt: \"C:\\a\\_work\\1\\s\\bin\\Release\\dotnet\\packs\\Microsoft.NETCore.App.Runtime.AOT.win-x64.Cross.android-x86\\8.0.0-preview.7.23359.1\\Sdk\\..\\tools\\opt\" -f -disable-tail-calls -passes=\u0027default\u003cO2\u003e,place-safepoints\u0027 -spp-all-backedges -o \"obj\\Release\\android-x86\\aot\\x86\\_Microsoft.Android.Resource.Designer\\temp.opt.bc\" \"obj\\Release\\android-x86\\aot\\x86\\_Microsoft.Android.Resource.Designer\\temp.bc\"\r\nMicrosoft.Android.Sdk.Aot.targets(109,5): error : Precompiling failed for C:\\a\\_work\\1\\a\\TestRelease\\07-10_18.28.32\\temp\\BuildAot AndÜmläüts_armeabiv7ax86_True_True\\obj\\Release\\android-x86\\linked\\UnnamedProject.dll with exit code 1.\r\nMicrosoft.Android.Sdk.Aot.targets(109,5): error : The system cannot find the file specified.\r\nMicrosoft.Android.Sdk.Aot.targets(109,5): error : AOT of image C:\\a\\_work\\1\\a\\TestRelease\\07-10_18.28.32\\temp\\BuildAot And├£ml├ñ├╝ts_armeabiv7ax86_True_True\\obj\\Release\\android-x86\\linked\\UnnamedProject.dll failed.\r\nMicrosoft.Android.Sdk.Aot.targets(109,5): error : Mono Ahead of Time compiler - compiling assembly C:\\a\\_work\\1\\a\\TestRelease\\07-10_18.28.32\\temp\\BuildAot And├£ml├ñ├╝ts_armeabiv7ax86_True_True\\obj\\Release\\android-x86\\linked\\UnnamedProject.dll\r\nMicrosoft.Android.Sdk.Aot.targets(109,5): error : AOTID 1991E3CD-E6C4-BA31-1115-20CDEA468513\r\nMicrosoft.Android.Sdk.Aot.targets(109,5): error : Executing opt: \"C:\\a\\_work\\1\\s\\bin\\Release\\dotnet\\packs\\Microsoft.NETCore.App.Runtime.AOT.win-x64.Cross.android-x86\\8.0.0-preview.7.23359.1\\Sdk\\..\\tools\\opt\" -f -disable-tail-calls -passes=\u0027default\u003cO2\u003e,place-safepoints\u0027 -spp-all-backedges -o \"obj\\Release\\android-x86\\aot\\x86\\UnnamedProject\\temp.opt.bc\" \"obj\\Release\\android-x86\\aot\\x86\\UnnamedProject\\temp.bc\"\r\n```\r\n\r\n### Reproduction Steps\r\n\r\n* `mkdir \u0027BuildAot AndÜmläüts\u0027 \u0026\u0026 cd \u0027BuildAot AndÜmläüts\u0027`\r\n* `dotnet new android`\r\n* `dotnet build -c Release`\r\n\r\n### Expected behavior\r\n\r\nBuild succeeds.\r\n\r\n### Actual behavior\r\n\r\n`\u003cMonoAOTCompiler/\u003e` MSBuild task fails.\r\n\r\n### Regression?\r\n\r\nYes\r\n\r\n### Known Workarounds\r\n\r\nYou could disable AOT with `-p:RunAOTCompilation=false`, but this is a default setting for `Release` builds.\r\n\r\n### Configuration\r\n\r\n.NET SDK 8.0.100-preview.7.23360.1\r\n\r\n### Other information\r\n\r\nIt appears this may only be an issue on Windows?",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOYVNeYA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5hKJZp",
                                           "createdAt":  "2023-07-11T03:28:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "cc @radical",
                                           "updatedAt":  "2023-07-11T03:28:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hKs3b",
                                           "createdAt":  "2023-07-11T06:05:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "From the binlog:\r\n\r\n```\r\n: Precompiling failed for C:\\a\\_work\\1\\a\\TestRelease\\07-10_18.28.32\\temp\\BuildAot AndÜmläüts_armeabiv7ax86_True_True\\obj\\Release\\android-x86\\linked\\_Microsoft.Android.Resource.Designer.dll with exit code 1. \r\nThe system cannot find the file specified. \r\nAOT of image C:\\a\\_work\\1\\a\\TestRelease\\07-10_18.28.32\\temp\\BuildAot And├£ml├ñ├╝ts_armeabiv7ax86_True_True\\obj\\Release\\android-x86\\linked\\_Microsoft.Android.Resource.Designer.dll failed. \r\nMono Ahead of Time compiler - compiling assembly C:\\a\\_work\\1\\a\\TestRelease\\07-10_18.28.32\\temp\\BuildAot And├£ml├ñ├╝ts_armeabiv7ax86_True_True\\obj\\Release\\android-x86\\linked\\_Microsoft.Android.Resource.Designer.dll \r\nAOTID 289CA072-6C75-216D-F0DC-CB1E0B63A631 \r\nUsing profile data file \u0027C:\\a\\_work\\1\\s\\bin\\Release\\dotnet\\packs\\Microsoft.Android.Sdk.Windows\\34.0.0-ci.darc-main-33fa432d-4d4a-4d5d-9e54-6af849b9f4e5.367\\targets\\dotnet.aotprofile\u0027 \r\nAdded 0 methods from profile. \r\nExecuting opt: \"C:\\a\\_work\\1\\s\\bin\\Release\\dotnet\\packs\\Microsoft.NETCore.App.Runtime.AOT.win-x64.Cross.android-x86\\8.0.0-preview.7.23359.1\\Sdk\\..\\tools\\opt\" -f -disable-tail-calls -passes=\u0027default\u003cO2\u003e,place-safepoints\u0027 -spp-all-backedges -o \"obj\\Release\\android-x86\\aot\\x86\\_Microsoft.Android.Resource.Designer\\temp.opt.bc\" \"obj\\Release\\android-x86\\aot\\x86\\_Microsoft.Android.Resource.Designer\\temp.bc\" \r\n```\r\n\r\n```\r\n: Precompiling failed for C:\\a\\_work\\1\\a\\TestRelease\\07-10_18.28.32\\temp\\BuildAot AndÜmläüts_armeabiv7ax86_True_True\\obj\\Release\\android-x86\\linked\\UnnamedProject.dll with exit code 1. \r\nThe system cannot find the file specified. \r\nAOT of image C:\\a\\_work\\1\\a\\TestRelease\\07-10_18.28.32\\temp\\BuildAot And├£ml├ñ├╝ts_armeabiv7ax86_True_True\\obj\\Release\\android-x86\\linked\\UnnamedProject.dll failed. \r\nMono Ahead of Time compiler - compiling assembly C:\\a\\_work\\1\\a\\TestRelease\\07-10_18.28.32\\temp\\BuildAot And├£ml├ñ├╝ts_armeabiv7ax86_True_True\\obj\\Release\\android-x86\\linked\\UnnamedProject.dll \r\nAOTID 1991E3CD-E6C4-BA31-1115-20CDEA468513 \r\nExecuting opt: \"C:\\a\\_work\\1\\s\\bin\\Release\\dotnet\\packs\\Microsoft.NETCore.App.Runtime.AOT.win-x64.Cross.android-x86\\8.0.0-preview.7.23359.1\\Sdk\\..\\tools\\opt\" -f -disable-tail-calls -passes=\u0027default\u003cO2\u003e,place-safepoints\u0027 -spp-all-backedges -o \"obj\\Release\\android-x86\\aot\\x86\\UnnamedProject\\temp.opt.bc\" \"obj\\Release\\android-x86\\aot\\x86\\UnnamedProject\\temp.bc\" \r\n```\r\n\r\n1. The first line in the output (after the `Precompiling failed..`) is `The system cannot find the file specified. `. This looks suspicious - is this from `mono-aot-cross`?\r\n2. The failure (of `Exec`) seems to be from `Executing opt` run by `mono-aot-cross`, but no output from that AFAICS.\r\n\r\nThe runtime changes in that PR are https://github.com/dotnet/runtime/compare/3e87528325...31106939ba .\r\n\r\nIt also includes b3d2503a06ff99104f91917077f9e2132118b27e - with the new `as-prefix` parameter, which is set via `AsPrefix` for the `MonoAOTCompiler` task. Does the same need to be passed to `MonoAOTCompiler` in:\r\n\r\nhttps://github.com/xamarin/xamarin-android/blob/a850d8147d6c1d066f3849e7cf8fab231497c64b/src/Xamarin.Android.Build.Tasks/Microsoft.Android.Sdk/targets/Microsoft.Android.Sdk.Aot.targets#L109-L130\r\n\r\ncc @steveisok ",
                                           "updatedAt":  "2023-07-11T06:05:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hMXt0",
                                           "createdAt":  "2023-07-11T11:13:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "`as-prefix` is optional and I don\u0027t think is something they need to set.\r\n\r\n@directhex could this possibly be related to LLVM changes?",
                                           "updatedAt":  "2023-07-11T11:13:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hNQmK",
                                           "createdAt":  "2023-07-11T13:46:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jonathanpeppers",
                                           "body":  "Sorry, forgot to post the `.binlog`: [aot.zip](https://github.com/dotnet/runtime/files/12015355/aot.zip) (to make it easier to find)\r\n\r\nIt appears that only this one test with `Ümläüts` in the project directory is failing on Windows. So AOT is working in other cases.",
                                           "updatedAt":  "2023-07-11T13:46:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hNhlf",
                                           "createdAt":  "2023-07-11T14:27:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "directhex",
                                           "body":  "Where can I most easily download a suitably equipped `.NET SDK 8.0.0-preview.7.23359.1` for windows to repro with?",
                                           "updatedAt":  "2023-07-11T14:27:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hNlVQ",
                                           "createdAt":  "2023-07-11T14:36:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jonathanpeppers",
                                           "body":  "I think the exact build from the PR above is: https://dotnetbuilds.azureedge.net/public/Sdk/8.0.100-preview.7.23360.1/dotnet-sdk-8.0.100-preview.7.23360.1-win-x64.exe\r\n\r\nThen you should be able to do:\r\n\r\n```\r\ndotnet workload install android --source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet8/nuget/v3/index.json --source https://api.nuget.org/v3/index.json\r\nmkdir \u0027BuildAot AndÜmläüts\u0027\r\ncd \u0027BuildAot AndÜmläüts\u0027\r\ndotnet new android\r\ndotnet build -c Release\r\n```\r\n^^ untested, but hopefully that repros?",
                                           "updatedAt":  "2023-07-11T14:36:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hOO-7",
                                           "createdAt":  "2023-07-11T16:20:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "directhex",
                                           "body":  "I can\u0027t satisfy myself that my environment is dependably \"correct\", but my testing seems to imply LLVM 16 is not the cause of issues.\r\n\r\nCan someone who isn\u0027t me:\r\n\r\n1. Repro the failures\r\n2. Repro (or not) the failures with `-p:EnableLLVM=false`\r\n3. Repro (or not) the failures in a new project in a folder with neither spaces nor non-ASCII symbols\r\n4. Repro (or not) the failures in a new project in a folder with neither spaces nor non-ASCII symbols with `-p:EnableLLVM=false`",
                                           "updatedAt":  "2023-07-11T16:20:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hQtEh",
                                           "createdAt":  "2023-07-12T02:45:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "I was able to confirm this has nothing to do with LLVM and has everything to do with the aot compiler not supporting non-ASCII symbols. @jonathanpeppers, I\u0027m not sure how this test passed before.\r\n\r\nThe problem in either case is that the aot compiler tries to `fopen` the assembler file and fails. Only the non-llvm path checks if the file handle is valid and reports if it is not. The llvm path seems to fall through and that\u0027s why you see `The system cannot find the file specified.`.\r\n\r\nThe fix would be to modify the aot compiler to support unicode files. I think that would be a pretty big, at the very least, validation task, so this is not something we can fix in the short term.",
                                           "updatedAt":  "2023-07-12T02:45:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hQvNw",
                                           "createdAt":  "2023-07-12T02:59:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "Would passing relative paths to the aot compiler help? Though I think we had some problems with that in the past. And it would help only with unicode chars in the containing project directory name.\r\n\r\nUpdate: and I can\u0027t say where it would fail next down the build pipeline!",
                                           "updatedAt":  "2023-07-12T03:00:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hTzoW",
                                           "createdAt":  "2023-07-12T13:58:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jonathanpeppers",
                                           "body":  "\u003e Would passing relative paths to the aot compiler help? \r\n\r\nI suspect this is how it somehow worked before. We\u0027ve had this test passing since 2020 or so: https://github.com/xamarin/xamarin-android/commit/28add0dddf34ba99a97bac77fcfd23eb9f4e1697\r\n\r\nMaybe something changed from a relative path to a full path recently?",
                                           "updatedAt":  "2023-07-12T13:58:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hT9ur",
                                           "createdAt":  "2023-07-12T14:22:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "\u003e \u003e Would passing relative paths to the aot compiler help?\r\n\u003e \r\n\u003e I suspect this is how it somehow worked before. We\u0027ve had this test passing since 2020 or so: [xamarin/xamarin-android/commit/28add0dddf34ba99a97bac77fcfd23eb9f4e1697](https://github.com/xamarin/xamarin-android/commit/28add0dddf34ba99a97bac77fcfd23eb9f4e1697)\r\n\u003e \r\n\u003e Maybe something changed from a relative path to a full path recently?\r\n\r\ncc @mdh1418 ",
                                           "updatedAt":  "2023-07-12T14:22:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hUCP8",
                                           "createdAt":  "2023-07-12T14:32:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "\u003e The problem in either case is that the aot compiler tries to `fopen` the assembler file and fails. Only the non-llvm path checks if the file handle is valid and reports if it is not. The llvm path seems to fall through and that\u0027s why you see `The system cannot find the file specified.`.\r\n\r\nCould you please point to the code for this? I\u0027m wondering what file is it trying to load, and how it got that path.\r\nAlso, at minimum I think the aot-compiler is fail at that point.\r\n",
                                           "updatedAt":  "2023-07-12T14:32:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hUN68",
                                           "createdAt":  "2023-07-12T14:53:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "\u003e Could you please point to the code for this? I\u0027m wondering what file is it trying to load, and how it got that path. Also, at minimum I think the aot-compiler is fail at that point.\r\n\r\nhttps://github.com/dotnet/runtime/blob/693eef6417353d45d126fa05365665bccf5b82d9/src/mono/mono/mini/aot-compiler.c#L15358-L15367\r\n",
                                           "updatedAt":  "2023-07-12T14:53:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hUPtz",
                                           "createdAt":  "2023-07-12T14:56:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "So `aot_opts.temp_path` then? This is what gets passed to the compiler:\r\n`temp-path=obj\\Release\\android-arm\\aot\\armeabi-v7a\\_Microsoft.Android.Resource.Designer`",
                                           "updatedAt":  "2023-07-12T14:56:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hUUQL",
                                           "createdAt":  "2023-07-12T15:06:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "I don\u0027t know why yet, but the unicode name ends up in the path.  For example:\r\n\r\n`Unable to open file \u0027obj\\Release\\net8.0-android\\android-x64\\aot\\x86_64\\BuildAot And├£ml├ñ├╝ts\\temp.s\u0027: No such file or directory`",
                                           "updatedAt":  "2023-07-12T15:06:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hUVm8",
                                           "createdAt":  "2023-07-12T15:09:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "https://github.com/dotnet/runtime/blob/693eef6417353d45d126fa05365665bccf5b82d9/src/mono/mono/mini/aot-compiler.c#L8776-L8777\r\n\r\nhttps://github.com/dotnet/runtime/blob/693eef6417353d45d126fa05365665bccf5b82d9/src/mono/mono/mini/aot-compiler.c#L8550-L8563",
                                           "updatedAt":  "2023-07-12T15:09:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hUWQu",
                                           "createdAt":  "2023-07-12T15:10:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "oh, sorry, I thought `clean_path` was making the path absolute.\r\n",
                                           "updatedAt":  "2023-07-12T15:10:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hUizY",
                                           "createdAt":  "2023-07-12T15:40:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "\u003e I don\u0027t know why yet, but the unicode name ends up in the path. For example:\r\n\u003e \r\n\u003e `Unable to open file \u0027obj\\Release\\net8.0-android\\android-x64\\aot\\x86_64\\BuildAot And├£ml├ñ├╝ts\\temp.s\u0027: No such file or directory`\r\n\r\nDo you have the binlog handy? I want to check `obj\\Release\\net8.0-android\\android-x64\\aot\\x86_64\\BuildAot And├£ml├ñ├╝ts\\` is being passed as `temp-path`, if so then something we could change in the task. Else, it is getting appended in aot-compiler somehow.",
                                           "updatedAt":  "2023-07-12T15:40:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hUqGg",
                                           "createdAt":  "2023-07-12T15:59:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODAfsJQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "radical",
                                                                               "createdAt":  "2023-07-12T16:15:04Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "steveisok",
                                           "body":  "@radical here you go.  @jonathanpeppers, I noticed the binlog you provided and the reproduction steps differ in that the latter will have a unicode named assembly and working directory versus just a unicode named working directory. I still think the end result is the same though.\r\n\r\n[llvm-and-nollvm-binlogs.zip](https://github.com/dotnet/runtime/files/12029939/llvm-and-nollvm-binlogs.zip)\r\n",
                                           "updatedAt":  "2023-07-12T15:59:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hUvV_",
                                           "createdAt":  "2023-07-12T16:12:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "So the MonoAOTCompiler is passing `temp-path=obj\\Release\\net8.0-android\\android-x86\\aot\\x86\\BuildAot AndÜmläüts` for compiling `obj\\Release\\net8.0-android\\android-x86\\linked\\BuildAot AndÜmläüts.dll`.\r\n\r\nWe could sanitize that temp path before passing it.. but I don\u0027t know what else the aot-compiler will get stuck on! I can\u0027t reproduce myself, so somebody else will have to try this.",
                                           "updatedAt":  "2023-07-12T16:12:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hUzba",
                                           "createdAt":  "2023-07-12T16:20:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jonathanpeppers",
                                           "body":  "Our test might be setting something like `AssemblyName=UnnamedProject`, and using `dotnet new` wouldn\u0027t do that.\r\n\r\nI would focus on just the project directory being the issue -- as customers a lot of the time will have something like `C:\\Users\\MyNameäü\\Desktop\\Code` in project paths.",
                                           "updatedAt":  "2023-07-12T16:20:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hU0Zn",
                                           "createdAt":  "2023-07-12T16:23:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "\u003e Our test might be setting something like `AssemblyName=UnnamedProject`, and using `dotnet new` wouldn\u0027t do that.\r\n\u003e \r\n\u003e I would focus on just the project directory being the issue -- as customers a lot of the time will have something like `C:\\Users\\MyNameäü\\Desktop\\Code` in project paths.\r\n\r\nHow does that case fail? project directory `C:\\Users\\MyNameäü\\Desktop\\Code`, and no assemblies with unicode chars.\r\nDo you have a binlog for that?",
                                           "updatedAt":  "2023-07-12T16:23:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hU15g",
                                           "createdAt":  "2023-07-12T16:28:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jonathanpeppers",
                                           "body":  "It is the `aot.zip` above, I got it from our CI.\r\n\r\n* Project is `C:\\a\\_work\\1\\a\\TestRelease\\07-10_18.28.32\\temp\\BuildAot AndÜmläüts_armeabiv7ax86_True_True\\UnnamedProject.csproj`\r\n* `\u003cAssemblyName\u003eUnnamedProject\u003c/AssemblyName\u003e`\r\n* Assembly is `obj\\Release\\android-arm\\linked\\UnnamedProject.dll`\r\n* WorkingDirectory = `C:\\a\\_work\\1\\a\\TestRelease\\07-10_18.28.32\\temp\\BuildAot AndÜmläüts_armeabiv7ax86_True_True`\r\n\r\n",
                                           "updatedAt":  "2023-07-12T16:28:01Z"
                                       }
                                   ],
                         "totalCount":  23
                     },
        "title":  "Android: AOT compiler fails on Windows in directory named `BuildAot AndÜmläüts`",
        "labels":  [
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/89402",
        "createdAt":  "2023-07-24T19:52:12Z",
        "number":  89402,
        "author":  "pavelsavara",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T03:01:20Z",
        "body":  "Build: https://dev.azure.com/dnceng-public/public/_build/results?buildId=653707\r\n\r\n### Error Blob\r\n\r\n```json\r\n{\r\n  \"BuildRetry\": false,\r\n  \"ErrorPattern\": [\"emcc\", \"SIGKILL\"],\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\n\r\n\r\n### Reproduction Steps\r\n\r\nAOT wasm Microsoft.Extensions.Options.SourceGeneration.Unit.Tests\r\n\r\n[Log](https://helixre107v0xdcypoyl9e7f.blob.core.windows.net/dotnet-runtime-refs-pull-88052-merge-40703ea5c14443c2ad/normal-Microsoft.Extensions.Options.SourceGeneration.Unit.Tests/1/console.503eccf2.log?helixlogtype=result)\r\n\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=653707\r\n**Error message validated:** `[emcc SIGKILL`]\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 4/25/2024 7:29:32 AM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n\r\n|Build|Definition|Test|Pull Request|\r\n|---|---|---|---|\r\n|[1146616](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146616)|dotnet/runtime|[normal-Microsoft.Extensions.Options.SourceGeneration.Unit.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146616\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31641900\u0026resultId=163477)||\r\n|[1145381](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145381)|dotnet/runtime|[normal-Microsoft.Extensions.Options.SourceGeneration.Unit.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145381\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31600102\u0026resultId=163477)||\r\n|[1140894](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140894)|dotnet/runtime|[normal-Microsoft.Extensions.Options.SourceGeneration.Unit.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140894\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31436304\u0026resultId=163477)||\r\n|[1140676](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140676)|dotnet/runtime|[normal-Microsoft.Extensions.Options.SourceGeneration.Unit.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140676\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31428740\u0026resultId=163477)||\r\n|[1139243](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139243)|dotnet/runtime|[normal-Microsoft.Extensions.Options.SourceGeneration.Unit.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139243\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31387558\u0026resultId=163477)||\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|5|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOu2_lqw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5iQlqN",
                                           "createdAt":  "2023-07-24T19:52:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Error Blob\n\n```json\r\n{\r\n  \"BuildRetry\": false,\r\n  \"ErrorPattern\": \"emcc.*SIGKILL\",\r\n  \"ExcludeConsoleLog\": true\r\n}\r\n```\r\n\n\n### Reproduction Steps\n\nAOT wasm Microsoft.Extensions.Options.SourceGeneration.Unit.Tests\r\n\r\n[Log](https://helixre107v0xdcypoyl9e7f.blob.core.windows.net/dotnet-runtime-refs-pull-88052-merge-40703ea5c14443c2ad/normal-Microsoft.Extensions.Options.SourceGeneration.Unit.Tests/1/console.503eccf2.log?helixlogtype=result)\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003epavelsavara\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-wasm`, `blocking-clean-ci`, `area-Codegen-AOT-mono`, `wasm-aot-test`, `Known Build Error`, `os-browser`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e8.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-07-24T19:52:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5iQuDJ",
                                           "createdAt":  "2023-07-24T20:21:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "Is this it hitting the ulimit of the container?",
                                           "updatedAt":  "2023-07-24T20:21:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5iRZsJ",
                                           "createdAt":  "2023-07-24T22:51:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "```\r\n[ 7455.672962] [ 2825] 1000 2825 158937 41558 684032 0 0 python3 \r\n[ 7455.672964] [ 4160] 102 4160 67335 453 180224 0 0 rsyslogd \r\n[ 7455.672966] [ 4181] 0 4181 455864 16951 634880 0 0 amacoreagent \r\n[ 7455.672968] [ 4453] 0 4453 298556 3977 249856 0 0 auoms \r\n[ 7455.672969] [ 4495] 0 4495 215902 6240 204800 0 0 auomscollect \r\n[ 7455.672971] [ 4750] 102 4750 191707 14176 622592 0 0 mdsd \r\n[ 7455.672973] [ 4967] 0 4967 334103 3030 253952 0 0 azsecd \r\n[ 7455.672975] [ 5046] 0 5046 352600 4193 270336 0 0 azsecmond \r\n[ 7455.672977] [ 32457] 0 32457 317321 3577 258048 0 0 azsecd \r\n[ 7455.672979] [ 2226] 0 2226 376486 334278 2924544 0 0 clamscan \r\n[ 7455.672981] [ 22067] 0 22067 180189 824 114688 0 -998 containerd-shim \r\n[ 7455.672983] [ 22089] 1000 22089 1159 16 57344 0 0 helix_docker_wo \r\n[ 7455.672985] [ 22156] 1000 22156 1159 17 53248 0 0 execute.sh \r\n[ 7455.672987] [ 22212] 1000 22212 5047 87 81920 0 0 bash \r\n[ 7455.672989] [ 22215] 1000 22215 68517493 67031 1163264 0 0 dotnet \r\n[ 7455.672990] [ 23320] 1000 23320 1159 17 61440 0 0 sh \r\n[ 7455.672992] [ 23321] 1000 23321 34332 22818 335872 0 0 python3 \r\n[ 7455.672994] [ 23345] 1000 23345 1420573 1386396 11264000 0 0 wasm-opt \r\n[ 7455.672995] oom-kill:constraint=CONSTRAINT_NONE,nodemask=(null),cpuset=/,mems_allowed=0,global_oom,task_memcg=/docker/a2a4080691301bb74e3b282eab0b6f638e9d6f1227e62967b7fd46654706e554,task=wasm-opt,pid=23345,uid=1000 \r\n[ 7455.673018] Out of memory: Killed process 23345 (wasm-opt) total-vm:5682292kB, anon-rss:5545584kB, file-rss:0kB, shmem-rss:0kB, UID:1000 pgtables:11000kB oom_score_adj:0\r\n```",
                                           "updatedAt":  "2023-07-24T22:51:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5iWLcG",
                                           "createdAt":  "2023-07-25T14:44:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "lets disable these tests in aot for now\r\n",
                                           "updatedAt":  "2023-07-25T14:44:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5j6RE5",
                                           "createdAt":  "2023-08-13T04:14:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "closting as a duplicate of https://github.com/dotnet/dnceng/issues/450",
                                           "updatedAt":  "2023-08-13T04:14:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc55Jp2P",
                                           "createdAt":  "2024-04-02T16:55:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "I see this again https://helixre107v0xdcypoyl9e7f.blob.core.windows.net/dotnet-runtime-refs-pull-99833-merge-af0760c542d34f95a8/normal-System.Runtime.Tests/1/console.f849dad3.log?helixlogtype=result",
                                           "updatedAt":  "2024-04-02T16:55:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc57ui4P",
                                           "createdAt":  "2024-04-24T20:37:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "Analysis claims there are recent failures but the links are not updated?",
                                           "updatedAt":  "2024-04-24T20:37:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc57xcnp",
                                           "createdAt":  "2024-04-25T07:36:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "we run most of those problematic cases only in runtime-wasm pipeline. Which needs to be triggered manually.\r\nI updated the filter",
                                           "updatedAt":  "2024-04-25T07:36:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6eMt_F",
                                           "createdAt":  "2025-02-12T15:54:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "all the recent failures I looked at are in wasm-opt which is known to have pretty degenerate memory behavior when linking with debug symbols.  I think we should investigate what we can do here.  @radekdoulik lets discuss offline",
                                           "updatedAt":  "2025-02-12T15:54:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6jjELK",
                                           "createdAt":  "2025-03-21T16:28:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "we hope to see this ramp down now after #113755 ",
                                           "updatedAt":  "2025-03-21T16:28:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6jjjPR",
                                           "createdAt":  "2025-03-21T17:26:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "Maybe we will need to go down to `-O0`, I think I saw SIGKILL after #113755 , now we are at `-O2`",
                                           "updatedAt":  "2025-03-21T17:26:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6n1qdu",
                                           "createdAt":  "2025-04-18T17:07:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "\u003e all the recent failures I looked at are in wasm-opt which is known to have pretty degenerate memory behavior when linking with debug symbols. I think we should investigate what we can do here. [@radekdoulik](https://github.com/radekdoulik) lets discuss offline\n\nhttps://github.com/dotnet/runtime/pull/114805 seems to indicate it does help.",
                                           "updatedAt":  "2025-04-18T17:07:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc67b-Wr",
                                           "createdAt":  "2025-08-01T13:53:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "\u003e [#114805](https://github.com/dotnet/runtime/pull/114805) seems to indicate it does help.\n\nLast few hits are on 8.0 branches, which didn\u0027t receive https://github.com/dotnet/runtime/pull/115624 yet",
                                           "updatedAt":  "2025-08-01T13:55:02Z"
                                       }
                                   ],
                         "totalCount":  13
                     },
        "title":  "[wasm][AOT][net8.0] emcc : error - received SIGKILL (-9)",
        "labels":  [
                       "arch-wasm",
                       "area-Codegen-AOT-mono",
                       "wasm-aot-test",
                       "Known Build Error",
                       "os-browser"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/89613",
        "createdAt":  "2023-07-28T02:37:51Z",
        "number":  89613,
        "author":  "vargaz",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-08-06T18:23:53Z",
        "body":  "### Description\n\nCurrently, the mono generic sharing code has issues with nested structures.\r\n\r\nExample:\r\n```\r\nstatic void Write\u003cT\u003e(ref byte b, T value) =\u003e Unsafe.WriteUnaligned\u003cT\u003e(ref b, value);\r\n```\r\n\r\nIf we try to aot an instance like ```Write\u003cAStruct\u003cstring\u003e\u003e```, the generic sharing code will aot ```Write\u003cT_STRUCT\u003e```,\r\nthere ```T_STRUCT``` is a synthetic generic parameter constrained to ```AStruct\u003cT_REF\u003e``` where T_REF is a similar parameter constrained to reference types.\r\n\r\nProblems can arise if the JIT replaces``` T_STRUCT``` with ```AStruct\u003cT_REF\u003e``` during JITing, which is done for example by ```mini_get_underlying_type ()```. The generic sharing runtime code will expand T_STRUCT to ```AStruct\u003cstring\u003e```, but it will not do the same for ```AStruct\u003cT_REF\u003e``` leading to problems.\r\nThe current workaround is to disable generic sharing, i.e. by setting cfg-\u003eprefer_instances.\r\n\r\nRe: https://github.com/dotnet/runtime/pull/89417\n\n### Reproduction Steps\n\n.\n\n### Expected behavior\n\n.\n\n### Actual behavior\n\n.\n\n### Regression?\n\nNo.\r\n\n\n### Known Workarounds\n\n.\n\n### Configuration\n\ndotnet/runtime master\r\n\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "[mono] Issues with handling nested generic structures during generic sharing",
        "labels":  [
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/90372",
        "createdAt":  "2023-08-11T08:40:22Z",
        "number":  90372,
        "author":  "jakobbotsch",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-05-21T16:25:57Z",
        "body":  "This test is currently disabled in issues.targets with the reason \"Fuzzlyn\". ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOZGBpFw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5kYGkX",
                                           "createdAt":  "2023-08-18T14:54:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivanpovazan",
                                           "body":  "This has the same underlying issue as: https://github.com/dotnet/runtime/issues/90374 \r\nMono full AOT currently does not support loading AOT images for assemblies from non-default ALCs.\r\n\r\nFWIW, switching the test to use `AssemblyLoadContext.Default` instead of `CollectibleALC` could be a workaround solution.\r\n",
                                           "updatedAt":  "2023-08-18T14:54:37Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Runtime_76273 fails on Mono",
        "labels":  [
                       "disabled-test",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/90374",
        "createdAt":  "2023-08-11T08:52:21Z",
        "number":  90374,
        "author":  "jakobbotsch",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-05-21T16:26:01Z",
        "body":  "The test being added in #90318 fails on Mono in full AOT mode:\r\n\r\n```scala\r\n22:14:29.962 Running test: JIT/Regression/JitBlue/Runtime_90219/Runtime_90219/Runtime_90219.dll\r\nSystem.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.\r\n ---\u003e System.NullReferenceException: Object reference not set to an instance of an object\r\n   at Runtime_90219.MainInner(IRuntime rt)\r\n   at System.Reflection.MethodBaseInvoker.InterpretedInvoke_Method(Object obj, IntPtr* args)\r\n   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)\r\n   --- End of inner exception stack trace ---\r\n   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)\r\n   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)\r\n   at Runtime_90219.TestEntryPoint()\r\n   at Program.\u003c\u003cMain\u003e$\u003eg__TestExecutor335|0_336(StreamWriter tempLogSw, StreamWriter statsCsvSw, \u003c\u003ec__DisplayClass0_0\u0026 )\r\n```\r\n\r\nhttps://dev.azure.com/dnceng-public/public/_build/results?buildId=370197\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=7857242\u0026paneView=debug",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOZF_R_Q==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5kKy3N",
                                           "createdAt":  "2023-08-16T12:54:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivanpovazan",
                                           "body":  "By analysing the provided CI build and reproducing locally this seems to only fail in full AOT mode.\r\n\r\nThe tests passes on: `osx-x64 Release AllSubsets_Mono_Minijit_RuntimeTests minijit`  https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-90318-merge-cedc27ee86b44aab89/Regression_2/1/Regression_2.testResults.xml.txt?helixlogtype=result\r\n```xml\r\n\u003ctest name=\"JIT/Regression/JitBlue/Runtime_90219/Runtime_90219/Runtime_90219.dll\" type=\"Runtime_90219\" method=\"TestEntryPoint\" time=\"0.004416\" result=\"Pass\"\u003e\u003c/test\u003e\r\n```\r\n",
                                           "updatedAt":  "2023-08-16T12:54:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5kLuDH",
                                           "createdAt":  "2023-08-16T15:07:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivanpovazan",
                                           "body":  "The crash seems to be related to using custom `AssemblyLoadContext` in fullAOT mode with Mono, which doesn\u0027t seem to initialize static members of the reflected type properly. Using the default ALC `AssemblyLoadContext.Default` works properly.\r\n \r\n A smaller repro:\r\n ```cs\r\nusing System;\r\nusing System.Reflection;\r\nusing System.Runtime.Loader;\r\n\r\nnamespace HelloWorld\r\n{\r\n    public class CustomAssemblyLoadContext : AssemblyLoadContext\r\n    {\r\n        public CustomAssemblyLoadContext(): base(true)\r\n        {\r\n        }\r\n    }\r\n    internal class Program\r\n    {\r\n\r\n        private static void Main(string[] args)\r\n        {\r\n            // This does not crash when we use AssemblyLoadContext.Default\r\n            var customAlc = new CustomAssemblyLoadContext();\r\n            Test(customAlc);\r\n        }\r\n\r\n        public static void Test(AssemblyLoadContext alc)\r\n        {\r\n            var asm = alc.LoadFromAssemblyPath(System.Reflection.Assembly.GetExecutingAssembly().Location);\r\n            var mi = asm.GetType(typeof(Program).FullName).GetMethod(nameof(MyMethod));\r\n            var pass = (bool)mi.Invoke(null, null);\r\n            if (pass)\r\n                Console.WriteLine(\"pass\");\r\n            else\r\n                Console.WriteLine(\"fail\");\r\n        }\r\n\r\n        public static byte TheByte = 42;\r\n        public static bool MyMethod()\r\n        {\r\n            var aByte = TheByte;\r\n            Console.WriteLine($\"aByte: {aByte}\");\r\n            return (int) aByte == 42;\r\n        }\r\n    }\r\n}\r\n ```\r\n \r\n Running the above in full AOT mode prints:\r\n ```\r\naByte: 0\r\nfail\r\n ```",
                                           "updatedAt":  "2023-08-18T12:54:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5kXuyE",
                                           "createdAt":  "2023-08-18T13:43:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivanpovazan",
                                           "body":  "@vargaz do we support loading AOT images for assemblies from non-default ALC?",
                                           "updatedAt":  "2023-08-18T13:43:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5kXvVz",
                                           "createdAt":  "2023-08-18T13:45:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODEDcMw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ivanpovazan",
                                                                               "createdAt":  "2023-08-18T13:49:14Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "It\u0027s a collectible ALC. So it looks like we reall dont\u0027 support it.\r\n\r\nhttps://github.com/dotnet/runtime/blob/5ef2a9bf5cb29a5244929a357180f45a20dfbefd/src/mono/mono/mini/aot-runtime.c#L1965-L1970\r\n\r\nI think that `Invoke` should throw something instead of allowing the method to execute somehow\r\n\r\n*Update* but on the other hand, we apparently turn all ALCs into non-collectible ALCs??\r\n\r\nhttps://github.com/dotnet/runtime/blob/5ef2a9bf5cb29a5244929a357180f45a20dfbefd/src/mono/mono/metadata/assembly-load-context.c#L43\r\n\r\n",
                                           "updatedAt":  "2023-08-18T13:48:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5kX9H9",
                                           "createdAt":  "2023-08-18T14:26:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "I think `load_image` in aot-runtime.c shouldn\u0027t use `mono_alc_get_ambient()` which always just returns `mono_alc_get_default()`.  It should use the ALC of the AOT image\u0027s module.\r\n\r\nbecause in `decode_klass_ref` we do this:\r\n\r\n```c\r\n case MONO_AOT_TYPEREF_TYPEDEF_INDEX:\r\n        idx = decode_value (p, \u0026p);\r\n        image = load_image (module, 0, error);\r\n        if (!image)\r\n            return NULL;\r\n        klass = mono_class_get_checked (image, MONO_TOKEN_TYPE_DEF + idx, error);\r\n        break;\r\n    case MONO_AOT_TYPEREF_TYPEDEF_INDEX_IMAGE:\r\n        idx = decode_value (p, \u0026p);\r\n        image = load_image (module, decode_value (p, \u0026p), error);\r\n        if (!image)\r\n            return NULL;\r\n        klass = mono_class_get_checked (image, MONO_TOKEN_TYPE_DEF + idx, error);\r\n        break;\r\n```\r\n\r\nso we always end up with a reference to the `MonoClass*` from the default ALC.  So I bet when we go to initialize static fields, we share the runtime vtable of the default ALC\r\n",
                                           "updatedAt":  "2023-08-18T14:26:56Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Runtime_90219 fails on Mono",
        "labels":  [
                       "disabled-test",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/90399",
        "createdAt":  "2023-08-11T15:01:37Z",
        "number":  90399,
        "author":  "mdh1418",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-06-28T14:12:42Z",
        "body":  "As discovered in https://github.com/dotnet/runtime/pull/90336, the Mono AOT Compiler does not support leading compressed PE files as it will [only check for the leading `MZ` bytes](https://github.com/dotnet/runtime/blob/15e89256b7f35b839725cefc9a8180b917573cdc/src/mono/mono/metadata/image.c#L1148-L1153) to [determine if an image is valid](https://github.com/dotnet/runtime/blob/15e89256b7f35b839725cefc9a8180b917573cdc/src/mono/mono/metadata/image.c#L1220-L1231). This issue starts the discussion of whether or not we should support loading compressed PE files, and if we should, should decompression occur in the managed side or the native side.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOY9VzXQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5j1XNd",
                                           "createdAt":  "2023-08-11T15:02:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mdh1418",
                                           "body":  "/cc: @akoeplinger @steveisok @lambdageek @vargaz ",
                                           "updatedAt":  "2023-08-11T15:02:22Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "[mono] Add support to load compressed PE files",
        "labels":  [
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/93788",
        "createdAt":  "2023-10-20T19:21:07Z",
        "number":  93788,
        "author":  "pjcollins",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-03-22T20:15:21Z",
        "body":  "### Description\n\nThis issue is not present when building on macOS, however Android build attempts with profiled AOT and LLVM are failing on Windows with .NET 8. For more context, I believe a somewhat related fix was made in https://github.com/dotnet/runtime/pull/71411.\n\n### Reproduction Steps\n\n   dotnet new android -o androidtest\r\n   dotnet build -v:n androidtest\\androidtest.csproj -c Release -p:EnableLLVM=true -p:AndroidEnableProfiledAot=true\r\n\n\n### Expected behavior\n\nAttempts to build with profiled AOT and LLVM succeed.\n\n### Actual behavior\n\nThe build fails:\r\n\r\n```\r\nC:\\a\\_work\\1\\s\\bin\\Release\\dotnet\\packs\\Microsoft.Android.Sdk.Windows\\34.99.0-ci.pr.gh8441.26\\targets\\Microsoft.Android.Sdk.Aot.targets(109,5): error : Precompiling failed for C:\\a\\_work\\1\\a\\TestRelease\\10-20_03.00.43\\temp\\BuildBasicApplicationReleaseProfiledAotTrue\\obj\\Release\\android-arm\\linked\\_Microsoft.Android.Resource.Designer.dll with exit code 1. [C:\\a\\_work\\1\\a\\TestRelease\\10-20_03.00.43\\temp\\BuildBasicApplicationReleaseProfiledAotTrue\\UnnamedProject.csproj]\r\nC:\\a\\_work\\1\\s\\bin\\Release\\dotnet\\packs\\Microsoft.Android.Sdk.Windows\\34.99.0-ci.pr.gh8441.26\\targets\\Microsoft.Android.Sdk.Aot.targets(109,5): error : The system cannot find the file specified. [C:\\a\\_work\\1\\a\\TestRelease\\10-20_03.00.43\\temp\\BuildBasicApplicationReleaseProfiledAotTrue\\UnnamedProject.csproj]\r\nC:\\a\\_work\\1\\s\\bin\\Release\\dotnet\\packs\\Microsoft.Android.Sdk.Windows\\34.99.0-ci.pr.gh8441.26\\targets\\Microsoft.Android.Sdk.Aot.targets(109,5): error : AOT of image C:\\a\\_work\\1\\a\\TestRelease\\10-20_03.00.43\\temp\\BuildBasicApplicationReleaseProfiledAotTrue\\obj\\Release\\android-arm\\linked\\_Microsoft.Android.Resource.Designer.dll failed. [C:\\a\\_work\\1\\a\\TestRelease\\10-20_03.00.43\\temp\\BuildBasicApplicationReleaseProfiledAotTrue\\UnnamedProject.csproj]\r\n```\r\n\r\n[build.binlog.zip](https://github.com/dotnet/runtime/files/13057876/build.binlog.zip)\r\n\r\n\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n.NET SDK:\r\n Version:   8.0.100-rc.2.23468.1\r\n Commit:    e1fd7d9649\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.22621\r\n OS Platform: Windows\r\n RID:         win-x64\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOak1-1Q==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5qTHdo",
                                           "createdAt":  "2023-10-27T19:20:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SamMonoRT",
                                           "body":  "cc @fanyang-mono @jonathanpeppers ",
                                           "updatedAt":  "2023-10-27T19:20:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5qTIAb",
                                           "createdAt":  "2023-10-27T19:22:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SamMonoRT",
                                           "body":  "cc @vargaz ",
                                           "updatedAt":  "2023-10-27T19:22:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5qTX7V",
                                           "createdAt":  "2023-10-27T20:23:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vargaz",
                                           "body":  "From the binlog:\r\n```\r\n[UnnamedProject.dll] Exec (with response file contents expanded) in C:\\a\\_work\\1\\a\\TestRelease\\10-20_03.00.43\\temp\\BuildBasicApplicationReleaseProfiledAotTrue: MONO_PATH=C:\\a\\_work\\1\\a\\TestRelease\\10-20_03.00.43\\temp\\BuildBasicApplicationReleaseProfiledAotTrue\\obj\\Release\\android-arm\\linked; MONO_ENV_OPTIONS= C:\\a\\_work\\1\\s\\bin\\Release\\dotnet\\packs\\Microsoft.NETCore.App.Runtime.AOT.win-x64.Cross.android-arm\\8.0.0-rc.2.23466.4\\Sdk\\..\\tools\\mono-aot-cross.exe --verbose --debug --llvm \"--aot=asmwriter,temp-path=obj\\Release\\android-arm\\aot\\armeabi-v7a\\UnnamedProject,nodebug,llvm-path=C:\\a\\_work\\1\\s\\bin\\Release\\dotnet\\packs\\Microsoft.NETCore.App.Runtime.AOT.win-x64.Cross.android-arm\\8.0.0-rc.2.23466.4\\Sdk\\..\\tools,mtriple=armv7-linux-gnueabi,tool-prefix=C:\\a\\_work\\1\\s\\bin\\Release\\dotnet\\packs\\Microsoft.Android.Sdk.Windows\\34.99.0-ci.pr.gh8441.26\\tools\\binutils\\bin\\arm-linux-androideabi-,outfile=obj\\Release\\android-arm\\aot\\UnnamedProject.dll.so,llvm-outfile=obj\\Release\\android-arm\\aot\\UnnamedProject.dll-llvm.o,temp-path=obj\\Release\\android-arm\\UnnamedProject.dll.tmp,ld-name=ld,ld-flags=\\\"C:\\a\\_work\\1\\s\\bin\\Release\\dotnet\\packs\\Microsoft.Android.Sdk.Windows\\34.99.0-ci.pr.gh8441.26\\tools\\libstubs\\android-arm\\libc.so\\\";\\\"C:\\a\\_work\\1\\s\\bin\\Release\\dotnet\\packs\\Microsoft.Android.Sdk.Windows\\34.99.0-ci.pr.gh8441.26\\tools\\libstubs\\android-arm\\libm.so\\\" --no-relax -s\" \"obj\\Release\\android-arm\\linked\\UnnamedProject.dll\"\r\n```\r\n\r\n```\r\nPrecompiling failed for C:\\a\\_work\\1\\a\\TestRelease\\10-20_03.00.43\\temp\\BuildBasicApplicationReleaseProfiledAotTrue\\obj\\Release\\android-arm\\linked\\_Microsoft.Android.Resource.Designer.dll with exit code 1.\r\nThe system cannot find the file specified.\r\nAOT of image C:\\a\\_work\\1\\a\\TestRelease\\10-20_03.00.43\\temp\\BuildBasicApplicationReleaseProfiledAotTrue\\obj\\Release\\android-arm\\linked\\_Microsoft.Android.Resource.Designer.dll failed.\r\nMono Ahead of Time compiler - compiling assembly C:\\a\\_work\\1\\a\\TestRelease\\10-20_03.00.43\\temp\\BuildBasicApplicationReleaseProfiledAotTrue\\obj\\Release\\android-arm\\linked\\_Microsoft.Android.Resource.Designer.dll\r\nAOTID D48A276C-B0DE-787D-E020-02528F6E75E6\r\nUsing profile data file \u0027C:\\a\\_work\\1\\s\\bin\\Release\\dotnet\\packs\\Microsoft.Android.Sdk.Windows\\34.99.0-ci.pr.gh8441.26\\targets\\dotnet.aotprofile\u0027\r\nAdded 0 methods from profile.\r\nExecuting opt: \"C:\\a\\_work\\1\\s\\bin\\Release\\dotnet\\packs\\Microsoft.NETCore.App.Runtime.AOT.win-x64.Cross.android-arm\\8.0.0-rc.2.23466.4\\Sdk\\..\\tools\\opt\" -f -disable-tail-calls -passes=\u0027default\u003cO2\u003e,place-safepoints\u0027 -spp-all-backedges -o \"obj\\Release\\android-arm\\_Microsoft.Android.Resource.Designer.dll.tmp\\temp.opt.bc\" \"obj\\Release\\android-arm\\_Microsoft.Android.Resource.Designer.dll.tmp\\temp.bc\"\r\n```\r\n\r\nNot exactly clear what process failed and what file is not found.",
                                           "updatedAt":  "2023-10-27T20:23:34Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Unable to build Android app on Windows with profiled AOT and EnableLLVM=true ",
        "labels":  [
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/93852",
        "createdAt":  "2023-10-23T10:30:37Z",
        "number":  93852,
        "author":  "kotlarmilos",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-06-19T10:22:45Z",
        "body":  "## Description\r\n\r\nThis PR disables failing tests on Apple mobile platforms. The following library tests consistently fail on tvOS, reporting the tcp connection issue:\r\n`System.Reflection.InvokeEmit.Tests`\r\n`System.Reflection.InvokeInterpreted.Tests`\r\n\r\nThe `System.Threading.Tasks.Parallel` tests fail with exit code 4, which may indicate permissions issue, possibly related to tests attempting to access the disk. Additionally, the `System.Security.Cryptography` tests report timeout.\r\n\r\nThe `System.Reflection` tests fail locally with the SIGSEGV error.\r\n```\r\n* thread #12, name = \u0027.NET TP Worker\u0027, stop reason = signal SIGSEGV\r\n    frame #0: 0x0000004d10000010\r\n    frame #1: 0x000000010d9589a4 System.Reflection.InvokeEmit.Tests`System_Reflection_Tests_FunctionPointerMethods_CallFcnPtr_FP___int(fn=268435472, value=42) at MethodInfoTests.cs:1104\r\n    frame #2: 0x000000010c08eef8 System.Reflection.InvokeEmit.Tests`wrapper_runtime_invoke_object_runtime_invoke_dynamic_intptr_intptr_intptr_intptr + 296\r\n    frame #3: 0x0000000104952f74 System.Reflection.InvokeEmit.Tests`mono_jit_runtime_invoke(method=\u003cunavailable\u003e, obj=\u003cunavailable\u003e, params=\u003cunavailable\u003e, exc=\u003cunavailable\u003e, error=0x000000016bfc7570) at mini-runtime.c:3634:3 [opt]\r\n    frame #4: 0x00000001048efa78 System.Reflection.InvokeEmit.Tests`mono_runtime_invoke_checked [inlined] do_runtime_invoke(method=0x000000013c41faa8, obj=0x0000000000000000, params=0x000000016bfc74a0, exc=0x0000000000000000, error=0x000000016bfc7570) at object.c:2541:11 [opt]\r\n    frame #5: 0x00000001048efa3c System.Reflection.InvokeEmit.Tests`mono_runtime_invoke_checked(method=0x000000013c41faa8, obj=0x0000000000000000, params=0x000000016bfc74a0, error=0x000000016bfc7570) at object.c:2757:9 [opt]\r\n  * frame #6: 0x00000001048f8b70 System.Reflection.InvokeEmit.Tests`mono_runtime_try_invoke_byrefs(method=0x000000013c41faa8, obj=\u003cunavailable\u003e, params_byref=0x000000016bfc7760, exc=0x0000000000000000, error=0x000000016bfc7570) at object.c:5166:16 [opt]\r\n    frame #7: 0x00000001048aed8c System.Reflection.InvokeEmit.Tests`ves_icall_InternalInvoke(method_handle=\u003cunavailable\u003e, this_arg_handle=\u003cunavailable\u003e, params_byref=0x000000016bfc7760, exception_out=MonoExceptionHandleOut @ x22, error=0x000000016bfc7570) at icall.c:3616:11 [opt]\r\n    frame #8: 0x00000001048b9788 System.Reflection.InvokeEmit.Tests`ves_icall_InternalInvoke_raw(a0=0x000000016bfc7620, a1=0x000000016bfc7628, a2=0x000000016bfc7760, a3=0x000000016bfc76a8) at icall-def.h:371:1 [opt]\r\n    frame #9: 0x000000010b318160 System.Reflection.InvokeEmit.Tests`wrapper_managed_to_native_System_Reflection_RuntimeMethodInfo_InternalInvoke_System_Reflection_RuntimeMethodInfo_object_intptr__System_Exception_ + 160\r\n    frame #10: 0x000000010b30bb78 System.Reflection.InvokeEmit.Tests`System_Reflection_MethodInvoker_InterpretedInvoke_Method_object_intptr_ + 120\r\n    frame #11: 0x000000010b30d200 System.Reflection.InvokeEmit.Tests`System_Reflection_MethodInvoker_InvokeDirectByRefWithFewArgs_object_System_Span_1_object + 416\r\n    frame #12: 0x000000010b30d040 System.Reflection.InvokeEmit.Tests`System_Reflection_MethodInvoker_InvokeDirectByRef_object_object_object_object_object + 176\r\n    frame #13: 0x000000010b30c5d0 System.Reflection.InvokeEmit.Tests`System_Reflection_MethodInvoker_InvokeImpl_object_object_object_object_object + 1104\r\n    frame #14: 0x000000010b30c750 System.Reflection.InvokeEmit.Tests`System_Reflection_MethodInvoker_Invoke_object_System_Span_1_object + 336\r\n    frame #15: 0x000000010d958bbc System.Reflection.InvokeEmit.Tests`System_Reflection_Tests_MethodInvokerTests_Invoke_System_Reflection_MethodInfo_object_object__(this=\u003cunavailable\u003e, methodInfo=0x000000011dcbb230, obj=0x000000016bfc7938, parameters=0x000000011dcbb1d0) at MethodInvokerTests.cs:16\r\n    frame #16: 0x000000010d952c18 System.Reflection.InvokeEmit.Tests`System_Reflection_Tests_MethodCommonTests_TestFunctionPointerAsArgType(this=0x000000011dcb9c88) at MethodCommonTests.cs:284\r\n    frame #17: 0x000000010c08eef8 System.Reflection.InvokeEmit.Tests`wrapper_runtime_invoke_object_runtime_invoke_dynamic_intptr_intptr_intptr_intptr + 296\r\n    frame #18: 0x0000000104952f74 System.Reflection.InvokeEmit.Tests`mono_jit_runtime_invoke(method=\u003cunavailable\u003e, obj=\u003cunavailable\u003e, params=\u003cunavailable\u003e, exc=\u003cunavailable\u003e, error=0x000000016bfc8090) at mini-runtime.c:3634:3 [opt]\r\n    frame #19: 0x00000001048efa78 System.Reflection.InvokeEmit.Tests`mono_runtime_invoke_checked [inlined] do_runtime_invoke(method=0x000000013c322f40, obj=0x000000011dcb9c88, params=0x0000000000000000, exc=0x0000000000000000, error=0x000000016bfc8090) at object.c:2541:11 [opt]\r\n    frame #20: 0x00000001048efa3c System.Reflection.InvokeEmit.Tests`mono_runtime_invoke_checked(method=0x000000013c322f40, obj=0x000000011dcb9c88, params=0x0000000000000000, error=0x000000016bfc8090) at object.c:2757:9 [opt]\r\n    frame #21: 0x00000001048f8b70 System.Reflection.InvokeEmit.Tests`mono_runtime_try_invoke_byrefs(method=0x000000013c322f40, obj=\u003cunavailable\u003e, params_byref=0x0000000000000000, exc=0x0000000000000000, error=0x000000016bfc8090) at object.c:5166:16 [opt]\r\n    frame #22: 0x00000001048aed8c System.Reflection.InvokeEmit.Tests`ves_icall_InternalInvoke(method_handle=\u003cunavailable\u003e, this_arg_handle=\u003cunavailable\u003e, params_byref=0x0000000000000000, exception_out=MonoExceptionHandleOut @ x22, error=0x000000016bfc8090) at icall.c:3616:11 [opt]\r\n    frame #23: 0x00000001048b9788 System.Reflection.InvokeEmit.Tests`ves_icall_InternalInvoke_raw(a0=0x000000016bfc8140, a1=0x000000016bfc8148, a2=0x0000000000000000, a3=0x000000016bfc81c8) at icall-def.h:371:1 [opt]\r\n    frame #24: 0x000000010b318160 System.Reflection.InvokeEmit.Tests`wrapper_managed_to_native_System_Reflection_RuntimeMethodInfo_InternalInvoke_System_Reflection_RuntimeMethodInfo_object_intptr__System_Exception_ + 160\r\n    frame #25: 0x000000010b308138 System.Reflection.InvokeEmit.Tests`System_Reflection_MethodBaseInvoker_InterpretedInvoke_Method_object_intptr_ + 120\r\n    frame #26: 0x000000010b308414 System.Reflection.InvokeEmit.Tests`System_Reflection_MethodBaseInvoker_InvokeWithNoArgs_object_System_Reflection_BindingFlags + 148\r\n    frame #27: 0x000000010b31a8c8 System.Reflection.InvokeEmit.Tests`System_Reflection_RuntimeMethodInfo_Invoke_object_System_Reflection_BindingFlags_System_Reflection_Binder_object___System_Globalization_CultureInfo + 456\r\n    frame #28: 0x000000010b307154 System.Reflection.InvokeEmit.Tests`System_Reflection_MethodBase_Invoke_object_object__ + 84\r\n    frame #29: 0x000000010fe1209c System.Reflection.InvokeEmit.Tests`Xunit_Sdk_TestInvoker_1_TTestCase_REF_CallTestMethod_object(this=0x000000011dcb8880, testClassInstance=0x000000011dcb9c88) at TestInvoker.cs:150\r\n    frame #30: 0x000000010fe5a62c System.Reflection.InvokeEmit.Tests`Xunit_Sdk_TestInvoker_1__c__DisplayClass48_0___InvokeTestMethodAsyncb__1d_TTestCase_REF_MoveNext(this=6106679000) at TestInvoker.cs:269\r\n    frame #31: 0x000000010b662e54 System.Reflection.InvokeEmit.Tests`System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ + 388\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOacrOvQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5pys69",
                                           "createdAt":  "2023-10-23T10:30:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027os-tvos\u0027: @steveisok, @akoeplinger\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n## Description\r\n\r\nThis PR disables failing tests on Apple mobile platforms. The following library tests consistently fail on tvOS, reporting the tcp connection issue:\r\n`System.Reflection.InvokeEmit.Tests`\r\n`System.Reflection.InvokeInterpreted.Tests`\r\n\r\nThe `System.Threading.Tasks.Parallel` tests fail with exit code 4, which may indicate permissions issue, possibly related to tests attempting to access the disk. Additionally, the System.Security.Cryptography tests report timeout.\r\n\r\nThe `System.Reflection` tests fail locally with the SIGSEGV error.\r\n```\r\n* thread #12, name = \u0027.NET TP Worker\u0027, stop reason = signal SIGSEGV\r\n    frame #0: 0x0000004d10000010\r\n    frame #1: 0x000000010d9589a4 System.Reflection.InvokeEmit.Tests`System_Reflection_Tests_FunctionPointerMethods_CallFcnPtr_FP___int(fn=268435472, value=42) at MethodInfoTests.cs:1104\r\n    frame #2: 0x000000010c08eef8 System.Reflection.InvokeEmit.Tests`wrapper_runtime_invoke_object_runtime_invoke_dynamic_intptr_intptr_intptr_intptr + 296\r\n    frame #3: 0x0000000104952f74 System.Reflection.InvokeEmit.Tests`mono_jit_runtime_invoke(method=\u003cunavailable\u003e, obj=\u003cunavailable\u003e, params=\u003cunavailable\u003e, exc=\u003cunavailable\u003e, error=0x000000016bfc7570) at mini-runtime.c:3634:3 [opt]\r\n    frame #4: 0x00000001048efa78 System.Reflection.InvokeEmit.Tests`mono_runtime_invoke_checked [inlined] do_runtime_invoke(method=0x000000013c41faa8, obj=0x0000000000000000, params=0x000000016bfc74a0, exc=0x0000000000000000, error=0x000000016bfc7570) at object.c:2541:11 [opt]\r\n    frame #5: 0x00000001048efa3c System.Reflection.InvokeEmit.Tests`mono_runtime_invoke_checked(method=0x000000013c41faa8, obj=0x0000000000000000, params=0x000000016bfc74a0, error=0x000000016bfc7570) at object.c:2757:9 [opt]\r\n  * frame #6: 0x00000001048f8b70 System.Reflection.InvokeEmit.Tests`mono_runtime_try_invoke_byrefs(method=0x000000013c41faa8, obj=\u003cunavailable\u003e, params_byref=0x000000016bfc7760, exc=0x0000000000000000, error=0x000000016bfc7570) at object.c:5166:16 [opt]\r\n    frame #7: 0x00000001048aed8c System.Reflection.InvokeEmit.Tests`ves_icall_InternalInvoke(method_handle=\u003cunavailable\u003e, this_arg_handle=\u003cunavailable\u003e, params_byref=0x000000016bfc7760, exception_out=MonoExceptionHandleOut @ x22, error=0x000000016bfc7570) at icall.c:3616:11 [opt]\r\n    frame #8: 0x00000001048b9788 System.Reflection.InvokeEmit.Tests`ves_icall_InternalInvoke_raw(a0=0x000000016bfc7620, a1=0x000000016bfc7628, a2=0x000000016bfc7760, a3=0x000000016bfc76a8) at icall-def.h:371:1 [opt]\r\n    frame #9: 0x000000010b318160 System.Reflection.InvokeEmit.Tests`wrapper_managed_to_native_System_Reflection_RuntimeMethodInfo_InternalInvoke_System_Reflection_RuntimeMethodInfo_object_intptr__System_Exception_ + 160\r\n    frame #10: 0x000000010b30bb78 System.Reflection.InvokeEmit.Tests`System_Reflection_MethodInvoker_InterpretedInvoke_Method_object_intptr_ + 120\r\n    frame #11: 0x000000010b30d200 System.Reflection.InvokeEmit.Tests`System_Reflection_MethodInvoker_InvokeDirectByRefWithFewArgs_object_System_Span_1_object + 416\r\n    frame #12: 0x000000010b30d040 System.Reflection.InvokeEmit.Tests`System_Reflection_MethodInvoker_InvokeDirectByRef_object_object_object_object_object + 176\r\n    frame #13: 0x000000010b30c5d0 System.Reflection.InvokeEmit.Tests`System_Reflection_MethodInvoker_InvokeImpl_object_object_object_object_object + 1104\r\n    frame #14: 0x000000010b30c750 System.Reflection.InvokeEmit.Tests`System_Reflection_MethodInvoker_Invoke_object_System_Span_1_object + 336\r\n    frame #15: 0x000000010d958bbc System.Reflection.InvokeEmit.Tests`System_Reflection_Tests_MethodInvokerTests_Invoke_System_Reflection_MethodInfo_object_object__(this=\u003cunavailable\u003e, methodInfo=0x000000011dcbb230, obj=0x000000016bfc7938, parameters=0x000000011dcbb1d0) at MethodInvokerTests.cs:16\r\n    frame #16: 0x000000010d952c18 System.Reflection.InvokeEmit.Tests`System_Reflection_Tests_MethodCommonTests_TestFunctionPointerAsArgType(this=0x000000011dcb9c88) at MethodCommonTests.cs:284\r\n    frame #17: 0x000000010c08eef8 System.Reflection.InvokeEmit.Tests`wrapper_runtime_invoke_object_runtime_invoke_dynamic_intptr_intptr_intptr_intptr + 296\r\n    frame #18: 0x0000000104952f74 System.Reflection.InvokeEmit.Tests`mono_jit_runtime_invoke(method=\u003cunavailable\u003e, obj=\u003cunavailable\u003e, params=\u003cunavailable\u003e, exc=\u003cunavailable\u003e, error=0x000000016bfc8090) at mini-runtime.c:3634:3 [opt]\r\n    frame #19: 0x00000001048efa78 System.Reflection.InvokeEmit.Tests`mono_runtime_invoke_checked [inlined] do_runtime_invoke(method=0x000000013c322f40, obj=0x000000011dcb9c88, params=0x0000000000000000, exc=0x0000000000000000, error=0x000000016bfc8090) at object.c:2541:11 [opt]\r\n    frame #20: 0x00000001048efa3c System.Reflection.InvokeEmit.Tests`mono_runtime_invoke_checked(method=0x000000013c322f40, obj=0x000000011dcb9c88, params=0x0000000000000000, error=0x000000016bfc8090) at object.c:2757:9 [opt]\r\n    frame #21: 0x00000001048f8b70 System.Reflection.InvokeEmit.Tests`mono_runtime_try_invoke_byrefs(method=0x000000013c322f40, obj=\u003cunavailable\u003e, params_byref=0x0000000000000000, exc=0x0000000000000000, error=0x000000016bfc8090) at object.c:5166:16 [opt]\r\n    frame #22: 0x00000001048aed8c System.Reflection.InvokeEmit.Tests`ves_icall_InternalInvoke(method_handle=\u003cunavailable\u003e, this_arg_handle=\u003cunavailable\u003e, params_byref=0x0000000000000000, exception_out=MonoExceptionHandleOut @ x22, error=0x000000016bfc8090) at icall.c:3616:11 [opt]\r\n    frame #23: 0x00000001048b9788 System.Reflection.InvokeEmit.Tests`ves_icall_InternalInvoke_raw(a0=0x000000016bfc8140, a1=0x000000016bfc8148, a2=0x0000000000000000, a3=0x000000016bfc81c8) at icall-def.h:371:1 [opt]\r\n    frame #24: 0x000000010b318160 System.Reflection.InvokeEmit.Tests`wrapper_managed_to_native_System_Reflection_RuntimeMethodInfo_InternalInvoke_System_Reflection_RuntimeMethodInfo_object_intptr__System_Exception_ + 160\r\n    frame #25: 0x000000010b308138 System.Reflection.InvokeEmit.Tests`System_Reflection_MethodBaseInvoker_InterpretedInvoke_Method_object_intptr_ + 120\r\n    frame #26: 0x000000010b308414 System.Reflection.InvokeEmit.Tests`System_Reflection_MethodBaseInvoker_InvokeWithNoArgs_object_System_Reflection_BindingFlags + 148\r\n    frame #27: 0x000000010b31a8c8 System.Reflection.InvokeEmit.Tests`System_Reflection_RuntimeMethodInfo_Invoke_object_System_Reflection_BindingFlags_System_Reflection_Binder_object___System_Globalization_CultureInfo + 456\r\n    frame #28: 0x000000010b307154 System.Reflection.InvokeEmit.Tests`System_Reflection_MethodBase_Invoke_object_object__ + 84\r\n    frame #29: 0x000000010fe1209c System.Reflection.InvokeEmit.Tests`Xunit_Sdk_TestInvoker_1_TTestCase_REF_CallTestMethod_object(this=0x000000011dcb8880, testClassInstance=0x000000011dcb9c88) at TestInvoker.cs:150\r\n    frame #30: 0x000000010fe5a62c System.Reflection.InvokeEmit.Tests`Xunit_Sdk_TestInvoker_1__c__DisplayClass48_0___InvokeTestMethodAsyncb__1d_TTestCase_REF_MoveNext(this=6106679000) at TestInvoker.cs:269\r\n    frame #31: 0x000000010b662e54 System.Reflection.InvokeEmit.Tests`System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ + 388\r\n```\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ekotlarmilos\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Codegen-AOT-mono`, `os-tvos`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e9.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-10-23T10:30:43Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "[mono][tests] Tests System.Reflection and System.Threading.Tasks.Parallel fail on Apple mobile platforms ",
        "labels":  [
                       "disabled-test",
                       "area-Codegen-AOT-mono",
                       "os-tvos"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/94063",
        "createdAt":  "2023-10-26T19:07:07Z",
        "number":  94063,
        "author":  "rotanov",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODIMqsg==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Cheesebaron",
                                            "createdAt":  "2025-07-23T15:59:18Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-07-15T13:30:14Z",
        "body":  "### Description\n\nI\u0027m migrating a multi platform game engine from prior to .NET Core/5/6/7/8 era to .NET7.\r\n\r\nThe following code is crashing on iOS, unless I use `\u003cMtouchInterpreter\u003e-all\u003c/MtouchInterpreter\u003e`\r\n\r\n```c#\r\ninternal static Func\u003cobject, int, object, bool\u003e MakeChecker_Crashing(MethodInfo m)\r\n{\r\n  var pObj = Expression.Parameter(typeof(object));\r\n  var pIndex = Expression.Parameter(typeof(int));\r\n  var pItem = Expression.Parameter(typeof(object));\r\n  var e = Expression.Call(Expression.Convert(pObj, m.DeclaringType), m, pIndex, pItem);\r\n  return Expression.Lambda\u003cFunc\u003cobject, int, object, bool\u003e\u003e(e, pObj, pIndex, pItem).Compile();\r\n}\r\n```\r\n\r\nThe exception is \r\n\r\n```\r\n*** Terminating app due to uncaught exception \u0027System.ExecutionEngineException\u0027, reason: \u0027Attempting to JIT compile method \u0027(wrapper dynamic-method) bool object:Thunk1ret_Boolean_Object_Int32_Object (System.Func`2\u003cobject[], object\u003e,object,int,object)\u0027 while running in aot-only mode. See https://docs.microsoft.com/xamarin/ios/internals/limitations for more information.\r\n (System.ExecutionEngineException)\r\n   at System.Delegate.CreateDelegate(Type , Object , MethodInfo , Boolean , Boolean )\r\n   at System.Reflection.Emit.DynamicMethod.CreateDelegate(Type , Object )\r\n   at System.Dynamic.Utils.DelegateHelpers.CreateObjectArrayDelegateRefEmit(Type , Func`2 )\r\n   at System.Dynamic.Utils.DelegateHelpers.CreateObjectArrayDelegate(Type , Func`2 )\r\n   at System.Linq.Expressions.Interpreter.LightLambda.MakeDelegate(Type )\r\n   at System.Linq.Expressions.Interpreter.LightDelegateCreator.CreateDelegate(IStrongBox[] )\r\n   at System.Linq.Expressions.Expression`1[[System.Func`4[[System.Object, System.Private.CoreLib, Version\u003c…\u003e\r\n```\r\n\r\nHowever it didn\u0027t crash in xamarin-ios prior to .NET7 migration.\r\n\r\nInterestingly, the following doesn\u0027t crash without interpreter:\r\n\r\n```c#\r\npublic static Func\u003cobject, object, bool\u003e MakeChecker_NotCrashing(Type tObj, string methodName)\r\n{\r\n   var fn = tObj.GetMethod(methodName);\r\n   var p = Expression.Parameter(typeof(object));\r\n   var pf = Expression.Parameter(typeof(object));\r\n   var e = Expression.Call(Expression.Convert(p, tObj), fn);\r\n   return Expression.Lambda\u003cFunc\u003cobject, object, bool\u003e\u003e(e, p, pf).Compile();\r\n}\r\n```\r\n\r\nI\u0027ve made a repo with repro (see repro steps). The code is in `AppDelegate.cs`\r\n\r\nEnabling interpreter adds to application size, in case of empty project using our game engine it\u0027s 4.4Mb which is a lot, considering game project teams are always hitting the wall of Apple\u0027s application size limit for metered connections. In such context even 100Kb is a lot.\r\n\r\nSide note:\r\n\r\nDefault single view iOS application grew in size quite considerably, see picture:\r\n\r\n![image](https://github.com/dotnet/runtime/assets/401399/2bee1cb5-656b-49b3-b466-ddc3d04cd5fd)\r\n\n\n### Reproduction Steps\n\n\r\n1. clone [the repo](https://github.com/rotanov/dotnet-linq-expressions-regression/tree/master)\r\n2. compile and run `xamarin-ios/xamarin-ios.sln` on a device (I\u0027ve used iPhone XR)\r\n3. observe it\u0027s not crashing\r\n4. compile and run `net/net7.sln` on a device\r\n5. notice the crash\r\n6. uncomment line enabling interpreter in net7.csproj\r\n7. application no longer crashes\n\n### Expected behavior\n\nI\u0027m really not sure if this is an expected breaking change or not.\n\n### Actual behavior\n\nThe crash.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n- .NET7\r\n- macOS Sonoma 14.0, intel CPU\r\n- XCode 15.0\r\n- iPhoneXR iOS 16.3\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOtm9mIw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5qM0H2",
                                           "createdAt":  "2023-10-26T19:07:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @cston\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\n\nI\u0027m migrating a multi platform game engine from prior to .NET Core/5/6/7/8 era to .NET7.\r\n\r\nThe following code is crashing on iOS, unless I use `\u003cMtouchInterpreter\u003e-all\u003c/MtouchInterpreter\u003e`\r\n\r\n```c#\r\ninternal static Func\u003cobject, int, object, bool\u003e MakeChecker_Crashing(MethodInfo m)\r\n{\r\n  var pObj = Expression.Parameter(typeof(object));\r\n  var pIndex = Expression.Parameter(typeof(int));\r\n  var pItem = Expression.Parameter(typeof(object));\r\n  var e = Expression.Call(Expression.Convert(pObj, m.DeclaringType), m, pIndex, pItem);\r\n  return Expression.Lambda\u003cFunc\u003cobject, int, object, bool\u003e\u003e(e, pObj, pIndex, pItem).Compile();\r\n}\r\n```\r\n\r\nThe exception is \r\n\r\n```\r\n*** Terminating app due to uncaught exception \u0027System.ExecutionEngineException\u0027, reason: \u0027Attempting to JIT compile method \u0027(wrapper dynamic-method) bool object:Thunk1ret_Boolean_Object_Int32_Object (System.Func`2\u003cobject[], object\u003e,object,int,object)\u0027 while running in aot-only mode. See https://docs.microsoft.com/xamarin/ios/internals/limitations for more information.\r\n (System.ExecutionEngineException)\r\n   at System.Delegate.CreateDelegate(Type , Object , MethodInfo , Boolean , Boolean )\r\n   at System.Reflection.Emit.DynamicMethod.CreateDelegate(Type , Object )\r\n   at System.Dynamic.Utils.DelegateHelpers.CreateObjectArrayDelegateRefEmit(Type , Func`2 )\r\n   at System.Dynamic.Utils.DelegateHelpers.CreateObjectArrayDelegate(Type , Func`2 )\r\n   at System.Linq.Expressions.Interpreter.LightLambda.MakeDelegate(Type )\r\n   at System.Linq.Expressions.Interpreter.LightDelegateCreator.CreateDelegate(IStrongBox[] )\r\n   at System.Linq.Expressions.Expression`1[[System.Func`4[[System.Object, System.Private.CoreLib, Version\u003c…\u003e\r\n```\r\n\r\nHowever it didn\u0027t crash in xamarin-ios prior to .NET7 migration.\r\n\r\nInterestingly, the following doesn\u0027t crash without interpreter:\r\n\r\n```c#\r\npublic static Func\u003cobject, object, bool\u003e MakeChecker_NotCrashing(Type tObj, string methodName)\r\n{\r\n   var fn = tObj.GetMethod(methodName);\r\n   var p = Expression.Parameter(typeof(object));\r\n   var pf = Expression.Parameter(typeof(object));\r\n   var e = Expression.Call(Expression.Convert(p, tObj), fn);\r\n   return Expression.Lambda\u003cFunc\u003cobject, object, bool\u003e\u003e(e, p, pf).Compile();\r\n}\r\n```\r\n\r\nI\u0027ve made a repo with repro (see repro steps). The code is in `AppDelegate.cs`\r\n\r\nEnabling interpreter adds to application size, in case of empty project using our game engine it\u0027s 4.4Mb which is a lot, considering game project teams are always hitting the wall of Apple\u0027s application size limit for metered connections. In such context even 100Kb is a lot.\r\n\r\nSide note:\r\n\r\nDefault single view iOS application grew in size quite considerably, see picture:\r\n\r\n![image](https://github.com/dotnet/runtime/assets/401399/2bee1cb5-656b-49b3-b466-ddc3d04cd5fd)\r\n\n\n### Reproduction Steps\n\n\r\n1. clone [the repo](https://github.com/rotanov/dotnet-linq-expressions-regression/tree/master)\r\n2. compile and run `xamarin-ios/xamarin-ios.sln` on a device (I\u0027ve used iPhone XR)\r\n3. observe it\u0027s not crashing\r\n4. compile and run `net/net7.sln` on a device\r\n5. notice the crash\r\n6. uncomment line enabling interpreter in net7.csproj\r\n7. application no longer crashes\n\n### Expected behavior\n\nI\u0027m really not sure if this is an expected breaking change or not.\n\n### Actual behavior\n\nThe crash.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n- .NET7\r\n- macOS Sonoma 14.0, intel CPU\r\n- XCode 15.0\r\n- iPhoneXR iOS 16.3\n\n### Other information\n\n_No response_\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003erotanov\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-System.Linq.Expressions`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-10-26T19:07:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5qPyhR",
                                           "createdAt":  "2023-10-27T08:37:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027os-ios\u0027: @steveisok, @akoeplinger, @kotlarmilos\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\n\nI\u0027m migrating a multi platform game engine from prior to .NET Core/5/6/7/8 era to .NET7.\r\n\r\nThe following code is crashing on iOS, unless I use `\u003cMtouchInterpreter\u003e-all\u003c/MtouchInterpreter\u003e`\r\n\r\n```c#\r\ninternal static Func\u003cobject, int, object, bool\u003e MakeChecker_Crashing(MethodInfo m)\r\n{\r\n  var pObj = Expression.Parameter(typeof(object));\r\n  var pIndex = Expression.Parameter(typeof(int));\r\n  var pItem = Expression.Parameter(typeof(object));\r\n  var e = Expression.Call(Expression.Convert(pObj, m.DeclaringType), m, pIndex, pItem);\r\n  return Expression.Lambda\u003cFunc\u003cobject, int, object, bool\u003e\u003e(e, pObj, pIndex, pItem).Compile();\r\n}\r\n```\r\n\r\nThe exception is \r\n\r\n```\r\n*** Terminating app due to uncaught exception \u0027System.ExecutionEngineException\u0027, reason: \u0027Attempting to JIT compile method \u0027(wrapper dynamic-method) bool object:Thunk1ret_Boolean_Object_Int32_Object (System.Func`2\u003cobject[], object\u003e,object,int,object)\u0027 while running in aot-only mode. See https://docs.microsoft.com/xamarin/ios/internals/limitations for more information.\r\n (System.ExecutionEngineException)\r\n   at System.Delegate.CreateDelegate(Type , Object , MethodInfo , Boolean , Boolean )\r\n   at System.Reflection.Emit.DynamicMethod.CreateDelegate(Type , Object )\r\n   at System.Dynamic.Utils.DelegateHelpers.CreateObjectArrayDelegateRefEmit(Type , Func`2 )\r\n   at System.Dynamic.Utils.DelegateHelpers.CreateObjectArrayDelegate(Type , Func`2 )\r\n   at System.Linq.Expressions.Interpreter.LightLambda.MakeDelegate(Type )\r\n   at System.Linq.Expressions.Interpreter.LightDelegateCreator.CreateDelegate(IStrongBox[] )\r\n   at System.Linq.Expressions.Expression`1[[System.Func`4[[System.Object, System.Private.CoreLib, Version\u003c…\u003e\r\n```\r\n\r\nHowever it didn\u0027t crash in xamarin-ios prior to .NET7 migration.\r\n\r\nInterestingly, the following doesn\u0027t crash without interpreter:\r\n\r\n```c#\r\npublic static Func\u003cobject, object, bool\u003e MakeChecker_NotCrashing(Type tObj, string methodName)\r\n{\r\n   var fn = tObj.GetMethod(methodName);\r\n   var p = Expression.Parameter(typeof(object));\r\n   var pf = Expression.Parameter(typeof(object));\r\n   var e = Expression.Call(Expression.Convert(p, tObj), fn);\r\n   return Expression.Lambda\u003cFunc\u003cobject, object, bool\u003e\u003e(e, p, pf).Compile();\r\n}\r\n```\r\n\r\nI\u0027ve made a repo with repro (see repro steps). The code is in `AppDelegate.cs`\r\n\r\nEnabling interpreter adds to application size, in case of empty project using our game engine it\u0027s 4.4Mb which is a lot, considering game project teams are always hitting the wall of Apple\u0027s application size limit for metered connections. In such context even 100Kb is a lot.\r\n\r\nSide note:\r\n\r\nDefault single view iOS application grew in size quite considerably, see picture:\r\n\r\n![image](https://github.com/dotnet/runtime/assets/401399/2bee1cb5-656b-49b3-b466-ddc3d04cd5fd)\r\n\n\n### Reproduction Steps\n\n\r\n1. clone [the repo](https://github.com/rotanov/dotnet-linq-expressions-regression/tree/master)\r\n2. compile and run `xamarin-ios/xamarin-ios.sln` on a device (I\u0027ve used iPhone XR)\r\n3. observe it\u0027s not crashing\r\n4. compile and run `net/net7.sln` on a device\r\n5. notice the crash\r\n6. uncomment line enabling interpreter in net7.csproj\r\n7. application no longer crashes\n\n### Expected behavior\n\nI\u0027m really not sure if this is an expected breaking change or not.\n\n### Actual behavior\n\nThe crash.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n- .NET7\r\n- macOS Sonoma 14.0, intel CPU\r\n- XCode 15.0\r\n- iPhoneXR iOS 16.3\n\n### Other information\n\n_No response_\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003erotanov\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003eivanpovazan\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Codegen-AOT-mono`, `os-ios`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-10-27T08:37:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5qP25l",
                                           "createdAt":  "2023-10-27T08:50:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODLHuaA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "rotanov",
                                                                               "createdAt":  "2023-10-27T09:19:34Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ivanpovazan",
                                           "body":  "@rotanov thank you for reporting this issue and providing detailed repro steps.\r\n\r\nI managed to reproduce the issue with .NET8-rc2 release as well (for this reason I slightly modified the title).\r\nThis looks like the same problem we reported here: https://github.com/dotnet/runtime/issues/91332 and is related to how we support `System.Linq.Expressions` library with MonoAOT compiler in .NET. ",
                                           "updatedAt":  "2023-10-27T08:50:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6HeiLj",
                                           "createdAt":  "2024-08-07T08:35:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivanpovazan",
                                           "body":  "We don\u0027t have capacity to address this in .NET 9. Moving to .NET 10",
                                           "updatedAt":  "2024-08-07T08:35:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6bpkxU",
                                           "createdAt":  "2025-01-24T01:43:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEbp-AA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "DannySotzny",
                                                                               "createdAt":  "2025-04-07T19:00:52Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kamranayub",
                                                                               "createdAt":  "2025-05-27T18:48:34Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "dartasen",
                                                                               "createdAt":  "2025-07-23T16:06:32Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "andersonvieiragomeslopes",
                                           "body":  "\u003e We don\u0027t have capacity to address this in .NET 9. Moving to .NET 10\n\nImpressive! This issue forced me to completely remove LiteDB from my Maui project, and it wasn\u0027t addressed in .NET 9, even though it was reported in other tickets during .NET 6. When we get to .NET 10, it\u0027ll probably be pushed to .NET 11 :/",
                                           "updatedAt":  "2025-01-24T01:43:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6073GS",
                                           "createdAt":  "2025-07-04T10:57:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BrzVlad",
                                           "body":  "Before .NETCore, mono used a custom build of System.Linq.Expressions where `NO_FEATURE_STATIC_DELEGATE` and `FEATURE_MAKE_RUN_METHODS` are defined (https://github.com/mono/mono/blob/main/mcs/class/System.Core/Makefile#L39), in order to avoid the reflection emit paths. NativeAOT seems to use a separate approach based on (https://github.com/dotnet/runtime/blob/main/src/coreclr/nativeaot/System.Private.CoreLib/src/System/Delegate.cs#L384) that it is not entirely clear to me how feasible/easy it is for mono, I wouldn\u0027t really invest into it in the current context.\n\nThe only workaround currently is to enable the mono interpreter fallback on iOS (which comes with the downside of increased app size due to interpreter library code and no IL trimming). Note that the mono interpreter is not enabled by default on iOS, so the first experience for users would be direct crash when compiling some linq expressions (even if the compilation is with the SLE Interpreter).\n\nA quick and rough implementation to add these defines back for mono targets that need it would look something like https://github.com/BrzVlad/runtime/commit/216d4d22ffa5953d600b8bf9160cdf74f0578631 (this is just some minor code bitrot change, nullable support and ignoring some compilation warnings). The sample from the report runs fine for me with these changes. Not sure who owns this area exactly. @VSadov @stephentoub Any thoughts on whether it would be acceptable to bring these back for mono or any other suggestions ? cc @vitek-karas ?",
                                           "updatedAt":  "2025-07-04T10:57:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6172yI",
                                           "createdAt":  "2025-07-09T11:55:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vitek-karas",
                                           "body":  "I\u0027d be OK with aligning mono AOT more with NativeAOT, so the core of the suggested change is fine - the added suppressions.. not so much and we would need to look into those.\n\nOn the other hand, this does have a workaround (interpreter), so I don\u0027t consider this a blocker.",
                                           "updatedAt":  "2025-07-09T11:55:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc62PzeA",
                                           "createdAt":  "2025-07-10T14:02:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BrzVlad",
                                           "body":  "To be clear, my commit doesn\u0027t really align with NativeAOT, rather it would revert to using the SLE approach from legacy mono/Xamarin. The code was not used currently anywhere, since it wasn\u0027t even building.",
                                           "updatedAt":  "2025-07-10T14:02:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc62b2Yj",
                                           "createdAt":  "2025-07-11T06:12:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEaR-ng==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "BrzVlad",
                                                                               "createdAt":  "2025-07-11T16:39:41Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "MichalStrehovsky",
                                           "body":  "\u003e NativeAOT seems to use a separate approach based on (https://github.com/dotnet/runtime/blob/main/src/coreclr/nativeaot/System.Private.CoreLib/src/System/Delegate.cs#L384) that it is not entirely clear to me how feasible/easy it is for mono, I wouldn\u0027t really invest into it in the current context.\n\nThe way this works on native AOT is that for every delegate type we see, we generate an extra wrapper method that takes all the parameters the delegate received, puts them into an `object[]` array, and then calls another delegate (the `Func\u003cobject?[], object?\u003e handler` in the quoted code) that takes the `object[]` as a parameter. Once the nested delegate returns, the wrapper unboxes/casts/throws away the returned `object` based on the return type of the original delegate.\n\nI.e. this is a primitive for \"reverse reflection invoke\" where we have a single `Func\u003cobject?[], object?\u003e` delegate that can become the implementation of any other delegate in the app (modulo certain limitations, like when the delegate accepts a ref-like type). We have a magic API in CoreLib that takes the delegate `Type t`, the `Func\u003cobject?[], object?\u003e handler` and allocates a new instance of `t` that will proxy into `handler`.\n\nI assume Mono AOT already needs to generate some kinds of wrappers for various delegate types, so this would be another such wrapper.",
                                           "updatedAt":  "2025-07-11T06:12:51Z"
                                       }
                                   ],
                         "totalCount":  9
                     },
        "title":  "[mono] Using Linq.Expressions on iOS crashes unless interpreter is enabled when migrating from xamarin to .NET",
        "labels":  [
                       "area-Codegen-AOT-mono",
                       "os-ios"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/94352",
        "createdAt":  "2023-11-03T17:17:53Z",
        "number":  94352,
        "author":  "lambdageek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-11-03T17:17:59Z",
        "body":  "This issue tracks the support for the WebAssembly post-MVP tailcall proposal in .NET.\r\n\r\nSee #94351 for a summary of other WebAssembly proposals and their status.\r\n\r\n### Proposal\r\n\r\nRepo: https://github.com/WebAssembly/tail-call\r\n\r\nExplainer or overview: https://github.com/WebAssembly/tail-call/blob/main/proposals/tail-call/Overview.md \r\n\r\n### .NET Scenarios and User Stories\r\n\r\n#### F# logic in a .NET WebAssembly app\r\n\r\nAs an F# developer, I would like to use tail-recursive functions in my library code that is used by a .NET WebAssembly application without overflowing the stack. My code is performance sensitive and I would like to utilize Just-in-Time or Ahead-of-Time compilation. \r\n\r\n\r\n#### AOT\r\n\r\nWe need LLVM support for tailcalls in WASM.\r\n\r\n#### Interpreter / jiterpreter\r\n\r\nThe interpreter already does not recuse in C when a .NET function is called (it managed its own stack of activation frames).  It already has specialized tailcall opcodes.\r\n\r\nThe jiterpreter currently bails on traces that include function calls (tailcalls included).\r\n\r\n#### Libraries / Tooling / Diagnostics\r\n\r\nN/A\r\n\r\n### Upstream dependencies: engines and toolchain\r\n\r\n#### Required WebAssembly engine support\r\n\r\nExpected .NET targets or supported configurations: Desktop browsers + Mobile browsers + Node + WASI\r\n\r\n\r\n| Engine  | Status | \r\n|---------|--------|\r\n| Chrome  |   ?    |\r\n| Firefox |   ?    |\r\n| Safari  |   ?    |\r\n| Node    |   ?    |\r\n| wasmtime|   ?    |\r\n\r\n\r\n#### Required WebAssembly toolchain support\r\n\r\nWe need LLVM to support this for AOT.\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOatyKlw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5q3IqX",
                                           "createdAt":  "2023-11-03T17:17:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThis issue tracks the support for the WebAssembly post-MVP tailcall proposal in .NET.\r\n\r\nSee #94351 for a summary of other WebAssembly proposals and their status.\r\n\r\n### Proposal\r\n\r\nRepo: https://github.com/WebAssembly/tail-call\r\n\r\nExplainer or overview: https://github.com/WebAssembly/tail-call/blob/main/proposals/tail-call/Overview.md \r\n\r\n### .NET Scenarios and User Stories\r\n\r\n#### F# logic in a .NET WebAssembly app\r\n\r\nAs an F# developer, I would like to use tail-recursive functions in my library code that is used by a .NET WebAssembly application without overflowing the stack. My code is performance sensitive and I would like to utilize Just-in-Time or Ahead-of-Time compilation. \r\n\r\n\r\n#### AOT\r\n\r\nWe need LLVM support for tailcalls in WASM.\r\n\r\n#### Interpreter / jiterpreter\r\n\r\nThe interpreter already does not recuse in C when a .NET function is called (it managed its own stack of activation frames).  It already has specialized tailcall opcodes.\r\n\r\nThe jiterpreter currently bails on traces that include function calls (tailcalls included).\r\n\r\n#### Libraries / Tooling / Diagnostics\r\n\r\nN/A\r\n\r\n### Upstream dependencies: engines and toolchain\r\n\r\n#### Required WebAssembly engine support\r\n\r\nExpected .NET targets or supported configurations: Desktop browsers + Mobile browsers + Node + WASI\r\n\r\n\r\n| Engine  | Status | \r\n|---------|--------|\r\n| Chrome  |   ?    |\r\n| Firefox |   ?    |\r\n| Safari  |   ?    |\r\n| Node    |   ?    |\r\n| wasmtime|   ?    |\r\n\r\n\r\n#### Required WebAssembly toolchain support\r\n\r\nWe need LLVM to support this for AOT.\r\n\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003elambdageek\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-wasm`, `area-Codegen-AOT-mono`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003eFuture\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-11-03T17:17:59Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "[wasm][post-MVP] tailcall proposal in .NET",
        "labels":  [
                       "arch-wasm",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/94895",
        "createdAt":  "2023-11-17T04:16:01Z",
        "number":  94895,
        "author":  "kg",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-12-12T16:29:23Z",
        "body":  "The wasm ABI https://github.com/WebAssembly/tool-conventions/blob/main/BasicCABI.md#function-signatures appears to imply that the following cases will all become scalars and be passed by-value instead of by-reference:\r\n\r\n* A struct only containing one F32 (A)\r\n* A struct only containing one F64 (B) \r\n* A struct only containing one I32 (C) \r\n* A struct only containing one I64 (D)\r\n\r\nThe current PInvoke generator doesn\u0027t support any of this (I\u0027m working on fixing it in https://github.com/dotnet/runtime/pull/94446) so you may need to use my PR in order to test.\r\n\r\nAt present we only seem to implement case A \u0026 case C reliably. By updating `mini_wasm_is_scalar_vtype` in `mini-wasm.c` we can make case B work\\* in the AOT compiler but if we also implement case D by allowing I8/U8 types through, we get assertion failures in the AOT compiler:\r\n```\r\nAssertion at /home/kate/Projects/dotnet-runtime-wasm/src/mono/mono/mini/mini-llvm.c:6052, condition `addresses [ins-\u003esreg1]\u0027 not met\r\n```\r\n\r\n\\* When I say \u0027work\u0027 above I mean \u0027compile\u0027; the compiled code still does not work right in either the interpreter or AOT:\r\n\r\n```\r\n[wasm test-browser] info: \u0026arg=4ff270 (ulonglong)arg=40091eb851eb851f arg.value.value=3.140000\r\n[wasm test-browser] info: resF=3.14\r\n[wasm test-browser] fail: MONO_WASM: RuntimeError: null function or function signature mismatch\r\n[wasm test-browser]           at http://127.0.0.1:38685/_framework/dotnet.native.wasm:wasm-function[96]:0x18168\r\n[wasm test-browser]           at http://127.0.0.1:38685/_framework/dotnet.native.wasm:wasm-function[89]:0x17cdb\r\n[wasm test-browser]           at http://127.0.0.1:38685/_framework/dotnet.native.wasm:wasm-function[12890]:0x1a2a2a8\r\n[wasm test-browser]           at http://127.0.0.1:38685/_framework/dotnet.native.wasm:wasm-function[18247]:0x2ff814a\r\n[wasm test-browser]           at http://127.0.0.1:38685/_framework/dotnet.native.wasm:wasm-function[18500]:0x3017cb7\r\n[wasm test-browser]           at http://127.0.0.1:38685/_framework/dotnet.native.wasm:wasm-function[18169]:0x2ff5165\r\n[wasm test-browser]           at http://127.0.0.1:38685/_framework/dotnet.native.wasm:wasm-function[18159]:0x2fe75f3\r\n[wasm test-browser]           at http://127.0.0.1:38685/_framework/dotnet.native.wasm:wasm-function[18202]:0x2ff6272\r\n[wasm test-browser]           at http://127.0.0.1:38685/_framework/dotnet.native.wasm:wasm-function[22479]:0x30e192a\r\n[wasm test-browser]           at http://127.0.0.1:38685/_framework/dotnet.native.wasm:wasm-function[21430]:0x30ad1ae\r\n```\r\n\r\nIn the interpreter, the code will run but either gets garbage or 0 instead of the struct instance:\r\n```\r\n[wasm test-browser] info: \u0026arg=5d9c68 (ulonglong)arg=40091eb851eb851f arg.value.value=3.140000\r\n[wasm test-browser] info: resF=3.14\r\n[wasm test-browser] info: \u0026arg=5d9988 (ulonglong)arg=0 arg.value.value=0.000000\r\n[wasm test-browser] info: res=0\r\n```\r\n\r\nI think this is because the interpreter has its own logic for identifying scalar vtypes, but when I attempted to fix it that caused all sorts of problems.\r\n\r\nSample code I used for testing:\r\n```c\r\n#include \u003cstdio.h\u003e\r\n\r\ntypedef struct {\r\n    float value;\r\n} TRes;\r\n\r\nTRes accept_double_struct_and_return_float_struct (\r\n    struct { struct { double value; } value; } arg\r\n) {\r\n    printf (\r\n        \"\u0026arg=%x (ulonglong)arg=%llx arg.value.value=%lf\\n\",\r\n        (unsigned int)\u0026arg, *(unsigned long long*)\u0026arg, (double)arg.value.value\r\n    );\r\n    TRes result = { arg.value.value };\r\n    return result;\r\n}\r\n```\r\n\r\n```csharp\r\nusing System;\r\nusing System.Runtime.CompilerServices;\r\nusing System.Runtime.InteropServices;\r\n\r\npublic struct SingleFloatStruct {\r\n    public float Value;\r\n}\r\npublic struct SingleDoubleStruct {\r\n    public struct Nested1 {\r\n        // This field is private on purpose to ensure we treat visibility correctly\r\n        double Value;\r\n    }\r\n    public Nested1 Value;\r\n}\r\n\r\npublic class Test\r\n{\r\n    public static unsafe int Main(string[] argv)\r\n    {\r\n        var resF = direct(3.14);\r\n        Console.WriteLine(\"\"resF=\"\" + resF);\r\n\r\n        SingleDoubleStruct sds = default;\r\n        Unsafe.As\u003cSingleDoubleStruct, double\u003e(ref sds) = 3.14; // I tested using pointers instead of Unsafe.As and that also doesn\u0027t work\r\n        var res = indirect(sds);\r\n        Console.WriteLine(\"\"res=\"\" + res.Value);\r\n        return (int)res.Value;\r\n    }\r\n\r\n    [DllImport(\"\"wasm-abi\"\", EntryPoint=\"\"accept_double_struct_and_return_float_struct\"\")]\r\n    public static extern SingleFloatStruct indirect(SingleDoubleStruct arg);\r\n\r\n    [DllImport(\"\"wasm-abi\"\", EntryPoint=\"\"accept_double_struct_and_return_float_struct\"\")]\r\n    public static extern float direct(double arg);\r\n}\r\n```\r\n\r\ncc @vargaz ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhqMs-w==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5sObz5",
                                           "createdAt":  "2023-11-17T04:16:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThe wasm ABI https://github.com/WebAssembly/tool-conventions/blob/main/BasicCABI.md#function-signatures appears to imply that the following cases will all become scalars and be passed by-value instead of by-reference:\r\n\r\n* A struct only containing one F32 (A)\r\n* A struct only containing one F64 (B) \r\n* A struct only containing one I32 (C) \r\n* A struct only containing one I64 (D)\r\n\r\nThe current PInvoke generator doesn\u0027t support any of this (I\u0027m working on fixing it in https://github.com/dotnet/runtime/pull/94446) so you may need to use my PR in order to test.\r\n\r\nAt present we only seem to implement case A \u0026 case C reliably. By updating `mini_wasm_is_scalar_vtype` in `mini-wasm.c` we can make case B work\\* in the AOT compiler but if we also implement case D by allowing I8/U8 types through, we get assertion failures in the AOT compiler:\r\n```\r\nAssertion at /home/kate/Projects/dotnet-runtime-wasm/src/mono/mono/mini/mini-llvm.c:6052, condition `addresses [ins-\u003esreg1]\u0027 not met\r\n```\r\n\r\n\\* When I say \u0027work\u0027 above I mean \u0027compile\u0027; the compiled code still does not work right in either the interpreter or AOT:\r\n\r\n```\r\n[wasm test-browser] info: \u0026arg=4ff270 (ulonglong)arg=40091eb851eb851f arg.value.value=3.140000\r\n[wasm test-browser] info: resF=3.14\r\n[wasm test-browser] fail: MONO_WASM: RuntimeError: null function or function signature mismatch\r\n[wasm test-browser]           at http://127.0.0.1:38685/_framework/dotnet.native.wasm:wasm-function[96]:0x18168\r\n[wasm test-browser]           at http://127.0.0.1:38685/_framework/dotnet.native.wasm:wasm-function[89]:0x17cdb\r\n[wasm test-browser]           at http://127.0.0.1:38685/_framework/dotnet.native.wasm:wasm-function[12890]:0x1a2a2a8\r\n[wasm test-browser]           at http://127.0.0.1:38685/_framework/dotnet.native.wasm:wasm-function[18247]:0x2ff814a\r\n[wasm test-browser]           at http://127.0.0.1:38685/_framework/dotnet.native.wasm:wasm-function[18500]:0x3017cb7\r\n[wasm test-browser]           at http://127.0.0.1:38685/_framework/dotnet.native.wasm:wasm-function[18169]:0x2ff5165\r\n[wasm test-browser]           at http://127.0.0.1:38685/_framework/dotnet.native.wasm:wasm-function[18159]:0x2fe75f3\r\n[wasm test-browser]           at http://127.0.0.1:38685/_framework/dotnet.native.wasm:wasm-function[18202]:0x2ff6272\r\n[wasm test-browser]           at http://127.0.0.1:38685/_framework/dotnet.native.wasm:wasm-function[22479]:0x30e192a\r\n[wasm test-browser]           at http://127.0.0.1:38685/_framework/dotnet.native.wasm:wasm-function[21430]:0x30ad1ae\r\n```\r\n\r\nIn the interpreter, the code will run but either gets garbage or 0 instead of the struct instance:\r\n```\r\n[wasm test-browser] info: \u0026arg=5d9c68 (ulonglong)arg=40091eb851eb851f arg.value.value=3.140000\r\n[wasm test-browser] info: resF=3.14\r\n[wasm test-browser] info: \u0026arg=5d9988 (ulonglong)arg=0 arg.value.value=0.000000\r\n[wasm test-browser] info: res=0\r\n```\r\n\r\nI think this is because the interpreter has its own logic for identifying scalar vtypes, but when I attempted to fix it that caused all sorts of problems.\r\n\r\nSample code I used for testing:\r\n```c\r\n#include \u003cstdio.h\u003e\r\n\r\ntypedef struct {\r\n    float value;\r\n} TRes;\r\n\r\nTRes accept_double_struct_and_return_float_struct (\r\n    struct { struct { double value; } value; } arg\r\n) {\r\n    printf (\r\n        \"\u0026arg=%x (ulonglong)arg=%llx arg.value.value=%lf\\n\",\r\n        (unsigned int)\u0026arg, *(unsigned long long*)\u0026arg, (double)arg.value.value\r\n    );\r\n    TRes result = { arg.value.value };\r\n    return result;\r\n}\r\n```\r\n\r\n```csharp\r\nusing System;\r\nusing System.Runtime.CompilerServices;\r\nusing System.Runtime.InteropServices;\r\n\r\npublic struct SingleFloatStruct {\r\n    public float Value;\r\n}\r\npublic struct SingleDoubleStruct {\r\n    public struct Nested1 {\r\n        // This field is private on purpose to ensure we treat visibility correctly\r\n        double Value;\r\n    }\r\n    public Nested1 Value;\r\n}\r\n\r\npublic class Test\r\n{\r\n    public static unsafe int Main(string[] argv)\r\n    {\r\n        var resF = direct(3.14);\r\n        Console.WriteLine(\"\"resF=\"\" + resF);\r\n\r\n        SingleDoubleStruct sds = default;\r\n        Unsafe.As\u003cSingleDoubleStruct, double\u003e(ref sds) = 3.14; // I tested using pointers instead of Unsafe.As and that also doesn\u0027t work\r\n        var res = indirect(sds);\r\n        Console.WriteLine(\"\"res=\"\" + res.Value);\r\n        return (int)res.Value;\r\n    }\r\n\r\n    [DllImport(\"\"wasm-abi\"\", EntryPoint=\"\"accept_double_struct_and_return_float_struct\"\")]\r\n    public static extern SingleFloatStruct indirect(SingleDoubleStruct arg);\r\n\r\n    [DllImport(\"\"wasm-abi\"\", EntryPoint=\"\"accept_double_struct_and_return_float_struct\"\")]\r\n    public static extern float direct(double arg);\r\n}\r\n```\r\n\r\ncc @vargaz \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ekg\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-wasm`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-11-17T04:16:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5sUThn",
                                           "createdAt":  "2023-11-17T23:48:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kg",
                                           "body":  "As of https://github.com/dotnet/runtime/pull/94446/commits/3a278eeb7c046ffe12ffbfeb6f955f382f51667a in #94446 basic cases now work in the interpreter, I had to fix some assumptions about scalarized structs (i.e. they\u0027re always int32) and also update the return value marshaling to handle scalarized return values. Will investigate AOT more.",
                                           "updatedAt":  "2023-11-17T23:48:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5sUXck",
                                           "createdAt":  "2023-11-18T00:16:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kg",
                                           "body":  "The AOT wrapper appears to invoke using the wrong indirect signature when structs are involved. For a pinvoke with the signature \u0027float (double)\u0027, it\u0027s correct:\r\n```\r\n75336 117100    call_indirect 113 tables[0] s(d)\r\n```\r\n\r\nFor a pinvoke accepting a struct and returning a float:\r\n```\r\n75201 11D70100  call_indirect 215 tables[0] s(l)\r\n```\r\n\r\nFor a pinvoke accepting a struct and returning a struct:\r\n```\r\n75067 115300    call_indirect 83 tables[0] i(l)\r\n```\r\n\r\nIt looks like the problem is it\u0027s picking an appropriately-sized int to contain the struct, but in this case it needs to pick an appropriately-sized float instead.",
                                           "updatedAt":  "2023-11-18T00:17:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6GoyP2",
                                           "createdAt":  "2024-07-30T17:18:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @brzvlad, @kotlarmilos\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-07-30T17:18:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Goyz7",
                                           "createdAt":  "2024-07-30T17:19:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kg",
                                           "body":  "I believe a lot of this is fixed but I don\u0027t think I added enough coverage to guarantee that it\u0027s all fixed.",
                                           "updatedAt":  "2024-07-30T17:19:33Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "[wasm] Wasm C ABI correctness for \"singleton\" structs in the mono AOT compiler and interpreter",
        "labels":  [
                       "arch-wasm",
                       "area-Codegen-AOT-mono",
                       "area-Codegen-Interpreter-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/95136",
        "createdAt":  "2023-11-22T18:12:32Z",
        "number":  95136,
        "author":  "lewing",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-05-28T17:54:31Z",
        "body":  "- [x] smoke tests (on `runtime` pipeline) [assigned: AJ]\r\n- [x] library tests (on `runtime-wasm` pipeline, same as what we have for `browser-wasm`) [assigned: AJ]\r\n- [x] wbt (Ankit\u0027s proposal from the comment) [assigned: IT]\r\n- [ ] runtime tests interpreter (`Release AllSubsets_Mono_RuntimeTests monointerpreter`) [assigned: IT]\r\n- [ ] runtime tests AOT",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHObTvb3w==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5srijz",
                                           "createdAt":  "2023-11-22T19:14:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "We already have Wasi.Build.Tests, and that has *one* AOT test :D More should be added.\r\nFor example:\r\n- [x] aot with single file bundle\r\n- [x] aot without single file bundle\r\n- [x] running an AOT\u0027ed app (once that is working)",
                                           "updatedAt":  "2024-01-02T11:07:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5srnUo",
                                           "createdAt":  "2023-11-22T19:21:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n- [ ] smoke tests (on `runtime` pipeline)\r\n- [ ] library tests (on `runtime-wasm` pipeline, same as what we have for `browser-wasm`)\r\n- [ ] wbt\r\n- [ ] runtime tests\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003elewing\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003eradical, ilonatommy\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-wasm`, `area-Codegen-AOT-mono`, `os-wasi`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e9.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-11-22T19:21:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5tDTYp",
                                           "createdAt":  "2023-11-28T10:57:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ilonatommy",
                                           "body":  "What does \"runtime tests\" mean?",
                                           "updatedAt":  "2023-11-28T10:57:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5tF-ji",
                                           "createdAt":  "2023-11-28T16:49:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "\u003e What does \"runtime tests\" mean?\r\n\r\nThese are in `src/tests`. Note that we don\u0027t run wasm runtime tests with AOT either, yet.",
                                           "updatedAt":  "2023-11-28T16:49:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5tO9vf",
                                           "createdAt":  "2023-11-29T20:17:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODOCCFg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ilonatommy",
                                                                               "createdAt":  "2023-11-30T09:22:09Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "radical",
                                           "body":  "Instead of runtimetests with AOT, the first thing to do would be `runtimetests` with the interpreter. That is what we have for wasm right now.\r\n\r\nYou can look in `src/tests` for what we do for wasm. For example we have `Common/wasm-test-runner/WasmTestRunner.proj`, which you will probably need to duplicate for wasi. Look for `TargetsBrowser` to find out more about where we do custom things for wasm.",
                                           "updatedAt":  "2023-11-29T20:17:53Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "[mono][wasi] Stand up AOT tests in ci",
        "labels":  [
                       "arch-wasm",
                       "area-Codegen-AOT-mono",
                       "os-wasi"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/95393",
        "createdAt":  "2023-11-29T12:52:04Z",
        "number":  95393,
        "author":  "ivanpovazan",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-12-13T17:47:41Z",
        "body":  "### Description\r\n\r\nThe following user-filtered exception handling samples are failing with Mono in different configurations when running with NodeJs:\r\n\r\n| Test name                      | interp                                       | interp+AOT                                   |\r\n|--------------------------------|----------------------------------------------|----------------------------------------------|\r\n| [TestFilter](https://github.com/dotnet/runtimelab/blob/80f3bbf843b27998e58e52231e795e1832b91e4f/src/tests/nativeaot/SmokeTests/HelloWasm/ExceptionHandlingTests.Common.cs#L512)                     | ✅  Expected: 4 Actual: 4 Result: PASS           | ❌ Expected: 4 Actual: 3 Result: FAIL           |\r\n| [TestIntraFrameFilterOrderBasic](https://github.com/dotnet/runtimelab/blob/80f3bbf843b27998e58e52231e795e1832b91e4f/src/tests/nativeaot/SmokeTests/HelloWasm/ExceptionHandlingTests.Common.cs#L575) | ✅ Expected: 4 Actual: 4 Result: PASS           | ❌ Expected: 4 Actual: -1 Result: FAIL          |\r\n| [TestIntraFrameFilterOrderDeep](https://github.com/dotnet/runtimelab/blob/80f3bbf843b27998e58e52231e795e1832b91e4f/src/tests/nativeaot/SmokeTests/HelloWasm/ExceptionHandlingTests.Common.cs#L620)  | ✅ Expected: 7 Actual: 7 Result: PASS           | ❌ RangeError: Maximum call stack size exceeded |\r\n| [TestCatchUnreachableViaFilter](https://github.com/dotnet/runtimelab/blob/80f3bbf843b27998e58e52231e795e1832b91e4f/src/tests/nativeaot/SmokeTests/HelloWasm/ExceptionHandlingTests.Common.cs#L741)  | ❌ RangeError: Maximum call stack size exceeded | ❌ RangeError: Maximum call stack size exceeded |\r\n\r\nThese samples are used as unit tests verifying WASM exception handling support with NativeAOT in:  https://github.com/dotnet/runtimelab/blob/80f3bbf843b27998e58e52231e795e1832b91e4f/src/tests/nativeaot/SmokeTests/HelloWasm/ExceptionHandlingTests.Common.cs \r\n\r\n### Repro\r\n\r\nI extracted the failing samples into a [Program.cs](https://gist.github.com/ivanpovazan/759244a4a6aca1fe73393e7f95e4dc77) which can be placed instead of https://github.com/dotnet/runtime/blob/main/src/mono/sample/wasm/console-node/Program.cs\r\nand then built/run with different Mono configurations:\r\n\r\n- interp:\r\n    ```\r\n    ./dotnet.sh build -c Release -t:RunSample src/mono/sample/wasm/console-node/Wasm.Console.Node.Sample.csproj\r\n    ```\r\n- interp+AOT:\r\n    ```\r\n    ./dotnet.sh build -c Release -t:RunSample -p:RunAOTCompilation=true src/mono/sample/wasm/console-node/Wasm.Console.Node.Sample.csproj\r\n    ```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhn9eow==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5tL7Sp",
                                           "createdAt":  "2023-11-29T12:53:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\r\n\r\nThe following user-filtered exception handling samples are failing with Mono in different configurations when running with NodeJs:\r\n\r\n| Test name                      | interp                                       | interp+AOT                                   |\r\n|--------------------------------|----------------------------------------------|----------------------------------------------|\r\n| [TestFilter](https://github.com/dotnet/runtimelab/blob/80f3bbf843b27998e58e52231e795e1832b91e4f/src/tests/nativeaot/SmokeTests/HelloWasm/ExceptionHandlingTests.Common.cs#L512)                     | Expected: 4 Actual: 4 Result: PASS           | Expected: 4 Actual: 3 Result: FAIL           |\r\n| [TestIntraFrameFilterOrderBasic](https://github.com/dotnet/runtimelab/blob/80f3bbf843b27998e58e52231e795e1832b91e4f/src/tests/nativeaot/SmokeTests/HelloWasm/ExceptionHandlingTests.Common.cs#L575) | Expected: 4 Actual: 4 Result: PASS           | Expected: 4 Actual: -1 Result: FAIL          |\r\n| [TestIntraFrameFilterOrderDeep](https://github.com/dotnet/runtimelab/blob/80f3bbf843b27998e58e52231e795e1832b91e4f/src/tests/nativeaot/SmokeTests/HelloWasm/ExceptionHandlingTests.Common.cs#L620)  | Expected: 7 Actual: 7 Result: PASS           | RangeError: Maximum call stack size exceeded |\r\n| [TestCatchUnreachableViaFilter](https://github.com/dotnet/runtimelab/blob/80f3bbf843b27998e58e52231e795e1832b91e4f/src/tests/nativeaot/SmokeTests/HelloWasm/ExceptionHandlingTests.Common.cs#L741)  | RangeError: Maximum call stack size exceeded | RangeError: Maximum call stack size exceeded |\r\n\r\nThese samples are used as unit tests verifying WASM exception handling support with NativeAOT in:  https://github.com/dotnet/runtimelab/blob/80f3bbf843b27998e58e52231e795e1832b91e4f/src/tests/nativeaot/SmokeTests/HelloWasm/ExceptionHandlingTests.Common.cs \r\n\r\n### Repro\r\n\r\nI extracted the failing samples into a [Program.cs](https://gist.github.com/ivanpovazan/759244a4a6aca1fe73393e7f95e4dc77) which can be placed instead of https://github.com/dotnet/runtime/blob/main/src/mono/sample/wasm/console-node/Program.cs\r\nand then built with different Mono configurations:\r\n\r\n- interp:\r\n    ```\r\n    ./dotnet.sh build -c Release -t:RunSample src/mono/sample/wasm/console-node/Wasm.Console.Node.Sample.csproj\r\n    ```\r\n- interp+AOT:\r\n    ```\r\n    ./dotnet.sh build -c Release -t:RunSample -p:RunAOTCompilation=true src/mono/sample/wasm/console-node/Wasm.Console.Node.Sample.csproj\r\n    ```\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eivanpovazan\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-wasm`, `os-browser`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e9.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-11-29T12:53:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5tL7cN",
                                           "createdAt":  "2023-11-29T12:54:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODN7rEA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "SingleAccretion",
                                                                               "createdAt":  "2023-11-29T13:40:17Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ivanpovazan",
                                           "body":  "/cc: @maraf @SingleAccretion ",
                                           "updatedAt":  "2023-11-29T12:56:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5tMF5h",
                                           "createdAt":  "2023-11-29T13:21:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODN7iqQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ivanpovazan",
                                                                               "createdAt":  "2023-11-29T13:23:42Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "SingleAccretion",
                                           "body":  "Also linking #86978.",
                                           "updatedAt":  "2023-11-29T13:21:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5xCBWC",
                                           "createdAt":  "2024-01-17T18:15:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "cc @steveisok\r\n",
                                           "updatedAt":  "2024-01-17T18:15:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Gf16j",
                                           "createdAt":  "2024-07-29T17:24:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "cc @BrzVlad ",
                                           "updatedAt":  "2024-07-29T17:24:16Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "[mono][wasm] Exception handling failures with filters",
        "labels":  [
                       "arch-wasm",
                       "area-Codegen-AOT-mono",
                       "os-browser"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/95406",
        "createdAt":  "2023-11-29T15:11:32Z",
        "number":  95406,
        "author":  "jeffgoku",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODE5iIA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Timur-Filatov",
                                            "createdAt":  "2025-06-26T18:34:15Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-09-16T19:53:50Z",
        "body":  "### Description\n\nRandom crash at the assertion in release mode, no problem for debug mode\n\n### Reproduction Steps\n\nNo repro, only happened in release mode\n\n### Expected behavior\n\nshould not crash\n\n### Actual behavior\n\ncrash\n\n### Regression?\n\nworks in dotnet 7\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n* dotnet 8\r\n* MAUI 8.0.3\r\n* android arm64\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOxLRIng==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5tNK7O",
                                           "createdAt":  "2023-11-29T15:46:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027arch-android\u0027: @steveisok, @akoeplinger\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\n\nRandom crash at the assertion in release mode, no problem for debug mode\n\n### Reproduction Steps\n\nNo repro, only happened in release mode\n\n### Expected behavior\n\nshould not crash\n\n### Actual behavior\n\ncrash\n\n### Regression?\n\nworks in dotnet 7\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n* dotnet 8\r\n* MAUI 8.0.3\r\n* android arm64\n\n### Other information\n\n_No response_\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ejeffgoku\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`os-android`, `untriaged`, `area-Codegen-AOT-mono`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-11-29T15:46:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5tNLdm",
                                           "createdAt":  "2023-11-29T15:47:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "hi @jeffgoku thanks for the bug report.  Do you have a sample app that demonstrates the issue that you could share with us?",
                                           "updatedAt":  "2023-11-29T15:47:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5tNLiG",
                                           "createdAt":  "2023-11-29T15:47:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "This issue has been marked `needs-author-action` and may be missing some important information.",
                                           "updatedAt":  "2023-11-29T15:47:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5tNMlY",
                                           "createdAt":  "2023-11-29T15:50:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "This is probably some profiled AOT issue. I think MAUI ships an AOT profile for android that is used by default on Android\r\n\r\n/cc @jonathanpeppers ",
                                           "updatedAt":  "2023-11-29T15:50:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5tNQGB",
                                           "createdAt":  "2023-11-29T15:57:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jonathanpeppers",
                                           "body":  "@jeffgoku If you want to try, you can \"AOT everything\" by setting `AndroidEnableProfiledAot=false` in your `.csproj`.\r\n\r\nIt\u0027s worth checking if that fixes it.",
                                           "updatedAt":  "2023-11-29T15:57:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5tQWVB",
                                           "createdAt":  "2023-11-30T02:23:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeffgoku",
                                           "body":  "\u003e hi @jeffgoku thanks for the bug report. Do you have a sample app that demonstrates the issue that you could share with us?\r\n\r\nSorry I dont have a sample app, I think it will crash after allocate enough memory to trigger a GC",
                                           "updatedAt":  "2023-11-30T02:23:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5tQXIn",
                                           "createdAt":  "2023-11-30T02:27:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeffgoku",
                                           "body":  "\u003e @jeffgoku If you want to try, you can \"AOT everything\" by setting `AndroidEnableProfiledAot=false` in your `.csproj`.\r\n\u003e \r\n\u003e It\u0027s worth checking if that fixes it.\r\n\r\n@jonathanpeppers Thanks, I will give it a try some later time.",
                                           "updatedAt":  "2023-11-30T02:27:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5v4X_2",
                                           "createdAt":  "2024-01-04T12:52:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jurganson",
                                           "body":  "@jeffgoku @jonathanpeppers Stumbled upon this, hitting the same issue. Setting AndroidEnableProfiledAot to \u0027false\u0027 seems to have fixed the issue. What is the next move here, is this workaround acceptable? Otherwise, I could use some time to create a small sample.",
                                           "updatedAt":  "2024-01-04T12:52:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5v4_cv",
                                           "createdAt":  "2024-01-04T14:44:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODf60Xg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "veringm",
                                                                               "createdAt":  "2024-04-29T12:56:07Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jonathanpeppers",
                                           "body":  "If someone could share a `.binlog` of the error, that would help us: https://aka.ms/binlog\r\n\r\nIn the past, the only case I\u0027ve seen `AndroidEnableProfiledAot=false` help was if `EnableLLVM=true` was also being used. So, it\u0027s worth knowing if that is the case here.\r\n\r\nIf you are OK with the app size increase, turning off `AndroidEnableProfiledAot` will result in better performance, generally.",
                                           "updatedAt":  "2024-01-04T14:44:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5wDUDb",
                                           "createdAt":  "2024-01-07T02:20:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "4310V343k",
                                           "body":  "Could be related: https://github.com/ppy/osu/pull/24500#issuecomment-1676028731",
                                           "updatedAt":  "2024-01-07T02:20:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5xeeC9",
                                           "createdAt":  "2024-01-22T11:32:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "anton-yashin",
                                           "body":  "Just caught this one:\r\n```\r\n01-22 15:20:27.953 16355 16401 E         : * Assertion at /__w/1/s/src/mono/mono/mini/aot-runtime.c:5220, condition `plt_entry\u0027 not met\r\n--------- beginning of crash\r\n01-22 15:20:27.954 16355 16401 F libc    : Fatal signal 6 (SIGABRT), code -6 in tid 16401 (.NET Timer)\r\n01-22 15:20:27.955 16355 16355 I art     : Starting a blocking GC Explicit\r\n01-22 15:20:27.957 16410 16410 I AEE_AED : handle_request(12)\r\n01-22 15:20:27.957 16410 16410 I AEE_AED : check process 16355 name:.myapplication.droid\r\n01-22 15:20:27.957 16410 16410 I AEE_AED : tid 16401 abort msg address:0x0000000000000000 si_code:-6 (request from 16355:10255)\r\n01-22 15:20:27.957 16410 16410 W AEE_AED : debuggerd: handling request: pid=16355 uid=10255 gid=10255 tid=16401\r\n01-22 15:20:27.958 16410 16410 I AEE_AED : [preset_info] pid: 16355, tid: 16401, name: .NET Timer  \u003e\u003e\u003e ru.myapplication.droid \u003c\u003c\u003c\r\n01-22 15:20:28.030 16410 16410 I AEE_AED : *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n01-22 15:20:28.030 16410 16410 I AEE_AED : Build fingerprint: \u0027Sony/H4311/H4311:7.1.1/49.0.A.6.107/2691393601:user/release-keys\u0027\r\n01-22 15:20:28.030 16410 16410 I AEE_AED : Revision: \u00270\u0027\r\n01-22 15:20:28.030 16410 16410 I AEE_AED : ABI: \u0027arm64\u0027\r\n01-22 15:20:28.030 16410 16410 I AEE_AED : pid: 16355, tid: 16401, name: .NET Timer  \u003e\u003e\u003e ru.myapplication.droid \u003c\u003c\u003c\r\n01-22 15:20:28.030 16410 16410 I AEE_AED : signal 6 (SIGABRT), code -6 (SI_TKILL), fault addr --------\r\n01-22 15:20:28.031 16410 16410 I AEE_AED :     x0   0000000000000000  x1   0000000000004011  x2   0000000000000006  x3   0000000000000008\r\n01-22 15:20:28.031 16410 16410 I AEE_AED :     x4   6f635f736600ffff  x5   6f635f736600ffff  x6   000000797d64f000  x7   00000000000000c0\r\n01-22 15:20:28.031 16410 16410 I AEE_AED :     x8   0000000000000083  x9   ffffffffffffffdf  x10  0000000000000000  x11  0000000000000001\r\n01-22 15:20:28.031 16410 16410 I AEE_AED :     x12  0101010101010101  x13  0000000000000010  x14  ffffffffffffffff  x15  000000797a4b7678\r\n01-22 15:20:28.031 16410 16410 I AEE_AED :     x16  000000797a4d3ee0  x17  000000797a47c834  x18  0000000000000000  x19  000000794cfff4f8\r\n01-22 15:20:28.031 16410 16410 I AEE_AED :     x20  0000000000000006  x21  000000794cfff450  x22  0000000000000000  x23  000000794cffeb10\r\n01-22 15:20:28.031 16410 16410 I AEE_AED :     x24  0000000000000001  x25  0000000000000001  x26  000000794cfff030  x27  0000007951736000\r\n01-22 15:20:28.031 16410 16410 I AEE_AED :     x28  000000794cfff050  x29  000000794cffe450  x30  000000797a479c60\r\n01-22 15:20:28.031 16410 16410 I AEE_AED :     sp   000000794cffe430  pc   000000797a47c83c  pstate 0000000060000000\r\n01-22 15:20:28.035 16410 16410 I AEE_AED : \r\n01-22 15:20:28.035 16410 16410 I AEE_AED : backtrace:\r\n01-22 15:20:28.035 16410 16410 I AEE_AED :     #00 pc 000000000006d83c  /system/lib64/libc.so (tgkill+8)\r\n01-22 15:20:28.035 16410 16410 I AEE_AED :     #01 pc 000000000006ac5c  /system/lib64/libc.so (pthread_kill+64)\r\n01-22 15:20:28.035 16410 16410 I AEE_AED :     #02 pc 0000000000024198  /system/lib64/libc.so (raise+24)\r\n01-22 15:20:28.035 16410 16410 I AEE_AED :     #03 pc 000000000001ca3c  /system/lib64/libc.so (abort+52)\r\n01-22 15:20:28.035 16410 16410 I AEE_AED :     #04 pc 000000000001f360  /data/app/ru.myapplication.droid-1/lib/arm64/libmonodroid.so (_ZN7xamarin7android7Helpers17abort_applicationEv+8)\r\n01-22 15:20:28.035 16410 16410 I AEE_AED :     #05 pc 0000000000035660  /data/app/ru.myapplication.droid-1/lib/arm64/libmonodroid.so (_ZN7xamarin7android8internal16MonodroidRuntime16mono_log_handlerEPKcS4_S4_iPv+144)\r\n01-22 15:20:28.035 16410 16410 I AEE_AED :     #06 pc 00000000001d6fe8  /data/app/ru.myapplication.droid-1/lib/arm64/libmonosgen-2.0.so\r\n01-22 15:20:28.035 16410 16410 I AEE_AED :     #07 pc 00000000001d7114  /data/app/ru.myapplication.droid-1/lib/arm64/libmonosgen-2.0.so\r\n01-22 15:20:28.035 16410 16410 I AEE_AED :     #08 pc 00000000001d7158  /data/app/ru.myapplication.droid-1/lib/arm64/libmonosgen-2.0.so\r\n01-22 15:20:28.035 16410 16410 I AEE_AED :     #09 pc 000000000013f1cc  /data/app/ru.myapplication.droid-1/lib/arm64/libmonosgen-2.0.so\r\n01-22 15:20:28.035 16410 16410 I AEE_AED :     #10 pc 00000000001526b8  /data/app/ru.myapplication.droid-1/lib/arm64/libmonosgen-2.0.so\r\n01-22 15:20:28.035 16410 16410 I AEE_AED :     #11 pc 0000000000004f00  \u003canonymous:0000007977d25000\u003e\r\n```\r\nBits from project file\r\n```\r\n    \u003cTargetFramework\u003enet8.0-android\u003c/TargetFramework\u003e\r\n    \u003cRuntimeIdentifiers\u003eandroid-arm;android-arm64\u003c/RuntimeIdentifiers\u003e\r\n    \u003cAndroidEnableProfiledAot\u003eTrue\u003c/AndroidEnableProfiledAot\u003e\r\n    \u003cTrimMode\u003elink\u003c/TrimMode\u003e\r\n    \u003cEnableLLVM\u003eTrue\u003c/EnableLLVM\u003e\r\n    \r\n      \u003c!-- begin temporary fix for https://github.com/dotnet/runtime/issues/96872 should be removed after february 2024 service release is released --\u003e\r\n  \u003cTarget Name=\"UpdateRuntimePackVersion\" BeforeTargets=\"ProcessFrameworkReferences\"\u003e\r\n    \u003cItemGroup\u003e\r\n      \u003cKnownRuntimePack Condition=\"%(RuntimePackLabels) == \u0027Mono\u0027\" LatestRuntimeFrameworkVersion=\"8.0.0\" /\u003e\r\n    \u003c/ItemGroup\u003e\r\n  \u003c/Target\u003e\r\n  \u003c!-- end temporary fix for https://github.com/dotnet/runtime/issues/96872 should be removed after february 2024 service release is released --\u003e\r\n\r\n```\r\nWorks fine without EnableLLVM.",
                                           "updatedAt":  "2024-01-22T11:32:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5zSEgL",
                                           "createdAt":  "2024-02-08T13:22:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ARayane24",
                                           "body":  "@jeffgoku Try enabling the **trim** operation for the debugging mode too ... this might help u find the problem \r\nStep 1 :\r\n![image](https://github.com/dotnet/runtime/assets/117120124/13682f8c-ac85-4b49-914d-627b7fb5d9b0)\r\nStep 2 :\r\n![image](https://github.com/dotnet/runtime/assets/117120124/f58130f8-d3e5-4048-814d-fdd6fe07e772)\r\n\r\nI hope this might help",
                                           "updatedAt":  "2024-02-08T13:23:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc50XZ7w",
                                           "createdAt":  "2024-02-19T11:54:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEYF9bQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Timur-Filatov",
                                                                               "createdAt":  "2025-06-26T18:35:39Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "taublast",
                                           "body":  "Enabling trimming for debug didn\u0027t change much for me, `Debug` was running fine.\r\n\r\nAt the same time, I can confirm that the combination of\r\n```\r\n\u003cAndroidEnableProfiledAot\u003eFalse\u003c/AndroidEnableProfiledAot\u003e\r\n\u003cEnableLLVM\u003eTrue\u003c/EnableLLVM\u003e\r\n```\r\nruns okay on `Release`, while\r\n\r\n`\u003cEnableLLVM\u003eTrue\u003c/EnableLLVM\u003e`\r\n\r\nrandomly crashes with `condition \u0027plt_entry\u0027 not met` message.",
                                           "updatedAt":  "2024-02-19T11:55:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc52I3lE",
                                           "createdAt":  "2024-03-06T23:34:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "indieshack",
                                           "body":  "Can confirm setting AndroidEnableProfiledAot=false stops crashing of my release app caused by \"aot-runtime.c:5220, condition `plt_entry\u0027 not met\", but the APK is now 63mb, twice the size when I don\u0027t have that value set to false (and 3x the size of the Xamarin forms APK version the project was migrated from), the compile time on a core i9 is through the roof.",
                                           "updatedAt":  "2024-03-06T23:34:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc52M90H",
                                           "createdAt":  "2024-03-07T09:41:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jurganson",
                                           "body":  "@jonathanpeppers Is the default MAUI-shipped Android AOT profile at cause here? I don\u0027t mind the extra AOT time and space requirements but I am simply curious. Also I vaguely remember that creating your own AOT profile in .NET Android was not possible, yet?",
                                           "updatedAt":  "2024-03-07T09:41:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc52PWoP",
                                           "createdAt":  "2024-03-07T15:18:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODhelwA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jurganson",
                                                                               "createdAt":  "2024-03-07T16:09:39Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "indieshack",
                                                                               "createdAt":  "2024-03-07T16:53:13Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "taublast",
                                                                               "createdAt":  "2024-04-23T16:39:02Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "veringm",
                                                                               "createdAt":  "2024-04-29T12:57:53Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Poko-Apps",
                                                                               "createdAt":  "2024-05-11T09:40:55Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "jonathanpeppers",
                                           "body":  "There are some known issues mixing:\r\n```xml\r\n\u003cAndroidEnableProfiledAot\u003eTrue\u003c/AndroidEnableProfiledAot\u003e\r\n\u003cEnableLLVM\u003eTrue\u003c/EnableLLVM\u003e\r\n```\r\n\r\nThe reason being when we record an AOT profile (recorded under JIT), some of the wrong code paths are taken for checks like `RuntimeFeature.IsSomeHardwareInstrinsticSupported`. I don\u0027t think we have a solution for that.\r\n\r\nBut this combination should work:\r\n```xml\r\n\u003cAndroidEnableProfiledAot\u003eFalse\u003c/AndroidEnableProfiledAot\u003e\r\n\u003cEnableLLVM\u003eTrue\u003c/EnableLLVM\u003e\r\n```\r\nOr this one:\r\n```xml\r\n\u003c!-- Note this is the default if you left these blank --\u003e\r\n\u003cAndroidEnableProfiledAot\u003eTrue\u003c/AndroidEnableProfiledAot\u003e\r\n\u003cEnableLLVM\u003eFalse\u003c/EnableLLVM\u003e\r\n```\r\n\r\nYou can record your own profile with this NuGet package, but it wouldn\u0027t solve this issue:\r\n\r\n* https://github.com/jonathanpeppers/Mono.Profiler.Android?tab=readme-ov-file#usage-of-the-aot-profiler",
                                           "updatedAt":  "2024-03-07T15:18:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc52QVhZ",
                                           "createdAt":  "2024-03-07T16:52:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "indieshack",
                                           "body":  "Thanks - rebuilt with the last setting you mention  setting and the APK is back to the regular maui APK size and doesn\u0027t crash.",
                                           "updatedAt":  "2024-03-07T16:53:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58Ix0R",
                                           "createdAt":  "2024-04-29T13:04:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "veringm",
                                           "body":  "I too experience this issue. If one was to choose between \r\n\r\n```\r\n\u003cAndroidEnableProfiledAot\u003eFalse\u003c/AndroidEnableProfiledAot\u003e\r\n\u003cEnableLLVM\u003eTrue\u003c/EnableLLVM\u003e\r\n\r\n```\r\nand \r\n\r\n```\r\n\u003cAndroidEnableProfiledAot\u003eTrue\u003c/AndroidEnableProfiledAot\u003e\r\n\u003cEnableLLVM\u003eFalse\u003c/EnableLLVM\u003e\r\n```\r\n\r\nI believe AndroidEnableProfiledAot=True is important if app-size is an issue, but the best performance on runtime will be with AndroidEnableProfiledAot=False and EnableLLVM=True. Is that generally correct?",
                                           "updatedAt":  "2024-04-29T13:04:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6GVf9L",
                                           "createdAt":  "2024-07-27T05:32:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "beeradmoore",
                                           "body":  "If anyone is still looking for a repro of this issue then my [ImageSharpMAUITest](https://github.com/beeradmoore/ImageSharpMAUITest/) (as of commit `ecdf0d92a7195d8f0e9fb74c64cdca4e53db029b`) will reproduce it.\r\n\r\nIn the csproj I have\r\n```xml\r\n\u003cPropertyGroup Condition=\"$([MSBuild]::GetTargetPlatformIdentifier(\u0027$(TargetFramework)\u0027)) == \u0027android\u0027 AND \u0027$(Configuration)\u0027 == \u0027Release\u0027\"\u003e\r\n    \u003cEnableLLVM\u003etrue\u003c/EnableLLVM\u003e\r\n    \u003cRunAOTCompilation\u003etrue\u003c/RunAOTCompilation\u003e\r\n    \u003cAndroidEnableProfiledAot\u003efalse\u003c/AndroidEnableProfiledAot\u003e\r\n\u003c/PropertyGroup\u003e\r\n```\r\n\r\nwhich runs fine. Removing `AndroidEnableProfiledAot` and hitting the `Run all tests` in the application itself will result in a crash. \r\n\r\n\u003e 07-27 14:06:30.804 7895 7961 E gesharpmauitest: * Assertion at /__w/1/s/src/mono/mono/mini/aot-runtime.c:5220, condition `plt_entry\u0027 not met\r\n\u003e 07-27 14:06:30.806 7895 7961 F libc : Fatal signal 6 (SIGABRT), code -1 (SI_QUEUE) in tid 7961 (.NET TP Worker), pid 7895 (gesharpmauitest)\r\n \r\nI did some different things of using different combinations of `EnableLLVM`, `RunAOTCompilation`, and `AndroidEnableProfiledAot` determining performance and filezie. It is written up in [this comment](https://github.com/SixLabors/ImageSharp/pull/2762#issuecomment-2253776267).\r\n\r\nThe TLDR is,\r\n\r\n```xml\r\n\u003cEnableLLVM\u003efalse\u003c/EnableLLVM\u003e\r\n\u003cAndroidEnableProfiledAot\u003etrue\u003c/AndroidEnableProfiledAot\u003e\r\n```\r\nHaving this setup appears to be the same of just deleting the 2 lines.\r\n\r\n---------\r\n\r\n```xml\r\n\u003cEnableLLVM\u003etrue\u003c/EnableLLVM\u003e\r\n\u003cAndroidEnableProfiledAot\u003efalse\u003c/AndroidEnableProfiledAot\u003e\r\n```\r\nWill give more performance, but at a larger filesize.\r\n\r\n---------\r\n\r\n```xml\r\n\u003cRunAOTCompilation\u003etrue\u003c/RunAOTCompilation\u003e\r\n```\r\nMay be implied by `EnableLLVM`. Googling \"RunAOTCompilation docs\" did not lead to any docs on the first page of results, I don\u0027t care enough to try hunt ths down on a Saturday to see if that is true or not 😅 ",
                                           "updatedAt":  "2024-07-27T05:32:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6pUhzi",
                                           "createdAt":  "2025-04-30T03:51:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SpaceTimee",
                                           "body":  "The problem still exists. When\n\n```\n\u003cEnableLLVM\u003etrue\u003c/EnableLLVM\u003e\n\u003cRunAOTCompilation\u003etrue\u003c/RunAOTCompilation\u003e\n```\n\nGoToAsync() is likely to cause a crash.\n\nI tested different combinations of the two optimizations, but strangely, at least in [my project](https://github.com/SpaceTimee/Sheas-Cealer-Droid), the size of the app with LLVM enabled alone (21.3MB) is significantly smaller than the app with AOT enabled alone (31.3MB), while the size of the app with both LLVM and AOT enabled is 30.3MB, so I finally chose to enable LLVM and disable AOT.",
                                           "updatedAt":  "2025-04-30T03:51:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6paXDw",
                                           "createdAt":  "2025-04-30T14:52:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "taublast",
                                           "body":  "Make sure you call this one on UI thread. The faster the app works (aot) the more likely your threads execution flow will be differentl from what you had on Debug.",
                                           "updatedAt":  "2025-04-30T14:52:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6wLTrn",
                                           "createdAt":  "2025-06-09T13:11:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEYGAtQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "Timur-Filatov",
                                                                               "createdAt":  "2025-06-26T18:41:29Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ThreeSevenths",
                                           "body":  "I also have a repro running into this. https://github.com/ThreeSevenths/MauiSqliteIssue\n\nThe workaround posted by [@beeradmoore on 2024-07-27](https://github.com/dotnet/runtime/issues/95406#issuecomment-2253782859) does work for my test app. Although I lost about 5% perf with this combination. \n\nI think there\u0027s an issue with visibility here. `\u003cAndroidEnableProfiledAot\u003e` is enabled by default, and `\u003cEnableLLVM\u003e` is not. If a dev adds `\u003cEnableLLVM\u003e` they could experience this if they like me, naively are working on performance in their apps. No warnings are triggered, and one must identify the correct log entry for the failed assertion to arrive at this GH issue and find a workaround for the problem they are facing. This is time consuming and has many cliffs to fall off and not arrive at this GH issue. The fact that it\u0027s been open for more than 18 months does not help. I see this and other issues like it as endemic to the Maui project, and am concerned about the long term viability of any apps developed with it. I hope the team understands that these pitfalls might only affect a small percentage of users from telemetry, but they should still be addressed.",
                                           "updatedAt":  "2025-06-09T13:11:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6zhGRI",
                                           "createdAt":  "2025-06-27T06:11:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Timur-Filatov",
                                           "body":  "Hi @jonathanpeppers \nYour contribution to MAUI optimization is difficult to overestimate.\n\nRegarding the current issue, we suggest all MAUI users either to make an app work ~2 times slower with LLVM disabled, but it will start 2 times faster with AOT enabled, or to start 2 times slower, but work ~2 times faster.\nIs this the best we can offer (with the love)?\n\nI\u0027ve converted one of the apps to React Native, it starts 0.5 sec compared to 6 sec for MAUI. Also same lists scrolling without any lags and navigation is 2-3 times faster compared to MAUI CollectionView.\nIt\u0027s not good to ignore this bug in this conditions, even if sometimes MAUI is faster in runtime/logic/bindings.\nThought shadows \u0026 swipe view can also be faster on MAUI, but shadows are not working for part of devices due to Android bug (was working in .net8), and some devices will stay without shadows forever. \n\nMy clients complain about low performance of scrolling and navigation on middle Android devices that were bought 1-2 years ago, that it is impossible to work on them because of the lags, I can\u0027t offer them to replace the entire fleet of corporate devices with top ones, or to rewrite entire app to RN or anything else.\n\nCurrently when using AOT + LLVM without ProfiledAot, apk is 74 MB (AndroidStripILAfterAOT can shrink to 69 MB), there app starts 4 sec, but Azure Blobs not downloading,\nIf enabling ProfiledAot, Azure Blobs starts to download, but got this \"plt_entry not met\" crash every 1 minute in random places, the apk is 49 MB, starts 4 sec.\n\nNow disabled AOT at all, app starts 8 sec, but enabled LLVM, so it works faster and apk is 43 MB\n(set single arm64 abi per build, because in .net9 there is another bug, if building 2 abis, each apk is 1.5 times larger: 65 MB).",
                                           "updatedAt":  "2025-06-27T06:12:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6zpFTc",
                                           "createdAt":  "2025-06-27T17:36:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jonathanpeppers",
                                           "body":  "@Timur-Filatov if there is a specific thing you\u0027d like us to focus on, can you file an issue [here](https://github.com/dotnet/android/issues)?\n\nThe conversation here is more about mixing Profiled AOT and LLVM, which doesn\u0027t work today.\n\nAre the numbers from app sizes above from Google Play? As you\u0027re likely seeing the size of all architectures, densities, languages combined. Google Play knows how to split up app bundles. To get an *estimate* you could build a single architecture to measure app size, like `-r android-arm64`.",
                                           "updatedAt":  "2025-06-27T17:36:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7Ep5NU",
                                           "createdAt":  "2025-09-16T15:34:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ysmoradi",
                                           "body":  "In iOS, we\u0027ve option to AOT compile everything, while it fallbacks to Interpreter automatically using the following configuration:\n```\u003cMtouchInterpreter\u003e-all\u003c/MtouchInterpreter\u003e``` when the currently running code block is not compatible with AOT.\nMore info at https://learn.microsoft.com/en-us/dotnet/maui/macios/interpreter\nNote that this option is not the same as ```\u003cUseInterpreter\u003etrue\u003c/UseInterpreter\u003e```\n\nIn Android, we can AOT compile everything by setting ```\u003cRunAOTCompilation\u003etrue\u003c/RunAOTCompilation\u003e``` and ```\u003cAndroidEnableProfiledAot\u003efalse\u003c/AndroidEnableProfiledAot\u003e``` and I *think* it automatically fallbacks to JIT when the running code is not compatible.\n\nWhat\u0027s wrong with ```\u003cEnableLLVM\u003etrue\u003c/EnableLLVM\u003e```? Why it can\u0027t fallback to JIT in case the running code is not compatible with it?\n\nDo we expect things to change regarding to the new Native AOT?\n\n@jonathanpeppers ",
                                           "updatedAt":  "2025-09-16T15:34:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7EtEie",
                                           "createdAt":  "2025-09-16T19:53:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jonathanpeppers",
                                           "body":  "NativeAOT doesn\u0027t have an interpreter, and you get [build warnings](https://learn.microsoft.com/en-us/dotnet/core/deploying/native-aot/fixing-warnings) for APIs that require it. APIs that require an interpreter won\u0027t work at all on NativeAOT.",
                                           "updatedAt":  "2025-09-16T19:53:50Z"
                                       }
                                   ],
                         "totalCount":  26
                     },
        "title":  "[mono] MAUI release mode crash Assertion at /__w/1/s/src/mono/mono/mini/aot-runtime.c:5220, condition `plt_entry\u0027 not met",
        "labels":  [
                       "os-android",
                       "area-Codegen-AOT-mono",
                       "needs-further-triage"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/97610",
        "createdAt":  "2024-01-28T09:23:59Z",
        "number":  97610,
        "author":  "srxqds",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-20T21:55:19Z",
        "body":  "I found  in `interp_jit_call_can_be_supported ` method\r\nhttps://github.com/dotnet/runtime/blob/c987e4f902859d4f80a24b45c5b2a7e4222b6c0e/src/mono/mono/mini/interp/interp.c#L8641\r\n\r\nthe generic method only support aot in llvmonly?\r\n\r\nwe want to use aot-interp mode, full aot `System.Private.CoreLib.dll`, and use `interp` for our code.\r\n\r\n1. what params should i use to build aot file\r\n2. what excecute mode should I set？ `MONO_AOT_MODE_INTERP` will not enable llvmonly ?\r\n\r\nhow can I did it?\r\n\r\n@vargaz @BrzVlad \r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOcmNGUA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5yGJbf",
                                           "createdAt":  "2024-01-29T08:41:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "srxqds",
                                           "body":  "and this lines set `MONO_OPT_GSHAREDVT` option are conflict: \r\nhttps://github.com/dotnet/runtime/blob/91beecdc32a893a7e2a16e4026dea7985c3aac1d/src/mono/mono/mini/aot-compiler.c#L14984-L15003",
                                           "updatedAt":  "2024-01-29T08:41:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5yPlQ5",
                                           "createdAt":  "2024-01-30T11:58:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "srxqds",
                                           "body":  "I have try to use `llvm` to not\r\n\r\n\u003e /monoinstaller/bin/mono-aot-cross -O=gsharedvt,float32 --debug --llvm --aot=mtriple=arm64-ios,static,dwarfdebug,mattr=+crc,direct-icalls,deterministic,nimt-trampolines=2000,ntrampolines=10000,nrgctx-fetch-trampolines=256,ngsharedvt-trampolines=4400,nftnptr-arg-trampolines=4000,nrgctx-trampolines=21000,nodebug,full,interp,asmonly,internal-logfile=/monoinstaller/log.txt,dump,data-outfile=/Users/game-netease/monoinstaller/native/System.Private.CoreLib.aotdata,llvm-path=/monoinstaller/bin,outfile=/monoinstaller/native/System.Private.CoreLib.dll.s,llvm-outfile=/monoinstaller/native/System.Private.CoreLib.dll-llvm.o /monoinstaller/native/System.Private.CoreLib.dll \r\n\r\nand use `lib tool` to generate static library:\r\n\u003e libtool -static -arch_only arm64 -o /monoinstaller/native/System.Private.CoreLib.dll.a /monoinstaller/native/System.Private.CoreLib.dll-llvm.o\r\n\r\nit will generate System.Private.CoreLib.dll.a success,\r\nbut it error on link:\r\n```\r\nld: warning: no platform load command found in \u0027/Users/game-netease/dotnet/benchmarks/runmonoonios/mono-8.0.0/native/System.Private.CoreLib.dll.a[2](System.Private.CoreLib.dll-llvm.o)\u0027, assuming: iOS\r\nld: Undefined symbols:\r\n  _mono_aot_corlibglobals, referenced from:\r\n      _mono_aot_file_info in System.Private.CoreLib.dll.a[2](System.Private.CoreLib.dll-llvm.o)\r\n  _mono_aot_corlibjit_code_end, referenced from:\r\n      _mono_aot_file_info in System.Private.CoreLib.dll.a[2](System.Private.CoreLib.dll-llvm.o)\r\n  _mono_aot_corlibjit_code_start, referenced from:\r\n      _mono_aot_file_info in System.Private.CoreLib.dll.a[2](System.Private.CoreLib.dll-llvm.o)\r\n  _mono_aot_corlibjit_got, referenced from:\r\n      _mono_aot_file_info in System.Private.CoreLib.dll.a[2](System.Private.CoreLib.dll-llvm.o)\r\n  _mono_aot_corlibmethod_addresses, referenced from:\r\n      _mono_aot_file_info in System.Private.CoreLib.dll.a[2](System.Private.CoreLib.dll-llvm.o)\r\n  _mono_aot_corlibplt, referenced from:\r\n      _mono_aot_file_info in System.Private.CoreLib.dll.a[2](System.Private.CoreLib.dll-llvm.o)\r\n  _mono_aot_corlibplt_end, referenced from:\r\n      _mono_aot_file_info in System.Private.CoreLib.dll.a[2](System.Private.CoreLib.dll-llvm.o)\r\n  _mono_aot_corlibunbox_trampoline_addresses, referenced from:\r\n      _mono_aot_file_info in System.Private.CoreLib.dll.a[2](System.Private.CoreLib.dll-llvm.o)\r\n  _mono_aot_corlibunbox_trampolines, referenced from:\r\n      _mono_aot_file_info in System.Private.CoreLib.dll.a[2](System.Private.CoreLib.dll-llvm.o)\r\n  _mono_aot_corlibunbox_trampolines_end, referenced from:\r\n      _mono_aot_file_info in System.Private.CoreLib.dll.a[2](System.Private.CoreLib.dll-llvm.o)\r\n\r\n```",
                                           "updatedAt":  "2024-01-30T11:58:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5yPl6W",
                                           "createdAt":  "2024-01-30T12:00:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "srxqds",
                                           "body":  "[System.Private.CoreLib.zip](https://github.com/dotnet/runtime/files/14097312/System.Private.CoreLib.zip)\r\n\r\nthis is the `System.Private.CoreLib.dll.a` and `System.Private.CoreLib.dll.aotdata` files",
                                           "updatedAt":  "2024-01-30T12:00:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5yPm88",
                                           "createdAt":  "2024-01-30T12:03:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "srxqds",
                                           "body":  "and if replace aot mode with `llvmonly`\r\n\r\n\u003e /monoinstaller/bin/mono-aot-cross -O=gsharedvt,float32 --debug --llvm --aot=mtriple=arm64-ios,static,dwarfdebug,mattr=+crc,direct-icalls,deterministic,nimt-trampolines=2000,ntrampolines=10000,nrgctx-fetch-trampolines=256,ngsharedvt-trampolines=4400,nftnptr-arg-trampolines=4000,nrgctx-trampolines=21000,nodebug,llvmonly,asmonly,internal-logfile=/monoinstaller/log.txt,dump,data-outfile=/Users/game-netease/monoinstaller/native/System.Private.CoreLib.aotdata,llvm-path=/monoinstaller/bin,outfile=/monoinstaller/native/System.Private.CoreLib.dll.s,llvm-outfile=/monoinstaller/native/System.Private.CoreLib.dll-llvm.o /monoinstaller/native/System.Private.CoreLib.dll\r\n\r\nit don\u0027t generate the `System.Private.CoreLib.dll.s` file, and can\u0027t found any error in log.txt file",
                                           "updatedAt":  "2024-01-30T12:03:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5yPqLB",
                                           "createdAt":  "2024-01-30T12:10:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "srxqds",
                                           "body":  "@vargaz @BrzVlad  could you have time to help?\r\n\r\nwe want to use aot generic method such as `Dictionary\u003cint, int\u003e`, `Dictionary\u003cint, string\u003e` in the interp assembly.\r\n\r\nfor example\r\n```c#\r\n// game.dll\r\n\r\nclass GameLogic\r\n{\r\npublic void Test()\r\n{\r\nDictionary\u003cint, int\u003e a = new Dictionary\u003cint, int\u003e();\r\na.Add(1, 2);  \r\n}\r\n}\r\n```\r\n\r\nI want to use interp mode to excecute game.dll and aot the `System.Private.CoreLib.dll`, so it can find in aot method.\r\nbecause the dictionary operator (add element, or iterator) are slow, we want use aot to speed up.\r\n\r\nhow can I make it work?\r\n",
                                           "updatedAt":  "2024-01-30T12:10:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5yP0vo",
                                           "createdAt":  "2024-01-30T12:35:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BrzVlad",
                                           "body":  "I would first try to get things going without llvm, it might be a bit easier. The important flags to use are `--aot=full,interp` for aot compilation of `SPC.dll`, and `--full-aot-interp` when running (`MONO_AOT_MODE_INTERP`). In this scenario, only methods that are not found in aot images are interpreted. I\u0027m not familiar with the toolchain setup when using `mono-aot-cross`, might want to replicate what our build tasks for iOS are doing.",
                                           "updatedAt":  "2024-01-30T12:35:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5yP6fu",
                                           "createdAt":  "2024-01-30T12:48:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "srxqds",
                                           "body":  "\u003e I would first try to get things going without llvm, it might be a bit easier. The important flags to use are `--aot=full,interp` for aot compilation of `SPC.dll`, and `--full-aot-interp` when running (`MONO_AOT_MODE_INTERP`). In this scenario, only methods that are not found in aot images are interpreted. I\u0027m not familiar with the toolchain setup when using `mono-aot-cross`, might want to replicate what our build tasks for iOS are doing.\r\n\r\nyes, if not use llvm, it can work, but the generic method can\u0027t use aot method because it will skip by `interp_jit_call_can_be_supported`\r\nhttps://github.com/dotnet/runtime/blob/c987e4f902859d4f80a24b45c5b2a7e4222b6c0e/src/mono/mono/mini/interp/interp.c#L8641\r\n\r\nthis line said the generic method only work in llvmonly",
                                           "updatedAt":  "2024-01-30T12:48:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5yQG1K",
                                           "createdAt":  "2024-01-30T13:15:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BrzVlad",
                                           "body":  "I see, it seems that we haven\u0027t yet implemented passing of the generic context in the non-llvmonly case, when transitioning from interpreter. I\u0027m not really familiar with running in llvmonly mode, but I would have assumed that passing similarly the `llvmonly` flag should have done the trick.",
                                           "updatedAt":  "2024-01-30T13:15:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5yVd6z",
                                           "createdAt":  "2024-01-31T01:57:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "srxqds",
                                           "body":  "yes, I have try it, there are many `mono_llvm_only` conditional statements, I just comment out this line\r\nhttps://github.com/dotnet/runtime/blob/c987e4f902859d4f80a24b45c5b2a7e4222b6c0e/src/mono/mono/mini/interp/interp.c#L8641\r\n\r\nbut I will crash\r\n```\r\n* thread #1, name = \u0027tid_103\u0027, queue = \u0027com.apple.main-thread\u0027, stop reason = signal SIGSEGV\r\n    frame #0: 0x0000000102d5cad8 RunMonoOniOS`System_Collections_Generic_Dictionary_2_TKey_GSHAREDVT_TValue_GSHAREDVT__ctor_int_System_Collections_Generic_IEqualityComparer_1_TKey_GSHAREDVT + 72\r\n    frame #1: 0x000000010329583c RunMonoOniOS`wrapper_other_object_gsharedvt_out_sig_int__object__intptr + 60\r\n  * frame #2: 0x000000010249efe0 RunMonoOniOS`do_jit_call(context=0x0000000282e308c0, ret_sp=0x0000000108b58090, sp=0x0000000108b58090, frame=0x000000016dc762e0, rmethod=0x00000001058cf430, error=0x000000016dc76368) at interp.c:2745:3 [opt]\r\n    frame #3: 0x0000000102494bd0 RunMonoOniOS`mono_interp_exec_method(frame=\u003cunavailable\u003e, context=0x0000000282e308c0, clause_args=\u003cunavailable\u003e) at interp.c:4313:4 [opt]\r\n    frame #4: 0x0000000102492444 RunMonoOniOS`interp_runtime_invoke(method=\u003cunavailable\u003e, obj=0x0000000000000000, params=0x0000000000000000, exc=\u003cunavailable\u003e, error=0x000000016dc76fb0) at interp.c:2109:2 [opt]\r\n    frame #5: 0x000000010245cae0 RunMonoOniOS`mono_jit_runtime_invoke(method=0x00000001058a6e50, obj=\u003cunavailable\u003e, params=\u003cunavailable\u003e, exc=\u003cunavailable\u003e, error=0x000000016dc76fb0) at mini-runtime.c:3672:12 [opt]\r\n    frame #6: 0x00000001023fdb74 RunMonoOniOS`mono_runtime_try_invoke [inlined] do_runtime_invoke(method=0x00000001058a6e50, obj=0x0000000000000000, params=0x0000000000000000, exc=0x000000016dc76a38, error=0x000000016dc76fb0) at object.c:2578:11 [opt]\r\n    frame #7: 0x00000001023fdb38 RunMonoOniOS`mono_runtime_try_invoke(method=0x00000001058a6e50, obj=0x0000000000000000, params=0x0000000000000000, exc=0x000000016dc76a38, error=0x000000016dc76fb0) at object.c:2735:9 [opt]\r\n    frame #8: 0x00000001023fc72c RunMonoOniOS`mono_runtime_class_init_full(vtable=0x00000001058c4568, error=0x000000016dc76fb0) at object.c:553:3 [opt]\r\n    frame #9: 0x000000010245ce14 RunMonoOniOS`mono_jit_runtime_invoke(method=0x00000001058a6df0, obj=\u003cunavailable\u003e, params=0x000000016dc76f50, exc=0x0000000000000000, error=0x000000016dc76fb0) at mini-runtime.c:3554:7 [opt]\r\n    frame #10: 0x00000001023fc068 RunMonoOniOS`mono_runtime_invoke_checked [inlined] do_runtime_invoke(method=0x00000001058a6df0, obj=0x0000000000000000, params=0x000000016dc76f50, exc=0x0000000000000000, error=0x000000016dc76fb0) at object.c:2578:11 [opt]\r\n    frame #11: 0x00000001023fc02c RunMonoOniOS`mono_runtime_invoke_checked(method=0x00000001058a6df0, obj=0x0000000000000000, params=0x000000016dc76f50, error=0x000000016dc76fb0) at object.c:2794:9 [opt]\r\n    frame #12: 0x0000000102402db4 RunMonoOniOS`mono_runtime_exec_main_checked [inlined] do_exec_main_checked(method=0x00000001058a6df0, args=\u003cunavailable\u003e, error=0x000000016dc76fb0) at object.c:0 [opt]\r\n    frame #13: 0x0000000102402d78 RunMonoOniOS`mono_runtime_exec_main_checked(method=0x00000001058a6df0, args=\u003cunavailable\u003e, error=0x000000016dc76fb0) at object.c:4781:9 [opt]\r\n    frame #14: 0x0000000102402e60 RunMonoOniOS`mono_runtime_run_main_checked(method=\u003cunavailable\u003e, argc=\u003cunavailable\u003e, argv=\u003cunavailable\u003e, error=\u003cunavailable\u003e) at object.c:4345:9 [opt] [artificial]\r\n    frame #15: 0x0000000102463ab8 RunMonoOniOS`mono_jit_exec at driver.c:1369:13 [opt]\r\n    frame #16: 0x0000000102463aa8 RunMonoOniOS`mono_jit_exec(domain=\u003cunavailable\u003e, assembly=\u003cunavailable\u003e, argc=1, argv=0x000000016dc77210) at driver.c:1314:7 [opt]\r\n    frame #17: 0x000000010218cc58 RunMonoOniOS`TestEntry(argc=2, argv=0x0000000280b38350) at TestInterop.Mono.cpp:280:5\r\n    frame #18: 0x0000000102193228 RunMonoOniOS`static RunMonoOniOSApp.main(self=RunMonoOniOS.RunMonoOniOSApp) at RunMonoOniOSApp.swift:22:9\r\n    frame #19: 0x00000001021937dc RunMonoOniOS`static RunMonoOniOSApp.$main(self=RunMonoOniOS.RunMonoOniOSApp) at \u003ccompiler-generated\u003e:0\r\n    frame #20: 0x000000010219381c RunMonoOniOS`main at RunMonoOniOSApp.swift:11:8\r\n    frame #21: 0x00000001e44a9df0 dyld`start + 2096\r\n```\r\n\r\nI don\u0027t know what wrong with it.\r\nThere should be other places that need to be modified as well.",
                                           "updatedAt":  "2024-01-31T14:51:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5yY0ZQ",
                                           "createdAt":  "2024-01-31T13:31:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "srxqds",
                                           "body":  "@vargaz  may you give me some help?",
                                           "updatedAt":  "2024-02-01T03:48:41Z"
                                       }
                                   ],
                         "totalCount":  10
                     },
        "title":  "some quesion about aot-interp mix execute mode on ios",
        "labels":  [
                       "question",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/98428",
        "createdAt":  "2024-02-14T15:34:20Z",
        "number":  98428,
        "author":  "ivanpovazan",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC13ViA==",
                          "nodes":  [
                                        {
                                            "content":  "HEART",
                                            "user":  "drasticactions",
                                            "createdAt":  "2024-02-14T15:40:01Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2024-04-16T11:53:26Z",
        "body":  "### Description\r\n\r\nWhen an iOS app uses [SQLite library](https://github.com/praeclarum/sqlite-net) with a DTO that has a `DateTime` member and tries to iterate over the collection of such objects, it crashes with:\r\n\r\n```\r\n*** Terminating app due to uncaught exception \u0027System.ExecutionEngineException\u0027, reason: \u0027Attempting to JIT compile method \u0027(wrapper delegate-invoke) void System.Action`2\u003cSQLiteDemo.CacheDto, System.DateTime\u003e:invoke_callvirt_void_T1_T2 (SQLiteDemo.CacheDto,System.DateTime)\u0027 while running in aot-only mode. See https://docs.microsoft.com/xamarin/ios/internals/limitations for more information.\r\n (System.ExecutionEngineException)\r\n   at SQLite.FastColumnSetter.\u003c\u003ec__DisplayClass2_0`2[[SQLiteDemo.CacheDto, SQLiteDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].\u003cCreateTypedSetterDelegate\u003eb__0(CacheDto o, sqlite3_stmt stmt, Int32 i)\r\n   at SQLite.SQLiteCommand.\u003cExecuteDeferredQuery\u003ed__12`1[[SQLiteDemo.CacheDto, SQLiteDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]].MoveNext()\r\n   at System.Collections.Generic.List`1[[SQLiteDemo.CacheDto, SQLiteDemo, Version=1.0.0.0, Culture=neutr\u003c…\u003e\r\n```\r\n \r\nThe original reported issue dates back to https://github.com/mono/mono/issues/21270 where Mono was crashing with slightly different error message:\r\n```\r\nUnhandled managed exception: Attempting to JIT compile method \u0027(wrapper delegate-invoke) void :invoke_callvirt_void_CacheDto_DateTime(App21.CacheDto, System.DateTime)\u0027 while running in aot-only mode.\r\n```\r\nand was reported also in: https://github.com/dotnet/maui/issues/20342\r\n\r\nThis is still reproducible with `net8.0` release.\r\n\r\n### Repro\r\n\r\nThis can be verified with a template `net8.0-ios` app :\r\n\r\n- creating a project and adding SQLite references\r\n```bash\r\ndotnet new ios -n \"SQLiteDemo\" ; cd SQLiteDemo\r\ndotnet add package SQLitePCLRaw.bundle_green --version 2.1.0\r\ndotnet add package sqlite-net-pcl --version 1.8.0-beta\r\n```\r\n\r\n- adding a sample code in a `Demo.cs`:\r\n```cs\r\nnamespace SQLiteDemo;\r\n\r\nusing SQLite;\r\nusing System.Linq;\r\n\r\npublic interface ICacheDto\r\n{\r\n\tstring Type { get; set; }\r\n\r\n\tDateTime Date { get; set; }\r\n\r\n\tstring Id { get; set; }\r\n}\r\n\r\npublic sealed class CacheDto : ICacheDto\r\n{\r\n\tpublic string Type { get; set; }\r\n\r\n\tpublic DateTime Date { get; set; }\r\n\r\n\tpublic string Id { get; set; }\r\n}\r\n\r\npublic class Demo\r\n{\r\n\tpublic static void Crash()\r\n\t{\r\n\t\tvar databasePath = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments), \"MyData.db\");\r\n\t\tif (File.Exists(databasePath))\r\n\t\t{\r\n\t\t\tFile.Delete(databasePath);\r\n\t\t}\r\n\r\n\t\tvar db = new SQLiteConnection(databasePath);\r\n\t\tdb.CreateTable\u003cCacheDto\u003e();\r\n\t\tAddCache(db, \"test\");\r\n\r\n\t\tvar stocks = db.Table\u003cCacheDto\u003e().Cast\u003cICacheDto\u003e();\r\n\r\n\t\tforeach (var stock in stocks)\r\n\t\t{\r\n\t\t\tConsole.WriteLine(\"Where StartsWith: t \" + stock?.Type);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static void AddCache(SQLiteConnection db, string type) {\r\n\t\tvar stock = new CacheDto() {\r\n\t\t\tType = type,\r\n\t\t\tId = Guid.NewGuid().ToString(),\r\n\t\t};\r\n\r\n\t\tdb.Insert(stock);\r\n\t}\r\n}\r\n\r\n```\r\n- Invoke the code from `AppDelegate.cs`\r\n```cs\r\n...\r\n\t\tWindow.MakeKeyAndVisible ();\r\n\t\t\r\n\t\tDemo.Crash();\r\n```\r\n- The app crashes with:\r\n```\r\n*** Terminating app due to uncaught exception \u0027System.ExecutionEngineException\u0027, reason: \u0027Attempting to JIT compile method \u0027(wrapper delegate-invoke) void System.Action`2\u003cSQLiteDemo.CacheDto, System.DateTime\u003e:invoke_callvirt_void_T1_T2 (SQLiteDemo.CacheDto,System.DateTime)\u0027 while running in aot-only mode. See https://docs.microsoft.com/xamarin/ios/internals/limitations for more information.\r\n (System.ExecutionEngineException)\r\n   at SQLite.FastColumnSetter.\u003c\u003ec__DisplayClass2_0`2[[SQLiteDemo.CacheDto, SQLiteDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].\u003cCreateTypedSetterDelegate\u003eb__0(CacheDto o, sqlite3_stmt stmt, Int32 i)\r\n   at SQLite.SQLiteCommand.\u003cExecuteDeferredQuery\u003ed__12`1[[SQLiteDemo.CacheDto, SQLiteDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]].MoveNext()\r\n   at System.Collections.Generic.List`1[[SQLiteDemo.CacheDto, SQLiteDemo, Version=1.0.0.0, Culture=neutr\u003c…\u003e\r\n```\r\n\r\n### Workarounds\r\n\r\n- Known workaround is enabling the interpreter via\r\n```xml\r\n\u003cUseInterpreter\u003etrue\u003c/UseInterpreter\u003e\r\n```\r\n\r\n### Additional notes\r\n\r\n- If we remove the `public DateTime Date { get; set; }` member from DTO, the app does not crash.\r\n- Source code of the referenced library: https://github.com/praeclarum/sqlite-net/blob/e8a24a8b2ecb4fd700c5fe46062239a9b08472fd/src/SQLite.cs#L3464\r\n\r\nI assume we are again hitting the problem of heavy use of generics and arbitrary delegates which are not AOT friendly. \r\n\r\n/cc: @vargaz ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOerh4UA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5z4D6T",
                                           "createdAt":  "2024-02-14T15:34:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027os-ios\u0027: @steveisok, @akoeplinger, @kotlarmilos\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\r\n\r\nWhen an iOS app uses [SQLite library](https://github.com/praeclarum/sqlite-net) with a DTO that has a `DateTime` member and tries to iterate over the collection of such objects, it crashes with:\r\n\r\n```\r\n*** Terminating app due to uncaught exception \u0027System.ExecutionEngineException\u0027, reason: \u0027Attempting to JIT compile method \u0027(wrapper delegate-invoke) void System.Action`2\u003cSQLiteDemo.CacheDto, System.DateTime\u003e:invoke_callvirt_void_T1_T2 (SQLiteDemo.CacheDto,System.DateTime)\u0027 while running in aot-only mode. See https://docs.microsoft.com/xamarin/ios/internals/limitations for more information.\r\n (System.ExecutionEngineException)\r\n   at SQLite.FastColumnSetter.\u003c\u003ec__DisplayClass2_0`2[[SQLiteDemo.CacheDto, SQLiteDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].\u003cCreateTypedSetterDelegate\u003eb__0(CacheDto o, sqlite3_stmt stmt, Int32 i)\r\n   at SQLite.SQLiteCommand.\u003cExecuteDeferredQuery\u003ed__12`1[[SQLiteDemo.CacheDto, SQLiteDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]].MoveNext()\r\n   at System.Collections.Generic.List`1[[SQLiteDemo.CacheDto, SQLiteDemo, Version=1.0.0.0, Culture=neutr\u003c…\u003e\r\n```\r\n \r\nThe original reported issue dates back to https://github.com/mono/mono/issues/21270 where Mono was crashing with slightly different error message:\r\n```\r\nUnhandled managed exception: Attempting to JIT compile method \u0027(wrapper delegate-invoke) void :invoke_callvirt_void_CacheDto_DateTime(App21.CacheDto, System.DateTime)\u0027 while running in aot-only mode.\r\n```\r\nand was reported also in: https://github.com/dotnet/maui/issues/20342\r\n\r\nThis is still reproducible with `net8.0` release.\r\n\r\n### Repro\r\n\r\nThis can be verified with a template `net8.0-ios` app :\r\n\r\n- creating a project and adding SQLite references\r\n```bash\r\ndotnet new ios -n \"SQLiteDemo\" ; cd SQLiteDemo\r\ndotnet add package SQLitePCLRaw.bundle_green --version 2.1.0\r\ndotnet add package sqlite-net-pcl --version 1.8.0-beta\r\n```\r\n\r\n- adding a sample code in a `Demo.cs`:\r\n```cs\r\nnamespace SQLiteDemo;\r\n\r\nusing SQLite;\r\nusing System.Linq;\r\n\r\npublic interface ICacheDto\r\n{\r\n\tstring Type { get; set; }\r\n\r\n\tDateTime Date { get; set; }\r\n\r\n\tstring Id { get; set; }\r\n}\r\n\r\npublic sealed class CacheDto : ICacheDto\r\n{\r\n\tpublic string Type { get; set; }\r\n\r\n\tpublic DateTime Date { get; set; }\r\n\r\n\tpublic string Id { get; set; }\r\n}\r\n\r\npublic class Demo\r\n{\r\n\tpublic static void Crash()\r\n\t{\r\n\t\tvar databasePath = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments), \"MyData.db\");\r\n\t\tif (File.Exists(databasePath))\r\n\t\t{\r\n\t\t\tFile.Delete(databasePath);\r\n\t\t}\r\n\r\n\t\tvar db = new SQLiteConnection(databasePath);\r\n\t\tdb.CreateTable\u003cCacheDto\u003e();\r\n\t\tAddCache(db, \"test\");\r\n\r\n\t\tvar stocks = db.Table\u003cCacheDto\u003e().Cast\u003cICacheDto\u003e();\r\n\r\n\t\tforeach (var stock in stocks)\r\n\t\t{\r\n\t\t\tConsole.WriteLine(\"Where StartsWith: t \" + stock?.Type);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static void AddCache(SQLiteConnection db, string type) {\r\n\t\tvar stock = new CacheDto() {\r\n\t\t\tType = type,\r\n\t\t\tId = Guid.NewGuid().ToString(),\r\n\t\t};\r\n\r\n\t\tdb.Insert(stock);\r\n\t}\r\n}\r\n\r\n```\r\n- Invoke the code from `AppDelegate.cs`\r\n```cs\r\n...\r\n\t\tWindow.MakeKeyAndVisible ();\r\n\t\t\r\n\t\tDemo.Crash();\r\n```\r\n- The app crashes with:\r\n```\r\n*** Terminating app due to uncaught exception \u0027System.ExecutionEngineException\u0027, reason: \u0027Attempting to JIT compile method \u0027(wrapper delegate-invoke) void System.Action`2\u003cSQLiteDemo.CacheDto, System.DateTime\u003e:invoke_callvirt_void_T1_T2 (SQLiteDemo.CacheDto,System.DateTime)\u0027 while running in aot-only mode. See https://docs.microsoft.com/xamarin/ios/internals/limitations for more information.\r\n (System.ExecutionEngineException)\r\n   at SQLite.FastColumnSetter.\u003c\u003ec__DisplayClass2_0`2[[SQLiteDemo.CacheDto, SQLiteDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].\u003cCreateTypedSetterDelegate\u003eb__0(CacheDto o, sqlite3_stmt stmt, Int32 i)\r\n   at SQLite.SQLiteCommand.\u003cExecuteDeferredQuery\u003ed__12`1[[SQLiteDemo.CacheDto, SQLiteDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]].MoveNext()\r\n   at System.Collections.Generic.List`1[[SQLiteDemo.CacheDto, SQLiteDemo, Version=1.0.0.0, Culture=neutr\u003c…\u003e\r\n```\r\n\r\n### Workarounds\r\n\r\n- Known workaround is enabling the interpreter via\r\n```xml\r\n\u003cUseInterpreter\u003etrue\u003c/UseInterpreter\u003e\r\n```\r\n\r\n### Additional notes\r\n\r\n- If we remove the `public DateTime Date { get; set; }` member from DTO, the app does not crash.\r\n- Source code of the referenced library: https://github.com/praeclarum/sqlite-net/blob/e8a24a8b2ecb4fd700c5fe46062239a9b08472fd/src/SQLite.cs#L3464\r\n\r\nI assume we are again hitting the problem of heavy use of generics and arbitrary delegates which are not AOT friendly. \r\n\r\n/cc: @vargaz \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eivanpovazan\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Codegen-AOT-mono`, `os-ios`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003eFuture\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2024-02-14T15:34:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5z8cD5",
                                           "createdAt":  "2024-02-15T01:32:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vargaz",
                                           "body":  "This is not supposed to happen, because we generate gsharedvt version for these wrappers which can handle any type in theory.\r\n",
                                           "updatedAt":  "2024-02-15T01:32:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc56uHhQ",
                                           "createdAt":  "2024-04-16T11:53:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODeVkZQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ivanpovazan",
                                                                               "createdAt":  "2024-04-16T11:56:34Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "JeroenBer",
                                           "body":  "Probably also related: https://github.com/praeclarum/sqlite-net/issues/1067",
                                           "updatedAt":  "2024-04-16T11:53:25Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "[mono][ios] MonoAOT crashes when the app uses SQLite library with a `DateTime` member in DTO",
        "labels":  [
                       "area-Codegen-AOT-mono",
                       "os-ios"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/111865",
        "createdAt":  "2024-02-20T17:30:45Z",
        "number":  111865,
        "author":  "takla21",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-28T15:09:30Z",
        "body":  "### Android application type\r\n\r\n.NET Android (net7.0-android, net8.0-android, etc.)\r\n\r\n### Affected platform version\r\n\r\nNET 8.0.100, 8.0.200\r\n\r\n### Description\r\n\r\nI am currently migrating a project from `net7.0-android` to `net8.0-android`. While the project compiles fine in debug mode, building in release mode fails with the following error:\r\n\r\n```\r\n4\u003eC:\\Program Files\\dotnet\\packs\\Microsoft.Android.Sdk.Windows\\34.0.79\\targets\\Microsoft.Android.Sdk.Aot.targets(109,5): error : Precompiling failed for C:\\{pathToProject}\\ProjectName.Mobile\\obj\\Release\\net8.0-android\\android-x64\\linked\\ProjectName.Business.dll with exit code -1073741819.\r\n4\u003eC:\\Program Files\\dotnet\\packs\\Microsoft.Android.Sdk.Windows\\34.0.79\\targets\\Microsoft.Android.Sdk.Aot.targets(109,5): error :\r\n```\r\n\r\nHere are binlogs as screenshots (confidential stuff redacted)\r\n![1](https://github.com/dotnet/runtime/assets/17461593/1836060c-910e-4a77-81aa-9024bae727e4)\r\n![2](https://github.com/dotnet/runtime/assets/17461593/7002ad82-929d-44f9-8d2c-ebdcf67ca329)\r\n\r\n\r\nContext:\r\nOur project structure is as follows:\r\n- ProjectName.Mobile (mobile head `net8.0-android`, `net8.0-ios`)\r\n- ProjectName.Windows (windows head)\r\n- ProjectName.Presentation (library project `net8.0` that contains viewmodels)\r\n- ProjectName.Business (library project `net8.0` that contains business rule logic)\r\n- ProjectName.Access(library project `net8.0` that contains API call logic)\r\n\r\nDependencies:\r\nProjectName.Mobile -\u003e ProjectName.Presentation \r\nProjectName.Windows -\u003e ProjectName.Presentation \r\n\r\nProjectName.Presentation -\u003e ProjectName.Business -\u003e ProjectName.Access\r\n\r\n### Steps to Reproduce\r\n\r\n- Build on Release\r\n\r\n### Did you find any workaround?\r\n\r\nN/A\r\n\r\n### Relevant log output\r\n\r\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOuHcubw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6b7kRz",
                                           "createdAt":  "2024-02-20T17:37:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jonathanpeppers",
                                           "body":  "Can you share a `.binlog` of the failure? https://aka.ms/binlog\r\n\r\nIs there anything special about `ProjectName.Access.dll`? Does it have missing assembly references? Does the AOT compiler log anything else besides the exit code? `exit code -1073741819`",
                                           "updatedAt":  "2024-02-20T17:37:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6b7kR-",
                                           "createdAt":  "2024-02-20T18:25:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "takla21",
                                           "body":  "I\u0027ll try to reproduce this issue on another project outside of this one first before giving you an actual binlog to avoid sending sensitive data related to the project I\u0027m working on. That\u0027s why I\u0027ve provided you screenshots of those binlog. \r\n![image](https://github.com/xamarin/xamarin-android/assets/17461593/d0f9e2f9-9a39-4a11-bd1d-571fa7672ee8)\r\n\r\nI\u0027m only seeing errors with the exit code\r\n\r\n\r\nThe ProjectName.Access.dll is generated from this `net8` project:\r\n\r\n```\r\n\u003cProject Sdk=\"Microsoft.NET.Sdk\"\u003e\r\n\t\u003cPropertyGroup\u003e\r\n\t\t\u003cTargetFramework\u003enet8.0\u003c/TargetFramework\u003e\r\n\t\t\u003cLangVersion\u003e12.0\u003c/LangVersion\u003e\r\n\t\t\u003cRootNamespace\u003eProjectName.DataAccess\u003c/RootNamespace\u003e\r\n\t\t\u003cGenerateDocumentationFile\u003etrue\u003c/GenerateDocumentationFile\u003e\r\n\t\u003c/PropertyGroup\u003e\r\n\r\n\t\u003cItemGroup\u003e\r\n\t\t\u003cPackageReference Include=\"DynamicData\" Version=\"7.1.1\" /\u003e\r\n\t\t\u003cPackageReference Include=\"Microsoft.Extensions.Configuration.Abstractions\" Version=\"3.1.0\" /\u003e\r\n\t\t\u003cPackageReference Include=\"Microsoft.Extensions.Http\" Version=\"3.1.0\" /\u003e\r\n\t\t\u003cPackageReference Include=\"Microsoft.Extensions.Logging.Abstractions\" Version=\"7.0.1\" /\u003e\r\n\t\t\u003cPackageReference Include=\"Microsoft.Extensions.Options.ConfigurationExtensions\" Version=\"3.1.0\" /\u003e\r\n\t\t\u003cPackageReference Include=\"Reactive.Annex\" Version=\"0.6.0-dev.50\" /\u003e\r\n\t\t\u003cPackageReference Include=\"RequestsSignature.HttpClient\" Version=\"2.0.0\" /\u003e\r\n\t\t\u003cPackageReference Include=\"Uno.CodeGen\" Version=\"2.0.0-dev.10\" /\u003e\r\n\t\t\u003cPackageReference Include=\"Refit\" Version=\"7.0.0\" /\u003e\r\n\t\t\u003cPackageReference Include=\"ReviewService.Abstractions\" Version=\"1.0.0\" /\u003e\r\n\t\t\u003cPackageReference Include=\"System.Text.Json\" Version=\"7.0.3\" /\u003e\r\n\t\t\u003cPackageReference Include=\"MallardMessageHandlers\" Version=\"0.2.0-dev.21\" /\u003e\r\n\t\t\u003cPackageReference Include=\"Nventive.Persistence.Reactive\" Version=\"0.4.0-dev.36\" /\u003e\r\n\t\t\u003cPackageReference Include=\"Nventive.Persistence\" Version=\"0.4.0-dev.36\" /\u003e\r\n\t\t\u003cPackageReference Include=\"System.Reactive\" Version=\"5.0.0\" /\u003e\r\n\t\t\u003cPackageReference Include=\"GeneratedSerializers.Json\" Version=\"1.0.0-dev.34\" /\u003e\r\n                \u003c!-- There are also internal nuget packages (they\u0027re all targeting .net6.0) referenced here --\u003e\r\n\t\u003c/ItemGroup\u003e\r\n\u003c/Project\u003e\r\n```",
                                           "updatedAt":  "2024-02-20T18:39:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6b7kSG",
                                           "createdAt":  "2024-02-20T19:27:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jonpryor",
                                           "body":  "Exit code `-1073741819` is 0xc0000005 which is [Access Violation](https://learn.microsoft.com/en-us/shows/inside/c0000005).  In all likelihood, `mono-aot-cross.exe` is crashing.\r\n\r\n@takla21: Does it consistently crash on the same assembly?\r\n\r\nIs there some way for us to get a copy of the assembly/assemblies which consistently cause the build failure?\r\n\r\n/cc @steveisok ",
                                           "updatedAt":  "2024-02-20T19:27:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6b7kSP",
                                           "createdAt":  "2024-02-20T19:27:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "takla21",
                                           "body":  "Ok I\u0027m still working on finding a way to send you bindlog, but I just found out that the bug happens when `\u003cAndroidEnableProfiledAot\u003eTrue\u003c/AndroidEnableProfiledAot\u003e` is set",
                                           "updatedAt":  "2024-02-20T19:27:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6b7kSU",
                                           "createdAt":  "2024-02-20T20:00:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "takla21",
                                           "body":  "@jonpryor \r\nyes, it\u0027s always the same assembly that causes the failure. It comes from one of the projects mentioned above. Here\u0027s its csproj content\r\n\r\n```csproj\r\n\u003cProject Sdk=\"Microsoft.NET.Sdk\"\u003e\r\n\t\u003cPropertyGroup\u003e\r\n\t\t\u003cTargetFramework\u003enet8.0\u003c/TargetFramework\u003e\r\n\t\t\u003cLangVersion\u003e11.0\u003c/LangVersion\u003e\r\n\t\t\u003cGenerateDocumentationFile\u003etrue\u003c/GenerateDocumentationFile\u003e\r\n\t\u003c/PropertyGroup\u003e\r\n\r\n\t\u003cItemGroup\u003e\r\n\t\t\u003cProjectReference Include=\"..\\ProjectName.Access\\ProjectName.Access.csproj\" /\u003e\r\n\t\u003c/ItemGroup\u003e\r\n\r\n\t\u003cItemGroup\u003e\r\n\t\t\u003cPackageReference Include=\"HtmlAgilityPack\" Version=\"1.11.54\" /\u003e\r\n\t\t\u003cPackageReference Include=\"Microsoft.Extensions.Localization.Abstractions\" Version=\"6.0.2\" /\u003e\r\n\t\t\u003cPackageReference Include=\"Parasol.Environment.Hardware\" Version=\"0.40.5\" /\u003e\r\n\t\t\u003cPackageReference Include=\"Parasol.Presentation\" Version=\"0.40.5\" /\u003e\r\n\t\t\u003cPackageReference Include=\"Parasol.Storage.Biometry\" Version=\"0.40.5\" /\u003e\r\n\t\t\u003cPackageReference Include=\"Uno.CodeGen\" Version=\"2.0.0-dev.10\" /\u003e\r\n\t\t\u003cPackageReference Include=\"Parasol.Feeds\" Version=\"0.40.5\" /\u003e\r\n\t\t\u003cPackageReference Include=\"MessageDialogService\" Version=\"0.5.0-dev.54\" /\u003e\r\n\t\u003c/ItemGroup\u003e\r\n\u003c/Project\u003e\r\n``` ",
                                           "updatedAt":  "2024-02-20T20:00:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6b7kSc",
                                           "createdAt":  "2024-02-20T20:09:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "takla21",
                                           "body":  "I also forgot to list all workloads that I\u0027m using locally\r\n\r\n```\r\nInstalled Workload Id      Manifest Version       Installation Source\r\n-------------------------------------------------------------------------------------\r\nmaui-windows               8.0.6/8.0.100          VS 17.10.34607.79, VS 17.7.34302.85\r\nmaccatalyst                17.2.8022/8.0.100      VS 17.10.34607.79, VS 17.7.34302.85\r\nios                        17.2.8022/8.0.100      VS 17.10.34607.79, VS 17.7.34302.85\r\nandroid                    34.0.79/8.0.100        VS 17.10.34607.79, VS 17.7.34302.85\r\nmaui-android               8.0.6/8.0.100          VS 17.7.34302.85\r\nmaui-maccatalyst           8.0.6/8.0.100          VS 17.7.34302.85\r\nmaui-ios                   8.0.6/8.0.100          VS 17.7.34302.85\r\n\r\n```",
                                           "updatedAt":  "2024-02-20T20:12:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6b7kSl",
                                           "createdAt":  "2024-02-21T14:47:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "takla21",
                                           "body":  "@jonpryor @jonathanpeppers I sent you both the assembly + binlog to the email associated on your github account. Hopefully it will help identify the issue here",
                                           "updatedAt":  "2024-02-21T14:47:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6b7kSx",
                                           "createdAt":  "2024-11-19T10:06:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEW_yxw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "iamolatunji89",
                                                                               "createdAt":  "2025-01-07T11:03:53Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "johannes-steurer",
                                                                               "createdAt":  "2025-02-25T07:45:08Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "WangyuHello",
                                                                               "createdAt":  "2025-06-18T04:43:04Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "hyigit-adelcon",
                                           "body":  "In my experience, I got this error after upgrading to .NET 9. \n\n\n ```\nMauiApp1 net9.0-android failed with 1 error(s) (29,9s)\n    C:\\Program Files\\dotnet\\packs\\Microsoft.Android.Sdk.Windows\\35.0.7\\targets\\Microsoft.Android.Sdk.Aot.targets(110,5): error :\n      Precompiling failed for C:\\Users\\...\\Desktop\\MauiApp1\\MauiApp1\\obj\\Release\\net9.0-android\\android-x64\\linked\\Sy\n      stem.Private.Windows.Core.dll with exit code -1073741819.\n      Mono Ahead of Time compiler - compiling assembly C:\\Users\\...\\Desktop\\MauiApp1\\MauiApp1\\obj\\Release\\net9.0-andr\n      oid\\android-x64\\linked\\System.Private.Windows.Core.dll\n      AOTID 768B782E-1B56-15E4-E61B-A17BB6559ED4\n      Using profile data file \u0027C:\\Users\\...\\.nuget\\packages\\microsoft.maui.controls.build.tasks\\9.0.10\\buildTransitiv\n      e\\netstandard2.0\\maui.aotprofile\u0027\n      Using profile data file \u0027C:\\Users\\...\\.nuget\\packages\\microsoft.maui.controls.build.tasks\\9.0.10\\buildTransitiv\n      e\\netstandard2.0\\maui-blazor.aotprofile\u0027\n      Added 0 methods from profile.\n      Added 0 methods from profile.\n      Could not load signature of System.Windows.Forms.Nrbf.SerializationRecordExtensions+TryGetDelegate:BeginInvoke due\n       to: Could not load file or assembly \u0027System.Formats.Nrbf, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13\n      ffcd2ddd51\u0027 or one of its dependencies.\n```\n\nAfter a step-by-step investigation, I found out that the error was caused by the System.Drawing.Common library. When I disabled the reference below, the Android build went smoothly. \n\n`\u003cPackageReference Include=\"System.Drawing.Common\" Version=\"9.0.0\" /\u003e`\n\nMaybe it will help you too.",
                                           "updatedAt":  "2024-11-19T10:07:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6b7kS7",
                                           "createdAt":  "2024-12-20T15:51:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "l0gaw",
                                           "body":  "\u003e In my experience, I got this error after upgrading to .NET 9.\n\u003e \n\u003e ```\n\u003e MauiApp1 net9.0-android failed with 1 error(s) (29,9s)\n\u003e    C:\\Program Files\\dotnet\\packs\\Microsoft.Android.Sdk.Windows\\35.0.7\\targets\\Microsoft.Android.Sdk.Aot.targets(110,5): error :\n\u003e      Precompiling failed for C:\\Users\\...\\Desktop\\MauiApp1\\MauiApp1\\obj\\Release\\net9.0-android\\android-x64\\linked\\Sy\n\u003e      stem.Private.Windows.Core.dll with exit code -1073741819.\n\u003e      Mono Ahead of Time compiler - compiling assembly C:\\Users\\...\\Desktop\\MauiApp1\\MauiApp1\\obj\\Release\\net9.0-andr\n\u003e      oid\\android-x64\\linked\\System.Private.Windows.Core.dll\n\u003e      AOTID 768B782E-1B56-15E4-E61B-A17BB6559ED4\n\u003e      Using profile data file \u0027C:\\Users\\...\\.nuget\\packages\\microsoft.maui.controls.build.tasks\\9.0.10\\buildTransitiv\n\u003e      e\\netstandard2.0\\maui.aotprofile\u0027\n\u003e      Using profile data file \u0027C:\\Users\\...\\.nuget\\packages\\microsoft.maui.controls.build.tasks\\9.0.10\\buildTransitiv\n\u003e      e\\netstandard2.0\\maui-blazor.aotprofile\u0027\n\u003e      Added 0 methods from profile.\n\u003e      Added 0 methods from profile.\n\u003e      Could not load signature of System.Windows.Forms.Nrbf.SerializationRecordExtensions+TryGetDelegate:BeginInvoke due\n\u003e       to: Could not load file or assembly \u0027System.Formats.Nrbf, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13\n\u003e      ffcd2ddd51\u0027 or one of its dependencies.\n\u003e ```\n\u003e \n\u003e After a step-by-step investigation, I found out that the error was caused by the System.Drawing.Common library. When I disabled the reference below, the Android build went smoothly.\n\u003e \n\u003e `\u003cPackageReference Include=\"System.Drawing.Common\" Version=\"9.0.0\" /\u003e`\n\u003e \n\u003e Maybe it will help you too.\n\nI\u0027m also using this package, could you let me know what you did to workaround this?",
                                           "updatedAt":  "2024-12-20T15:51:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6b7kTC",
                                           "createdAt":  "2024-12-23T06:58:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hyigit-adelcon",
                                           "body":  "\u003cPackageReference Include=\"System.Drawing.Common\" Version=\"8.0.0\" /\u003e\n\nWhen I use version 8 it compiles without problems. I still cannot compile with version 9.",
                                           "updatedAt":  "2024-12-23T06:58:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc64dy5v",
                                           "createdAt":  "2025-07-20T22:01:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "/cc @vitek-karas ",
                                           "updatedAt":  "2025-07-20T22:01:27Z"
                                       }
                                   ],
                         "totalCount":  11
                     },
        "title":  "[NET8] Precompilation Error (Exit Code -1073741819) when building on Release",
        "labels":  [
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/104167",
        "createdAt":  "2024-02-21T01:21:22Z",
        "number":  104167,
        "author":  "jamescrosswell",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-22T16:54:40Z",
        "body":  "### Android application type\r\n\r\n.NET Android (net7.0-android, net8.0-android, etc.)\r\n\r\n### Affected platform version\r\n\r\n.NET 8.0.0\r\n\r\n### Description\r\n\r\nWe have a customer using the Sentry SDK in their MAUI application. One piece of functionality they\u0027ve built sends log files through to a Sentry server. A background task in the Sentry API is calling `FileStream.ReadAsync` to enable this. \r\n\r\nIf the application is compiled with the build property `\u003cEnableLLVM\u003etrue\u003c/EnableLLVM\u003e` then frequently the logs are not sent to Sentry. [Trawling through the diagnostic logs](https://github.com/getsentry/sentry-dotnet/issues/3101#issuecomment-1945267762), it appears the `BufferedFileStreamStrategy.ReadAsync` method is throwing an `Arg_InvalidOperationException`, but it\u0027s not clear why. \r\n\r\nSee full discussion (including the source code to an app that allows this issue to be reproduced) at:\r\n- https://github.com/getsentry/sentry-dotnet/issues/3101\r\n\r\n### Steps to Reproduce\r\n\r\nSteps to reproduce [described here](https://github.com/getsentry/sentry-dotnet/issues/3101#issuecomment-1936292037).\r\n\r\n### Did you find any workaround?\r\n\r\nNo. The customer needs to enable `EnableLLVM` for performance reasons.  \r\n\r\n### Relevant log output\r\n\r\n```shell\r\n2024-02-15 14:50:56.008  9130-9159  DOTNET                  com.companyname.sentrydebughelper    I    Debug: Android: Serializing object: { \t\"reportType\": \"SendLogs\" }\r\n2024-02-15 14:50:56.010  9130-9209  DOTNET                  com.companyname.sentrydebughelper    I  Warning: Failed to serialize envelope item\r\n                                                                                                    System.InvalidOperationException: Arg_InvalidOperationException\r\n2024-02-15 14:50:56.010  9130-9209  DOTNET                  com.companyname.sentrydebughelper    I     at System.Threading.Tasks.Sources.ManualResetValueTaskSourceCore`1[[System.Int64, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].GetStatus(Int16 )\r\n                                                                                                       at Microsoft.Win32.SafeHandles.SafeFileHandle.ThreadPoolValueTaskSource.GetStatus(Int16 )\r\n                                                                                                       at System.IO.Strategies.BufferedFileStreamStrategy.ReadAsync(Byte[] , Int32 , Int32 , CancellationToken )\r\n2024-02-15 14:50:56.010  9130-9209  DOTNET                  com.companyname.sentrydebughelper    I     at System.IO.FileStream.ReadAsync(Byte[] , Int32 , Int32 , CancellationToken )\r\n                                                                                                       at Sentry.Internal.PartialStream.ReadAsync(Byte[] , Int32 , Int32 , CancellationToken )\r\n2024-02-15 14:50:56.010  9130-9209  DOTNET                  com.companyname.sentrydebughelper    I     at System.IO.Stream.\u003cCopyToAsync\u003eg__Core|27_0(Stream , Stream , Int32 , CancellationToken )\r\n                                                                                                       at Sentry.Protocol.Envelopes.EnvelopeItem.BufferPayloadAsync(IDiagnosticLogger , CancellationToken )\r\n                                                                                                       at Sentry.Protocol.Envelopes.EnvelopeItem.SerializeAsync(Stream , IDiagnosticLogger , CancellationToken )\r\n2024-02-15 14:50:56.010  9130-9209  DOTNET                  com.companyname.sentrydebughelper    I     at Sentry.Protocol.Envelopes.Envelope.SerializeAsync(Stream , IDiagnosticLogger , ISystemClock , CancellationToken )\r\n```\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOtatQ0w==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6C9_ZD",
                                           "createdAt":  "2024-02-22T19:53:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vargaz",
                                           "body":  "Is this reproducible with a sample which just calls FileStream.ReadAsync ?\r\n",
                                           "updatedAt":  "2024-02-22T19:53:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6C9_ZI",
                                           "createdAt":  "2024-03-03T23:00:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jamescrosswell",
                                           "body":  "\u003e Is this reproducible with a sample which just calls FileStream.ReadAsync ?\r\n\r\n@pierre-galaup do you think you could try to create a simplified version of your demo app that has LLVM enabled and loops to try to read some files (async) and stream these off into the void (just as a way to verify this is genuinely coming from FileStream.ReadAsync when LLVM is enabled)? If not, I might be able to try but I can\u0027t prioritise this right now (it will be some weeks before I can do this).",
                                           "updatedAt":  "2024-03-03T23:00:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6C9_ZQ",
                                           "createdAt":  "2024-05-13T14:24:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODnsdJA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "jamescrosswell",
                                                                               "createdAt":  "2024-05-13T21:44:06Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "tranb3r",
                                           "body":  "@jamescrosswell @vargaz @pierre-galaup\r\nI\u0027m having the same issue with Sentry when enabling LLVM.\r\nI\u0027ve easily reproduced it in a sample app which just calls `FileStream.ReadAsync`.\r\nCould this be fixed? Is there a workaround?",
                                           "updatedAt":  "2024-05-13T14:24:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6C9_ZS",
                                           "createdAt":  "2024-05-14T14:03:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tranb3r",
                                           "body":  "Here is a repro project: https://github.com/tranb3r/Issues/tree/main/MauiAppLlvmReadAsync\r\ncc @vargaz ",
                                           "updatedAt":  "2024-05-14T14:06:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6C9_ZT",
                                           "createdAt":  "2024-06-27T06:29:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tranb3r",
                                           "body":  "@grendello @vargaz @lamdageek \r\nAny update? \r\nThis is impacting the Sentry SDK, and no workaround seems possible.",
                                           "updatedAt":  "2024-06-27T06:29:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6C9_ZY",
                                           "createdAt":  "2024-06-28T16:11:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "/cc @steveisok ",
                                           "updatedAt":  "2024-06-28T16:11:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6C9_Zc",
                                           "createdAt":  "2024-06-28T16:14:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "\u003e @grendello @vargaz @lamdageek Any update? This is impacting the Sentry SDK, and no workaround seems possible.\r\n\r\n@tranb3r no update yet. We\u0027ll share when we have more details.",
                                           "updatedAt":  "2024-06-28T16:14:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6C9_Zh",
                                           "createdAt":  "2024-06-28T16:37:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "Might be related to https://github.com/dotnet/runtime/issues/100527 we should try the upcoming servicing release to see if the AOT compiler fixes there will address this one, too\r\n",
                                           "updatedAt":  "2024-06-28T16:37:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6FsTIl",
                                           "createdAt":  "2024-07-22T13:36:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tranb3r",
                                           "body":  "I\u0027ve tested 8.0.7 but I still get the error when running my repro app.\r\nCould somebody please double-check?",
                                           "updatedAt":  "2024-07-22T13:36:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Fsn7X",
                                           "createdAt":  "2024-07-22T14:12:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "@tranb3r Thanks for validating. We would need to look into it further.",
                                           "updatedAt":  "2024-07-22T14:12:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6HQAGv",
                                           "createdAt":  "2024-08-05T13:45:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tranb3r",
                                           "body":  "Any update? Thanks",
                                           "updatedAt":  "2024-08-05T13:45:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6PX1gW",
                                           "createdAt":  "2024-10-10T15:07:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tranb3r",
                                           "body":  "Still not working in net9-rc2.",
                                           "updatedAt":  "2024-10-10T15:07:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6VrTD_",
                                           "createdAt":  "2024-12-02T10:32:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tranb3r",
                                           "body":  "Still happening with net9 (net-android 35.0.7)",
                                           "updatedAt":  "2024-12-02T10:32:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc61qbmY",
                                           "createdAt":  "2025-07-08T08:01:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "redwolf2",
                                           "body":  "Still happens with MAUI [9.0.81](https://github.com/dotnet/maui/releases/tag/9.0.81).",
                                           "updatedAt":  "2025-07-08T08:01:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc61q1DT",
                                           "createdAt":  "2025-07-08T08:33:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jamescrosswell",
                                           "body":  "\u003e This is impacting the Sentry SDK, and no workaround seems possible.\n\nThere is a workaround [implemented in Sentry](https://github.com/getsentry/sentry-dotnet/pull/4276) that is suggested by these new analyser warnings:\n* CA2022: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2022\n* CA1835: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1835\n\n... if you can modify the code that is making the call to `ReadAsync` that is. ",
                                           "updatedAt":  "2025-07-08T08:33:28Z"
                                       }
                                   ],
                         "totalCount":  15
                     },
        "title":  "BufferedFileStreamStrategy.ReadAsync throws Arg_InvalidOperationException when EnableLLVM == true",
        "labels":  [
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/100893",
        "createdAt":  "2024-04-10T20:42:28Z",
        "number":  100893,
        "author":  "kg",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-04-13T21:36:04Z",
        "body":  "#100802 disabled AOT module probing for interpreted WASM builds, but we should also optimize the code for AOT builds, and if possible, completely prune the irrelevant code from the binary in both configurations. We get ifdefs telling us we\u0027re targeting WASM and whether or not we\u0027re AOT\u0027d, so it should be possible to strip a lot of code that isn\u0027t relevant to the target, and make sure we never call dlopen, never do weird filesystem probing, etc.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOehgmsA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc56GCaw",
                                           "createdAt":  "2024-04-10T20:42:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in area-owners.md if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-04-10T20:42:52Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "[wasm] Follow-up work for #100802",
        "labels":  [
                       "arch-wasm",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/101041",
        "createdAt":  "2024-04-15T07:41:54Z",
        "number":  101041,
        "author":  "jfversluis",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-08T16:48:53Z",
        "body":  "---\r\n**Issue moved from dotnet/maui#21803**\r\n- Please respond to @JeroenBer.\r\n\r\n---\r\n\r\n_From @JeroenBer on Friday, April 12, 2024 5:21:07 PM_\r\n\r\n### Description\n\nUnder certain conditions XML Serializer does not work correctly in \"net8.0-ios\" release mode. This means the AOT version on iOS device does not work correctly. \n\n### Steps to Reproduce\n\n1. Create an iOS app\r\n2. Add the testclass below\r\n    - call the function XmlTests.TestVirtual(), it works perfectly in debug mode but throws an exception in release mode.\r\n    - call the function XmlTests.TestFilledNullableDateTime(), , it works perfectly in debug mode but throws an exception in release mode.\r\n4. Build \u0026 deploy in release mode.\r\n\r\n\r\n\r\n```\r\n    public class ClassWithVirtual\r\n    {\r\n        public virtual double VirtualDoubleProperty{ get; set; }\r\n    }\r\n\r\n    public class ClassWithNullableDateTime : IClassInterface\r\n    {\r\n        public DateTime? DateTime { get; set; }\r\n    }\r\n\r\n    public interface IClassInterface\r\n    {\r\n        DateTime? DateTime { get; set; }\r\n    }\r\n\r\n    public class XmlTests\r\n    {\r\n\r\n        public void TestVirtual()\r\n        {\r\n            var serializer = new XmlSerializer(typeof(ClassWithVirtual));\r\n\r\n            var obj = new ClassWithVirtual()\r\n            {\r\n                VirtualDoubleProperty = 123.456,\r\n            };\r\n            using var s = new MemoryStream();\r\n            serializer.Serialize(s, obj);\r\n\r\n            s.Position = 0;\r\n\r\n            var obj2 = (ClassWithVirtual)serializer.Deserialize(s);\r\n            if (obj2.VirtualDoubleProperty != obj.VirtualDoubleProperty)\r\n                throw new Exception(\"VirtualDoubleProperty changed\");\r\n        }\r\n\r\n        public void TestFilledNullableDateTime()\r\n        {\r\n            var serializer = new XmlSerializer(typeof(ClassWithNullableDateTime));\r\n\r\n            var obj = new ClassWithNullableDateTime()\r\n            {\r\n                DateTime = DateTime.Now,\r\n            };\r\n            using var s = new MemoryStream();\r\n            serializer.Serialize(s, obj);\r\n\r\n            s.Position = 0;\r\n\r\n            var obj2 = (ClassWithNullableDateTime)serializer.Deserialize(s);\r\n            if (obj2.DateTime != obj.DateTime)\r\n                throw new Exception(\"DateTime property changed\");\r\n        }\r\n    }\r\n```\r\n\r\nThere are at least 2 situations that will make Xml Serializer throw an exception in release mode:\r\n1. Use properties marked as virtual.\r\n2. Use properties that are also defined as setter properties in an interface that the class implements.\n\n### Link to public reproduction project repository\n\n_No response_\n\n### Version with bug\n\nUnknown/Other\n\n### Is this a regression from previous behavior?\n\nNot sure, did not test other versions\n\n### Last version that worked well\n\nUnknown/Other\n\n### Affected platforms\n\niOS\n\n### Affected platform versions\n\n_No response_\n\n### Did you find any workaround?\n\n1. Enable the interpreter but we don\u0027t want to do this because of performance (see also https://github.com/dotnet/maui/issues/13019). \r\n2.  remove any virtual properties and interfaces with property setters on classes that are Xml Serialized.\r\n\n\n### Relevant log output\n\n```shell\nThe following exceptions occur in release mode:\r\n\r\nUsing virtuals something like this:\r\n\r\nSystem.InvalidOperationException : XmlSerializeErrorDetails,4,3 ---\u003e System.ExecutionEngineException : Attempting to JIT compiled method \u0027(wrapper delegate-invoke) void System.Action `\u003c....SerializationTests.ClassWithVirtual, double\u003e:invoke_callvirt_-void_T1_T2 (...)\u0027while running in aot-only mode See http:.....\r\n```\r\n\r\nUsing interfaces with properties setters for class also gives a similar exception.\r\n\r\n\r\n```\n```\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOerh00Q==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc56iubU",
                                           "createdAt":  "2024-04-15T07:41:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jfversluis",
                                           "body":  "---\r\n**Issue moved from dotnet/maui#21803**\r\n- Please respond to @drasticactions.\r\n\r\n---\r\n\r\n_From @drasticactions on Saturday, April 13, 2024 3:42:08 PM_\r\n\r\nI believe this would be a [runtime](http://github.com/dotnet/runtime) issue with Mono AOT. It\u0027s unrelated to the MAUI UI framework, outside of the fact that it works in debug mode because MAUIs templates enable the Interpreter by default for debug (hence the issue you linked, where people keep writing code that works because the interpreter happens to be on, but fails in Release mode). If you run this code in a .NET iOS app without the MAUI Template, it would fail in debug mode with the same JIT error. That it works in debug here is happenstance.\r\n\r\n@rolfbjarne I\u0027m not sure where this issue should go, what do you think?",
                                           "updatedAt":  "2024-04-15T07:41:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc56iucd",
                                           "createdAt":  "2024-04-15T07:41:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jfversluis",
                                           "body":  "---\r\n**Issue moved from dotnet/maui#21803**\r\n- Please respond to @JeroenBer.\r\n\r\n---\r\n\r\n_From @JeroenBer on Saturday, April 13, 2024 4:34:59 PM_\r\n\r\nI understand and agree, this is not MAUI UI. But is \"net8.0-ios\" part of MAUI ?  It felt weird to put it in xamarin-macios, since it\u0027s no longer Xamarin. \r\nFor people without a Xamarin history it\u0027s pretty inapprehensible where to report these things, also for finding documentation etc.  The term Xamarin is still used in a lot of places. Even for people with Xamarin experience it\u0027s sometimes hard to understand.",
                                           "updatedAt":  "2024-04-15T07:41:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc56iuds",
                                           "createdAt":  "2024-04-15T07:41:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jfversluis",
                                           "body":  "---\r\n**Issue moved from dotnet/maui#21803**\r\n- Please respond to @jfversluis.\r\n\r\n---\r\n\r\n_From @jfversluis on Monday, April 15, 2024 7:41:11 AM_\r\n\r\nLook related to https://github.com/dotnet/runtime/issues/99548",
                                           "updatedAt":  "2024-04-15T07:41:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc56uD8B",
                                           "createdAt":  "2024-04-16T11:44:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivanpovazan",
                                           "body":  "Probably with the similar root cause as: https://github.com/dotnet/runtime/issues/98428",
                                           "updatedAt":  "2024-04-16T11:44:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc56uHTR",
                                           "createdAt":  "2024-04-16T11:52:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "JeroenBer",
                                           "body":  "And probably also https://github.com/praeclarum/sqlite-net/issues/1067, I saw same behaviour there.",
                                           "updatedAt":  "2024-04-16T11:52:55Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "XML Serializer does not work correctly in \"net8.0-ios\" release mode",
        "labels":  [
                       "area-Codegen-AOT-mono",
                       "os-ios"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/101135",
        "createdAt":  "2024-04-15T15:32:27Z",
        "number":  101135,
        "author":  "crui3er",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC_urQA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "frolyo",
                                            "createdAt":  "2024-04-15T17:37:01Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "gdar91",
                                            "createdAt":  "2024-04-28T15:16:04Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "OvrBtn",
                                            "createdAt":  "2024-07-13T21:03:04Z"
                                        },
                                        {
                                            "content":  "EYES",
                                            "user":  "OvrBtn",
                                            "createdAt":  "2024-07-13T21:03:07Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "kcrg",
                                            "createdAt":  "2024-09-03T09:08:32Z"
                                        },
                                        {
                                            "content":  "EYES",
                                            "user":  "kcrg",
                                            "createdAt":  "2024-09-03T09:08:33Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "vyacheslav-volkov",
                                            "createdAt":  "2024-09-03T15:51:38Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "beeradmoore",
                                            "createdAt":  "2024-09-04T04:00:29Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "sullivanmj",
                                            "createdAt":  "2024-10-10T02:32:29Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "bcaceiro",
                                            "createdAt":  "2024-10-10T04:39:11Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Bumbar14",
                                            "createdAt":  "2024-10-10T05:21:58Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "NicolasKlaas",
                                            "createdAt":  "2024-10-10T05:23:21Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Kalyxt",
                                            "createdAt":  "2024-10-10T09:11:44Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Alexgoon",
                                            "createdAt":  "2024-10-10T10:29:55Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "SamirSalazar",
                                            "createdAt":  "2024-10-10T15:45:46Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "viktorszekeress",
                                            "createdAt":  "2024-10-10T17:34:37Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "michelebastione",
                                            "createdAt":  "2024-10-10T18:07:52Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "winkmichael",
                                            "createdAt":  "2024-10-10T18:46:02Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "sportmoltas",
                                            "createdAt":  "2024-10-10T20:24:12Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jor1196",
                                            "createdAt":  "2024-10-11T02:48:51Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jedusei",
                                            "createdAt":  "2024-10-11T03:49:01Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "rdurfee",
                                            "createdAt":  "2024-10-11T19:48:48Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "gerrewsb",
                                            "createdAt":  "2024-10-13T12:33:08Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "MMAWygwam",
                                            "createdAt":  "2024-10-31T08:26:22Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "blazej-kosmowski",
                                            "createdAt":  "2024-11-08T07:36:14Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "nikamvd",
                                            "createdAt":  "2025-01-12T18:10:19Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ShadowInID",
                                            "createdAt":  "2025-01-13T22:09:48Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "juwens",
                                            "createdAt":  "2025-03-05T13:22:35Z"
                                        }
                                    ],
                          "totalCount":  28
                      },
        "updatedAt":  "2025-07-25T03:37:46Z",
        "body":  "### Description\n\nWhen I build maui application for Android with full aot compilation, I see a lot of `aot not found` log messags for mono aot logger.\r\nEspecially for generic class/methods. Even for the ones I expect that should be statically detected.\r\nE.g.:\r\n04-15 18:43:11.957 28518 28518 D Mono    : AOT NOT FOUND: System.Collections.Concurrent.ConcurrentDictionary`2\u003cMicrosoft.Extensions.DependencyInjection.ServiceLookup.ServiceIdentifier, Microsoft.Extensions.DependencyInjection.ServiceProvider/ServiceAccessor\u003e:.ctor ().\r\n\r\n04-15 18:43:23.703 28518 28518 D Mono    : AOT NOT FOUND: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1\u003cSystem.Threading.Tasks.VoidTaskResult\u003e:GetStateMachineBox\u003cMauiAotTest.Components.Pages.Weather/\u003cOnInitializedAsync\u003ed__2\u003e (MauiAotTest.Components.Pages.Weather/\u003cOnInitializedAsync\u003ed__2\u0026,System.Threading.Tasks.Task`1\u003cSystem.Threading.Tasks.VoidTaskResult\u003e\u0026).\r\n\r\nSee attached files: one with full log for the app and the one with `aot not found` only messages.\r\n\r\n[LogNote_47021f4c_20240415_18.43.07_tst2_aot_full_not_found.txt](https://github.com/dotnet/maui/files/14981193/LogNote_47021f4c_20240415_18.43.07_tst2_aot_full_not_found.txt)\r\n[LogNote_47021f4c_20240415_18.43.07_tst2_aot_full.txt](https://github.com/dotnet/maui/files/14981194/LogNote_47021f4c_20240415_18.43.07_tst2_aot_full.txt)\r\n\n\n### Steps to Reproduce\n\n1. Create a template maui blazor app\r\n2. Build it with AndroidEnableProfiledAot=false and install on Android device\r\n3. Enable mono aot logging with command `adb shell setprop debug.mono.log default,timing=bare,assembly,mono_log_level=debug,mono_log_mask=aot`\r\n4. Captute log with logcat\r\n5. See a lot of `aot not found` (exclude the ones for wrappers) log messages.\n\n### Link to public reproduction project repository\n\nhttps://github.com/crui3er/MauiAotTest\n\n### Version with bug\n\n8.0.3 GA\n\n### Is this a regression from previous behavior?\n\nNot sure, did not test other versions\n\n### Last version that worked well\n\nUnknown/Other\n\n### Affected platforms\n\nAndroid\n\n### Affected platform versions\n\n_No response_\n\n### Did you find any workaround?\n\nNo\n\n### Relevant log output\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOfRx6_Q==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc56xQz3",
                                           "createdAt":  "2024-04-16T15:52:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "crui3er",
                                           "body":  "It\u0027s also not clear whether should AOT compiler for Android process generic types and methods when $(AndroidEnableProfiledAot)==false\r\nI found it\u0027s confusing when reading https://devblogs.microsoft.com/dotnet/dotnet-8-performance-improvements-in-dotnet-maui/#androidstripilafteraot\r\nLooks like it works only for iOS.\r\nCan @jonathanpeppers please shead a light on the subject.\r\nWhat can I read or may be you can recommend how to reduce jit as much as possible during starting app.",
                                           "updatedAt":  "2024-04-16T15:52:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc56xabI",
                                           "createdAt":  "2024-04-16T19:19:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jonathanpeppers",
                                           "body":  "I think this is a known issue, some info at the bottom of:\r\n* https://github.com/dotnet/maui/tree/main/src/ProfiledAot#testing-profiles\r\n\r\n\r\nThere are these tiny methods that are always JIT no matter what:\r\n```\r\n02-23 09:03:46.327 10401 10401 D Mono    : AOT NOT FOUND: (wrapper runtime-invoke) object:runtime_invoke_void (object,intptr,intptr,intptr).\r\n02-23 09:03:46.334 10401 10401 D Mono    : AOT NOT FOUND: (wrapper managed-to-native) System.Diagnostics.Debugger:IsAttached_internal ().\r\n02-23 09:03:46.367 10401 10401 D Mono    : AOT NOT FOUND: (wrapper native-to-managed) Android.Runtime.JNINativeWrapper:Wrap_JniMarshal_PPL_V (intptr,intptr,intptr).\r\n```\r\n\r\nBut I don\u0027t think these are \"actual methods\", but tiny wrappers that enable generics or p/invoke. There is some JIT happening there currently on Android, which might be because we use MONO_AOT_MODE=Normal and allow JIT. I believe iOS/Catalyst would use MONO_AOT_MODE=Full, because those platforms require it.",
                                           "updatedAt":  "2024-04-16T19:19:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc562QtW",
                                           "createdAt":  "2024-04-17T11:29:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivanpovazan",
                                           "body":  "@crui3er just for my understanding, is there a crash that happens with the application or the question is just about unexpected log messages?\r\n\r\nRegarding full AOT compilation on Android, afaik you would have to set `-p:AndroidAotMode=Full`, @jonathanpeppers please confirm, that would force it (although I am not sure if we are officially supporting this mode). If it isn\u0027t set some wrappers will always fallback to JIT during runtime (and `AOT NOT FOUND` in logs is expected behaviour). ",
                                           "updatedAt":  "2024-04-17T11:29:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc562Yjw",
                                           "createdAt":  "2024-04-17T11:49:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "crui3er",
                                           "body":  "@ivanpovazan Not, there is no crash, but there are unexpected log messages.\r\nSo I am aware that log messages for wrappers are ok (AOT NOT FOUND: (wrapper xxx)). @jonathanpeppers I do not take them in account.\r\nIn attached sample (in fact, it\u0027s template maui blazor app) jitting is used for stuff in MauiAotTest.Components.Pages.Weather.OnInitializedAsync method or during service provide usage (see my first comment).\r\n\r\nIn my maui app I working on there are a lot of log messages with AOT NOT FOUND. Even with using recorded aot profile there are jitted methods are which are in recorded profile.\r\n\r\nSo I am trying to figure out what is going wrong with this small sample app.\r\n\r\n\r\n",
                                           "updatedAt":  "2024-04-17T11:49:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc562jGr",
                                           "createdAt":  "2024-04-17T12:14:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivanpovazan",
                                           "body":  "\u003e In my maui app I working on there are a lot of log messages with AOT NOT FOUND. Even with using recorded aot profile there are jitted methods are which are in recorded profile.\r\n\r\nCould you share more information on that: like the aot profile that you are using and which methods you would not expect to see in the log?",
                                           "updatedAt":  "2024-04-17T12:14:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc562xzn",
                                           "createdAt":  "2024-04-17T12:46:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jonathanpeppers",
                                           "body":  "I don’t think Full will work on Android, does that mode prevent JIT?",
                                           "updatedAt":  "2024-04-17T12:46:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc563AP6",
                                           "createdAt":  "2024-04-17T13:16:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "Full AOT is what iOS uses, which does not JIT anything, since that\u0027s a requirement for iOS.",
                                           "updatedAt":  "2024-04-17T13:16:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc57BHjd",
                                           "createdAt":  "2024-04-18T13:37:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "crui3er",
                                           "body":  "I tested with `-p:AndroidAotMode=Full` and it fails on start wtih ExecutionEngineException.\r\n```\r\nF mono-rt : [ERROR] FATAL UNHANDLED EXCEPTION: System.ExecutionEngineException: Attempting to JIT compile method \u0027(wrapper other) void Java.Interop.JavaVMInterface:PtrToStructure (intptr,object)\u0027 while running in aot-only mode. See https://docs.microsoft.com/xamarin/ios/internals/limitations for more information.\r\n```",
                                           "updatedAt":  "2024-04-18T13:37:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc57BMgJ",
                                           "createdAt":  "2024-04-18T13:47:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "crui3er",
                                           "body":  "\u003e Could you share more information on that: like the aot profile that you are using and which methods you would not expect to see in the log?\r\n\r\nI recorded custom aot profile https://github.com/crui3er/MauiAotTest/blob/master/custom.aprof and do test with it.\r\nDuring recording and testing I do the following actions: start app, go to \u0027Counter\u0027 page, click \u0027Click me\u0027 button several times, then go to \u0027Weather\u0027 page and finally go again to \u0027Counter\u0027 page.\r\n\r\nThen I compared `AOT NOT FOUND` log records and stat file generated from custom profile https://github.com/crui3er/MauiAotTest/blob/master/custom.aprof.stat.txt\r\n\r\nHere is a few examples of aot not found records in the log for methods mentioned in profile.\r\n\r\n1)\r\nstat: \r\n```\r\nvoid System.Runtime.CompilerServices.AsyncMethodBuilderCore:Start (MauiAotTest.Components.Pages.Weather/\u003cOnInitializedAsync\u003ed__2\u0026) \r\n```\r\nlog: \r\n```\r\nMono    : AOT NOT FOUND: System.Runtime.CompilerServices.AsyncMethodBuilderCore:Start\u003cMauiAotTest.Components.Pages.Weather/\u003cOnInitializedAsync\u003ed__2\u003e (MauiAotTest.Components.Pages.Weather/\u003cOnInitializedAsync\u003ed__2\u0026).\r\n```\r\n\r\n2)\r\nstat: \r\n```\r\nvoid System.Collections.Concurrent.ConcurrentDictionary`2\u003cMicrosoft.AspNetCore.Components.Routing.RouteKey, Microsoft.AspNetCore.Components.Routing.RouteTable\u003e:.ctor ()\r\n```\r\nlog: \r\n```\r\nMono    : AOT NOT FOUND: System.Collections.Concurrent.ConcurrentDictionary`2\u003cMicrosoft.AspNetCore.Components.Routing.RouteKey, Microsoft.AspNetCore.Components.Routing.RouteTable\u003e:.ctor ().\r\n```\r\n\r\n3)\r\nstat: \r\n```\r\nSystem.Type System.Text.Json.Serialization.JsonConverter`1\u003cSystem.Threading.Tasks.VoidTaskResult\u003e:get_Type ()\r\n```\r\nlog: \r\n```\r\nMono    : AOT NOT FOUND: System.Text.Json.Serialization.JsonConverter`1\u003cSystem.Threading.Tasks.VoidTaskResult\u003e:get_Type ().\r\n```\r\n\r\nHere is `AOT NOT FOUND` log records excluding the one for wrappers.\r\n[LogNote_47021f4c_20240418_16.32.26_tst2_custom_profile_filtered.txt](https://github.com/dotnet/runtime/files/15025776/LogNote_47021f4c_20240418_16.32.26_tst2_custom_profile_filtered.txt)\r\n\r\nSample app is updated. Now it uses recorded aot profile.\r\n\r\n",
                                           "updatedAt":  "2024-04-18T13:52:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc57BnpE",
                                           "createdAt":  "2024-04-18T14:33:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD1pJ6g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "crui3er",
                                                                               "createdAt":  "2024-04-18T14:35:47Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "ivanpovazan",
                                                                               "createdAt":  "2024-04-18T14:57:13Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "alexis-kochetov",
                                                                               "createdAt":  "2024-04-19T10:50:03Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "alexyakunin",
                                                                               "createdAt":  "2024-04-23T09:27:55Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "alexyakunin",
                                                                               "createdAt":  "2024-04-23T09:27:56Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "winkmichael",
                                                                               "createdAt":  "2024-10-10T18:46:32Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  6
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "@crui3er Thanks for providing more information about this. I will take a look at this.",
                                           "updatedAt":  "2024-04-18T14:33:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc57fmDe",
                                           "createdAt":  "2024-04-23T09:49:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODpp6xg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "OvrBtn",
                                                                               "createdAt":  "2024-07-13T21:02:59Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "Hi there, just curious, are there any updates on that?\r\n\r\nI want to add some context: the app we\u0027re working on shows ~20K methods in \"AOT NOT FOUND\" log entries - and that\u0027s just for the startup time. We were questioning whether AOT is even working at all - well, it does, coz there are also lots of \"AOT FOUND\" entries, but it\u0027s reasonable to assume that if you have even 50/50 split between these, you\u0027re probably getting just 50% of max. possible savings on JIT. And with AOT turned off, our startup time is almost 2x higher. In other words, if AOT issues would be fixed, our app\u0027s startup time would go from ~ 1.7s to probably just 0.3-0.5s or so, which is obviously a dramatic change.\r\n\r\nPlease let @crui3er know if you need anything else. We can provide logs from the actual app + give you instructions on how to reproduce the issue there, if a small sample won\u0027t be enough to identify the root cause(s).\r\n\r\nAnd IMO it\u0027s super important to address this: compared to Native AOT, profile-based AOT (assuming it 100% works) is what most of mobile apps need. It allows to balance between the app size and the speed of the most crucial parts of the app, which is almost always the startup time for mobile apps. So nearly any MAUI and Blazor Hybrid app would benefit from this heavily.",
                                           "updatedAt":  "2024-04-23T09:50:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc57leU7",
                                           "createdAt":  "2024-04-23T20:50:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "Also, should we change the title of this issue? It\u0027s not about just full AOT, it\u0027s about both full and profiled AOT. And it\u0027s understandable why full AOT may miss or intentionally omit some methods (the # of possible generic instances explodes exponentially with the codebase size), but profiled AOT is expected to produce AOT code at least for every method from the AOT profile.",
                                           "updatedAt":  "2024-04-23T20:51:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58ZE2T",
                                           "createdAt":  "2024-04-30T19:54:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODgJ3FQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "alexyakunin",
                                                                               "createdAt":  "2024-04-30T21:37:04Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "I was able to build and run the app provided here. When setting `AndroidEnableProfiledAot=true` and enabling logging. I could see the 2/3 example @crui3er provided earlier, for example 1, they are not the same method.\r\n\r\nI also noticed that this profile was gathered using the legacy profiler. Next, I will try the new profiler to see if this issue still exists. If so, I will investigate further. ",
                                           "updatedAt":  "2024-04-30T19:54:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58ZN3m",
                                           "createdAt":  "2024-04-30T20:01:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "crui3er",
                                           "body":  "\u003e  I also noticed that this profile was gathered using the legacy profiler. Next, I will try the new profiler to see if this issue still exists. If so, I will investigate further. \n\nWhat is a new profiler and how to use it? \n",
                                           "updatedAt":  "2024-04-30T20:01:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58ZxUA",
                                           "createdAt":  "2024-04-30T20:29:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "Actually, the new profiler is not fully supported on Android yet. The profiler I was talking about is this: https://github.com/dotnet/runtime/blob/main/docs/design/mono/profiled-aot.md",
                                           "updatedAt":  "2024-04-30T20:31:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58a5K3",
                                           "createdAt":  "2024-04-30T21:39:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "crui3er",
                                           "body":  "\u003e Actually, the new profiler is not fully supported on Android yet. The profiler I was talking about is this: https://github.com/dotnet/runtime/blob/main/docs/design/mono/profiled-aot.md\r\n\r\nI think @jonathanpeppers did experimental support https://github.com/jonathanpeppers/xamarin-android/blob/dotnet-pgo/src/Xamarin.Android.Build.Tasks/Microsoft.Android.Sdk/targets/Microsoft.Android.Sdk.Aot.targets but it\u0027s not included in .NET8, is it?",
                                           "updatedAt":  "2024-04-30T21:39:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58bGey",
                                           "createdAt":  "2024-04-30T21:55:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "crui3er",
                                           "body":  "\u003e I was able to build and run the app provided here. When setting `AndroidEnableProfiledAot=true` and enabling logging. I could see the 2/3 example @crui3er provided earlier, for example 1, they are not the same method.\r\n\r\n@fanyang-mono Why do you think that methods in example 1 are not the same?\r\n\r\n",
                                           "updatedAt":  "2024-04-30T21:56:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58bKbB",
                                           "createdAt":  "2024-04-30T21:58:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "@fanyang-mono funny enough, we were trying to use it as well - not sure what\u0027s the state of .mibc format in the long run, but it seems currently it\u0027s not supported by release version of .NET 8, but you can see here we were trying both .aprof and .mibc formats here: https://github.com/Actual-Chat/actual-chat/blob/dev/src/dotnet/App.Maui/App.Maui.csproj#L265 Collecting .mibc isn\u0027t an issue - as well as merging these profiles. But it looks like Android build targets just don\u0027t use `\u003cAndroidMibcProfile\u003e` \u0026 fallback to full AOT (i.e. behave like there is no profile provided).\r\n\r\nWe created this issue because there are so many \"AOT_NOT_FOUND\" for regular .aprof output that it works much worse than full AOT for us (which still produces tons of \"AOT_NOT_FOUND\", but this is at least explainable). **The fact profiled AOT doesn\u0027t really work is a huge issue affecting every MAUI Android app, and an existential issue for apps like ours, where the startup time is crucial.** I wrote earlier that fully working profiled AOT is expected to drop our startup time to 0.5...1s on Android - vs current 2s. In other words, it\u0027s as different as night and day.\r\n\r\nJust to illustrate how bad this is:\r\n- Startup time on iPhohe 13 Pro in **interpreter-only mode**: 1.1s\r\n- Startup time on Galaxy S23 Ultra in **full AOT** mode: 1.7-1.8s\r\n- Startup time on Galaxy S23 Ultra with **.aprof profile**: 2.4s or more.\r\n\r\nAnd unrelated, but: we spent a decent amount of time trying to enable AOT for iOS at least for some assemblies, but this inevitably leads to crashes. That\u0027s why for now the app works in interpreter mode there.",
                                           "updatedAt":  "2024-04-30T22:05:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58cMl7",
                                           "createdAt":  "2024-05-01T00:28:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "Another illustration of how bad this is. Below is a screenshot from DotTrace showing where most of the time is spent in **release build** with full AOT - as I said, due to the issue listed here it\u0027s our best option for now. The timeline is constrained by [0..1.2s] interval. The original .nettrace was recorded via:\r\n```\r\nadb reverse tcp:9000 tcp:9000\r\nstart dotnet-dsrouter client-server -tcps 127.0.0.1:9000 -ipcc /tmp/maui-app --verbose debug\r\nstart dotnet-trace collect --diagnostic-port /tmp/maui-app --output \"_Profiling/android.nettrace\" --providers Microsoft-Windows-DotNETRuntime:0x1F000080018:5\r\n```\r\n![image](https://github.com/dotnet/runtime/assets/1673423/c5b637fa-2f97-4b9e-9987-2734c607e2f2)\r\n\r\nAs you see, JIT takes almost 74% of time there. So if profiled AOT would work, it could be just 0.3s or so.",
                                           "updatedAt":  "2024-05-01T00:31:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58fGRy",
                                           "createdAt":  "2024-05-01T14:14:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jonathanpeppers",
                                           "body":  "There is a PR adding `.mibc` support, that still has some open questions (blockers):\r\n* https://github.com/xamarin/xamarin-android/pull/7216\r\n\r\nHowever, I don\u0027t think using `.mibc` would be able to avoid any additional `AOT NOT FOUND` messages. It seems like it would just be using a more modern format for profiled AOT than [what we use for the built-in profile today](https://github.com/jonathanpeppers/Mono.Profiler.Android?tab=readme-ov-file#usage-of-the-aot-profiler).\r\n\r\nRegarding:\r\n\u003e Startup time on Galaxy S23 Ultra in full AOT mode: 1.7-1.8s\r\n\u003e Startup time on Galaxy S23 Ultra with .aprof profile: 2.4s or more.\r\n\r\nAre you able to share a `.nettrace` or `.speedscope` file of startup? There might be something we can fix in .NET MAUI or recommend.\r\n\r\nYou could also [record your own AOT profile](https://github.com/jonathanpeppers/Mono.Profiler.Android?tab=readme-ov-file#usage-of-the-aot-profiler), if the file size of \"full AOT\" (AOT everything) is too large. This would just be a tradeoff where it wouldn\u0027t AOT everything, but just the methods called during your recording.",
                                           "updatedAt":  "2024-05-01T14:14:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58fJCw",
                                           "createdAt":  "2024-05-01T14:23:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "\u003e \u003e I was able to build and run the app provided here. When setting `AndroidEnableProfiledAot=true` and enabling logging. I could see the 2/3 example @crui3er provided earlier, for example 1, they are not the same method.\r\n\u003e \r\n\u003e @fanyang-mono Why do you think that methods in example 1 are not the same?\r\n\r\nOne is a non-generic method -\u003e `System.Runtime.CompilerServices.AsyncMethodBuilderCore:Start`\r\nThe other is a generic method -\u003e `System.Runtime.CompilerServices.AsyncMethodBuilderCore:Start\u003cMauiAotTest.Components.Pages.Weather/\u003cOnInitializedAsync\u003ed__2\u003e`\r\n\r\nThe second one has a type argument and needs to be compiled differently than the first one.\r\n\r\nHowever, I just check the method `System.Runtime.CompilerServices.AsyncMethodBuilderCore:Start`. It is a generic method. https://github.com/dotnet/runtime/blob/main/src/libraries/System.Private.CoreLib/src/System/Runtime/CompilerServices/AsyncMethodBuilderCore.cs#L21\r\n\r\nIt seems that `custome.aprof.stat.txt` contains some inaccurate information. Hopefully, `custome.aprof` contains the correct information.",
                                           "updatedAt":  "2024-05-01T14:34:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58fK5_",
                                           "createdAt":  "2024-05-01T14:28:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "@alexyakunin @crui3er Could you compare the profile text files that you got from both methods to see if they are the same? I am curious about that. They might be the same.",
                                           "updatedAt":  "2024-05-01T14:28:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58hJOR",
                                           "createdAt":  "2024-05-01T20:14:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "I investigated the situation more and found out that \r\n```\r\nSystem.Type System.Text.Json.Serialization.JsonConverter`1\u003cSystem.Threading.Tasks.VoidTaskResult\u003e:get_Type ()\r\n```\r\ndidn\u0027t pass the checks inside `add_single_profile_method` (https://github.com/dotnet/runtime/blob/main/src/mono/mono/mini/aot-compiler.c#L13822-L13870), which means it didn\u0027t meet the requirements to be AOT compiled. I believe the other two methods weren\u0027t compiled due to the same reason.\r\n\r\nAnd the new profiler alos use `add_single_profile_method` to decide if a given method could be AOT compiled or not. Thus, @jonathanpeppers was correct, using the new profiler won\u0027t help more methods get AOT compiled either.",
                                           "updatedAt":  "2024-05-01T20:53:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58hZmO",
                                           "createdAt":  "2024-05-01T20:58:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "@alexyakunin @crui3er I wonder if the app size is a concern for you? The more methods being compiled, the bigger the app would be.",
                                           "updatedAt":  "2024-05-01T20:58:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58haLx",
                                           "createdAt":  "2024-05-01T21:00:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODgSgMA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "alexyakunin",
                                                                               "createdAt":  "2024-05-01T23:31:16Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "\u003e And unrelated, but: we spent a decent amount of time trying to enable AOT for iOS at least for some assemblies, but this inevitably leads to crashes. That\u0027s why for now the app works in interpreter mode there.\r\n\r\n@alexyakunin  Feel free to open an issue for the crash you\u0027ve seen.",
                                           "updatedAt":  "2024-05-01T21:00:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58h3jx",
                                           "createdAt":  "2024-05-01T22:48:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODgUTkQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "crui3er",
                                                                               "createdAt":  "2024-05-02T06:10:36Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "\u003e Are you able to share a .nettrace or .speedscope file of startup? There might be something we can fix in .NET MAUI or recommend.\r\n\r\nWe\u0027ll do this. Do you need a .nettrace file for full AOT or profile-based AOT? I am also not fully sure if .nettrace collection interacts with any other options, so if you can list some build options we definitely need to enable while collecting the trace, it would be great, @jonathanpeppers\r\n\r\nAlso, on MAUI itself - I guess what would be great is to have a \"MAUI-less\" version of Blazor Hybrid, or at least have a mode there which registers only what\u0027s needed for Blazor Hybrid apps. We don\u0027t use any MAUI controls except Window \u0026 WebView, so e.g. `RemapForControls` call you see on the screenshot above takes 65ms, though in reality at least a half of controls registered there aren\u0027t used.",
                                           "updatedAt":  "2024-05-01T23:30:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58h4BE",
                                           "createdAt":  "2024-05-01T22:51:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "\u003e You could also [record your own AOT profile](https://github.com/jonathanpeppers/Mono.Profiler.Android?tab=readme-ov-file#usage-of-the-aot-profiler), if the file size of \"full AOT\" (AOT everything) is too large. This would just be a tradeoff where it wouldn\u0027t AOT everything, but just the methods called during your recording.\r\n\r\nWe do this, and this issue is created specifically because we see way more \"AOT NOT FOUND\" on startup with recorded AOT profile vs full AOT, which tells (presumably) that either many of recorded methods aren\u0027t AOT compiled, or Mono doesn\u0027t pick them up somehow. That\u0027s why full AOT works better than profile-based AOT recorded specifically for our own app, @jonathanpeppers - and that\u0027s why this issue is created.",
                                           "updatedAt":  "2024-05-01T23:25:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58h4ts",
                                           "createdAt":  "2024-05-01T22:54:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "\u003e @alexyakunin @crui3er Could you compare the profile text files that you got from both methods to see if they are the same? I am curious about that. They might be the same.\r\n\r\nWe\u0027ll respond to this shortly.",
                                           "updatedAt":  "2024-05-01T22:54:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58h6yx",
                                           "createdAt":  "2024-05-01T23:04:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "\u003e didn\u0027t pass the checks inside `add_single_profile_method` (https://github.com/dotnet/runtime/blob/main/src/mono/mono/mini/aot-compiler.c#L13822-L13870), which means it didn\u0027t meet the requirements to be AOT compiled. I believe the other two methods weren\u0027t compiled due to the same reason.\r\n\u003e \r\n\u003e And the new profiler alos use `add_single_profile_method` to decide if a given method could be AOT compiled or not. Thus, @jonathanpeppers was correct, using the new profiler won\u0027t help more methods get AOT compiled either.\r\n\r\n@fanyang-mono can you please explain what are these requirements? I don\u0027t fully understand the comment in the end: https://github.com/dotnet/runtime/blob/main/src/mono/mono/mini/aot-compiler.c#L13864 , but feel like there are lots of cases which might be intact for our app. In other words, we need a clarification on when specifically it decides to skip AOT for some methods.\r\n\r\nE.g. there are tons of scenarios in our case when a `ConcurrentDictionary\u003cTKey, TValue\u003e` is used to cache something, and based on what I read, there are cases it won\u0027t compile its `.GetOrAdd` method for specific `TKey` and `TValue` instances. And based on what we see in Mono debug log, nearly all of AOT_NOT_FOUND entries are for generic methods (or methods of generic types).",
                                           "updatedAt":  "2024-05-03T01:02:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58h7KW",
                                           "createdAt":  "2024-05-01T23:06:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "What also worth mentioning:\r\n- We don\u0027t use dynamic assembly loading\r\n- So our MAUI app project references everything it needs - directly or indirectly.",
                                           "updatedAt":  "2024-05-01T23:06:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58h8mt",
                                           "createdAt":  "2024-05-01T23:13:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "@fanyang-mono maybe to simplify this, can you explain which check `System.Type System.Text.Json.Serialization.JsonConverter``1\u003cSystem.Threading.Tasks.VoidTaskResult\u003e:get_Type()`\r\ndidn\u0027t pass inside `add_single_profile_method`? I.e. I see no reason to not AOT-compile it - `VoidTaskResult` is a `Unit`-like struct (i.e. not a class), so any generic method instance using it as generic parameter requires a specific implementation.",
                                           "updatedAt":  "2024-05-01T23:32:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58h-Uv",
                                           "createdAt":  "2024-05-01T23:22:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "\u003e @alexyakunin @crui3er I wonder if the app size is a concern for you? The more methods being compiled, the bigger the app would be.\r\n\r\nIt\u0027s only in case with iOS with full AOT (which still doesn\u0027t work, so...). It\u0027s fine on Android.\r\n\r\nAs far as I remember, on iOS it produces ~ 200+MB output - vs ~65MB on Android, and that\u0027s mostly due to the fact it uses nearly every available value type as possible generic substitution. And we have a fancy one: https://github.com/ActualLab/Fusion/blob/master/src/ActualLab.Interception/ArgumentList-Generated.cs - it\u0027s generated from `.tt` file nearby, but basically, that\u0027s a type our call interceptors use to capture call arguments with just one allocation (vs N for array-based capturing). So it generates tons of method instances for this specific type. Luckily, `ArgumentList\u003c...\u003e` is a class, so at least it\u0027s not recursive :) \r\n\r\nWe\u0027ll get back to this once we resort this issue :)",
                                           "updatedAt":  "2024-05-01T23:23:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58iDHL",
                                           "createdAt":  "2024-05-01T23:46:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "@fanyang-mono just read the code for `add_single_profile_method` more carefully - still don\u0027t fully understand all the cases, but thinking about workarounds for us based on my limited understanding. Do you think https://github.com/gluck/il-repack can help here? E.g. if we repack all of our assemblies into a single one \u0026 reference it from MAUI project, will it help to AOT compile most of the code from .aprof (assuming we record a new profile)?",
                                           "updatedAt":  "2024-05-01T23:47:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58lIB5",
                                           "createdAt":  "2024-05-02T10:21:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "crui3er",
                                           "body":  "\u003e @alexyakunin @crui3er Could you compare the profile text files that you got from both methods to see if they are the same? I am curious about that. They might be the same.\r\n\r\n@fanyang-mono Can you clarify which text files should I compare?",
                                           "updatedAt":  "2024-05-02T10:21:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58la48",
                                           "createdAt":  "2024-05-02T10:49:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "crui3er",
                                           "body":  "The file size of \"full AOT\" (AOT everything) is acceptable for us on Android, but even in this mode log contains a lot AOT_NOT_FOUND. So probably there is a big room to improve this process.\r\n\r\nIn my intial comment https://github.com/dotnet/runtime/issues/101135#issue-2246690867 I posted list of AOT_NOT_FOUND for the sample app in \"full AOT\" and there are lot of them. Even very simple cases that I expect must be AOT\u0027ed: \r\n```\r\nAOT NOT FOUND: System.Collections.Generic.List`1\u003cint\u003e:set_Capacity (int)\r\n```\r\n\r\nHere are lists for AOT_FOUND and AOT_NOT_FOUND in \"full AOT\" mode.\r\n[LogNote_47021f4c_20240415_18.43.07_tst2_aot_full_not_found.txt](https://github.com/dotnet/runtime/files/15187094/LogNote_47021f4c_20240415_18.43.07_tst2_aot_full_not_found.txt)\r\n[LogNote_47021f4c_20240415_18.43.07_tst2_aot_full_found.txt](https://github.com/dotnet/runtime/files/15187095/LogNote_47021f4c_20240415_18.43.07_tst2_aot_full_found.txt)\r\n",
                                           "updatedAt":  "2024-05-02T10:50:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58njnv",
                                           "createdAt":  "2024-05-02T14:58:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "\u003e \u003e @alexyakunin @crui3er Could you compare the profile text files that you got from both methods to see if they are the same? I am curious about that. They might be the same.\r\n\u003e \r\n\u003e @fanyang-mono Can you clarify which text files should I compare?\r\n\r\nFor the legacy profiler, it produced this text file with a list of methods. I was hoping that the .nettrace produced such a file as well. But it seems that it only produce a mibc file (PE format). I wanted to get an idea if the list of methods coming from those two profilers matches. But that\u0027s a separate issue than the AOT compile issue that we are discussing here. We could skip it for now.",
                                           "updatedAt":  "2024-05-02T14:59:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58oXcD",
                                           "createdAt":  "2024-05-02T16:22:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "For\r\n```\r\nSystem.Type System.Text.Json.Serialization.JsonConverter`1\u003cSystem.Threading.Tasks.VoidTaskResult\u003e:get_Type ()\r\n```\r\n1. The reason why it failed `mono_method_is_generic_sharable_full` check is because `System.Threading.Tasks.VoidTaskResult` failed `type_is_sharable` check here: https://github.com/dotnet/runtime/blob/main/src/mono/mono/mini/mini-generic-sharing.c#L3403-L3433, because `System.Threading.Tasks.VoidTaskResult` is a value type and both `allow_type_vars` and `allow_partial` are false.\r\n\r\n2. The reason why it failed `inst_references_image (ctx-\u003eclass_inst, acfg-\u003eimage)` check, is because `System.Threading.Tasks.VoidTaskResult` belongs to assembly `System.Private.CoreLib.dll` instead of `System.Text.Json.dll`\r\n\r\n3. The reason why it failed `is_local_inst (ctx-\u003eclass_inst, acfg-\u003eimage)` check, is because `System.Threading.Tasks.VoidTaskResult` is not a primitive type.\r\n\r\nNote, `ctx-\u003emethod_inst` is NULL here.\r\n",
                                           "updatedAt":  "2024-05-02T16:23:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58panU",
                                           "createdAt":  "2024-05-02T18:28:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "For\r\n```\r\nSystem.Collections.Generic.List`1\u003cint\u003e:set_Capacity (int)\r\n```\r\nThis method is referenced in `System.Collections.dll`. However, both `System.Collections.Generic.List\u003cT\u003e` and `int` are defined in `System.Private.CoreLib.dll`. That failed the following two checks\r\n```\r\ninst_references_image (ctx-\u003eclass_inst, acfg-\u003eimage)\r\nm_class_get_image (method-\u003eklass) == acfg-\u003eimage\r\n```\r\n\r\nAdditionally, `int` is a value type, which fails the `type_is_sharable` check.",
                                           "updatedAt":  "2024-05-02T18:28:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58qUbe",
                                           "createdAt":  "2024-05-02T20:09:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "crui3er",
                                           "body":  "If I understood correctly, you stated why current logic failed checks for examples above. It looks like current logic of AOT processing is very limited.\r\nI think the cases above (with JsonConverter, all types from System.Private.CoreLib.dll) and async state machine methods for asyns/await support is what regular maui/xamarin developer would expect from AOT processing (full or profiled).\r\nCan AOT processing be improved in nearest future?\r\n",
                                           "updatedAt":  "2024-05-02T20:20:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58sQgn",
                                           "createdAt":  "2024-05-03T01:04:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "\u003e For the legacy profiler, it produced this text file with a list of methods. I was hoping that the .nettrace produced such a file as well. But it seems that it only produce a mibc file (PE format). I wanted to get an idea if the list of methods coming from those two profilers matches. But that\u0027s a separate issue than the AOT compile issue that we are discussing here. We could skip it for now.\r\n\r\n@fanyang-mono nettrace can be converted to Speedscope or Chromium profile - AFAIK both are JSON-based, i.e. we can also produce a .nettrace output, if needed.",
                                           "updatedAt":  "2024-05-03T01:04:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58sTJ-",
                                           "createdAt":  "2024-05-03T01:10:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "\u003e The reason why it failed X check...\r\n\r\nWow... From what I read, there are extremely severe constraints for generic method instances - e.g. it feels that every generic method instance that is parameterized with a non-primitive value type has zero chances to be AOT compiled, right?\r\n\r\nCan you roughly summarize what are the requirements for a generic method instance to be AOT compiled?\r\n\r\nFor the note, all of this is **quite** disappointing. The main reason to have generic methods is to improve the execution speed by avoiding boxing, etc. - and it seems they do exactly the opposite during the most important stage.",
                                           "updatedAt":  "2024-05-03T01:11:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58sUxj",
                                           "createdAt":  "2024-05-03T01:15:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODgeTIQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "CONFUSED",
                                                                               "user":  "alexis-kochetov",
                                                                               "createdAt":  "2024-05-03T07:03:05Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "Yeah, and as @crui3er noted, this means that async state machines aren\u0027t AOT-compiled. And this alone is a huge deal for any moderately complex app.",
                                           "updatedAt":  "2024-05-03T01:15:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58zSjy",
                                           "createdAt":  "2024-05-03T22:03:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "\u003e For\r\n\u003e \r\n\u003e ```\r\n\u003e System.Collections.Generic.List`1\u003cint\u003e:set_Capacity (int)\r\n\u003e ```\r\n\u003e \r\n\u003e This method is referenced in `System.Collections.dll`. However, both `System.Collections.Generic.List\u003cT\u003e` and `int` are defined in `System.Private.CoreLib.dll`. That failed the following two checks\r\n\u003e \r\n\u003e ```\r\n\u003e inst_references_image (ctx-\u003eclass_inst, acfg-\u003eimage)\r\n\u003e m_class_get_image (method-\u003eklass) == acfg-\u003eimage\r\n\u003e ```\r\n\u003e \r\n\u003e Additionally, `int` is a value type, which fails the `type_is_sharable` check.\r\n\r\n**CORRECTION:** When I debug this I was compiling the incorrect assembly. I should have compiled `System.Private.CoreLib.dll` instead of `System.Collections.dll`. When do changed that, I can see this method being compiled. In fact, I went back to check the log when running the app. I found this\r\n```\r\nAOT: FOUND method System.Collections.Generic.List`1\u003cint\u003e:set_Capacity (int) [0x77b49db380 - 0x77b49db4a0 0x77b4a46241]\r\n```\r\n\r\nI am not sure why it is shown as `AOT NOT FOUND` for you. I was using profiled AOT by setting this on the app that you provided\r\n```\r\n\u003cAndroidEnableProfiledAot\u003etrue\u003c/AndroidEnableProfiledAot\u003e\r\n```",
                                           "updatedAt":  "2024-05-03T22:05:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58zfcM",
                                           "createdAt":  "2024-05-03T23:09:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "What about the exact list of requirements for a generic method instance to be AOT-compiled? IMO the specific example with `set_Capacity` doesn\u0027t represent the majority of cases we see (e.g. all async method builders are custom value types rather than primitive value types).",
                                           "updatedAt":  "2024-05-03T23:09:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58zfqb",
                                           "createdAt":  "2024-05-03T23:11:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "I.e. I won\u0027t focus on this method specifically, but rather look for method categories which represent the majority of AOT_NOT_FOUND cases in Mono debug log.",
                                           "updatedAt":  "2024-05-03T23:11:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc58zgbs",
                                           "createdAt":  "2024-05-03T23:17:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "To clarify, what matters is to close as large share of these cases as possible. E.g. if one fix closes 90% of real-life cases we see (or you see on a template app), it\u0027s 10x improvement to what we have now. And that\u0027s why I am asking about the clarification:\r\n- Obviously, the expectation is: everything that\u0027s in profile gets AOT compiled. Coz why not?\r\n- And if this isn\u0027t true, it makes sense to close the gap by starting from the largest categories. \r\n- It also makes sense to at least tell developers like us about this to enable us to come up with some workarounds - e.g. I would rather prefer to have less efficient code, which gets AOT compiled on Android vs to have a 2x worse startup time.",
                                           "updatedAt":  "2024-05-04T04:18:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc59D0iQ",
                                           "createdAt":  "2024-05-07T11:10:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "One other thing to add on why this is crucial for any app that uses MAUI or Blazor Hybrid:\r\n- Android reports ANR w/ \"no focused window\" in case the main thread is busy for 5+ seconds.\r\n- As you might guess, the fact it takes 1.7s to start on Galaxy S23 Ultra for our app means it may easily take 5+ seconds to start on much less powerful devices, and there are plenty of such devices on Android.\r\n\r\nSo fixing this issue may address an elevated ANR rate in many MAUI apps. It\u0027s currently 1.29% in our case, which exceeds \"bad behavior\" threshold of 0.47% on Google Play store (so it penalizes the app for this).\r\n\r\nHere is how all ANRs look for the most recent version of app in our case:\r\n![image](https://github.com/dotnet/runtime/assets/1673423/d75b495d-c6a9-4ce9-a278-5d3227306be3)\r\n\r\nAnd we\u0027re pretty sure it\u0027s all about slow startup:\r\n- We spent a lot of time while investigating this, and currently we\u0027re 99% certain there are no cases we can attribute to something else.\r\n- There are no ANRs or hanging issues on any other app we have, including Windows, iOS (both are almost identical to Android, i.e. it\u0027s the same MAUI app), and WASM.\r\n\r\n@fanyang-mono I hope you provide the answer to my question here, + maybe share some thoughts on what Microsoft is going to do about this. And please let us know if you need anything else to help you investigate it further. E.g. we can share the logs showing how terrible is the impact of this in a real app.",
                                           "updatedAt":  "2024-05-07T11:16:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc59GZ2Z",
                                           "createdAt":  "2024-05-07T16:15:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODg_6EQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "fanyang-mono",
                                                                               "createdAt":  "2024-05-07T18:11:17Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "Just checked out the comments to PR - thanks for working on this! Looking forward to seeing more (or most) of these cases are closed!",
                                           "updatedAt":  "2024-05-07T16:15:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc59GatC",
                                           "createdAt":  "2024-05-07T16:16:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "Also, on AOT size: IMO for profile-based AOT it\u0027s almost always preferrable that everything from profile is AOT compiled. If it produces too large binary, the profile can be always truncated or pre-processed.",
                                           "updatedAt":  "2024-05-07T16:16:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc59HHr9",
                                           "createdAt":  "2024-05-07T18:07:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "@alexyakunin Thanks for providing all these detailed and useful information. I understand that app startup time is very critical. I have been working on improving the AOT compilation coverage based on the app that you provided and will keep working on it to see if I could improve the AOT compilation coverage further, while keep the app size relatively small. \r\n\r\nIn terms of the Mono AOT rules, I wish I could come up with a concrete list of rules. However, as you could see that there is 15k+ lines of code in `aot-compile.c` file alone. The methods in that file also reference methods from other files. There are tons of logics involved in deciding which methods to compile and how to compile a given method. Currently, I am studying the pattern of the `NOT FOUND` methods from the app that you provided. I will report back on things as I discover more.\r\n\r\nNote that I am working on other projects while I am working on this. I may not be able to provide daily updates.",
                                           "updatedAt":  "2024-05-07T18:07:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc59I-VW",
                                           "createdAt":  "2024-05-08T00:11:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "Thanks for the answer - yes, I totally understand there are lots of other things on your plate. That\u0027s why I am offering help - e.g. we can:\r\n- Analyze what are the most frequent NOT FOUND cases in our real app \u0026 share this data here\r\n- Reproduce what represents the majority of them on a test app.\r\n\r\nAs for the complexity of decision making, I understand that, but IMO we and everyone else still needs a guidance on that. You don\u0027t have to cover every scenario - \"good enough\" is all we need here.\r\n\r\nImagine a decision tree with \"AOT / NO AOT / it\u0027s complex\" outcomes limited to e.g. 7 decision nodes (just 3 levels), where the share of \"it\u0027s complex\" is minimal amoung all other 7-node decision trees for e.g. Blazor MAUI sample method set. Is it possible to share something like this?",
                                           "updatedAt":  "2024-05-08T00:18:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc59I_n0",
                                           "createdAt":  "2024-05-08T00:17:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "Also, please answer my specific question: am I right that a generic method with a custom value type (i.e. declared in one of our own assemblies) as generic parameter won\u0027t be AOT compiled, even if it is listed in AOT profile?\r\n\r\nI am asking this because I suspect this is where the majority of our cases are:\r\n- Async method builders fit here\r\n- ConcurrentDictionary.GetOrAdd overload with custom TKey and/or TState is another fit (and TState is almost always a custom value type, if you want to get rid of allocations on cache lookups \u0026 rely on caches a lot).",
                                           "updatedAt":  "2024-05-08T00:26:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc590SfB",
                                           "createdAt":  "2024-05-14T18:29:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "@fanyang-mono are there any updates?",
                                           "updatedAt":  "2024-05-14T18:29:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc590S52",
                                           "createdAt":  "2024-05-14T18:30:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "Also, if you can\u0027t answer my question, could you please ask someone else to help?",
                                           "updatedAt":  "2024-05-14T18:30:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc599oAg",
                                           "createdAt":  "2024-05-15T19:26:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "I\u0027ve finished my investigations. And here are my findings:\r\n\r\n- The trend that I\u0027ve observed with the `AOT NOT FOUND` methods is that they are generic methods with value types. These are some common ones\r\n    - `Microsoft.AspNetCore.Components.Web.JSComponentConfigurationStore/JSComponentParameter`\r\n    - `Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceIdentifier`\r\n    - `Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceCacheKey`\r\n    - `System.ValueTuple`\r\n-  In mono AOT codebase, fundamentally, whenever seeing a generic method, it is preferred to generate a reference type based shared method, instead of a value type based shared method (which could handle both reference type and value type). The reason is because the size of the latter is way bigger than the size of the former. And we assume that it is more common for the generic type to be a reference type during runtime. There would be a lot of work involved to change this assumption in Mono codebase, which is not feasible to do for .NET9. However, the minor fix that I\u0027ve merged should help a little with the startup time, which should be available in the up coming .NET9 Preview5 release.\r\n\r\nTo maximize your app\u0027s AOT coverage for app startup, I would suggest avoid using value types for the generic methods that being used during app startup.\r\n",
                                           "updatedAt":  "2024-05-15T19:26:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc59-IF6",
                                           "createdAt":  "2024-05-15T20:53:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODxEt8g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "viktor-zuiev",
                                                                               "createdAt":  "2024-09-05T08:42:19Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "\u003e And we assume that it is more common for the generic type to be a reference type during runtime\r\n\r\nIf you mean generic type parameters, it\u0027s a false assumption. On contrary, tons of optimizations on .NET are crafted in assumption a specific version of code is generated for such generic methods.\r\n\r\nIt\u0027s quite sad you don\u0027t see this fixed in .NET 9 - **it means profile-based AOT will stay mostly broken on MAUI.** If you see 800+ JITted calls on toy apps, imagine how bad it is in non-toy ones. If 80+% of your startup time is wasted on JIT, claiming that profile-based AOT is there is like... Giving soldier a floating vest and claiming it\u0027s bulletproof.\r\n\r\n@jonathanpeppers maybe you want to add something. IMO it\u0027s literally a case when the feature is broken so badly it effectively doesn\u0027t exist.\r\n\r\nWe\u0027ll share more details on our specific stats later, but I am absolutely sure we aren\u0027t unique in this sense.",
                                           "updatedAt":  "2024-05-15T20:54:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc59-c1K",
                                           "createdAt":  "2024-05-15T22:00:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jonathanpeppers",
                                           "body":  "@alexyakunin our general plan has been \"be better than we had in Xamarin\". In the .NET 6 and 7 timeframe, we were already basically there. We would have had the same `AOT NOT FOUND` logic in mono/mono and Xamarin.Android.\r\n\r\n@fanyang-mono\u0027s current PR in .NET 9 gets us a bit further. But I think this would be something we can get more focus on, if Android startup time becomes a priority.\r\n\r\nRight now, general .NET MAUI focus is: quality, fix bugs, improve developer loop, fix `CollectionView`, fix scrolling performance. (and that doesn\u0027t include what tooling teams might be focusing on)",
                                           "updatedAt":  "2024-05-15T22:00:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5-ds8r",
                                           "createdAt":  "2024-05-21T04:27:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "I see. Ok, we\u0027re working on more robust stats on AOT NOT FOUND in our specific case. Once it\u0027s done, we\u0027ll probably report another issue \u0026 link this one (this one has a bit misleading title - it\u0027s actually all about profile-based AOT rather than full AOT).",
                                           "updatedAt":  "2024-05-21T04:27:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5_MkGh",
                                           "createdAt":  "2024-05-27T20:05:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bcaceiro",
                                           "body":  "@alexyakunin  from your testing, what was the best configuration in .csproj for .net MAUI, specifically, android startup? Because I\u0027m struggling to find the best result",
                                           "updatedAt":  "2024-05-27T20:05:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5_MkXd",
                                           "createdAt":  "2024-05-27T20:07:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bcaceiro",
                                           "body":  "In a low end device - for example, a Zebra Phone ( corporate), I have startups of 9 seconds, which is far from acceptable, and I have no external dependencies, or packages, and try to minimize the work during the startup  (only .net maui, skiasharp and sentry), ",
                                           "updatedAt":  "2024-05-27T20:07:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5_dLK1",
                                           "createdAt":  "2024-05-29T22:21:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "@bcaceiro full AOT works slightly better in our case. Here is how it looks - approximately:\r\n- Profile-guided AOT produces ~ 4.2K \"AOT NOT FOUND\" methods on startup\r\n- Full AOT produces ~ 4K of such entries, so the app starts slightly faster.\r\n\r\nAnd some stats on what are these 4200 methods with missing AOT code:\r\n- **Nearly each one of them is a generic method instance containing at least one value typed parameter.**\r\n- 1500 = System.Collections.* related (ConcurrentDictionary, etc.)\r\n- 1200 = async state machine related\r\n- 1000 = System.Text.Json related \r\n- 500 = ActualLab.Fusion-related\r\n- 200 = MemoryPack related. \"Oh, you guys use value types \u0026 compile-time source generator to speed up serialization? Well, screw you!\"\r\n\r\nThe total is a bit more than 4.2K - some methods fall into a few categories.\r\n\r\nSpeaking of workarounds, @fanyang-mono , there are tons of cases when a value type is e.g. `KeyValuePair\u003cK,V\u003e`, `ValueTuple\u003c...\u003e`, etc.; I quickly estimated that even if we put a lot of efforts to replace some value types with classes, we can at best eliminate 50% of \"AOT NOT FOUND\" cases. There are no easy workarounds.\r\n\r\nOverall, profile-based AOT is mostly a fake on MAUI. \r\n\r\nAnd guess what AOT penalizes the most? Right, the code that\u0027s highly optimized to run fast, such as logic allowing to run async state machines w/o allocations until their first `await`.",
                                           "updatedAt":  "2024-05-30T05:16:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5_dN59",
                                           "createdAt":  "2024-05-29T22:33:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODnUpoA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "bcaceiro",
                                                                               "createdAt":  "2024-05-30T07:12:22Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "OvrBtn",
                                                                               "createdAt":  "2024-06-26T23:27:02Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "\u003e In a low end device - for example, a Zebra Phone ( corporate), I have startups of 9 seconds, which is far from acceptable, and I have no external dependencies, or packages, and try to minimize the work during the startup (only .net maui, skiasharp and sentry),\r\n\r\n@bcaceiro a few recommendations:\r\n1. Try removing Sentry. If you use their recommended way of plugging it in, it alone eats up maybe 2 seconds in your case. At least that\u0027s what we saw with its default setup.\r\n2. Try running the same exercise - i.e. enable mono logging \u0026 count how many \"AOT NOT FOUND\" you see with full vs profile-based AOT. Let\u0027s team up to cry more loudly about this :( \r\n\r\nPersonally I don\u0027t understand how it even makes sense to compare the MAUI/Mono AOT vs Native AOT assuming Mono-based AOT is broken to such an extent.",
                                           "updatedAt":  "2024-05-29T22:39:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5_dYtK",
                                           "createdAt":  "2024-05-29T23:24:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODv2mFw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "bcaceiro",
                                                                               "createdAt":  "2024-05-30T07:12:12Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "OvrBtn",
                                                                               "createdAt":  "2024-06-26T23:27:02Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "vyacheslav-volkov",
                                                                               "createdAt":  "2024-08-14T15:31:36Z"
                                                                           },
                                                                           {
                                                                               "content":  "CONFUSED",
                                                                               "user":  "alexyakunin",
                                                                               "createdAt":  "2024-08-16T07:19:18Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "viktor-zuiev",
                                                                               "createdAt":  "2024-08-27T16:23:48Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "\u003e our general plan has been \"be better than we had in Xamarin\".\r\n\r\n@jonathanpeppers sounds like you\u0027re saying we should be thankful for what we have \u0026 patiently wait?\r\n\r\nNot sure how to stress on this, but this isn\u0027t a small problem. This is a crucial issue any MAUI app suffers from:\r\n- It severely impacts app startup time - likely, by 2-4x compared to the ideal profile-based AOT case. I shared that e.g. in our case 75% of CPU time is spent on JIT during the very first second - all due to this.\r\n- It elevates the ANR rate for any MAUI app that uses notifications on Android - there are tons of low-profile devices which will register ANR if your click on a notification, and the main thread is still busy 5s after that. Read about 9s of startup time in @bcaceiro case above; and we measure ~ the same numbers on ~ 3-4 years old devices.\r\n\r\n**And it hit where it hurts the most** - it disproportionally impacts *performance-critical code* right during the *startup*.",
                                           "updatedAt":  "2024-05-29T23:27:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5_e2sn",
                                           "createdAt":  "2024-05-30T06:44:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bcaceiro",
                                           "body":  "@alexyakunin thank you for the detailed explanation. I have been doing some tests, and in fact full AOT seems to be the best scenario. I tried to use as few packages as possible, currently I am only using:\r\n- .NET MAUI Controls\r\n- Sentry\r\n- BottomSheet Plugin\r\n- Plugin.BLE\r\nRegarding sentry, indeed I am using it, and I some  overhead in my .speedscope, like 600ms, however, are you using other alternative? Analytics is an essential part, specially in our phase of development.\r\n",
                                           "updatedAt":  "2024-05-30T06:44:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5_oY6L",
                                           "createdAt":  "2024-05-31T06:07:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "\u003e however, are you using other alternative?\r\n\r\nWe use it as well, just delay its start a little + do this outside of the main thread.",
                                           "updatedAt":  "2024-05-31T06:07:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5_wJ52",
                                           "createdAt":  "2024-06-01T06:52:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bcaceiro",
                                           "body":  "@alexyakunin any resources on how to do that? Just moving into a separate task, Sentry crashes the app ",
                                           "updatedAt":  "2024-06-01T06:52:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6AiFis",
                                           "createdAt":  "2024-06-09T09:49:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "@bcaceiro you can try to see how it\u0027s done in our source code. I remember we\u0027ve ended up cloning a code of Sentry client (it\u0027s open source) to implement that.",
                                           "updatedAt":  "2024-06-09T09:49:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6IUMTh",
                                           "createdAt":  "2024-08-13T19:38:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "I see this issue is added to .NET 10 milestone. Not quite what\u0027s expected, but... \r\n\r\nOk, any news on .NET Native for Android? What\u0027s the best issue to track the state of that item?\r\n\r\nAs you might guess, the situation with generic methods and AOT isn\u0027t acceptable, so we are looking for whatever can help here.",
                                           "updatedAt":  "2024-08-13T19:38:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6IXyW6",
                                           "createdAt":  "2024-08-14T06:14:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEGZCAg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "alexyakunin",
                                                                               "createdAt":  "2024-08-16T05:59:47Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "alexyakunin",
                                                                               "createdAt":  "2024-08-16T05:59:49Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "antonheryanto",
                                                                               "createdAt":  "2024-08-23T07:46:40Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "charlesroddie",
                                                                               "createdAt":  "2024-08-23T11:30:35Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "NicolasKlaas",
                                                                               "createdAt":  "2024-10-10T05:23:46Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Grzegorz1223",
                                                                               "createdAt":  "2025-02-14T11:55:23Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  6
                                                         },
                                           "author":  "vyacheslav-volkov",
                                           "body":  "I completely agree with the opinion that one of the most serious and long-standing issues with Xamarin.Android is the slow startup time for applications. If you search the internet for \"Xamarin.Android slow startup,\" you\u0027ll find thousands of discussions on this topic. Even with all possible optimizations, including AOT compilation, the startup time remains slow. This problem is particularly noticeable with UI frameworks such as Avalonia, UNO, and MAUI. Developers simply don\u0027t have the ability to solve this problem on their own, as it is rooted in the fundamental aspects of the platform\u0027s operation, and a significant amount of time is spent on JIT compilation.\r\n\r\nWhen .NET Native was introduced, I thought it would be the solution to the slow startup problem for Android. Starting with version .NET 8.0, it became stable for iOS, and I began actively using it. The results are impressive: a fairly large application on an iPhone X launches as quickly as any native application and even faster than a similar application on a Samsung Galaxy S22 Ultra, despite all possible optimizations for Android. The gap between the release of these devices is five years, and I dread to imagine the startup time on a five-year-old Android device.\r\n\r\nHowever, observing the discussions about .NET Native and the activity around this topic, I get the impression that the team does not give this problem enough priority, and no specific timelines have been set for its resolution. For example, in one of the discussions on GitHub, the following is mentioned:\r\n\r\n\u003eThese will likely work under Mono, but will need to be fixed one day in .NET 10 or some future release that supports NativeAOT.\r\nhttps://github.com/dotnet/android/issues/8724\r\n\r\nThis gives the impression that allocating resources for NativeAOT on Android is not a priority, and instead, new releases include optimizations that only provide marginal improvements (e.g., -10% startup time for test cases). However, in real-world conditions, such improvements do not solve the problem. If an application takes 2000ms to start, even reducing it to 1800ms makes little difference, and at best, such optimizations are noticeable only under ideal conditions.\r\n\r\nIt seems to me that the team does not fully grasp the depth of this issue. Many of my colleagues have already switched to Flutter specifically because of the slow startup times on Android. When their clients or customers ask why the Android application launches so slowly, developers are forced to reply that it is a limitation of the technology they are using, they may also suggest switching to iOS, where there are no such problems, but this is not an option.\r\n\r\nIn my opinion, issues like this, and especially the implementation of NativeAOT support for Android, should be considered critically important. I would like to hear the team\u0027s thoughts on this matter: what should we expect? Will NativeAOT support for Android be added in the near future, or should we only hope for small, incremental performance improvements that don\u0027t solve anything and are waiting for everyone to switch to Flutter?",
                                           "updatedAt":  "2024-08-14T06:14:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Ia6mr",
                                           "createdAt":  "2024-08-14T13:31:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jonathanpeppers",
                                           "body":  "\u003e If an application takes 2000ms to start, even reducing it to 1800ms makes little difference\r\n\r\nI\u0027ve found simply profiling your app (with `dotnet-trace`) and improving things, you should be able to get this quite a bit shorter. If you\u0027ve already recorded a custom AOT profile, or already \"AOT everything\", what is left is to profile your own code. In the customers I\u0027ve helped in the past, we\u0027ve always been able to achieve reasonable results on a mid-range device.",
                                           "updatedAt":  "2024-08-14T13:32:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6IcBXW",
                                           "createdAt":  "2024-08-14T14:57:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODxzZMA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "AncientLust",
                                                                               "createdAt":  "2024-09-11T09:28:28Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "vyacheslav-volkov",
                                           "body":  "Hi @jonathanpeppers, yes, I do all of this in my applications, and yet the iPhone X with NativeAOT still performs faster than the Galaxy S22 Ultra. Additionally, to go through all these steps, you need to use various scripts and possess additional knowledge on how to use and set everything up, whereas, for example, Flutter offers a convenient profiler built into the environment that requires no extra knowledge.\r\n\r\nIn the end, to write a \"fast application\" for Android that still lags behind native applications in terms of startup speed, you need to perform a whole range of additional operations, which not every developer can manage, just to make their application work somewhat faster. I believe that this expectation is where the main problem lies. A developer expects that the release build will immediately work as it should, but instead, they encounter performance issues where they don\u0027t expect them.\r\n\r\nNativeAOT could be the solution to this problem. Yes, there are still limitations on using dynamic code, but they are not that difficult to overcome, resulting in an application that performs as fast as a native one. Isn\u0027t that what we want for a cross-platform application? Moreover, I’m almost 100% sure that no one uses Android applications without ProfiledAOT or FullAOT because, in that case, you can forget about startup performance. This also means they are already using trimming, so transitioning to NativeAOT wouldn\u0027t require much additional effort. Over time, more libraries and frameworks will become fully compatible with NativeAOT, making integration seamless for developers without any issues.\r\n\r\nBy the way, the folks from the Avalonia team used NativeAOT for Android and compared performance [here](https://www.reddit.com/r/dotnet/comments/13lvih2/nativeaot_ndk_vs_xamarinandroid_performance/?rdt=38098). The video speaks for itself—this is what every developer expects from their application\u0027s startup speed. \r\n\r\nI’ve had an excellent experience using NativeAOT on iOS, and the result is that the application runs almost as if it were written in Swift/ObjectiveC. Because of this, I’m very interested in understanding the Android team\u0027s thoughts on NativeAOT and why it appears to have such a low priority. When developing cross-platform applications, we rely on a shared codebase, so for developers targeting both iOS and Android, it wouldn\u0027t make much difference if Android didn\u0027t support dynamic code—after all, iOS doesn’t support it either.",
                                           "updatedAt":  "2024-08-14T14:57:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Icc7c",
                                           "createdAt":  "2024-08-14T15:49:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jonathanpeppers",
                                           "body":  "@vyacheslav-volkov can you share some `.nettrace` or `.speedscope` files of your application\u0027s startup? It doesn\u0027t sound like you\u0027ve tried this?\r\n\r\nNativeAOT would probably make your app faster, but so would some general performance investigations of your code.",
                                           "updatedAt":  "2024-08-14T15:49:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6IjGZJ",
                                           "createdAt":  "2024-08-15T08:42:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vyacheslav-volkov",
                                           "body":  "@jonathanpeppers I can\u0027t upload `.nettrace` or `.speedscope` from work projects, but I\u0027ve uploaded a sample app that only initializes my framework and shows one layout, and on a Galaxy Note 10 with FullAOT it takes 1 second. at the same time, on iOS this configuration with NativeAOT starts almost instantly on iPhone X. I\u0027ve added `.speedscope` and `.nettrace` directly to the repository.\r\nIf you can check and tell me how to fix it without rewriting everything into classes instead of structs, I will be glad, but otherwise my question on NativeAOT is still relevant.\r\n\r\nhttps://github.com/vyacheslav-volkov/PerfAndroidTest",
                                           "updatedAt":  "2024-08-15T08:42:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Iqz1w",
                                           "createdAt":  "2024-08-16T06:47:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEPfobA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "vyacheslav-volkov",
                                                                               "createdAt":  "2024-08-16T08:01:29Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "viktor-zuiev",
                                                                               "createdAt":  "2024-08-27T16:36:05Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ram16g",
                                                                               "createdAt":  "2024-09-10T02:22:43Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "thisisthekap",
                                                                               "createdAt":  "2025-04-24T08:25:26Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "\u003e \u003e If an application takes 2000ms to start, even reducing it to 1800ms makes little difference\r\n\u003e \r\n\u003e I\u0027ve found simply profiling your app (with `dotnet-trace`) and improving things, you should be able to get this quite a bit shorter. If you\u0027ve already recorded a custom AOT profile, or already \"AOT everything\", what is left is to profile your own code. In the customers I\u0027ve helped in the past, we\u0027ve always been able to achieve reasonable results on a mid-range device.\r\n\r\nI am actually curious... What\u0027s the largest app on MAUI + Blazor that\u0027s built at Microsoft? Are there any at all?\r\n\r\nSorry for a bit angry response, but you guys kinda underestimate the amount of efforts some of us have to invest to improve startup time, as well as our level of experience. I\u0027ll list just some of things we already did:\r\n- All service registrations are replaced w/ delegate-based ones\r\n- So every client-side service is resolved either explicitly, or via an intermediate service caching hub like this one: https://github.com/Actual-Chat/actual-chat/blob/dev/src/dotnet/UI.Blazor.App/Services/ChatUIHub.cs\r\n- Custom service container that allows us to start some services (mostly related to web view) early while registering the rest (this saves 50-100ms on startup).\r\n- Use of MemoryPack everywhere (it\u0027s a serializer with Roslyn code generator, so no runtime codegen)\r\n- Similarly, all our proxies are also generated in compile time\r\n- Profiling \u0026 postponing everything that takes time @ startup or moving it to parallel threads.\r\n- Warming up whatever runs on later startup stages earlier in a concurrent thread - actually this doesn\u0027t help much, seemingly b/c JIT concurrency is limited, and it\u0027s all about these AOT_NOT_FOUND\r\n- Getting rid of key generic use cases. E.g. our proxies were heavily using `ArgumentList\u003cT0,T1,...\u003e` type to capture method call arguments with just one allocation (contrary to `object[]` used by nearly any other proxy generator), and I ended up adding an \"array mode\" for this abstraction to get rid of generics \u0026 make it more AOT-friendly: https://github.com/ActualLab/Fusion/commit/1e12033613fea420febbdf58d7c247e948ee7d4e\r\n- Identifying and creating this issue, which is a key bottleneck in our case now.\r\n\r\nBut in the end, we can do only so much - e.g. we can\u0027t really change:\r\n- The code involving `AsyncTaskMethodBuilder\u003cT\u003e` \u0026 similar types (i.e. async code)\r\n- `ConcurrentDictionary.GetOrAdd(key, static (key, state) =\u003e ..., state)` scenarios\r\n- Most of cases involving Fusion\u0027s `Computed\u003cT\u003e` abstraction.\r\n\r\nAs for NativeAOT, I\u0027ve made a simple test to see how far we\u0027re from being able to use it, and it just confirmed my worst thoughts:\r\n- Universal shared generics aren\u0027t there. So if AOT code wasn\u0027t generated for a specific generic instance, it\u0027s guaranteed to fail\r\n- That\u0027s why I ended up adding a code like this to make a short sample run at least a few lines: https://github.com/ActualLab/Fusion/blob/master/samples/NativeAot/CodeKeeperExt.cs - and it still doesn\u0027t pass the key test (loopback RPC call).\r\n\r\nAll in all, I think you guys make a HUGE mistake:\r\n1. There are generics, `Span\u003cT\u003e` \u0026 tons of other types which makes .NET blazingly fast on the server side. I\u0027m a big fan of .NET partially due to its perf.: https://itnext.io/geting-4x-speedup-with-net-core-3-0-simd-intrinsics-5c9c31c47991 (it\u0027s my post)\r\n2. You claim .NET code is 100% portable / runs everywhere - and it does. But features like generics and `Span\u003cT\u003e`, which are supposed to make it fast, are also mobile startup performance killers.\r\n3. And it\u0027s all due to the fact Mono AOT is incapable of generating generic method instances we really need.\r\n4. Native AOT w/o universal shared generics also doesn\u0027t look promising - unless you guys add some tooling allowing to e.g. programmatically enumerate possible generic parameters for certain types \u0026 methods right during the link stage. E.g. in our case we technically can do this, but it will require a decent amount of work. As you might guess, it\u0027s totally unacceptable for any real app to fail at a random point just because one of generic methods doesn\u0027t have an AOT version.\r\n\r\nSo IMO you need to address this issue. And @vyacheslav-volkov is absolutely right: there is a ton of critics of MAUI itself, but MAUI app startup time is a key issue faced by people like us - i.e. the ones who made it through all the hoops. The ones who found fixes or workarounds for everything else people complain about.",
                                           "updatedAt":  "2024-08-16T06:57:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Iq3y3",
                                           "createdAt":  "2024-08-16T07:01:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "\u003e iPhone X with NativeAOT still performs faster than the Galaxy S22 Ultra\r\n\r\nProbably it\u0027s time to repeat here that INTERPRETED version of our app for iPhone 13 starts faster (1.3s) than it\u0027s AOT-compiled version on Galaxy S23 Ultra (~ 1.8s). \r\n\r\nHere is how https://actual.chat startup times look across different platforms / devices:\r\n- 1.2s: Ryzen 7950X3D, Windows app (regular .NET 8 app)\r\n- **1.3s: iPhone 13, iOS app w/o any AOT code (i.e. _interpreter_ mode build)**\r\n- 1.6s: Ryzen 7950X3D, WASM app in Firefox (no AOT)\r\n- **1.8s: Galaxy S23 Ultra, Android app with profile-guided AOT** - and ~ 2s on a top-tier device means you\u0027ll be seeing \u003e5s startup times on mid- \u0026 entry-level devices, *which almost certainly means elevated ANR rate \u0026 Google Play penalization*\r\n- 2s: iPhone 13, WASM app in Safari/WebKit\r\n- 2.1s: Ryzen 7950X3D, WASM app in Chrome\r\n- 2.8s: Galaxy S23 Ultra, WASM app in Chrome\r\n\r\nNotes:\r\n- We don\u0027t use AOT for our WASM app mainly b/c it doesn\u0027t improve its load time, but more than doubles the app size.\r\n- We don\u0027t use AOT for our iOS app due to a HUGE 200MB binary it produces. Probably my recent changes to our `ArgumentList` will fix this though.\r\n",
                                           "updatedAt":  "2024-08-17T06:03:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6IrCxc",
                                           "createdAt":  "2024-08-16T07:31:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "One last note on Mono AOT: honestly, we\u0027d do whatever it takes in terms of adding extra codegen to our app to get rid of JIT during the startup. The problem is: we can\u0027t. This issue literally blocks any options except getting rid of most of structs (or generic methods, which seems even worse option). \r\n\r\nSo the advice like \"try profiling your code \u0026 eliminate hot paths\" isn\u0027t helpful at all - it\u0027s slow because the hot path is in Mono JIT compiler, and we can\u0027t get rid of it without turning a huge amount of good code into a worse one (i.e. structs -\u003e classes migration) + likely, breaking compatibility of any old client with our API, etc.\r\n\r\nIDK how hard it is to address this issue, but... I also don\u0027t understand how you guys can claim that AOT is there (even a profile-guided one!) without a huge asterisk nearby.",
                                           "updatedAt":  "2024-08-16T07:32:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6IrFss",
                                           "createdAt":  "2024-08-16T07:40:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "\u003e By the way, the folks from the Avalonia team used NativeAOT for Android and compared performance [here](https://www.reddit.com/r/dotnet/comments/13lvih2/nativeaot_ndk_vs_xamarinandroid_performance/?rdt=38098). The video speaks for itself—this is what every developer expects from their application\u0027s startup speed.\r\n\r\nYep... We\u0027d try to migrate to NativeAOT as soon as it becomes available solely due to this. The startup time is crucial for apps like ours.",
                                           "updatedAt":  "2024-08-16T07:41:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6IrGbY",
                                           "createdAt":  "2024-08-16T07:43:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vyacheslav-volkov",
                                           "body":  "@alexyakunin I spent some time making my library NativeAOT compatible (I haven\u0027t pushed the latest version to github yet) but the result was the worst. This is how I solved the aot generic problem, I added this method:\r\n\r\n```\r\n    public static void LinkerIncludeGenericType(\r\n        [DynamicallyAccessedMembers(DynamicallyAccessedTypes.DynamicMemberInfo)]\r\n        Type type)\r\n    {\r\n        if (!RuntimeFeature.IsDynamicCodeSupported \u0026\u0026 Default.FalseCondition)\r\n            _ = type.BaseType;\r\n    }\r\n```\r\n\r\nThis method is only intended to tell the linker about the generic type, which will not affect the non-AOT version. I use reflection a lot because I write my own bindings, and a typical binding looks like this:\r\n\r\n```\r\n_testModel1.Bind(m =\u003e m.Value).To(_testModel1, m =\u003e m.Value1);\r\n```\r\nAnd under the hood I track all the generic instances that I need to create this binding:\r\n\r\n```\r\n    public static BindingResult\u003cTTarget\u003e To\u003cTTarget, TFrom, TSource, TTo\u003e(this BindingSyntax\u003cTTarget, TFrom\u003e syntax, TSource source,\r\n        [RequireStaticDelegate]\r\n        Expression\u003cFunc\u003cTSource, TTo\u003e\u003e sourceMember,\r\n        BindingParameterValue targetNullValue, BindingParameterValue fallback, [RequireStaticDelegate] Action\u003cIBindingBuilderContext\u003e? configurator = null,\r\n        IReadOnlyMetadataContext? metadata = null)\r\n        where TTarget : class\r\n        where TSource : class\r\n    {\r\n        if (!RuntimeFeature.IsDynamicCodeSupported \u0026\u0026 Default.FalseCondition)\r\n        {\r\n            if (typeof(TFrom) != typeof(BindingSyntaxEvent) \u0026\u0026 (typeof(TFrom).IsValueType || typeof(TTo).IsValueType))\r\n            {\r\n                MugenExtensions.Convert\u003cTFrom, TTo\u003e(default);\r\n                MugenExtensions.Convert\u003cTTo, TFrom\u003e(default);\r\n            }\r\n\r\n            if (typeof(TTo).IsValueType)\r\n                PropertyAccessorMemberInfoBase.LinkerInclude\u003cTTo\u003e();\r\n        }\r\n        //other code\r\n\r\n```\r\n\r\nand the code from PropertyAccessorMemberInfoBase\r\n\r\n```\r\n    public static void LinkerInclude\u003cTValue\u003e()\r\n    {\r\n        ReflectionMugenExtensions.LinkerIncludeGenericType(typeof(PropertyAccessorMemberInfo\u003cobject, TValue\u003e));\r\n        ReflectionMugenExtensions.LinkerIncludeGenericType(typeof(StaticPropertyAccessorMemberInfo\u003cTValue\u003e));\r\n    }\r\n```\r\n\r\nThis approach works great and keeps track of all the required types on its own.\r\n",
                                           "updatedAt":  "2024-08-16T07:44:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6IrSkP",
                                           "createdAt":  "2024-08-16T08:16:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "@vyacheslav-volkov thanks for sharing the example - yeah, that approach is nice. I thought about creating a dedicated piece of \"logic\" that similarly touches every type unnoticed by linker (mostly to make sure that if it gets evaluated for false condition, it happens ~ once), but this approach allows to keep that code right where it has to be.\r\n\r\nOne quick question - what is `DynamicallyAccessedTypes.DynamicMemberInfo`? I.e. is it a mistake or some mix of flags?",
                                           "updatedAt":  "2024-08-16T08:16:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6IrTua",
                                           "createdAt":  "2024-08-16T08:19:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "Also, `LinkerIncludeGenericType` is non-generic - it\u0027s to prevent AOT from generating useless method instances?",
                                           "updatedAt":  "2024-08-16T08:19:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6IrpAZ",
                                           "createdAt":  "2024-08-16T09:13:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODucNwQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "alexyakunin",
                                                                               "createdAt":  "2024-08-16T09:41:11Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "vyacheslav-volkov",
                                           "body":  "@alexyakunin \r\n\u003eOne quick question - what is DynamicallyAccessedTypes.DynamicMemberInfo? I.e. is it a mistake or some mix of flags?\r\n\r\nYes, you can define the flags you need for the type, in my case they are construct flags:\r\n```\r\npublic const DynamicallyAccessedMemberTypes DynamicMemberInfo = DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors;\r\n```\r\n\u003eAlso, LinkerIncludeGenericType is non-generic - it\u0027s to prevent AOT from generating useless method instances?\r\n\r\nYes, there\u0027s no point in making it generic since you can just pass the type.",
                                           "updatedAt":  "2024-08-16T09:13:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6IsRMi",
                                           "createdAt":  "2024-08-16T11:07:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "@jonathanpeppers I have another question - maybe you can help:\r\n\r\nImagine you have a build-time proxy code generator, which generates generic proxies - e.g. if it\u0027s an interface proxy, its generated implementation passes the call to a general-purpose interceptor. And there is a variety of interceptors. In the end, they accept an object like this describing a call: https://github.com/ActualLab/Fusion/blob/master/src/ActualLab.Interception/Invocation.cs\r\n\r\nNow, we want all of this to be fully compatible with NativeAOT. Or full Mono AOT so that ILLink is able to identify all actual dependencies of these interceptors. And what we can do is to make proxy generator to add _something_ that would allow us to add _per-interceptor extras_ to make sure every type \u0026 method actually used by any of interceptors is \"touched\".\r\n\r\nFor the sake of clarity, interceptors may use `SomeType\u003cT\u003e` or `SomeMethod\u003cT\u003e`, where `T` is either an argument or an \"unwrapped\" result of one of intercepted methods (\"to unwrap\" = pull `T` out of `Task\u003cT\u003e`, `ValueTask\u003cT\u003e`, or simply `T`), and:\r\n- `SomeType\u003cT\u003e` is a generic type that can be statically touched, if you can generate a fake call with `T` parameter (e.g. by a fake call like `TouchSerializer\u003cT\u003e() =\u003e Use(Serializer\u003cT\u003e.Instance)`)\r\n- `SomeMethod\u003cT\u003e` is a generic method that can be similarly statically touched (e.g. by a fake call like `TouchSerialize\u003cT\u003e() =\u003e Use(Serializer.Untyped.Serialize\u003cT\u003e(default!, default!)`).\r\n\r\nAnd I am thinking of making each proxy to fake call methods like `.UseArgument\u003cTUnwrapped\u003e`, `UseResult\u003cTUnwrapped\u003e`, etc. on `IProxyCodeTouch`, and \"implement\" a few instances of this interface (~ on per-interceptor basis) \"touching\" actual generic types and methods interceptors use. \r\n\r\n*The assumption here is: if ILLink concludes the interface method is used (with certain arg types), it implies all of its implementations are used as well, and thus whatever depends on them is also used.*\r\n\r\nWhat are your thoughts on this? Will this approach work? Are there any better options?",
                                           "updatedAt":  "2024-08-19T05:46:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6IsT7p",
                                           "createdAt":  "2024-08-16T11:16:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "Also, are there any tricks allowing to transition from `Type type` to a generic instance of type `SomeType\u003cT\u003e` parameterized w/ `type` in such a way linker \"sees\" it, assuming `type` is just an argument of a fake method rather than a generic argument, assuming we don\u0027t want to generate a lot of useless AOT for fake generic method instances.\r\n\r\nIn other words, are there any scenarios in which ILLink concludes that a method uses `SomeType\u003cT\u003e` parameterized by the value of passed `Type type`, when it sees a call to `SomeMethod(Type type)`?",
                                           "updatedAt":  "2024-08-18T05:30:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6JEFFh",
                                           "createdAt":  "2024-08-20T18:56:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODxE6jw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "vyacheslav-volkov",
                                                                               "createdAt":  "2024-08-21T07:24:58Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "beeradmoore",
                                                                               "createdAt":  "2024-09-04T05:00:06Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "viktor-zuiev",
                                                                               "createdAt":  "2024-09-05T09:05:11Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "@vyacheslav-volkov just want to say I fully agree with this:\r\n\r\n\u003e It seems to me that the **team does not fully grasp the depth of this issue**. Many of my colleagues have already **switched to Flutter specifically because of the slow startup times** on Android. When their clients or customers ask why the Android application launches so slowly, **developers are forced to reply that it is a limitation of the technology they are using**, [...]\r\n\r\nI can add that maybe up to 95% of developers simply won\u0027t dig that far to identify this specific issue. Most of them have no time for this, and only a fraction of the remaining ones has the experience needed to figure out what\u0027s going on.\r\n\r\nThat\u0027s why only a few people complaining here. But the fact others don\u0027t even bother to dig is actually a very negative thing for Microsoft, because their conclusion is much simpler: **MAUI is intrinsically slow. We\u0027ve invested a lot to build a product on it, and now the only thing we can do is to switch to Flutter or some other alternative. + Lesson learned: trusting Microsoft was a mistake.**\r\n\r\nAnd from the business perspective this is the only conclusion you can make. The explanation doesn\u0027t really matter while the underlying issue isn\u0027t fixed.",
                                           "updatedAt":  "2024-08-21T07:36:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6JgKVV",
                                           "createdAt":  "2024-08-23T11:38:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "charlesroddie",
                                           "body":  "All these partial AOT modes, including profiled AOT, are just red herrings. We should ignore everything to do with partial AOT, profiled AOT, etc., and get full AOT working. Once that\u0027s done, this issue, and the need for the partial solutions, goes away. This looks like the issue to solve: https://github.com/dotnet/runtime/issues/101135#issuecomment-2063890653\r\n\r\nNow there is StripILAfterAOT working so a simple test of working AOT would be that with StripILAfterAOT set, there is zero IL left after stripping.",
                                           "updatedAt":  "2024-08-23T11:39:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Jk6eC",
                                           "createdAt":  "2024-08-24T06:46:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "\u003e We should ignore everything to do with partial AOT, profiled AOT, etc., and get full AOT working.\r\n\r\nPolitely disagree: it depends on your goals.\r\n\r\nIf there is an interpreter or JIT and your goal is to just speed up the app (e.g. on startup, which is the most frequent case) without making tons of changes, profiled AOT is the best way to do this. Yes, there is a chance it would miss some methods, but so what? It\u0027s still a fully working app, just starts (or does what it\u0027s supposed to do) 1% slower. And in most of cases it doesn\u0027t really matter. + JIT means you may use things like Dynamic Method to speed up certain things in runtime.\r\n\r\nAnd if there is no interpreter and no JIT, full AOT is the only option that remains. But it\u0027s also the most painful one - especially for a larger app. And all because C# was never meant to be a statically compiled language. I\u0027d also say that we need universal shared generics here, otherwise it\u0027s very hard to guarantee the app won\u0027t fail by attempting to access a generic (e.g. via reflection) that wasn\u0027t statically compiled.\r\n\r\nI\u0027d say that I\u0027d rather prefer to have a fully working Mono-based profiled AOT on Android vs NativeAOT:\r\n- If we\u0027d get sub-0.4s app startup time with Mono AOT, I probably won\u0027t bother to optimize it further\r\n- As for NativeAOT, it requires a decent amount of changes - probably a month of work or more. And it\u0027s all about different sacrifices + a lot of codegen via Roslyn code generators.",
                                           "updatedAt":  "2024-08-24T06:47:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6KZ-2H",
                                           "createdAt":  "2024-08-30T17:55:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "agocke",
                                           "body":  "I have no idea about any of the Mono stuff here, but let me just comment on the overall architectural picture:\r\n\r\nIf you are using generics and generic specialization, you are not _improving performance_, you are making a _performance tradeoff_. This is true for all programming language implementations. There is no way to share code with a different calling convention without introducing some performance cost. .NET users have been incorrectly obsessing over microbenchmarks for years to eek out a win  in a single function call and neglected the tradeoffs in this space. Generic specialization of value types offers the highest possible throughput for those code paths, at the expense of generating more code.\r\n\r\nFor JIT runtimes this means more time JITing, more memory used for JITed code, and potentially more icache misses due to lower code density. \r\n\r\nFor AOT runtimes this means vastly more generated code, larger binary sizes, longer compile times, and potentially more icache misses. The code size penalty is even larger for AOT because it can\u0027t use runtime conditions to predict whether or not a specialization is actually used at runtime, and therefore it must generate all potential ones. This is particularly bad for generic virtual methods or generic interface methods, where both the implementation and substitution are unknown and the size of the generated code grows quadratically. It\u0027s not impossible for an AOT app using GVMs to have the GVM specialization code be a substantial portion of the _entire_ app.\r\n\r\nWhen using AOT with generics you need to strongly consider whether it\u0027s better to simply allocate a class or boxed interface rather than using specialization. You may gain a few microseconds due to specialized code, but lose on all other metrics.\r\n\r\n\u003e Native AOT w/o universal shared generics also doesn\u0027t look promising - unless you guys add some tooling allowing to e.g. programmatically enumerate possible generic parameters for certain types \u0026 methods right during the link stage.\r\n\r\nSeparately, this should only ever happen if you\u0027re using reflection, like `MakeGenericType`. If your application crashes due to missing generic code and Native AOT isn\u0027t giving you a warning about potential failures, then there is a bug in Native AOT.\r\n\r\nIf it is giving you a warning and your code is failing, you need to fix your code. AOT has some fundamental incompatibilities with reflection. Some of them are hard incompatibilities, like `Assembly.Load` being impossible, but others come with unacceptable performance tradeoffs. Universal shared generics also produce unfixable performance problems in other applications: https://github.com/dotnet/runtime/issues/71210.\r\n\r\nWe may still implement USG for Native AOT in the future, but it will come with a different set of tradeoffs and be unusable by a different set of customers.\r\n",
                                           "updatedAt":  "2024-08-30T17:56:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6KiT02",
                                           "createdAt":  "2024-09-02T09:23:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "@agocke ,\r\n\r\n1. We understand the tradeoffs for generic methods parameterized w/ ValueTypes. Nevertheless, we deliberately choose to use them - in particular, based on micro- and other kinds of benchmarks, such as live profiling. \r\n\r\n2. When you state things like \"you are not improving performance, you are making a performance tradeoff\"... Well, I instantly fall into \"let me give you a demagogy masterclass\" mood (or an eye-opener?). How about a way more generic statement: EVERY DECISION YOU MAKE IMPLIES TRADEOFFS. Long story short, it doesn\u0027t help when you state something obvious as a response to some angry person\u0027s comment.\r\n\r\n3. Maybe it worth reiterating that: no one writes a code for AOT on .NET. No one. We painfully modify the code to work with AOT solely because it\u0027s implemented in such a way that it breaks almost everything. Wanna check how bad it is? Well, `dotnet run` doesn\u0027t even try to fully emulate AOT behavior. It\u0027s super easy to produce an AOT project that fails after `dotnet publish`, but runs smoothly with `dotnet run`. \r\n\r\nAnd I don\u0027t get why you guys find this acceptable. IMHO it\u0027s deeply wrong to break a bunch of features instead of making them work in some way, even if it\u0027s much slower. You can explain the slowness - and moreover, *we can address the slowness*, because typically all we need here is to profile \u0026 optimize the hot path. But when you break literally everything, we have to change each and every broken thing. E.g. I would be fine with either universal generics or interpreter - whatever, just don\u0027t JIT it. Based on what we see w/ interpreter on iOS, this would still allow us to shave off 50% of startup time. But somehow JIT + broken AOT is all we have, and you\u0027re trying to convince us it\u0027s fine.\r\n\r\nMoreover, AOT breaks specifically what helps JITted apps to run faster. And you can\u0027t know what\u0027s broken unless you run it. \r\n\r\n4. And finally... \"Why do you see the speck that is in your brother\u0027s eye, but don\u0027t consider the beam that is in your own eye?\"\r\n- https://learn.microsoft.com/en-us/dotnet/api/system.runtime.compilerservices.asynctaskmethodbuilder.start?view=net-8.0\r\n- https://learn.microsoft.com/en-us/dotnet/api/system.collections.concurrent.concurrentdictionary-2.getoradd?view=net-8.0#system-collections-concurrent-concurrentdictionary-2-getoradd-1(-0-system-func((-0-0-1))-0)\r\n\r\nAm I the author of any of these methods? Am I the one who concluded it makes sense to call `AsyncTaskMethodBuilder.Start\u003cTStateMachine\u003e(ref TStateMachine)` per every single async method call?\r\n\r\nAnd if Microsoft can\u0027t author AOT-friendly code, why it expects others can easily jump through all the hoops to author it? Doesn\u0027t this indicate that whoever makes the decisions on how AOT is supposed to work made a bunch of wrong calls in this specific case (i.e. generic handling?)\r\n\r\nLong story short, I don\u0027t see why it makes sense to look for excuses here, when the first step in solving a problem is at least recognizing it.",
                                           "updatedAt":  "2024-09-03T03:15:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Kicyn",
                                           "createdAt":  "2024-09-02T09:39:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD1hkIw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "viktor-zuiev",
                                                                               "createdAt":  "2024-09-05T09:15:56Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "NicolasKlaas",
                                                                               "createdAt":  "2024-10-10T05:24:11Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "\u003e Separately, this should only ever happen if you\u0027re using reflection...\r\n\r\nI don\u0027t understand why banning devs from using what\u0027s quite convenient is viewed as an acceptable trade-off here.\r\n\r\nThe way I would  approach this is: if reflection is a mistake, we should try removing it from .NET. And if it\u0027s a genuinely useful thing (that\u0027s what 90+% of developers will tell you), we should stop pretending it\u0027s ok to break it in AOT builds only.",
                                           "updatedAt":  "2024-09-02T17:01:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Kif5B",
                                           "createdAt":  "2024-09-02T09:45:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD1hkFA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "beeradmoore",
                                                                               "createdAt":  "2024-09-04T05:43:15Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "NicolasKlaas",
                                                                               "createdAt":  "2024-10-10T05:24:05Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "P.S. The conversation is getting a bit heated... Can we try to refocus it on how to solve this specific issue / why it\u0027s complex? I\u0027d love to know why these specific constraints exist, and what specifically prevents Microsoft from making them much less restrictive.\r\n\r\nThis comment also worth reading: https://github.com/dotnet/runtime/issues/106748#issuecomment-2325985567 and a few more following it. A brief summary: **if this fix is complex, and it\u0027s needed only for Android, how it\u0027s possible that the very same Mono AOT generates the code for all generic instances for iOS?**",
                                           "updatedAt":  "2024-09-04T01:28:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6OcnTx",
                                           "createdAt":  "2024-10-02T22:55:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "Hi, are there any updates on that?",
                                           "updatedAt":  "2024-10-02T22:55:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6OneKI",
                                           "createdAt":  "2024-10-04T03:12:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD1qFXw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "charlesroddie",
                                                                               "createdAt":  "2024-10-10T20:48:36Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "alberk8",
                                           "body":  "\u003e P.S. The conversation is getting a bit heated... Can we try to refocus it on how to solve this specific issue / why it\u0027s complex? I\u0027d love to know why these specific constraints exist, and what specifically prevents Microsoft from making them much less restrictive.\r\n\u003e \r\n\u003e This comment also worth reading: [#106748 (comment)](https://github.com/dotnet/runtime/issues/106748#issuecomment-2325985567) and a few more following it. A brief summary: **if this fix is complex, and it\u0027s needed only for Android, how it\u0027s possible that the very same Mono AOT generates the code for all generic instances for iOS?**\r\n\r\nTo be brutally honest, this will only quick change if and when Google ban VM from running on it\u0027s platform.  Just look at Apple, you either comply or take your game elsewhere. ",
                                           "updatedAt":  "2024-10-04T03:12:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6PRu5z",
                                           "createdAt":  "2024-10-10T02:24:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "\u003e To be brutally honest, this will only quick change if and when Google ban VM from running on it\u0027s platform. Just look at Apple, you either comply or take your game elsewhere.\n\nWell, if they\u0027d be out of any choice - of course.\n\nI don\u0027t see why banning runtime codegen makes sense though (e.g. for Apple). And if I\u0027d be working on JIT for Android / similar platforms, I\u0027d certainly implement it as JIT w/ file system cache. Maybe I miss something, but it seems obviously faster to link previously compiled method code vs generating it each and every time.",
                                           "updatedAt":  "2024-10-10T02:25:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Ph2N6",
                                           "createdAt":  "2024-10-11T19:33:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD24tjw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "alexyakunin",
                                                                               "createdAt":  "2024-10-18T01:56:18Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "winkmichael",
                                           "body":  "Any update Microsoft, this is a rather big issue, apps take many many seconds to load on Android.",
                                           "updatedAt":  "2024-10-11T19:33:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6PqhHI",
                                           "createdAt":  "2024-10-14T07:34:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "For MS folks: I\u0027ll be bumping up this topic on Reddit until we get a meaningful fix - for the sake of clarity, the bug was reported in April, so any patience has its limits.\n\nAnd this topic is an amazing example of how to turn one of your advocates into, well, at least someone who\u0027s mad at you. How it\u0027s possible to make every single step wrong?\n- No any assessment / confirmation of how severe is the issue\n- Absolutely vague answers on when / whether it\u0027s going to be addressed\n- No single person from MS here took the responsibility\n- Plain ignorance of some reasonable questions (e.g. why it doesn\u0027t work on Android, if it works on iOS?)\n- Etc.",
                                           "updatedAt":  "2024-10-14T07:39:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6QbMO0",
                                           "createdAt":  "2024-10-18T18:47:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "A few updates - after some investigations today:\n- iOS uses `-O=gsharedvt` + a few other options to generate [shared generics](https://www.mono-project.com/docs/advanced/runtime/docs/gsharedvt/)\n- Android targets don\u0027t use any of these options.\n\nMy attempt to use `-O=gsharedvt` for Android in our project didn\u0027t improve the startup time - on contrary, it made it worse.\n\nBeside that, I noticed that `AndroidAotMode` argument in `GetAotAssemblies` and `Mode` argument in `MonoAOTCompiler` task accept different values - e.g. the later one can accept `FullInterp`, but the first one accepts only `Normal` and `Hybrid`. In other words, it seems impossible to enable interpreter w/ AOT on Android, even though technically it seems it should be possible (and it works on iOS).",
                                           "updatedAt":  "2024-10-18T18:48:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6R-2EF",
                                           "createdAt":  "2024-10-31T07:06:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "Okey, MS folks, you won. \n- We concluded that MAUI+Blazor is the root cause of a decent number of issues related to app performance\n- So we\u0027ll eventually migrate our whole UI (that\u0027s 500+ Blazor components) to TypeScript. Hopefully, we\u0027ll find a way to do this in 90% automated fashion.\n\nAs you might guess, such a pleasant experience worth sharing.",
                                           "updatedAt":  "2024-11-01T02:28:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6R-32O",
                                           "createdAt":  "2024-10-31T07:13:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "Oh, and FYI, .NET 9 RC2 build for Android starts even slower than .NET 8 build. But negative correlation is still a correlation, so you can cross \"[x] Listen to your customers\" checkbox.",
                                           "updatedAt":  "2024-10-31T07:13:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6SEWEJ",
                                           "createdAt":  "2024-10-31T18:57:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD4_Q2A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "alexyakunin",
                                                                               "createdAt":  "2024-11-01T02:26:52Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "kekekeks",
                                           "body":  "@alexyakunin would you be interested in a CoreCLR/NativeAOT-based \"launcher\" for Blazor? \n\nWe have a prototype of an Android backend for Avalonia that could be repurposed to host a WebView.\n\nYou [can see the difference](https://x.com/AvaloniaUI/status/1659309754626494465) of running the same Avalonia-based app using CoreCLR+NativeAOT, ~xamarin~ maui-android mono with our custom interop and using full ~xamarin~ maui-android interop.",
                                           "updatedAt":  "2024-10-31T18:57:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6SGftK",
                                           "createdAt":  "2024-11-01T02:28:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "\u003e @alexyakunin would you be interested in a CoreCLR/NativeAOT-based \"launcher\" for Blazor?\n\nI\u0027d say this is #1 thing Microsoft should be working on now; and if it\u0027s not them, probably, it\u0027s even better (this thread is one of proofs why). I don\u0027t care if it\u0027s MAUI or not, what we need is Blazor WebView running on iOS, Android, and non-mobile OSes. So if you need some testers of any preview tech, please reach me out. We\u0027d be happy to contribute as well.\n\nAnd yeah, I saw that demo + one other (w/ Avalonia controls). Yes, we need something similar in terms of startup time.",
                                           "updatedAt":  "2024-11-01T02:34:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6SJQKP",
                                           "createdAt":  "2024-11-01T13:45:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD5cmjg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "charlesroddie",
                                                                               "createdAt":  "2024-11-01T15:30:07Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "alexis-kochetov",
                                                                               "createdAt":  "2024-11-05T06:56:39Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "jonathanpeppers",
                                           "body":  "I have an experiment here that shows how to use `BlazorWebView` without MAUI:\n* https://github.com/jonathanpeppers/spice\n\nIt has comparisons of app size and startup time with MAUI+Blazor.\n\nI did have to bring in some of the `BlazorWebView` source for it to work -- I think just minor changes, though.\n\nIf you are wanting the absolute fastest `WebView` experience, it seems like you could use a standard `dotnet new android` project with a `WebView` and not use MAUI. MAUI+Blazor is like including the entire .NET \"kitchen sink\" in your app.\n\nTo be honest, if you are looking for speed, maybe native controls are the way to go instead of web content?",
                                           "updatedAt":  "2024-11-01T13:45:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6SMtma",
                                           "createdAt":  "2024-11-02T02:24:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "\u003e If you are wanting the absolute fastest `WebView` experience, it seems like you could use a standard `dotnet new android` project with a `WebView` and not use MAUI. MAUI+Blazor is like including the entire .NET \"kitchen sink\" in your app.\n\nYou probably know this is one of the most frequent feature requests related to Blazor: \"Give us a cross-platform Blazor, but ditch MAUI!\".\n\n\u003e To be honest, if you are looking for speed, maybe native controls are the way to go instead of web content?\n\nI mentioned it many times here:\n- I am not looking for speed in general\n- I am fine with even interpreter mode on iOS, if we\u0027re talking about the raw speed\n- What I am not fine is ridiculously slow startup time on Android. It\u0027s nearly the same as browser-based WASM app startup time. And it\u0027s a consequence of a single issue this thread is about. **There is no AOT on Android, period.**\n\nNow, speaking of switching to a lower-level APIs, such as native controls:\n- It won\u0027t solve any problem unless it also implies \"switch your whole client-side code to Kotlin or Java\". And why you guys still work on C# than?\n- In our case WebView with TypeScript-based client would also fit the bill. I certainly prefer a single cross-platform client vs N platform-specific ones.",
                                           "updatedAt":  "2024-11-02T02:26:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6SOr2y",
                                           "createdAt":  "2024-11-03T07:10:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "@jonathanpeppers \n\n\u003e I have an experiment here that shows how to use BlazorWebView without MAUI: ...\n\nJust checked it out - overall, getting rid of MAUI is step in the right direction. But this specific solution won\u0027t change anything in our case - we don\u0027t use most of MAUI, and we know it doesn\u0027t add much to the startup time (okey, there is some control registration code that eats up maybe 0.1s, but it\u0027s nothing compared to the rest). \n\nAs I wrote, the problem is that AOT mostly doesn\u0027t work on MAUI (ok, Xamarin for iOS and Android), and switching to \"MAUI-less Blazor\" (which still runs on top of Xamarin/Mono AOT) won\u0027t change this. Any async method and nearly any method parameterized with value type will still require JIT.",
                                           "updatedAt":  "2024-11-03T07:16:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6SOs-B",
                                           "createdAt":  "2024-11-03T07:30:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "\u003e If you are wanting the absolute fastest WebView experience, it seems like you could use a standard dotnet new android project with a WebView and not use MAUI.\n\nThis also won\u0027t change anything.\n\n@jonathanpeppers could you please read what\u0027s the root cause here? Not sure how you guys make decisions on priority, but the fact you suggest such \"solutions\" tells me you misunderstand the root cause. A quick summary:\n- We noticed no matter what you do, **Mono AOT doesn\u0027t produce AOT code for generic methods parameterized with value types declared outside of System.Runtime** (AFAIK there are more constraints - I don\u0027t know all of them, but that\u0027s ~ the key one)\n- In particular, this means that any async method requires JIT - due to `AsyncTaskMethodBuilder.Start\u003cTStateMachine\u003e()` where `TStateMachine` is struct in Release builds\n- Use of nearly any generic struct (`ValueTask\u003cT\u003e`, most of struct-based enumerators, or `Result\u003cT\u003e` in our case) leads to the same issue\n- Fast serializers, such as MemoryPack and MessagePack, call ~ `Register\u003cT\u003e` for any type they support, including structs. As you might guess, all these calls require JIT. And I assume Avalonia\u0027s property registration code falls into the same category.\n\nThink of structs like `Nullable\u003cUnit\u003e`, `Nullable\u003cVector2\u003e`, or `ValueTuple\u003cint, MyClass\u003e`:\n- All of them use types declared outside of `System.Runtime`, so generic methods parameterized w/ them will require JIT\n- As you might guess, serializers like `MemoryPack` will call `Register\u003cT\u003e` for these types, if they\u0027re used in any other serializable type.\n\nOverall, we see that in our case this triggers thousands of \"AOT not found\" in Mono debug log. I\u0027ll add a few screenshots showing how bad it is tomorrow.",
                                           "updatedAt":  "2024-11-03T07:50:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6SOwUd",
                                           "createdAt":  "2024-11-03T09:25:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "Okey, here are the screenshots - and you can easily reproduce all of that:\n1. Download Actual Chat: https://play.google.com/store/apps/details?id=chat.actual.app\n2. `adb shell setprop debug.mono.log default,assembly,mono_log_level=debug,mono_log_mask=all`\n3. `adb logcat -s \"actual.chat\" -s \"Mono\" \u003e C:\\Temp\\_logcat.log`\n4. Start it on your device.\n\nHere is what you\u0027ll see in the log right after the app renders (i.e. first 2-3 seconds):\n\n15K \"AOT NOT FOUND\" entries:\n![Image](https://github.com/user-attachments/assets/bfb937cd-0c72-4a58-96a6-953a42ac585f)\n\nIt\u0027s easy to notice all these methods are generics; some are likely just full AOT \"misses\", but e.g. `HostKind` a struct, and if I scroll further, there will be quite broad categories like:\n\n1. Serializer registration\n![Image](https://github.com/user-attachments/assets/b07120b9-e75c-4182-99f1-19d1c124a8f2)\n\n2. Async methods and `(Concurrent)Dictionary\u003cSymbol / other custom struct, ...\u003e`:\n![Image](https://github.com/user-attachments/assets/c5b6e8a1-e22d-444d-9cb2-1e0d1b3f9913)\n![Image](https://github.com/user-attachments/assets/cdf54fe7-b812-46c6-8219-128e0dadd148)\n\n3. The further we go, the more async methods are there:\n![Image](https://github.com/user-attachments/assets/aa1d05a8-1e69-4473-af44-8e9a1fead5ae)\n\n4. There is also a fancy stuff like this:\n![Image](https://github.com/user-attachments/assets/e7352ae9-0cda-452c-9bd6-4b3d70d748d1)\n\nI.e. think about this: `Language` is a custom struct, and JIT is used to generate `GenericEqualityComparer\u003cNullable\u003cLanguage\u003e\u003e.ctor` here, + `EqualityComparer\u003cNullable\u003cLanguage\u003e\u003e.CreateComparer()` - in other words, **any custom struct will trigger JIT in 10+ methods no matter what** just due to use of equality comparer for it and its \"wrappers\" (such as `Nullable\u003cT\u003e`).\n\n5. Any async method requires JIT for a bunch of methods, actually:\n![Image](https://github.com/user-attachments/assets/c16351b8-98d0-47ab-84c5-b8b52ee2349a)\n\nOverall, ~30% of methods in this log contain `AsyncTaskMethodBuilder` in their full name:\n![Image](https://github.com/user-attachments/assets/0fb0dee2-bcef-4109-b0fa-58bb74003bb8)\n\nAnd that\u0027s an impact of one of widely used generic structs in our case:\n![Image](https://github.com/user-attachments/assets/0540c8f4-f621-4073-a973-f73231474853)\n\n--\n\nFinally, it worth showing that AOT was actually used:\n![Image](https://github.com/user-attachments/assets/58d44597-5428-4e3b-8180-452e6f5dfb21)\n\n**The only problem is that it processed ~8K methods, and couldn\u0027t generate AOT code for another 15K.**\n\nThat\u0027s why I am repeating here that AOT on .NET for Android is a fiction, and only brave guys from Microsoft somehow call it a feature.",
                                           "updatedAt":  "2024-11-03T09:34:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6SU8qf",
                                           "createdAt":  "2024-11-04T15:08:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jonathanpeppers",
                                           "body":  "@alexyakunin to be clear, just because you see an `AOT NOT FOUND` message, that doesn\u0027t mean it\u0027s a noticeable slowdown.\n\nYou can get a JIT timing report from Mono:\n\n* https://github.com/dotnet/android/blob/main/Documentation/guides/profiling.md#profiling-the-jit-compiler\n\nThen we have a `jit-times` tool in dotnet/android that can parse this data into a table. If you can get one of those for your app, can you share it here?\n\n\u003e @jonathanpeppers could you please read what\u0027s the root cause here? Not sure how you guys make decisions on priority, but the fact you suggest such \"solutions\" tells me you misunderstand the root cause. A quick summary:\n\nI don\u0027t work on the Mono runtime, so I can\u0027t comment on their priorities. I am a C/C++ n00b at best, so I doubt I would be able to make a meaningful contribution to this issue. I was just trying my best to give you some options, thanks.",
                                           "updatedAt":  "2024-11-04T15:08:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6SV3Jt",
                                           "createdAt":  "2024-11-04T16:45:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "@jonathanpeppers I\u0027ll try to get the timings as you suggested ASAP.",
                                           "updatedAt":  "2024-11-04T16:45:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6SY_nJ",
                                           "createdAt":  "2024-11-05T01:20:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "Here is the output: [jit-time-output.txt](https://github.com/user-attachments/files/17625596/out.txt)\n\nThe head:\n```txt\nTotal (ms) |  Self (ms) | Method\n     41.81 |      41.81 | System.Runtime.CompilerServices.AsyncMethodBuilderCore:Start\u003cMicrosoft.Maui.Dispatching.DispatcherExtensions/\u003c\u003ec__DisplayClass2_0`1/\u003c\u003cDispatchAsync\u003eb__0\u003ed\u003cActualChat.Language\u003e\u003e (Microsoft.Maui.Dispatching.DispatcherExtensions/\u003c\u003ec__DisplayClass2_0`1/\u003c\u003cDispatchAsync\u003eb__0\u003ed\u003cActualChat.Language\u003e\u0026)\n     24.22 |      24.22 | System.Collections.Frozen.FrozenDictionary:CreateFromDictionary\u003cActualChat.Users.ListeningMode, ActualChat.Users.ListeningModeInfo\u003e (System.Collections.Generic.Dictionary`2\u003cActualChat.Users.ListeningMode, ActualChat.Users.ListeningModeInfo\u003e)\n     19.48 |      19.48 | System.Runtime.CompilerServices.DefaultInterpolatedStringHandler:AppendFormatted\u003cdouble\u003e (double,string)\n     17.14 |      17.11 | ActualLab.Fusion.ComputedExt/\u003cChanges\u003ed__27`1\u003cActualLab.Api.ApiArray`1\u003cActualChat.UI.Blazor.App.Services.ActiveChat\u003e\u003e:MoveNext ()\n     17.59 |      16.29 | System.Number:NumberToStringFormat\u003cchar\u003e (System.Collections.Generic.ValueListBuilder`1\u003cchar\u003e\u0026,System.Number/NumberBuffer\u0026,System.ReadOnlySpan`1\u003cchar\u003e,System.Globalization.NumberFormatInfo)\n     14.79 |      14.79 | System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1\u003cSystem.ValueTuple`2\u003cActualLab.Result`1\u003cActualChat.Users.AccountFull\u003e, ActualLab.Fusion.Client.Internal.RpcOutboundComputeCall`1\u003cActualChat.Users.AccountFull\u003e\u003e\u003e:AwaitUnsafeOnCompleted\u003cSystem.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/ConfiguredTaskAwaiter\u003cActualChat.Users.AccountFull\u003e\u003e (System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/ConfiguredTaskAwaiter\u003cActualChat.Users.AccountFull\u003e\u0026,System.Runtime.CompilerServices.IAsyncStateMachineBox)\n     14.69 |      14.69 | ActualLab.Fusion.StateBoundComputed`1\u003cbool\u003e:.ctor (ActualLab.Fusion.ComputedOptions,ActualLab.Fusion.State`1\u003cbool\u003e)\n     14.22 |      14.22 | System.Collections.Concurrent.ConcurrentDictionary`2\u003clong, ActualLab.Rpc.Infrastructure.RpcOutboundCall\u003e:GetValues ()\n     13.17 |      13.17 | ActualLab.Fusion.Interception.ComputeMethodFunction`1/\u003cCompute\u003ed__8\u003cSystem.ValueTuple`2\u003cActualChat.ChatId, bool\u003e\u003e:MoveNext ()\n     11.91 |      11.91 | Microsoft.AspNetCore.Components.WebView.Maui.MauiDispatcher:InvokeAsync\u003cActualChat.LocalUrl\u003e (System.Func`1\u003cSystem.Threading.Tasks.Task`1\u003cActualChat.LocalUrl\u003e\u003e)\n     11.68 |      11.68 | System.Runtime.CompilerServices.AsyncTaskMethodBuilder:AwaitUnsafeOnCompleted\u003cSystem.Runtime.CompilerServices.ConfiguredTaskAwaitable/ConfiguredTaskAwaiter, ActualChat.Kvas.SyncedState`1/\u003cReadCycle\u003ed__35\u003cActualChat.Users.UserOnboardingSettings\u003e\u003e (System.Runtime.CompilerServices.ConfiguredTaskAwaitable/ConfiguredTaskAwaiter\u0026,ActualChat.Kvas.SyncedState`1/\u003cReadCycle\u003ed__35\u003cActualChat.Users.UserOnboardingSettings\u003e\u0026)\n     10.86 |      10.74 | System.Net.Sockets.SocketAsyncEventArgs:StartOperationCommon (System.Net.Sockets.Socket,System.Net.Sockets.SocketAsyncOperation)\n     10.46 |      10.46 | System.Collections.Concurrent.ConcurrentDictionary`2\u003cSystem.Reflection.MethodInfo, System.Func`2\u003cActualLab.Interception.Invocation, object\u003e\u003e:GetOrAdd\u003cActualLab.Interception.Invocation\u003e (System.Reflection.MethodInfo,System.Func`3\u003cSystem.Reflection.MethodInfo, ActualLab.Interception.Invocation, System.Func`2\u003cActualLab.Interception.Invocation, object\u003e\u003e,ActualLab.Interception.Invocation)\n     10.30 |      10.30 | System.Net.Sockets.SafeSocketHandle:.ctor ()\n     12.40 |      10.12 | System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1/AsyncStateMachineBox`1\u003cActualLab.Fusion.StateBoundComputed`1\u003cActualChat.UI.Blazor.App.Services.ReadPosition\u003e, ActualLab.Fusion.State`1/\u003cGetComputed\u003ed__90\u003cActualChat.UI.Blazor.App.Services.ReadPosition\u003e\u003e:.cctor ()\n      9.70 |       9.62 | System.Linq.Enumerable:ToList\u003cActualChat.UI.Blazor.App.Services.ActiveChat\u003e (System.Collections.Generic.IEnumerable`1\u003cActualChat.UI.Blazor.App.Services.ActiveChat\u003e)\n      9.68 |       9.61 | ActualLab.Fusion.Interception.ComputeMethodFunction`1/\u003cCompute\u003ed__8\u003cSystem.ValueTuple`2\u003cSystem.Nullable`1\u003cActualChat.UI.Blazor.App.Services.RelatedChatEntry\u003e, ActualChat.Chat.ChatEntry\u003e\u003e:MoveNext ()\n      9.04 |       9.04 | System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1/AsyncStateMachineBox`1\u003cSystem.Threading.Tasks.VoidTaskResult, ActualChat.UI.Blazor.App.Services.ChatAudioUI/\u003cPushRealtimePlaybackState\u003ed__63\u003e:MoveNext (System.Threading.Thread)\n      8.81 |       8.81 | System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1\u003cSystem.Threading.Tasks.VoidTaskResult\u003e:GetStateMachineBox\u003cActualLab.Fusion.ComputedState`1/\u003cUpdateCycle\u003ed__28\u003cActualChat.Users.UserLanguageSettings\u003e\u003e (ActualLab.Fusion.ComputedState`1/\u003cUpdateCycle\u003ed__28\u003cActualChat.Users.UserLanguageSettings\u003e\u0026,System.Threading.Tasks.Task`1\u003cSystem.Threading.Tasks.VoidTaskResult\u003e\u0026)\n      8.58 |       8.58 | System.Number:FormatDouble\u003cchar\u003e (System.Collections.Generic.ValueListBuilder`1\u003cchar\u003e\u0026,double,System.ReadOnlySpan`1\u003cchar\u003e,System.Globalization.NumberFormatInfo)\n      8.84 |       8.26 | System.Collections.Immutable.ImmutableHashSet:ToImmutableHashSet\u003cActualChat.ChatId\u003e (System.Collections.Generic.IEnumerable`1\u003cActualChat.ChatId\u003e,System.Collections.Generic.IEqualityComparer`1\u003cActualChat.ChatId\u003e)\n      8.01 |       8.01 | System.Buffers.SearchValues:TryGetSingleRange\u003cchar\u003e (System.ReadOnlySpan`1\u003cchar\u003e,char\u0026,char\u0026)\n      7.41 |       7.41 | System.Net.Sockets.SocketAsyncEngine:EventLoop ()\n      8.05 |       7.35 | ActualLab.Fusion.ComputeFunctionBase`1/\u003cTryRecompute\u003ed__17\u003cint\u003e:MoveNext ()\n      7.09 |       7.09 | ActualLab.Fusion.Interception.ComputeMethodFunction`1/\u003cCompute\u003ed__8\u003cActualChat.UI.Blazor.App.Services.ChatAudioUI/RecordingBeepState\u003e:MoveNext ()\n     24.17 |       6.51 | ActualLab.Fusion.ComputeFunctionBase`1/\u003cTryRecompute\u003ed__17\u003cActualChat.UI.Blazor.App.Services.ChatAudioUI/RecordingBeepState\u003e:MoveNext ()\n      6.35 |       6.35 | System.Collections.Concurrent.ConcurrentDictionary`2\u003cSystem.ValueTuple`2\u003cSystem.Reflection.MethodInfo, System.Type\u003e, System.Func`2\u003cActualLab.Interception.MethodDef, object\u003e\u003e:TryAddInternal (System.Collections.Concurrent.ConcurrentDictionary`2/Tables\u003cSystem.ValueTuple`2\u003cSystem.Reflection.MethodInfo, System.Type\u003e, System.Func`2\u003cActualLab.Interception.MethodDef, object\u003e\u003e,System.ValueTuple`2\u003cSystem.Reflection.MethodInfo, System.Type\u003e,System.Nullable`1\u003cint\u003e,System.Func`2\u003cActualLab.Interception.MethodDef, object\u003e,bool,bool,System.Func`2\u003cActualLab.Interception.MethodDef, object\u003e\u0026)\n      5.99 |       5.99 | ActualLab.Fusion.Computed`1/\u003cUpdate\u003ed__35\u003cActualChat.ChatEntryId\u003e:MoveNext ()\n      5.87 |       5.87 | ActualLab.Api.ApiArray`1\u003cActualLab.Text.Symbol\u003e:MemoryPack.IMemoryPackable\u003cActualLab.Api.ApiArray\u003cT\u003e\u003e.Serialize\u003cMemoryPack.Internal.ReusableLinkedArrayBufferWriter\u003e (MemoryPack.MemoryPackWriter`1\u003cMemoryPack.Internal.ReusableLinkedArrayBufferWriter\u003e\u0026,ActualLab.Api.ApiArray`1\u003cActualLab.Text.Symbol\u003e\u0026)\n      5.82 |       5.82 | ActualLab.Fusion.Client.Interception.RemoteComputeMethodFunction`1/\u003cCompute\u003ed__15\u003cActualChat.Chat.ChatNews\u003e:MoveNext ()\n      7.00 |       5.81 | ActualLab.Fusion.Interception.ComputeMethodFunction`1/\u003cCompute\u003ed__8\u003cint\u003e:MoveNext ()\n      7.82 |       5.79 | ActualLab.Fusion.Interception.ComputeMethodFunction`1/\u003cCompute\u003ed__8\u003cActualChat.ChatId\u003e:MoveNext ()\n      6.89 |       5.64 | System.Text.Ascii:EqualsIgnoreCase\u003cbyte, uint16, System.Text.Ascii/WideningLoader\u003e (byte\u0026,uint16\u0026,uintptr)\n      5.29 |       5.29 | ActualLab.Fusion.Client.Interception.RemoteComputeMethodFunction`1/\u003cComputeRpc\u003ed__16\u003cActualChat.Users.Presence\u003e:MoveNext ()\n      5.25 |       5.25 | ActualLab.Fusion.ComputeFunctionBase`1/\u003cTryRecompute\u003ed__17\u003cActualChat.UI.Blazor.App.Services.ChatAudioUI/RecordingState\u003e:MoveNext ()\n      5.19 |       5.19 | ActualLab.Fusion.ComputedState`1/\u003cUpdateCycle\u003ed__28\u003cActualChat.Mathematics.Trimmed`1\u003cint\u003e\u003e:MoveNext ()\n      5.12 |       5.12 | ActualLab.Fusion.ComputedExt/\u003cChanges\u003ed__27`1\u003cActualChat.ChatEntryId\u003e:MoveNext ()\n      5.06 |       5.06 | ActualLab.Fusion.Client.Interception.RemoteComputeMethodFunction`1/\u003cApplyRpcUpdate\u003ed__18\u003cActualLab.Mathematics.Range`1\u003clong\u003e\u003e:MoveNext ()\n      7.58 |       5.00 | System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1\u003cActualChat.Users.UserAppSettings\u003e:AwaitUnsafeOnCompleted\u003cSystem.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1/ConfiguredValueTaskAwaiter\u003cActualLab.Option`1\u003cActualChat.Users.UserAppSettings\u003e\u003e\u003e (System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1/ConfiguredValueTaskAwaiter\u003cActualLab.Option`1\u003cActualChat.Users.UserAppSettings\u003e\u003e\u0026,System.Runtime.CompilerServices.IAsyncStateMachineBox)\n      4.89 |       4.89 | ActualLab.Fusion.ComputeFunctionBase`1/\u003cTryRecompute\u003ed__17\u003cSystem.ValueTuple`2\u003cSystem.Nullable`1\u003cActualChat.UI.Blazor.App.Services.RelatedChatEntry\u003e, ActualChat.Chat.ChatEntry\u003e\u003e:MoveNext ()\n      4.76 |       4.76 | ActualLab.Fusion.ComputedExt/\u003cChanges\u003ed__27`1\u003cActualChat.ChatId\u003e:MoveNext ()\n      4.68 |       4.68 | ActualLab.Fusion.Client.Interception.RemoteComputeMethodFunction`1/\u003cApplyRpcUpdate\u003ed__18\u003cActualChat.Chat.ChatNews\u003e:MoveNext ()\n      4.65 |       4.65 | System.Text.Json.Serialization.Converters.ObjectWithParameterizedConstructorConverter`1\u003cActualLab.Mathematics.Range`1\u003cstring\u003e\u003e:OnTryRead (System.Text.Json.Utf8JsonReader\u0026,System.Type,System.Text.Json.JsonSerializerOptions,System.Text.Json.ReadStack\u0026,ActualLab.Mathematics.Range`1\u003cstring\u003e\u0026)\n      4.63 |       4.63 | System.Collections.Concurrent.ConcurrentDictionary`2\u003cActualLab.Rpc.Infrastructure.RpcCallTypeKey, System.Func`2\u003cActualLab.Rpc.Infrastructure.RpcOutboundContext, ActualLab.Rpc.Infrastructure.RpcOutboundCall\u003e\u003e:TryAddInternal (System.Collections.Concurrent.ConcurrentDictionary`2/Tables\u003cActualLab.Rpc.Infrastructure.RpcCallTypeKey, System.Func`2\u003cActualLab.Rpc.Infrastructure.RpcOutboundContext, ActualLab.Rpc.Infrastructure.RpcOutboundCall\u003e\u003e,ActualLab.Rpc.Infrastructure.RpcCallTypeKey,System.Nullable`1\u003cint\u003e,System.Func`2\u003cActualLab.Rpc.Infrastructure.RpcOutboundContext, ActualLab.Rpc.Infrastructure.RpcOutboundCall\u003e,bool,bool,System.Func`2\u003cActualLab.Rpc.Infrastructure.RpcOutboundContext, ActualLab.Rpc.Infrastructure.RpcOutboundCall\u003e\u0026)\n      4.45 |       4.45 | System.Collections.Concurrent.ConcurrentDictionary`2\u003cSystem.ValueTuple`2\u003cSystem.Reflection.MethodInfo, System.Type\u003e, System.Func`2\u003cActualLab.Interception.MethodDef, object\u003e\u003e:TryGetValueInternal (System.Collections.Concurrent.ConcurrentDictionary`2/Tables\u003cSystem.ValueTuple`2\u003cSystem.Reflection.MethodInfo, System.Type\u003e, System.Func`2\u003cActualLab.Interception.MethodDef, object\u003e\u003e,System.ValueTuple`2\u003cSystem.Reflection.MethodInfo, System.Type\u003e,int,System.Func`2\u003cActualLab.Interception.MethodDef, object\u003e\u0026)\n      4.31 |       4.31 | ActualLab.Fusion.Interception.ComputeMethodFunction`1\u003cActualChat.UI.Blazor.App.Services.ChatAudioUI/RecordingBeepState\u003e:Compute (ActualLab.Fusion.ComputedInput,ActualLab.Fusion.Computed`1\u003cActualChat.UI.Blazor.App.Services.ChatAudioUI/RecordingBeepState\u003e,System.Threading.CancellationToken)\n      4.23 |       4.23 | System.SpanHelpers:NonPackedIndexOfValueType\u003cint16, System.SpanHelpers/Negate`1\u003cint16\u003e\u003e (int16\u0026,int16,int)\n      4.20 |       4.20 | MemoryPack.MemoryPackFormatterProvider:IsRegistered\u003cActualLab.Rpc.RpcMethodRef\u003e ()\n      4.04 |       4.01 | (wrapper native-to-managed) Android.Runtime.JNINativeWrapper:Wrap_JniMarshal_PPLIIIIIIII_V (intptr,intptr,intptr,int,int,int,int,int,int,int,int)\n      3.97 |       3.97 | ActualChat.Kvas.StoredState`1\u003cActualChat.ChatId\u003e:CreateComputed ()\n      3.92 |       3.92 | ActualLab.Fusion.ComputedExt/\u003cChanges\u003ed__27`1\u003cActualChat.UI.Blazor.App.Services.ChatAudioUI/RecordingBeepState\u003e:MoveNext ()\n      3.87 |       3.87 | ActualLab.Fusion.Client.Interception.RemoteComputeMethodFunction`1/\u003cApplyRpcUpdate\u003ed__18\u003cActualLab.Api.ApiArray`1\u003cActualChat.PlaceId\u003e\u003e:MoveNext ()\n      3.83 |       3.83 | System.Text.Json.Serialization.Converters.ObjectWithParameterizedConstructorConverter`1\u003cActualLab.Mathematics.Range`1\u003cint\u003e\u003e:OnTryRead (System.Text.Json.Utf8JsonReader\u0026,System.Type,System.Text.Json.JsonSerializerOptions,System.Text.Json.ReadStack\u0026,ActualLab.Mathematics.Range`1\u003cint\u003e\u0026)\n      4.05 |       3.82 | ActualLab.Fusion.Client.Interception.RemoteComputeMethodFunction`1/\u003cTryRecompute\u003ed__20\u003cActualLab.Mathematics.Range`1\u003clong\u003e\u003e:MoveNext ()\n      3.78 |       3.78 | System.DateTimeFormat:FormatCustomized\u003cchar\u003e (System.DateTime,System.ReadOnlySpan`1\u003cchar\u003e,System.Globalization.DateTimeFormatInfo,System.TimeSpan,System.Collections.Generic.ValueListBuilder`1\u003cchar\u003e\u0026)\n      3.74 |       3.74 | ActualLab.Fusion.ComputeFunctionBase`1/\u003cTryRecompute\u003ed__17\u003cActualChat.Mathematics.Trimmed`1\u003cint\u003e\u003e:MoveNext ()\n      4.37 |       3.73 | System.Number:NumberToString\u003cchar\u003e (System.Collections.Generic.ValueListBuilder`1\u003cchar\u003e\u0026,System.Number/NumberBuffer\u0026,char,int,System.Globalization.NumberFormatInfo)\n      7.96 |       3.68 | ActualLab.Fusion.Client.Interception.RemoteComputeMethodFunction`1/\u003cCompute\u003ed__15\u003cActualLab.Mathematics.Range`1\u003clong\u003e\u003e:MoveNext ()\n      5.87 |       3.67 | ActualLab.Fusion.Interception.ComputeMethodFunction`1/\u003cCompute\u003ed__8\u003cActualChat.Mathematics.Trimmed`1\u003cint\u003e\u003e:MoveNext ()\n      3.67 |       3.67 | ActualLab.Fusion.Computed`1/\u003cUpdate\u003ed__35\u003cActualLab.Api.ApiArray`1\u003cActualChat.UI.Blazor.App.Services.ActiveChat\u003e\u003e:MoveNext ()\n      3.65 |       3.65 | ActualLab.Fusion.ComputeFunctionBase`1/\u003cTryRecompute\u003ed__17\u003cbool\u003e:MoveNext ()\n      3.64 |       3.64 | ActualLab.Fusion.Computed/\u003cCapture\u003ed__83`1\u003cActualChat.ChatId\u003e:MoveNext ()\n      4.20 |       3.59 | System.Collections.Immutable.ImmutableHashSet`1\u003cActualChat.ChatId\u003e:Union (System.Collections.Generic.IEnumerable`1\u003cActualChat.ChatId\u003e,System.Collections.Immutable.ImmutableHashSet`1/MutationInput\u003cActualChat.ChatId\u003e)\n      3.48 |       3.48 | ActualLab.Fusion.ComputeFunctionBase`1/\u003cTryRecompute\u003ed__17\u003cSystem.ValueTuple`2\u003cActualChat.ChatId, bool\u003e\u003e:MoveNext ()\n      3.47 |       3.46 | ActualLab.Rpc.Infrastructure.RpcOutboundCall`1\u003cActualLab.Rpc.RpcNoWait\u003e:.ctor (ActualLab.Rpc.Infrastructure.RpcOutboundContext)\n      3.45 |       3.45 | ActualLab.Fusion.Client.Interception.RemoteComputeMethodFunction`1/\u003cApplyRpcUpdate\u003ed__18\u003cActualLab.Api.ApiArray`1\u003cActualChat.ContactId\u003e\u003e:MoveNext ()\n      3.42 |       3.42 | ActualLab.Fusion.Client.Interception.RemoteComputeMethodFunction`1/\u003cComputeCachedOrRpc\u003ed__17\u003cActualLab.Api.ApiArray`1\u003cActualChat.ContactId\u003e\u003e:MoveNext ()\n      3.31 |       3.31 | System.Number:FormatPercent\u003cchar\u003e (System.Collections.Generic.ValueListBuilder`1\u003cchar\u003e\u0026,System.Number/NumberBuffer\u0026,int,System.Globalization.NumberFormatInfo)\n      3.56 |       3.30 | Pidgin.OneOfParser`2\u003cchar, char\u003e:TryParse (Pidgin.ParseState`1\u003cchar\u003e\u0026,Pidgin.PooledList`1\u003cPidgin.Expected`1\u003cchar\u003e\u003e\u0026,char\u0026)\n      3.30 |       3.30 | ActualLab.Fusion.Computed/\u003cCapture\u003ed__83`1\u003cSystem.ValueTuple`2\u003cActualChat.ChatId, bool\u003e\u003e:MoveNext ()\n      3.29 |       3.29 | ActualChat.Kvas.StoredState`1\u003cActualLab.Api.ApiArray`1\u003cActualChat.UI.Blazor.App.Services.ActiveChat\u003e\u003e:CreateComputed ()\n      3.28 |       3.28 | ActualLab.Fusion.Client.Interception.RemoteComputeMethodFunction`1/\u003cCompute\u003ed__15\u003cActualChat.Users.Presence\u003e:MoveNext ()\n      3.46 |       3.26 | ActualLab.Result`1\u003cSystem.ValueTuple`2\u003cActualChat.ChatId, bool\u003e\u003e:MemoryPack.IMemoryPackFormatterRegister.RegisterFormatter ()\n      3.82 |       3.24 | ActualLab.Fusion.Computed/\u003cCapture\u003ed__83`1\u003cActualChat.UI.Blazor.App.Services.ChatAudioUI/RecordingBeepState\u003e:MoveNext ()\n      5.25 |       3.21 | ActualLab.Fusion.Client.Interception.RemoteComputeMethodFunction`1/\u003cCompute\u003ed__15\u003cActualLab.Api.ApiArray`1\u003cActualChat.ContactId\u003e\u003e:MoveNext ()\n      3.19 |       3.19 | ActualLab.Fusion.Computed`1/\u003cUse\u003ed__37\u003cActualLab.Api.ApiArray`1\u003cActualChat.UI.Blazor.App.Services.ActiveChat\u003e\u003e:MoveNext ()\n      3.16 |       3.16 | System.Collections.Generic.HashSet`1\u003cActualChat.UI.Blazor.App.Services.ActiveChat\u003e:.ctor (System.Collections.Generic.IEqualityComparer`1\u003cActualChat.UI.Blazor.App.Services.ActiveChat\u003e)\n      4.61 |       3.13 | ActualLab.Fusion.Client.Interception.RemoteComputeMethodFunction`1/\u003cComputeCachedOrRpc\u003ed__17\u003cActualLab.Mathematics.Range`1\u003clong\u003e\u003e:MoveNext ()\n      3.09 |       3.09 | System.Number:FormatDouble\u003cbyte\u003e (System.Collections.Generic.ValueListBuilder`1\u003cbyte\u003e\u0026,double,System.ReadOnlySpan`1\u003cchar\u003e,System.Globalization.NumberFormatInfo)\n      3.09 |       3.09 | System.Number:NumberToString\u003cbyte\u003e (System.Collections.Generic.ValueListBuilder`1\u003cbyte\u003e\u0026,System.Number/NumberBuffer\u0026,char,int,System.Globalization.NumberFormatInfo)\n      3.13 |       3.05 | System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1/AsyncStateMachineBox`1\u003cSystem.Threading.Tasks.VoidTaskResult, ActualLab.Time.TimerSet`1/\u003cOnRun\u003ed__25\u003cobject\u003e\u003e:MoveNext (System.Threading.Thread)\n      3.08 |       3.05 | System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1\u003clong\u003e:ConfigureIgnoreCondition (System.Nullable`1\u003cSystem.Text.Json.Serialization.JsonIgnoreCondition\u003e)\n...\n```\n\nAnd the tail:\n```\n      0.88 |     -41.28 | Microsoft.Maui.Dispatching.DispatcherExtensions/\u003c\u003ec__DisplayClass2_0`1/\u003c\u003cDispatchAsync\u003eb__0\u003ed\u003cActualChat.Language\u003e:MoveNext ()\nSum of self time (ms): 1410.85\n```\n",
                                           "updatedAt":  "2024-11-05T01:20:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6SZBA9",
                                           "createdAt":  "2024-11-05T01:26:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "@jonathanpeppers this aligns quite well with our own measurements shown e.g. [here](https://github.com/dotnet/runtime/issues/101135#issuecomment-2087766395) - the total startup time (that\u0027s our internal metric which measures it till a certain point in rendering) was 2.1s during this specific recording - it\u0027s slightly higher usual, but 1.4/2.1 ~= 66%, which is quite close to our own estimate.\n\nAnd [here](https://github.com/dotnet/runtime/issues/101135#issuecomment-2138409802) I even explicitly tagged you and wrote that 75% of our startup time is spent on JIT, no matter whether it\u0027s full or profiled AOT.\n\nAll of that data was shared in April-May. And no one moved a finger.",
                                           "updatedAt":  "2024-11-05T01:28:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6SZDBX",
                                           "createdAt":  "2024-11-05T01:31:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "As for `System.Net.Sockets.SafeSocketHandle:.ctor`, I guess it\u0027s here due to a workaround for https://github.com/dotnet/runtime/issues/104599 ",
                                           "updatedAt":  "2024-11-05T01:31:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6SZGc_",
                                           "createdAt":  "2024-11-05T01:46:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "Two more runs - just wanted to check how consistent this is. \n\nThe total is ~ the same, but top methods are mostly different.\n- [out2.txt](https://github.com/user-attachments/files/17625787/out2.txt)\n- [out3.txt](https://github.com/user-attachments/files/17625790/out3.txt)\n\nOh, and I noticed there is negative \"self-time\" closer to the end in all these files.\n\nBased on ChatGPT analysis of out3.txt, `The sum of negative numbers in the \"Self (ms)\" column is −400.23 milliseconds.`\n",
                                           "updatedAt":  "2024-11-05T01:50:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6SZpty",
                                           "createdAt":  "2024-11-05T04:16:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "Okey... `jit-times` doesn\u0027t properly calculate JIT time, @jonathanpeppers \n\nI created [pull request](https://github.com/dotnet/android/pull/9484) addressing some of issues I spotted, but overall, I am not sure if we can even trust `jit-times` output - the tool seems to assume methods.txt is produced by a single-threaded app, so there are tons of warnings.\n\nI\u0027m attaching new outputs here:\n- [out1.txt](https://github.com/user-attachments/files/17626864/out1.txt)\n- [out2.txt](https://github.com/user-attachments/files/17626863/out2.txt)\n- [out3.txt](https://github.com/user-attachments/files/17626861/out3.txt)\n- [example-warnings.txt](https://github.com/user-attachments/files/17626862/warnings.txt)\n\nAnd that\u0027s what you\u0027ll find in the end now: `Sum of self time (ms): 3735.00` - and now it\u0027s quite close to the time shown [on this screenshot](https://github.com/dotnet/runtime/issues/101135#issuecomment-2087766395) in terms of absolute value.",
                                           "updatedAt":  "2024-11-05T04:58:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6SZq__",
                                           "createdAt":  "2024-11-05T04:22:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "Just in case, the original `methods*.txt`:\n- [methods1.txt](https://github.com/user-attachments/files/17626928/methods1.txt)\n- [methods2.txt](https://github.com/user-attachments/files/17626927/methods2.txt)\n- [methods3.txt](https://github.com/user-attachments/files/17626929/methods3.txt)\n",
                                           "updatedAt":  "2024-11-05T04:22:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6SZ4LY",
                                           "createdAt":  "2024-11-05T05:18:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "Hmm, just found a whole category of methods which aren\u0027t generic ones:\n![Image](https://github.com/user-attachments/assets/97ceb806-effb-46d8-8c7a-cc5fabebfdef)\n\n@jonathanpeppers do you know why such methods aren\u0027t AOT-compiled in full AOT mode? Or does it mean _any_ method appears in methods.txt, i.e. AOT compiled methods also appear there, but processing time is tiny for them? Based on the # of lines (~60K) it feels like it\u0027s the second case, i.e. every method is listed there: previously I wrote that Mono debug log shows 16K \"AOT NOT FOUND\" + 8K \"AOT FOUND\" entries, i.e. 24K in total, and here it\u0027s 30K, i.e. even more somehow.\n\nIf that\u0027s true, it makes sense to filter out all sub-0.01ms methods (looks like these are AOT compiled methods) + likely, all wrappers.",
                                           "updatedAt":  "2024-11-05T17:05:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6TthFN",
                                           "createdAt":  "2024-11-15T08:06:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD7A-Kw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "charlesroddie",
                                                                               "createdAt":  "2024-11-15T09:21:10Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "Okey, so .NET 9 is released (I hope that explains why no one could help earlier), any chance someone looks at this now?",
                                           "updatedAt":  "2024-11-15T08:06:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6TuiXO",
                                           "createdAt":  "2024-11-15T09:58:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vyacheslav-volkov",
                                           "body":  "It seems to me that there has been little to no noticeable progress between .NET 8 and .NET 9 for Android. While I haven’t conducted precise benchmarks yet, it subjectively feels like .NET 9 might even have a slower startup time compared to .NET 8\n\nThis issue has been open for more than six months, yet we still haven’t received a clear explanation of why it’s impossible to resolve or what specific challenges are blocking progress.\n\n@jkotas Could you please involve someone from the mono-runtime team who could provide clarification and address the community\u0027s concerns?",
                                           "updatedAt":  "2024-11-15T10:00:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6TyRuo",
                                           "createdAt":  "2024-11-15T16:55:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD7Jk0A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "vyacheslav-volkov",
                                                                               "createdAt":  "2024-11-15T16:57:23Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "alexis-kochetov",
                                                                               "createdAt":  "2024-11-15T18:31:28Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "alexyakunin",
                                                                               "createdAt":  "2024-11-16T06:36:44Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "jkotas",
                                           "body":  "cc @steveisok @vitek-karas\n\nMono AOT compiler has number of limitations as you have found. I doubt that there is a simple quick way to address them in the existing releases. I am sorry. We have been discussing these topics among ourselves and how to address the issues like the one you have reported going forward. We will share our goals for .NET 10 once we have firm plans in place like we have done for past releases (likely after the New Year for this area).",
                                           "updatedAt":  "2024-11-15T16:55:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6T0-xp",
                                           "createdAt":  "2024-11-15T23:40:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "\u003e It subjectively feels like .NET 9 might even have a slower startup time compared to .NET 8\n\n5-10% slower on Android in our case.\n",
                                           "updatedAt":  "2024-11-15T23:40:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6UYOob",
                                           "createdAt":  "2024-11-20T19:25:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "@jkotas can you or someone who understands the limitations at least explain why it can\u0027t be fixed on Android, while the same scenario works on iOS (no JIT + no interpreter), and it\u0027s the same mono AOT compiler?\n\nI am asking this because your response tells that MS already knows what\u0027s the root cause. So explaining it would be great in terms of at least restoring the trust.",
                                           "updatedAt":  "2024-11-20T19:28:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6UYqOp",
                                           "createdAt":  "2024-11-20T20:33:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD-J7tA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "beeradmoore",
                                                                               "createdAt":  "2024-11-20T21:42:05Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "alexis-kochetov",
                                                                               "createdAt":  "2024-11-21T05:22:59Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "OvrBtn",
                                                                               "createdAt":  "2024-11-21T11:29:21Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "vyacheslav-volkov",
                                                                               "createdAt":  "2024-11-22T08:19:09Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ram16g",
                                                                               "createdAt":  "2024-12-09T09:07:38Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "jkotas",
                                           "body":  "There are multiple problems. I do not think we have a complete list. One of them: Java interop uses [Reflection.Emit](https://github.com/dotnet/android/blob/8bb3c8ec0ae832e0dbe5dbc0bb5d357916ba8de5/src/Mono.Android/Android.Runtime/JNINativeWrapper.cs#L29-L105). If you configure the runtime to have no JIT and no interpreter, Reflection.Emit is going to be break and Java interop too.\n\n\u003e why it can\u0027t be fixed on Android\n\nNit: I have said that there is no simple quick way to fix it. It is all fixable in principle. For example, Java interop mentioned above can be refactored to avoid Reflection.Emit dependency and, in fact, we are looking into that.",
                                           "updatedAt":  "2024-11-20T20:48:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6UlUZO",
                                           "createdAt":  "2024-11-22T03:35:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "\u003e One of them: Java interop uses Reflection.Emit\n\nBut that\u0027s fine in this specific case:\n\n1. I don\u0027t think there was an ask to have neither JIT nor interpreter - one of asks was to enable AOT + interpreter (as a way to possibly alleviate / workaround the root cause here, i.e. missing AOT code that triggers JIT), but e.g. I don\u0027t see why it even makes sense to disable both, and IMO Java interop is a relatively small thing in terms of cost - esp. in case with MAUI + Blazor apps, where interop is rare + you can push back whatever requires interop to some later stages of startup, etc.\n\n2. The main issue here is that a code for specific kind of generic methods currently isn\u0027t generated - in particular, any async method currently requires JIT. Nevertheless, somehow it works on iOS. And that\u0027s why I asked for some details - if it\u0027s the same Mono AOT \u0026 more or less the same logic, why the fix for Android is complex?",
                                           "updatedAt":  "2024-11-22T03:41:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6UlaR3",
                                           "createdAt":  "2024-11-22T04:06:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "And just a feedback: it feels that you assume the \"end game\" for AOT is \"just AOT, no JIT, no interpreter\". And I think even though such a goal makes sense for some (maybe even many) apps, IMO it\u0027s a very bad fit for WASM \u0026 mobile apps. Here is what we care about:\n- Startup time - and you know for sure that\u0027s crucial, coz that\u0027s ~ the only thing you measure for AOT, right?\n- App size - super important for WASM, somewhat important for mobile.\n\nAnd if you think of a perfect runtime that tackles these goals, it\u0027s simply a caching JIT:\n- Startup time must be as good as it could be - except for the very first start, where the startup code is JITted.\n- App size is as small as it can be.\n- And there are no downsides - i.e. it\u0027s literally the same .NET as on \"big OSes\".\n\nThe only problem here is iOS, where JIT isn\u0027t an option. But even in this case I\u0027d rather prefer profile-guided AOT + interpreter -- solely because of a smaller app size.\n\nAnd if we can\u0027t get all of these options, profiled AOT + interpreter is the option I\u0027d prefer 100% of time. Full AOT is nice in theory, but it is way more complex to deal with in practice:\n- It tends to produce huge binaries (just a few generics can easily \"explode\" them). And it sucks to know that maybe 75+% of code there has zero chance to run - it\u0027s there \"just because\".\n- Incompatibility w/ Reflection.Emit \u0026 other Reflection-based APIs sucks - and that\u0027s, by the way, is super annoying. E.g. we currently investigate why certain parts of our app don\u0027t work on .NET 9, even though it worked on .NET 8, and it\u0027s not even about AOT, but about trimming.\n\nOverall, I am explicitly saying here that a goal of having \"just AOT, no JIT, no interpreter\" has zero value for us. We\u0027d rather have a _working_ profiled AOT + interpreter (or JIT).",
                                           "updatedAt":  "2024-11-22T04:10:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Ulh_L",
                                           "createdAt":  "2024-11-22T04:46:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e I don\u0027t think there was an ask to have neither JIT nor interpreter\n\nYou have asked why the config used on iOS (no JIT + no interpreter) does not just work on Android that is the question that I was answering.\n\n\u003e if it\u0027s the same Mono AOT \u0026 more or less the same logic, why the fix for Android is complex?\n\nMono AOT compiler and runtime have a lot of hardcoded policies. If you enable the interpreter or if the runtime has JIT, it changes how the AOT compiler and runtime work. Look for all places that call methods like `mono_aot_mode_is_interp`, `mono_aot_mode_is_full` or check the various `MONO_AOT_MODE` enum values. It is several hundred places where these policies are hardcoded and they have complicated interplay with each other.",
                                           "updatedAt":  "2024-11-22T04:47:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6U8f7u",
                                           "createdAt":  "2024-11-25T19:43:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "@jkotas am I right you are saying that _technically_ AOT should work the same way on Android as on iOS, but since these two targets were using different sets of AOT settings for a very long time \u0026 no one really tried certain combination of options, you don\u0027t know for sure whether certain options used on iOS (e.g. AOT for shared generics) will work with other Android-specific options (e.g. JIT, which were never used on iOS, Android-specific interop code, and so on)?",
                                           "updatedAt":  "2024-11-25T19:44:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6U8iQK",
                                           "createdAt":  "2024-11-25T19:48:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "@jkotas as for this:\n\n\u003e You have asked why the config used on iOS (no JIT + no interpreter) does not just work on Android that is the question that I was answering.\n\nI wasn\u0027t asking specifically this - I mentioned this mode as evidence that \"proves\" there is _seemingly_ no _fundamental_ gap in how AOT handles mentioned generic methods -- all because it works correctly on iOS. ",
                                           "updatedAt":  "2024-11-25T19:48:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6U8mty",
                                           "createdAt":  "2024-11-25T19:58:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e you don\u0027t know for sure whether certain options used on iOS (e.g. AOT for shared generics) will work with other Android-specific options (e.g. JIT, which were never used on iOS, Android-specific interop code, and so on)?\n\nRight. Results of the experiments shared earlier in this discussion show that it does not work. For example: https://github.com/dotnet/runtime/issues/101135#issuecomment-2063890653",
                                           "updatedAt":  "2024-11-25T19:58:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6WAPbG",
                                           "createdAt":  "2024-12-04T09:14:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "\u003e Right. Results of the experiments shared earlier in this discussion show that it does not work. For example: [#101135 (comment)](https://github.com/dotnet/runtime/issues/101135#issuecomment-2063890653)\n\n@jonathanpeppers am I right the problem with this specific example is that Android .targets don\u0027t even have an option to enable AOT + interpreter in Mono? I.e. specifying Android AOT mode = \"Full\" means it\u0027s just AOT, but no interpreter \u0026 no JIT.",
                                           "updatedAt":  "2024-12-04T09:14:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6WD_6U",
                                           "createdAt":  "2024-12-04T14:40:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOD-YF-g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "alexyakunin",
                                                                               "createdAt":  "2024-12-10T13:01:46Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jonathanpeppers",
                                           "body":  "I tried using \"full AOT\" with interpreter fallback here, just to see if it can work:\n* https://github.com/dotnet/android/pull/9486\n\nBut the AOT compiler hits an assert on Windows. It\u0027s possible this will run on macOS, as they mentioned the AOT compiler might just have some preprocessor to drop the interpreter on Windows.\n\nLet me add a macOS-only test to see how it goes.\n\nUsing \"full AOT\" with _no_ interpreter fallback fails in a different way:\n* https://github.com/dotnet/android/issues/9469",
                                           "updatedAt":  "2024-12-04T14:40:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Zc3pB",
                                           "createdAt":  "2025-01-07T06:26:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "Hi, are there any news on this issue?",
                                           "updatedAt":  "2025-01-07T06:26:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6asODA",
                                           "createdAt":  "2025-01-16T11:34:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "taublast",
                                           "body":  "Does this affect .NET 9 as well?",
                                           "updatedAt":  "2025-01-16T11:34:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6au6On",
                                           "createdAt":  "2025-01-16T15:12:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jonathanpeppers",
                                           "body":  "\u003e Hi, are there any news on this issue?\n\nWe have some early investigation/prototypes for NativeAOT on Android. No news on a timeline.\n\n* https://github.com/dotnet/android/pulls?q=is%3Apr+NativeAOT\n\n\u003e Does this affect .NET 9 as well?\n\nYes, Mono AOT will JIT a small method (trampoline?) on the first call of every generic method.",
                                           "updatedAt":  "2025-01-16T15:12:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6dUrwD",
                                           "createdAt":  "2025-02-06T10:38:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEGUu8Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "taublast",
                                                                               "createdAt":  "2025-02-06T10:41:23Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "charlesroddie",
                                                                               "createdAt":  "2025-02-13T22:31:38Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "Any news? A couple more months and it\u0027s going to be 1 year from the moment this bug is reported.",
                                           "updatedAt":  "2025-02-06T10:38:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6d7bHF",
                                           "createdAt":  "2025-02-11T01:13:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEGusRA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "taublast",
                                                                               "createdAt":  "2025-02-11T03:10:09Z"
                                                                           },
                                                                           {
                                                                               "content":  "CONFUSED",
                                                                               "user":  "alexis-kochetov",
                                                                               "createdAt":  "2025-02-11T07:19:01Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "alexyakunin",
                                                                               "createdAt":  "2025-02-11T20:48:39Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "OvrBtn",
                                                                               "createdAt":  "2025-02-11T21:20:36Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "Grzegorz1223",
                                                                               "createdAt":  "2025-02-14T12:46:30Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "serdar-irmak",
                                                                               "createdAt":  "2025-02-18T13:05:21Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  6
                                                         },
                                           "author":  "charlesroddie",
                                           "body":  "While there have been some useful observations in this very long thread, the active work in this is Android NativeAOT and there are active PRs from @jonathanpeppers which are encouraging to see. NativeAOT will fully resolve the issue of lack of full AOT while giving us a much better full AOT than Mono AOT.\n\nThe continued activity in the thread seems to be related to maui blazor specifically. It\u0027s no surprise that maui+blazor+mono+android combo is very slow. @alexyakunin your request for updates are overly persistent and could distract the dotnet team from important tasks of more general benefit to dotnet on android. \"It\u0027s going to be 1 year from the moment this [performance issue] is reported.\" This is not unusual and it also means that you had 1 year to migrate away from blazor and chose not to do so.",
                                           "updatedAt":  "2025-02-11T01:13:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6eE60V",
                                           "createdAt":  "2025-02-11T21:18:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEMecoA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "serdar-irmak",
                                                                               "createdAt":  "2025-02-18T13:04:36Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "pmahend1",
                                                                               "createdAt":  "2025-03-31T14:25:06Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "samsosa",
                                                                               "createdAt":  "2025-04-02T01:13:55Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "alexyakunin",
                                           "body":  "@charlesroddie my thoughts are:\n- Yes, we obviously still consider migration. Not sure how (not) smart you are, but it\u0027s not a piece of cake for any large project, esp. taking into account the only reason for doing that is 2-second startup time.\n- \"It\u0027s no surprise that maui+blazor+mono+android combo is very slow.\" - not surprising for whom, sorry? For the sake of clarity, did I ever mentioned it is slow in general? Or \"very slow\"?\n- I certainly welcome NativeAOT, but it\u0027s not an excuse for ignoring this issue in Mono/MAUI. If you read other posts on NativeAOT timeline for Android, \"somewhere in 2026\" would be an optimistic estimate.\n\nAs for \"you had 1 year to migrate away from Blazor and chose not to do so\", it\u0027s the dumbest thing I read here. To clarify, it took about 6 months to get the \"ok, we tried something, it didn\u0027t help, the rest seems complex / we probably don\u0027t understand how to fix it, coz Mono isn\u0027t really ours\" kind of answer from Microsoft here. \n\nP.S. IDK who is @charlesroddie , but if he\u0027s an MS employee, maybe it makes sense to either clearly write what he just stated on every MAUI page, or... Provide a better answer and explain the basics of customer communication to @charlesroddie .",
                                           "updatedAt":  "2025-02-11T21:19:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6eHhqT",
                                           "createdAt":  "2025-02-12T06:22:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEGJBCQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "alexyakunin",
                                                                               "createdAt":  "2025-02-12T16:57:59Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "taublast",
                                           "body":  "@alexyakunin Please do not fall for this provoc, this guy is anything but MSFT, suggesting everyone to \"work out the cost of porting to uno or avalonia\" and now \"migrate away from blazor\".",
                                           "updatedAt":  "2025-02-12T06:22:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc61qm3H",
                                           "createdAt":  "2025-07-08T08:16:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEZ4Zog==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "alexis-kochetov",
                                                                               "createdAt":  "2025-07-09T06:48:28Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "BrzVlad",
                                           "body":  "Looked a little bit into the sample application. For the template application, about 5759 methods are loaded from AOT while 1578 are not found (21.5% methods jitted). It seems like the biggest culprit is generic methods with valuetype arguments. Hacking the runtime/build a little bit to enable gsharedvt resulted in 3680 method loaded from AOT, with 557 methods jitted (13% methods jitted), however the runtime crashed at this point. It seems that enabling gsharedvt on android could work and could result in good startup improvements however it is a configuration that was not really supported outside of full-aot configurations so it has some issues. It is not yet clear how challenging it would be to fix them, it would require further investigation.",
                                           "updatedAt":  "2025-07-08T08:16:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc65vpcN",
                                           "createdAt":  "2025-07-25T03:37:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gechdcb",
                                           "body":  "@BrzVlad I also found similar problems in mixed execution mode (fully AOTed System.Private.CoreLib.dll + interp execution of any other dlls). The problem is that interp doesn\u0027t use any inflated methods, which causes almost all container classes in CoreLib to end up being executed with the interpreter.\n\nIn mono_jit_call_can_be_supported_by_interp\n```\n\tif (!is_llvm_only \u0026\u0026 method-\u003eis_inflated)\n\t\treturn FALSE;\n```\n\nI\u0027m not sure if having interp call these functions will cause other issues, it seems that gshared/gsharedVT have their own performance issues, but at least it can reduce memory overhead. Currently, AOT generates these gshared/gsharedVT functions, but they are not used, and interp also converts these functions, so there is a memory and time consumption here.",
                                           "updatedAt":  "2025-07-25T03:37:46Z"
                                       }
                                   ],
                         "totalCount":  137
                     },
        "title":  "MAUI .NET 8.0 built with Full AOT Compilation reports a lot of `Mono    : AOT NOT FOUND`",
        "labels":  [
                       "os-android",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/101124",
        "createdAt":  "2024-04-16T08:01:36Z",
        "number":  101124,
        "author":  "performanceautofiler",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-08-09T15:02:34Z",
        "body":  "\u003c!-- DATA: {\"RunType\":{\"Repo\":\"dotnetruntime\",\"Branch\":\"refs/heads/main\",\"Arch\":\"x64\",\"Os\":\"Ubuntu2204\",\"Queue\":\"TigerUbuntu\",\"Frequency\":\"Weekly\",\"CoreClr\":false,\"Mono\":true,\"Wasm\":false,\"Maui\":false,\"Configs\":[\"CompilationMode:tiered\",\"LLVM:true\",\"MonoAOT:true\",\"MonoInterpreter:false\",\"RunKind:micro_mono\"]},\"RegressionDate\":\"2024-04-08T18:26:42\",\"IsRegression\":true} --\u003e\r\n\n### Run Information\n\nName | Value\n-- | --\nArchitecture | x64\nOS | ubuntu 22.04\nQueue | TigerUbuntu\nBaseline | [230dc86e9d92fbf191bf3b45b3f1b656f83d4426](https://github.com/dotnet/runtime/commit/230dc86e9d92fbf191bf3b45b3f1b656f83d4426)\nCompare | [f6f91998634961ec4df518ebe99d245ba34e7874](https://github.com/dotnet/runtime/commit/f6f91998634961ec4df518ebe99d245ba34e7874)\nDiff | [Diff](https://github.com/dotnet/runtime/compare/230dc86e9d92fbf191bf3b45b3f1b656f83d4426...f6f91998634961ec4df518ebe99d245ba34e7874)\nConfigs | CompilationMode:tiered, LLVM:true, MonoAOT:true, MonoInterpreter:false, RunKind:micro_mono\n\n\n### Regressions in Microsoft.Extensions.Configuration.Xml.XmlConfigurationProviderBenchmarks\n\nBenchmark | Baseline | Test | Test/Base | Test Quality | Edge Detector | Baseline IR | Compare IR | IR Ratio\n-- | -- | -- | -- | -- | -- | -- | -- | --\n|\u003cul\u003e\u003cli\u003e[Load - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_x64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/Microsoft.Extensions.Configuration.Xml.XmlConfigurationProviderBenchmarks.Load(FileName%3a%20%22deep.xml%22).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/Microsoft.Extensions.Configuration.Xml/XmlConfigurationProviderBenchmarks.cs#L43-#L49\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpVUXW/TQBB8R+I/nPpiG9LEcauKRjIiCW0pJFBChJAQqi6+TXxwH9beubUrxG/nzgmhSaViHmx5xzOze+tdT4GaEkGCsubJT3KbAwIZlVywGRSapCkJmLYKbA9LZbmEYJc1QqqyvOEhLE0vB8pMT1Ku9ohDzHJuIbMuG+GKhEF1chx0SEBRuodoy56Dse+pBO/5KpjyDLXRS9s9qywow7Uy3bFWS74qkVoXdr9I4a8d8Ar1DWeAI3DVSYo/THeiKQvPuQBvPiAHDKDoVlIcRH8rnZVqx8Z8DcZaFlw00VQzCL6R9BcJLHd0Fjx9TDmZfJ7+oWMJj5OnWunhh/l/8S+VBSwQ3H2jW1Jh/iF00Duu2EYgfXuvpTO7p+IGZGHr8IF6qG3UgnapzUTcyOazt+G/NWdqxRW04V6t9Lwu2lHz2vCMCjcLUnukrfBNvUDOLoReUMHvGqyNbJbM2mY4qwpAt0yqmfTd2R9rt2iAc11snnb3aO5knyyVBXlJGLXgdzJM4uT4ME4O+yfz+MUg7g/6Sbd/dHqaHCfP43gQxz6FKaXbBH4HhOLqWtIqbAx9BR3yLCKLei9DZ7uLHT9JH0sowfkUqL+7PX5AnoEphU3RVc3CeydZ48MbQLpyTkdRhzRW3jg9Rw6KiXqL+GY1gS8Z3TtA4s+Y5RQtueU2J6FxzQOTbjUdUmValFKl+zXVa9yk6yIc0XIrIA1eu9a5v0+9Cb2EhMpEHjOF4DalFZjoN1zniYgfBQAA\u003e)\u003c/li\u003e\u003c/ul\u003e | 97.36 μs | 107.11 μs | 1.10 | 0.00 | True | | |\r\n\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_x64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/Microsoft.Extensions.Configuration.Xml.XmlConfigurationProviderBenchmarks_1.png\u003e)\n[Test Report](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_x64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/Microsoft.Extensions.Configuration.Xml.XmlConfigurationProviderBenchmarks.html\u003e)\n\n### Repro\nGeneral Docs link: https://github.com/dotnet/performance/blob/main/docs/benchmarking-workflow-dotnet-runtime.md\n\n\u003cdetails\u003e\n   \u003csummary\u003eRepro Steps\u003c/summary\u003e\n\n\n#### Prerequisites (Files either built locally (with build.(sh/cmd) or downloaded from payload above (if same system setup) (in this order))\n- Libraries build extracted to `runtime/artifacts` or build instructions: [Libraries README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/libraries/README.md) args: `-subset libs+libs.tests -rc release -configuration Release -arch $RunArch -framework net8.0`\n- CoreCLR product build extracted to `runtime/artifacts/bin/coreclr/$RunOS.$RunArch.Release`, build instructions: [CoreCLR README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/coreclr/README.md) args: `-subset clr+libs -rc release -configuration Release -arch $RunArch -framework net8.0`\n- AOT MONO build extracted to `runtime/artifacts/bin/mono/$RunOS.$RunArch.Release`, build instructions: [MONO README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/mono/README.md) args: `-arch $RunArch -os $RunOS -s mono+libs+host+packs -c Release /p:CrossBuild=false /p:MonoLLVMUseCxx11Abi=false`\n- Dotnet SDK installed for dotnet commands\n- Running commands from the runtime folder\n\nLinux\n```cmd\n# Set $RunDir to the runtime directory\nRunDir=`pwd`\n\n# Set the OS, arch, and OSId\nRunOS=\u0027linux\u0027\nRunOSId=\u0027linux\u0027\nRunArch=\u0027x64\u0027\n\n# Create aot directory \nmkdir -p $RunDir/artifacts/bin/aot/sgen\nmkdir -p $RunDir/artifacts/bin/aot/pack\ncp -r $RunDir/artifacts/obj/mono/$RunOS.$RunArch.Release/mono/* $RunDir/artifacts/bin/aot/sgen\ncp -r $RunDir/artifacts/bin/microsoft.netcore.app.runtime.$RunOS-$RunArch/Release/* $RunDir/artifacts/bin/aot/pack\n\n# Create Core Root\n$RunDir/src/tests/build.sh release $RunArch generatelayoutonly /p:LibrariesConfiguration=Release\n\n# Clone performance \ngit clone --branch main --depth 1 --quiet https://github.com/dotnet/performance.git $RunDir/performance\n\n# One line run:\npython3 $RunDir/performance/scripts/benchmarks_ci.py --csproj $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --incremental no --architecture $RunArch -f net8.0 --filter \u0027Microsoft.Extensions.Configuration.Xml.XmlConfigurationProviderBenchmarks*\u0027 --bdn-artifacts $RunDir/artifacts/BenchmarkDotNet.Artifacts --bdn-arguments=\"--anyCategories Libraries Runtime  --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir/artifacts/bin/aot/sgen/mini/mono-sgen --customruntimepack $RunDir/artifacts/bin/aot/pack --aotcompilermode llvm --logBuildOutput --generateBinLog\"\n\n# Individual Commands:\n# Restore \ndotnet restore $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --packages $RunDir/performance/artifacts/packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Build\ndotnet build $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore /p:NuGetPackageRoot=$RunDir/performance/artifacts/packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Run\ndotnet run --project $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore --no-build -- --filter Microsoft.Extensions.Configuration.Xml.XmlConfigurationProviderBenchmarks* --anyCategories Libraries Runtime \" --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir/artifacts/bin/aot/sgen/mini/mono-sgen --customruntimepack $RunDir/artifacts/bin/aot/pack --aotcompilermode llvm --logBuildOutput --generateBinLog \" --artifacts $RunDir/artifacts/BenchmarkDotNet.Artifacts --packages $RunDir/performance/artifacts/packages --buildTimeout 1200\n```\n\nWindows\n```cmd\n# Set $RunDir to the runtime directory\n$RunDir=\"FullPathHere\"\n\n# Set the OS, arch, and OSId\nRunOS=\u0027windows\u0027\nRunOSId=\u0027win\u0027\nRunArch=\u0027x64\u0027\n\n# Create aot directory\nmkdir $RunDir\\artifacts\\bin\\aot\\sgen\nmkdir $RunDir\\artifacts\\bin\\aot\\pack\nxcopy $RunDir\\artifacts\\obj\\mono\\$RunOS.$RunArch.Release\\mono $RunDir\\artifacts\\bin\\aot\\sgen\\ /e /y\nxcopy $RunDir\\artifacts\\bin\\microsoft.netcore.app.runtime.$RunOSId-$RunArch\\Release $RunDir\\artifacts\\bin\\aot\\pack\\ /e /y\n\n# Create Core Root\n$RunDir\\src\\tests\\build.cmd release $RunArch generatelayoutonly /p:LibrariesConfiguration=Release\n\n# Clone performance \ngit clone --branch main --depth 1 --quiet https://github.com/dotnet/performance.git $RunDir\\performance\n\n# One line run:\npython3 $RunDir\\performance\\scripts\\benchmarks_ci.py --csproj $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --incremental no --architecture $RunArch -f net8.0 --filter \u0027Microsoft.Extensions.Configuration.Xml.XmlConfigurationProviderBenchmarks*\u0027 --bdn-artifacts $RunDir\\artifacts\\BenchmarkDotNet.Artifacts --bdn-arguments=\"--anyCategories Libraries Runtime  --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir\\artifacts\\bin\\aot\\sgen\\mini\\mono-sgen.exe --customruntimepack $RunDir\\artifacts\\bin\\aot\\pack --aotcompilermode llvm --logBuildOutput --generateBinLog\"\n\n# Individual Commands:\n# Restore \ndotnet restore $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --packages $RunDir\\performance\\artifacts\\packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Build\ndotnet build $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore /p:NuGetPackageRoot=$RunDir\\performance\\artifacts\\packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Run\ndotnet run --project $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore --no-build -- --filter Microsoft.Extensions.Configuration.Xml.XmlConfigurationProviderBenchmarks* --anyCategories Libraries Runtime \" --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir\\artifacts\\bin\\aot\\sgen\\mini\\mono-sgen.exe --customruntimepack $RunDir\\artifacts\\bin\\aot\\pack -aotcompilermode llvm --logBuildOutput --generateBinLog \" --artifacts $RunDir\\artifacts\\BenchmarkDotNet.Artifacts --packages $RunDir\\performance\\artifacts\\packages --buildTimeout 1200\n```\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n\n### Microsoft.Extensions.Configuration.Xml.XmlConfigurationProviderBenchmarks.Load(FileName: \"deep.xml\")\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n\n\n### Docs\n\n[Profiling workflow for dotnet/runtime repository](https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-dotnet-runtime.md)\n[Benchmarking workflow for dotnet/runtime repository](https://github.com/dotnet/performance/blob/master/docs/benchmarking-workflow-dotnet-runtime.md)\n\n\u003c/details\u003e\n\r\n\r\n---\r\n\r\n\n### Run Information\n\nName | Value\n-- | --\nArchitecture | x64\nOS | ubuntu 22.04\nQueue | TigerUbuntu\nBaseline | [230dc86e9d92fbf191bf3b45b3f1b656f83d4426](https://github.com/dotnet/runtime/commit/230dc86e9d92fbf191bf3b45b3f1b656f83d4426)\nCompare | [f6f91998634961ec4df518ebe99d245ba34e7874](https://github.com/dotnet/runtime/commit/f6f91998634961ec4df518ebe99d245ba34e7874)\nDiff | [Diff](https://github.com/dotnet/runtime/compare/230dc86e9d92fbf191bf3b45b3f1b656f83d4426...f6f91998634961ec4df518ebe99d245ba34e7874)\nConfigs | CompilationMode:tiered, LLVM:true, MonoAOT:true, MonoInterpreter:false, RunKind:micro_mono\n\n\n### Regressions in System.IO.Tests.StreamReaderReadToEndTests\n\nBenchmark | Baseline | Test | Test/Base | Test Quality | Edge Detector | Baseline IR | Compare IR | IR Ratio\n-- | -- | -- | -- | -- | -- | -- | -- | --\n|\u003cul\u003e\u003cli\u003e[ReadToEnd - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_x64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.IO.Tests.StreamReaderReadToEndTests.ReadToEnd(LineLengthRange%3a%20%5b%20%20%209%2c%20%20%2032%5d).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.IO/StreamReaderReadToEndTests.cs#L30-#L37\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpVUXW/TMBR9R+I/+C0JZG2ajalUCqIrZQxaNtKIl2ma3OQ2MYrt6NrZmgnx27HTUtZOGuHF8j0+59zrj+s5UFUjcBBavfhJ7gtAIGc1K7MYKkmiiDiZ1AJ0H2uhGQdnn3WGVKRFy0NYqX4BNFN9Tpk4II4xLZiGVJtshAniOuvTE8cnDkVuJt6OnYDSXykH6/neWTRKA+9dXPYsrnoLjUB5bLIA2jGRU5FtlnahO2MCZiByXcRU5DAi14SQt74ZjsMb729hcS0mUqxYXiPVTAp17Uwkr1jZRnOZgXNDol/E0czQM+flc8rZ7Pv8Dx1reJ48l0KOL5P/4l8IDVghmHGrW9FS/UNooC9MZFsBZynKW27MHqmYAl7pxn2iHkvtdaBdSDUr73h7y134n9VU5OaGunCvcpk0VTdq0SiW0vIKJZcW6Sr81CyRZeelXNKSPbRYF1kcxl0zTNcVoOkd0T7s/ac+kaavABNZbWf7bZMY2UJTXpF3JKMabAu6YRCeHAXh0eA0CYajYDAKB73wTXA8DIevg2AUBDaFqjmnyB6AUMxvOV27raGtwCevPLJsDjL4u9bz7Uv6VkMNxqdC+cO07RNyDKoudYSm6sx9tJMNPr4DpLlxOvZ80lpZ4+gjMhBZ2ewQe1htYEtGswZI7B7TgqIm90wXxFXm8EBFO41P1qksay6iw5qaDa6iTRGGqJkuIXI+mKMzn02zDa2EuEJ5FlNVyXRE16C83y+uDbQOBQAA\u003e)\u003c/li\u003e\u003c/ul\u003e | 100.72 ms | 117.47 ms | 1.17 | 0.00 | True | | |\r\n|\u003cul\u003e\u003cli\u003e[ReadToEnd - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_x64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.IO.Tests.StreamReaderReadToEndTests.ReadToEnd(LineLengthRange%3a%20%5b%20129%2c%201024%5d).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.IO/StreamReaderReadToEndTests.cs#L30-#L37\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpVUXW/TMBR9R+I/+C0JZG2SVWVUCqIrZRRaNrKIl2mavOQ2MYrt6NrZmgnx27HTUvYhjfBi+R6fc+61c29WQFWDwEFo9eInuS0BgRw3rMoTqCWJY+LkUgvQQ2yEZhych6xjpCIrOx7CWg1LoLkacsrEI+IUs5JpyLTJRpggrrMZjxyfOBS52Xh7dgpKf6UcrOd757xVGvhgcTqwuBqcawTKE5MF0K6pnIt8e7QP3SUTsARR6DKhooAJuSBh9NYnYRCNLr2/hSWNmEmxZkWDVDMp1IUzk7xmVRetZA7OJYl/EUczQ8+dl88pl8vvqz90bOB58koKOT1N/4u/EBqwRjDrTremlfqH0EBfmMh3As4ylFfcmN1TMQW81q37RD2V2utBW0i1rG5495X78D+ruSjMF+rDPStk2tb9qGWrWEarM5RcWqSv8FN7jSw/qeQ1rdhdh/WRJVHSN8N8UwOa2RFdYz9s9Zk0cwWYynq3ezg2qZGda8pr8o7kVIMdQTcyfXwQRAfhOA2OJkE4icLB4VH0ZjQOXwfBJAhsCtVwTpHdAaFYXHG6cTtDW4FPXnnkun2Uwd+Pnm876VsDDRifGuUPM7ZPyAmoptIxmqpz995Ntvj0BpAWxunQ80lnZY3jj8hA5FW7R+xjdYEtGc0ZILF3zEqKmtwyXRJXmccDFe81Ptlksmq4iB/X1G5xFW+LMETNdAWx88E8nfnZtLvQSogrlGcxVVdMx3QDyvsNBUt6mg4FAAA=\u003e)\u003c/li\u003e\u003c/ul\u003e | 100.10 ms | 116.87 ms | 1.17 | 0.00 | True | | |\r\n|\u003cul\u003e\u003cli\u003e[ReadToEnd - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_x64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.IO.Tests.StreamReaderReadToEndTests.ReadToEnd(LineLengthRange%3a%20%5b1025%2c%202048%5d).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.IO/StreamReaderReadToEndTests.cs#L30-#L37\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpVUXW/TMBR9R+I/+C0JZG0auqqqFERXChRaNtKIl2mavOQuMYrt6NrZmgnx27HTUtZOGuHF8j0+59zrj+sVUFUjcBBavfhJ7gtAIGc1K7MYKkmiiDiZ1AJ0H2uhGQfnkHWGVKRFy0O4Vf0CaKb6nDJxRJxiWjANqTbZCBPEdTajoeMThyI3E2/PTkDpr5SD9XznrBulgfcW5z2Lq95aI1AemyyAdkzkXGTbpX3oLpmAJYhcFzEVOUzI5SAIT30SBsPxlfe3sLgWMyluWV4j1UwKdenMJK9Y2UYrmYFzRaJfxNHM0DPn5XPK5fL76g8da3ievJJCTs+T/+IvhAasEMy4093SUv1DaKAvTGQ7AWcpymtuzB6pmAJe6cZ9op5K7XWgLaRalne8veUu/M9qLnJzQ124F7lMmqobtWgUS2l5gZJLi3QVfmpukGUfS3lDS/bQYl1kcRh3zTDfVICmd0T7sA+f+kyavgJMZLWbHbZNYmRrTXlF3pKMarAt6IZBODwJwpPBKAnGk2AwCQe90zAcjMbD10EwCQKbQtWcU2QPQCjm15xu3NbQVuCTVx65aY4y+PvW8+1L+lZDDcanQvnDtO0TcgyqLnWEpurMfbSTLT69A6S5cXrj+aS1ssbRB2QgsrLZI/aw2sCWjGYNkNg9pgVFTe6ZLoirzOGBivYan2xSWdZcRMc1NVtcRdsiDFEzXULkvDdHZz6bZhdaCXGF8iymqpLpiG5Aeb8BQCfN7w4FAAA=\u003e)\u003c/li\u003e\u003c/ul\u003e | 100.29 ms | 117.20 ms | 1.17 | 0.00 | True | | |\r\n|\u003cul\u003e\u003cli\u003e[ReadToEnd - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_x64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.IO.Tests.StreamReaderReadToEndTests.ReadToEnd(LineLengthRange%3a%20%5b%20%20%201%2c%20%20%20%208%5d).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.IO/StreamReaderReadToEndTests.cs#L30-#L37\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpVUXW/TMBR9R+I/3LckkLVpN6apUhBdKTBo2cgiXqZp8pK7xCi2o2tnaybEb8dOS1k3aYQXy/f4nHOvP66XyHRDKFAa/eIn3JVICMcNr/IEawVxDF6ujEQzpEYaLtDbZR0Tk1nZ8Qhv9LBEluuhYFw+Ik4pK7nBzNhswCX43urwwAvBYyTsJNiyU9TmKxPoPN955602KAYnpwOH68G5IWQisVmQ3JiquczXS9vQX3CJC5SFKRMmC5zABQCMQjvA0WXwt7CkkTMlb3jREDNcSX3hzZSoedVFS5WjdwnxL/AMt/Tce/mccrH4vvxDpwafJy+VVNPT9L/4J9Ig1YR23OhuWKX/IbTQFy7zjUDwjNSVsGYPVFyjqE3rP1FPlQl60E6UXlS3orvlPvzPei4Le0N9uGeFStu6H7VsNc9YdUZKKIf0FX5qr4nnHyt1zSp+32F9ZMk46ZthvqqRbO/I7mHvPvWZsn2FlKp6M9ttm9TKzg0TNbyFnBl0LeiPo/HBXjTeGx2m0dEkGk3Go8Hhm4PR+Gj/dRRNosil0I0QjPg9AqPiSrCV3xm6CkJ4FcB1+yhDuG290L2kbw02aH1qUj9s2z4hJ6ibysRkq879BztZ49NbJFZYp/0ghM7KGccfiKPMq3aLuMPqAlcy2TUkcHvMSkYG7rgpwdf28FDHW00Iq0xVjZDx45raNa7jdRGWaLipMPbe26Ozn027CZ0EfKkDh+m64iZmK9TBbzeN8bgOBQAA\u003e)\u003c/li\u003e\u003c/ul\u003e | 100.29 ms | 117.98 ms | 1.18 | 0.01 | True | | |\r\n\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_x64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.IO.Tests.StreamReaderReadToEndTests_1.png\u003e)\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_x64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.IO.Tests.StreamReaderReadToEndTests_2.png\u003e)\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_x64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.IO.Tests.StreamReaderReadToEndTests_3.png\u003e)\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_x64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.IO.Tests.StreamReaderReadToEndTests_4.png\u003e)\n[Test Report](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_x64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.IO.Tests.StreamReaderReadToEndTests.html\u003e)\n\n### Repro\nGeneral Docs link: https://github.com/dotnet/performance/blob/main/docs/benchmarking-workflow-dotnet-runtime.md\n\n\u003cdetails\u003e\n   \u003csummary\u003eRepro Steps\u003c/summary\u003e\n\n\n#### Prerequisites (Files either built locally (with build.(sh/cmd) or downloaded from payload above (if same system setup) (in this order))\n- Libraries build extracted to `runtime/artifacts` or build instructions: [Libraries README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/libraries/README.md) args: `-subset libs+libs.tests -rc release -configuration Release -arch $RunArch -framework net8.0`\n- CoreCLR product build extracted to `runtime/artifacts/bin/coreclr/$RunOS.$RunArch.Release`, build instructions: [CoreCLR README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/coreclr/README.md) args: `-subset clr+libs -rc release -configuration Release -arch $RunArch -framework net8.0`\n- AOT MONO build extracted to `runtime/artifacts/bin/mono/$RunOS.$RunArch.Release`, build instructions: [MONO README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/mono/README.md) args: `-arch $RunArch -os $RunOS -s mono+libs+host+packs -c Release /p:CrossBuild=false /p:MonoLLVMUseCxx11Abi=false`\n- Dotnet SDK installed for dotnet commands\n- Running commands from the runtime folder\n\nLinux\n```cmd\n# Set $RunDir to the runtime directory\nRunDir=`pwd`\n\n# Set the OS, arch, and OSId\nRunOS=\u0027linux\u0027\nRunOSId=\u0027linux\u0027\nRunArch=\u0027x64\u0027\n\n# Create aot directory \nmkdir -p $RunDir/artifacts/bin/aot/sgen\nmkdir -p $RunDir/artifacts/bin/aot/pack\ncp -r $RunDir/artifacts/obj/mono/$RunOS.$RunArch.Release/mono/* $RunDir/artifacts/bin/aot/sgen\ncp -r $RunDir/artifacts/bin/microsoft.netcore.app.runtime.$RunOS-$RunArch/Release/* $RunDir/artifacts/bin/aot/pack\n\n# Create Core Root\n$RunDir/src/tests/build.sh release $RunArch generatelayoutonly /p:LibrariesConfiguration=Release\n\n# Clone performance \ngit clone --branch main --depth 1 --quiet https://github.com/dotnet/performance.git $RunDir/performance\n\n# One line run:\npython3 $RunDir/performance/scripts/benchmarks_ci.py --csproj $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --incremental no --architecture $RunArch -f net8.0 --filter \u0027System.IO.Tests.StreamReaderReadToEndTests*\u0027 --bdn-artifacts $RunDir/artifacts/BenchmarkDotNet.Artifacts --bdn-arguments=\"--anyCategories Libraries Runtime  --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir/artifacts/bin/aot/sgen/mini/mono-sgen --customruntimepack $RunDir/artifacts/bin/aot/pack --aotcompilermode llvm --logBuildOutput --generateBinLog\"\n\n# Individual Commands:\n# Restore \ndotnet restore $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --packages $RunDir/performance/artifacts/packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Build\ndotnet build $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore /p:NuGetPackageRoot=$RunDir/performance/artifacts/packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Run\ndotnet run --project $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore --no-build -- --filter System.IO.Tests.StreamReaderReadToEndTests* --anyCategories Libraries Runtime \" --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir/artifacts/bin/aot/sgen/mini/mono-sgen --customruntimepack $RunDir/artifacts/bin/aot/pack --aotcompilermode llvm --logBuildOutput --generateBinLog \" --artifacts $RunDir/artifacts/BenchmarkDotNet.Artifacts --packages $RunDir/performance/artifacts/packages --buildTimeout 1200\n```\n\nWindows\n```cmd\n# Set $RunDir to the runtime directory\n$RunDir=\"FullPathHere\"\n\n# Set the OS, arch, and OSId\nRunOS=\u0027windows\u0027\nRunOSId=\u0027win\u0027\nRunArch=\u0027x64\u0027\n\n# Create aot directory\nmkdir $RunDir\\artifacts\\bin\\aot\\sgen\nmkdir $RunDir\\artifacts\\bin\\aot\\pack\nxcopy $RunDir\\artifacts\\obj\\mono\\$RunOS.$RunArch.Release\\mono $RunDir\\artifacts\\bin\\aot\\sgen\\ /e /y\nxcopy $RunDir\\artifacts\\bin\\microsoft.netcore.app.runtime.$RunOSId-$RunArch\\Release $RunDir\\artifacts\\bin\\aot\\pack\\ /e /y\n\n# Create Core Root\n$RunDir\\src\\tests\\build.cmd release $RunArch generatelayoutonly /p:LibrariesConfiguration=Release\n\n# Clone performance \ngit clone --branch main --depth 1 --quiet https://github.com/dotnet/performance.git $RunDir\\performance\n\n# One line run:\npython3 $RunDir\\performance\\scripts\\benchmarks_ci.py --csproj $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --incremental no --architecture $RunArch -f net8.0 --filter \u0027System.IO.Tests.StreamReaderReadToEndTests*\u0027 --bdn-artifacts $RunDir\\artifacts\\BenchmarkDotNet.Artifacts --bdn-arguments=\"--anyCategories Libraries Runtime  --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir\\artifacts\\bin\\aot\\sgen\\mini\\mono-sgen.exe --customruntimepack $RunDir\\artifacts\\bin\\aot\\pack --aotcompilermode llvm --logBuildOutput --generateBinLog\"\n\n# Individual Commands:\n# Restore \ndotnet restore $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --packages $RunDir\\performance\\artifacts\\packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Build\ndotnet build $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore /p:NuGetPackageRoot=$RunDir\\performance\\artifacts\\packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Run\ndotnet run --project $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore --no-build -- --filter System.IO.Tests.StreamReaderReadToEndTests* --anyCategories Libraries Runtime \" --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir\\artifacts\\bin\\aot\\sgen\\mini\\mono-sgen.exe --customruntimepack $RunDir\\artifacts\\bin\\aot\\pack -aotcompilermode llvm --logBuildOutput --generateBinLog \" --artifacts $RunDir\\artifacts\\BenchmarkDotNet.Artifacts --packages $RunDir\\performance\\artifacts\\packages --buildTimeout 1200\n```\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n\n### System.IO.Tests.StreamReaderReadToEndTests.ReadToEnd(LineLengthRange: [   9,   32])\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n### System.IO.Tests.StreamReaderReadToEndTests.ReadToEnd(LineLengthRange: [ 129, 1024])\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n### System.IO.Tests.StreamReaderReadToEndTests.ReadToEnd(LineLengthRange: [1025, 2048])\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n### System.IO.Tests.StreamReaderReadToEndTests.ReadToEnd(LineLengthRange: [   1,    8])\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n\n\n### Docs\n\n[Profiling workflow for dotnet/runtime repository](https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-dotnet-runtime.md)\n[Benchmarking workflow for dotnet/runtime repository](https://github.com/dotnet/performance/blob/master/docs/benchmarking-workflow-dotnet-runtime.md)\n\n\u003c/details\u003e\n\r\n\r\n---\r\n\r\n\n### Run Information\n\nName | Value\n-- | --\nArchitecture | x64\nOS | ubuntu 22.04\nQueue | TigerUbuntu\nBaseline | [230dc86e9d92fbf191bf3b45b3f1b656f83d4426](https://github.com/dotnet/runtime/commit/230dc86e9d92fbf191bf3b45b3f1b656f83d4426)\nCompare | [f6f91998634961ec4df518ebe99d245ba34e7874](https://github.com/dotnet/runtime/commit/f6f91998634961ec4df518ebe99d245ba34e7874)\nDiff | [Diff](https://github.com/dotnet/runtime/compare/230dc86e9d92fbf191bf3b45b3f1b656f83d4426...f6f91998634961ec4df518ebe99d245ba34e7874)\nConfigs | CompilationMode:tiered, LLVM:true, MonoAOT:true, MonoInterpreter:false, RunKind:micro_mono\n\n\n### Regressions in System.Text.Tests.Perf_Encoding\n\nBenchmark | Baseline | Test | Test/Base | Test Quality | Edge Detector | Baseline IR | Compare IR | IR Ratio\n-- | -- | -- | -- | -- | -- | -- | -- | --\n|\u003cul\u003e\u003cli\u003e[GetChars - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_x64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.Text.Tests.Perf_Encoding.GetChars(size%3a%20512%2c%20encName%3a%20%22utf-8%22).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.Text.Encoding/Perf.Encoding.cs#L41-#L43\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpVUXW/TMBR9R+I/WHtJAlmbpdsYlYLoSjcGK5Qu4gWhyU1uG6PYjq5vtmZC/HbsrJR9SCO8WPbJOedeOz6eAjc1ggRF5tlPdl0AAjuuRZnPodIsSZiXa1JAfawVCQnefdYxcpUVLQ9hafoF8Nz0JRfqAXGEWSEIMrLVmFDM99aH+17IPI7SToItOwVDn7gE5/nWu2gMgeylsCY7GDK9GeDycqIynQu16p0CjQuOxjfiBobsYC8OGajMGQzZTk3L3aOd4G8r81qNtVqKVY2chFbmmzfWshJlu5rqHLzvLPnFPBKWnnvPn1Ken3+d/qFjDU+Tp1rp0ef0v/hnigArBDtudEtemn8ILfRRqHwjkCJDfSmt2R2VMCAravxH6pGmoAPtTJvz8kq2/7UL/4OZqJVQ0IU7W+m0qbpRi8aIjJcz1FI7pKvwfbNAkZ+WesFLcdNiXWTzeN61wmRdAdq0qPYq37/cY22TBJjqajO7H5TUyi6Iy4q9YTkncKHz4yje343i3b3DNDoaRnvD+FVvsD94fXgQv4yiYRS5EqaWkqPNAeO4upR87beGroOQvQjYonlQIdyGLXQ36UsNNVifCvUPG9RH5DmYuqQEbde5f2cnt/joCpCvrNMgCFlr5YyTExSg8rLZIu6w2oVrGe03QOb2mNkYE7sWVDDf2MMDk2w1IVtnuqylSh721NziJrltwhJJUAmJ984enX1ems3SSZivTOAwU5WCEr4GE/wG60LCvQAFAAA=\u003e)\u003c/li\u003e\u003c/ul\u003e | 263.04 ns | 434.51 ns | 1.65 | 0.02 | True | | |\r\n|\u003cul\u003e\u003cli\u003e[GetString - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_x64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.Text.Tests.Perf_Encoding.GetString(size%3a%20512%2c%20encName%3a%20%22utf-8%22).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.Text.Encoding/Perf.Encoding.cs#L37-#L39\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpVU0W7TMBR9R+IfrL0kgaxLSylVpSC6McaghdFGvCBUecltYxTb0fXN1kyIb8dOS1k7aYQXyz4559xrx8dT4KZCkKDIPPnJbnNAYKeVKLIZlJrFMfMyTQroBCtFQoK3zzpFrtK84SEszUkOPDMnkgt1QBxjmguClGw1JhTzvfWg74XM4yjtJNixEzD0iUtwnm+8eW0IZCeBNdnBkOlcAS4X5yrVmVCrzgXQnNDOfCPuYMRednshA5U6hxE7qmh5PDwK/vYyq9SZVkuxqpCT0Mp88860LEXRrKY6A+87i38xj4SlZ97Tx5STydfpHzpW8Dh5qpUef07+i3+pCLBEsONWt+SF+YfQQh+FyrYCKVLUC2nN7qmEAVlS7T9QjzUFLWiX2kyKG9n82Db8D+ZcrYSCNtyrlU7qsh01r41IeXGFWmqHtBW+r69RZBeFvuaFuGuwNrJZb9a2wvm6BLRxUc1d3r/dZ9pGCTDR5Xa2n5TEyubEZcles4wTuNT5vajXP456x91BEg1HUXfUe9XpDwfd/jB6HkWjKHIlTCUlR5sDxnG1kHztN4aug5A9C9h1fVAh3KUtdDfpSwUVWJ8S9Q+b1AfkGZiqoBht15l/bycbfHwDyFfW6UUQssbKGcfvUIDKinqHuMNqFq5ltN8AmdtjmnMkdisoZ76xhwcm3mlCtk51UUkVH/ZUb3ATb5qwRBJUQOy9tUdn35d6u3QS5isTOMyUhaCYr8EEvwEmqKYNAQUAAA==\u003e)\u003c/li\u003e\u003c/ul\u003e | 265.36 ns | 436.08 ns | 1.64 | 0.05 | True | | |\r\n|\u003cul\u003e\u003cli\u003e[GetChars - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_x64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.Text.Tests.Perf_Encoding.GetChars(size%3a%2016%2c%20encName%3a%20%22ascii%22).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.Text.Encoding/Perf.Encoding.cs#L41-#L43\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpVU0W7TMBR9R+IfrL0kgaxLy9RCpSC6MsaghdJFvCBUecltYxTb0b3O1kyIb8dOS1k7aYQXyz4559xrx8dT4FQhSFCGnvxktzkgsLNKFNkcSs3imHmZNgrMCVbKCAnePusMuUrzhoewpJMceEYnkgt1QBxhmgsDqbHVmFDM99b9Uy9kHkdpJ8GOnQCZT1yC83zjXdVkQHYSWBs7kKHODHC5OFepzoRadS7AjHOO5JO4gyHr9kMGKnX6ITvilApxFPztZF6psVZLsaqQG6EVffPGWpaiaFZTnYH3ncW/mGeEpWfe08eUk8nX6R86VvA4eaqVHn1O/ot/qQxgiWDHrW7JC/qH0EIfhcq2AilS1Atpze6pBIEsTe0/UI+0CVrQLjVNihvZ/NY2/A90rlZCQRvubKWTumxHzWsSKS9mqKV2SFvh+/oaRXZR6GteiLsGayOb9+ZtK5yvS0AbFtXc5P27PdY2SICJLrez/ZwkVnZluCzZa5ZxAy5zfi/qnR5HveNuP4leDqPusDfo9HvdV93B4HkUDaPIlaBKSo42BozjaiH52m8MXQchexaw6/qgQrjLWuhu0pcKKrA+JeofNqcPyHOgqjAx2q4z/95ONvjoBpCvrNOLIGSNlTOO36EAlRX1DnGH1Sxcy2i/ATK3x9Sm2LBbYXLmkz08oHinCdk61UUlVXzYU73BKd40YYlGmAJi7609Ovu61NulkzBfUeAwKgthYr4GCn4DY9UgWf8EAAA=\u003e)\u003c/li\u003e\u003c/ul\u003e | 39.79 ns | 44.77 ns | 1.12 | 0.02 | False | | |\r\n\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_x64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.Text.Tests.Perf_Encoding_1.png\u003e)\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_x64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.Text.Tests.Perf_Encoding_2.png\u003e)\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_x64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.Text.Tests.Perf_Encoding_3.png\u003e)\n[Test Report](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_x64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.Text.Tests.Perf_Encoding.html\u003e)\n\n### Repro\nGeneral Docs link: https://github.com/dotnet/performance/blob/main/docs/benchmarking-workflow-dotnet-runtime.md\n\n\u003cdetails\u003e\n   \u003csummary\u003eRepro Steps\u003c/summary\u003e\n\n\n#### Prerequisites (Files either built locally (with build.(sh/cmd) or downloaded from payload above (if same system setup) (in this order))\n- Libraries build extracted to `runtime/artifacts` or build instructions: [Libraries README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/libraries/README.md) args: `-subset libs+libs.tests -rc release -configuration Release -arch $RunArch -framework net8.0`\n- CoreCLR product build extracted to `runtime/artifacts/bin/coreclr/$RunOS.$RunArch.Release`, build instructions: [CoreCLR README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/coreclr/README.md) args: `-subset clr+libs -rc release -configuration Release -arch $RunArch -framework net8.0`\n- AOT MONO build extracted to `runtime/artifacts/bin/mono/$RunOS.$RunArch.Release`, build instructions: [MONO README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/mono/README.md) args: `-arch $RunArch -os $RunOS -s mono+libs+host+packs -c Release /p:CrossBuild=false /p:MonoLLVMUseCxx11Abi=false`\n- Dotnet SDK installed for dotnet commands\n- Running commands from the runtime folder\n\nLinux\n```cmd\n# Set $RunDir to the runtime directory\nRunDir=`pwd`\n\n# Set the OS, arch, and OSId\nRunOS=\u0027linux\u0027\nRunOSId=\u0027linux\u0027\nRunArch=\u0027x64\u0027\n\n# Create aot directory \nmkdir -p $RunDir/artifacts/bin/aot/sgen\nmkdir -p $RunDir/artifacts/bin/aot/pack\ncp -r $RunDir/artifacts/obj/mono/$RunOS.$RunArch.Release/mono/* $RunDir/artifacts/bin/aot/sgen\ncp -r $RunDir/artifacts/bin/microsoft.netcore.app.runtime.$RunOS-$RunArch/Release/* $RunDir/artifacts/bin/aot/pack\n\n# Create Core Root\n$RunDir/src/tests/build.sh release $RunArch generatelayoutonly /p:LibrariesConfiguration=Release\n\n# Clone performance \ngit clone --branch main --depth 1 --quiet https://github.com/dotnet/performance.git $RunDir/performance\n\n# One line run:\npython3 $RunDir/performance/scripts/benchmarks_ci.py --csproj $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --incremental no --architecture $RunArch -f net8.0 --filter \u0027System.Text.Tests.Perf_Encoding*\u0027 --bdn-artifacts $RunDir/artifacts/BenchmarkDotNet.Artifacts --bdn-arguments=\"--anyCategories Libraries Runtime  --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir/artifacts/bin/aot/sgen/mini/mono-sgen --customruntimepack $RunDir/artifacts/bin/aot/pack --aotcompilermode llvm --logBuildOutput --generateBinLog\"\n\n# Individual Commands:\n# Restore \ndotnet restore $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --packages $RunDir/performance/artifacts/packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Build\ndotnet build $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore /p:NuGetPackageRoot=$RunDir/performance/artifacts/packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Run\ndotnet run --project $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore --no-build -- --filter System.Text.Tests.Perf_Encoding* --anyCategories Libraries Runtime \" --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir/artifacts/bin/aot/sgen/mini/mono-sgen --customruntimepack $RunDir/artifacts/bin/aot/pack --aotcompilermode llvm --logBuildOutput --generateBinLog \" --artifacts $RunDir/artifacts/BenchmarkDotNet.Artifacts --packages $RunDir/performance/artifacts/packages --buildTimeout 1200\n```\n\nWindows\n```cmd\n# Set $RunDir to the runtime directory\n$RunDir=\"FullPathHere\"\n\n# Set the OS, arch, and OSId\nRunOS=\u0027windows\u0027\nRunOSId=\u0027win\u0027\nRunArch=\u0027x64\u0027\n\n# Create aot directory\nmkdir $RunDir\\artifacts\\bin\\aot\\sgen\nmkdir $RunDir\\artifacts\\bin\\aot\\pack\nxcopy $RunDir\\artifacts\\obj\\mono\\$RunOS.$RunArch.Release\\mono $RunDir\\artifacts\\bin\\aot\\sgen\\ /e /y\nxcopy $RunDir\\artifacts\\bin\\microsoft.netcore.app.runtime.$RunOSId-$RunArch\\Release $RunDir\\artifacts\\bin\\aot\\pack\\ /e /y\n\n# Create Core Root\n$RunDir\\src\\tests\\build.cmd release $RunArch generatelayoutonly /p:LibrariesConfiguration=Release\n\n# Clone performance \ngit clone --branch main --depth 1 --quiet https://github.com/dotnet/performance.git $RunDir\\performance\n\n# One line run:\npython3 $RunDir\\performance\\scripts\\benchmarks_ci.py --csproj $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --incremental no --architecture $RunArch -f net8.0 --filter \u0027System.Text.Tests.Perf_Encoding*\u0027 --bdn-artifacts $RunDir\\artifacts\\BenchmarkDotNet.Artifacts --bdn-arguments=\"--anyCategories Libraries Runtime  --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir\\artifacts\\bin\\aot\\sgen\\mini\\mono-sgen.exe --customruntimepack $RunDir\\artifacts\\bin\\aot\\pack --aotcompilermode llvm --logBuildOutput --generateBinLog\"\n\n# Individual Commands:\n# Restore \ndotnet restore $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --packages $RunDir\\performance\\artifacts\\packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Build\ndotnet build $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore /p:NuGetPackageRoot=$RunDir\\performance\\artifacts\\packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Run\ndotnet run --project $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore --no-build -- --filter System.Text.Tests.Perf_Encoding* --anyCategories Libraries Runtime \" --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir\\artifacts\\bin\\aot\\sgen\\mini\\mono-sgen.exe --customruntimepack $RunDir\\artifacts\\bin\\aot\\pack -aotcompilermode llvm --logBuildOutput --generateBinLog \" --artifacts $RunDir\\artifacts\\BenchmarkDotNet.Artifacts --packages $RunDir\\performance\\artifacts\\packages --buildTimeout 1200\n```\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n\n### System.Text.Tests.Perf_Encoding.GetChars(size: 512, encName: \"utf-8\")\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n### System.Text.Tests.Perf_Encoding.GetString(size: 512, encName: \"utf-8\")\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n### System.Text.Tests.Perf_Encoding.GetChars(size: 16, encName: \"ascii\")\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n\n\n### Docs\n\n[Profiling workflow for dotnet/runtime repository](https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-dotnet-runtime.md)\n[Benchmarking workflow for dotnet/runtime repository](https://github.com/dotnet/performance/blob/master/docs/benchmarking-workflow-dotnet-runtime.md)\n\n\u003c/details\u003e\n\r\n\r\n---\r\n\r\n\n### Run Information\n\nName | Value\n-- | --\nArchitecture | x64\nOS | ubuntu 22.04\nQueue | TigerUbuntu\nBaseline | [230dc86e9d92fbf191bf3b45b3f1b656f83d4426](https://github.com/dotnet/runtime/commit/230dc86e9d92fbf191bf3b45b3f1b656f83d4426)\nCompare | [f6f91998634961ec4df518ebe99d245ba34e7874](https://github.com/dotnet/runtime/commit/f6f91998634961ec4df518ebe99d245ba34e7874)\nDiff | [Diff](https://github.com/dotnet/runtime/compare/230dc86e9d92fbf191bf3b45b3f1b656f83d4426...f6f91998634961ec4df518ebe99d245ba34e7874)\nConfigs | CompilationMode:tiered, LLVM:true, MonoAOT:true, MonoInterpreter:false, RunKind:micro_mono\n\n\n### Regressions in System.Text.Perf_Utf8Encoding\n\nBenchmark | Baseline | Test | Test/Base | Test Quality | Edge Detector | Baseline IR | Compare IR | IR Ratio\n-- | -- | -- | -- | -- | -- | -- | -- | --\n|\u003cul\u003e\u003cli\u003e[GetString - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_x64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.Text.Perf_Utf8Encoding.GetString(Input%3a%20EnglishAllAscii).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.Text.Encoding/Perf.Utf8Encoding.cs#L33-#L34\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpWU227TQBCG75F4h72zDWnqpmmoIhmRltIWEiip4QahamtP4kF7sGbHbVwhnp21G0IPUjE31u7v75+ZPczOQLqKQINh9+ynuC6AQBxUqPI5lFYkiQhyywZ4myrDqCG4Tx2QNFnRcgQLt12AzN22lmgegBPKCmTI2GcTaEQYrEbDoCcCSdoPog2dguOPUkMT801wXjsG3U9hxf0zoMXFF17sH5nM5miW/WPgcyY/Ck9NWfFYHJmlQldMlJq4DDH6W8S8MofWLHBZkWS0xn0LDq0uUbWzmc0h+C6SXyJg9HgePH/KOZ1+nf3BqYKn4Zk1dvIp/S/+1DBQSeC/a99CKvcPo5c+oMnXBo0Z2Qvtg91xoQNdch0+ck8sRx2wU+um6kq3J9qFf+/8iaCBLuzZ0qZ12Q0taoeZVGdktW2UrsaT+pIwP1b2Uiq8abUutvlg3jXD0aoE8n1i2kt8/1ofWt9DQKkt16P7LZJ62zlLXYrXIpcMTbuFg3gw3IoHWzujNN4fxzvj3bi/szfaG74avozjcRw3KVyltSS8ASFpeaHlKmwDNhX0xItIXNYPMvQ2bdZrbtLnCirwcUqyP3yLPoLn4CrFCfmq8/DOSm71yRWQXPpIu1FPtKGawMk7QjC5qjdKs1ntpCmZ/D8g0awxKySxuEYuROj85oFLNp6eWGVWVdokD2uqb3WX3BbhQUZWkARv/db5h6VeTxuLCI2LGs2VCjmRK3DRb7S7FyL6BAAA\u003e)\u003c/li\u003e\u003c/ul\u003e | 184.08 μs | 236.51 μs | 1.28 | 0.02 | True | | |\r\n\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_x64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.Text.Perf_Utf8Encoding_1.png\u003e)\n[Test Report](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_x64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.Text.Perf_Utf8Encoding.html\u003e)\n\n### Repro\nGeneral Docs link: https://github.com/dotnet/performance/blob/main/docs/benchmarking-workflow-dotnet-runtime.md\n\n\u003cdetails\u003e\n   \u003csummary\u003eRepro Steps\u003c/summary\u003e\n\n\n#### Prerequisites (Files either built locally (with build.(sh/cmd) or downloaded from payload above (if same system setup) (in this order))\n- Libraries build extracted to `runtime/artifacts` or build instructions: [Libraries README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/libraries/README.md) args: `-subset libs+libs.tests -rc release -configuration Release -arch $RunArch -framework net8.0`\n- CoreCLR product build extracted to `runtime/artifacts/bin/coreclr/$RunOS.$RunArch.Release`, build instructions: [CoreCLR README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/coreclr/README.md) args: `-subset clr+libs -rc release -configuration Release -arch $RunArch -framework net8.0`\n- AOT MONO build extracted to `runtime/artifacts/bin/mono/$RunOS.$RunArch.Release`, build instructions: [MONO README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/mono/README.md) args: `-arch $RunArch -os $RunOS -s mono+libs+host+packs -c Release /p:CrossBuild=false /p:MonoLLVMUseCxx11Abi=false`\n- Dotnet SDK installed for dotnet commands\n- Running commands from the runtime folder\n\nLinux\n```cmd\n# Set $RunDir to the runtime directory\nRunDir=`pwd`\n\n# Set the OS, arch, and OSId\nRunOS=\u0027linux\u0027\nRunOSId=\u0027linux\u0027\nRunArch=\u0027x64\u0027\n\n# Create aot directory \nmkdir -p $RunDir/artifacts/bin/aot/sgen\nmkdir -p $RunDir/artifacts/bin/aot/pack\ncp -r $RunDir/artifacts/obj/mono/$RunOS.$RunArch.Release/mono/* $RunDir/artifacts/bin/aot/sgen\ncp -r $RunDir/artifacts/bin/microsoft.netcore.app.runtime.$RunOS-$RunArch/Release/* $RunDir/artifacts/bin/aot/pack\n\n# Create Core Root\n$RunDir/src/tests/build.sh release $RunArch generatelayoutonly /p:LibrariesConfiguration=Release\n\n# Clone performance \ngit clone --branch main --depth 1 --quiet https://github.com/dotnet/performance.git $RunDir/performance\n\n# One line run:\npython3 $RunDir/performance/scripts/benchmarks_ci.py --csproj $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --incremental no --architecture $RunArch -f net8.0 --filter \u0027System.Text.Perf_Utf8Encoding*\u0027 --bdn-artifacts $RunDir/artifacts/BenchmarkDotNet.Artifacts --bdn-arguments=\"--anyCategories Libraries Runtime  --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir/artifacts/bin/aot/sgen/mini/mono-sgen --customruntimepack $RunDir/artifacts/bin/aot/pack --aotcompilermode llvm --logBuildOutput --generateBinLog\"\n\n# Individual Commands:\n# Restore \ndotnet restore $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --packages $RunDir/performance/artifacts/packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Build\ndotnet build $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore /p:NuGetPackageRoot=$RunDir/performance/artifacts/packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Run\ndotnet run --project $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore --no-build -- --filter System.Text.Perf_Utf8Encoding* --anyCategories Libraries Runtime \" --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir/artifacts/bin/aot/sgen/mini/mono-sgen --customruntimepack $RunDir/artifacts/bin/aot/pack --aotcompilermode llvm --logBuildOutput --generateBinLog \" --artifacts $RunDir/artifacts/BenchmarkDotNet.Artifacts --packages $RunDir/performance/artifacts/packages --buildTimeout 1200\n```\n\nWindows\n```cmd\n# Set $RunDir to the runtime directory\n$RunDir=\"FullPathHere\"\n\n# Set the OS, arch, and OSId\nRunOS=\u0027windows\u0027\nRunOSId=\u0027win\u0027\nRunArch=\u0027x64\u0027\n\n# Create aot directory\nmkdir $RunDir\\artifacts\\bin\\aot\\sgen\nmkdir $RunDir\\artifacts\\bin\\aot\\pack\nxcopy $RunDir\\artifacts\\obj\\mono\\$RunOS.$RunArch.Release\\mono $RunDir\\artifacts\\bin\\aot\\sgen\\ /e /y\nxcopy $RunDir\\artifacts\\bin\\microsoft.netcore.app.runtime.$RunOSId-$RunArch\\Release $RunDir\\artifacts\\bin\\aot\\pack\\ /e /y\n\n# Create Core Root\n$RunDir\\src\\tests\\build.cmd release $RunArch generatelayoutonly /p:LibrariesConfiguration=Release\n\n# Clone performance \ngit clone --branch main --depth 1 --quiet https://github.com/dotnet/performance.git $RunDir\\performance\n\n# One line run:\npython3 $RunDir\\performance\\scripts\\benchmarks_ci.py --csproj $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --incremental no --architecture $RunArch -f net8.0 --filter \u0027System.Text.Perf_Utf8Encoding*\u0027 --bdn-artifacts $RunDir\\artifacts\\BenchmarkDotNet.Artifacts --bdn-arguments=\"--anyCategories Libraries Runtime  --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir\\artifacts\\bin\\aot\\sgen\\mini\\mono-sgen.exe --customruntimepack $RunDir\\artifacts\\bin\\aot\\pack --aotcompilermode llvm --logBuildOutput --generateBinLog\"\n\n# Individual Commands:\n# Restore \ndotnet restore $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --packages $RunDir\\performance\\artifacts\\packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Build\ndotnet build $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore /p:NuGetPackageRoot=$RunDir\\performance\\artifacts\\packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Run\ndotnet run --project $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore --no-build -- --filter System.Text.Perf_Utf8Encoding* --anyCategories Libraries Runtime \" --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir\\artifacts\\bin\\aot\\sgen\\mini\\mono-sgen.exe --customruntimepack $RunDir\\artifacts\\bin\\aot\\pack -aotcompilermode llvm --logBuildOutput --generateBinLog \" --artifacts $RunDir\\artifacts\\BenchmarkDotNet.Artifacts --packages $RunDir\\performance\\artifacts\\packages --buildTimeout 1200\n```\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n\n### System.Text.Perf_Utf8Encoding.GetString(Input: EnglishAllAscii)\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n\n\n### Docs\n\n[Profiling workflow for dotnet/runtime repository](https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-dotnet-runtime.md)\n[Benchmarking workflow for dotnet/runtime repository](https://github.com/dotnet/performance/blob/master/docs/benchmarking-workflow-dotnet-runtime.md)\n\n\u003c/details\u003e\n\r\n\r\n---\r\n\r\n\n### Run Information\n\nName | Value\n-- | --\nArchitecture | x64\nOS | ubuntu 22.04\nQueue | TigerUbuntu\nBaseline | [230dc86e9d92fbf191bf3b45b3f1b656f83d4426](https://github.com/dotnet/runtime/commit/230dc86e9d92fbf191bf3b45b3f1b656f83d4426)\nCompare | [f6f91998634961ec4df518ebe99d245ba34e7874](https://github.com/dotnet/runtime/commit/f6f91998634961ec4df518ebe99d245ba34e7874)\nDiff | [Diff](https://github.com/dotnet/runtime/compare/230dc86e9d92fbf191bf3b45b3f1b656f83d4426...f6f91998634961ec4df518ebe99d245ba34e7874)\nConfigs | CompilationMode:tiered, LLVM:true, MonoAOT:true, MonoInterpreter:false, RunKind:micro_mono\n\n\n### Regressions in System.IO.Tests.StreamReaderReadLineTests\n\nBenchmark | Baseline | Test | Test/Base | Test Quality | Edge Detector | Baseline IR | Compare IR | IR Ratio\n-- | -- | -- | -- | -- | -- | -- | -- | --\n|\u003cul\u003e\u003cli\u003e[ReadLine - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_x64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.IO.Tests.StreamReaderReadLineTests.ReadLine(LineLengthRange%3a%20%5b%20%20%200%2c%201024%5d).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.IO/StreamReaderReadLineTests.cs#L24-#L32\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpVUXW/TMBR9R+I/3LckkLXph8aoFEQ3BhRaNrKKl2mavOQ2MYrt6NrZmgnx27HTruxDGuHF8j0+59xr594skOmaUKA0+sUvuCmQEA5rXmYJVgriGLxMGYmmT7U0XKD3kHVITKZFyyNc6X6BLNN9wbh8RJxSWnCDqbHZgEvwvfX+2AvBYyTsJtixl6jNNybQeb73zhptUPRmJz2H696ZIWQisVmQ3DrnEjcnd5HvljnK3BQJkzlO4BwAohAG0XB8EfwtK6nlkZIrntfEDFdSn3tHSlS8bKOFytC7gPg3eIZbeua9fE45n/9Y3NGpxufJCyXV9GT5X/yZNEgVoV23uhUr9T+EFvrKZbYVCJ6SuhTW7J6KaxSVafwn6qkyQQfaTOl5eS3ab9yF/0Ufy9x+oS7c01wtm6obtWg0T1l5Skooh3QVfm6uiGefSnXFSn7bYl1kyTDpmuF4XSHZyZFtWz9s9CNlpwppqart7uHQLK3szDBRwTvImEE3gP7Q9vFeNNwb7C+jg0k0mIyGvTfj8cHb0eB1FE2iyKXQtRCM+C0Co/xSsLXfGroKQngVwFXzKEO4G7zQddL3Gmu0PhWpn3Zon5AT1HVpYrJVZ/69m2zw6TUSy63TKAihtXLG8UfiKLOy2SHusdrAlUz2DAncHdOCkYEbbgrwtX081PFOE8I6VWUtZPy4pmaD63hThCUabkqMvQ/26eyvptmGTgK+1IHDdFVyE7M16uAPfs/KqgwFAAA=\u003e)\u003c/li\u003e\u003c/ul\u003e | 14.25 μs | 20.05 μs | 1.41 | 0.01 | True | | |\r\n\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_x64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.IO.Tests.StreamReaderReadLineTests_1.png\u003e)\n[Test Report](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_x64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.IO.Tests.StreamReaderReadLineTests.html\u003e)\n\n### Repro\nGeneral Docs link: https://github.com/dotnet/performance/blob/main/docs/benchmarking-workflow-dotnet-runtime.md\n\n\u003cdetails\u003e\n   \u003csummary\u003eRepro Steps\u003c/summary\u003e\n\n\n#### Prerequisites (Files either built locally (with build.(sh/cmd) or downloaded from payload above (if same system setup) (in this order))\n- Libraries build extracted to `runtime/artifacts` or build instructions: [Libraries README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/libraries/README.md) args: `-subset libs+libs.tests -rc release -configuration Release -arch $RunArch -framework net8.0`\n- CoreCLR product build extracted to `runtime/artifacts/bin/coreclr/$RunOS.$RunArch.Release`, build instructions: [CoreCLR README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/coreclr/README.md) args: `-subset clr+libs -rc release -configuration Release -arch $RunArch -framework net8.0`\n- AOT MONO build extracted to `runtime/artifacts/bin/mono/$RunOS.$RunArch.Release`, build instructions: [MONO README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/mono/README.md) args: `-arch $RunArch -os $RunOS -s mono+libs+host+packs -c Release /p:CrossBuild=false /p:MonoLLVMUseCxx11Abi=false`\n- Dotnet SDK installed for dotnet commands\n- Running commands from the runtime folder\n\nLinux\n```cmd\n# Set $RunDir to the runtime directory\nRunDir=`pwd`\n\n# Set the OS, arch, and OSId\nRunOS=\u0027linux\u0027\nRunOSId=\u0027linux\u0027\nRunArch=\u0027x64\u0027\n\n# Create aot directory \nmkdir -p $RunDir/artifacts/bin/aot/sgen\nmkdir -p $RunDir/artifacts/bin/aot/pack\ncp -r $RunDir/artifacts/obj/mono/$RunOS.$RunArch.Release/mono/* $RunDir/artifacts/bin/aot/sgen\ncp -r $RunDir/artifacts/bin/microsoft.netcore.app.runtime.$RunOS-$RunArch/Release/* $RunDir/artifacts/bin/aot/pack\n\n# Create Core Root\n$RunDir/src/tests/build.sh release $RunArch generatelayoutonly /p:LibrariesConfiguration=Release\n\n# Clone performance \ngit clone --branch main --depth 1 --quiet https://github.com/dotnet/performance.git $RunDir/performance\n\n# One line run:\npython3 $RunDir/performance/scripts/benchmarks_ci.py --csproj $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --incremental no --architecture $RunArch -f net8.0 --filter \u0027System.IO.Tests.StreamReaderReadLineTests*\u0027 --bdn-artifacts $RunDir/artifacts/BenchmarkDotNet.Artifacts --bdn-arguments=\"--anyCategories Libraries Runtime  --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir/artifacts/bin/aot/sgen/mini/mono-sgen --customruntimepack $RunDir/artifacts/bin/aot/pack --aotcompilermode llvm --logBuildOutput --generateBinLog\"\n\n# Individual Commands:\n# Restore \ndotnet restore $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --packages $RunDir/performance/artifacts/packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Build\ndotnet build $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore /p:NuGetPackageRoot=$RunDir/performance/artifacts/packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Run\ndotnet run --project $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore --no-build -- --filter System.IO.Tests.StreamReaderReadLineTests* --anyCategories Libraries Runtime \" --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir/artifacts/bin/aot/sgen/mini/mono-sgen --customruntimepack $RunDir/artifacts/bin/aot/pack --aotcompilermode llvm --logBuildOutput --generateBinLog \" --artifacts $RunDir/artifacts/BenchmarkDotNet.Artifacts --packages $RunDir/performance/artifacts/packages --buildTimeout 1200\n```\n\nWindows\n```cmd\n# Set $RunDir to the runtime directory\n$RunDir=\"FullPathHere\"\n\n# Set the OS, arch, and OSId\nRunOS=\u0027windows\u0027\nRunOSId=\u0027win\u0027\nRunArch=\u0027x64\u0027\n\n# Create aot directory\nmkdir $RunDir\\artifacts\\bin\\aot\\sgen\nmkdir $RunDir\\artifacts\\bin\\aot\\pack\nxcopy $RunDir\\artifacts\\obj\\mono\\$RunOS.$RunArch.Release\\mono $RunDir\\artifacts\\bin\\aot\\sgen\\ /e /y\nxcopy $RunDir\\artifacts\\bin\\microsoft.netcore.app.runtime.$RunOSId-$RunArch\\Release $RunDir\\artifacts\\bin\\aot\\pack\\ /e /y\n\n# Create Core Root\n$RunDir\\src\\tests\\build.cmd release $RunArch generatelayoutonly /p:LibrariesConfiguration=Release\n\n# Clone performance \ngit clone --branch main --depth 1 --quiet https://github.com/dotnet/performance.git $RunDir\\performance\n\n# One line run:\npython3 $RunDir\\performance\\scripts\\benchmarks_ci.py --csproj $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --incremental no --architecture $RunArch -f net8.0 --filter \u0027System.IO.Tests.StreamReaderReadLineTests*\u0027 --bdn-artifacts $RunDir\\artifacts\\BenchmarkDotNet.Artifacts --bdn-arguments=\"--anyCategories Libraries Runtime  --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir\\artifacts\\bin\\aot\\sgen\\mini\\mono-sgen.exe --customruntimepack $RunDir\\artifacts\\bin\\aot\\pack --aotcompilermode llvm --logBuildOutput --generateBinLog\"\n\n# Individual Commands:\n# Restore \ndotnet restore $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --packages $RunDir\\performance\\artifacts\\packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Build\ndotnet build $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore /p:NuGetPackageRoot=$RunDir\\performance\\artifacts\\packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Run\ndotnet run --project $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore --no-build -- --filter System.IO.Tests.StreamReaderReadLineTests* --anyCategories Libraries Runtime \" --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir\\artifacts\\bin\\aot\\sgen\\mini\\mono-sgen.exe --customruntimepack $RunDir\\artifacts\\bin\\aot\\pack -aotcompilermode llvm --logBuildOutput --generateBinLog \" --artifacts $RunDir\\artifacts\\BenchmarkDotNet.Artifacts --packages $RunDir\\performance\\artifacts\\packages --buildTimeout 1200\n```\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n\n### System.IO.Tests.StreamReaderReadLineTests.ReadLine(LineLengthRange: [   0, 1024])\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n\n\n### Docs\n\n[Profiling workflow for dotnet/runtime repository](https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-dotnet-runtime.md)\n[Benchmarking workflow for dotnet/runtime repository](https://github.com/dotnet/performance/blob/master/docs/benchmarking-workflow-dotnet-runtime.md)\n\n\u003c/details\u003e\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhuZm9A==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc56wJtA",
                                           "createdAt":  "2024-04-16T08:01:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "performanceautofiler",
                                           "body":  "\n### Run Information\n\nName | Value\n-- | --\nArchitecture | x64\nOS | ubuntu 22.04\nQueue | TigerUbuntu\nBaseline | [230dc86e9d92fbf191bf3b45b3f1b656f83d4426](https://github.com/dotnet/runtime/commit/230dc86e9d92fbf191bf3b45b3f1b656f83d4426)\nCompare | [f6f91998634961ec4df518ebe99d245ba34e7874](https://github.com/dotnet/runtime/commit/f6f91998634961ec4df518ebe99d245ba34e7874)\nDiff | [Diff](https://github.com/dotnet/runtime/compare/230dc86e9d92fbf191bf3b45b3f1b656f83d4426...f6f91998634961ec4df518ebe99d245ba34e7874)\nConfigs | CompilationMode:tiered, LLVM:true, MonoAOT:true, MonoInterpreter:false, RunKind:micro_mono\n\n\n### Regressions in System.IO.Tests.Perf_File\n\nBenchmark | Baseline | Test | Test/Base | Test Quality | Edge Detector | Baseline IR | Compare IR | IR Ratio\n-- | -- | -- | -- | -- | -- | -- | -- | --\n|\u003cul\u003e\u003cli\u003e[ReadAllLines - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_x64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.IO.Tests.Perf_File.ReadAllLines.html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.IO.FileSystem/Perf.File.cs#L158-#L159\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpWUXW/TMBSG75H4D75LAlmbdlsHlYLoxgaFlpUs4gahyk1OGyN/RMfO1kyI346dlrJ20gg3kf3mec85/jieAtUVggBp9LOf5K4ABHJeMZ4nUCoSx8TLlZFgulhJwwR4+9Q5UpkVDYew1N0CaK67gjJ5AI4wK5iBzNhshEnie+vBiRcSj6Kwg2BHp6DNZyrAxXzr3dTagOiMrztO150Z4HJ+xTh0EptpxPmESdB/cyWVvFByyVYVUsOU1N+8CyVKxpvZVOXgfSfxL+IZZvHce/6UczL5Ov2DYwVPw1Ml1eg6/S9+LA1giWC/W9+Scv0Po5U+MZlvDYJlqObCBnvgYhpEaWr/kXukTNACGys94beiObg2/Ed9KVf2INqws5VK67IdWtSaZZTPUAnllLbGD/UCWf6eqwXl7L7R2tiSftI2w+W6BLTtIJu7un97L5RtFcBUldvRfiek1nZjqCjJG5JTA66r/H7UPzmK+ke9QRq9Gka94fFpp3f2etA7O30ZRcMocil0JQRFdg+E4mou6NpvAroKQvIiIIv6IEO466bQ3aQvFVRg45SofthOfAQnoCtuYrRV5/6DlWz00S0gXdlIx0FImlAucHyFDGTO653iNquZuJLR/gMkbo1ZQdGQO2YK4mu7eaDjnSck60zxSsj4sKZ6o+t4U4QFDTMcYu+d3Tr7ftTbqbMQX+rAabrkzMR0DTr4DcnHARHhBAAA\u003e)\u003c/li\u003e\u003c/ul\u003e | 19.60 μs | 21.02 μs | 1.07 | 0.02 | False | | |\r\n\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_x64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.IO.Tests.Perf_File_1.png\u003e)\n[Test Report](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_x64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.IO.Tests.Perf_File.html\u003e)\n\n### Repro\nGeneral Docs link: https://github.com/dotnet/performance/blob/main/docs/benchmarking-workflow-dotnet-runtime.md\n\n\u003cdetails\u003e\n   \u003csummary\u003eRepro Steps\u003c/summary\u003e\n\n\n#### Prerequisites (Files either built locally (with build.(sh/cmd) or downloaded from payload above (if same system setup) (in this order))\n- Libraries build extracted to `runtime/artifacts` or build instructions: [Libraries README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/libraries/README.md) args: `-subset libs+libs.tests -rc release -configuration Release -arch $RunArch -framework net8.0`\n- CoreCLR product build extracted to `runtime/artifacts/bin/coreclr/$RunOS.$RunArch.Release`, build instructions: [CoreCLR README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/coreclr/README.md) args: `-subset clr+libs -rc release -configuration Release -arch $RunArch -framework net8.0`\n- AOT MONO build extracted to `runtime/artifacts/bin/mono/$RunOS.$RunArch.Release`, build instructions: [MONO README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/mono/README.md) args: `-arch $RunArch -os $RunOS -s mono+libs+host+packs -c Release /p:CrossBuild=false /p:MonoLLVMUseCxx11Abi=false`\n- Dotnet SDK installed for dotnet commands\n- Running commands from the runtime folder\n\nLinux\n```cmd\n# Set $RunDir to the runtime directory\nRunDir=`pwd`\n\n# Set the OS, arch, and OSId\nRunOS=\u0027linux\u0027\nRunOSId=\u0027linux\u0027\nRunArch=\u0027x64\u0027\n\n# Create aot directory \nmkdir -p $RunDir/artifacts/bin/aot/sgen\nmkdir -p $RunDir/artifacts/bin/aot/pack\ncp -r $RunDir/artifacts/obj/mono/$RunOS.$RunArch.Release/mono/* $RunDir/artifacts/bin/aot/sgen\ncp -r $RunDir/artifacts/bin/microsoft.netcore.app.runtime.$RunOS-$RunArch/Release/* $RunDir/artifacts/bin/aot/pack\n\n# Create Core Root\n$RunDir/src/tests/build.sh release $RunArch generatelayoutonly /p:LibrariesConfiguration=Release\n\n# Clone performance \ngit clone --branch main --depth 1 --quiet https://github.com/dotnet/performance.git $RunDir/performance\n\n# One line run:\npython3 $RunDir/performance/scripts/benchmarks_ci.py --csproj $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --incremental no --architecture $RunArch -f net8.0 --filter \u0027System.IO.Tests.Perf_File*\u0027 --bdn-artifacts $RunDir/artifacts/BenchmarkDotNet.Artifacts --bdn-arguments=\"--anyCategories Libraries Runtime  --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir/artifacts/bin/aot/sgen/mini/mono-sgen --customruntimepack $RunDir/artifacts/bin/aot/pack --aotcompilermode llvm --logBuildOutput --generateBinLog\"\n\n# Individual Commands:\n# Restore \ndotnet restore $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --packages $RunDir/performance/artifacts/packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Build\ndotnet build $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore /p:NuGetPackageRoot=$RunDir/performance/artifacts/packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Run\ndotnet run --project $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore --no-build -- --filter System.IO.Tests.Perf_File* --anyCategories Libraries Runtime \" --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir/artifacts/bin/aot/sgen/mini/mono-sgen --customruntimepack $RunDir/artifacts/bin/aot/pack --aotcompilermode llvm --logBuildOutput --generateBinLog \" --artifacts $RunDir/artifacts/BenchmarkDotNet.Artifacts --packages $RunDir/performance/artifacts/packages --buildTimeout 1200\n```\n\nWindows\n```cmd\n# Set $RunDir to the runtime directory\n$RunDir=\"FullPathHere\"\n\n# Set the OS, arch, and OSId\nRunOS=\u0027windows\u0027\nRunOSId=\u0027win\u0027\nRunArch=\u0027x64\u0027\n\n# Create aot directory\nmkdir $RunDir\\artifacts\\bin\\aot\\sgen\nmkdir $RunDir\\artifacts\\bin\\aot\\pack\nxcopy $RunDir\\artifacts\\obj\\mono\\$RunOS.$RunArch.Release\\mono $RunDir\\artifacts\\bin\\aot\\sgen\\ /e /y\nxcopy $RunDir\\artifacts\\bin\\microsoft.netcore.app.runtime.$RunOSId-$RunArch\\Release $RunDir\\artifacts\\bin\\aot\\pack\\ /e /y\n\n# Create Core Root\n$RunDir\\src\\tests\\build.cmd release $RunArch generatelayoutonly /p:LibrariesConfiguration=Release\n\n# Clone performance \ngit clone --branch main --depth 1 --quiet https://github.com/dotnet/performance.git $RunDir\\performance\n\n# One line run:\npython3 $RunDir\\performance\\scripts\\benchmarks_ci.py --csproj $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --incremental no --architecture $RunArch -f net8.0 --filter \u0027System.IO.Tests.Perf_File*\u0027 --bdn-artifacts $RunDir\\artifacts\\BenchmarkDotNet.Artifacts --bdn-arguments=\"--anyCategories Libraries Runtime  --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir\\artifacts\\bin\\aot\\sgen\\mini\\mono-sgen.exe --customruntimepack $RunDir\\artifacts\\bin\\aot\\pack --aotcompilermode llvm --logBuildOutput --generateBinLog\"\n\n# Individual Commands:\n# Restore \ndotnet restore $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --packages $RunDir\\performance\\artifacts\\packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Build\ndotnet build $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore /p:NuGetPackageRoot=$RunDir\\performance\\artifacts\\packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Run\ndotnet run --project $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore --no-build -- --filter System.IO.Tests.Perf_File* --anyCategories Libraries Runtime \" --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir\\artifacts\\bin\\aot\\sgen\\mini\\mono-sgen.exe --customruntimepack $RunDir\\artifacts\\bin\\aot\\pack -aotcompilermode llvm --logBuildOutput --generateBinLog \" --artifacts $RunDir\\artifacts\\BenchmarkDotNet.Artifacts --packages $RunDir\\performance\\artifacts\\packages --buildTimeout 1200\n```\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n\n### System.IO.Tests.Perf_File.ReadAllLines\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n\n\n### Docs\n\n[Profiling workflow for dotnet/runtime repository](https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-dotnet-runtime.md)\n[Benchmarking workflow for dotnet/runtime repository](https://github.com/dotnet/performance/blob/master/docs/benchmarking-workflow-dotnet-runtime.md)\n\n\u003c/details\u003e\n",
                                           "updatedAt":  "2024-06-22T01:39:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6CHmMe",
                                           "createdAt":  "2024-06-21T16:03:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "@fanyang-mono let me know what you think the priority should be.",
                                           "updatedAt":  "2024-06-21T16:03:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Gws1T",
                                           "createdAt":  "2024-07-31T16:28:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "@tannergooding has opened a PR to help ease this regression https://github.com/dotnet/runtime/pull/104983\r\n",
                                           "updatedAt":  "2024-07-31T16:28:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6G5mb0",
                                           "createdAt":  "2024-08-01T14:39:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "Tanner\u0027s PR won\u0027t remove the regression completely. More investigation is needed. The regression was not big. The priority of fixing this is relatively low.",
                                           "updatedAt":  "2024-08-01T14:39:38Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "[Perf] Linux/x64: 11 Regressions on 4/8/2024 6:26:42 PM",
        "labels":  [
                       "os-linux",
                       "tenet-performance",
                       "tenet-performance-benchmarks",
                       "arch-x64",
                       "area-Codegen-AOT-mono",
                       "runtime-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/101127",
        "createdAt":  "2024-04-16T08:15:54Z",
        "number":  101127,
        "author":  "performanceautofiler",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-08-15T16:49:15Z",
        "body":  "\u003c!-- DATA: {\"RunType\":{\"Repo\":\"dotnetruntime\",\"Branch\":\"refs/heads/main\",\"Arch\":\"ARM64\",\"Os\":\"Ubuntu2204\",\"Queue\":\"AmpereUbuntu\",\"Frequency\":\"Weekly\",\"CoreClr\":false,\"Mono\":true,\"Wasm\":false,\"Maui\":false,\"Configs\":[\"CompilationMode:tiered\",\"LLVM:true\",\"MonoAOT:true\",\"MonoInterpreter:false\",\"RunKind:micro_mono\"]},\"RegressionDate\":\"2024-04-08T19:16:22\",\"IsRegression\":true} --\u003e\r\n\n### Run Information\n\nName | Value\n-- | --\nArchitecture | arm64\nOS | ubuntu 22.04\nQueue | AmpereUbuntu\nBaseline | [230dc86e9d92fbf191bf3b45b3f1b656f83d4426](https://github.com/dotnet/runtime/commit/230dc86e9d92fbf191bf3b45b3f1b656f83d4426)\nCompare | [404b286b23093cd93a985791934756f64a33483e](https://github.com/dotnet/runtime/commit/404b286b23093cd93a985791934756f64a33483e)\nDiff | [Diff](https://github.com/dotnet/runtime/compare/230dc86e9d92fbf191bf3b45b3f1b656f83d4426...404b286b23093cd93a985791934756f64a33483e)\nConfigs | CompilationMode:tiered, LLVM:true, MonoAOT:true, MonoInterpreter:false, RunKind:micro_mono\n\n\n### Regressions in System.IO.Tests.StreamReaderReadToEndTests\n\nBenchmark | Baseline | Test | Test/Base | Test Quality | Edge Detector | Baseline IR | Compare IR | IR Ratio\n-- | -- | -- | -- | -- | -- | -- | -- | --\n|\u003cul\u003e\u003cli\u003e[ReadToEnd - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_arm64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.IO.Tests.StreamReaderReadToEndTests.ReadToEnd(LineLengthRange%3a%20%5b%20%20%200%2c%201024%5d).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.IO/StreamReaderReadToEndTests.cs#L30-#L37\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpVUUW/TMBB+R+I/3FsSyNq0jNFVCqIbAwYtG1nEyzRNXnJLjGI7OjtbMyF+O3ZayrpJI7xYvs/f993ZucsCmW4IBUqjn/2E2xIJ4aDhVZ5grSCOwcuVkWiG1EjDBXrbrANiMis7HuG1HpbIcj0UjMsHxBllJTeYGZsNuATfW+7teiF4jITdBBt2itp8ZQKd5zvvrNUGxeD4ZOBwPTgzhEwkNguSW1N1JPPV0Sb051ziHGVhyoTJAqdwDgBRCKNovHsR/C0saeShkte8aIgZrqQ+9w6VqHnVRQuVo3cB8S/wDLf03Hv+lHI+/774Q6cGnyYvlFSzk/S/+MfSINWEdl3rrlml/yG00Bcu87VA8IzUpbBm91Rco6hN6z9Sz5QJetCOlZ5XN6L7yn34n/WRLOwX6sM9LVTa1v2oZat5xqpTUkI5pK/wU3tFPP9YqStW8bsO6yNLxknfDEfLGsnOjuwae7vVD5WdK6RU1evd9tikVnZmmKjhLeTMoBtBf2z7eCca74z20mgyHb2ejvYH0Wgymey/eRlF0yhyKXQjBCN+h8CouBRs6XeGroIQXgRw1T7IEG5GL3Sd9K3BBq1PTeqHHdtH5AR1U5mYbNW5f+8mK3x2g8QK6/QqCKGzcsbxB+Io86rdIO6xusCVTPYMCdwds5KRgVtuSvC1fTzU8UYTwjJTVSNk/LCmdoXreFWEJRpuKoy99/bp7M+mXYdOAr7UgcN0XXETsyXq4DevPQNWDgUAAA==\u003e)\u003c/li\u003e\u003c/ul\u003e | 115.22 ms | 136.81 ms | 1.19 | 0.32 | False | | |\r\n|\u003cul\u003e\u003cli\u003e[ReadToEnd - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_arm64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.IO.Tests.StreamReaderReadToEndTests.ReadToEnd(LineLengthRange%3a%20%5b%20%20%201%2c%20%20%20%201%5d).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.IO/StreamReaderReadToEndTests.cs#L30-#L37\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpVU227UMBB9R+If5i0JpNtsti1opSC2pZTCLi1pxEtVVW4yTYxiOxo77aZCfDt2dll6kUp4sTzH55wZX8YLZLolFCiNfvETbiskhP2W10WKjYIkAa9QRqLZplYaLtB7yNonJvOq5xFe6+0KWaG3BePyEXFGecUN5sZmAy7B95Z7O14IHiNhJ8GGnaE2X5lA5/neO+u0QTE6Phk5XI/ODCETqc2C5MZMHcpitbQJ/TmXOEdZmiplssQpnAPAOLQDjC+Cv4WlrTxQ8pqXLTHDldTn3oESDa/7aKEK9C4g+QWe4ZZeeC+fU87n3xd/6NTi8+SFkmp2kv0X/1gapIbQjmvdNav1P4QW+sJlsRYInpO6FNbsnoprFI3p/CfqmTLBANqx0vP6RvS3PIT/WR/K0t7QEO5pqbKuGUatOs1zVp+SEsohQ4WfuivixVGtrljN73psiCyN06EZDpcNku0d2T/sh0/9QNm+QspUs549bJvMys4MEw28g4IZdC3ox1G8sxXFW+O9LHo7He9O42gUx5N48mb3dRRNo8il0K0QjPgdAqPyUrCl3xu6CkJ4FcBV9yhDuGm90L2kby22aH0aUj9s2z4hp6jb2iRkqy78eztZ4bMbJFZap0kQQm/ljJOPxFEWdbdB3GH1gSuZ7BoSuD3mFSMDt9xU4Gt7eKiTjSaEZa7qVsjkcU3dCtfJqghLNNzUmHgf7NHZz6Zbh04CvtSBw3RTc5OwJergN0PzvccOBQAA\u003e)\u003c/li\u003e\u003c/ul\u003e | 110.46 ms | 143.46 ms | 1.30 | 0.37 | False | | |\r\n|\u003cul\u003e\u003cli\u003e[ReadToEnd - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_arm64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.IO.Tests.StreamReaderReadToEndTests.ReadToEnd(LineLengthRange%3a%20%5b%20129%2c%201024%5d).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.IO/StreamReaderReadToEndTests.cs#L30-#L37\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpVUXW/TMBR9R+I/+C0JZG36wbRVCqIrBQotG2nEyzRNbnKbGMV2dO1szYT47dhpKWsnjfBi+R6fc+61c28WQFWFwEFo9eInuc8BgVxUrEgjKCUJQ+KkUgvQXayEZhycQ9YFUpHkDQ9hrbo50FR1OWXiiDjGJGcaEm2yESaI62xOh45PHIrcbLw9Owalv1IO1vOds6yVBt6ZXXYsrjpLjUB5ZLIA2jWWU5Fuj/ahO2cC5iAynUdUZDAi16TXP/dJL+gPb7y/hUWVmEixZlmFVDMp1LUzkbxkRRMtZArODQl/EUczQ0+dl88p5/Pviz90rOB58kIKOb6M/4s/ExqwRDDrTremhfqH0EBfmEh3As4SlLfcmD1SMQW81LX7RD2W2mtBm0k1L+5485Xb8D+rqcjMF2rDvcpkXJftqHmtWEKLK5RcWqSt8FO9QpZ+LOSKFuyhwdrIon7UNsN0UwKa2RFNYx+2+kSauQKMZbnbHY5NbGRLTXlJ3pKUarAj6PZNH58E/ZPeaRycjXpvRv2gMxicDweDs9dBMAoCm0JVnFNkD0AoZrecbtzG0Fbgk1ceWdVHGfz96Pm2k75VUIHxKVH+MGP7hByBqgodoqk6dR/dZIuP7wBpZpwGnk8aK2scfkAGIi3qPWIfqwlsyWjOAIm9Y5JT1OSe6Zy4yjweqHCv8ckmkUXFRXhcU73FVbgtwhA10wWEznvzdOZnU+9CKyGuUJ7FVFkwHdINKO83BprjuQ4FAAA=\u003e)\u003c/li\u003e\u003c/ul\u003e | 110.24 ms | 130.00 ms | 1.18 | 0.34 | False | | |\r\n|\u003cul\u003e\u003cli\u003e[ReadToEnd - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_arm64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.IO.Tests.StreamReaderReadToEndTests.ReadToEnd(LineLengthRange%3a%20%5b%20%20%200%2c%20%20%20%200%5d).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.IO/StreamReaderReadToEndTests.cs#L30-#L37\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpVUXW/TMBR9R+I/3LckkHVZW6ZRKYhujDFo2cgiXqZp8pK7xCi2o2tnaybEb8dOS1k7aYQXy/f4nHOvP67nyHRDKFAa/eIn3JdICIcNr/IEawVxDF6ujESzS400XKC3yTokJrOy4xHe6t0SWa53BeNyizilrOQGM2OzAZfge4v9sReCx0jYSbBmp6jNVybQeb73LlptUAxOzwYO14MLQ8hEYrMguTFVxzJfLq1Df8YlzlAWpkyYLHAClwAQhXaA6Cr4W1jSyCMlb3nREDNcSX3pHSlR86qL5ipH7wriX+AZbum59/I55Wz2ff6HTg0+T54rqaZn6X/xT6VBqgntuNLdskr/Q2ihL1zmK4HgGalrYc0eqbhGUZvWf6KeKhP0oJ0qPavuRHfLffif9bEs7A314Z4XKm3rftSy1Txj1TkpoRzSV/ipvSGen1TqhlX8ocP6yJJh0jfD8aJGsr0ju4e9+dSPlO0rpFTVq9lm26RWdmGYqOEd5Myga0F/GA3HO9FwZ28/jQ4me28mw2gwHr8dHYzGr6NoEkUuhW6EYMQfEBgV14It/M7QVRDCqwBu2q0M4br1QveSvjXYoPWpSf2wbfuEnKBuKhOTrTr3H+1kiU/vkFhhnUZBCJ2VM44/EkeZV+0acYfVBa5ksmtI4PaYlYwM3HNTgq/t4aGO15oQFpmqGiHj7ZraJa7jZRGWaLipMPY+2KOzn027Cp0EfKkDh+m64iZmC9TBb9v4RakOBQAA\u003e)\u003c/li\u003e\u003c/ul\u003e | 116.96 ms | 133.53 ms | 1.14 | 0.35 | False | | |\r\n|\u003cul\u003e\u003cli\u003e[ReadToEnd - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_arm64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.IO.Tests.StreamReaderReadToEndTests.ReadToEnd(LineLengthRange%3a%20%5b%20%20%201%2c%20%20%20%208%5d).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.IO/StreamReaderReadToEndTests.cs#L30-#L37\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpVUXW/TMBR9R+I/3LckkHVZu5WpUhDdGDBo2cgiXqZp8pK7xCi2o2tnaybEb8dOS1k7aYQXy/f4nHOvP67nyHRDKFAa/eIn3JdICEcNr/IEawVxDF6ujESzS400XKC3yToiJrOy4xHe6t0SWa53BeNyizilrOQGM2OzAZfge4vxvheCx0jYSbBmp6jNVybQeb7zLlptUAxOzwYO14MLQ8hEYrMguTFVJzJfLq1Df8YlzlAWpkyYLHAClwCwF9oBDq+Cv4UljTxW8pYXDTHDldSX3rESNa+6aK5y9K4g/gWe4Zaeey+fU85m3+d/6NTg8+S5kmp6lv4X/1QapJrQjivdLav0P4QW+sJlvhIInpG6FtbskYprFLVp/SfqqTJBD9qp0rPqTnS33If/WZ/Iwt5QH+55odK27kctW80zVp2TEsohfYWf2hvi+cdK3bCKP3RYH1kyTPpmOFnUSLZ3ZPewN5/6sbJ9hZSqejXbbJvUyi4MEzW8hZwZdC3oD6Ph/k403Nkbp9HhZO9gMowGB+PR4Wj85nUUTaLIpdCNEIz4AwKj4lqwhd8ZugpCeBXATbuVIVy3Xuhe0rcGG7Q+Nakftm2fkBPUTWVislXn/qOdLPHpHRIrrNMoCKGzcsbxB+Io86pdI+6wusCVTHYNCdwes5KRgXtuSvC1PTzU8VoTwiJTVSNkvF1Tu8R1vCzCEg03Fcbee3t09rNpV6GTgC914DBdV9zEbIE6+A3ghVE/DgUAAA==\u003e)\u003c/li\u003e\u003c/ul\u003e | 115.80 ms | 130.20 ms | 1.12 | 0.37 | False | | |\r\n|\u003cul\u003e\u003cli\u003e[ReadToEnd - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_arm64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.IO.Tests.StreamReaderReadToEndTests.ReadToEnd(LineLengthRange%3a%20%5b%20%20%209%2c%20%20%2032%5d).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.IO/StreamReaderReadToEndTests.cs#L30-#L37\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpVUXW/TMBR9R+I/+C0JZG2WbWWrFERXBhRaNtKIl2ma3OQ2MYrt6NrZmgnx27HTUtZOGuHF8j0+59zrj+sZUFUjcBBavfhJ7gtAIOc1K7MYKkmiiDiZ1AJ0H2uhGQdnl3WOVKRFy0NYqn4BNFN9TpnYI44wLZiGVJtshAniOqvBseMThyI3E2/LTkDpr5SD9XznzBulgfcmlz2Lq95cI1AemyyAdkzkhcjWS9vQnTIBUxC5LmIqchiSa0LImW+Go/DG+1tYXIuxFEuW10g1k0JdO2PJK1a20Uxm4NyQ6BdxNDP0zHn5nHI6/T77Q8canifPpJCjy+S/+BOhASsEM250S1qqfwgN9IWJbCPgLEV5y43ZIxVTwCvduE/UI6m9DrSJVNPyjre33IX/WV2I3NxQF+5VLpOm6kYtGsVSWl6h5NIiXYWfmgWy7GMpF7RkDy3WRRaHcdcMF6sK0PSOaB/27lMfS9NXgImsNrPdtkmMbK4pr8hbklENtgXdMAiPD4Lw4HCQBKfDw5NhGPQGb07OBqfB6yAYBoFNoWrOKbIHIBTzW05XbmtoK/DJK48smr0M/rb1fPuSvtVQg/GpUP4wbfuEHIOqSx2hqTpzH+1kjY/uAGlunI48n7RW1jj6gAxEVjZbxB5WG9iS0awBErvHtKCoyT3TBXGVOTxQ0Vbjk1Uqy5qLaL+mZo2raF2EIWqmS4ic9+bozGfTbEIrIa5QnsVUVTId0RUo7zdzjF9wDgUAAA==\u003e)\u003c/li\u003e\u003c/ul\u003e | 118.24 ms | 128.97 ms | 1.09 | 0.34 | False | | |\r\n|\u003cul\u003e\u003cli\u003e[ReadToEnd - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_arm64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.IO.Tests.StreamReaderReadToEndTests.ReadToEnd(LineLengthRange%3a%20%5b1025%2c%202048%5d).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.IO/StreamReaderReadToEndTests.cs#L30-#L37\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpVUXW/TMBR9R+I/+C0JZF0auq6qFERXBhRaNtKIl2ma3OQuMYrt6NrZmgnx27HTUtZOGuHF8j0+59zrj+sFUFUjcBBavfhJ7gtAIGc1K7MYKkmiiDiZ1AL0MdZCMw7OPusMqUiLlodwq44LoJk65pSJA+IE04JpSLXJRpggrrMeDhyfOBS5mXg7dgJKf6UcrOc7Z9koDbw3u+hZXPWWGoHy2GQBtGMiz0W2WdqF7pwJmIPIdRFTkcOYXPWD8MQnYTAYXXt/C4trMZXiluU1Us2kUFfOVPKKlW20kBk41yT6RRzNDD1zXj6nnM+/L/7QsYbnyQsp5OQi+S/+TGjACsGMW90tLdU/hAb6wkS2FXCWorzhxuyRiinglW7cJ+qJ1F4H2kyqeXnH21vuwv+szkVubqgL9zKXSVN1oxaNYiktL1FyaZGuwk/NCln2sZQrWrKHFusii8O4a4bzdQVoeke0D3v/qU+l6SvARFbb2X7bJEa21JRX5C3JqAbbgm4YhIOjIDzqD5NgNO6fjMOgdzoaDk+D8HUQjIPAplA15xTZAxCK+Q2na7c1tBX45JVHVs1BBn/Xer59Sd9qqMH4VCh/mLZ9Qo5B1aWO0FSduY92ssEnd4A0N05vPJ+0VtY4+oAMRFY2O8QeVhvYktGsARK7x7SgqMk90wVxlTk8UNFO45N1Ksuai+iwpmaDq2hThCFqpkuInPfm6Mxn02xDKyGuUJ7FVFUyHdE1KO83cxjMfA4FAAA=\u003e)\u003c/li\u003e\u003c/ul\u003e | 114.53 ms | 129.65 ms | 1.13 | 0.35 | False | | |\r\n\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.IO.Tests.StreamReaderReadToEndTests_1.png\u003e)\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.IO.Tests.StreamReaderReadToEndTests_2.png\u003e)\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.IO.Tests.StreamReaderReadToEndTests_3.png\u003e)\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.IO.Tests.StreamReaderReadToEndTests_4.png\u003e)\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.IO.Tests.StreamReaderReadToEndTests_5.png\u003e)\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.IO.Tests.StreamReaderReadToEndTests_6.png\u003e)\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.IO.Tests.StreamReaderReadToEndTests_7.png\u003e)\n[Test Report](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.IO.Tests.StreamReaderReadToEndTests.html\u003e)\n\n### Repro\nGeneral Docs link: https://github.com/dotnet/performance/blob/main/docs/benchmarking-workflow-dotnet-runtime.md\n\n\u003cdetails\u003e\n   \u003csummary\u003eRepro Steps\u003c/summary\u003e\n\n\n#### Prerequisites (Files either built locally (with build.(sh/cmd) or downloaded from payload above (if same system setup) (in this order))\n- Libraries build extracted to `runtime/artifacts` or build instructions: [Libraries README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/libraries/README.md) args: `-subset libs+libs.tests -rc release -configuration Release -arch $RunArch -framework net8.0`\n- CoreCLR product build extracted to `runtime/artifacts/bin/coreclr/$RunOS.$RunArch.Release`, build instructions: [CoreCLR README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/coreclr/README.md) args: `-subset clr+libs -rc release -configuration Release -arch $RunArch -framework net8.0`\n- AOT MONO build extracted to `runtime/artifacts/bin/mono/$RunOS.$RunArch.Release`, build instructions: [MONO README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/mono/README.md) args: `-arch $RunArch -os $RunOS -s mono+libs+host+packs -c Release /p:CrossBuild=false /p:MonoLLVMUseCxx11Abi=false`\n- Dotnet SDK installed for dotnet commands\n- Running commands from the runtime folder\n\nLinux\n```cmd\n# Set $RunDir to the runtime directory\nRunDir=`pwd`\n\n# Set the OS, arch, and OSId\nRunOS=\u0027linux\u0027\nRunOSId=\u0027linux\u0027\nRunArch=\u0027x64\u0027\n\n# Create aot directory \nmkdir -p $RunDir/artifacts/bin/aot/sgen\nmkdir -p $RunDir/artifacts/bin/aot/pack\ncp -r $RunDir/artifacts/obj/mono/$RunOS.$RunArch.Release/mono/* $RunDir/artifacts/bin/aot/sgen\ncp -r $RunDir/artifacts/bin/microsoft.netcore.app.runtime.$RunOS-$RunArch/Release/* $RunDir/artifacts/bin/aot/pack\n\n# Create Core Root\n$RunDir/src/tests/build.sh release $RunArch generatelayoutonly /p:LibrariesConfiguration=Release\n\n# Clone performance \ngit clone --branch main --depth 1 --quiet https://github.com/dotnet/performance.git $RunDir/performance\n\n# One line run:\npython3 $RunDir/performance/scripts/benchmarks_ci.py --csproj $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --incremental no --architecture $RunArch -f net8.0 --filter \u0027System.IO.Tests.StreamReaderReadToEndTests*\u0027 --bdn-artifacts $RunDir/artifacts/BenchmarkDotNet.Artifacts --bdn-arguments=\"--anyCategories Libraries Runtime  --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir/artifacts/bin/aot/sgen/mini/mono-sgen --customruntimepack $RunDir/artifacts/bin/aot/pack --aotcompilermode llvm --logBuildOutput --generateBinLog\"\n\n# Individual Commands:\n# Restore \ndotnet restore $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --packages $RunDir/performance/artifacts/packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Build\ndotnet build $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore /p:NuGetPackageRoot=$RunDir/performance/artifacts/packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Run\ndotnet run --project $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore --no-build -- --filter System.IO.Tests.StreamReaderReadToEndTests* --anyCategories Libraries Runtime \" --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir/artifacts/bin/aot/sgen/mini/mono-sgen --customruntimepack $RunDir/artifacts/bin/aot/pack --aotcompilermode llvm --logBuildOutput --generateBinLog \" --artifacts $RunDir/artifacts/BenchmarkDotNet.Artifacts --packages $RunDir/performance/artifacts/packages --buildTimeout 1200\n```\n\nWindows\n```cmd\n# Set $RunDir to the runtime directory\n$RunDir=\"FullPathHere\"\n\n# Set the OS, arch, and OSId\nRunOS=\u0027windows\u0027\nRunOSId=\u0027win\u0027\nRunArch=\u0027x64\u0027\n\n# Create aot directory\nmkdir $RunDir\\artifacts\\bin\\aot\\sgen\nmkdir $RunDir\\artifacts\\bin\\aot\\pack\nxcopy $RunDir\\artifacts\\obj\\mono\\$RunOS.$RunArch.Release\\mono $RunDir\\artifacts\\bin\\aot\\sgen\\ /e /y\nxcopy $RunDir\\artifacts\\bin\\microsoft.netcore.app.runtime.$RunOSId-$RunArch\\Release $RunDir\\artifacts\\bin\\aot\\pack\\ /e /y\n\n# Create Core Root\n$RunDir\\src\\tests\\build.cmd release $RunArch generatelayoutonly /p:LibrariesConfiguration=Release\n\n# Clone performance \ngit clone --branch main --depth 1 --quiet https://github.com/dotnet/performance.git $RunDir\\performance\n\n# One line run:\npython3 $RunDir\\performance\\scripts\\benchmarks_ci.py --csproj $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --incremental no --architecture $RunArch -f net8.0 --filter \u0027System.IO.Tests.StreamReaderReadToEndTests*\u0027 --bdn-artifacts $RunDir\\artifacts\\BenchmarkDotNet.Artifacts --bdn-arguments=\"--anyCategories Libraries Runtime  --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir\\artifacts\\bin\\aot\\sgen\\mini\\mono-sgen.exe --customruntimepack $RunDir\\artifacts\\bin\\aot\\pack --aotcompilermode llvm --logBuildOutput --generateBinLog\"\n\n# Individual Commands:\n# Restore \ndotnet restore $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --packages $RunDir\\performance\\artifacts\\packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Build\ndotnet build $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore /p:NuGetPackageRoot=$RunDir\\performance\\artifacts\\packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Run\ndotnet run --project $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore --no-build -- --filter System.IO.Tests.StreamReaderReadToEndTests* --anyCategories Libraries Runtime \" --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir\\artifacts\\bin\\aot\\sgen\\mini\\mono-sgen.exe --customruntimepack $RunDir\\artifacts\\bin\\aot\\pack -aotcompilermode llvm --logBuildOutput --generateBinLog \" --artifacts $RunDir\\artifacts\\BenchmarkDotNet.Artifacts --packages $RunDir\\performance\\artifacts\\packages --buildTimeout 1200\n```\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n\n### System.IO.Tests.StreamReaderReadToEndTests.ReadToEnd(LineLengthRange: [   0, 1024])\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n### System.IO.Tests.StreamReaderReadToEndTests.ReadToEnd(LineLengthRange: [   1,    1])\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n### System.IO.Tests.StreamReaderReadToEndTests.ReadToEnd(LineLengthRange: [ 129, 1024])\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n### System.IO.Tests.StreamReaderReadToEndTests.ReadToEnd(LineLengthRange: [   0,    0])\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n### System.IO.Tests.StreamReaderReadToEndTests.ReadToEnd(LineLengthRange: [   1,    8])\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n### System.IO.Tests.StreamReaderReadToEndTests.ReadToEnd(LineLengthRange: [   9,   32])\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n### System.IO.Tests.StreamReaderReadToEndTests.ReadToEnd(LineLengthRange: [1025, 2048])\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n\n\n### Docs\n\n[Profiling workflow for dotnet/runtime repository](https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-dotnet-runtime.md)\n[Benchmarking workflow for dotnet/runtime repository](https://github.com/dotnet/performance/blob/master/docs/benchmarking-workflow-dotnet-runtime.md)\n\n\u003c/details\u003e\n\r\n\r\n---\r\n\r\n\n### Run Information\n\nName | Value\n-- | --\nArchitecture | arm64\nOS | ubuntu 22.04\nQueue | AmpereUbuntu\nBaseline | [230dc86e9d92fbf191bf3b45b3f1b656f83d4426](https://github.com/dotnet/runtime/commit/230dc86e9d92fbf191bf3b45b3f1b656f83d4426)\nCompare | [404b286b23093cd93a985791934756f64a33483e](https://github.com/dotnet/runtime/commit/404b286b23093cd93a985791934756f64a33483e)\nDiff | [Diff](https://github.com/dotnet/runtime/compare/230dc86e9d92fbf191bf3b45b3f1b656f83d4426...404b286b23093cd93a985791934756f64a33483e)\nConfigs | CompilationMode:tiered, LLVM:true, MonoAOT:true, MonoInterpreter:false, RunKind:micro_mono\n\n\n### Regressions in System.Text.Tests.Perf_Encoding\n\nBenchmark | Baseline | Test | Test/Base | Test Quality | Edge Detector | Baseline IR | Compare IR | IR Ratio\n-- | -- | -- | -- | -- | -- | -- | -- | --\n|\u003cul\u003e\u003cli\u003e[GetChars - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_arm64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.Text.Tests.Perf_Encoding.GetChars(size%3a%2016%2c%20encName%3a%20%22ascii%22).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.Text.Encoding/Perf.Encoding.cs#L41-#L43\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpVUXW/TMBR9R+I/WHtJAlmbZh9ClYLoyhiDFUYX8YLQ5Ca3iVFsR/c6WzIhfjt2Vso+pBFeLPvknHOvHR8vgFODIEEZevaTXZeAwI4aUeVLqDVLEubl2igwY2yUERK8+6wj5Corex7CmsYl8JzGkgv1gDjDrBQGMmOrMaGY77WH+17IPI7SToItOwUyn7gE5/nGu+jIgByl0Bo7kKHROeD68lhlOheqGJ2AmZccySdxA1M2OQwZqMzpp2yHUybETvC3k2Wj5lqtRdEgN0Ir+ubNtaxF1a8WOgfvO0t+Mc8IS8+9508pz86+Lv7QsYGnyQut9Oxz+l/8U2UAawQ7bnRrXtE/hBb6KFS+EUiRob6U1uyOShDI2nT+I/VMm2AA7VTTWXUl+986hP+BjlUhFAzhnhc67eph1LIjkfHqHLXUDhkqfN+tUOQnlV7xStz02BDZMl4OrXDc1oA2LKq/yffv9lzbIAGmut7M7ucktbILw2XNXrOcG3CZ8+Mo3t+N4t3JYRq9mk4OpnvRKN6PJ5ODycsomkaRK0GNlBxtDBjH4lLy1u8NXQchexGwVfegQrjNWuhu0pcGGrA+NeofNqePyEugpjIJ2q5z/85ObvHZFSAvrNNeELLeyhkn71CAyqtui7jD6heuZbTfAJnbY2ZTbNi1MCXzyR4eULLVhKzNdNVIlTzsqbvFKbltwhKNMBUk3lt7dPZ16TZLJ2G+osBhVFfCJLwFCn4DY26POf8EAAA=\u003e)\u003c/li\u003e\u003c/ul\u003e | 56.66 ns | 64.08 ns | 1.13 | 0.33 | False | | |\r\n|\u003cul\u003e\u003cli\u003e[GetString - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_arm64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.Text.Tests.Perf_Encoding.GetString(size%3a%20512%2c%20encName%3a%20%22ascii%22).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.Text.Encoding/Perf.Encoding.cs#L37-#L39\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpVUXW/TMBR9R+I/WHtJAlmXpuuEKgXRjTIGLZQ24gWhyUtuG6PYjq5vtmZC/HbstJR9SCO8WPbJOedeOz6eATc1ggRF5tlPdlMAAjutRZkvoNIsSZiXa1JAR1grEhK8+6xT5CorWh7CyhwVwHNzJLlQD4hjzApBkJGtxoRivrc5OfZC5nGUdhLs2SkY+sQlOM833rIxBLKXwobsYMj05oCry4nKdC7UuncOtCS0M9+IWxixYT8OGajMOYzYATeZEAfB314WtTrTaiXWNXISWplv3pmWlSjb1Uzn4H1nyS/mkbD03Hv+lHI6/Tr7Q8canibPtNLjz+l/8S8UAVYIdtzpVrw0/xBa6KNQ+U4gRYb6UlqzOyphQFbU+I/UY01BB9qFNtPyWrY/tgv/g5motVDQhTtf67SpulGLxoiMl3PUUjukq/B9c4UiPy/1FS/FbYt1kS3iRdcKk00FaOOi2rt8/3afaRslwFRXu9n9pKRWtiQuK/aa5ZzApc6Po/j4MIoP+ydp9GrUH44GUW8wHAziePAyikZR5EqYWkqONgeM4/pS8o3fGroOQvYiYFfNgwrhPm2hu0lfaqjB+lSof9ikPiIvwNQlJWi7zv07O9ni42tAvrZOgyBkrZUzTt6hAJWXzR5xh9UuXMtovwEyt8es4EjsRlDBfGMPD0yy14Rsk+mylip52FOzxU2ybcISSVAJiffWHp19X5rd0kmYr0zgMFOVghK+ARP8BlotqQ0BBQAA\u003e)\u003c/li\u003e\u003c/ul\u003e | 370.24 ns | 597.61 ns | 1.61 | 0.44 | True | | |\r\n|\u003cul\u003e\u003cli\u003e[GetChars - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_arm64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.Text.Tests.Perf_Encoding.GetChars(size%3a%20512%2c%20encName%3a%20%22ascii%22).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.Text.Encoding/Perf.Encoding.cs#L41-#L43\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpVUXW/TMBR9R+I/WHtJAlmbfqyCSkF0ZRuDFkYX8YLQ5Ca3jVFsR/c6WzMhfjt2Wso+pBFeLPvknHOvHR/PgVOFIEEZevaT3eSAwI4rUWQLKDWLY+Zl2igwXayUERK8+6xj5CrNGx7Ciro58Iy6kgv1gDjBNBcGUmOrMaGY721GQy9kHkdpJ8GenQCZT1yC83zrXdZkQHYS2Bg7kKHOBeDq6kSlOhNq3TkDM805kk/iFsbsqNcPGajUGYzZAadUiIPgbyuLSk21Wol1hdwIreibN9WyFEWzmusMvO8s/sU8Iyw9854/pZzNvs7/0LGCp8lzrfTkc/Jf/HNlAEsEO+50K17QP4QW+ihUthNIkaK+ktbsjkoQyNLU/iP1RJugBe1c06y4ls1/bcP/QCdqLRS04V6sdVKX7ah5TSLlxQVqqR3SVvi+XqLIzgq95IW4bbA2skV/0bbCyaYEtGlRzVW+f7mn2iYJMNHlbnY/KImVXRouS/aGZdyAC53fj/rDw6h/2Bsl0atx72g8iDrD0eB1NOi9jKJxFLkSVEnJ0eaAcVxfSb7xG0PXQcheBGxZP6gQ7sMWupv0pYIKrE+J+ocN6iPyAqgqTIy268y/s5MtPrkG5GvrNAhC1lg54/gUBaisqPeIO6xm4VpG+w2QuT2mNsaG3QiTM5/s4QHFe03INqkuKqnihz3VW5zibROWaIQpIPbe2aOzz0u9WzoJ8xUFDqOyECbmG6DgN8nE9YUABQAA\u003e)\u003c/li\u003e\u003c/ul\u003e | 387.21 ns | 555.99 ns | 1.44 | 0.40 | True | | |\r\n|\u003cul\u003e\u003cli\u003e[GetChars - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_arm64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.Text.Tests.Perf_Encoding.GetChars(size%3a%2016%2c%20encName%3a%20%22utf-8%22).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.Text.Encoding/Perf.Encoding.cs#L41-#L43\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpVUXW/TMBR9R+I/WHtJAmmX9UtTpSC6MrZBC6OLeEFo8pLbxii2o+ubrZkQvx07K2XtpBFeLPvknHOvHR/PgZsKQYIi8+Inu8sBgZ1UosgWUGoWx8zLNCmgQ6wUCQneLusEuUrzhoewNIc58MwcSi7UHnGCaS4IUrLVmFDM99ajgRcyj6O0k2DLTsDQJy7Beb71rmpDILsJrMkOhkz3EnB5fapSnQm16p4BTXOOxjfiHsbsaBQyUKnTj9lBRcvO8UHwt5NFpaZaLcWqQk5CK/PNm2pZiqJZzXUG3ncW/2IeCUvPvJfPKWezr/M/dKzgefJcKz35nPwX/0IRYIlgx41uyQvzD6GFPgqVbQRSpKivpTV7pBIGZEm1/0Q90RS0oF1oMytuZfNb2/A/mFO1EgracC9XOqnLdtS8NiLlxSVqqR3SVnhe36DIzgp9wwtx32BtZIveom2F03UJaMOimpu8e7en2gYJMNHlZrabk8TKrojLkr1hGSdwmfN7UW/QiXqdo1ESHY+PhuN+1B2Ohr1+NHgdReMociVMJSVHGwPGcXUt+dpvDF0HIXsVsJt6r0K4zVrobtKXCiqwPiXqHzanT8gLMFVBMdquM//RTh7wyS0gX1mnfhCyxsoZx+9RgMqKeou4w2oWrmW03wCZ22NqU0zsTlDOfGMPD0y81YRsneqikire76l+wE380IQlkqACYu+dPTr7utSbpZMwX5nAYaYsBMV8DSb4DUfJugr/BAAA\u003e)\u003c/li\u003e\u003c/ul\u003e | 69.88 ns | 75.98 ns | 1.09 | 0.22 | False | | |\r\n|\u003cul\u003e\u003cli\u003e[GetChars - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_arm64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.Text.Tests.Perf_Encoding.GetChars(size%3a%20512%2c%20encName%3a%20%22utf-8%22).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.Text.Encoding/Perf.Encoding.cs#L41-#L43\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpVU0W7TMBR9R+IfrL0kgaxLu7WqKgXRlbINWhhdxAtCk5fcNkaxHV3fbM2E+HbsrJS1k0Z4seyTc869dnw8B24qBAmKzIuf7C4HBHZaiSJbQKlZHDMv06SAjrBSJCR4u6xT5CrNGx7C0hzlwDNzJLlQe8QxprkgSMlWY0Ix31sPTryQeRylnQRbdgKGPnEJzvOtd1UbAtlJYE12MGQ6l4DL66lKdSbUqnMGNMk5Gt+IexixfrcXMlCpMxixg4qWh8OD4G8ri0pNtFqKVYWchFbmmzfRshRFs5rrDLzvLP7FPBKWnnkvn1POZl/nf+hYwfPkuVZ6/Dn5L/6FIsASwY4b3ZIX5h9CC30UKtsIpEhRX0tr9kglDMiSav+JeqwpaEG70GZW3Mrmv7bhfzBTtRIK2nAvVzqpy3bUvDYi5cUlaqkd0lZ4Xt+gyM4KfcMLcd9gbWSL3qJthem6BLRpUc1V3r3cE22TBJjocjPbDUpiZVfEZcnesIwTuND5vah3chj1DruDJBqOuv3RcdQZDAbRsD98HUWjKHIlTCUlR5sDxnF1LfnabwxdByF7FbCbeq9CuA1b6G7SlwoqsD4l6h82qE/ICzBVQTHarjP/0U4e8PEtIF9Zp+MgZI2VM47fowCVFfUWcYfVLFzLaL8BMrfH1MaY2J2gnPnGHh6YeKsJ2TrVRSVVvN9T/YCb+KEJSyRBBcTeO3t09nmpN0snYb4ygcNMWQiK+RpM8BvrCfOUAAUAAA==\u003e)\u003c/li\u003e\u003c/ul\u003e | 480.19 ns | 682.79 ns | 1.42 | 0.27 | True | | |\r\n|\u003cul\u003e\u003cli\u003e[GetString - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_arm64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.Text.Tests.Perf_Encoding.GetString(size%3a%20512%2c%20encName%3a%20%22utf-8%22).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.Text.Encoding/Perf.Encoding.cs#L37-#L39\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpVUXW/TMBR9R+I/WHtJAlmbtd2HKgXRlW0MVihdxAtClZvcNkaxHV3fbM2E+O3YWSnrJo3wYtkn55x77fh4AtxUCBIUmRc/2W0OCOy0EkU2g1KzOGZepkkBdbFSJCR4u6xT5CrNGx7C0nRz4JnpSi7UI+II01wQpGSrMaGY762PBl7IPI7SToItOwFDn7gE5/nWu64NgewksCY7GDKdKeByfqZSnQm16lwAXRPamW/EHQzZ4UEvZKBS5zBkexUt90/2gr+9zCo11mopVhVyElqZb95Yy1IUzWqiM/C+s/gX80hYeua9fE55dfV18oeOFTxPnmilR5+T/+JfKgIsEey40S15Yf4htNBHobKNQIoU9VxaswcqYUCWVPtP1CNNQQvapTZXxY1sfmwb/gdzplZCQRvudKWTumxHzWsjUl5MUUvtkLbC9/UCRXZR6AUvxF2DtZHNerO2Fc7WJaCNi2ru8u7tHmsbJcBEl5vZblISK7smLkv2hmWcwKXO70W9wX7U2z84SqKT4cHhsB91jo/7g0E0eB1FwyhyJUwlJUebA8ZxNZd87TeGroOQvQrYon5UIdymLXQ36UsFFVifEvUPm9Qn5BmYqqAYbdeZ/2An9/joBpCvrFM/CFlj5YzjcxSgsqLeIu6wmoVrGe03QOb2mOYcid0Kyplv7OGBibeakK1TXVRSxY97qu9xE983YYkkqIDYe2ePzr4v9WbpJMxXJnCYKQtBMV+DCX4DPPxFZQEFAAA=\u003e)\u003c/li\u003e\u003c/ul\u003e | 474.24 ns | 679.62 ns | 1.43 | 0.35 | True | | |\r\n\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.Text.Tests.Perf_Encoding_1.png\u003e)\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.Text.Tests.Perf_Encoding_2.png\u003e)\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.Text.Tests.Perf_Encoding_3.png\u003e)\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.Text.Tests.Perf_Encoding_4.png\u003e)\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.Text.Tests.Perf_Encoding_5.png\u003e)\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.Text.Tests.Perf_Encoding_6.png\u003e)\n[Test Report](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.Text.Tests.Perf_Encoding.html\u003e)\n\n### Repro\nGeneral Docs link: https://github.com/dotnet/performance/blob/main/docs/benchmarking-workflow-dotnet-runtime.md\n\n\u003cdetails\u003e\n   \u003csummary\u003eRepro Steps\u003c/summary\u003e\n\n\n#### Prerequisites (Files either built locally (with build.(sh/cmd) or downloaded from payload above (if same system setup) (in this order))\n- Libraries build extracted to `runtime/artifacts` or build instructions: [Libraries README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/libraries/README.md) args: `-subset libs+libs.tests -rc release -configuration Release -arch $RunArch -framework net8.0`\n- CoreCLR product build extracted to `runtime/artifacts/bin/coreclr/$RunOS.$RunArch.Release`, build instructions: [CoreCLR README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/coreclr/README.md) args: `-subset clr+libs -rc release -configuration Release -arch $RunArch -framework net8.0`\n- AOT MONO build extracted to `runtime/artifacts/bin/mono/$RunOS.$RunArch.Release`, build instructions: [MONO README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/mono/README.md) args: `-arch $RunArch -os $RunOS -s mono+libs+host+packs -c Release /p:CrossBuild=false /p:MonoLLVMUseCxx11Abi=false`\n- Dotnet SDK installed for dotnet commands\n- Running commands from the runtime folder\n\nLinux\n```cmd\n# Set $RunDir to the runtime directory\nRunDir=`pwd`\n\n# Set the OS, arch, and OSId\nRunOS=\u0027linux\u0027\nRunOSId=\u0027linux\u0027\nRunArch=\u0027x64\u0027\n\n# Create aot directory \nmkdir -p $RunDir/artifacts/bin/aot/sgen\nmkdir -p $RunDir/artifacts/bin/aot/pack\ncp -r $RunDir/artifacts/obj/mono/$RunOS.$RunArch.Release/mono/* $RunDir/artifacts/bin/aot/sgen\ncp -r $RunDir/artifacts/bin/microsoft.netcore.app.runtime.$RunOS-$RunArch/Release/* $RunDir/artifacts/bin/aot/pack\n\n# Create Core Root\n$RunDir/src/tests/build.sh release $RunArch generatelayoutonly /p:LibrariesConfiguration=Release\n\n# Clone performance \ngit clone --branch main --depth 1 --quiet https://github.com/dotnet/performance.git $RunDir/performance\n\n# One line run:\npython3 $RunDir/performance/scripts/benchmarks_ci.py --csproj $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --incremental no --architecture $RunArch -f net8.0 --filter \u0027System.Text.Tests.Perf_Encoding*\u0027 --bdn-artifacts $RunDir/artifacts/BenchmarkDotNet.Artifacts --bdn-arguments=\"--anyCategories Libraries Runtime  --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir/artifacts/bin/aot/sgen/mini/mono-sgen --customruntimepack $RunDir/artifacts/bin/aot/pack --aotcompilermode llvm --logBuildOutput --generateBinLog\"\n\n# Individual Commands:\n# Restore \ndotnet restore $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --packages $RunDir/performance/artifacts/packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Build\ndotnet build $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore /p:NuGetPackageRoot=$RunDir/performance/artifacts/packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Run\ndotnet run --project $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore --no-build -- --filter System.Text.Tests.Perf_Encoding* --anyCategories Libraries Runtime \" --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir/artifacts/bin/aot/sgen/mini/mono-sgen --customruntimepack $RunDir/artifacts/bin/aot/pack --aotcompilermode llvm --logBuildOutput --generateBinLog \" --artifacts $RunDir/artifacts/BenchmarkDotNet.Artifacts --packages $RunDir/performance/artifacts/packages --buildTimeout 1200\n```\n\nWindows\n```cmd\n# Set $RunDir to the runtime directory\n$RunDir=\"FullPathHere\"\n\n# Set the OS, arch, and OSId\nRunOS=\u0027windows\u0027\nRunOSId=\u0027win\u0027\nRunArch=\u0027x64\u0027\n\n# Create aot directory\nmkdir $RunDir\\artifacts\\bin\\aot\\sgen\nmkdir $RunDir\\artifacts\\bin\\aot\\pack\nxcopy $RunDir\\artifacts\\obj\\mono\\$RunOS.$RunArch.Release\\mono $RunDir\\artifacts\\bin\\aot\\sgen\\ /e /y\nxcopy $RunDir\\artifacts\\bin\\microsoft.netcore.app.runtime.$RunOSId-$RunArch\\Release $RunDir\\artifacts\\bin\\aot\\pack\\ /e /y\n\n# Create Core Root\n$RunDir\\src\\tests\\build.cmd release $RunArch generatelayoutonly /p:LibrariesConfiguration=Release\n\n# Clone performance \ngit clone --branch main --depth 1 --quiet https://github.com/dotnet/performance.git $RunDir\\performance\n\n# One line run:\npython3 $RunDir\\performance\\scripts\\benchmarks_ci.py --csproj $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --incremental no --architecture $RunArch -f net8.0 --filter \u0027System.Text.Tests.Perf_Encoding*\u0027 --bdn-artifacts $RunDir\\artifacts\\BenchmarkDotNet.Artifacts --bdn-arguments=\"--anyCategories Libraries Runtime  --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir\\artifacts\\bin\\aot\\sgen\\mini\\mono-sgen.exe --customruntimepack $RunDir\\artifacts\\bin\\aot\\pack --aotcompilermode llvm --logBuildOutput --generateBinLog\"\n\n# Individual Commands:\n# Restore \ndotnet restore $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --packages $RunDir\\performance\\artifacts\\packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Build\ndotnet build $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore /p:NuGetPackageRoot=$RunDir\\performance\\artifacts\\packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Run\ndotnet run --project $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore --no-build -- --filter System.Text.Tests.Perf_Encoding* --anyCategories Libraries Runtime \" --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir\\artifacts\\bin\\aot\\sgen\\mini\\mono-sgen.exe --customruntimepack $RunDir\\artifacts\\bin\\aot\\pack -aotcompilermode llvm --logBuildOutput --generateBinLog \" --artifacts $RunDir\\artifacts\\BenchmarkDotNet.Artifacts --packages $RunDir\\performance\\artifacts\\packages --buildTimeout 1200\n```\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n\n### System.Text.Tests.Perf_Encoding.GetChars(size: 16, encName: \"ascii\")\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n### System.Text.Tests.Perf_Encoding.GetString(size: 512, encName: \"ascii\")\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n### System.Text.Tests.Perf_Encoding.GetChars(size: 512, encName: \"ascii\")\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n### System.Text.Tests.Perf_Encoding.GetChars(size: 16, encName: \"utf-8\")\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n### System.Text.Tests.Perf_Encoding.GetChars(size: 512, encName: \"utf-8\")\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n### System.Text.Tests.Perf_Encoding.GetString(size: 512, encName: \"utf-8\")\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n\n\n### Docs\n\n[Profiling workflow for dotnet/runtime repository](https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-dotnet-runtime.md)\n[Benchmarking workflow for dotnet/runtime repository](https://github.com/dotnet/performance/blob/master/docs/benchmarking-workflow-dotnet-runtime.md)\n\n\u003c/details\u003e\n\r\n\r\n---\r\n\r\n\n### Run Information\n\nName | Value\n-- | --\nArchitecture | arm64\nOS | ubuntu 22.04\nQueue | AmpereUbuntu\nBaseline | [230dc86e9d92fbf191bf3b45b3f1b656f83d4426](https://github.com/dotnet/runtime/commit/230dc86e9d92fbf191bf3b45b3f1b656f83d4426)\nCompare | [404b286b23093cd93a985791934756f64a33483e](https://github.com/dotnet/runtime/commit/404b286b23093cd93a985791934756f64a33483e)\nDiff | [Diff](https://github.com/dotnet/runtime/compare/230dc86e9d92fbf191bf3b45b3f1b656f83d4426...404b286b23093cd93a985791934756f64a33483e)\nConfigs | CompilationMode:tiered, LLVM:true, MonoAOT:true, MonoInterpreter:false, RunKind:micro_mono\n\n\n### Regressions in System.IO.Tests.BinaryReaderTests\n\nBenchmark | Baseline | Test | Test/Base | Test Quality | Edge Detector | Baseline IR | Compare IR | IR Ratio\n-- | -- | -- | -- | -- | -- | -- | -- | --\n|\u003cul\u003e\u003cli\u003e[ReadLargeString - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_arm64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.IO.Tests.BinaryReaderTests.ReadLargeString.html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.IO/BinaryReaderTests.cs#L94-#L99\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpWUb2/TMBDG3yPxHfwuCWRt1rUbqhREWwYUWjbSijcITW5yTYz8Jzo7WzMhPjt2WsraSSO8iewnv+fu7NxlDlRXCAKk0c9+krsCEMi4YjxLoFQkjomXKSPBdLGShgnwDqkxUpkWDYew1t0CaKa7gjJ5BI4wLZiB1NhshEnie5vzvhcSj6Kwi2BPL0Gbz1SAi/nGW9TagOhMrzpO150xkxTrxGYB3CpuPaOYw8Igk/nftEklJ0quWV4hNUxJ/c2bKFEy3uzmKgPvO4l/Ec8wi2fe86ecs9nX+R8cK3ganiupRlfL/+Kn0gCWCPa5860p1/8wWukTk9nOIFiK6kbYYA9cTIMoTe0/co+UCVpgU6Vn/FY037AN/1FfypxJaMNe52pZl+3QotYspfwalVBOaWv8UK+QZe+5WlHO7hutjS3pJW0zXG5KQDsZsmnbw0aeKDs1tlNVuVsdDsXS2haGipK8Jhk14AbM70W9/knUOzk9X0avhqeD4VmvczEYRP3o4mUUDaPIpdCVEBTZPRDb+jeCbvwmoKsgJC8CsqqPMoT7wQpdJ32poAIbp0T1ww7lIzgBXXETo6068x+cZKuPbgFpbiOdBSFpQrnA8TtkIDNe7xV3Wc3GlYz2HSBxZ0wLiobcMVMQX9vLAx3vPSHZpIpXQsbHNdVbXcfbIixomOEQe2/t1dlfSb3bOgvxpQ6cpkvOTEw3oIPfqNM3FewEAAA=\u003e)\u003c/li\u003e\u003c/ul\u003e | 1.24 μs | 1.42 μs | 1.15 | 0.51 | False | | |\r\n\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.IO.Tests.BinaryReaderTests_1.png\u003e)\n[Test Report](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.IO.Tests.BinaryReaderTests.html\u003e)\n\n### Repro\nGeneral Docs link: https://github.com/dotnet/performance/blob/main/docs/benchmarking-workflow-dotnet-runtime.md\n\n\u003cdetails\u003e\n   \u003csummary\u003eRepro Steps\u003c/summary\u003e\n\n\n#### Prerequisites (Files either built locally (with build.(sh/cmd) or downloaded from payload above (if same system setup) (in this order))\n- Libraries build extracted to `runtime/artifacts` or build instructions: [Libraries README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/libraries/README.md) args: `-subset libs+libs.tests -rc release -configuration Release -arch $RunArch -framework net8.0`\n- CoreCLR product build extracted to `runtime/artifacts/bin/coreclr/$RunOS.$RunArch.Release`, build instructions: [CoreCLR README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/coreclr/README.md) args: `-subset clr+libs -rc release -configuration Release -arch $RunArch -framework net8.0`\n- AOT MONO build extracted to `runtime/artifacts/bin/mono/$RunOS.$RunArch.Release`, build instructions: [MONO README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/mono/README.md) args: `-arch $RunArch -os $RunOS -s mono+libs+host+packs -c Release /p:CrossBuild=false /p:MonoLLVMUseCxx11Abi=false`\n- Dotnet SDK installed for dotnet commands\n- Running commands from the runtime folder\n\nLinux\n```cmd\n# Set $RunDir to the runtime directory\nRunDir=`pwd`\n\n# Set the OS, arch, and OSId\nRunOS=\u0027linux\u0027\nRunOSId=\u0027linux\u0027\nRunArch=\u0027x64\u0027\n\n# Create aot directory \nmkdir -p $RunDir/artifacts/bin/aot/sgen\nmkdir -p $RunDir/artifacts/bin/aot/pack\ncp -r $RunDir/artifacts/obj/mono/$RunOS.$RunArch.Release/mono/* $RunDir/artifacts/bin/aot/sgen\ncp -r $RunDir/artifacts/bin/microsoft.netcore.app.runtime.$RunOS-$RunArch/Release/* $RunDir/artifacts/bin/aot/pack\n\n# Create Core Root\n$RunDir/src/tests/build.sh release $RunArch generatelayoutonly /p:LibrariesConfiguration=Release\n\n# Clone performance \ngit clone --branch main --depth 1 --quiet https://github.com/dotnet/performance.git $RunDir/performance\n\n# One line run:\npython3 $RunDir/performance/scripts/benchmarks_ci.py --csproj $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --incremental no --architecture $RunArch -f net8.0 --filter \u0027System.IO.Tests.BinaryReaderTests*\u0027 --bdn-artifacts $RunDir/artifacts/BenchmarkDotNet.Artifacts --bdn-arguments=\"--anyCategories Libraries Runtime  --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir/artifacts/bin/aot/sgen/mini/mono-sgen --customruntimepack $RunDir/artifacts/bin/aot/pack --aotcompilermode llvm --logBuildOutput --generateBinLog\"\n\n# Individual Commands:\n# Restore \ndotnet restore $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --packages $RunDir/performance/artifacts/packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Build\ndotnet build $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore /p:NuGetPackageRoot=$RunDir/performance/artifacts/packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Run\ndotnet run --project $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore --no-build -- --filter System.IO.Tests.BinaryReaderTests* --anyCategories Libraries Runtime \" --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir/artifacts/bin/aot/sgen/mini/mono-sgen --customruntimepack $RunDir/artifacts/bin/aot/pack --aotcompilermode llvm --logBuildOutput --generateBinLog \" --artifacts $RunDir/artifacts/BenchmarkDotNet.Artifacts --packages $RunDir/performance/artifacts/packages --buildTimeout 1200\n```\n\nWindows\n```cmd\n# Set $RunDir to the runtime directory\n$RunDir=\"FullPathHere\"\n\n# Set the OS, arch, and OSId\nRunOS=\u0027windows\u0027\nRunOSId=\u0027win\u0027\nRunArch=\u0027x64\u0027\n\n# Create aot directory\nmkdir $RunDir\\artifacts\\bin\\aot\\sgen\nmkdir $RunDir\\artifacts\\bin\\aot\\pack\nxcopy $RunDir\\artifacts\\obj\\mono\\$RunOS.$RunArch.Release\\mono $RunDir\\artifacts\\bin\\aot\\sgen\\ /e /y\nxcopy $RunDir\\artifacts\\bin\\microsoft.netcore.app.runtime.$RunOSId-$RunArch\\Release $RunDir\\artifacts\\bin\\aot\\pack\\ /e /y\n\n# Create Core Root\n$RunDir\\src\\tests\\build.cmd release $RunArch generatelayoutonly /p:LibrariesConfiguration=Release\n\n# Clone performance \ngit clone --branch main --depth 1 --quiet https://github.com/dotnet/performance.git $RunDir\\performance\n\n# One line run:\npython3 $RunDir\\performance\\scripts\\benchmarks_ci.py --csproj $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --incremental no --architecture $RunArch -f net8.0 --filter \u0027System.IO.Tests.BinaryReaderTests*\u0027 --bdn-artifacts $RunDir\\artifacts\\BenchmarkDotNet.Artifacts --bdn-arguments=\"--anyCategories Libraries Runtime  --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir\\artifacts\\bin\\aot\\sgen\\mini\\mono-sgen.exe --customruntimepack $RunDir\\artifacts\\bin\\aot\\pack --aotcompilermode llvm --logBuildOutput --generateBinLog\"\n\n# Individual Commands:\n# Restore \ndotnet restore $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --packages $RunDir\\performance\\artifacts\\packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Build\ndotnet build $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore /p:NuGetPackageRoot=$RunDir\\performance\\artifacts\\packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Run\ndotnet run --project $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore --no-build -- --filter System.IO.Tests.BinaryReaderTests* --anyCategories Libraries Runtime \" --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir\\artifacts\\bin\\aot\\sgen\\mini\\mono-sgen.exe --customruntimepack $RunDir\\artifacts\\bin\\aot\\pack -aotcompilermode llvm --logBuildOutput --generateBinLog \" --artifacts $RunDir\\artifacts\\BenchmarkDotNet.Artifacts --packages $RunDir\\performance\\artifacts\\packages --buildTimeout 1200\n```\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n\n### System.IO.Tests.BinaryReaderTests.ReadLargeString\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n\n\n### Docs\n\n[Profiling workflow for dotnet/runtime repository](https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-dotnet-runtime.md)\n[Benchmarking workflow for dotnet/runtime repository](https://github.com/dotnet/performance/blob/master/docs/benchmarking-workflow-dotnet-runtime.md)\n\n\u003c/details\u003e\n\r\n\r\n---\r\n\r\n\n### Run Information\n\nName | Value\n-- | --\nArchitecture | arm64\nOS | ubuntu 22.04\nQueue | AmpereUbuntu\nBaseline | [9b57a265c7efd3732b035bade005561a04767128](https://github.com/dotnet/runtime/commit/9b57a265c7efd3732b035bade005561a04767128)\nCompare | [404b286b23093cd93a985791934756f64a33483e](https://github.com/dotnet/runtime/commit/404b286b23093cd93a985791934756f64a33483e)\nDiff | [Diff](https://github.com/dotnet/runtime/compare/9b57a265c7efd3732b035bade005561a04767128...404b286b23093cd93a985791934756f64a33483e)\nConfigs | CompilationMode:tiered, LLVM:true, MonoAOT:true, MonoInterpreter:false, RunKind:micro_mono\n\n\n### Regressions in System.Text.Json.Tests.Perf_Get\n\nBenchmark | Baseline | Test | Test/Base | Test Quality | Edge Detector | Baseline IR | Compare IR | IR Ratio\n-- | -- | -- | -- | -- | -- | -- | -- | --\n|\u003cul\u003e\u003cli\u003e[GetString - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_arm64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.Text.Json.Tests.Perf_Get.GetString.html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.Text.Json/Utf8JsonReader/Perf.Get.cs#L248-#L260\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpWUb2/aMBDG30/ad/C7hC2FQBkqSJlGWdc/g43RaG+mCZnkIJ5iOzpf2qSa9tnnBMYKlbrsRSL78nueOzs+z4CbHEGCIvPiJ7tPAIGd5yKNF5BpFgTMiTUpoA7mioQE55A6R66ipOYQ1qaTAI9NR3KhjsAxRokgiMhmY0Ix1ykGfcdjDkdpB609HYKhT1xC5fnOuS0NgWyHUFD7xmhlR4ZMew64Xl4Cte1zSyjU5m+6Ra4mWq3FJkdOQivzzZlomYm0ns10DM53FvxiDgmLx87L55TT6dfZHxxzeB6eaaXHn8P/4q8VAWYI9r3TrXlq/iG0oY9CxTuBFBHqpbRmj1TCgMyodJ+ox5paDbBrbabpnaz/XRP+xlyojVDQhJ1vdFhmzdCkNCLi6Ry11FWkqfCqXKGIL1O94ql4qGNNZIveommGiyIDtB2h6uN6eIAn2nYLYKiz3eiwGUIruyUuM/aWxZygaiy35/f6J37vpDsI/bNR983otN8edntnw+Hgte+PfL9KYXIpOYoHYBw3S8kLtzasKvDYqxZblUcZvH1DedVJ+pJDDtYnQ/3DNuMTeAEmTylAW3XsPlrJNj6+A+Qb63Ta8lhtVRkHH1CAitNyH6k2q55UJaP9BsiqNUYJR2L3ghLmGrt5YIK9xmNFpNNcquC4pnIbN8G2CAuSoBQC573dOnuFlLtpJWGuMq0qZrJUUMALMK3fZAikSeQEAAA=\u003e)\u003c/li\u003e\u003c/ul\u003e | 13.49 μs | 16.54 μs | 1.23 | 0.25 | False | | |\r\n\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.Text.Json.Tests.Perf_Get_1.png\u003e)\n[Test Report](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.Text.Json.Tests.Perf_Get.html\u003e)\n\n### Repro\nGeneral Docs link: https://github.com/dotnet/performance/blob/main/docs/benchmarking-workflow-dotnet-runtime.md\n\n\u003cdetails\u003e\n   \u003csummary\u003eRepro Steps\u003c/summary\u003e\n\n\n#### Prerequisites (Files either built locally (with build.(sh/cmd) or downloaded from payload above (if same system setup) (in this order))\n- Libraries build extracted to `runtime/artifacts` or build instructions: [Libraries README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/libraries/README.md) args: `-subset libs+libs.tests -rc release -configuration Release -arch $RunArch -framework net8.0`\n- CoreCLR product build extracted to `runtime/artifacts/bin/coreclr/$RunOS.$RunArch.Release`, build instructions: [CoreCLR README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/coreclr/README.md) args: `-subset clr+libs -rc release -configuration Release -arch $RunArch -framework net8.0`\n- AOT MONO build extracted to `runtime/artifacts/bin/mono/$RunOS.$RunArch.Release`, build instructions: [MONO README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/mono/README.md) args: `-arch $RunArch -os $RunOS -s mono+libs+host+packs -c Release /p:CrossBuild=false /p:MonoLLVMUseCxx11Abi=false`\n- Dotnet SDK installed for dotnet commands\n- Running commands from the runtime folder\n\nLinux\n```cmd\n# Set $RunDir to the runtime directory\nRunDir=`pwd`\n\n# Set the OS, arch, and OSId\nRunOS=\u0027linux\u0027\nRunOSId=\u0027linux\u0027\nRunArch=\u0027x64\u0027\n\n# Create aot directory \nmkdir -p $RunDir/artifacts/bin/aot/sgen\nmkdir -p $RunDir/artifacts/bin/aot/pack\ncp -r $RunDir/artifacts/obj/mono/$RunOS.$RunArch.Release/mono/* $RunDir/artifacts/bin/aot/sgen\ncp -r $RunDir/artifacts/bin/microsoft.netcore.app.runtime.$RunOS-$RunArch/Release/* $RunDir/artifacts/bin/aot/pack\n\n# Create Core Root\n$RunDir/src/tests/build.sh release $RunArch generatelayoutonly /p:LibrariesConfiguration=Release\n\n# Clone performance \ngit clone --branch main --depth 1 --quiet https://github.com/dotnet/performance.git $RunDir/performance\n\n# One line run:\npython3 $RunDir/performance/scripts/benchmarks_ci.py --csproj $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --incremental no --architecture $RunArch -f net8.0 --filter \u0027System.Text.Json.Tests.Perf_Get*\u0027 --bdn-artifacts $RunDir/artifacts/BenchmarkDotNet.Artifacts --bdn-arguments=\"--anyCategories Libraries Runtime  --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir/artifacts/bin/aot/sgen/mini/mono-sgen --customruntimepack $RunDir/artifacts/bin/aot/pack --aotcompilermode llvm --logBuildOutput --generateBinLog\"\n\n# Individual Commands:\n# Restore \ndotnet restore $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --packages $RunDir/performance/artifacts/packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Build\ndotnet build $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore /p:NuGetPackageRoot=$RunDir/performance/artifacts/packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Run\ndotnet run --project $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore --no-build -- --filter System.Text.Json.Tests.Perf_Get* --anyCategories Libraries Runtime \" --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir/artifacts/bin/aot/sgen/mini/mono-sgen --customruntimepack $RunDir/artifacts/bin/aot/pack --aotcompilermode llvm --logBuildOutput --generateBinLog \" --artifacts $RunDir/artifacts/BenchmarkDotNet.Artifacts --packages $RunDir/performance/artifacts/packages --buildTimeout 1200\n```\n\nWindows\n```cmd\n# Set $RunDir to the runtime directory\n$RunDir=\"FullPathHere\"\n\n# Set the OS, arch, and OSId\nRunOS=\u0027windows\u0027\nRunOSId=\u0027win\u0027\nRunArch=\u0027x64\u0027\n\n# Create aot directory\nmkdir $RunDir\\artifacts\\bin\\aot\\sgen\nmkdir $RunDir\\artifacts\\bin\\aot\\pack\nxcopy $RunDir\\artifacts\\obj\\mono\\$RunOS.$RunArch.Release\\mono $RunDir\\artifacts\\bin\\aot\\sgen\\ /e /y\nxcopy $RunDir\\artifacts\\bin\\microsoft.netcore.app.runtime.$RunOSId-$RunArch\\Release $RunDir\\artifacts\\bin\\aot\\pack\\ /e /y\n\n# Create Core Root\n$RunDir\\src\\tests\\build.cmd release $RunArch generatelayoutonly /p:LibrariesConfiguration=Release\n\n# Clone performance \ngit clone --branch main --depth 1 --quiet https://github.com/dotnet/performance.git $RunDir\\performance\n\n# One line run:\npython3 $RunDir\\performance\\scripts\\benchmarks_ci.py --csproj $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --incremental no --architecture $RunArch -f net8.0 --filter \u0027System.Text.Json.Tests.Perf_Get*\u0027 --bdn-artifacts $RunDir\\artifacts\\BenchmarkDotNet.Artifacts --bdn-arguments=\"--anyCategories Libraries Runtime  --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir\\artifacts\\bin\\aot\\sgen\\mini\\mono-sgen.exe --customruntimepack $RunDir\\artifacts\\bin\\aot\\pack --aotcompilermode llvm --logBuildOutput --generateBinLog\"\n\n# Individual Commands:\n# Restore \ndotnet restore $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --packages $RunDir\\performance\\artifacts\\packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Build\ndotnet build $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore /p:NuGetPackageRoot=$RunDir\\performance\\artifacts\\packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Run\ndotnet run --project $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore --no-build -- --filter System.Text.Json.Tests.Perf_Get* --anyCategories Libraries Runtime \" --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir\\artifacts\\bin\\aot\\sgen\\mini\\mono-sgen.exe --customruntimepack $RunDir\\artifacts\\bin\\aot\\pack -aotcompilermode llvm --logBuildOutput --generateBinLog \" --artifacts $RunDir\\artifacts\\BenchmarkDotNet.Artifacts --packages $RunDir\\performance\\artifacts\\packages --buildTimeout 1200\n```\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n\n### System.Text.Json.Tests.Perf_Get.GetString\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n\n\n### Docs\n\n[Profiling workflow for dotnet/runtime repository](https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-dotnet-runtime.md)\n[Benchmarking workflow for dotnet/runtime repository](https://github.com/dotnet/performance/blob/master/docs/benchmarking-workflow-dotnet-runtime.md)\n\n\u003c/details\u003e\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhp-DRw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc56waxZ",
                                           "createdAt":  "2024-04-16T08:15:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "performanceautofiler",
                                           "body":  "\n### Run Information\n\nName | Value\n-- | --\nArchitecture | arm64\nOS | ubuntu 22.04\nQueue | AmpereUbuntu\nBaseline | [230dc86e9d92fbf191bf3b45b3f1b656f83d4426](https://github.com/dotnet/runtime/commit/230dc86e9d92fbf191bf3b45b3f1b656f83d4426)\nCompare | [404b286b23093cd93a985791934756f64a33483e](https://github.com/dotnet/runtime/commit/404b286b23093cd93a985791934756f64a33483e)\nDiff | [Diff](https://github.com/dotnet/runtime/compare/230dc86e9d92fbf191bf3b45b3f1b656f83d4426...404b286b23093cd93a985791934756f64a33483e)\nConfigs | CompilationMode:tiered, LLVM:true, MonoAOT:true, MonoInterpreter:false, RunKind:micro_mono\n\n\n### Regressions in System.Text.Perf_Ascii\n\nBenchmark | Baseline | Test | Test/Base | Test Quality | Edge Detector | Baseline IR | Compare IR | IR Ratio\n-- | -- | -- | -- | -- | -- | -- | -- | --\n|\u003cul\u003e\u003cli\u003e[ToUtf16 - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_arm64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.Text.Perf_Ascii.ToUtf16(Size%3a%206).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.Text.Encoding/Perf.Ascii.cs#L114-#L116\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpWUXW/TMBSG75H4D75LAlmbfqyqKgXRjcEGLZQ2cINQ5SanjZE/omNnaybEb8dOS1k7aYSbyH7zvOccO+dkClSXCAKk0c9+krscEMhFyXg2h0KROCZepowE08ZSGibAO6YukMo0rzmEtW7nQDPdFpTJE3CMac4MpMZmI0wS39sO+l5IPIrCLoIDnYA2H6kAF/O1t6i0AdFKYGtaM8D1cqxTxlqJ+mLWnYG/YPcwIoPgb7J5KS+VXLNNidQwJfU371KJgvF6N1UZeN9J/It4hlk8854/5ZxMvk7/4FjC0/BUSTX+lPwXfyMNYIFgn3vfmnL9D6OVPjCZ7Q2CpaiWwgZ74GIaRGEq/5F7rEzQALtResJvRf3lmvDv9ZXcMAlN2NlGJVXRDM0rzVLKZ6iEckpT43W1Qpa942pFObuvtSa2eXfeNMPVtgC08yDrZj1u30tlZwUwUcV+dTwKibUtDBUFeUUyasCNld+Nuv2zqHvWGSTRcNQ5H/WGrc6wf97r9F5G0SiKXApdCkHR9jyhuFkKuvXrgK6CkLwIyKo6yRAexil0nfS5hBJsnALVDzuKj+A56JKbGG3Vmf/gJDt9fAtINzZSLwhJHcoFjt8iA5nx6qC4y6o3rmS07wCJO2OaUzTkjpmc+NpeHuj44AnJNlW8FDI+rana6TreFWFBwwyH2Htjr87+QKr91lmIL3XgNF1wZmK6BR38Bk+qX43iBAAA\u003e)\u003c/li\u003e\u003c/ul\u003e | 11.91 ns | 13.09 ns | 1.10 | 0.05 | False | | |\r\n|\u003cul\u003e\u003cli\u003e[ToUtf16 - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_arm64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.Text.Perf_Ascii.ToUtf16(Size%3a%20128).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.Text.Encoding/Perf.Ascii.cs#L114-#L116\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpWUb2/TMBDG3yPxHfwuCWRtmm5VqRREVwYMWiht4A1ClZtcGyP/ic7OlkyIz46TlrJ20ghvIvvJ77k7O3eZAdUFggBp9JOf5DYDBHJZMJ4uIFckioiTKiPBdLGQhglwjqlLpDLJGg5ho7sZ0FR3BWXyBBxjkjEDibHZCJPEdcrBueMTh6KwC+9Ax6DNRyqgjvnKWVbagOjEUJrOHHCzGuuEsU6svphNb+Au2R2MSC8cen/TLQo5UXLDtgVSw5TU35yJEjnjzW6mUnC+k+gXcQyzeOo8fcw5nX6d/cGxgMfhmZJq/Cn+L/5aGsAcwT73vg3l+h9GK31gMt0bBEtQrYQNds/FNIjcVO4D91gZrwV2rfSU34jm27Xh3+sruWUS2rDzrYqrvB2aVZollM9RCVUrbY3vqjWy9C1Xa8rZXaO1sS3CRdsMV2UOaCdCNu163MATZacFMFb5fnU8DLG1LQ0VOXlJUmqgHiw3DMLzsyA86w3iYDjqXYz6w074oh+Gg4vnQTAKgjqFLoSgaLueUNyuBC3dJmBdgU+eeWRdnWTwDwPl1530uYACbJwc1Q87jA/gBeiCmwht1al77yQ7fXwDSLc2Ut/zSROqDhy9QQYy5dVBqS+r2dQlo30HSOozJhlFQ26ZyYir7eWBjg4en5SJ4oWQ0WlN1U7X0a4ICxpmOETOa3t19hdS7be1hbhSe7Wmc85MREvQ3m9+5MIb5AQAAA==\u003e)\u003c/li\u003e\u003c/ul\u003e | 42.53 ns | 95.62 ns | 2.25 | 0.01 | True | | |\r\n\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.Text.Perf_Ascii_1.png\u003e)\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.Text.Perf_Ascii_2.png\u003e)\n[Test Report](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.Text.Perf_Ascii.html\u003e)\n\n### Repro\nGeneral Docs link: https://github.com/dotnet/performance/blob/main/docs/benchmarking-workflow-dotnet-runtime.md\n\n\u003cdetails\u003e\n   \u003csummary\u003eRepro Steps\u003c/summary\u003e\n\n\n#### Prerequisites (Files either built locally (with build.(sh/cmd) or downloaded from payload above (if same system setup) (in this order))\n- Libraries build extracted to `runtime/artifacts` or build instructions: [Libraries README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/libraries/README.md) args: `-subset libs+libs.tests -rc release -configuration Release -arch $RunArch -framework net8.0`\n- CoreCLR product build extracted to `runtime/artifacts/bin/coreclr/$RunOS.$RunArch.Release`, build instructions: [CoreCLR README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/coreclr/README.md) args: `-subset clr+libs -rc release -configuration Release -arch $RunArch -framework net8.0`\n- AOT MONO build extracted to `runtime/artifacts/bin/mono/$RunOS.$RunArch.Release`, build instructions: [MONO README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/mono/README.md) args: `-arch $RunArch -os $RunOS -s mono+libs+host+packs -c Release /p:CrossBuild=false /p:MonoLLVMUseCxx11Abi=false`\n- Dotnet SDK installed for dotnet commands\n- Running commands from the runtime folder\n\nLinux\n```cmd\n# Set $RunDir to the runtime directory\nRunDir=`pwd`\n\n# Set the OS, arch, and OSId\nRunOS=\u0027linux\u0027\nRunOSId=\u0027linux\u0027\nRunArch=\u0027x64\u0027\n\n# Create aot directory \nmkdir -p $RunDir/artifacts/bin/aot/sgen\nmkdir -p $RunDir/artifacts/bin/aot/pack\ncp -r $RunDir/artifacts/obj/mono/$RunOS.$RunArch.Release/mono/* $RunDir/artifacts/bin/aot/sgen\ncp -r $RunDir/artifacts/bin/microsoft.netcore.app.runtime.$RunOS-$RunArch/Release/* $RunDir/artifacts/bin/aot/pack\n\n# Create Core Root\n$RunDir/src/tests/build.sh release $RunArch generatelayoutonly /p:LibrariesConfiguration=Release\n\n# Clone performance \ngit clone --branch main --depth 1 --quiet https://github.com/dotnet/performance.git $RunDir/performance\n\n# One line run:\npython3 $RunDir/performance/scripts/benchmarks_ci.py --csproj $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --incremental no --architecture $RunArch -f net8.0 --filter \u0027System.Text.Perf_Ascii*\u0027 --bdn-artifacts $RunDir/artifacts/BenchmarkDotNet.Artifacts --bdn-arguments=\"--anyCategories Libraries Runtime  --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir/artifacts/bin/aot/sgen/mini/mono-sgen --customruntimepack $RunDir/artifacts/bin/aot/pack --aotcompilermode llvm --logBuildOutput --generateBinLog\"\n\n# Individual Commands:\n# Restore \ndotnet restore $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --packages $RunDir/performance/artifacts/packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Build\ndotnet build $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore /p:NuGetPackageRoot=$RunDir/performance/artifacts/packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Run\ndotnet run --project $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore --no-build -- --filter System.Text.Perf_Ascii* --anyCategories Libraries Runtime \" --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir/artifacts/bin/aot/sgen/mini/mono-sgen --customruntimepack $RunDir/artifacts/bin/aot/pack --aotcompilermode llvm --logBuildOutput --generateBinLog \" --artifacts $RunDir/artifacts/BenchmarkDotNet.Artifacts --packages $RunDir/performance/artifacts/packages --buildTimeout 1200\n```\n\nWindows\n```cmd\n# Set $RunDir to the runtime directory\n$RunDir=\"FullPathHere\"\n\n# Set the OS, arch, and OSId\nRunOS=\u0027windows\u0027\nRunOSId=\u0027win\u0027\nRunArch=\u0027x64\u0027\n\n# Create aot directory\nmkdir $RunDir\\artifacts\\bin\\aot\\sgen\nmkdir $RunDir\\artifacts\\bin\\aot\\pack\nxcopy $RunDir\\artifacts\\obj\\mono\\$RunOS.$RunArch.Release\\mono $RunDir\\artifacts\\bin\\aot\\sgen\\ /e /y\nxcopy $RunDir\\artifacts\\bin\\microsoft.netcore.app.runtime.$RunOSId-$RunArch\\Release $RunDir\\artifacts\\bin\\aot\\pack\\ /e /y\n\n# Create Core Root\n$RunDir\\src\\tests\\build.cmd release $RunArch generatelayoutonly /p:LibrariesConfiguration=Release\n\n# Clone performance \ngit clone --branch main --depth 1 --quiet https://github.com/dotnet/performance.git $RunDir\\performance\n\n# One line run:\npython3 $RunDir\\performance\\scripts\\benchmarks_ci.py --csproj $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --incremental no --architecture $RunArch -f net8.0 --filter \u0027System.Text.Perf_Ascii*\u0027 --bdn-artifacts $RunDir\\artifacts\\BenchmarkDotNet.Artifacts --bdn-arguments=\"--anyCategories Libraries Runtime  --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir\\artifacts\\bin\\aot\\sgen\\mini\\mono-sgen.exe --customruntimepack $RunDir\\artifacts\\bin\\aot\\pack --aotcompilermode llvm --logBuildOutput --generateBinLog\"\n\n# Individual Commands:\n# Restore \ndotnet restore $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --packages $RunDir\\performance\\artifacts\\packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Build\ndotnet build $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore /p:NuGetPackageRoot=$RunDir\\performance\\artifacts\\packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Run\ndotnet run --project $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore --no-build -- --filter System.Text.Perf_Ascii* --anyCategories Libraries Runtime \" --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir\\artifacts\\bin\\aot\\sgen\\mini\\mono-sgen.exe --customruntimepack $RunDir\\artifacts\\bin\\aot\\pack -aotcompilermode llvm --logBuildOutput --generateBinLog \" --artifacts $RunDir\\artifacts\\BenchmarkDotNet.Artifacts --packages $RunDir\\performance\\artifacts\\packages --buildTimeout 1200\n```\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n\n### System.Text.Perf_Ascii.ToUtf16(Size: 6)\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n### System.Text.Perf_Ascii.ToUtf16(Size: 128)\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n\n\n### Docs\n\n[Profiling workflow for dotnet/runtime repository](https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-dotnet-runtime.md)\n[Benchmarking workflow for dotnet/runtime repository](https://github.com/dotnet/performance/blob/master/docs/benchmarking-workflow-dotnet-runtime.md)\n\n\u003c/details\u003e\n\r\n\r\n---\r\n\r\n\n### Run Information\n\nName | Value\n-- | --\nArchitecture | arm64\nOS | ubuntu 22.04\nQueue | AmpereUbuntu\nBaseline | [230dc86e9d92fbf191bf3b45b3f1b656f83d4426](https://github.com/dotnet/runtime/commit/230dc86e9d92fbf191bf3b45b3f1b656f83d4426)\nCompare | [404b286b23093cd93a985791934756f64a33483e](https://github.com/dotnet/runtime/commit/404b286b23093cd93a985791934756f64a33483e)\nDiff | [Diff](https://github.com/dotnet/runtime/compare/230dc86e9d92fbf191bf3b45b3f1b656f83d4426...404b286b23093cd93a985791934756f64a33483e)\nConfigs | CompilationMode:tiered, LLVM:true, MonoAOT:true, MonoInterpreter:false, RunKind:micro_mono\n\n\n### Regressions in System.Text.Perf_Utf8Encoding\n\nBenchmark | Baseline | Test | Test/Base | Test Quality | Edge Detector | Baseline IR | Compare IR | IR Ratio\n-- | -- | -- | -- | -- | -- | -- | -- | --\n|\u003cul\u003e\u003cli\u003e[GetString - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_arm64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.Text.Perf_Utf8Encoding.GetString(Input%3a%20EnglishAllAscii).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.Text.Encoding/Perf.Utf8Encoding.cs#L33-#L34\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpWU227TQBCG75F4h72zDWnqpqGUSEakpS2FBkpquEGo2tqTeNAerNlxG1eIZ2fthtCkUjE31u7v75+ZPcxOQLqKQINh9+SnuCmAQBxUqPIplFYkiQhyywZ4myrDqCFYpw5ImqxoOYKZ2y5A5m5bSzQb4JiyAhky9tkEGhEGi71h0BOBJO0H0YpOwfFHqaGJ+Sa4qB2D7qew4P450OzyC8/2j0xmczTz/gnwBZMfhaemrHgkjsxcoSvGSo1dhhj9LWJamUNrZjivSDJa474Fh1aXqNrZxOYQfBfJLxEwejwPnj7mPDv7OvmDUwWPwxNr7PhT+l/8qWGgksB/l76ZVO4fRi99QJMvDRozspfaB7vnQge65Dp84B5bjjpgp9adqWvdnmgX/r3zJ4IGurDnc5vWZTe0qB1mUp2T1bZRuhrf1VeE+YmyV1Lhbat1sU0H064ZjhYlkO8T017i9Wt9aH0PAaW2XI7WWyT1tguWuhSvRS4ZmnYLB/FguBUPtnb20nh/tPNiNIz7g5fx7qth/DyOR3HcpHCV1pLwFoSk+aWWi7AN2FTQE88icVVvZOit2qzX3KTPFVTg45Rkf/gWfQBPwVWKE/JV5+G9ldzp42sgOfeRdqOeaEM1gZNjQjC5qldKs1ntpCmZ/D8g0awxKySxuEEuROj85oFLVp6eWGRWVdokmzXVd7pL7orwICMrSIK3fuv8w1Ivp41FhMZFjeZKhZzIBbjoN1fXlQL6BAAA\u003e)\u003c/li\u003e\u003c/ul\u003e | 194.50 μs | 264.61 μs | 1.36 | 0.41 | True | | |\r\n\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.Text.Perf_Utf8Encoding_1.png\u003e)\n[Test Report](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.Text.Perf_Utf8Encoding.html\u003e)\n\n### Repro\nGeneral Docs link: https://github.com/dotnet/performance/blob/main/docs/benchmarking-workflow-dotnet-runtime.md\n\n\u003cdetails\u003e\n   \u003csummary\u003eRepro Steps\u003c/summary\u003e\n\n\n#### Prerequisites (Files either built locally (with build.(sh/cmd) or downloaded from payload above (if same system setup) (in this order))\n- Libraries build extracted to `runtime/artifacts` or build instructions: [Libraries README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/libraries/README.md) args: `-subset libs+libs.tests -rc release -configuration Release -arch $RunArch -framework net8.0`\n- CoreCLR product build extracted to `runtime/artifacts/bin/coreclr/$RunOS.$RunArch.Release`, build instructions: [CoreCLR README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/coreclr/README.md) args: `-subset clr+libs -rc release -configuration Release -arch $RunArch -framework net8.0`\n- AOT MONO build extracted to `runtime/artifacts/bin/mono/$RunOS.$RunArch.Release`, build instructions: [MONO README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/mono/README.md) args: `-arch $RunArch -os $RunOS -s mono+libs+host+packs -c Release /p:CrossBuild=false /p:MonoLLVMUseCxx11Abi=false`\n- Dotnet SDK installed for dotnet commands\n- Running commands from the runtime folder\n\nLinux\n```cmd\n# Set $RunDir to the runtime directory\nRunDir=`pwd`\n\n# Set the OS, arch, and OSId\nRunOS=\u0027linux\u0027\nRunOSId=\u0027linux\u0027\nRunArch=\u0027x64\u0027\n\n# Create aot directory \nmkdir -p $RunDir/artifacts/bin/aot/sgen\nmkdir -p $RunDir/artifacts/bin/aot/pack\ncp -r $RunDir/artifacts/obj/mono/$RunOS.$RunArch.Release/mono/* $RunDir/artifacts/bin/aot/sgen\ncp -r $RunDir/artifacts/bin/microsoft.netcore.app.runtime.$RunOS-$RunArch/Release/* $RunDir/artifacts/bin/aot/pack\n\n# Create Core Root\n$RunDir/src/tests/build.sh release $RunArch generatelayoutonly /p:LibrariesConfiguration=Release\n\n# Clone performance \ngit clone --branch main --depth 1 --quiet https://github.com/dotnet/performance.git $RunDir/performance\n\n# One line run:\npython3 $RunDir/performance/scripts/benchmarks_ci.py --csproj $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --incremental no --architecture $RunArch -f net8.0 --filter \u0027System.Text.Perf_Utf8Encoding*\u0027 --bdn-artifacts $RunDir/artifacts/BenchmarkDotNet.Artifacts --bdn-arguments=\"--anyCategories Libraries Runtime  --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir/artifacts/bin/aot/sgen/mini/mono-sgen --customruntimepack $RunDir/artifacts/bin/aot/pack --aotcompilermode llvm --logBuildOutput --generateBinLog\"\n\n# Individual Commands:\n# Restore \ndotnet restore $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --packages $RunDir/performance/artifacts/packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Build\ndotnet build $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore /p:NuGetPackageRoot=$RunDir/performance/artifacts/packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Run\ndotnet run --project $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore --no-build -- --filter System.Text.Perf_Utf8Encoding* --anyCategories Libraries Runtime \" --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir/artifacts/bin/aot/sgen/mini/mono-sgen --customruntimepack $RunDir/artifacts/bin/aot/pack --aotcompilermode llvm --logBuildOutput --generateBinLog \" --artifacts $RunDir/artifacts/BenchmarkDotNet.Artifacts --packages $RunDir/performance/artifacts/packages --buildTimeout 1200\n```\n\nWindows\n```cmd\n# Set $RunDir to the runtime directory\n$RunDir=\"FullPathHere\"\n\n# Set the OS, arch, and OSId\nRunOS=\u0027windows\u0027\nRunOSId=\u0027win\u0027\nRunArch=\u0027x64\u0027\n\n# Create aot directory\nmkdir $RunDir\\artifacts\\bin\\aot\\sgen\nmkdir $RunDir\\artifacts\\bin\\aot\\pack\nxcopy $RunDir\\artifacts\\obj\\mono\\$RunOS.$RunArch.Release\\mono $RunDir\\artifacts\\bin\\aot\\sgen\\ /e /y\nxcopy $RunDir\\artifacts\\bin\\microsoft.netcore.app.runtime.$RunOSId-$RunArch\\Release $RunDir\\artifacts\\bin\\aot\\pack\\ /e /y\n\n# Create Core Root\n$RunDir\\src\\tests\\build.cmd release $RunArch generatelayoutonly /p:LibrariesConfiguration=Release\n\n# Clone performance \ngit clone --branch main --depth 1 --quiet https://github.com/dotnet/performance.git $RunDir\\performance\n\n# One line run:\npython3 $RunDir\\performance\\scripts\\benchmarks_ci.py --csproj $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --incremental no --architecture $RunArch -f net8.0 --filter \u0027System.Text.Perf_Utf8Encoding*\u0027 --bdn-artifacts $RunDir\\artifacts\\BenchmarkDotNet.Artifacts --bdn-arguments=\"--anyCategories Libraries Runtime  --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir\\artifacts\\bin\\aot\\sgen\\mini\\mono-sgen.exe --customruntimepack $RunDir\\artifacts\\bin\\aot\\pack --aotcompilermode llvm --logBuildOutput --generateBinLog\"\n\n# Individual Commands:\n# Restore \ndotnet restore $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --packages $RunDir\\performance\\artifacts\\packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Build\ndotnet build $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore /p:NuGetPackageRoot=$RunDir\\performance\\artifacts\\packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Run\ndotnet run --project $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore --no-build -- --filter System.Text.Perf_Utf8Encoding* --anyCategories Libraries Runtime \" --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir\\artifacts\\bin\\aot\\sgen\\mini\\mono-sgen.exe --customruntimepack $RunDir\\artifacts\\bin\\aot\\pack -aotcompilermode llvm --logBuildOutput --generateBinLog \" --artifacts $RunDir\\artifacts\\BenchmarkDotNet.Artifacts --packages $RunDir\\performance\\artifacts\\packages --buildTimeout 1200\n```\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n\n### System.Text.Perf_Utf8Encoding.GetString(Input: EnglishAllAscii)\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n\n\n### Docs\n\n[Profiling workflow for dotnet/runtime repository](https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-dotnet-runtime.md)\n[Benchmarking workflow for dotnet/runtime repository](https://github.com/dotnet/performance/blob/master/docs/benchmarking-workflow-dotnet-runtime.md)\n\n\u003c/details\u003e\n\r\n\r\n---\r\n\r\n\n### Run Information\n\nName | Value\n-- | --\nArchitecture | arm64\nOS | ubuntu 22.04\nQueue | AmpereUbuntu\nBaseline | [230dc86e9d92fbf191bf3b45b3f1b656f83d4426](https://github.com/dotnet/runtime/commit/230dc86e9d92fbf191bf3b45b3f1b656f83d4426)\nCompare | [404b286b23093cd93a985791934756f64a33483e](https://github.com/dotnet/runtime/commit/404b286b23093cd93a985791934756f64a33483e)\nDiff | [Diff](https://github.com/dotnet/runtime/compare/230dc86e9d92fbf191bf3b45b3f1b656f83d4426...404b286b23093cd93a985791934756f64a33483e)\nConfigs | CompilationMode:tiered, LLVM:true, MonoAOT:true, MonoInterpreter:false, RunKind:micro_mono\n\n\n### Regressions in System.IO.Tests.StreamReaderReadLineTests\n\nBenchmark | Baseline | Test | Test/Base | Test Quality | Edge Detector | Baseline IR | Compare IR | IR Ratio\n-- | -- | -- | -- | -- | -- | -- | -- | --\n|\u003cul\u003e\u003cli\u003e[ReadLine - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_arm64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.IO.Tests.StreamReaderReadLineTests.ReadLine(LineLengthRange%3a%20%5b1025%2c%202048%5d).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.IO/StreamReaderReadLineTests.cs#L24-#L32\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpVUXW/TMBR9R+I/+C0JZG1W2lJVCqIrAwotG2nEyzRNbnKbGMV2dO1szYT47dhpV9ZOGuHF8j0+59zrj+sFUFUhcBBavfhF7nJAIGcVK9IISknCkDip1AJ0FyuhGQfnkHWGVCR5w0NYq24ONFVdTpk4Ik4wyZmGRJtshAniOpth3/GJQ5Gbibdnx6D0N8rBer53lrXSwDuzi47FVWepESiPTBZAO86ZgO3KQ+TaYQ4i03lERQZjcnUa9AY+6QX90bX3t6yoElMp1iyrkGomhbpyppKXrGiihUzBuSbhb+JoZuip8/I55Xz+Y/FAxwqeJy+kkJOL+L/4M6EBSwQz7nRrWqh/CA30lYl0J+AsQXnDjdkjFVPAS127T9QTqb0WtJlU8+KWN3fchv9FnYvM3FAb7mUm47psR81rxRJaXKLk0iJthZ/rFbL0UyFXtGD3DdZGFvWithnONyWg6RzRPOvDhz6VpqsAY1nuZodNExvZUlNeknckpRpsA7q9oNc/CXonp8M4GI1PB+P+sBP0B6O3weB1EIyDwKZQFecU2T0QitkNpxu3MbQV+OSVR1b1UQZ/33i+fUnfK6jA+JQof5qmfUKOQFWFDtFUnbqPdrLFJ7eANDNObzyfNFbWOPyIDERa1HvEHlYT2JLRrAESu8ckp6jJHdM5cZU5PFDhXuOTTSKLiovwuKZ6i6twW4QhaqYLCJ0P5ujMV1PvQishrlCexVRZMB3SDSjvDygPF8IMBQAA\u003e)\u003c/li\u003e\u003c/ul\u003e | 25.74 μs | 28.66 μs | 1.11 | 0.45 | True | | |\r\n|\u003cul\u003e\u003cli\u003e[ReadLine - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_arm64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.IO.Tests.StreamReaderReadLineTests.ReadLine(LineLengthRange%3a%20%5b%20%20%200%2c%201024%5d).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.IO/StreamReaderReadLineTests.cs#L24-#L32\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpVUXW/TMBR9R+I/3LckkLVp96lKQXRlwKBlI6t4mabJTW4To9iOrp2tmRC/HTvtyj6kEV4s3+Nzzr127s0Mma4JBUqjX/2C2wIJ4bjmZZZgpSCOwcuUkWj6VEvDBXqPWcfEZFq0PMKl7hfIMt0XjMsnxDGlBTeYGpsNuATfWx3seSF4jITdBFv2HLX5xgQ6z/feRaMNit7pWc/hundhCJlIbBYkt065xPXJfeS7ZYoyN0XCZI4juASAKIRBNNy7Cv6WldRyouSS5zUxw5XUl95EiYqXbTRTGXpXEP8Gz3BLz7zXLymn0x+zezrV+DJ5pqQan83/i38qDVJFaNeNbslK/Q+hhb5ymW0EgqekroU1e6DiGkVlGv+ZeqxM0IF2qvS0vBHtN+7C/6JPZG6/UBfuea7mTdWNWjSap6w8JyWUQ7oKPzcL4tmnUi1Yye9arIssGSZdM5ysKiQ7ObJt68eNPlF2qpDmqtrsHg/N3MouDBMVvIOMGXQD6A9tH+9Ew53BwTw6Gg32R3sHvcH+4dHu4fBtFI2iyKXQtRCM+B0Co/xasJXfGroKQngTwKJ5kiHcDl7oOul7jTVan4rUTzu0z8gJ6ro0MdmqM//BTdb4+AaJ5dZpNwihtXLG8UfiKLOy2SLusdrAlUz2DAncHdOCkYFbbgrwtX081PFWE8IqVWUtZPy0pmaN63hdhCUabkqMvQ/26eyvptmETgK+1IHDdFVyE7MV6uAP7RiQTAwFAAA=\u003e)\u003c/li\u003e\u003c/ul\u003e | 23.71 μs | 31.04 μs | 1.31 | 0.33 | False | | |\r\n|\u003cul\u003e\u003cli\u003e[ReadLine - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_arm64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.IO.Tests.StreamReaderReadLineTests.ReadLine(LineLengthRange%3a%20%5b%20129%2c%201024%5d).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.IO/StreamReaderReadLineTests.cs#L24-#L32\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpVUUW/TMBB+R+I/+C0JZG0aSlUqBdGVMQotG2nFyzRNbnJNjGI7OjtbMyF+O3balbWTRnixfJ+/77uzc5c5UFUhcBBavfhF7nJAIKcVK9IYSkmiiDip1AJ0FyuhGQfnkHWKVCR5w0NYq24ONFVdTpk4Io4xyZmGRJtshAniOptB3/GJQ5GbjbdnL0Hpb5SD9fzgLGqlgXemFx2Lq85CI1AemyyAdp0xAduTh8i1ywxEpvOYigxG5Ir0wnc+6QVh/9r7W1ZciYkUa5ZVSDWTQl05E8lLVjTRXKbgXJPoN3E0M/TUefmccjb7MX+gYwXPk+dSyPHF8r/4U6EBSwSz7nRrWqh/CA30lYl0J+AsQXnDjdkjFVPAS127T9Rjqb0WtKlUs+KWN9+4Df+LOhOZ+UJtuJeZXNZlO2peK5bQ4hIllxZpK/xcr5Cl54Vc0YLdN1gbWRzGbTOcbUpAMzmiaevDRp9IM1WAS1nudodDszSyhaa8JO9JSjXYAXRD08cnQXjSGyyD4aj3dtQfdMJBMAiHw9dBMAoCm0JVnFNk90AoZjecbtzG0Fbgk1ceWdVHGfz94Pm2k75XUIHxKVH+NEP7hByDqgodoak6dR/dZIuPbwFpZpzeeD5prKxx9AkZiLSo94h9rCawJaM5AyT2jklOUZM7pnPiKvN4oKK9xiebRBYVF9FxTfUWV9G2CEPUTBcQOR/N05lfTb0LrYS4QnkWU2XBdEQ3oLw/0NOQ3wwFAAA=\u003e)\u003c/li\u003e\u003c/ul\u003e | 27.13 μs | 30.34 μs | 1.12 | 0.37 | True | | |\r\n|\u003cul\u003e\u003cli\u003e[ReadLine - Duration of single invocation](\u003chttps://pvscmdupload.z22.web.core.windows.net/reports/allTestHistory/refs/heads/main_arm64_ubuntu 22.04_LLVM=true_MonoAOT=true_MonoInterpreter=false_RunKind=micro_mono/System.IO.Tests.StreamReaderReadLineTests.ReadLine(LineLengthRange%3a%20%5b%20%2033%2c%20%20128%5d).html\u003e)\u003c/li\u003e\u003cli\u003e📝 - [Benchmark Source](\u003chttps://github.com/dotnet/performance/blob/main/src/benchmarks/micro/libraries/System.IO/StreamReaderReadLineTests.cs#L24-#L32\u003e)\u003c/li\u003e\u003cli\u003e[ADX - Test Multi Config Graph](\u003chttps://dataexplorer.azure.com/clusters/dotnetperf.westus/databases/PerformanceData?query=H4sIAAAAAAAACpVUXW/TMBR9R+I/3LckkLVZW8pWKYhuDBi0bGQVL9M0ecldYhTb0bWzNRPit2OnXVk3aYQXy/f4nHOvP67nyHRNKFAa/eIX3BZICAc1L7MEKwVxDF6mjETTp1oaLtDbZh0Qk2nR8givdb9Alum+YFw+Ik4pLbjB1NhswCX43nI88kLwGAk7CTbsBWrzjQl0nu+9s0YbFL3jk57Dde/MEDKR2CxIbpxxiauV+8h3wwxlboqEyRwncA4wHIYAu4O9i+BvWUktD5W85nlNzHAl9bl3qETFyzaaqwy9C4h/g2e4pWfey+eUs9mP+T2danyePFdSTU8W/8U/lgapIrTjWnfNSv0PoYW+cpmtBYKnpC6FNXug4hpFZRr/iXqqTNCBdqz0rLwR7R134X/RRzK3N9SFe5qrRVN1oxaN5ikrT0kJ5ZCuws/NFfHsU6muWMnvWqyLLBkkXTMcLSsk2zmyfdbbD/1Q2a5CWqhqPdtumoWVnRkmKngHGTPoGtAfRIPRTjTY2R0vor3J7pvJaNwbjofj/bf7r6NoEkUuha6FYMTvEBjll4It/dbQVRDCqwCumkcZwk3jhe4lfa+xRutTkfppm/YJOUFdlyYmW3XmP9jJCp/eILHcOg2DEForZxx/JI4yK5sN4g6rDVzJZNeQwO0xLRgZuOWmAF/bw0MdbzQhLFNV1kLGj2tqVriOV0VYouGmxNj7YI/OfjXNOnQS8KUOHKarkpuYLVEHfwDlMb0IDAUAAA==\u003e)\u003c/li\u003e\u003c/ul\u003e | 44.06 μs | 51.46 μs | 1.17 | 0.36 | False | | |\r\n\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.IO.Tests.StreamReaderReadLineTests_1.png\u003e)\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.IO.Tests.StreamReaderReadLineTests_2.png\u003e)\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.IO.Tests.StreamReaderReadLineTests_3.png\u003e)\n![graph](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.IO.Tests.StreamReaderReadLineTests_4.png\u003e)\n[Test Report](\u003chttps://pvscmdupload.z22.web.core.windows.net/autofilereport/autofilereports/04_16_2024/refs/heads/main_arm64_ubuntu%2022.04_LLVM%3Dtrue_MonoAOT%3Dtrue_MonoInterpreter%3Dfalse_RunKind%3Dmicro_mono_Regression/System.IO.Tests.StreamReaderReadLineTests.html\u003e)\n\n### Repro\nGeneral Docs link: https://github.com/dotnet/performance/blob/main/docs/benchmarking-workflow-dotnet-runtime.md\n\n\u003cdetails\u003e\n   \u003csummary\u003eRepro Steps\u003c/summary\u003e\n\n\n#### Prerequisites (Files either built locally (with build.(sh/cmd) or downloaded from payload above (if same system setup) (in this order))\n- Libraries build extracted to `runtime/artifacts` or build instructions: [Libraries README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/libraries/README.md) args: `-subset libs+libs.tests -rc release -configuration Release -arch $RunArch -framework net8.0`\n- CoreCLR product build extracted to `runtime/artifacts/bin/coreclr/$RunOS.$RunArch.Release`, build instructions: [CoreCLR README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/coreclr/README.md) args: `-subset clr+libs -rc release -configuration Release -arch $RunArch -framework net8.0`\n- AOT MONO build extracted to `runtime/artifacts/bin/mono/$RunOS.$RunArch.Release`, build instructions: [MONO README](https://github.com/dotnet/runtime/blob/main/docs/workflow/building/mono/README.md) args: `-arch $RunArch -os $RunOS -s mono+libs+host+packs -c Release /p:CrossBuild=false /p:MonoLLVMUseCxx11Abi=false`\n- Dotnet SDK installed for dotnet commands\n- Running commands from the runtime folder\n\nLinux\n```cmd\n# Set $RunDir to the runtime directory\nRunDir=`pwd`\n\n# Set the OS, arch, and OSId\nRunOS=\u0027linux\u0027\nRunOSId=\u0027linux\u0027\nRunArch=\u0027x64\u0027\n\n# Create aot directory \nmkdir -p $RunDir/artifacts/bin/aot/sgen\nmkdir -p $RunDir/artifacts/bin/aot/pack\ncp -r $RunDir/artifacts/obj/mono/$RunOS.$RunArch.Release/mono/* $RunDir/artifacts/bin/aot/sgen\ncp -r $RunDir/artifacts/bin/microsoft.netcore.app.runtime.$RunOS-$RunArch/Release/* $RunDir/artifacts/bin/aot/pack\n\n# Create Core Root\n$RunDir/src/tests/build.sh release $RunArch generatelayoutonly /p:LibrariesConfiguration=Release\n\n# Clone performance \ngit clone --branch main --depth 1 --quiet https://github.com/dotnet/performance.git $RunDir/performance\n\n# One line run:\npython3 $RunDir/performance/scripts/benchmarks_ci.py --csproj $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --incremental no --architecture $RunArch -f net8.0 --filter \u0027System.IO.Tests.StreamReaderReadLineTests*\u0027 --bdn-artifacts $RunDir/artifacts/BenchmarkDotNet.Artifacts --bdn-arguments=\"--anyCategories Libraries Runtime  --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir/artifacts/bin/aot/sgen/mini/mono-sgen --customruntimepack $RunDir/artifacts/bin/aot/pack --aotcompilermode llvm --logBuildOutput --generateBinLog\"\n\n# Individual Commands:\n# Restore \ndotnet restore $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --packages $RunDir/performance/artifacts/packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Build\ndotnet build $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore /p:NuGetPackageRoot=$RunDir/performance/artifacts/packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Run\ndotnet run --project $RunDir/performance/src/benchmarks/micro/MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore --no-build -- --filter System.IO.Tests.StreamReaderReadLineTests* --anyCategories Libraries Runtime \" --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir/artifacts/bin/aot/sgen/mini/mono-sgen --customruntimepack $RunDir/artifacts/bin/aot/pack --aotcompilermode llvm --logBuildOutput --generateBinLog \" --artifacts $RunDir/artifacts/BenchmarkDotNet.Artifacts --packages $RunDir/performance/artifacts/packages --buildTimeout 1200\n```\n\nWindows\n```cmd\n# Set $RunDir to the runtime directory\n$RunDir=\"FullPathHere\"\n\n# Set the OS, arch, and OSId\nRunOS=\u0027windows\u0027\nRunOSId=\u0027win\u0027\nRunArch=\u0027x64\u0027\n\n# Create aot directory\nmkdir $RunDir\\artifacts\\bin\\aot\\sgen\nmkdir $RunDir\\artifacts\\bin\\aot\\pack\nxcopy $RunDir\\artifacts\\obj\\mono\\$RunOS.$RunArch.Release\\mono $RunDir\\artifacts\\bin\\aot\\sgen\\ /e /y\nxcopy $RunDir\\artifacts\\bin\\microsoft.netcore.app.runtime.$RunOSId-$RunArch\\Release $RunDir\\artifacts\\bin\\aot\\pack\\ /e /y\n\n# Create Core Root\n$RunDir\\src\\tests\\build.cmd release $RunArch generatelayoutonly /p:LibrariesConfiguration=Release\n\n# Clone performance \ngit clone --branch main --depth 1 --quiet https://github.com/dotnet/performance.git $RunDir\\performance\n\n# One line run:\npython3 $RunDir\\performance\\scripts\\benchmarks_ci.py --csproj $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --incremental no --architecture $RunArch -f net8.0 --filter \u0027System.IO.Tests.StreamReaderReadLineTests*\u0027 --bdn-artifacts $RunDir\\artifacts\\BenchmarkDotNet.Artifacts --bdn-arguments=\"--anyCategories Libraries Runtime  --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir\\artifacts\\bin\\aot\\sgen\\mini\\mono-sgen.exe --customruntimepack $RunDir\\artifacts\\bin\\aot\\pack --aotcompilermode llvm --logBuildOutput --generateBinLog\"\n\n# Individual Commands:\n# Restore \ndotnet restore $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --packages $RunDir\\performance\\artifacts\\packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Build\ndotnet build $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore /p:NuGetPackageRoot=$RunDir\\performance\\artifacts\\packages /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1\n\n# Run\ndotnet run --project $RunDir\\performance\\src\\benchmarks\\micro\\MicroBenchmarks.csproj --configuration Release --framework net8.0 --no-restore --no-build -- --filter System.IO.Tests.StreamReaderReadLineTests* --anyCategories Libraries Runtime \" --category-exclusion-filter NoAOT NoWASM --runtimes monoaotllvm --aotcompilerpath $RunDir\\artifacts\\bin\\aot\\sgen\\mini\\mono-sgen.exe --customruntimepack $RunDir\\artifacts\\bin\\aot\\pack -aotcompilermode llvm --logBuildOutput --generateBinLog \" --artifacts $RunDir\\artifacts\\BenchmarkDotNet.Artifacts --packages $RunDir\\performance\\artifacts\\packages --buildTimeout 1200\n```\n\n\u003c/details\u003e\n\n\u003cdetails\u003e\n\n### System.IO.Tests.StreamReaderReadLineTests.ReadLine(LineLengthRange: [1025, 2048])\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n### System.IO.Tests.StreamReaderReadLineTests.ReadLine(LineLengthRange: [   0, 1024])\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n### System.IO.Tests.StreamReaderReadLineTests.ReadLine(LineLengthRange: [ 129, 1024])\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n### System.IO.Tests.StreamReaderReadLineTests.ReadLine(LineLengthRange: [  33,  128])\r\n\r\n#### ETL Files\r\n\r\n#### Histogram\r\n\r\n#### JIT Disasms\r\n\r\n\n\n### Docs\n\n[Profiling workflow for dotnet/runtime repository](https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-dotnet-runtime.md)\n[Benchmarking workflow for dotnet/runtime repository](https://github.com/dotnet/performance/blob/master/docs/benchmarking-workflow-dotnet-runtime.md)\n\n\u003c/details\u003e\n",
                                           "updatedAt":  "2024-06-22T01:39:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc56wa7b",
                                           "createdAt":  "2024-04-16T16:41:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @directhex\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-04-16T16:41:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6CHmja",
                                           "createdAt":  "2024-06-21T16:04:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "@fanyang-mono please let me know what you think the priority should be.",
                                           "updatedAt":  "2024-06-21T16:04:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6EOzmr",
                                           "createdAt":  "2024-07-09T19:24:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "This regression was mostly caused by moving logics into generic methods. There isn\u0027t much we could do on Mono side.",
                                           "updatedAt":  "2024-07-09T19:24:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6EY7bk",
                                           "createdAt":  "2024-07-10T17:59:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tannergooding",
                                           "body":  "CC. @stephentoub as an FYI\r\n\r\nThis is another case where the move to use generics results in significant reduction in code complexity and improves long term maintainability on the libraries side; but where it ends up hurting the perf for Mono given that it doesn\u0027t have generic specialization support like RyuJIT/NAOT have.\r\n\r\nBased on prior discussions, supporting generic specialization in Mono is a substantial amount of work and there are additional complexities for MonoAOT since they do not require or depend on the trimmer in the same way that NAOT does; this is intentional so they can support a broader range of scenarios for iOS/Android.",
                                           "updatedAt":  "2024-07-10T17:59:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6EY__Z",
                                           "createdAt":  "2024-07-10T18:10:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "stephentoub",
                                           "body":  "Which change? https://github.com/dotnet/runtime/pull/99982 ?",
                                           "updatedAt":  "2024-07-10T18:10:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6EZAr9",
                                           "createdAt":  "2024-07-10T18:12:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tannergooding",
                                           "body":  "Yes, I believe that\u0027s the one this was root caused to when @fanyang-mono and I talked yesterday",
                                           "updatedAt":  "2024-07-10T18:12:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6EciAK",
                                           "createdAt":  "2024-07-11T05:33:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "matouskozak",
                                           "body":  "\u003e CC. @stephentoub as an FYI\r\n\u003e \r\n\u003e This is another case where the move to use generics results in significant reduction in code complexity and improves long term maintainability on the libraries side; but where it ends up hurting the perf for Mono given that it doesn\u0027t have generic specialization support like RyuJIT/NAOT have.\r\n\u003e \r\n\u003e Based on prior discussions, supporting generic specialization in Mono is a substantial amount of work and there are additional complexities for MonoAOT since they do not require or depend on the trimmer in the same way that NAOT does; this is intentional so they can support a broader range of scenarios for iOS/Android.\r\n\r\njust FYI: it isn\u0027t only microbenchmark perf that is regressing, the newly introduced generics are hurting size of MonoAOT scenarios as well (affecting iOS mainly) e.g. https://github.com/dotnet/runtime/issues/100975.",
                                           "updatedAt":  "2024-07-11T05:33:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6EdIe_",
                                           "createdAt":  "2024-07-11T07:28:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tannergooding",
                                           "body":  "Is there an easy way to measure how much of that is from using generics vs how much is from the expansive additional functionality required?\r\n\r\nMy guess would be that we’d see similar overall size regressions had we duplicated the code instead (and instead effectively forced manual specialization)\r\n\r\nIt would also be interesting to know if the size increase potentially because MonoAOT is trying to handle scenarios that are unreachable for the USG implementation.\r\n\r\nMany of these code paths can only be `byte` or `char` and any other type will never be encountered or would throw, so if there were a way to tell Mono about that it could potentially scope the work it does and keep things smaller without needing to add full specialization support. — Notably this isn’t an issue for NAOT because it extensively relies on trimming and does deeper analysis around what types can reach a given generic path, so it tends to not generate support for arbitrary T",
                                           "updatedAt":  "2024-07-11T07:35:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Gn4NH",
                                           "createdAt":  "2024-07-30T15:15:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "matouskozak",
                                           "body":  "\u003e Is there an easy way to measure how much of that is from using generics vs how much is from the expansive additional functionality required?\r\n\u003e \r\n\u003e My guess would be that we’d see similar overall size regressions had we duplicated the code instead (and instead effectively forced manual specialization)\r\n\u003e \r\n\u003e It would also be interesting to know if the size increase potentially because MonoAOT is trying to handle scenarios that are unreachable for the USG implementation.\r\n\u003e \r\n\u003e Many of these code paths can only be `byte` or `char` and any other type will never be encountered or would throw, so if there were a way to tell Mono about that it could potentially scope the work it does and keep things smaller without needing to add full specialization support. — Notably this isn’t an issue for NAOT because it extensively relies on trimming and does deeper analysis around what types can reach a given generic path, so it tends to not generate support for arbitrary T\r\n\r\nI believe the size increase would be present even if we would introduce specialized APIs instead of generics. I created a tracking issue for the increasing app size due to BCL changes and small investigation into generics vs specialized APIs at https://github.com/dotnet/runtime/issues/105701.",
                                           "updatedAt":  "2024-07-30T15:16:05Z"
                                       }
                                   ],
                         "totalCount":  10
                     },
        "title":  "[Perf] Linux/arm64: 22 Regressions on 4/8/2024 7:16:22 PM",
        "labels":  [
                       "arch-arm64",
                       "os-linux",
                       "tenet-performance",
                       "tenet-performance-benchmarks",
                       "area-Codegen-AOT-mono",
                       "runtime-mono",
                       "regression-from-last-release"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/101276",
        "createdAt":  "2024-04-19T03:11:33Z",
        "number":  101276,
        "author":  "ReneeGA2020",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC8P5AA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "RReverser",
                                            "createdAt":  "2024-10-29T16:09:11Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-02-17T09:37:49Z",
        "body":  "### Description\r\n\r\nAfter a recent fix, wasm interpreter no longer require a unmanaged delegate as workaround to initialize exports. But it looks like the AOT version still get the uninitialized element error.\r\n\r\n### Reproduction Steps\r\n\r\n1. Clone the runtime https://github.com/dotnet/runtime/\r\n2. git pull with the leastest (was testing with a344abdd6fa1283aba3b18c882fe780447b3bad2 of april)\r\n3. Follow the steps here to build wasi runtime https://github.com/dotnet/runtime/blob/main/src/mono/wasi/README.md\r\n4. Test the wasi native sample with RunAOTCompilation, the samaple features import and export functions to native:\r\n5. ./dotnet.cmd **publish** /p:**RunAOTCompilation**=true /p:TargetOS=wasi /p:Configuration=Release /t:RunSample **src/mono/sample/wasi/native**\r\n\r\n### Expected behavior\r\n\r\nThe console prints:\r\n\r\n\u003e   main: 0\r\n  UnmanagedFunc calling ManagedFunc\r\n  MyExport(123) -\u003e 42\r\n  ManagedFunc returned 42\r\n\r\n### Actual behavior\r\n\r\nThe console prints:\r\n\r\n\u003e   main: 0\r\n\u003e   UnmanagedFunc calling ManagedFunc\r\n\u003e EXEC : error : failed to run main module `Wasi.Native.Sample.wasm` [E:\\runtime\\src\\mono\\sample\\wasi\\native\\Wasi.Native.\r\n\u003e Sample.csproj]\r\n\u003e \r\n\u003e   Caused by:\r\n\u003e       0: failed to invoke command default\r\n\u003e       1: error while executing at wasm backtrace:\r\n\u003e       2: wasm trap: uninitialized element\r\n\r\n### Regression?\r\n\r\n_No response_\r\n\r\n### Known Workarounds\r\n\r\n_No response_\r\n\r\n### Configuration\r\n\r\nNET9 + Windows + Wasmtime + WASI SDK 21\r\nTested with .NET 9 alpha local build with latest commit a344abdd6fa1283aba3b18c882fe780447b3bad2 \r\nTested with .NET 9 Preview 3 installed from the official website\r\n\r\n\r\n### Other information\r\n\r\nDirectly export function to Wasmtime lead to the same issue.\r\nIt worked fine with no RunAOTCompilation",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOiON5gg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc57-fpS",
                                           "createdAt":  "2024-04-26T19:11:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "```\nmain: 0\nUnmanagedFunc calling ManagedFunc\nError: failed to run main module `.\\testwasinative.wasm`\n\nCaused by:\n    0: failed to invoke command default\n    1: error while executing at wasm backtrace:\n           0: 0xd956 - \u003cunknown\u003e!\u003cwasm function 33\u003e\n           1: 0xca2d5e - \u003cunknown\u003e!\u003cwasm function 17873\u003e\n           2: 0x5e3a9c - \u003cunknown\u003e!\u003cwasm function 7396\u003e\n           3: 0x5e3944 - \u003cunknown\u003e!\u003cwasm function 7394\u003e\n           4: 0x957886 - \u003cunknown\u003e!\u003cwasm function 11235\u003e\n           5: 0x935521 - \u003cunknown\u003e!\u003cwasm function 11156\u003e\n           6: 0xc7f0a9 - \u003cunknown\u003e!\u003cwasm function 17326\u003e\n           7: 0xc7df17 - \u003cunknown\u003e!\u003cwasm function 17306\u003e\n           8: 0xc44e0e - \u003cunknown\u003e!\u003cwasm function 16337\u003e\n           9: 0xc4587c - \u003cunknown\u003e!\u003cwasm function 16346\u003e\n          10: 0xc49dff - \u003cunknown\u003e!\u003cwasm function 16415\u003e\n          11: 0xc498de - \u003cunknown\u003e!\u003cwasm function 16412\u003e\n          12: 0x108b9 - \u003cunknown\u003e!\u003cwasm function 80\u003e\n          13: 0xca6a39 - \u003cunknown\u003e!\u003cwasm function 17901\u003e\n          14: 0xd6c5 - \u003cunknown\u003e!\u003cwasm function 28\u003e\n    2: wasm trap: uninitialized element\n```\nI can reproduce this.  Works with trimming but no aot, does not work with `/p:RunAotCompilation=true`",
                                           "updatedAt":  "2024-04-26T19:20:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6I43mC",
                                           "createdAt":  "2024-08-19T13:41:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "I also have a repro \r\n```\r\nCaused by:\r\n0: failed to invoke `run` function\r\n1: error while executing at wasm backtrace:\r\n0: 0x18a33 - ManagedFunc\r\n                at C:\\Dev\\runtime\\artifacts\\bin\\Wasi.Build.Tests\\Debug\\net9.0\\win-x64\\wbt artifacts\\Release_nsxhe3qu_k4m\\C:/Dev/runtime/artifacts/bin/Wasi.Build.Tests/Debug/net9.0/win-x64/wbt artifacts/Release_nsxhe3qu_k4m/obj/Release/net9.0/wasi-wasm/wasm/for-publish\\pinvoke-table.h:262:3\r\n1: 0x2fb8360 - UnmanagedFunc\r\n                at C:\\Dev\\runtime\\artifacts\\bin\\Wasi.Build.Tests\\Debug\\net9.0\\win-x64\\wbt artifacts\\Release_nsxhe3qu_k4m\\native.c:9:11\r\n2: 0xb8b983 - .tmpnwLnie!aot_wrapper_Wasi_dot_Native_dot_Test_pinvoke_Wasi_dot_Native_dot_Test_Sample_Sample_dot_Test__MyImport_pinvoke_void_void_\r\n3: 0xb8b815 - .tmpnwLnie!Wasi_Native_Test_Sample_Test_Main_string__\r\n4: 0x2230d49 - .tmpnwLnie!aot_instances_aot_wrapper_gsharedvt_out_sig_pinvoke_i4_obj\r\n5: 0x220e21d - .tmpnwLnie!aot_instances_wrapper_runtime_invoke_object_runtime_invoke_sig_void_intptr_intptr_intptr_object_intptr_intptr_intptr\r\n6: 0x2de5908 - mono_llvmonly_runtime_invoke\r\n                at C:\\Dev\\runtime\\artifacts\\obj\\mono\\wasi.wasm.Debug\\C:/Dev/runtime/src/mono/mono/mini\\mini-runtime.c:3424:2\r\n7: 0x2de0938 - mono_jit_runtime_invoke\r\n                at C:\\Dev\\runtime\\artifacts\\obj\\mono\\wasi.wasm.Debug\\C:/Dev/runtime/src/mono/mono/mini\\mini-runtime.c:3688:12\r\n8: 0x2d1389c - do_runtime_invoke\r\n                at C:\\Dev\\runtime\\artifacts\\obj\\mono\\wasi.wasm.Debug\\C:/Dev/runtime/src/mono/mono/metadata\\object.c:2572:11\r\n9: 0x2d15a7d - mono_runtime_try_invoke\r\n                at C:\\Dev\\runtime\\artifacts\\obj\\mono\\wasi.wasm.Debug\\C:/Dev/runtime/src/mono/mono/metadata\\object.c:2729:9\r\n10: 0x2d2539f - do_try_exec_main\r\n                at C:\\Dev\\runtime\\artifacts\\obj\\mono\\wasi.wasm.Debug\\C:/Dev/runtime/src/mono/mono/metadata\\object.c:4739:9\r\n11: 0x2d24c14 - mono_runtime_try_exec_main\r\n                at C:\\Dev\\runtime\\artifacts\\obj\\mono\\wasi.wasm.Debug\\C:/Dev/runtime/src/mono/mono/metadata\\object.c:4821:9\r\n12: 0x2d23ec7 - mono_runtime_run_main\r\n                at C:\\Dev\\runtime\\artifacts\\obj\\mono\\wasi.wasm.Debug\\C:/Dev/runtime/src/mono/mono/metadata\\object.c:4343:9\r\n13: 0x1bf91 - __main_argc_argv\r\n                at C:\\Dev\\runtime\\artifacts\\bin\\dotnet-latest\\packs\\Microsoft.NETCore.App.Runtime.Mono.wasi-wasm\\9.0.0-dev\\runtimes\\wasi-wasm\\native\\src\\main.c:108:12\r\n14: 0x2fbc571 - .tmpnwLnie!__main_void\r\n15: 0x1867c - _start\r\n                at C:\\wasi-sdk\\sysroot\\wasi-libc-wasm32-wasip2\\libc-bottom-half/crt\\crt1-command.c:43:13\r\n16: 0x3d73efa - wit-component:adapter:wasi_snapshot_preview1!wasi:cli/run@0.2.0#run\r\n\r\n2: wasm trap: uninitialized element\r\n```",
                                           "updatedAt":  "2024-08-19T13:41:15Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "[mono] [wasi][wasm] Wasm AOT breaks wasm export functions",
        "labels":  [
                       "arch-wasm",
                       "area-Codegen-AOT-mono",
                       "os-wasi"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/102150",
        "createdAt":  "2024-05-13T11:34:52Z",
        "number":  102150,
        "author":  "matouskozak",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T03:01:21Z",
        "body":  "## Build Information\r\nBuild: https://dev.azure.com/dnceng-public/public/_build/results?buildId=670895\r\nBuild error leg or test failing: HardwareIntrinsics_X86_r, HardwareIntrinsics_X86_ro\r\n\r\n\u003c!-- Error message template  --\u003e\r\n## Error Message\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssueJsonStepByStep.md).\r\n\r\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\r\n\r\n```json\r\n{\r\n  \"ErrorPattern\": \"Failed to load AOT module \u0027.*JIT\\\\/HardwareIntrinsics\\\\/HardwareIntrinsics_X86_(ro|r)\\\\/X86_Sse2_(ro|r).dll.so\u0027 \\\\(\u0027.*\\\\/JIT\\\\/HardwareIntrinsics\\\\/HardwareIntrinsics_X86_(ro|r)\\\\/X86_Sse2_(ro|r).dll\u0027\\\\) in aot-only mode.\",\r\n  \"BuildRetry\": false,\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\n\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=670895\r\n**Error message validated:** `[Failed to load AOT module \u0027.*JIT\\/HardwareIntrinsics\\/HardwareIntrinsics_X86_(ro|r)\\/X86_Sse2_(ro|r).dll.so\u0027 \\(\u0027.*\\/JIT\\/HardwareIntrinsics\\/HardwareIntrinsics_X86_(ro|r)\\/X86_Sse2_(ro|r).dll\u0027\\) in aot-only mode.`]\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 5/13/2024 11:35:32 AM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|0|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOfab3UQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc59m333",
                                           "createdAt":  "2024-05-13T11:36:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "matouskozak",
                                           "body":  "The rolling-build failures are observable from https://github.com/dotnet/runtime/commit/315c4c414e9f3bb61c8c0e0bb31ece4daa631430. Range to the previous green rolling-build is https://github.com/dotnet/runtime/compare/9926d609dab5929941b7924a04521ea2c2df27f3...315c4c414e9f3bb61c8c0e0bb31ece4daa631430. Could it be caused by https://github.com/dotnet/runtime/pull/101681 @mkhamoyan ?",
                                           "updatedAt":  "2024-05-13T11:36:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc59nDgU",
                                           "createdAt":  "2024-05-13T12:01:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODhnJcA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "matouskozak",
                                                                               "createdAt":  "2024-05-13T13:57:54Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "mkhamoyan",
                                           "body":  "@matouskozak looks like it is related to https://github.com/dotnet/runtime/issues/102037, and mentioned in https://github.com/dotnet/runtime/pull/101886",
                                           "updatedAt":  "2024-05-13T12:04:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc59oDSU",
                                           "createdAt":  "2024-05-13T13:58:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "matouskozak",
                                           "body":  "\u003e @matouskozak looks like it is related to #102037, and mentioned in #101886\r\n\r\nYou are right, thank you.",
                                           "updatedAt":  "2024-05-13T13:58:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc59oXNy",
                                           "createdAt":  "2024-05-13T14:24:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "matouskozak",
                                           "body":  "FYI: @steveisok @fanyang-mono ",
                                           "updatedAt":  "2024-05-13T14:24:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc59pvdR",
                                           "createdAt":  "2024-05-13T15:58:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "Since this is x86, I\u0027d say the priority is low and we should disable the test.",
                                           "updatedAt":  "2024-05-13T15:58:41Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "[mono] [aot] Mono mini and LLVM fullAOT CI jobs are failing due to Failed to load AOT module X86_Sse2_r/ro.dll in aot-only mode",
        "labels":  [
                       "disabled-test",
                       "area-Codegen-AOT-mono",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/103136",
        "createdAt":  "2024-06-06T18:46:11Z",
        "number":  103136,
        "author":  "lambdageek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC4dClA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ivanpovazan",
                                            "createdAt":  "2024-06-07T06:43:05Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2024-06-10T15:50:32Z",
        "body":  "It would be nice if `mono-aot-cross` had a companion tool like [`complog`](https://www.nuget.org/packages/complog) that could collect all AOT compiler invocations from a particular build and zip them up for easy issue repros.\r\n\r\nUse case:\r\n- A developer experiences a crash in the mono aot compiler while building their ios/android/wasm app.  They open a github issue.\r\n- A member of the .NET team asks the user to do `dotnet build -bl` to create an `msbuild.binlog` file and then run the `mono-aot-cross-complog` tool to find all the places in the msbuild log where the Mono AOT compiler is invoked, collect all the command line arguments, collect all the input assemblies, and put all that info into a zip file ready for uploading.\r\n- The developer checks that the zip file is ok to share and sends it to the .NET team member\r\n- The .NET team member can run `mono-aot-cross` under a debugger (or run a custom build of `mono-aot-cross`) with all the same inputs and command line arguments and investigate the issue.\r\n\r\n\r\n---\r\n\r\nComplications:\r\n\r\n1. `mono-aot-cross` needs not only assemblies that are direct inputs but also the contents of all directories specified in a `MONO_PATH` environment variable\r\n2. Mono AOT compiler has arguments for specifying toolchains, binaries for assemblers/native linkers/etc. We might need to capture those too, to get a fully reproducible build environment.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOgFcAYw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6AVwBj",
                                           "createdAt":  "2024-06-06T18:50:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "another idea is that instead of having a separate tool that parses the command line arguments and decides what to capture, we could actually have a flag/environment variable that tells `mono-aot-cross` to write its own inputs/dependencies/flags to a file.  Perhaps even in the [`compile_commands.json` format](https://clang.llvm.org/docs/JSONCompilationDatabase.html) format - then the binlog parsing tool can find those compile command fragments and stitch them together and pick up the input files / tools / etc",
                                           "updatedAt":  "2024-06-06T18:50:59Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "[mono][aot] Write a tool to collect mono-aot-cross inputs and rsp files from an msbuild binlog",
        "labels":  [
                       "enhancement",
                       "help wanted",
                       "wishlist",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/104786",
        "createdAt":  "2024-07-12T12:14:54Z",
        "number":  104786,
        "author":  "pavelsavara",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-14T17:25:59Z",
        "body":  "## Build Information\r\nBuild: https://dev.azure.com/dnceng-public/public/_build/results?buildId=738708\r\nBuild error leg or test failing: \r\n\u003c!-- Error message template  --\u003e\r\n## Error Message\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssueJsonStepByStep.md).\r\n\r\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": [\"System.Collections.Specialized.Tests\", \"error while executing at wasm backtrace\"],\r\n  \"BuildRetry\": false,\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\n\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=738708\r\n**Error message validated:** `[System.Collections.Specialized.Tests error while executing at wasm backtrace`]\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 7/12/2024 12:15:40 PM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|0|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOjU91tA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6EpcXy",
                                           "createdAt":  "2024-07-12T12:15:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "[Log](https://helixre107v0xdcypoyl9e7f.blob.core.windows.net/dotnet-runtime-refs-pull-104683-merge-d463a8df074f4c9ba8/System.Collections.Specialized.Tests/1/console.40fba6bc.log?helixlogtype=result)\r\n```\r\n[10:35:43] info: Error: failed to run main module `dotnet.wasm`\r\n[10:35:43] info: \r\n[10:35:43] info: Caused by:\r\n[10:35:43] info:     0: failed to invoke `run` function\r\n[10:35:43] info:     1: error while executing at wasm backtrace:\r\n[10:35:43] info:            0: 0x173681f - .tmpv45pjF!corlib_System_Resources_ResourceManager_GetString_string_System_Globalization_CultureInfo\r\n[10:35:43] info:            1: 0x173457f - .tmpv45pjF!corlib_System_Resources_ResourceManager_GetString_string\r\n[10:35:43] info:            2: 0x20a11b - .tmpv45pjF!System_Collections_Specialized_System_SR_GetResourceString_string\r\n[10:35:43] info:            3: 0x20a828 - .tmpv45pjF!System_Collections_Specialized_System_SR_get_InvalidOperation_EnumFailedVersion\r\n[10:35:43] info:            4: 0x21d0df - .tmpv45pjF!System_Collections_Specialized_System_Collections_Specialized_ListDictionary_NodeEnumerator_Reset\r\n[10:35:43] info:            5: 0x3efe68 - .tmpv45pjF!System_Collections_Specialized_Tests_System_Collections_Tests_IEnumerable_NonGeneric_Tests__c__DisplayClass39_1__IEnumerable_NonGeneric_Enumerator_Reset_ModifiedBeforeEnumeration_ThrowsInvalidOperationExceptionb__1\r\n[10:35:43] info:            6: 0x1f861b0 - .tmpv45pjF!corlib_wrapper_delegate_invoke__Module_invoke_void\r\n[10:35:43] info:            7: 0x367a235 - .tmpv45pjF!xunit_assert_Xunit_Assert_RecordException_System_Action\r\n[10:35:43] info:            8: 0x367a4d6 - .tmpv45pjF!xunit_assert_Xunit_Assert_Throws_T_REF_System_Action\r\n[10:35:43] info:            9: 0x3efba7 - .tmpv45pjF!System_Collections_Specialized_Tests_System_Collections_Tests_IEnumerable_NonGeneric_Tests__c__DisplayClass39_0__IEnumerable_NonGeneric_Enumerator_Reset_ModifiedBeforeEnumeration_ThrowsInvalidOperationExceptionb__0_System_Collections_Tests_IEnumerable_NonGeneric_Tests_ModifyEnumerable\r\n[10:35:43] info:           10: 0x1f503a5 - .tmpv45pjF!corlib_wrapper_delegate_invoke_System_Action_1_T_REF_invoke_void_T_T_REF\r\n[10:35:43] info:           11: 0x3690c87 - .tmpv45pjF!xunit_assert_Xunit_Assert__c__DisplayClass42_0_1_T_REF__Allb__0_T_REF_int\r\n[10:35:43] info:           12: 0x3b757db - .tmpv45pjF!aot_instances_aot_wrapper_gsharedvt_out_sig_void_this_obji4\r\n[10:35:43] info:           13: 0x52a0bfa - jit_call_cb\r\n[10:35:43] info:                            at /__w/1/s/src/mono/mono/mini/interp/interp.c:2524:3\r\n[10:35:43] info:           14: 0x53cf701 - mono_llvm_catch_exception\r\n[10:35:43] info:                            at /__w/1/s/src/mono/mono/mini/mini-exceptions.c:3670:3\r\n[10:35:43] info:           15: 0x529f6d1 - do_jit_call\r\n[10:35:43] info:                            at /__w/1/s/src/mono/mono/mini/interp/interp.c:2847:3\r\n[10:35:43] info:           16: 0x529c441 - mono_interp_exec_method\r\n[10:35:43] info:                            at /__w/1/s/src/mono/mono/mini/interp/interp.c:4309:6\r\n[10:35:43] info:           17: 0x529eeb3 - interp_entry\r\n[10:35:43] info:                            at /__w/1/s/src/mono/mono/mini/interp/interp.c:2316:2\r\n[10:35:43] info:           18: 0x52a2006 - interp_entry_static_2\r\n[10:35:43] info:                            at /__w/1/s/src/mono/mono/mini/interp/interp.c:3088:46\r\n[10:35:43] info:           19: 0x3b7572d - .tmpv45pjF!aot_instances_aot_wrapper_gsharedvt_in_sig_void_objobj\r\n[10:35:43] info:           20: 0x366e32d - .tmpv45pjF!xunit_assert_Xunit_Assert_All_T_REF_System_Collections_Generic_IEnumerable_1_T_REF_System_Action_2_T_REF_int\r\n[10:35:43] info:           21: 0x366de48 - .tmpv45pjF!xunit_assert_Xunit_Assert_All_T_REF_System_Collections_Generic_IEnumerable_1_T_REF_System_Action_1_T_REF\r\n[10:35:43] info:           22: 0x3e667e - .tmpv45pjF!System_Collections_Specialized_Tests_System_Collections_Tests_IEnumerable_NonGeneric_Tests_IEnumerable_NonGeneric_Enumerator_Reset_ModifiedBeforeEnumeration_ThrowsInvalidOperationException_int\r\n[10:35:43] info:           23: 0x3b50b66 - .tmpv45pjF!aot_instances_aot_wrapper_gsharedvt_out_sig_void_this_i4\r\n[10:35:43] info:           24: 0x4ae7c28 - .tmpv45pjF!aot_instances_wrapper_runtime_invoke_object_runtime_invoke_sig_void_intptr_intptr_intptr_object_intptr_intptr_intptr\r\n[10:35:43] info:           25: 0x53b9389 - mono_llvmonly_runtime_invoke\r\n[10:35:43] info:                            at /__w/1/s/src/mono/mono/mini/mini-runtime.c:3419:2\r\n[10:35:43] info:           26: 0x53b8185 - mono_jit_runtime_invoke\r\n[10:35:43] info:                            at /__w/1/s/src/mono/mono/mini/mini-runtime.c:3683:12\r\n[10:35:43] info:           27: 0x53781d2 - do_runtime_invoke\r\n[10:35:43] info:                            at /__w/1/s/src/mono/mono/metadata/object.c:2572:11\r\n[10:35:43] info:           28: 0x537815d - mono_runtime_invoke_checked\r\n[10:35:43] info:                            at /__w/1/s/src/mono/mono/metadata/object.c:2788:9\r\n[10:35:43] info:           29: 0x537f598 - mono_runtime_try_invoke_byrefs\r\n[10:35:43] info:                            at /__w/1/s/src/mono/mono/metadata/object.c:5209:16\r\n[10:35:43] info:           30: 0x5344ee5 - ves_icall_InternalInvoke\r\n[10:35:43] info:                            at /__w/1/s/src/mono/mono/metadata/icall.c:3629:11\r\n[10:35:43] info:           31: 0x534b5b3 - ves_icall_InternalInvoke_raw\r\n[10:35:43] info:                            at /__w/1/s/src/mono/mono/metadata/icall-def.h:370:1\r\n[10:35:43] info:           32: 0x1ae78b9 - .tmpv45pjF!aot_wrapper_corlib_System_dot_Reflection_System_dot_Reflection_dot_RuntimeMethodInfo__InternalInvoke_pinvoke_obj_this_objcl9_intptr_2a_bclsc_Exception_26__attrs_2obj_this_objcl9_intptr_2a_bclsc_Exception_26__attrs_2\r\n[10:35:43] info:           33: 0x1ae7689 - .tmpv45pjF!corlib_System_Reflection_MethodBaseInvoker_InterpretedInvoke_Method_object_intptr_\r\n[10:35:43] info:           34: 0x1f9864f - .tmpv45pjF!corlib_wrapper_delegate_invoke__Module_invoke_object_object_intptr__object_intptr_\r\n[10:35:43] info:           35: 0x1aee00b - .tmpv45pjF!corlib_System_Reflection_MethodBaseInvoker_InvokeDirectByRefWithFewArgs_object_System_Span_1_object_System_Reflection_BindingFlags\r\n[10:35:43] info:           36: 0x1aeb10e - .tmpv45pjF!corlib_System_Reflection_MethodBaseInvoker_InvokeWithOneArg_object_System_Reflection_BindingFlags_System_Reflection_Binder_object___System_Globalization_CultureInfo\r\n[10:35:43] info:           37: 0x1b161bf - .tmpv45pjF!corlib_System_Reflection_RuntimeMethodInfo_Invoke_object_System_Reflection_BindingFlags_System_Reflection_Binder_object___System_Globalization_CultureInfo\r\n[10:35:43] info:           38: 0x37d7919 - .tmpv45pjF!xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1_TTestCase_REF_CallTestMethod_object\r\n[10:35:43] info:           39: 0x37e164d - .tmpv45pjF!xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1__c__DisplayClass46_0___InvokeTestMethodAsyncb__1d_TTestCase_REF_MoveNext\r\n[10:35:43] info:           40: 0x1ecc51a - .tmpv45pjF!corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_\r\n[10:35:43] info:           41: 0x1eccbed - .tmpv45pjF!corlib_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_\r\n[10:35:43] info:           42: 0x37de12d - .tmpv45pjF!xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1__c__DisplayClass46_0_TTestCase_REF__InvokeTestMethodAsyncb__1\r\n[10:35:43] info:           43: 0x1f58844 - .tmpv45pjF!corlib_wrapper_delegate_invoke_System_Func_1_TResult_REF_invoke_TResult\r\n[10:35:43] info:           44: 0x37a20b3 - .tmpv45pjF!xunit_execution_dotnet_Xunit_Sdk_ExecutionTimer__AggregateAsyncd__4_MoveNext\r\n[10:35:43] info:           45: 0x1ecc51a - .tmpv45pjF!corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_\r\n[10:35:43] info:           46: 0x37a162b - .tmpv45pjF!xunit_execution_dotnet_Xunit_Sdk_ExecutionTimer_AggregateAsync_System_Func_1_System_Threading_Tasks_Task\r\n[10:35:43] info:           47: 0x37dde19 - .tmpv45pjF!xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1__c__DisplayClass46_0_TTestCase_REF__InvokeTestMethodAsyncb__0\r\n[10:35:43] info:           48: 0x1f58844 - .tmpv45pjF!corlib_wrapper_delegate_invoke_System_Func_1_TResult_REF_invoke_TResult\r\n[10:35:43] info:           49: 0x3712e0a - .tmpv45pjF!xunit_core_Xunit_Sdk_ExceptionAggregator__RunAsyncd__9_MoveNext\r\n[10:35:43] info:           50: 0x1ecc51a - .tmpv45pjF!corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_\r\n[10:35:43] info:           51: 0x3710812 - .tmpv45pjF!xunit_core_Xunit_Sdk_ExceptionAggregator_RunAsync_System_Func_1_System_Threading_Tasks_Task\r\n[10:35:43] info:           52: 0x37e4265 - .tmpv45pjF!xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1__InvokeTestMethodAsyncd__46_TTestCase_REF_MoveNext\r\n[10:35:43] info:           53: 0x1ecc51a - .tmpv45pjF!corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_\r\n[10:35:43] info:           54: 0x1eccf7b - .tmpv45pjF!corlib_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_GSHAREDVT_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_\r\n[10:35:43] info:           55: 0x37d7ffb - .tmpv45pjF!xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1_TTestCase_REF_InvokeTestMethodAsync_object\r\n[10:35:43] info:           56: 0x3829d13 - .tmpv45pjF!xunit_execution_dotnet_Xunit_Sdk_XunitTestInvoker_InvokeTestMethodAsync_object\r\n[10:35:43] info:           57: 0x37db327 - .tmpv45pjF!xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1___RunAsyncb__45_0d_TTestCase_REF_MoveNext\r\n[10:35:43] info:           58: 0x1ecc51a - .tmpv45pjF!corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_\r\n[10:35:43] info:           59: 0x1eccf7b - .tmpv45pjF!corlib_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_GSHAREDVT_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_\r\n[10:35:43] info:           60: 0x37d85c8 - .tmpv45pjF!xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1_TTestCase_REF__RunAsyncb__45_0\r\n[10:35:43] info:           61: 0x3b509a4 - .tmpv45pjF!aot_instances_aot_wrapper_gsharedvt_out_sig_obj_this_\r\n[10:35:43] info:           62: 0x52a0bd8 - jit_call_cb\r\n[10:35:43] info:                            at /__w/1/s/src/mono/mono/mini/interp/interp.c:2517:3\r\n[10:35:43] info:           63: 0x53cf701 - mono_llvm_catch_exception\r\n[10:35:43] info:                            at /__w/1/s/src/mono/mono/mini/mini-exceptions.c:3670:3\r\n[10:35:43] info:           64: 0x529f6d1 - do_jit_call\r\n[10:35:43] info:                            at /__w/1/s/src/mono/mono/mini/interp/interp.c:2847:3\r\n[10:35:43] info:           65: 0x529c441 - mono_interp_exec_method\r\n[10:35:43] info:                            at /__w/1/s/src/mono/mono/mini/interp/interp.c:4309:6\r\n[10:35:43] info:           66: 0x529eeb3 - interp_entry\r\n[10:35:43] info:                            at /__w/1/s/src/mono/mono/mini/interp/interp.c:2316:2\r\n[10:35:43] info:           67: 0x52a17d3 - interp_entry_instance_0\r\n[10:35:43] info:                            at /__w/1/s/src/mono/mono/mini/interp/interp.c:3104:67\r\n[10:35:43] info:           68: 0x3b514c2 - .tmpv45pjF!aot_instances_aot_wrapper_gsharedvt_in_sig_void_this_\r\n[10:35:43] info:           69: 0x1ecc51a - .tmpv45pjF!corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_\r\n[10:35:43] info:           70: 0x52208a9 - .tmpv45pjF!aot_instances_Xunit_Sdk_ExceptionAggregator_RunAsync_System_Decimal_System_Func_1_System_Threading_Tasks_Task_1_System_Decimal\r\n```",
                                           "updatedAt":  "2024-07-12T12:15:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6EpcYc",
                                           "createdAt":  "2024-07-12T12:15:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in area-owners.md if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-07-12T12:15:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6FIBYc",
                                           "createdAt":  "2024-07-17T14:31:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ilonatommy",
                                           "body":  "The real error:\r\nhttps://github.com/dotnet/runtime/blob/3f607bd6061299a20d29b76914b4176b9d835f66/src/libraries/System.Collections.Specialized/src/Resources/Strings.resx#L64\r\n\r\nWe have to figure out what `foreach` loop has caused it and change it to `for`. The test itself?\r\nhttps://github.com/dotnet/runtime/blob/3f607bd6061299a20d29b76914b4176b9d835f66/src/libraries/Common/tests/System/Collections/IEnumerable.NonGeneric.Tests.cs#L376\r\n\r\nI cannot reproduce locally running on repeat.\r\nSaving Pavel\u0027s log for later\r\n[console.40fba6bc.txt](https://github.com/user-attachments/files/16267145/console.40fba6bc.txt)\r\n",
                                           "updatedAt":  "2024-07-17T14:51:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6IftyJ",
                                           "createdAt":  "2024-08-14T22:17:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "only 4 hits in a month and could be caused by resolved issue. moving to 10",
                                           "updatedAt":  "2024-08-14T22:17:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6NT3W0",
                                           "createdAt":  "2024-09-24T09:45:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "there are few hits now, it seems related to https://github.com/dotnet/runtime/pull/105427",
                                           "updatedAt":  "2024-09-24T09:45:26Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "[WASI][Mono AOT] System.Collections.Specialized.Tests",
        "labels":  [
                       "arch-wasm",
                       "area-Codegen-AOT-mono",
                       "os-wasi"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/106071",
        "createdAt":  "2024-08-07T11:36:25Z",
        "number":  106071,
        "author":  "matouskozak",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T03:02:03Z",
        "body":  "## Build Information\r\nBuild: https://dev.azure.com/dnceng-public/public/_build/results?buildId=763399\r\nBuild error leg or test failing: `AOT compile CoreCLR tests`\r\nAfffected CI: `linux-x64 Release AllSubsets_Mono_MiniFullAot_RuntimeTests minifullaot` (`runtime-extra-platforms`), `linux-x64 Release AllSubsets_Mono_LLVMFULLAOT_RuntimeTests llvmfullaot` (`runtime-llvm`)\r\nRange of commits: https://github.com/dotnet/runtime/compare/03b4c794...1337553e\r\n\r\nCrash dump\r\n```\r\n2024-08-01T22:17:44.4437150Z   Mono Ahead of Time compiler - compiling assembly /__w/1/s/artifacts/tests/coreclr/linux.x64.Release/JIT/Directed/StructABI/EmptyStructs/EmptyStructs.dll\r\n2024-08-01T22:17:44.4437819Z   AOTID E87160E2-BE64-3040-7216-8519D54F4C66\r\n2024-08-01T22:17:44.4438379Z   * Assertion at /__w/1/s/src/mono/mono/mini/mini-amd64.c:806, condition `class1 != ARG_CLASS_NO_CLASS\u0027 not met\r\n2024-08-01T22:17:44.4438707Z   \r\n2024-08-01T22:17:44.4438904Z   \r\n2024-08-01T22:17:44.4439160Z   =================================================================\r\n2024-08-01T22:17:44.4439382Z   \tNative Crash Reporting\r\n2024-08-01T22:17:44.4439612Z   =================================================================\r\n2024-08-01T22:17:44.4439878Z   Got a SIGABRT while executing native code. This usually indicates\r\n2024-08-01T22:17:44.4503811Z   a fatal error in the mono runtime or one of the native libraries \r\n2024-08-01T22:17:44.4504078Z   used by your application.\r\n2024-08-01T22:17:44.4507375Z   =================================================================\r\n2024-08-01T22:17:44.4507639Z   \r\n2024-08-01T22:17:44.4507841Z   =================================================================\r\n2024-08-01T22:17:44.4508094Z   \tExternal Debugger Dump:\r\n2024-08-01T22:17:44.4508310Z   =================================================================\r\n2024-08-01T22:17:44.4508528Z   \r\n2024-08-01T22:17:44.4508730Z   =================================================================\r\n2024-08-01T22:17:44.4508995Z   \tNative stacktrace:\r\n2024-08-01T22:17:44.4510175Z   =================================================================\r\n2024-08-01T22:17:44.4515383Z   \t0x77209e3f97df - Unknown\r\n2024-08-01T22:17:44.4515852Z   \t0x77209e39f1be - Unknown\r\n2024-08-01T22:17:44.4516289Z   \t0x77209e3f9091 - Unknown\r\n2024-08-01T22:17:44.4516991Z   \t0x77209e746c90 - Unknown\r\n2024-08-01T22:17:44.4517301Z   \t0x77209e7970d4 - Unknown\r\n2024-08-01T22:17:44.4517605Z   \t0x77209e746bde - Unknown\r\n2024-08-01T22:17:44.4517854Z   \t0x77209e72f832 - Unknown\r\n2024-08-01T22:17:44.4518019Z   \t0x77209e49d904 - Unknown\r\n2024-08-01T22:17:44.4518400Z   \t0x77209e4ad256 - Unknown\r\n2024-08-01T22:17:44.4518545Z   \t0x77209e49dd6f - Unknown\r\n2024-08-01T22:17:44.4518692Z   \t0x77209e49ded5 - Unknown\r\n2024-08-01T22:17:44.4518833Z   \t0x77209e49df17 - Unknown\r\n2024-08-01T22:17:44.4518980Z   \t0x77209e3f376f - Unknown\r\n2024-08-01T22:17:44.4519131Z   \t0x77209e3d77f7 - Unknown\r\n2024-08-01T22:17:44.4519275Z   \t0x77209e3da791 - Unknown\r\n2024-08-01T22:17:44.4519429Z   \t0x77209e37b9fa - Unknown\r\n2024-08-01T22:17:44.4519586Z   \t0x77209e36f7e6 - Unknown\r\n2024-08-01T22:17:44.4519737Z   \t0x77209e36b59f - Unknown\r\n2024-08-01T22:17:44.4519894Z   \t0x77209e36182f - Unknown\r\n2024-08-01T22:17:44.4520032Z   \t0x77209e360378 - Unknown\r\n2024-08-01T22:17:44.4520164Z   \t0x77209e3d68a7 - Unknown\r\n2024-08-01T22:17:44.4520293Z   \t0x5d103e91b6d6 - Unknown\r\n2024-08-01T22:17:44.4520417Z   \t0x77209e730efb - Unknown\r\n2024-08-01T22:17:44.4520551Z   \t0x77209e730fbb - Unknown\r\n2024-08-01T22:17:44.4520677Z   \t0x5d103e9187e9 - Unknown\r\n2024-08-01T22:17:44.4520769Z   \r\n2024-08-01T22:17:44.4520885Z   =================================================================\r\n2024-08-01T22:17:44.4521014Z   \tBasic Fault Address Reporting\r\n2024-08-01T22:17:44.4521146Z   =================================================================\r\n2024-08-01T22:17:44.4521348Z   Memory around native instruction pointer (0x77209e7970d4):0x77209e7970c4  05 00 44 89 f2 89 de 89 c7 b8 ea 00 00 00 0f 05  ..D.............\r\n2024-08-01T22:17:44.4521550Z   0x77209e7970d4  89 c3 f7 db 3d 00 f0 ff ff b8 00 00 00 00 0f 47  ....=..........G\r\n2024-08-01T22:17:44.4521712Z   0x77209e7970e4  c3 48 83 c4 18 5b 41 5c 41 5d 41 5e 41 5f 5d c3  .H...[A\\A]A^A_].\r\n2024-08-01T22:17:44.4521859Z   0x77209e7970f4  0f 1f 40 00 4c 89 ef e8 90 ae ff ff e9 55 ff ff  ..@.L........U..\r\n2024-08-01T22:17:44.6457478Z /__w/1/s/src/mono/msbuild/aot-compile.proj(19,9): error MSB3073: The command \"/__w/1/s/artifacts/tests/coreclr/linux.x64.Release/Tests/Core_Root/corerun /__w/1/s/artifacts/tests/coreclr/linux.x64.Release/JIT/Directed/StructABI/EmptyStructs/EmptyStructs.dll\" exited with code 134.\r\n```\r\n\r\n\r\n\r\n\u003c!-- Error message template  --\u003e\r\n## Error Message\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssueJsonStepByStep.md).\r\n\r\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": \"artifacts/tests/coreclr/linux.x64.Release/JIT/Directed/StructABI/EmptyStructs/EmptyStructs.dll\\\" exited with code 134.\",\r\n  \"BuildRetry\": false,\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\n\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=763399\r\n**Error message validated:** `[artifacts/tests/coreclr/linux.x64.Release/JIT/Directed/StructABI/EmptyStructs/EmptyStructs.dll\" exited with code 134.`]\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 8/7/2024 11:37:07 AM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|0|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOi7yOfQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6Hf1l8",
                                           "createdAt":  "2024-08-07T11:40:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "matouskozak",
                                           "body":  "I think the failures got triggered by https://github.com/dotnet/runtime/pull/104237 @tomeksowi . \r\n\r\nIt looks like Mono doesn\u0027t support this scenario:\r\nhttps://github.com/dotnet/runtime/blob/cb65d110eaf3557db5b4dd4335700f319297d2de/src/mono/mono/mini/mini-amd64.c#L804-L806\r\n\r\nDo you know what changes would be required to make this work for Mono? \r\n\r\ncc: @steveisok ",
                                           "updatedAt":  "2024-08-07T11:40:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6HhNAm",
                                           "createdAt":  "2024-08-07T14:34:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tomeksowi",
                                           "body":  "\u003e I think the failures got triggered by #104237 @tomeksowi .\r\n\r\nSorry about breaking the build. #104237 JIT changes should be confined to RISC-V and LoongArch.\r\n\r\n\u003e Do you know what changes would be required to make this work for Mono?\r\n\r\nI\u0027m not familiar with Mono but If I understand the code correctly `quad` stands for what System V ABI calls `eightbyte`. If so, it\u0027s the problem described in #104098. I made `ActiveIssue`s to disable on System V the test cases in JIT/Directed/StructABI/EmptyStructs which have NO_CLASS eightbytes (the ones with standalone `Empty` arguments or `Empty8Float`) so it shouldn\u0027t get there. Is the problem Mono fails already when it sees a function signature with a NO_CLASS eightbyte? If so, I think only conditional compilation of these test cases would help.",
                                           "updatedAt":  "2024-08-07T14:38:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6HhkV-",
                                           "createdAt":  "2024-08-07T15:18:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tomeksowi",
                                           "body":  "One more thing, in VM we simply reclassify NO_CLASS eightbytes to INTEGER, see https://github.com/dotnet/runtime/pull/103799/files#diff-8b4d839010e3c7e363eb430d3efed40b0f9a01a7661e16f753374598ded88f8cR2695\r\n\r\nMaybe Mono could do something similar, I\u0027ll try to build Mono and reproduce the issue.",
                                           "updatedAt":  "2024-08-07T15:18:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Hh-Uz",
                                           "createdAt":  "2024-08-07T16:10:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "matouskozak",
                                           "body":  "\u003e  Is the problem Mono fails already when it sees a function signature with a NO_CLASS eightbyte? If so, I think only conditional compilation of these test cases would help.\r\n\r\nI think that\u0027s the case.\r\n\r\n\u003e One more thing, in VM we simply reclassify NO_CLASS eightbytes to INTEGER, see https://github.com/dotnet/runtime/pull/103799/files#diff-8b4d839010e3c7e363eb430d3efed40b0f9a01a7661e16f753374598ded88f8cR2695\r\n\u003e \r\n\u003e Maybe Mono could do something similar, I\u0027ll try to build Mono and reproduce the issue.\r\n\r\nThank you, let me know how it goes.",
                                           "updatedAt":  "2024-08-07T16:10:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6HnK87",
                                           "createdAt":  "2024-08-08T07:59:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODtP52w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "matouskozak",
                                                                               "createdAt":  "2024-08-08T10:10:58Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "tomeksowi",
                                           "body":  "I tried to build, the NO_CLASS to INTEGER reclassification did solve the test compilation of EmptyStruct but the build fails on other tests on my machine so I couldn\u0027t test it.\r\n\r\nAnother problem is in #105800 I\u0027m adding reflection variants of the tests which also fail on Mono. Unfortunately I\u0027m not familiar enough with Mono to investigate now.\r\n\r\nI think it\u0027s best to turn off this test for System V Mono for now, these cases are needed mostly for RISC-V and LoongArch to confront passing structs according to hardware FP calling convention with native compilers, empty structs make for interesting cases because they add different field paddings.",
                                           "updatedAt":  "2024-08-08T07:59:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6LvI59",
                                           "createdAt":  "2024-09-11T18:28:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODyYWqg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "matouskozak",
                                                                               "createdAt":  "2024-09-16T14:10:57Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jeffschwMSFT",
                                           "body":  "removing \u0027blocking-clean-ci\u0027 as it has not failed in 30 days\r\n\r\n24-Hour Hit Count | 7-Day Hit Count | 1-Month Count\r\n-- | -- | --\r\n0 | 0 | 0\r\n",
                                           "updatedAt":  "2024-09-11T18:28:56Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "[mono] FullAOT build asserts at `class1 != ARG_CLASS_NO_CLASS\u0027  for EmptyStructs.dll",
        "labels":  [
                       "disabled-test",
                       "arch-x64",
                       "area-Codegen-AOT-mono",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/108020",
        "createdAt":  "2024-09-19T13:43:00Z",
        "number":  108020,
        "author":  "radekdoulik",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-04T14:32:46Z",
        "body":  "The library AOT smoke tests and 2 WBT tests are broken after updating to newer llvm 19 (rc2 .. rc4)\r\n\r\nExample of the crashes:\r\n\r\n      [Release_j21aevt4_rp2] [MONO] error: * Assertion at /__w/1/s/src/mono/mono/metadata/assembly.c:1306, condition `is_ok (error)\u0027 not met, function:invoke_assembly_preload_hook, Allocation failed. assembly:\u003cunknown assembly\u003e type:\u003cunknown type\u003e member:(null)",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOj-QxRg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6P5DFG",
                                           "createdAt":  "2024-10-15T14:29:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radekdoulik",
                                           "body":  "Tried to use ASAN on wasi today. The wasi-sdk\u0027s clang doesn\u0027t support it.\n\n```\nerror : Failed to compile /Users/rodo/git/runtime/artifacts/obj/Invariant.Tests/Release/net10.0/wasi-wasm/wasm/for-publish/Invariant.Tests.dll.bc -\u003e /Users/rodo/git/runtime/artifacts/obj/Invariant.Tests/Release/net10.0/wasi-wasm/wasm/for-publish/Invariant.Tests.dll.o [/Users/rodo/git/runtime/src/libraries/System.Runtime/tests/System.Globalization.Tests/Invariant/Invariant.Tests.csproj]\nerror : clang version 18.1.2-wasi-sdk (https://github.com/llvm/llvm-project 26a1d6601d727a96f4301d0d8647b5a42760ae0c) [/Users/rodo/git/runtime/src/libraries/System.Runtime/tests/System.Globalization.Tests/Invariant/Invariant.Tests.csproj]\nerror : Target: wasm32-unknown-wasip2 [/Users/rodo/git/runtime/src/libraries/System.Runtime/tests/System.Globalization.Tests/Invariant/Invariant.Tests.csproj]\nerror : Thread model: posix [/Users/rodo/git/runtime/src/libraries/System.Runtime/tests/System.Globalization.Tests/Invariant/Invariant.Tests.csproj]\nerror : InstalledDir: /Users/rodo/git/runtime/src/mono/wasi/wasi-sdk/bin [/Users/rodo/git/runtime/src/libraries/System.Runtime/tests/System.Globalization.Tests/Invariant/Invariant.Tests.csproj]\nerror : clang: error: unsupported option \u0027-fsanitize=address\u0027 for target \u0027wasm32-unknown-wasip2\u0027 [took 0,332s] [/Users/rodo/git/runtime/src/libraries/System.Runtime/tests/System.Globalization.Tests/Invariant/Invariant.Tests.csproj]\n```",
                                           "updatedAt":  "2024-10-15T14:29:43Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "[wasi] AOT broken in llvm 19",
        "labels":  [
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/109166",
        "createdAt":  "2024-10-23T20:54:51Z",
        "number":  109166,
        "author":  "Sean4572435243",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-06-30T16:50:20Z",
        "body":  "The following is not a criticism, just an experience, and not blaming Microsoft at all.  It\u0027s a complex product with lots of gotchas, and this one probably will get a few, so hoping to help.\n\nSpent 3 days in a rabbit hole ([#1](https://github.com/dotnet/runtime/issues/109128) and [#2](https://github.com/dotnet/runtime/issues/109089)) trying to understand why after updating my Blazor project AspNetCore modules (8.0.10 in this case), it would no longer compile successfully with AOT:true, with virtually no logging or output to work with.  Tried many code modifications that wasted much time, but in the end it wasn\u0027t my code at all, I discovered the problems were due to zombie compile processes and lingering deprecated cached compiled files in my project directories that for some reason weren\u0027t being properly destroyed/updated by the new version of the compiler.  \n\nA simple \u0027clean solution\u0027 was insufficient.  I eventually scripted the hard deletion of my ~30 project bin and obj folders, and likewise preceded the build with a task kill of potentially-orphaned build-related processes that remained zombied, locking files from future build attempts.  \n\nThe AOT:true compiler does work, but there can\u0027t be any trace of prior builds from prior compiler versions residing on disk.  I consider this a bug because it\u0027s not obvious what the problem is, with many misdirections that leads to days of hunting rabbits.  At the very least there should be meaningful error messages when compilation fails, but ideally during package upgrading, an informational popup explaining that all these obj/bin folders need to be deleted, or maybe actually perform that action. \n\nFor the workaround (hopefully future-proof), here\u0027s my new pre-cleansing script that is executed every time before any AOT:true build is attempted\n\n```\ntaskkill /IM mono-aot-cross.exe /F\ntaskkill /IM dotnet.exe /F\nrmdir /s /q \"C:\\Dev\\MyProject1\\bin\"\nrmdir /s /q \"C:\\Dev\\MyProject1\\obj\"\nrmdir /s /q \"C:\\Dev\\MyProject2\\bin\"\nrmdir /s /q \"C:\\Dev\\MyProject2\\obj\"\n..etc\nrmdir /S /Q \"C:\\inetpub\\myPublishTarget\\wwwroot\"\n```\n\nand then the build is like\n\n`msbuild /t:restore;build \"c:\\Dev\\MySolution.sln\" /t:Clean /p:Configuration=Release`\n\nand the publish\n\n`dotnet publish /p:NoBuild=true /p:PublishDir=\"c:\\myPublishTarget\" \"c:\\Dev\\MyBlazorProjectFolder\" -p:RunAOTCompilation=true -p:BlazorEnableCompression=false (or true)`\n\nand for posterity, at the end of the build script, I repeat\n\n```\ntaskkill /IM mono-aot-cross.exe /F\ntaskkill /IM dotnet.exe /F\n```\n\nPrecleansing for AOT:true builds typically only applies to either production or staging releases, so the loss of pre-cached items shouldn\u0027t impact development cycle times at all.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOs_psDQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6RC3Uh",
                                           "createdAt":  "2024-10-23T20:55:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-10-23T20:55:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6z-mwN",
                                           "createdAt":  "2025-06-30T15:06:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "/cc @lewing ",
                                           "updatedAt":  "2025-06-30T15:06:27Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Upgrading Blazor to new AspNetCore requires aggressive project bin/obj folders deletion",
        "labels":  [
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/109170",
        "createdAt":  "2024-10-24T01:31:16Z",
        "number":  109170,
        "author":  "jeromelaban",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-05T22:04:27Z",
        "body":  "### Description\n\nConsider the following code:\n\n```csharp\nstruct Vec3\n{\n    public float X, Y, Z;\n\n    public static readonly Vec3 Zero = new Vec3();\n\n    public Vec3(float x, float y, float z)\n    {\n        X = x;\n        Y = y;\n        Z = z;\n    }\n}\n```\n\nWhich gets compiled to:\n\n```\n.class private sequential ansi sealed beforefieldinit MyNS.Vec3\n\textends [System.Private.CoreLib]System.ValueType\n{\n\t// Fields\n\t.field public float32 X\n\t.field public float32 Y\n\t.field public float32 Z\n\t.field public static initonly valuetype RayTraceBenchmark.Vec3 Zero\n\n\t.method private hidebysig specialname rtspecialname static \n\t\tvoid .cctor () cil managed \n\t{\n\t\t// Header size: 1\n\t\t// Code size: 1 (0x1)\n\t\t.maxstack 8\n\n\t\tIL_0000: ret\n\t} // end of method Vec3::.cctor\n\n} // end of class RayTraceBenchmark.Vec3\n```\n\nWhen the IL Linker is used on that type, the empty ctor is removed, making the creation of values of `Vec3` significantly faster when running with AOT.\n\nRegardless of the use of the IL Linker on that type, it would be interesting if the AOT compiler could skip AOTing empty ctors to improve performance.\n\n### Configuration\n\n.NET 9 RC2.\n\n### Regression?\n\nNo",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOla8KVw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6RMO5z",
                                           "createdAt":  "2024-10-24T17:23:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-10-24T17:23:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6VrwpX",
                                           "createdAt":  "2024-12-02T11:27:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "Maybe this is not only impacting WASM, right ?\n\ncc @BrzVlad ",
                                           "updatedAt":  "2024-12-02T11:27:09Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "[Wasm] Empty struct type ctors should be removed when building with AOT",
        "labels":  [
                       "arch-wasm",
                       "tenet-performance",
                       "area-Codegen-AOT-mono",
                       "Priority:3"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/109550",
        "createdAt":  "2024-11-05T14:56:09Z",
        "number":  109550,
        "author":  "ilonatommy",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-04T09:42:48Z",
        "body":  "### Description\n\nFound in https://github.com/dotnet/runtime/pull/109069#issuecomment-2455140713.\nAOT publish with `BlazorWebAssemblyLazyLoad` fails when the project uses lazy loading:\n```\n          [log] MONO_WASM: postRunAsync\n          [log] MONO interpreter: NIY encountered in method \u003cModule\u003e:.cctor ()\n          [error] [MONO] * Assertion: should not be reached at C:/Users/source/repos/runtime-fork/src/mono/mono/mini/interp/interp.c:3965\n  \n  Error\n      at Mc (http://127.0.0.1:59212/_framework/dotnet.runtime.86yd0u3ifj.js:3:170831)\n      at http://127.0.0.1:59212/_framework/dotnet.native.mhy5ge7lhj.wasm:wasm-function[24568]:0x52f540\n      at http://127.0.0.1:59212/_framework/dotnet.native.mhy5ge7lhj.wasm:wasm-function[17202]:0x36c4cb\n      at http://127.0.0.1:59212/_framework/dotnet.native.mhy5ge7lhj.wasm:wasm-function[17126]:0x36a3d6\n      at http://127.0.0.1:59212/_framework/dotnet.native.mhy5ge7lhj.wasm:wasm-function[17130]:0x36a506\n      at http://127.0.0.1:59212/_framework/dotnet.native.mhy5ge7lhj.wasm:wasm-function[17133]:0x36a575\n      at http://127.0.0.1:59212/_framework/dotnet.native.mhy5ge7lhj.wasm:wasm-function[16505]:0x333933\n      at http://127.0.0.1:59212/_framework/dotnet.native.mhy5ge7lhj.wasm:wasm-function[16542]:0x342dc4\n      at http://127.0.0.1:59212/_framework/dotnet.native.mhy5ge7lhj.wasm:wasm-function[19233]:0x3ff561\n      at http://127.0.0.1:59212/_framework/dotnet.native.mhy5ge7lhj.wasm:wasm-function[18619]:0x3d496f\n```\n\nThe stack is not any nicer in debug mode, I did not find a stack for\n\nhttps://github.com/dotnet/runtime/blob/7c2f0041be9068fb641f53dc830606c95aab2488/src/mono/mono/mini/interp/interp.c#L3964\n\n\n### Reproduction Steps\n\nFrom scratch:\n```\ndotnet new wasmbrowser -n app\ndotnet new classlib -n lib\ncd app\n```\nAdd library that will be lazy loaded, use it in the App project:\n```\n\u003cItemGroup\u003e\n    \u003cProjectReference Include=\"..\\lib\\lib.csproj\" /\u003e\n    \u003cBlazorWebAssemblyLazyLoad Include=\"lib.wasm\" /\u003e\n  \u003c/ItemGroup\u003e\n```\nPublish:\n```\ndotnet publish -p:RunAOTCompilation=true\ncd ./bin/Release/net9.0/publish/wwwroot\ndotnet-serve\n```\n\nOR\n\nUsing our tests:\nTake any `WasmBuildTest` that is in `TestAppScenario` namespace (that means, it\u0027s using `WasmBasicTestApp`). Add AOT=true to it, currently all of them are testes with AOT=false. Publish.\n\n### Expected behavior\n\nRuns as good as after build.\n\n### Actual behavior\n\nthrows not implemented exception in https://github.com/dotnet/runtime/blob/7c2f0041be9068fb641f53dc830606c95aab2488/src/mono/mono/mini/interp/interp.c#L3964\n\n### Regression?\n\nRather not, most probably lazy loading was not tested with IL stripping feature that is relatively new: [WasmStripILAfterAOT](https://github.com/dotnet/runtime/pull/88926)\n\n### Known Workarounds\n\n- Set `WasmStripILAfterAOT=false` or\n- Remove lazy loading\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOu2tijQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6SeN0K",
                                           "createdAt":  "2024-11-05T14:56:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-11-05T14:56:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6SeOBS",
                                           "createdAt":  "2024-11-05T14:56:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @brzvlad, @kotlarmilos\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-11-05T14:56:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6SeiMc",
                                           "createdAt":  "2024-11-05T15:29:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BrzVlad",
                                           "body":  "Maybe I\u0027m not really fully understanding the issue, but why would it be an interpreter issue if we need to interpret a method that has no body. Is `\u003cModule\u003e:.cctor` supposed to have been aot\u0027ed ?",
                                           "updatedAt":  "2024-11-05T15:29:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6SlDiz",
                                           "createdAt":  "2024-11-06T10:03:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ilonatommy",
                                           "body":  "Maybe I mislabeled, the assert is failing in interpreter file, so I triaged it that way. Feel free to change the area.",
                                           "updatedAt":  "2024-11-06T10:03:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6VrvOQ",
                                           "createdAt":  "2024-12-02T11:24:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "Maybe we need to protect lazy loaded methods from the trimming in the test",
                                           "updatedAt":  "2024-12-02T11:24:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc67alGz",
                                           "createdAt":  "2025-08-01T11:50:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "notes:\n- the Module.cctor of the lazy assembly is compiled by AOT compiler and it\u0027s token added into \"obj\\Release\\net10.0\\wasm\\for-publish\\tokens\\LazyLibrary_dll_compiled_methods.txt\"\n- based on `ILStrip` task would remove MSIL from the assembly\n- the but it would also generate `driver-gen.c` with call to `mono_aot_register_module (mono_aot_module_LazyLibrary_info);`\n- during the runtime startup, the `load_image` in `aot-runtime.c` would complain \n    `[MONO] AOT: module WasmBasicTestApp is unusable because dependency LazyLibrary is not found.` \n    `[MONO] AOT: Module WasmBasicTestApp.dll is unusable because a dependency is out-of-date.`\n- the whole thing will fail after trying to run module cctor of the main module that wants to use the lazy module\n\n```\n[MONO] Running module .cctor for \u0027WasmBasicTestApp.dll\u0027\ndotnet.runtime.cst1d06o05.js:3 [MONO] Running class .cctor for \u003cModule\u003e from \u0027WasmBasicTestApp.dll\u0027\ndotnet.native.2o7i4s6qhj.js:1331 MONO interpreter: NIY encountered in method \u003cModule\u003e:.cctor ()\n```",
                                           "updatedAt":  "2025-08-01T12:02:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc67as9u",
                                           "createdAt":  "2025-08-01T12:02:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "Better stack trace shows this is during attempt to initialize main module.\n\n\u003cimg width=\"1612\" height=\"976\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/75231ad2-ae70-4faa-bcb6-2cf7ffb71552\" /\u003e",
                                           "updatedAt":  "2025-08-01T12:02:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc67a0Nx",
                                           "createdAt":  "2025-08-01T12:12:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "I think that `NIY encountered in method \u003cModule\u003e:.cctor` is about main module cctor, because we failed to load the AOT image. \nRuntime is trying to interpret the cctor. But main module cctor was ILStripped as well, there is no IL for it.",
                                           "updatedAt":  "2025-08-01T12:12:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc67a2KN",
                                           "createdAt":  "2025-08-01T12:14:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "So `WasmStripILAfterAOT=false` doesn\u0027t really work as workaround because hard link in `mono_aot_register_module` prevents AOTd code in the main module. Keeping MSIL in the assembly is only masking that problem.",
                                           "updatedAt":  "2025-08-04T09:42:48Z"
                                       }
                                   ],
                         "totalCount":  9
                     },
        "title":  "AOT publish of project that uses lazy loading fails",
        "labels":  [
                       "arch-wasm",
                       "area-Codegen-AOT-mono",
                       "os-browser"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/109862",
        "createdAt":  "2024-11-15T12:04:26Z",
        "number":  109862,
        "author":  "voroninp",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-02-21T09:22:23Z",
        "body":  "### Description\n\nI am playing with Blazor and discovered that for some reason publishing application as WASM AOT breaks it one way or another.\n\nHere is [the repo](https://github.com/voroninp/DutchVerbs)\n\nIf I use regular (not source generated regex with `NonBacktracing` option, application fails at startup.\n\nHere is an example of the log I see in browser console. (including debug logs from Mono):\n[voroninp.github.io-1731573811462.log](https://github.com/user-attachments/files/17775046/voroninp.github.io-1731573811462.log)\n\nIf I remove `NonBacktracking` application start without any issue.\n\nWhen I [switch to source generated regex](https://github.com/voroninp/DutchVerbs/blob/6475c0a15e15173f6a8184f108e22c86a4235bc7/DutchVerbs.Spa/Infrastructure/Application.cs#L115), I have another error:\n```\nManagedError: AggregateException_ctor_DefaultMessage (NoMetadataForType, System.Object, DutchVerbs.Spa.Infrastructure.SourceGenerationContext Path: $ | LineNumber: 0 | BytePositionInLine: 1.)\n    at sn (dotnet.runtime.o8gq1i8bk6.js:3:26894)\n    at Kt.resolve_or_reject (dotnet.runtime.o8gq1i8bk6.js:3:26449)\n    at dotnet.runtime.o8gq1i8bk6.js:3:172526\n    at dotnet.runtime.o8gq1i8bk6.js:3:172590\n    at fr (dotnet.runtime.o8gq1i8bk6.js:3:35046)\n    at Fc (dotnet.runtime.o8gq1i8bk6.js:3:172173)\n    at dotnet.native.sn79jhuo16.wasm:0x360233\n    at dotnet.native.sn79jhuo16.wasm:0x36c10f\n    at dotnet.native.sn79jhuo16.wasm:0x64a937\n    at dotnet.native.sn79jhuo16.wasm:0x91fccc\n``` \n\nP.S. I was asked to create a new issue by @vitek-karas [here](#99030)\n\n### Reproduction Steps\n\nVisit [this url](https://voroninp.github.io/DutchVerbs/) to see the error, or play with the repository https://github.com/voroninp/DutchVerbs\n\n### Expected behavior\n\nIt should not fail.\n\n### Actual behavior\n\nIt fails.\n\n### Regression?\n\nI did not have the problem with .NET 8\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOn05oSg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6TwRmX",
                                           "createdAt":  "2024-11-15T13:58:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-11-15T13:58:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6T-aaB",
                                           "createdAt":  "2024-11-18T10:25:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "I think that the interesting part of the log is \n```\ndotnet.runtime.o8gq1i8bk6.js:3 [MONO] AOT NOT FOUND: (wrapper other) object:gsharedvt_out_sig (intptr,System.Text.RegularExpressions.Symbolic.SymbolicRegexBuilder`1/NodeCacheKey\u003cobject\u003e\u0026,intptr).\ndotnet.runtime.o8gq1i8bk6.js:3 [MONO] * Assertion at /__w/1/s/src/mono/mono/mini/interp/interp.c:2667, condition `\u003cdisabled\u003e\u0027 not met\n```\n\nwhich is pointing to \nhttps://github.com/dotnet/runtime/blob/234e2f7ec5dd315014f31574719900c0715f9477/src/mono/mono/mini/interp/interp.c#L2665-L2667",
                                           "updatedAt":  "2024-11-18T10:25:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6UCn2H",
                                           "createdAt":  "2024-11-18T17:44:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vitek-karas",
                                           "body":  "@BrzVlad - this is probably the interpreter problem from https://github.com/dotnet/runtime/issues/99030#issuecomment-2475752665. There seems to be a repro (I didn\u0027t try it).",
                                           "updatedAt":  "2024-11-18T17:44:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6fTmhK",
                                           "createdAt":  "2025-02-20T21:23:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "voroninp",
                                           "body":  "So, gentlemen? How is it going with this issue? ",
                                           "updatedAt":  "2025-02-20T21:23:57Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "WASM AOT fails with regex in .NET 9",
        "labels":  [
                       "arch-wasm",
                       "area-Codegen-AOT-mono",
                       "os-browser"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/110143",
        "createdAt":  "2024-11-25T02:48:23Z",
        "number":  110143,
        "author":  "iSeiryu",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-03-04T14:47:53Z",
        "body":  "Related discussion: https://github.com/dotnet/runtime/issues/92238#issuecomment-1907069431\n\nSince that issue was closed I\u0027m opening a new one.\n```bash\n\u003e dotnet --info\n.NET SDK:\n Version:           9.0.100\n Commit:            a2bc464e40\n Workload version:  9.0.100-manifests.6bf02610\n MSBuild version:   17.12.7+a2bc464e4\n```\n\nMy .csproj\n```xml\n\u003cPropertyGroup\u003e\n  \u003cTargetFramework\u003enet9.0\u003c/TargetFramework\u003e\n  \u003cNullable\u003eenable\u003c/Nullable\u003e\n  \u003cImplicitUsings\u003eenable\u003c/ImplicitUsings\u003e\n  \u003cInvariantGlobalization\u003etrue\u003c/InvariantGlobalization\u003e\n  \u003cBlazorEnableTimeZoneSupport\u003efalse\u003c/BlazorEnableTimeZoneSupport\u003e\n  \u003cBlazorWebAssemblyPreserveCollationData\u003efalse\u003c/BlazorWebAssemblyPreserveCollationData\u003e\n  \u003cWasmExceptionHandling\u003etrue\u003c/WasmExceptionHandling\u003e\n  \u003cWasmSIMD\u003efalse\u003c/WasmSIMD\u003e\n\u003c/PropertyGroup\u003e\n```\nPublish command\n```bash\ndotnet publish UI.csproj -c Release -p:RunAOTCompilation=true -p:WasmStripILAfterAOT=true\n```\n\nThe size of `dotnet.native.wasm.gz` on:\n- dotnet 8 with WasmStripILAfterAOT=false - 3.7MB\n- dotnet 8 with WasmStripILAfterAOT=true - 2.5MB (but the app fails to launch)\n- dotnet 9 with WasmStripILAfterAOT=true - 4MB\n\nYou can find a published app here:\nhttps://iseiryu.github.io/blazor-aot\nhttps://github.com/iSeiryu/iseiryu.github.io/tree/main/blazor-aot\nSource code:\nhttps://github.com/iSeiryu/blazor-wasm-experiments",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOlPOy9w==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6U87L3",
                                           "createdAt":  "2024-11-25T20:46:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-11-25T20:46:20Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Blazor WASM produces larger binaries with dotnet 9 compared to dotnet 8, even with WasmStripILAfterAOT=true",
        "labels":  [
                       "arch-wasm",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/111270",
        "createdAt":  "2025-01-10T11:30:54Z",
        "number":  111270,
        "author":  "mip1983",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-06-30T16:51:16Z",
        "body":  "### Description\n\nI have a Blazor Web project which I build/deploy through Azure DevOps (using Aspire/azd tools).\n\nI\u0027ve found that to get reasonable UI performance with certain third party UI chart controls where there is a lot of user interaction and JS interop, I need to use AOT compilation with this in my Web.Client project file:\n\n```xml\n\u003cPropertyGroup\u003e\n\t\u003cRunAOTCompilation\u003etrue\u003c/RunAOTCompilation\u003e\n\t\u003cWasmStripILAfterAOT\u003efalse\u003c/WasmStripILAfterAOT\u003e\n\u003c/PropertyGroup\u003e\n```\n\nThe build/deploy time for my Blazor web app with AOT compilation enabled with a standard \u0027windows-latest\u0027 agent on Azure DevOps has crept up to nearly 2 hours which seems pretty crazy. It looks locally like its spending most of it\u0027s time in the wasm aot compile step.\n\nI\u0027ve used Azure Managed agent pools to get an on demand 16 core machine as an agent and that brings the build time down to about half an hour, which still seems like quite a long time.\n\n\nOverall, this issue does make deploying the end to end microsoft web tech stack (.NET, Blazor, Azure DevOps, Azure) both slow but also very power hungry and therefore wasteful from an energy/CO2 perspective. As such, I hope it\u0027s something you can prioritize. I\u0027ve no idea how many of your customers are trying to do the same, but it would be good to get the time/energy down.\n\n\nIs there anything in the pipeline or ticket I can track for improvements to Blazor AOT compile time?\n\nI\u0027m going to experiment with the \u0027EmccLinkOptimizationFlag\u0027 elements I\u0027ve found in another thread to see how that effects the balance of compile time vs. size and performance, but I\u0027m hoping there\u0027s something more fundamental in the works.\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOs_o-WQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6z-j5Z",
                                           "createdAt":  "2025-06-30T15:03:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "/cc @lewing ",
                                           "updatedAt":  "2025-06-30T15:03:49Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Blazor AOT build time on Azure DevOps nearing 2 hours",
        "labels":  [
                       "tenet-performance",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/112093",
        "createdAt":  "2025-02-03T12:24:17Z",
        "number":  112093,
        "author":  "jkurdek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T03:02:49Z",
        "body":  "## Build Information\nBuild:  https://dev.azure.com/dnceng-public/public/_build/results?buildId=972237\nBuild error leg or test failing: Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd\n\u003c!-- Error message template  --\u003e\n## Error Message\n\n```\nTest failed. Trying to see if dump file was created in /home/helixbot/dotnetbuild/dumps since 2/2/2025 11:10:03 AM\nTest Harness Exitcode is : 1\nTo run the test:\nSet up CORE_ROOT and run.\n\u003e /datadisks/disk1/work/AD9209D1/w/A91008EE/e/Loader/Loader/../classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.sh\nXunit.Sdk.TrueException: \nReturn code:      1\nRaw output file:      /datadisks/disk1/work/AD9209D1/w/A91008EE/uploads/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/output.txt\nRaw output:\nBEGIN EXECUTION\n/datadisks/disk1/work/AD9209D1/p/corerun -p System.Reflection.Metadata.MetadataUpdater.IsSupported=false -p System.Runtime.Serialization.EnableUnsafeBinaryFormatterSerialization=true case13.dll \u0027\u0027\nXunit.Sdk.ThrowsException: Assert.Throws() Failure: Exception type was not an exact match\nExpected: typeof(System.TypeLoadException)\nActual:   typeof(System.ExecutionEngineException)\n   at Xunit.Assert.Throws(Type exceptionType, Exception exception) in /_/src/Microsoft.DotNet.XUnitAssert/src/ExceptionAsserts.cs:line 47\n   at Xunit.Assert.Throws[TypeLoadException](Func`1 testCode)\n   at Test.Validate_Explicit5_Invalid()\n   at __GeneratedMainWrapper.Main()\nExpected: 100\nActual: 101\nEND EXECUTION - FAILED\n```\n\nThe test was introduced in https://github.com/dotnet/runtime/pull/111584. cc @AaronRobinsonMSFT \n\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssueJsonStepByStep.md).\n\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\n\n```json\n{\n  \"ErrorMessage\": \"Failed test: Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd\",\n  \"BuildRetry\": false,\n  \"ExcludeConsoleLog\": false\n}\n```\n\n\u003c!-- Known issue validation start --\u003e\n ### Known issue validation\n**Build: :mag_right:**  https://dev.azure.com/dnceng-public/public/_build/results?buildId=972237\n**Error message validated:** `[   at Xunit.Assert.Throws(Type exceptionType, Exception exception) in /_/src/Microsoft.DotNet.XUnitAssert/src/ExceptionAsserts.cs:line 47`]\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\n**Validation performed at:** 2/3/2025 12:24:54 PM UTC\n\u003c!-- Known issue validation end --\u003e\n\n\n\n\n\n\u003c!--Known issue error report start --\u003e\n\n### Report\n\n|Build|Definition|Test|Pull Request|\n|---|---|---|---|\n|[975369](https://dev.azure.com/dnceng-public/public/_build/results?buildId=975369)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=975369\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=26001858\u0026resultId=101556)||\n|[975416](https://dev.azure.com/dnceng-public/public/_build/results?buildId=975416)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=975416\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25998730\u0026resultId=114359)||\n|[974620](https://dev.azure.com/dnceng-public/public/_build/results?buildId=974620)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=974620\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25983692\u0026resultId=101699)||\n|[974730](https://dev.azure.com/dnceng-public/public/_build/results?buildId=974730)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=974730\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25979194\u0026resultId=114346)||\n|[973715](https://dev.azure.com/dnceng-public/public/_build/results?buildId=973715)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=973715\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25964656\u0026resultId=101699)||\n|[973759](https://dev.azure.com/dnceng-public/public/_build/results?buildId=973759)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=973759\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25960300\u0026resultId=114312)||\n|[973429](https://dev.azure.com/dnceng-public/public/_build/results?buildId=973429)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=973429\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25950994\u0026resultId=101699)|dotnet/runtime#113288|\n|[973384](https://dev.azure.com/dnceng-public/public/_build/results?buildId=973384)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=973384\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25949036\u0026resultId=101339)||\n|[973408](https://dev.azure.com/dnceng-public/public/_build/results?buildId=973408)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=973408\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25948434\u0026resultId=114497)||\n|[973161](https://dev.azure.com/dnceng-public/public/_build/results?buildId=973161)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=973161\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25945474\u0026resultId=101239)||\n|[973172](https://dev.azure.com/dnceng-public/public/_build/results?buildId=973172)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=973172\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25944152\u0026resultId=101628)||\n|[973032](https://dev.azure.com/dnceng-public/public/_build/results?buildId=973032)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=973032\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25938286\u0026resultId=110532)||\n|[972835](https://dev.azure.com/dnceng-public/public/_build/results?buildId=972835)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=972835\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25933136\u0026resultId=101665)||\n|[972861](https://dev.azure.com/dnceng-public/public/_build/results?buildId=972861)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=972861\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25929686\u0026resultId=111770)||\n|[972237](https://dev.azure.com/dnceng-public/public/_build/results?buildId=972237)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=972237\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25918718\u0026resultId=101874)||\n|[972269](https://dev.azure.com/dnceng-public/public/_build/results?buildId=972269)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=972269\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25915426\u0026resultId=114346)||\n|[971661](https://dev.azure.com/dnceng-public/public/_build/results?buildId=971661)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=971661\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25900914\u0026resultId=114357)||\n|[971108](https://dev.azure.com/dnceng-public/public/_build/results?buildId=971108)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=971108\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25882910\u0026resultId=114346)||\n|[970517](https://dev.azure.com/dnceng-public/public/_build/results?buildId=970517)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=970517\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25863078\u0026resultId=112808)||\n|[969995](https://dev.azure.com/dnceng-public/public/_build/results?buildId=969995)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=969995\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25847314\u0026resultId=114346)||\n|[969384](https://dev.azure.com/dnceng-public/public/_build/results?buildId=969384)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=969384\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25834548\u0026resultId=114346)||\n|[968876](https://dev.azure.com/dnceng-public/public/_build/results?buildId=968876)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=968876\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25821908\u0026resultId=114346)||\n|[968382](https://dev.azure.com/dnceng-public/public/_build/results?buildId=968382)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=968382\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25808662\u0026resultId=114074)||\n|[967828](https://dev.azure.com/dnceng-public/public/_build/results?buildId=967828)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=967828\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25794350\u0026resultId=114687)||\n|[967177](https://dev.azure.com/dnceng-public/public/_build/results?buildId=967177)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=967177\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25777510\u0026resultId=114346)||\n|[966785](https://dev.azure.com/dnceng-public/public/_build/results?buildId=966785)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=966785\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25762816\u0026resultId=114346)||\n|[966619](https://dev.azure.com/dnceng-public/public/_build/results?buildId=966619)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=966619\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25758046\u0026resultId=114598)||\n|[966484](https://dev.azure.com/dnceng-public/public/_build/results?buildId=966484)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=966484\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25751610\u0026resultId=103785)||\n|[966316](https://dev.azure.com/dnceng-public/public/_build/results?buildId=966316)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=966316\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25746290\u0026resultId=102665)||\n|[965974](https://dev.azure.com/dnceng-public/public/_build/results?buildId=965974)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=965974\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25737956\u0026resultId=114357)||\n|[965468](https://dev.azure.com/dnceng-public/public/_build/results?buildId=965468)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=965468\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25726724\u0026resultId=114184)||\n|[965092](https://dev.azure.com/dnceng-public/public/_build/results?buildId=965092)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=965092\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25715950\u0026resultId=114357)||\n|[964581](https://dev.azure.com/dnceng-public/public/_build/results?buildId=964581)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=964581\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25702436\u0026resultId=114212)||\n|[962825](https://dev.azure.com/dnceng-public/public/_build/results?buildId=962825)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=962825\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=25652336\u0026resultId=114357)||\n#### Summary\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\n|---|---|---|\n|4|22|34|\n\u003c!--Known issue error report end --\u003e\n\n\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n\r\n|Build|Definition|Test|Pull Request|\r\n|---|---|---|---|\r\n|[1153299](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153299)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153299\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31859180\u0026resultId=115705)||\r\n|[1152998](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152998)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152998\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31857198\u0026resultId=101703)||\r\n|[1152975](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152975)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152975\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31856010\u0026resultId=112775)||\r\n|[1152698](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152698)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152698\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31848716\u0026resultId=101954)||\r\n|[1152312](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152312)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152312\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31842098\u0026resultId=100181)||\r\n|[1152408](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152408)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152408\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31834238\u0026resultId=111961)||\r\n|[1152181](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152181)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152181\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31829600\u0026resultId=109646)||\r\n|[1151851](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151851)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151851\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31827508\u0026resultId=101992)||\r\n|[1151980](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151980)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151980\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31824782\u0026resultId=115512)||\r\n|[1151850](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151850)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151850\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31820666\u0026resultId=104884)||\r\n|[1151131](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151131)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151131\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31808192\u0026resultId=101660)||\r\n|[1150893](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150893)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150893\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31802052\u0026resultId=115823)||\r\n|[1150704](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150704)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150704\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31795962\u0026resultId=101946)||\r\n|[1150702](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150702)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150702\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31789106\u0026resultId=115053)||\r\n|[1149891](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149891)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149891\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31770586\u0026resultId=101320)||\r\n|[1149890](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149890)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149890\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31765254\u0026resultId=115644)||\r\n|[1148956](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148956)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148956\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31743628\u0026resultId=101402)||\r\n|[1148551](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148551)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148551\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31729122\u0026resultId=101703)||\r\n|[1148757](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148757)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148757\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31728652\u0026resultId=115949)||\r\n|[1148550](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148550)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148550\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31721908\u0026resultId=115598)||\r\n|[1147119](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147119)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147119\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31667882\u0026resultId=100873)||\r\n|[1147118](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147118)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147118\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31665128\u0026resultId=115608)||\r\n|[1146170](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146170)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146170\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31634126\u0026resultId=101917)||\r\n|[1146119](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146119)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146119\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31627582\u0026resultId=104571)||\r\n|[1145851](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145851)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145851\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31627116\u0026resultId=101114)||\r\n|[1145845](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145845)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145845\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31617180\u0026resultId=112200)||\r\n|[1145425](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145425)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145425\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31615464\u0026resultId=101346)||\r\n|[1145426](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145426)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145426\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31603286\u0026resultId=114227)||\r\n|[1144879](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144879)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144879\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31589194\u0026resultId=101307)||\r\n|[1144377](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144377)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144377\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31578694\u0026resultId=101703)||\r\n|[1144610](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144610)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144610\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31574198\u0026resultId=115598)||\r\n|[1144352](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144352)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144352\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31567040\u0026resultId=110435)||\r\n|[1143972](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143972)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143972\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31560846\u0026resultId=101697)||\r\n|[1143971](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143971)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143971\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31553724\u0026resultId=108010)||\r\n|[1142600](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142600)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142600\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31510206\u0026resultId=100963)||\r\n|[1142571](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142571)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142571\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31500190\u0026resultId=104809)||\r\n|[1142160](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142160)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142160\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31496274\u0026resultId=101913)||\r\n|[1142364](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142364)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142364\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31492738\u0026resultId=106689)||\r\n|[1142159](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142159)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142159\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31484852\u0026resultId=101213)||\r\n|[1140828](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140828)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140828\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31442224\u0026resultId=100757)||\r\n|[1140457](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140457)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140457\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31430316\u0026resultId=100408)||\r\n|[1140614](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140614)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140614\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31428488\u0026resultId=112822)||\r\n|[1140456](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140456)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140456\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31424758\u0026resultId=109448)||\r\n|[1140212](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140212)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140212\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31422176\u0026resultId=100585)||\r\n|[1140242](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140242)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140242\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31418388\u0026resultId=115596)||\r\n|[1139880](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139880)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139880\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31412178\u0026resultId=101740)||\r\n|[1139677](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139677)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139677\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31407352\u0026resultId=101954)||\r\n|[1139724](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139724)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139724\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31402198\u0026resultId=115849)||\r\n|[1139483](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139483)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139483\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31400280\u0026resultId=101740)||\r\n|[1139646](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139646)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139646\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31398414\u0026resultId=103302)||\r\n|[1139482](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139482)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139482\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31393888\u0026resultId=111805)||\r\n|[1139378](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139378)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139378\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31391804\u0026resultId=102096)||\r\n|[1139103](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139103)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139103\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31391180\u0026resultId=101703)||\r\n|[1137464](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137464)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137464\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31390428\u0026resultId=101660)|dotnet/runtime#119284|\r\n|[1139049](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139049)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139049\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31389502\u0026resultId=101703)||\r\n|[1139258](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139258)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139258\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31389516\u0026resultId=107279)||\r\n|[1139137](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139137)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139137\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31385776\u0026resultId=115584)||\r\n|[1138776](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138776)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138776\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31378350\u0026resultId=101311)||\r\n|[1138625](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138625)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138625\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31376792\u0026resultId=101127)||\r\n|[1138784](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138784)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138784\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31372472\u0026resultId=110126)||\r\n|[1134949](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1134949)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1134949\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31369544\u0026resultId=102000)|dotnet/runtime#119202|\r\n|[1138693](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138693)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138693\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31369264\u0026resultId=105807)||\r\n|[1138426](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138426)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138426\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31368982\u0026resultId=100570)||\r\n|[1138591](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138591)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138591\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31364868\u0026resultId=110364)||\r\n|[1138425](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138425)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138425\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31360810\u0026resultId=114851)||\r\n|[1138356](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138356)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138356\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31358356\u0026resultId=115949)|dotnet/runtime#119177|\r\n|[1138014](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138014)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138014\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31354402\u0026resultId=101626)||\r\n|[1138205](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138205)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138205\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31352526\u0026resultId=108594)|dotnet/runtime#119177|\r\n|[1138064](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138064)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138064\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31346960\u0026resultId=115903)||\r\n|[1137590](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137590)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137590\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31338744\u0026resultId=100066)||\r\n|[1137493](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137493)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137493\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31333428\u0026resultId=102123)||\r\n|[1137642](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137642)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137642\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31332254\u0026resultId=100197)||\r\n|[1137572](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137572)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137572\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31329018\u0026resultId=106570)|dotnet/runtime#119177|\r\n|[1137533](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137533)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137533\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31327354\u0026resultId=105035)||\r\n|[1137530](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137530)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137530\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31327498\u0026resultId=112162)||\r\n|[1137156](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137156)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137156\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31324106\u0026resultId=101378)||\r\n|[1137354](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137354)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137354\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31322172\u0026resultId=115557)||\r\n|[1137250](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137250)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137250\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31320016\u0026resultId=115515)|dotnet/runtime#119177|\r\n|[1137155](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137155)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137155\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31315138\u0026resultId=111889)||\r\n|[1136842](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136842)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136842\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31311432\u0026resultId=101703)||\r\n|[1136878](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136878)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136878\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31306230\u0026resultId=115609)||\r\n|[1136628](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136628)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136628\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31298328\u0026resultId=100976)||\r\n|[1136561](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136561)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136561\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31297352\u0026resultId=100568)||\r\n|[1136588](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136588)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136588\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31294382\u0026resultId=115681)||\r\n|[1136470](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136470)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136470\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31293134\u0026resultId=100807)||\r\n|[1136530](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136530)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136530\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31291640\u0026resultId=115598)||\r\n|[1136469](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136469)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136469\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31290154\u0026resultId=105047)||\r\n|[1136189](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136189)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136189\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31287504\u0026resultId=100628)||\r\n|[1136225](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136225)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136225\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31284664\u0026resultId=115903)||\r\n|[1135923](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135923)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135923\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31272588\u0026resultId=101207)||\r\n|[1135928](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135928)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135928\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31271490\u0026resultId=115208)||\r\n|[1135807](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135807)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135807\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31268542\u0026resultId=111292)||\r\n|[1135653](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135653)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135653\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31265564\u0026resultId=101635)||\r\n|[1135663](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135663)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135663\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31263164\u0026resultId=115842)||\r\n|[1135526](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135526)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135526\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31260094\u0026resultId=101935)||\r\n|[1135538](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135538)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135538\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31258680\u0026resultId=115478)||\r\n|[1135382](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135382)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135382\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31255414\u0026resultId=100913)||\r\n|[1135265](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135265)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135265\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31253948\u0026resultId=101703)||\r\n|[1135086](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135086)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135086\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31251460\u0026resultId=100797)||\r\n|[1135298](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135298)|dotnet/runtime|[Loader/classloader/explicitlayout/objrefandnonobjrefoverlap/case13/case13.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135298\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31251504\u0026resultId=115569)||\r\nDisplaying 100 of 165 results\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|5|22|165|\r\n\u003c!--Known issue error report end --\u003e\n\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOnONp9Q==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6c1CtL",
                                           "createdAt":  "2025-02-03T14:25:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AaronRobinsonMSFT",
                                           "body":  "@steveisok Any guidance or help I could be given on the llvmfullaot scenario would be appreciated. I\u0027m not even sure how to start debugging this scenario. It passes on the basic mono legs.",
                                           "updatedAt":  "2025-02-03T14:25:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6c1K6Q",
                                           "createdAt":  "2025-02-03T14:37:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "@kg can you help Aaron with this?",
                                           "updatedAt":  "2025-02-03T14:37:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6c42n1",
                                           "createdAt":  "2025-02-03T21:47:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kg",
                                           "body":  "I don\u0027t know anything about LLVM or LLVM-based AOT, do we have someone who\u0027s worked on that infrastructure still? i.e. WASM AOT",
                                           "updatedAt":  "2025-02-03T21:47:58Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "[linux_x64_minifullaot/llvmfullaot] class loader exception type assertion fails",
        "labels":  [
                       "area-Codegen-AOT-mono",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/112192",
        "createdAt":  "2025-02-05T15:13:02Z",
        "number":  112192,
        "author":  "IainS1986",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-28T16:47:39Z",
        "body":  "### Android framework version\n\nnet8.0-android\n\n### Affected platform version\n\nSDK 8.0.300, Android 34.0.147/8.0.100\n\n### Description\n\nWe have a third party nuget that is failing during AOT - we are trying to skip the assembly but the AOT process still seems to hit an assertion exception and fails the build.\n\nThe nuget is,\n`\u003cPackageReference Include=\"WW.Cad_Net6.0\" Version=\"6.0.2023.11201\" /\u003e`\n\nIt requires a license to *use* at runtime, but building should be fine.\n\nThis is the AOT exceptions we are getting,\n\n```\n[68/176] System.Text.Json.dll -\u003e System.Text.Json.dll.so\n[WW.dll] Exec (with response file contents expanded) in /.../MyApp.Droid: MONO_PATH=/.../MyApp.Droid/obj/Release/net8.0-android/android-arm/linked: MONO_ENV_OPTIONS= /usr/local/share/dotnet/packs/Microsoft.NETCore.App.Runtime.AOT.osx-arm64.Cross.android-arm/8.0.12/Sdk/../tools/mono-aot-cross --debug --nollvm \"--aot=asmwriter,temp-path=obj/Release/net8.0-android/android-arm/aot/armeabi-v7a/WW,profile-only,profile=/usr/local/share/dotnet/packs/Microsoft.Android.Sdk.Darwin/34.0.147/targets/dotnet.aotprofile,mtriple=armv7-linux-gnueabi,tool-prefix=/Users/iainstanford/Library/Developer/Xamarin/android-sdk-macosx/ndk-bundle/toolchains/llvm/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-,outfile=obj/Release/net8.0-android/android-arm/aot/WW.dll.so,temp-path=obj/Release/net8.0-android/android-arm/WW.dll.tmp,ld-name=ld,ld-flags=-s\" \"obj/Release/net8.0-android/android-arm/linked/WW.dll\"\n\n[69/176] SQLite-net.dll -\u003e SQLite-net.dll.so\n1\u003eMicrosoft.Android.Sdk.Aot.targets(109,5): Error  : Precompiling failed for /.../MyApp.Droid/obj/Release/net8.0-android/android-arm/linked/WW.Pdf.dll with exit code 134.\nMono Ahead of Time compiler - compiling assembly /.../MyApp.Droid/obj/Release/net8.0-android/android-arm/linked/WW.Pdf.dll\nAOTID E94E2877-B87E-4DA9-376B-B9104CE840C7\nUsing profile data file \u0027/usr/local/share/dotnet/packs/Microsoft.Android.Sdk.Darwin/34.0.147/targets/dotnet.aotprofile\u0027\nAdded 0 methods from profile.\n* Assertion at /Users/runner/work/1/s/src/mono/mono/metadata/metadata.c:1326, condition `GINT_TO_UINT32(idx) \u003c table_info_get_rows (t)\u0027 not met\n1\u003eMicrosoft.Android.Sdk.Aot.targets(109,5): Error  : Precompiling failed for /.../MyApp.Droid/obj/Release/net8.0-android/android-arm/linked/WW.dll with exit code 134.\nMono Ahead of Time compiler - compiling assembly /.../MyApp.Droid/obj/Release/net8.0-android/android-arm/linked/WW.dll\nAOTID 4B2F46CF-11F6-7444-044F-1FA8DCB045C4\nUsing profile data file \u0027/usr/local/share/dotnet/packs/Microsoft.Android.Sdk.Darwin/34.0.147/targets/dotnet.aotprofile\u0027\nAdded 0 methods from profile.\n* Assertion at /Users/runner/work/1/s/src/mono/mono/metadata/metadata.c:1326, condition `GINT_TO_UINT32(idx) \u003c table_info_get_rows (t)\u0027 not met\n[WW.Cad.dll] Exec (with response file contents expanded) in /.../MyApp.Droid: MONO_PATH=/.../MyApp.Droid/obj/Release/net8.0-android/android-arm/linked: MONO_ENV_OPTIONS= /usr/local/share/dotnet/packs/Microsoft.NETCore.App.Runtime.AOT.osx-arm64.Cross.android-arm/8.0.12/Sdk/../tools/mono-aot-cross --debug --nollvm \"--aot=asmwriter,temp-path=obj/Release/net8.0-android/android-arm/aot/armeabi-v7a/WW.Cad,profile-only,profile=/usr/local/share/dotnet/packs/Microsoft.Android.Sdk.Darwin/34.0.147/targets/dotnet.aotprofile,mtriple=armv7-linux-gnueabi,tool-prefix=/Users/iainstanford/Library/Developer/Xamarin/android-sdk-macosx/ndk-bundle/toolchains/llvm/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-,outfile=obj/Release/net8.0-android/android-arm/aot/WW.Cad.dll.so,temp-path=obj/Release/net8.0-android/android-arm/WW.Cad.dll.tmp,ld-name=ld,ld-flags=-s\" \"obj/Release/net8.0-android/android-arm/linked/WW.Cad.dll\"\n\n1\u003eMicrosoft.Android.Sdk.Aot.targets(109,5): Error  : Precompiling failed for /.../MyApp.Droid/obj/Release/net8.0-android/android-arm/linked/WW.Cad.dll with exit code 134.\nMono Ahead of Time compiler - compiling assembly /.../MyApp.Droid/obj/Release/net8.0-android/android-arm/linked/WW.Cad.dll\nAOTID 1352B6E5-2C41-6B8E-0FEA-E968AD743BCB\nUsing profile data file \u0027/usr/local/share/dotnet/packs/Microsoft.Android.Sdk.Darwin/34.0.147/targets/dotnet.aotprofile\u0027\nAdded 0 methods from profile.\n* Assertion at /Users/runner/work/1/s/src/mono/mono/metadata/metadata.c:1326, condition `GINT_TO_UINT32(idx) \u003c table_info_get_rows (t)\u0027 not met\n[70/176] Xamarin.Android.Glide.dll -\u003e Xamarin.Android.Glide.dll.so\n```\n\n\nWe\u0027ve tried the following to skip the assemblies but neither (and both) don\u0027t see to work...\n\n```\n  ...\n  \u003cAndroidLinkSkip\u003eWW;WW.Cad;WW.Pdf\u003c/AndroidLinkSkip\u003e\n  ...\n\n  \u003cItemGroup\u003e\n    \u003cTrimmerRootAssembly Include=\"WW.Cad\" RootMode=\"library\" /\u003e\n    \u003cTrimmerRootAssembly Include=\"WW.Pdf\" RootMode=\"library\" /\u003e\n    \u003cTrimmerRootAssembly Include=\"WW\" RootMode=\"library\" /\u003e\n  \u003c/ItemGroup\u003e\n```\n\n\nThis is our full set of properties for release builds with AOT\n\n```\n\u003cPropertyGroup Condition=\" \u0027$(Configuration)\u0027 == \u0027Release\u0027 \"\u003e\n    \u003cRuntimeIdentifiers\u003eandroid-arm;android-arm64\u003c/RuntimeIdentifiers\u003e\n    \u003cDebugSymbols\u003etrue\u003c/DebugSymbols\u003e\n    \u003cMandroidI18n\u003ewest\u003c/MandroidI18n\u003e\n    \u003cAndroidDexTool\u003ed8\u003c/AndroidDexTool\u003e\n    \u003cAndroidLinkTool\u003er8\u003c/AndroidLinkTool\u003e\n    \u003cAndroidKeyStore\u003eTrue\u003c/AndroidKeyStore\u003e\n    \u003cAndroidSigningKeyStore\u003e...\u003c/AndroidSigningKeyStore\u003e\n    \u003cAndroidSigningStorePass\u003e...\u003c/AndroidSigningStorePass\u003e\n    \u003cAndroidSigningKeyAlias\u003e...\u003c/AndroidSigningKeyAlias\u003e\n    \u003cAndroidSigningKeyPass\u003e...\u003c/AndroidSigningKeyPass\u003e\n    \u003cAndroidHttpClientHandlerType\u003eXamarin.Android.Net.AndroidClientHandler\u003c/AndroidHttpClientHandlerType\u003e\n    \u003cDefineConstants\u003eTRACE\u003c/DefineConstants\u003e\n    \u003cWarningLevel\u003e4\u003c/WarningLevel\u003e\n    \u003cRunAOTCompilation\u003etrue\u003c/RunAOTCompilation\u003e\n    \u003cEnableLLVM\u003efalse\u003c/EnableLLVM\u003e\n    \u003cAndroidUseDefaultAotProfile\u003etrue\u003c/AndroidUseDefaultAotProfile\u003e\n    \u003cAndroidEnableProfiledAot\u003etrue\u003c/AndroidEnableProfiledAot\u003e\n    \u003cAndroidUseAapt2\u003etrue\u003c/AndroidUseAapt2\u003e\n    \u003cAndroidEnableSGenConcurrent\u003efalse\u003c/AndroidEnableSGenConcurrent\u003e\n    \u003cAndroidLinkSkip\u003eWW;WW.Cad;WW.Pdf\u003c/AndroidLinkSkip\u003e\n  \u003c/PropertyGroup\u003e\n```\n\n### Steps to Reproduce\n\nHaven\u0027t been able to confirm in a small project,\n\n1. Add WW.Cad_Net6.0 nuget\n2. Enabled AOT\n3. Run build.\n\n### Did you find any workaround?\n\n_No response_\n\n### Relevant log output\n\n```shell\n\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOniVf9w==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6dMWj8",
                                           "createdAt":  "2025-02-05T15:34:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jonathanpeppers",
                                           "body":  "It\u0027s probably on this line, I just tried release/9.0 branch:\n\n* https://github.com/dotnet/runtime/blob/692a3b6a9827fa10c51ce2a16b26b51ecca7b430/src/mono/mono/metadata/metadata.c#L1333\n\nWhat is special about `WW.dll` that it breaks? Is there so much code inside this assembly, something overflows?\n\nIn either case, we can move this to dotnet/runtime.",
                                           "updatedAt":  "2025-02-05T15:34:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6dUXq4",
                                           "createdAt":  "2025-02-06T10:04:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "IainS1986",
                                           "body":  "I know this was half discussed on Discord so I\u0027ll post updates here.\n\nI\u0027m not sure what is special about WW.dll - it *is* obfuscated so there\u0027s always that. Its a thirdparty library for handling DXF/DWG files. Its not a mobile targetted library, we use quite a small (very small) sub section of the library just for generating and reading DXF/DWG files.\n\nI got a *little* further and managed to get the dll\u0027s to be ignored during the AOT process with the following...\n\n```\n\u003cTarget Name=\"_RemoveAssembliesFromAot\" AfterTargets=\"_AndroidAotInputs\" BeforeTargets=\"_AndroidAotCompilation\"\u003e\n    \u003cItemGroup\u003e\n      \u003c_ToRemove Condition=\" $([System.IO.Path]::GetFileNameWithoutExtension(\u0027%(_AndroidAotInputs.Identity)\u0027).StartsWith(\u0027WW\u0027))\" Include=\"@(_AndroidAotInputs)\" /\u003e\n      \u003c_AndroidAotInputs Remove=\"@(_ToRemove)\" /\u003e\n    \u003c/ItemGroup\u003e\n  \u003c/Target\u003e\n```\n\nHowever I\u0027ve run into another issue that I thought would be simple to fix but...hasn\u0027t been.\n\nThe WW libraries now seem to execute fine, but they then throw a System.TypeInitializationException\n\n```\nFATAL EXCEPTION: main\n    Process: com.moasure.moasureapp, PID: 10224\n    android.runtime.JavaProxyThrowable: System.TypeInitializationException: TypeInitialization_Type, \n    ---\u003e System.InvalidOperationException: Could not load type System.Security.Cryptography.Aes\n        at .(Byte )\n        at .(Stream )\n        at ...ctor()\n        at ...cctor()\n        Exception_EndOfInnerExceptionStack\n        at .(Int32 )\n        at WW..(Int32 )\n        at WW..()\n        at WW.WWLicense.SetLicense(String licenseString)\n```\n\n\nI assumed this might be a linker thing and tried doing the usual workaroudns but none of them work,\n* `\u003cAndroidLinkSkip\u003eSystem.Security.Cryptography\u003c/AndroidLinkSkip\u003e`\n* `\u003cTrimmerRootAssembly Include=\"System.Security.Cryptography\" RootMode=\"library\" /\u003e`\n* Adding it to the above custom target\n* Even just adding some code in our app that uses Aes, so its referenced in our logic still failed.\n\n\nJust for clarity if its not obvious, this library works *fine* in Debug. We also have an older .NetStandard version of the library we are using but its basically long been EOL and I\u0027m periodically tryign to get the .Net6+ version working with AOT on Android (works fine on iOS).",
                                           "updatedAt":  "2025-02-06T10:06:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6eF_1M",
                                           "createdAt":  "2025-02-12T00:38:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "/cc @dotnet/area-type-system-and-startup ",
                                           "updatedAt":  "2025-02-12T00:38:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6eGTmQ",
                                           "createdAt":  "2025-02-12T01:42:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kg",
                                           "body":  "My guess is the obfuscator is intentionally mangling the DLL so badly that the AOT compiler can\u0027t tell whether to AOT the methods or not. If that assertion is triggering, the DLL is almost certainly corrupt, so there may not be a lot we can do to fix this. If it works in non-AOT that\u0027s probably because the intentionally corrupt methods or types aren\u0027t touched by interpreter/JIT execution flows, but AOT has to (by its nature) look at the entirety of all the assemblies. I\u0027ll take a look at the nuget DLLs though to see if I can make sense of what they\u0027ve done.\n\nPlease file a separate issue for the cryptography problem, if you would? That way it doesn\u0027t get lost in the shuffle.",
                                           "updatedAt":  "2025-02-12T01:42:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6eGYSc",
                                           "createdAt":  "2025-02-12T01:59:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kg",
                                           "body":  "From doing a bit of research, it appears that the obfuscator they used on their assemblies explicitly does not support iOS and Android - the vendor has multiple obfuscator products where only one has support for iOS/Android. You may need to speak with the WW vendor to ask them whether they used an obfuscator that is advertised to have iOS/Android compatibility.\n\nI examined the licensing code to see if I could figure out why it\u0027s having trouble loading the Aes type but I didn\u0027t see anything obvious wrong. The licensing code relies on being able to walk and fully examine the stack in order to do its licensing checks. This means that a lack of full .pdb debugging information for all the code in your application could cause it to fail to validate your license, which would explain why it works for you in Debug builds but not in Release builds. Have you tried enabling full debugging information in your Release configuration?",
                                           "updatedAt":  "2025-02-12T01:59:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6eJV_3",
                                           "createdAt":  "2025-02-12T10:08:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "IainS1986",
                                           "body":  "Cheers for taking the time to look into it.\n\nSo I can contact them but I suspect we are maybe the only people using it for Android/iOS (they also have an older .net-standard version that works fine - so I guess that was obfuscated differently).\n\nJust so you know, Debug symbols on the Release build as originally set to Portable, and I tried that, PDB Only and Full and all of them still failed with the same TypeInitializationException\n\nI can setup another issue for that if you want - not sure if theres much else than can be investigated?",
                                           "updatedAt":  "2025-02-12T10:08:15Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "AOT failing on a third party nuget we are trying to AOT skip",
        "labels":  [
                       "area-Codegen-AOT-mono",
                       "needs-further-triage"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/112405",
        "createdAt":  "2025-02-11T10:54:24Z",
        "number":  112405,
        "author":  "pavelsavara",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-02-11T15:00:58Z",
        "body":  "### Description\n\nIt seems that when using DLL reference `\u003cReference Include=\"TestLib\"\u003e` in WASM Mono AOT project, the transitive dependencies are not included in the published app.\n\n### Reproduction Steps\n\nProject dependencies: `TestApp` -\u003e `TestLib` -\u003e `TestLib2`\n\nIn the TestApp\n```xml\n\u003cItemGroup\u003e\n  \u003cReference Include=\"TestLib\"\u003e\n    \u003cHintPath\u003e..\\..\\TestLib\\TestLib\\bin\\Debug\\net9.0\\TestLib.dll\u003c/HintPath\u003e\n  \u003c/Reference\u003e\n\u003c/ItemGroup\u003e\n```\n\n[Repro.zip](https://github.com/user-attachments/files/18748229/Repro.zip)\n\n### Expected behavior\n\nFind and include all transitive dependencies\n\n### Actual behavior\n\n`Null function or function signature mismatch`\n\n![Image](https://github.com/user-attachments/assets/5bcc86c0-2358-4305-9fff-8bd1316e1fe6)\n\n### Regression?\n\nProbably no.\n\n### Known Workarounds\n\nEnumerate all transitive dependencies in the main app.\n```xml\n\u003cItemGroup\u003e\n  \u003cReference Include=\"TestLib\"\u003e\n    \u003cHintPath\u003epath\\to\\TestLib.dll\u003c/HintPath\u003e\n  \u003c/Reference\u003e\n  \u003cReference Include=\"TestLib2\"\u003e\n    \u003cHintPath\u003epath\\to\\TestLib2.dll\u003c/HintPath\u003e\n  \u003c/Reference\u003e\n\u003c/ItemGroup\u003e\n```\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOngRDvA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6d-rAv",
                                           "createdAt":  "2025-02-11T10:54:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-02-11T10:54:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6d-shw",
                                           "createdAt":  "2025-02-11T10:57:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "There was similar report in the past https://github.com/dotnet/runtime/issues/70444\n\nIt seems that NativeAOT doesn\u0027t include transitive dependencies either (copilot said) but I can\u0027t find it documented anywhere.",
                                           "updatedAt":  "2025-02-11T12:07:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6d_Su0",
                                           "createdAt":  "2025-02-11T12:06:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "Task `ComputeWasmBuildAssets`\nInput `Candidates`\n\n![Image](https://github.com/user-attachments/assets/8b399c46-03a7-4115-a41e-3d4a1f70b27f)\n\nOutput `_BuildAssetsCandidates`\n\n![Image](https://github.com/user-attachments/assets/0c538489-ab87-4ee9-978a-4a9b0ddea181)\n\n`TestLib2.dll` is missing.\n\n[transitive-deps.binlog.zip](https://github.com/user-attachments/files/18749611/transitive-deps.zip)\n\ncc @maraf ",
                                           "updatedAt":  "2025-02-11T12:06:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6d_ti_",
                                           "createdAt":  "2025-02-11T12:47:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "`Reference` is not necessarily transitive, assembly references are resolved using [RAR](https://github.com/dotnet/msbuild/blob/main/documentation%2Fwiki%2FResolveAssemblyReference.md) from predefined paths. `PackageReference` and `ProjectReference` handle this the way you expect (in SDK-style projects): \nhttps://learn.microsoft.com/en-us/visualstudio/msbuild/common-msbuild-project-items?view=vs-2022#projectreference\n\n\u003eNote\n\u003e\n\u003eThere is a difference between how project references work between .NET Framework and .NET Core (including .NET 5 and later). In .NET Framework projects, project references aren\u0027t transitive. That is, if Project1 references Project2, and Project2 references Project3, you can\u0027t code against Project3 from Project1. However, in .NET Core (including .NET 5 and later), project references are transitive. You can code against Project3 in Project1.",
                                           "updatedAt":  "2025-02-11T13:34:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6eABrj",
                                           "createdAt":  "2025-02-11T13:17:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEF9vjQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "akoeplinger",
                                                                               "createdAt":  "2025-02-11T13:39:24Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "sainath-reddy-gnv",
                                           "body":  "Hi @akoeplinger , the behavior I observed is different. Other projects, like Blazor Web App and Web API, resolve transitive dependencies on publish without issues. Only Blazor Web Assembly is not. And also transitive dependencies are resolved when run locally with Blazor Web Assembly Project. ",
                                           "updatedAt":  "2025-02-11T13:20:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6eAQKA",
                                           "createdAt":  "2025-02-11T13:42:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "@pavelsavara I see TestLib2.dll getting resolved in the binlog you shared and it gets processed into .wasm, where do you see it missing?\n\n",
                                           "updatedAt":  "2025-02-11T13:42:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6eAUTu",
                                           "createdAt":  "2025-02-11T13:49:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "~~it\u0027s missing in the `_BuildAssetsCandidates` list.~~\nOk, my bad. It\u0027s there.",
                                           "updatedAt":  "2025-02-11T13:51:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6eAU9O",
                                           "createdAt":  "2025-02-11T13:50:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "it\u0027s there in your screenshot 😄 ",
                                           "updatedAt":  "2025-02-11T13:50:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6eAb-X",
                                           "createdAt":  "2025-02-11T14:01:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "\u003e it\u0027s there in your screenshot 😄\n\nYou are right 🤦 \n\n![Image](https://github.com/user-attachments/assets/9beb08bb-6cb3-4c53-ba01-7cde5cba17a6)",
                                           "updatedAt":  "2025-02-11T14:01:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6eAdnE",
                                           "createdAt":  "2025-02-11T14:04:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "![Image](https://github.com/user-attachments/assets/d9bc8013-efa5-448a-9bca-e266c58df0cf)",
                                           "updatedAt":  "2025-02-11T14:04:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6eAe_B",
                                           "createdAt":  "2025-02-11T14:06:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "`Filtered out endpoint: Endpoint=\u0027_framework/TestLib2.8h0gb1dnni.wasm\u0027 AssetFile=\u0027C:\\Dev\\caser\\TestApp\\TestApp\\bin\\Release\\net9.0\\wwwroot\\_framework\\TestLib2.wasm\u0027`\n\n![Image](https://github.com/user-attachments/assets/2e158740-2f22-45d0-9a93-380b1ab42fb0)\n\n![Image](https://github.com/user-attachments/assets/84236062-c0fd-494e-b61e-12e8bc06b7c8)",
                                           "updatedAt":  "2025-02-11T14:06:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6eAic3",
                                           "createdAt":  "2025-02-11T14:11:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "`obj\\Release\\net9.0\\staticwebassets.publish.endpoints.json` contains `TestLib` but not `TestLib2`\n\n![Image](https://github.com/user-attachments/assets/f28dc448-dea7-4f7b-8fa6-a1409b07798f)",
                                           "updatedAt":  "2025-02-11T14:11:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6eAsb0",
                                           "createdAt":  "2025-02-11T14:26:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "https://github.com/dotnet/sdk/blob/main/src/StaticWebAssetsSdk/Tasks/GenerateStaticWebAssetEndpointsManifest.cs#L51\n\nThis is input `Endpoints` which has both.\n\n![Image](https://github.com/user-attachments/assets/26058e8d-f8a0-4f19-930c-aa0a6356eb71)\n\nI don\u0027t see the message `Skipping candidate asset`\n\nhttps://github.com/dotnet/sdk/blob/13166366e41427c3bfa5ac1cc868b1229f8cc166/src/StaticWebAssetsSdk/Tasks/GenerateStaticWebAssetEndpointsManifest.cs#L92-L105",
                                           "updatedAt":  "2025-02-11T14:26:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6eBEO8",
                                           "createdAt":  "2025-02-11T15:00:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "This place doesn\u0027t have it in `_FinalPublishStaticWebAsset` anymore. \n\n![Image](https://github.com/user-attachments/assets/577bf7a0-7a6b-4b10-91a3-ecbbcaaa02c3)\n\nMaybe `AssetKind` == `Build` ?\n\n",
                                           "updatedAt":  "2025-02-11T15:00:57Z"
                                       }
                                   ],
                         "totalCount":  14
                     },
        "title":  "[browser][AOT] transitive dependencies are not included in the published app",
        "labels":  [
                       "arch-wasm",
                       "area-Codegen-AOT-mono",
                       "os-browser"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/112850",
        "createdAt":  "2025-02-24T09:25:42Z",
        "number":  112850,
        "author":  "rolfbjarne",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-23T06:40:23Z",
        "body":  "### Description\n\nCrash when AOT-compiling my code. \n\n### Reproduction Steps\n\nClone https://github.com/rolfbjarne/bug-repros and run `./2025-02-24-mono-aot-crash/repro.sh`:\n\n\n```shell\n$ ./2025-02-24-mono-aot-crash/repro.sh\n++ dirname ./2025-02-24-mono-aot-crash/repro.sh\n+ cd ./2025-02-24-mono-aot-crash\n+ /usr/local/share/dotnet/packs/Microsoft.NETCore.App.Runtime.AOT.osx-arm64.Cross.maccatalyst-arm64/9.0.0/Sdk/../tools/mono-aot-cross --path=./linked --aot=mtriple=arm64-apple-ios15.0-macabi,data-outfile=./monotouchtest.aotdata,static,asmonly,dedup-skip,direct-icalls,full,soft-debug,dwarfdebug,no-direct-calls,outfile=./monotouchtest.dll.s --debug -O=gsharedvt ./linked/monotouchtest.dll\nMono Ahead of Time compiler - compiling assembly [...]/bug-repros/2025-02-24-mono-aot-crash/linked/monotouchtest.dll\nAOTID 1085CE5E-EB01-C3CC-909A-0C25AB930848\n* Assertion at /Users/runner/work/1/s/src/mono/mono/mini/aot-compiler.c:8037, condition `p - buf \u003c buf_size\u0027 not met\n\n./2025-02-24-mono-aot-crash/repro.sh: line 9: 96539 Abort trap: 6           /usr/local/share/dotnet/packs/Microsoft.NETCore.App.Runtime.AOT.osx-arm64.Cross.maccatalyst-arm64/9.0.0/Sdk/../tools/mono-aot-cross --path=./linked --aot=mtriple=arm64-apple-ios15.0-macabi,data-outfile=./monotouchtest.aotdata,static,asmonly,dedup-skip,direct-icalls,full,soft-debug,dwarfdebug,no-direct-calls,outfile=./monotouchtest.dll.s --debug -O=gsharedvt ./linked/monotouchtest.dll\n```\n\nNote: you\u0027ll probably have to adjust the path to the `mono-aot-cross` binary in the script.\n\n### Expected behavior\n\nNo crash.\n\n### Actual behavior\n\nCrash.\n\nCrash report: https://github.com/rolfbjarne/bug-repros/blob/main/2025-02-24-mono-aot-crash/mono-aot-cross-2025-02-24-101943.txt\n\n### Regression?\n\nNo, this happened as I was adding code to a test project. Removing the new code fixes the crash.\n\n### Known Workarounds\n\nNo\n\n### Configuration\n\n```\n$ dotnet --info\n.NET SDK:\n Version:           9.0.103\n Commit:            049799c39d\n Workload version:  9.0.101.2\n MSBuild version:   17.12.21+f7f4b086d\n\nRuntime Environment:\n OS Name:     Mac OS X\n OS Version:  14.7\n OS Platform: Darwin\n RID:         osx-arm64\n Base Path:   /usr/local/share/dotnet/sdk/9.0.103/\n\n.NET workloads installed:\n [macos]\n   Installation Source: SDK 9.0.100\n   Manifest Version:    15.2.9170/9.0.100\n   Manifest Path:       /usr/local/share/dotnet/sdk-manifests/9.0.100/microsoft.net.sdk.macos/15.2.9170/WorkloadManifest.json\n   Install Type:        FileBased\n\n [maui-ios]\n   Installation Source: SDK 9.0.100\n   Manifest Version:    9.0.0/9.0.100\n   Manifest Path:       /usr/local/share/dotnet/sdk-manifests/9.0.100/microsoft.net.sdk.maui/9.0.0/WorkloadManifest.json\n   Install Type:        FileBased\n\n [ios]\n   Installation Source: SDK 9.0.100\n   Manifest Version:    18.2.9170/9.0.100\n   Manifest Path:       /usr/local/share/dotnet/sdk-manifests/9.0.100/microsoft.net.sdk.ios/18.2.9170/WorkloadManifest.json\n   Install Type:        FileBased\n\n [maccatalyst]\n   Installation Source: SDK 9.0.100\n   Manifest Version:    18.2.9170/9.0.100\n   Manifest Path:       /usr/local/share/dotnet/sdk-manifests/9.0.100/microsoft.net.sdk.maccatalyst/18.2.9170/WorkloadManifest.json\n   Install Type:        FileBased\n\n [maui]\n   Installation Source: SDK 9.0.100\n   Manifest Version:    9.0.0/9.0.100\n   Manifest Path:       /usr/local/share/dotnet/sdk-manifests/9.0.100/microsoft.net.sdk.maui/9.0.0/WorkloadManifest.json\n   Install Type:        FileBased\n\n [tvos]\n   Installation Source: SDK 9.0.100\n   Manifest Version:    18.2.9170/9.0.100\n   Manifest Path:       /usr/local/share/dotnet/sdk-manifests/9.0.100/microsoft.net.sdk.tvos/18.2.9170/WorkloadManifest.json\n   Install Type:        FileBased\n\n [android]\n   Installation Source: SDK 9.0.100\n   Manifest Version:    35.0.24/9.0.100\n   Manifest Path:       /usr/local/share/dotnet/sdk-manifests/9.0.100/microsoft.net.sdk.android/35.0.24/WorkloadManifest.json\n   Install Type:        FileBased\n\nConfigured to use workload sets when installing new manifests.\n\nHost:\n  Version:      9.0.1\n  Architecture: arm64\n  Commit:       c8acea2262\n\n.NET SDKs installed:\n  7.0.410 [/usr/local/share/dotnet/sdk]\n  8.0.304 [/usr/local/share/dotnet/sdk]\n  8.0.402 [/usr/local/share/dotnet/sdk]\n  9.0.100 [/usr/local/share/dotnet/sdk]\n  9.0.102 [/usr/local/share/dotnet/sdk]\n  9.0.103 [/usr/local/share/dotnet/sdk]\n\n.NET runtimes installed:\n  Microsoft.AspNetCore.App 7.0.20 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 8.0.8 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 9.0.0-rc.2.24474.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 9.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 9.0.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 6.0.36 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\n  Microsoft.NETCore.App 7.0.20 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\n  Microsoft.NETCore.App 8.0.8 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\n  Microsoft.NETCore.App 9.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\n  Microsoft.NETCore.App 9.0.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\n\nOther architectures found:\n  None\n\nEnvironment variables:\n  Not set\n\nglobal.json file:\n  /Users/rolf/work/dotnet/macios/main/macios/global.json\n\nLearn more:\n  https://aka.ms/dotnet/info\n\nDownload .NET:\n  https://aka.ms/dotnet/download\n```\n\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOv7b02Q==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc66bFeG",
                                           "createdAt":  "2025-07-28T15:05:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "/cc @vitek-karas \n\nI can repro. Haven\u0027t had a chance to look further.",
                                           "updatedAt":  "2025-07-28T15:05:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6_otq2",
                                           "createdAt":  "2025-08-22T17:38:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "@BrzVlad - can you take a look and see if there\u0027s a reasonable fix?",
                                           "updatedAt":  "2025-08-22T17:38:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6_tvTZ",
                                           "createdAt":  "2025-08-23T06:40:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027os-maccatalyst\u0027: @vitek-karas, @kotlarmilos, @steveisok, @akoeplinger\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-08-23T06:40:23Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Mono AOT compiler crashes with: condition `p - buf \u003c buf_size\u0027 not met",
        "labels":  [
                       "area-Codegen-AOT-mono",
                       "os-maccatalyst"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/113060",
        "createdAt":  "2025-03-03T09:08:48Z",
        "number":  113060,
        "author":  "simonrozsival",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T03:03:01Z",
        "body":  "## Build Information\r\nBuild: https://dev.azure.com/dnceng-public/public/_build/results?buildId=966760\r\nBuild error leg or test failing: test76531\r\n\u003c!-- Error message template  --\u003e\r\n## Error Message\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssueJsonStepByStep.md).\r\n\r\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\r\n\r\n```json\r\n{\r\n  \"ErrorPattern\": \"Failed to load AOT module \u0027[^\u0027]+\\\\/test76531.dll.so\u0027 \\\\(\u0027[^\u0027]+\\\\/test76531.dll\u0027\\\\) in aot-only mode.\",\r\n  \"BuildRetry\": false,\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\n\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=966760\r\n**Error message validated:** `[Failed to load AOT module \u0027[^\u0027]+\\/test76531.dll.so\u0027 \\(\u0027[^\u0027]+\\/test76531.dll\u0027\\) in aot-only mode.`]\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 3/3/2025 9:09:12 AM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n\r\n|Build|Definition|Test|Pull Request|\r\n|---|---|---|---|\r\n|[1153299](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153299)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153299\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31859180\u0026resultId=107630)||\r\n|[1152998](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152998)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152998\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31857198\u0026resultId=101588)||\r\n|[1152975](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152975)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152975\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31856010\u0026resultId=109098)||\r\n|[1152698](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152698)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152698\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31848716\u0026resultId=101631)||\r\n|[1152312](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152312)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152312\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31842098\u0026resultId=101902)||\r\n|[1152408](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152408)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152408\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31834238\u0026resultId=111282)||\r\n|[1152181](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152181)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152181\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31829600\u0026resultId=103322)||\r\n|[1151851](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151851)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151851\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31827508\u0026resultId=100300)||\r\n|[1151980](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151980)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151980\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31824782\u0026resultId=107622)||\r\n|[1151850](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151850)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151850\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31820666\u0026resultId=108296)||\r\n|[1151131](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151131)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151131\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31808192\u0026resultId=101520)||\r\n|[1150893](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150893)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150893\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31802052\u0026resultId=115429)||\r\n|[1150704](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150704)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150704\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31795962\u0026resultId=102052)||\r\n|[1150702](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150702)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150702\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31789106\u0026resultId=107128)||\r\n|[1149891](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149891)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149891\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31770586\u0026resultId=101621)||\r\n|[1149890](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149890)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149890\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31765254\u0026resultId=107268)||\r\n|[1148956](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148956)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148956\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31743628\u0026resultId=101829)||\r\n|[1148551](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148551)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148551\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31729122\u0026resultId=101431)||\r\n|[1148757](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148757)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148757\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31728652\u0026resultId=107605)||\r\n|[1148550](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148550)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148550\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31721908\u0026resultId=107684)||\r\n|[1147119](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147119)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147119\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31667882\u0026resultId=100222)||\r\n|[1147118](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147118)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147118\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31665128\u0026resultId=105503)||\r\n|[1146170](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146170)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146170\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31634126\u0026resultId=101520)||\r\n|[1146119](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146119)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146119\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31627582\u0026resultId=106416)||\r\n|[1145851](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145851)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145851\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31627116\u0026resultId=100706)||\r\n|[1145845](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145845)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145845\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31617180\u0026resultId=104053)||\r\n|[1145425](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145425)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145425\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31615464\u0026resultId=100326)||\r\n|[1145426](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145426)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145426\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31603286\u0026resultId=107349)||\r\n|[1144879](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144879)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144879\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31589194\u0026resultId=101235)||\r\n|[1144377](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144377)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144377\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31578694\u0026resultId=101150)||\r\n|[1144610](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144610)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144610\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31574198\u0026resultId=107005)||\r\n|[1144352](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144352)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144352\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31567040\u0026resultId=106628)||\r\n|[1143972](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143972)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143972\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31560846\u0026resultId=101524)||\r\n|[1143971](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143971)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143971\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31553724\u0026resultId=116007)||\r\n|[1142600](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142600)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142600\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31510206\u0026resultId=101260)||\r\n|[1142571](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142571)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142571\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31500190\u0026resultId=103141)||\r\n|[1142160](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142160)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142160\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31496274\u0026resultId=100603)||\r\n|[1142364](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142364)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142364\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31492738\u0026resultId=114152)||\r\n|[1142159](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142159)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142159\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31484852\u0026resultId=101001)||\r\n|[1140828](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140828)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140828\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31442224\u0026resultId=101068)||\r\n|[1140457](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140457)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140457\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31430316\u0026resultId=100535)||\r\n|[1140614](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140614)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140614\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31428488\u0026resultId=113006)||\r\n|[1140456](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140456)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140456\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31424758\u0026resultId=112717)||\r\n|[1140212](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140212)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140212\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31422176\u0026resultId=101821)||\r\n|[1140242](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140242)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140242\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31418388\u0026resultId=110824)||\r\n|[1139880](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139880)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139880\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31412178\u0026resultId=101585)||\r\n|[1139677](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139677)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139677\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31407352\u0026resultId=101467)||\r\n|[1139724](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139724)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139724\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31402198\u0026resultId=112861)||\r\n|[1139483](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139483)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139483\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31400280\u0026resultId=101474)||\r\n|[1139646](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139646)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139646\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31398414\u0026resultId=105328)||\r\n|[1139482](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139482)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139482\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31393888\u0026resultId=108234)||\r\n|[1139378](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139378)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139378\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31391804\u0026resultId=108888)||\r\n|[1139103](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139103)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139103\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31391180\u0026resultId=101520)||\r\n|[1137464](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137464)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137464\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31390428\u0026resultId=101439)|dotnet/runtime#119284|\r\n|[1139049](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139049)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139049\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31389502\u0026resultId=101588)||\r\n|[1139258](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139258)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139258\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31389516\u0026resultId=115684)||\r\n|[1139137](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139137)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139137\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31385776\u0026resultId=111298)||\r\n|[1138776](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138776)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138776\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31378350\u0026resultId=101501)||\r\n|[1138625](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138625)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138625\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31376792\u0026resultId=101233)||\r\n|[1138784](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138784)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138784\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31372472\u0026resultId=100977)||\r\n|[1134949](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1134949)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1134949\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31369544\u0026resultId=101533)|dotnet/runtime#119202|\r\n|[1138693](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138693)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138693\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31369264\u0026resultId=109072)||\r\n|[1138426](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138426)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138426\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31368982\u0026resultId=102072)||\r\n|[1138591](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138591)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138591\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31364868\u0026resultId=114217)||\r\n|[1138425](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138425)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138425\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31360810\u0026resultId=114691)||\r\n|[1138356](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138356)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138356\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31358356\u0026resultId=115237)|dotnet/runtime#119177|\r\n|[1138014](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138014)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138014\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31354402\u0026resultId=101775)||\r\n|[1138205](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138205)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138205\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31352526\u0026resultId=114443)|dotnet/runtime#119177|\r\n|[1138064](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138064)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1138064\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31346960\u0026resultId=113917)||\r\n|[1137590](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137590)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137590\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31338744\u0026resultId=101802)||\r\n|[1137493](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137493)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137493\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31333428\u0026resultId=100809)||\r\n|[1137642](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137642)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137642\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31332254\u0026resultId=101018)||\r\n|[1137572](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137572)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137572\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31329018\u0026resultId=114634)|dotnet/runtime#119177|\r\n|[1137533](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137533)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137533\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31327354\u0026resultId=104057)||\r\n|[1137530](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137530)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137530\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31327498\u0026resultId=106387)||\r\n|[1137156](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137156)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137156\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31324106\u0026resultId=101496)||\r\n|[1137354](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137354)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137354\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31322172\u0026resultId=115727)||\r\n|[1137250](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137250)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137250\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31320016\u0026resultId=115661)|dotnet/runtime#119177|\r\n|[1137155](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137155)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137155\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31315138\u0026resultId=116044)||\r\n|[1136842](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136842)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136842\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31311432\u0026resultId=101631)||\r\n|[1136878](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136878)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136878\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31306230\u0026resultId=107868)||\r\n|[1136628](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136628)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136628\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31298328\u0026resultId=101221)||\r\n|[1136561](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136561)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136561\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31297352\u0026resultId=101304)||\r\n|[1136588](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136588)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136588\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31294382\u0026resultId=115580)||\r\n|[1136470](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136470)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136470\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31293134\u0026resultId=100966)||\r\n|[1136530](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136530)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136530\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31291640\u0026resultId=115526)||\r\n|[1136469](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136469)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136469\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31290154\u0026resultId=112572)||\r\n|[1136189](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136189)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136189\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31287504\u0026resultId=100444)||\r\n|[1136225](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136225)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136225\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31284664\u0026resultId=108325)||\r\n|[1135923](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135923)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135923\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31272588\u0026resultId=100994)||\r\n|[1135928](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135928)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135928\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31271490\u0026resultId=111406)||\r\n|[1135807](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135807)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135807\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31268542\u0026resultId=108002)||\r\n|[1135653](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135653)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135653\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31265564\u0026resultId=101209)||\r\n|[1135663](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135663)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135663\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31263164\u0026resultId=104341)||\r\n|[1135526](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135526)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135526\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31260094\u0026resultId=100185)||\r\n|[1135538](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135538)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135538\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31258680\u0026resultId=115681)||\r\n|[1135382](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135382)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135382\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31255414\u0026resultId=102072)||\r\n|[1135265](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135265)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135265\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31253948\u0026resultId=101588)||\r\n|[1135086](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135086)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135086\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31251460\u0026resultId=101122)||\r\n|[1135298](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135298)|dotnet/runtime|[Regressions/coreclr/GitHub_76531/test76531/test76531.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135298\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31251504\u0026resultId=113903)||\r\nDisplaying 100 of 169 results\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|5|22|169|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOuJD10Q==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6gkNBU",
                                           "createdAt":  "2025-03-03T10:01:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEIP5SA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "matouskozak",
                                                                               "createdAt":  "2025-03-03T10:47:25Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "simonrozsival",
                                           "body":  "@janvorli could this be related to https://github.com/dotnet/runtime/pull/112666? (cc @matouskozak)",
                                           "updatedAt":  "2025-03-03T10:01:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc64dzbn",
                                           "createdAt":  "2025-07-20T22:05:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "@simonrozsival still an issue?",
                                           "updatedAt":  "2025-07-20T22:05:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc64kPXR",
                                           "createdAt":  "2025-07-21T12:18:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "simonrozsival",
                                           "body":  "@steveisok this test last failed on Friday (Jul 18, 2025) so it appears to still be an issue.",
                                           "updatedAt":  "2025-07-21T12:18:34Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "[Mono] Runtime test \"test76531\" fails in the LLVM (and mini) Full AOT configuration on linux-x64",
        "labels":  [
                       "os-linux",
                       "arch-x64",
                       "area-Codegen-AOT-mono",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/113619",
        "createdAt":  "2025-03-17T15:46:09Z",
        "number":  113619,
        "author":  "LeDahu22",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-03-24T10:20:35Z",
        "body":  "### Android framework version\n\nnet9.0-android\n\n### Affected platform version\n\nVS2022 17.13.3 / .NET 9.0.3\n\n### Description\n\nHi,\n\nA few days ago, we moved our Windows sessions to Azure Entra and I started having this issue when building in my MAUI app in Release mode.\n\nThe same day, I also updated VS to 17.13.3 version.\n\nI noticed that my account folder had a non-ASCII character in it, so I decided to move my repo on D drive (also using takeown to be the rightful owner of the directory) - [Issue dotnet/android#6925](https://github.com/dotnet/android/issues/6925)\n\n`D:\\Git\\MyCompany\\MyProduct\\MyProduct.Mobile`\n\nWhat I tried so far: \n- Moved it back to the root of C drive\n- Also tried : dotnet workload repair\n- Also moved my nuget package source folder to another location (using \u003cadd key=\"globalPackagesFolder\" value=\"D:\\NugetCache\" /\u003e)\n- Tried deleting bin/obj folder\n\nIt\u0027s strange because it was working perfectly before the latest VS Update + Entra migration.\n\nHere is the binlog of my Release compilation :  [msbuild.zip](https://github.com/user-attachments/files/19290356/msbuild.zip)\n\nEven creating a project (dotnet new maui) ends up in the same state.\n\nI don\u0027t know where the issue comes from...\n\n- VS 17.13.3 regression ?\n- aapt bug ? (folder with an accented character still used somehow ?)\n- Some obscure right issue ?\n- Something else ?\n\nAny help would be appreciated.\n\n### Steps to Reproduce\n\n - dotnet new maui\n - dotnet build -c Release\n\n### Did you find any workaround?\n\nNot yet\n\n### Relevant log output\n\n```shell\n\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOo8UZYQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6ivhoC",
                                           "createdAt":  "2025-03-17T17:38:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jpobst",
                                           "body":  "Investigation notes:\n\nThis appears to happen in `\u003cMonoAOTCompiler\u003e`.  My guess would be the accented character in the temp folder path:\n\n```\nC:\\Program Files\\dotnet\\packs\\Microsoft.Android.Sdk.Windows\\35.0.50\\targets\\Microsoft.Android.Sdk.Aot.targets(110,5): Precompiling failed for C:\\Git\\Novogen\\NDC\\NDC.Mobile\\obj\\Release\\net9.0-android\\android-arm64\\linked\\EFCore.BulkExtensions.Oracle.dll with exit code 1.\nThe specified response file can not be read [C:\\Git\\Novogen\\NDC\\NDC.Mobile\\NDC.Mobile.csproj]\n```\n\n```\n[EFCore.BulkExtensions.Oracle.dll] Running: C:\\Program Files\\dotnet\\packs\\Microsoft.NETCore.App.Runtime.AOT.win-x64.Cross.android-arm64\\9.0.3\\Sdk\\..\\tools\\mono-aot-cross.exe --response=\"C:\\Users\\CamilleMACÉ\\AppData\\Local\\Temp\\tmpehzbep.tmp\"\n```",
                                           "updatedAt":  "2025-03-17T17:38:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6i-rVK",
                                           "createdAt":  "2025-03-18T18:31:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "@ilonatommy it looks like this path is using g_file_get_contents ",
                                           "updatedAt":  "2025-03-18T18:31:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6jxRlh",
                                           "createdAt":  "2025-03-24T10:20:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "LeDahu22",
                                           "body":  "I see that the milestone has been set to .Net 10, so there won\u0027t be any fix or workaround until then ?",
                                           "updatedAt":  "2025-03-24T10:20:34Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "[Android AOT] AOT fails when response file is written to temp path with non-ASCII characters",
        "labels":  [
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/114898",
        "createdAt":  "2025-04-22T09:08:21Z",
        "number":  114898,
        "author":  "vsfeedback",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-01T10:50:57Z",
        "body":  "_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/Blazor-WebAssembly-AOT-Compilation-Fails/10813449)._\n\n---\n[severity:I\u0027m unable to use this version]\nThe AOT compilation process fails for certain assemblies in a Blazor WebAssembly project targeting .NET 9. There\u0027re errors when AOT\u0027ing assemblies.\nThe error message looks like `Failed to load method \u0026lt;a hex number\u0026gt; from \u0027\u0026lt;name of dll that uses ISerializable\u0026gt;\u0027 due to Could not resolve type with token \u0026lt;a hex number\u0026gt; from typeref (expected class \u0027System.Runtime.Serialization.ISerializable\u0027 in assembly \u0027System.Runtime, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\u0027) assembly:System.Runtime, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a type:System.Runtime.Serialization.ISerializable member:(null).`.\nThe original project that I found this issue is unable to consume a library that depends on `Newtonsoft.Json`, because `Newtonsoft.Json` uses `System.Runtime.Serialization.ISerializable`. The original project is too complicated to be simplified for reporting bugs, so I\u0027ve created a simpler project that uses `MSTest` to reproduce the AOT compilation error.\n\n### Steps to reproduce:\n1. Create a Blazor WebAssembly project targeting .NET 9, enable sample pages.\n2. Create a MSTest project in the same solution.\n3. In the Blazor client project, add reference to the MSTest project.\n4. In the Blazor client project, edit `Counter.razor`. In the `IncrementCount` method, create instance of the test class and invoke `TestMethod1`.\n5. In the Blazor client project, enable AOT compilation `\u0026lt;RunAOTCompilation\u0026gt;true\u0026lt;/RunAOTCompilation\u0026gt;`\nAfter these steps, the project looks like the attached sample:\n[Blazor9AotBug.7z](https://aka.ms/dc/file?name=B2cff4a22a8454c628f0c9cc3e790e1c6638699255498903041_Blazor9AotBug.7z\u0026tid=2cff4a22a8454c628f0c9cc3e790e1c6638699255498903041)\nThere\u0027s a `PublishVerbose.bat` in the attached sample. It can generate a build log.\n\n### Expected behavior\n1. AOT compilation should not report errors. \n2. At runtime, `System.Runtime.Serialization.ISerializable` should be loaded correctly.\n\n### Actual behavior\nAOT compilation failed.\n`PublishVerbose.bat` generates the following log:\n[buildlog.7z](https://aka.ms/dc/file?name=B51133eeaa04a4fbf8c0884cb0cc82214638699256770503396_buildlog.7z\u0026tid=51133eeaa04a4fbf8c0884cb0cc82214638699256770503396)\n\n### Environment:\n- .NET SDK Version: 9.0.101\n- Operating System RID: win-x64\n- Installed .NET 9 WebAssembly Build Tools\n\n---\n### Original Comments\n\n#### Feedback Bot on 12/16/2024, 09:45 AM: \n\n\u003cp\u003eWe have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.\u003c/p\u003e\n\n#### Victoria Paul on 12/28/2024, 00:42 PM: \n\n\u003cp\u003eIt looks like you’re facing a challenging issue with AOT compilation in your Blazor WebAssembly project targeting .NET 9, specifically related to the \u003ccode\u003eSystem.Runtime.Serialization.ISerializable\u003c/code\u003e type not being resolved correctly. This issue arises when attempting to compile \u003ca target=\u0027_blank\u0027 href=\"https://www.subwaybogocode.com\"\u003eOfficial Site\u003c/a\u003e assemblies with AOT, and you’ve identified that it impacts libraries such as \u003ccode\u003eNewtonsoft.Json\u003c/code\u003e. To resolve this, ensure all dependencies are correctly referenced and compatible with .NET 9, and verify that your project files are configured for AOT compilation with the \u003ccode\u003e\u0026lt;RunAOTCompilation\u0026gt;true\u0026lt;/RunAOTCompilation\u0026gt;\u003c/code\u003e setting. Also, make sure you’ve installed the necessary build tools for AOT compilation using \u003ccode\u003edotnet workload install microsoft-net-sdk-blazorwebassembly-aot\u003c/code\u003e. Hopefully, these steps will help you overcome the AOT compilation error.\u003c/p\u003e\n\n#### MuHaoNan(James) on 12/30/2024, 02:37 AM: \n\n\u003cp\u003e\u003ca target=\u0027_blank\u0027 href=\"/user/1417491\"\u003eVictoria Paul\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eLLM hallucination detected at:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis issue arises when attempting to compile Official Site assemblies with AOT\u003c/p\u003e\n\u003c/blockquote\u003e\n\n#### Feedback Bot on 4/8/2025, 08:08 AM: \n\n\u003cp\u003eWe detected that this issue hasn’t received a lot of activity, votes, or comments in the past 90 days. Based on this, the issues severity and affected area, it’s my experience that this issue is unlikely to get fixed. To improve the situation, consider following best practices for quality problem reports, and giving us more details on how this issue is impacting you.\u003c/p\u003e\n\n#### MuHaoNan(James) on 4/8/2025, 11:04 AM: \n\n\u003cp\u003eWhy don’t you fix this bug? The JIT mode is too slow, and it uses too much memory. AOT is the only way to port our product to WASM.\u003c/p\u003e\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOu2fr4A==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc64d7G2",
                                           "createdAt":  "2025-07-20T23:14:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "@lewing I\u0027m not sure there\u0027s a way to get back to the customer without rekicking the VS issue. ",
                                           "updatedAt":  "2025-07-20T23:14:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc67Z-vg",
                                           "createdAt":  "2025-08-01T10:50:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "megla-tlanghorst",
                                           "body":  "I get a similar Issue with a .NET 8 dll (which I don\u0027t control) in a .NET 10 WASM project (as the .NET 8 and 9 WASM stuff don\u0027t seem to support the library stuff yet it seems like (`Root assembly \u0027\u003cmain assembly\u003e\u0027 does not have entry point.`)):\n\n```\n   C:\\Program Files\\dotnet\\packs\\Microsoft.NET.Runtime.WebAssembly.Sdk\\10.0.0-preview.6.25358.103\\Sdk\\WasmApp.Common.targets(671,5): error :\n      Precompiling failed for \u003cpath to first dll\u003e with exit code 1.\n      Mono Ahead of Time compiler - compiling assembly \u003cpath to first dll\u003e\n      Failed to load method 0x6000088 from \u0027\u003cpath to first dll\u003e\u0027 due to Could not resolve type with token 01000022 from typeref (expected class \u0027System.Collections.Generic.IDictionary`2\u0027 in assembly \u0027System.Runtime, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\u0027) assembly:System.Runtime, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a type:System.Collections.Generic.IDictionary`2 member:(null).\n      Run with MONO_LOG_LEVEL=debug for more information.\n      AOT of image \u003cpath to first dll\u003e failed.\n    C:\\Program Files\\dotnet\\packs\\Microsoft.NET.Runtime.WebAssembly.Sdk\\10.0.0-preview.6.25358.103\\Sdk\\WasmApp.Common.targets(671,5): error :\n      Precompiling failed for \u003cpath to second dll\u003e with exit code 1.\n      Failed to load method 0x600002b from \u0027\u003cpath to second dll\u003e\u0027 due to Could not resolve type with token 01000018 from typeref (expected class \u0027System.MulticastDelegate\u0027 in assembly \u0027System.Runtime, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\u0027) assembly:System.Runtime, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a type:System.MulticastDelegate member:(null).\n      Run with MONO_LOG_LEVEL=debug for more information.\n      AOT of image \u003cpath to second dll\u003e failed.\n      Mono Ahead of Time compiler - compiling assembly \u003cpath to second dll\u003e\n```",
                                           "updatedAt":  "2025-08-01T10:50:57Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Blazor WebAssembly AOT Compilation Fails on .NET 9",
        "labels":  [
                       "tracking-external-issue",
                       "Author: Migration Bot :robot:",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/115183",
        "createdAt":  "2025-04-30T08:01:16Z",
        "number":  115183,
        "author":  "matouskozak",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-06-30T14:49:15Z",
        "body":  "On the `runtime-llvm` rolling-builds, the Mono FullAOT runtime test jobs are timing out due to the AOT test compilation taking more than 6 hours.\n\nAll rolling-build on main are failing at least since 31st of March (https://dev.azure.com/dnceng-public/public/_build?definitionId=157\u0026_a=summary).",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "[mono] Time-outs on Linux FullAOT Mono runtime tests CI",
        "labels":  [
                       "os-linux",
                       "arch-x64",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/116515",
        "createdAt":  "2025-06-11T03:50:32Z",
        "number":  116515,
        "author":  "jeremy-visionaid",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-28T15:21:41Z",
        "body":  "### Description\n\nTrying to AOT compile an app for MacCatalyst, the AOT compiler exits with code 134.\n\n\n\n\n### Reproduction Steps\n\nThe failure occurs as part of AOT compiling a larger application, which I cannot share. I will work towards providing a minimal repro, but the error message is too cryptic to prove a hint as to which part of the code the error comes from. \n\n### Expected behavior\n\nCompiles OK\n\n### Actual behavior\n\n```\n         AOTID E8BCE781-BD1B-E116-E501-F0670239828D\n         cant marshal char to native type 17\n\n/usr/local/share/dotnet/packs/Microsoft.MacCatalyst.Sdk.net9.0_18.4/18.4.9291/targets/Xamarin.Shared.Sdk.targets(1266,3): error : Failed to AOT compile Library.dll, the AOT compiler exited with code 134. [/Users/user/src/App/App.csproj::TargetFramework=net9.0-maccatalyst]\n```\n\n### Regression?\n\nUnknown\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\ndotnet SDK 9.0.300\nmacOS 15.5\nARM64\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOsIHPwA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6wgHkA",
                                           "createdAt":  "2025-06-11T04:32:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "filipnavara",
                                           "body":  "Do you have any usage of `MarshalAs(UnmanagedType.ByValTStr, ...)` in the code base?",
                                           "updatedAt":  "2025-06-11T04:32:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6wgLHn",
                                           "createdAt":  "2025-06-11T04:44:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeremy-visionaid",
                                           "body":  "Yeah, there is some interop going on in the affected library, I figured it would probably be related to that. Busy helping some other folk out at the moment so haven\u0027t had a chance to investigate my own stuff 😅 I think the real problem here is that the error message is pretty terse... it would be great if it refered back to a line in the source or even the affected type/method.",
                                           "updatedAt":  "2025-06-11T04:54:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6wgOZv",
                                           "createdAt":  "2025-06-11T04:55:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "filipnavara",
                                           "body":  "I agree the error message is not great but it\u0027s unlikely to be improved.\n\nFirstly, [P/Invoke source generation](https://learn.microsoft.com/en-us/dotnet/standard/native-interop/pinvoke-source-generation) using the `[LibraryImport]` attribute is the preferred solution going forward. It moves the generator of the marshalling code from the runtime / AOT compiler into the C# compiler where it can provide much better diagnostic messages since it has access to the source code. The runtime doesn\u0027t have the source code anymore so it would need to trace it back through the debug symbols.\n\nSecondly, the long-term plan is to converge towards CoreCLR and NativeAOT runtimes. While MonoVM and it\u0027s AOT compiler are still supported, and likely will remain supported for foreseeable future, the engineering effort invested in it is severely reduced. It\u0027s essentially in maintainance mode at this point (.NET 10).\n\n\u003e cant marshal char to native type 17\n\nType 17 is `MONO_NATIVE_BYVALTSTR`. It is likely some unsupported or invalid marshalling option combination. I don\u0027t see how it would be valid to place `MarshalAs(UnmanagedType.ByValTStr, ...)` on something of a `char` type (or `char[]`).",
                                           "updatedAt":  "2025-06-11T04:55:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6wgRy2",
                                           "createdAt":  "2025-06-11T05:05:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeremy-visionaid",
                                           "body":  "Thanks for the help!\n\nI can appreciate that, though \n`cant marshal char to native type MONO_NATIVE_BYVALTSTR` would have been a great improvement over 17. It would likely have been enough to get me straight to the cause. I\u0027ve found the line of code, but I have no idea why it\u0027s a char either - or what the related native function/struct are even for... It\u0027s not referenced anywhere so I could either fix it properly or delete it.\n\nDid you want me to keep this open as a request to improve the error message there? (Or perhaps making ByValTStr an error for char if that makes more sense?). If there\u0027s no chance of it getting improved then I\u0027d be happy to to just close the issue.",
                                           "updatedAt":  "2025-06-11T05:05:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6wgT5B",
                                           "createdAt":  "2025-06-11T05:09:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEWJIeA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "LAUGH",
                                                                               "user":  "jeremy-visionaid",
                                                                               "createdAt":  "2025-06-11T05:15:22Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "filipnavara",
                                           "body":  "If you could share a snippet of the affected code it would be helpful. Even if it doesn\u0027t get fixed someone else can run into it and the more information we have the better.\n\n(The most annoying thing on the internet is to search for a solution to an issue only to find a random post on the internet of someone having the exact same problem, with no solution posted. Even better when the last post is just \"Nevermind, I fixed it.\" 😅 )",
                                           "updatedAt":  "2025-06-11T05:13:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6wgXVd",
                                           "createdAt":  "2025-06-11T05:17:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEWJLZA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "filipnavara",
                                                                               "createdAt":  "2025-06-11T05:22:15Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jeremy-visionaid",
                                           "body":  "I think this would be sufficient to repro:\n\n```\n[StructLayout(LayoutKind.Sequential)]\ninternal struct TestStruct\n{\n    [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 128)]\n    public char TestChar;\n}\n```\n\nLike you say, it doesn\u0027t make any sense!\n\nFWIW, I\u0027m about half way through converting from DllImport to LibraryImport. I\u0027ll get to the rest eventually! So, hopefully this particular thing will disappear in time anyway 👍 ",
                                           "updatedAt":  "2025-06-11T09:28:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6wgc_A",
                                           "createdAt":  "2025-06-11T05:26:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEWLE6g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jeremy-visionaid",
                                                                               "createdAt":  "2025-06-11T09:28:01Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "filipnavara",
                                           "body":  "Confirmed that it does repro with\n```csharp\nFoo.Dummy(new Foo.TestStruct());\n\nclass Foo\n{\n    [StructLayout(LayoutKind.Sequential)]\n    internal struct TestStruct\n    {\n        [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 128)]\n        public char TestChar;\n    }\n\n    [DllImport(\"foo\")]\n    public static extern int Dummy(TestStruct msg);\n}\n```",
                                           "updatedAt":  "2025-06-11T05:26:21Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "AOT compile error 134",
        "labels":  [
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/116937",
        "createdAt":  "2025-06-23T22:33:53Z",
        "number":  116937,
        "author":  "lewing",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T03:03:50Z",
        "body":  "## Build Information\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=1075630\u0026view=logs\u0026j=d25dc2c0-518b-5583-f661-5ac905106679\nBuild error leg or test failing: Build / linux-x64 Release AllSubsets_Mono_LLVMFULLAOT_RuntimeTests llvmfullaot / AOT compile CoreCLR tests\nPull request: https://github.com/dotnet/runtime/pull/116874\n\u003c!-- Error message template  --\u003e\n## Error Message\n\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssueJsonStepByStep.md).\n\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\n\n```json\n{\n  \"ErrorMessage\": \"UnsafeAccessorsTests.dll\\\" exited with code 134.\",\n  \"ErrorPattern\": \"\",\n  \"BuildRetry\": false,\n  \"ExcludeConsoleLog\": false\n}\n```\n\n\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=1075630\r\n**Error message validated:** `[UnsafeAccessorsTests.dll\" exited with code 134.`]\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 6/23/2025 10:34:13 PM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|0|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOwPkReA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6ytJxA",
                                           "createdAt":  "2025-06-23T22:47:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "cc @AaronRobinsonMSFT ",
                                           "updatedAt":  "2025-06-23T22:47:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6ytMlL",
                                           "createdAt":  "2025-06-23T22:50:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "https://dev.azure.com/dnceng-public/public/_build?definitionId=157\u0026_a=summary has several failures before the one listed in this issue",
                                           "updatedAt":  "2025-06-23T22:50:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7A-RF4",
                                           "createdAt":  "2025-08-29T16:10:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeffschwMSFT",
                                           "body":  "removing blocking-clean-ci as it has not failed in 30 days\n\n24-Hour Hit Count | 7-Day Hit Count | 1-Month Count\n-- | -- | --\n0 | 0 | 0\n",
                                           "updatedAt":  "2025-08-29T16:10:21Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "[mono] AOT compiling UnsafeAccessorsTests.dll exited with code 134.",
        "labels":  [
                       "area-Codegen-AOT-mono",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/117159",
        "createdAt":  "2025-06-30T16:36:55Z",
        "number":  117159,
        "author":  "kotlarmilos",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-25T06:43:07Z",
        "body":  "## Description\n\nApple mobile smoke tests targeting iOS/tvOS 18.x (scouting queues) are failing in full AOT mode when built in Release configuration. Similar functional app works correctly when running with the interpreter.\n\n## Investigation\n\nWhen building the `iOS.Device.Aot.Test` app locally in Release mode, an Xcode project is generated. Running the app via Xcode in Debug build works as expected. However, when running the Release build, the app fails at runtime with `exit code 1` and the following assertion:\n\n```\n((null) error) * Assertion at /Users/miloskotlar/dotnet/runtime/src/mono/mono/mini/aot-runtime.c:5332, condition `plt_entry\u0027 not met\n\n* thread #9, name = \u0027tid_4d03\u0027, queue = \u0027com.apple.root.default-qos\u0027, stop reason = breakpoint 2.1\n  * frame #0: 0x00000001051103e4 iOS.Device.Aot.Test`mono_aot_plt_resolve(aot_module=0x000000015a0b1e00, regs=0x000000016b28dc90, code=\"H\\x8c\", error=0x000000016b28dc00) at aot-runtime.c:5332:2 [opt]\n    frame #1: 0x000000010511e404 iOS.Device.Aot.Test`mono_aot_plt_trampoline(...) at mini-trampolines.c:937:8 [opt]\n    frame #2: 0x00000001055811bc iOS.Device.Aot.Test`generic_trampoline_aot_plt + 236\nThis indicates a failure in resolving a PLT (Procedure Linkage Table) entry during AOT runtime execution. The issue is only reproducible in the Release build with full AOT enabled.\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOucN7Tw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc60AAEi",
                                           "createdAt":  "2025-06-30T16:37:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027os-ios\u0027: @vitek-karas, @kotlarmilos, @ivanpovazan, @steveisok, @akoeplinger\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-06-30T16:37:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc61BJGO",
                                           "createdAt":  "2025-07-04T17:57:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vitek-karas",
                                           "body":  "This looks very similar to https://github.com/dotnet/runtime/issues/109460 - although that one is on Android. Also possibly https://github.com/dotnet/runtime/issues/95406.",
                                           "updatedAt":  "2025-07-04T17:57:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc65w3tP",
                                           "createdAt":  "2025-07-25T06:43:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BrzVlad",
                                           "body":  "tried to look into this but wasn\u0027t able to reproduce locally.. For context, I think this same assertion can happen on android, for example, if you partial AOT with llvm enabled and then you end up with a mismatch due to `IsSupported` bits being different between llvm and other codegens.",
                                           "updatedAt":  "2025-07-25T06:43:06Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "[Apple mobile] Smoke tests crash in full AOT mode with `plt_entry` assertion on iOS/tvOS 18.x",
        "labels":  [
                       "area-Codegen-AOT-mono",
                       "os-ios"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/117166",
        "createdAt":  "2025-06-30T17:52:03Z",
        "number":  117166,
        "author":  "jozkee",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-14T17:35:55Z",
        "body":  "## Build Information\nBuild: https://dev.azure.com/dnceng-public/public/_build/results?buildId=1073221\nBuild error leg or test failing: \n\u003c!-- Error message template  --\u003e\n## Error Message\n\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssueJsonStepByStep.md).\n\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\n\n```json\n{\n  \"ErrorMessage\": \"compute_class_bitmap: Invalid type 13 for field System.IO.Tests.Uma_TestStructs+UmaTestStruct_Generic`1[T_REF]:ofT\",\n  \"BuildRetry\": false,\n  \"ExcludeConsoleLog\": false\n}\n```\n\nConsole log:\nhttps://helixr1107v0xd1eu3ibi6ka.blob.core.windows.net/dotnet-runtime-refs-heads-release-100-preview6504d1246db64978ad/WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests/1/console.29f82a41.log?helixlogtype=result\n\n```\n[00:38:10] fail: [out of order message from the browser]: http://127.0.0.1:41913/runArgs.json - Failed to load resource: the server responded with a status of 404 (Not Found)\n[00:38:10] info: Running in: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/137.0.0.0 Safari/537.36\n[00:38:10] info: Running at: http://127.0.0.1:41913/index.html?arg=--run\u0026arg=WasmTestRunner.dll\u0026arg=System.IO.UnmanagedMemoryStream.Tests.dll\u0026arg=-notrait\u0026arg=category%3dIgnoreForCI\u0026arg=-notrait\u0026arg=category%3dOuterLoop\u0026arg=-notrait\u0026arg=category%3dfailing\u0026arg=-verbosity\u0026arg=Info\n[00:38:10] info: could not load /runArgs.json: 404. Ignoring\n[00:38:10] info: Incoming arguments: --run WasmTestRunner.dll System.IO.UnmanagedMemoryStream.Tests.dll -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing -verbosity Info\n[00:38:10] info: Application arguments: --run WasmTestRunner.dll System.IO.UnmanagedMemoryStream.Tests.dll -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing -verbosity Info\n[00:38:11] fail: [out of order message from the browser]: http://127.0.0.1:41913/favicon.ico - Failed to load resource: the server responded with a status of 404 (Not Found)\n[00:38:11] info: Initializing dotnet version 10.0.0-ci commit hash 3d4474909220103b71bae2435a0443b162bb60aa\n[00:38:11] info: Using threadless Xunit runner\n[00:38:11] info: Discovering: System.IO.UnmanagedMemoryStream.Tests.dll (method display = ClassAndMethod, method display options = None)\n[00:38:11] info: Discovered:  System.IO.UnmanagedMemoryStream.Tests.dll (found 33 of 33 test cases)\n[00:38:11] info: Starting:    System.IO.UnmanagedMemoryStream.Tests.dll\n[00:38:11] fail: [MONO] compute_class_bitmap: Invalid type 13 for field System.IO.Tests.Uma_TestStructs+UmaTestStruct_Generic`1[T_REF]:ofT\n                 \n                 Error\n                     at Mc (http://127.0.0.1:41913/_framework/dotnet.runtime.js:3:171883)\n                     at wasm_trace_logger (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[66570]:0x111f271)\n                     at eglib_log_adapter (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[58897]:0xf35cb6)\n                     at monoeg_g_logv_nofree (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[58823]:0xf33c50)\n                     at monoeg_g_log (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[58825]:0xf33d1d)\n                     at compute_class_bitmap (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[60694]:0xfc3886)\n                     at mono_class_compute_gc_descriptor (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[60693]:0xfc3467)\n                     at instantiate_info (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[61635]:0x1006243)\n                     at mini_init_method_rgctx (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[61476]:0xff374e)\n                     at aot_instances_System_Runtime_InteropServices_SafeBuffer_WriteSpan_T_INST_ulong_System_ReadOnlySpan_1_T_INST_0 (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[42186]:0xaff5bc)\n                     at aot_instances_System_Runtime_InteropServices_SafeBuffer_WriteArray_T_INST_ulong_T_INST___int_int_0 (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[42095]:0xae25bd)\n                     at aot_instances_System_IO_UnmanagedMemoryAccessor_WriteArray_T_INST_long_T_INST___int_int_0 (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[41987]:0xad5ed0)\n                     at System_IO_UnmanagedMemoryStream_Tests_System_IO_Tests_Uma_ReadWriteStructArray__c__DisplayClass7_0__UmaReadWriteGenericStringStructArray_ThrowsArgumentExceptionb__0 (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[3193]:0x11555a)\n                     at corlib_wrapper_delegate_invoke__Module_invoke_void (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[25062]:0x5a085e)\n                     at xunit_assert_Xunit_Assert_RecordException_System_Action (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36006]:0x952ce5)\n                     at xunit_assert_Xunit_Assert_Throws_T_REF_System_Action (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36007]:0x952dc2)\n                     at TestUtilities_System_AssertExtensions_Throws_T_REF_string_string_System_Action (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[35326]:0x927bb0)\n                     at System_IO_UnmanagedMemoryStream_Tests_System_IO_Tests_Uma_ReadWriteStructArray_UmaReadWriteGenericStringStructArray_ThrowsArgumentException (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[3167]:0x1139bf)\n                     at aot_instances_aot_wrapper_gsharedvt_out_sig_void_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[39043]:0xa4e620)\n                     at aot_instances_wrapper_runtime_invoke_object_runtime_invoke_sig_void_intptr_object_intptr_intptr_intptr (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[51863]:0xd73aed)\n                     at mono_jit_runtime_invoke (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[61399]:0xff0810)\n                     at do_runtime_invoke (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[60685]:0xfc193c)\n                     at mono_runtime_invoke_checked (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[60684]:0xfc18bb)\n                     at ves_icall_InternalInvoke_raw (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[60087]:0xf97c09)\n                     at aot_wrapper_corlib_System_dot_Reflection_System_dot_Reflection_dot_RuntimeMethodInfo__InternalInvoke_pinvoke_obj_this_objcl9_intptr_2a_bclsc_Exception_26__attrs_2obj_this_objcl9_intptr_2a_bclsc_Exception_26__attrs_2 (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[20398]:0x49b926)\n                     at corlib_System_Reflection_MethodBaseInvoker_InterpretedInvoke_Method_object_intptr_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[20397]:0x49b8a7)\n                     at corlib_wrapper_delegate_invoke__Module_invoke_object_object_intptr__object_intptr_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[25090]:0x5a3b47)\n                     at corlib_System_Reflection_MethodBaseInvoker_InvokeWithNoArgs_object_System_Reflection_BindingFlags (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[10815]:0x326fac)\n                     at corlib_System_Reflection_RuntimeMethodInfo_Invoke_object_System_Reflection_BindingFlags_System_Reflection_Binder_object___System_Globalization_CultureInfo (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[20532]:0x4a3486)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1_TTestCase_REF_CallTestMethod_object (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36852]:0x995c6b)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1__c__DisplayClass47_0___InvokeTestMethodAsyncb__1d_TTestCase_REF_MoveNext (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36864]:0x998060)\n                     at corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24149]:0x57a0f3)\n                     at corlib_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24150]:0x57a237)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1__c__DisplayClass47_0_TTestCase_REF__InvokeTestMethodAsyncb__1 (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36863]:0x9975de)\n                     at corlib_wrapper_delegate_invoke_System_Func_1_TResult_REF_invoke_TResult (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24815]:0x597c53)\n                     at xunit_execution_dotnet_Xunit_Sdk_ExecutionTimer__AggregateAsyncd__4_MoveNext (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36748]:0x98a552)\n                     at corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24149]:0x57a0f3)\n                     at xunit_execution_dotnet_Xunit_Sdk_ExecutionTimer_AggregateAsync_System_Func_1_System_Threading_Tasks_Task (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36747]:0x98a2c5)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1__c__DisplayClass47_0_TTestCase_REF__InvokeTestMethodAsyncb__0 (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36862]:0x997517)\n                     at corlib_wrapper_delegate_invoke_System_Func_1_TResult_REF_invoke_TResult (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24815]:0x597c53)\n                     at xunit_core_Xunit_Sdk_ExceptionAggregator__RunAsyncd__9_MoveNext (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36339]:0x96bbaa)\n                     at corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24149]:0x57a0f3)\n                     at xunit_core_Xunit_Sdk_ExceptionAggregator_RunAsync_System_Func_1_System_Threading_Tasks_Task (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36332]:0x96b323)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1__InvokeTestMethodAsyncd__47_TTestCase_REF_MoveNext (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36870]:0x998bdb)\n                     at corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24149]:0x57a0f3)\n                     at corlib_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_GSHAREDVT_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24154]:0x57a2ff)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1_TTestCase_REF_InvokeTestMethodAsync_object (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36854]:0x995e21)\n                     at xunit_execution_dotnet_Xunit_Sdk_XunitTestInvoker_InvokeTestMethodAsync_object (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[37009]:0x9a9ea6)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1___RunAsyncb__46_0d_TTestCase_REF_MoveNext (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36857]:0x996ad2)\n                     at corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24149]:0x57a0f3)\n                     at corlib_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_GSHAREDVT_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24154]:0x57a2ff)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1_TTestCase_REF__RunAsyncb__46_0 (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36856]:0x995f74)\n                     at aot_instances_aot_wrapper_gsharedvt_out_sig_obj_this_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[38982]:0xa4cd72)\n                     at jit_call_cb (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[58275]:0xf0d221)\n                     at mono_llvm_cpp_catch_exception (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[61556]:0xfff906)\n                     at mono_llvm_catch_exception (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[61608]:0x1003f5e)\n                     at do_jit_call (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[58196]:0xf09d70)\n                     at mono_interp_exec_method (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[58191]:0xf09231)\n                     at interp_entry (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[58269]:0xf0ced6)\n                     at interp_entry_instance_0 (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[58287]:0xf0d9e9)\n                     at aot_instances_aot_wrapper_gsharedvt_in_sig_void_bii (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[38993]:0xa4cfd1)\n                     at corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24149]:0x57a0f3)\n                     at aot_instances_Xunit_Sdk_ExceptionAggregator_RunAsync_System_Decimal_System_Func_1_System_Threading_Tasks_Task_1_System_Decimal (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[57896]:0xee56d2)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestInvoker_1_TTestCase_REF_RunAsync (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36853]:0x995d39)\n                     at xunit_execution_dotnet_Xunit_Sdk_XunitTestRunner_InvokeTestMethodAsync_Xunit_Sdk_ExceptionAggregator (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[37023]:0x9aacf1)\n                     at xunit_execution_dotnet_Xunit_Sdk_XunitTestRunner__InvokeTestAsyncd__4_MoveNext (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[37027]:0x9ab26c)\n                     at corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24149]:0x57a0f3)\n                     at xunit_execution_dotnet_Xunit_Sdk_XunitTestRunner_InvokeTestAsync_Xunit_Sdk_ExceptionAggregator (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[37022]:0x9aabc8)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestRunner_1__c__DisplayClass43_0_TTestCase_REF__RunAsyncb__0 (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36891]:0x99ae9b)\n                     at corlib_wrapper_delegate_invoke_System_Func_1_TResult_REF_invoke_TResult (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24815]:0x597c53)\n                     at xunit_core_Xunit_Sdk_ExceptionAggregator__RunAsyncd__10_1_T_REF_MoveNext (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36335]:0x96b773)\n                     at corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24149]:0x57a0f3)\n                     at corlib_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_GSHAREDVT_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24154]:0x57a2ff)\n                     at xunit_core_Xunit_Sdk_ExceptionAggregator_RunAsync_T_REF_System_Func_1_System_Threading_Tasks_Task_1_T_REF (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36333]:0x96b449)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestRunner_1__RunAsyncd__43_TTestCase_REF_MoveNext (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36892]:0x99b4d9)\n                     at corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24149]:0x57a0f3)\n                     at corlib_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_GSHAREDVT_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24154]:0x57a2ff)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestRunner_1_TTestCase_REF_RunAsync (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36890]:0x99adb9)\n                     at xunit_execution_dotnet_Xunit_Sdk_XunitTestCaseRunner_RunTestAsync (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36942]:0x9a19cf)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestCaseRunner_1__RunAsyncd__19_TTestCase_REF_MoveNext (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36795]:0x98f0af)\n                     at corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24149]:0x57a0f3)\n                     at corlib_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_GSHAREDVT_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24154]:0x57a2ff)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestCaseRunner_1_TTestCase_REF_RunAsync (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36741]:0x989dd6)\n                     at xunit_execution_dotnet_Xunit_Sdk_XunitTestCase_RunAsync_Xunit_Abstractions_IMessageSink_Xunit_Sdk_IMessageBus_object___Xunit_Sdk_ExceptionAggregator_System_Threading_CancellationTokenSource (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[37192]:0x9bd42b)\n                     at xunit_execution_dotnet_Xunit_Sdk_XunitTestMethodRunner_RunTestCaseAsync_Xunit_Sdk_IXunitTestCase (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[37021]:0x9aab01)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestMethodRunner_1__RunTestCasesAsyncd__32_TTestCase_REF_MoveNext (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36884]:0x99a67c)\n                     at corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24149]:0x57a0f3)\n                     at corlib_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_GSHAREDVT_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24154]:0x57a2ff)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestMethodRunner_1_TTestCase_REF_RunTestCasesAsync (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36876]:0x99925c)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestMethodRunner_1__RunAsyncd__31_TTestCase_REF_MoveNext (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36877]:0x9996cb)\n                     at corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24149]:0x57a0f3)\n                     at corlib_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_GSHAREDVT_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24154]:0x57a2ff)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestMethodRunner_1_TTestCase_REF_RunAsync (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36875]:0x99915d)\n                     at xunit_execution_dotnet_Xunit_Sdk_XunitTestClassRunner_RunTestMethodAsync_Xunit_Abstractions_ITestMethod_Xunit_Abstractions_IReflectionMethodInfo_System_Collections_Generic_IEnumerable_1_Xunit_Sdk_IXunitTestCase_object__ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36950]:0x9a28d9)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestClassRunner_1__RunTestMethodsAsyncd__38_TTestCase_REF_MoveNext (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36824]:0x993043)\n                     at corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24149]:0x57a0f3)\n                     at corlib_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_GSHAREDVT_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24154]:0x57a2ff)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestClassRunner_1_TTestCase_REF_RunTestMethodsAsync (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36809]:0x9909ed)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestClassRunner_1__RunAsyncd__37_TTestCase_REF_MoveNext (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36817]:0x991720)\n                     at corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24149]:0x57a0f3)\n                     at corlib_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_GSHAREDVT_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24154]:0x57a2ff)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestClassRunner_1_TTestCase_REF_RunAsync (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36808]:0x9908f2)\n                     at xunit_execution_dotnet_Xunit_Sdk_XunitTestCollectionRunner_RunTestClassAsync_Xunit_Abstractions_ITestClass_Xunit_Abstractions_IReflectionTypeInfo_System_Collections_Generic_IEnumerable_1_Xunit_Sdk_IXunitTestCase (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36984]:0x9a70a7)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestCollectionRunner_1__RunTestClassesAsyncd__28_TTestCase_REF_MoveNext (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36843]:0x99534a)\n                     at corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24149]:0x57a0f3)\n                     at corlib_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_GSHAREDVT_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24154]:0x57a2ff)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestCollectionRunner_1_TTestCase_REF_RunTestClassesAsync (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36832]:0x993793)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestCollectionRunner_1__RunAsyncd__27_TTestCase_REF_MoveNext (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36836]:0x993fad)\n                     at corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24149]:0x57a0f3)\n                     at corlib_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_GSHAREDVT_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24154]:0x57a2ff)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestCollectionRunner_1_TTestCase_REF_RunAsync (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36831]:0x993694)\n                     at xunit_execution_dotnet_Xunit_Sdk_XunitTestAssemblyRunner__RunTestCollectionAsyncd__18_MoveNext (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36924]:0x99e858)\n                     at corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24149]:0x57a0f3)\n                     at xunit_execution_dotnet_Xunit_Sdk_XunitTestAssemblyRunner_RunTestCollectionAsync_Xunit_Sdk_IMessageBus_Xunit_Abstractions_ITestCollection_System_Collections_Generic_IEnumerable_1_Xunit_Sdk_IXunitTestCase_System_Threading_CancellationTokenSource (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36914]:0x99dedb)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestAssemblyRunner_1__RunTestCollectionsAsyncd__42_TTestCase_REF_MoveNext (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36789]:0x98e657)\n                     at corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24149]:0x57a0f3)\n                     at corlib_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_GSHAREDVT_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24154]:0x57a2ff)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestAssemblyRunner_1_TTestCase_REF_RunTestCollectionsAsync_Xunit_Sdk_IMessageBus_System_Threading_CancellationTokenSource (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36775]:0x98c5f6)\n                     at xunit_execution_dotnet_Xunit_Sdk_XunitTestAssemblyRunner__n__0_Xunit_Sdk_IMessageBus_System_Threading_CancellationTokenSource (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36915]:0x99df7b)\n                     at xunit_execution_dotnet_Xunit_Sdk_XunitTestAssemblyRunner__RunTestCollectionsAsyncd__16_MoveNext (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36929]:0x99f128)\n                     at corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24149]:0x57a0f3)\n                     at xunit_execution_dotnet_Xunit_Sdk_XunitTestAssemblyRunner_RunTestCollectionsAsync_Xunit_Sdk_IMessageBus_System_Threading_CancellationTokenSource (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36912]:0x99dd35)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestAssemblyRunner_1__RunAsyncd__41_TTestCase_REF_MoveNext (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36782]:0x98d2b2)\n                     at corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24149]:0x57a0f3)\n                     at corlib_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_TResult_GSHAREDVT_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24154]:0x57a2ff)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestAssemblyRunner_1_TTestCase_REF_RunAsync (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[36774]:0x98c4ad)\n                     at xunit_execution_dotnet_Xunit_Sdk_XunitTestFrameworkExecutor__RunTestCasesd__8_MoveNext (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[37213]:0x9c04aa)\n                     at corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24149]:0x57a0f3)\n                     at xunit_execution_dotnet_Xunit_Sdk_XunitTestFrameworkExecutor_RunTestCases_System_Collections_Generic_IEnumerable_1_Xunit_Sdk_IXunitTestCase_Xunit_Abstractions_IMessageSink_Xunit_Abstractions_ITestFrameworkExecutionOptions (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[37211]:0x9c0178)\n                     at xunit_execution_dotnet_Xunit_Sdk_TestFrameworkExecutor_1_TTestCase_REF_RunTests_System_Collections_Generic_IEnumerable_1_Xunit_Abstractions_ITestCase_Xunit_Abstractions_IMessageSink_Xunit_Abstractions_ITestFrameworkExecutionOptions (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[37115]:0x9b4afe)\n                     at xunit_runner_utility_netcoreapp10_Xunit_Xunit2_RunTests_System_Collections_Generic_IEnumerable_1_Xunit_Abstractions_ITestCase_Xunit_Abstractions_IMessageSink_Xunit_Abstractions_ITestFrameworkExecutionOptions (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[38142]:0xa01807)\n                     at xunit_runner_utility_netcoreapp10_TestFrameworkExtensions_RunTests_Xunit_Abstractions_ITestFrameworkExecutor_System_Collections_Generic_IEnumerable_1_Xunit_Abstractions_ITestCase_Xunit_IMessageSinkWithTypes_Xunit_Abstractions_ITestFrameworkExecutionOptions (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[37939]:0x9f6470)\n                     at Microsoft_DotNet_XHarness_TestRunners_Xunit_Microsoft_DotNet_XHarness_TestRunners_Xunit_ThreadlessXunitTestRunner__Rund__6_MoveNext (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[402]:0x5a8cb)\n                     at corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24149]:0x57a0f3)\n                     at Microsoft_DotNet_XHarness_TestRunners_Xunit_Microsoft_DotNet_XHarness_TestRunners_Xunit_ThreadlessXunitTestRunner_Run_System_Collections_Generic_IEnumerable_1_Microsoft_DotNet_XHarness_TestRunners_Common_TestAssemblyInfo (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[388]:0x58062)\n                     at Microsoft_DotNet_XHarness_TestRunners_Common_Microsoft_DotNet_XHarness_TestRunners_Common_ApplicationEntryPoint__InternalRunAsyncd__38_MoveNext (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[101]:0x49383)\n                     at corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24149]:0x57a0f3)\n                     at Microsoft_DotNet_XHarness_TestRunners_Common_Microsoft_DotNet_XHarness_TestRunners_Common_ApplicationEntryPoint_InternalRunAsync_Microsoft_DotNet_XHarness_TestRunners_Common_LogWriter (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[92]:0x47dea)\n                     at Microsoft_DotNet_XHarness_TestRunners_Common_Microsoft_DotNet_XHarness_TestRunners_Common_ApplicationEntryPoint__InternalRunAsyncd__39_MoveNext (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[111]:0x49ecd)\n                     at corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24149]:0x57a0f3)\n                     at Microsoft_DotNet_XHarness_TestRunners_Common_Microsoft_DotNet_XHarness_TestRunners_Common_ApplicationEntryPoint_InternalRunAsync_Microsoft_DotNet_XHarness_TestRunners_Common_ApplicationOptions_System_IO_TextWriter_System_IO_TextWriter (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[93]:0x47f32)\n                     at Microsoft_DotNet_XHarness_TestRunners_Common_Microsoft_DotNet_XHarness_TestRunners_Common_WasmApplicationEntryPointBase__RunAsyncd__4_MoveNext (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[219]:0x4f460)\n                     at corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24149]:0x57a0f3)\n                     at Microsoft_DotNet_XHarness_TestRunners_Common_Microsoft_DotNet_XHarness_TestRunners_Common_WasmApplicationEntryPointBase_RunAsync (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[217]:0x4f238)\n                     at WasmTestRunner_WasmTestRunner_RunAsync (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[35949]:0x94bab7)\n                     at Microsoft_DotNet_XHarness_TestRunners_Xunit_Microsoft_DotNet_XHarness_TestRunners_Xunit_WasmApplicationEntryPoint__Rund__36_MoveNext (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[440]:0x5d163)\n                     at corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24149]:0x57a0f3)\n                     at Microsoft_DotNet_XHarness_TestRunners_Xunit_Microsoft_DotNet_XHarness_TestRunners_Xunit_WasmApplicationEntryPoint_Run (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[438]:0x5cdbb)\n                     at WasmTestRunner_WasmTestRunner__MainAsyncd__7_MoveNext (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[35952]:0x94bfbd)\n                     at corlib_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_AsyncStateMachineBox_1_TResult_GSHAREDVT_TStateMachine_GSHAREDVT_ExecutionContextCallback_object (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24178]:0x57b147)\n                     at corlib_wrapper_delegate_invoke__Module_invoke_void_object_object (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[25083]:0x5a2e31)\n                     at corlib_System_Threading_ExecutionContext_RunFromThreadPoolDispatchLoop_System_Threading_Thread_System_Threading_ExecutionContext_System_Threading_ContextCallback_object (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[18409]:0x444e85)\n                     at corlib_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_AsyncStateMachineBox_1_TResult_GSHAREDVT_TStateMachine_GSHAREDVT_MoveNext_System_Threading_Thread (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24184]:0x57b558)\n                     at corlib_System_Runtime_CompilerServices_AsyncTaskMethodBuilder_1_AsyncStateMachineBox_1_TResult_GSHAREDVT_TStateMachine_GSHAREDVT_ExecuteFromThreadPool_System_Threading_Thread (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[24182]:0x57b34e)\n                     at corlib_System_Threading_ThreadPoolWorkQueue_DispatchWorkItem_object_System_Threading_Thread (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[18750]:0x45354b)\n                     at corlib_System_Threading_ThreadPoolWorkQueue_Dispatch (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[18748]:0x45317c)\n                     at corlib_System_Threading_ThreadPool_BackgroundJobHandler (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[18785]:0x454d71)\n                     at corlib_wrapper_native_to_managed_System_Threading_ThreadPool_BackgroundJobHandler (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[25175]:0x5a678a)\n                     at mono_background_exec (http://127.0.0.1:41913/_framework/dotnet.native.wasm:wasm-function[59030]:0xf3b430)\n                     at e.\u003ccomputed\u003e (http://127.0.0.1:41913/_framework/dotnet.runtime.js:3:183112)\n                     at Ko (http://127.0.0.1:41913/_framework/dotnet.runtime.js:3:56911)\n                     at callUserCallback (http://127.0.0.1:41913/_framework/dotnet.native.js:8:103511)\n                     at http://127.0.0.1:41913/_framework/dotnet.native.js:8:103779\n```\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=1073221\r\n**Error message validated:** `[compute_class_bitmap: Invalid type 13 for field System.IO.Tests.Uma_TestStructs+UmaTestStruct_Generic`1[T_REF]:ofT`]\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 6/30/2025 5:52:33 PM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n\r\n|Build|Definition|Test|Pull Request|\r\n|---|---|---|---|\r\n|[1109292](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1109292)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1109292\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30435746\u0026resultId=174928)||\r\n|[1108891](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1108891)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1108891\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30417554\u0026resultId=174928)||\r\n|[1108673](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1108673)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1108673\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30409980\u0026resultId=174945)||\r\n|[1108337](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1108337)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1108337\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30396964\u0026resultId=174928)||\r\n|[1107905](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1107905)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1107905\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30378168\u0026resultId=174927)||\r\n|[1107614](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1107614)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1107614\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30367664\u0026resultId=174929)|dotnet/runtime#118048|\r\n|[1107524](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1107524)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1107524\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30364434\u0026resultId=114751)|dotnet/runtime#117585|\r\n|[1107280](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1107280)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1107280\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30354850\u0026resultId=175180)||\r\n|[1106917](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1106917)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1106917\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30341398\u0026resultId=174927)||\r\n|[1106817](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1106817)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1106817\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30336060\u0026resultId=174927)||\r\n|[1106690](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1106690)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1106690\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30331448\u0026resultId=173866)||\r\n|[1106578](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1106578)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1106578\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30327638\u0026resultId=174925)||\r\n|[1106297](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1106297)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1106297\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30319894\u0026resultId=174945)||\r\n|[1106291](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1106291)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1106291\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30319868\u0026resultId=174925)||\r\n|[1106003](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1106003)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1106003\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30309386\u0026resultId=114751)|dotnet/runtime#117585|\r\n|[1105654](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1105654)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1105654\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30300376\u0026resultId=174918)||\r\n|[1105624](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1105624)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1105624\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30298816\u0026resultId=174918)||\r\n|[1105148](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1105148)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1105148\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30284174\u0026resultId=174918)||\r\n|[1103994](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1103994)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1103994\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30239658\u0026resultId=174945)||\r\n|[1103918](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1103918)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1103918\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30237614\u0026resultId=174917)||\r\n|[1103901](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1103901)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1103901\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30237426\u0026resultId=174917)||\r\n|[1103711](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1103711)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1103711\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30230632\u0026resultId=174945)||\r\n|[1103105](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1103105)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1103105\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30212330\u0026resultId=174915)||\r\n|[1102557](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1102557)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1102557\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30193748\u0026resultId=174948)||\r\n|[1102475](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1102475)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1102475\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30191574\u0026resultId=174945)||\r\n|[1102190](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1102190)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1102190\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30183218\u0026resultId=174945)||\r\n|[1101878](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1101878)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1101878\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30168658\u0026resultId=174945)||\r\n|[1101389](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1101389)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1101389\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30149432\u0026resultId=174945)||\r\n|[1100700](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1100700)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1100700\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30121718\u0026resultId=174945)||\r\n|[1100359](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1100359)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1100359\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30104514\u0026resultId=174945)||\r\n|[1100209](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1100209)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1100209\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30099346\u0026resultId=174945)||\r\n|[1099934](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1099934)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1099934\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30084428\u0026resultId=174945)||\r\n|[1099458](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1099458)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1099458\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30070088\u0026resultId=174945)||\r\n|[1098828](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1098828)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1098828\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30053124\u0026resultId=174861)||\r\n|[1098261](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1098261)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1098261\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30032368\u0026resultId=174855)||\r\n|[1097633](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1097633)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1097633\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=30013258\u0026resultId=174855)||\r\n|[1096215](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1096215)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1096215\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29955614\u0026resultId=174095)||\r\n|[1095577](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1095577)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1095577\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=29923566\u0026resultId=174855)||\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|38|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOuvLuEg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc60BEr8",
                                           "createdAt":  "2025-06-30T17:52:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-06-30T17:52:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc60CqFK",
                                           "createdAt":  "2025-06-30T20:31:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jozkee",
                                           "body":  "This is from a preview6 run from Jun 20th, it might\u0027ve been fixed in main already.",
                                           "updatedAt":  "2025-06-30T20:31:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc61gyNr",
                                           "createdAt":  "2025-07-07T13:48:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "@radekdoulik this looks like another AOT test not running in CI, lets capture the history then decide on a milestone",
                                           "updatedAt":  "2025-07-07T13:48:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc61jT13",
                                           "createdAt":  "2025-07-07T16:58:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-io\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-07-07T16:58:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc62VrHE",
                                           "createdAt":  "2025-07-10T21:18:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "https://github.com/dotnet/runtime/blob/f8633a3031d8a7c0ee5fb38c89289a584c9344ce/src/libraries/System.Runtime/tests/System.IO.UnmanagedMemoryStream.Tests/Uma.ReadWriteStruct.cs#L118-L129\n",
                                           "updatedAt":  "2025-07-10T21:18:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc62W3ft",
                                           "createdAt":  "2025-07-10T23:00:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "issue might have started in https://github.com/dotnet/runtime/pull/105206",
                                           "updatedAt":  "2025-07-10T23:00:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc667xnI",
                                           "createdAt":  "2025-07-30T12:58:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "The first failing test is `System.IO.Tests.Uma_ReadWriteStructArray.UmaReadWriteGenericStringStructArray_ThrowsArgumentException`",
                                           "updatedAt":  "2025-07-30T12:58:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc668m5F",
                                           "createdAt":  "2025-07-30T13:52:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "There is call to `mini_instantiate_gshared_info`-\u003e`instantiate_info`-\u003e `compute_class_bitmap` which iterates over fields. In this case the field is `string`. Maybe the g-shared method info only knows it\u0027s `MONO_TYPE_VAR = 0x13`.\n\nWhy this is not failing on other Mono AOT platforms ? The test and the managed code is 7 years old.\n\n\n\n",
                                           "updatedAt":  "2025-07-30T13:52:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc668u4S",
                                           "createdAt":  "2025-07-30T13:59:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "\u003e Why this is not failing on other Mono AOT platforms ? The test and the managed code is 7 years old.\n\nThis is disabled on iOS https://github.com/dotnet/runtime/issues/109282 https://github.com/dotnet/runtime/pull/110966/",
                                           "updatedAt":  "2025-07-30T13:59:36Z"
                                       }
                                   ],
                         "totalCount":  9
                     },
        "title":  "[browser][AOT] WasmTestOnChrome-ST-System.IO.UnmanagedMemoryStream.Tests",
        "labels":  [
                       "arch-wasm",
                       "disabled-test",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/118697",
        "createdAt":  "2025-08-13T19:47:15Z",
        "number":  118697,
        "author":  "BrzVlad",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-13T20:04:31Z",
        "body":  "The current implementation of these calls relies on boxing the return, which is invalid for ByRefLike types. This impacts mono-aot on ios.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOvd1s-Q==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc693Wz5",
                                           "createdAt":  "2025-08-13T19:47:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027os-ios\u0027: @vitek-karas, @kotlarmilos, @steveisok, @akoeplinger\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-08-13T19:47:26Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "[mono] Constrained calls to gsharedvt types that return a ByRefLike struct are not supported",
        "labels":  [
                       "area-Codegen-AOT-mono",
                       "os-ios"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/118855",
        "createdAt":  "2025-08-18T17:50:04Z",
        "number":  118855,
        "author":  "pavelsavara",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-19T01:32:04Z",
        "body":  "This is a method after IL trimming\n\n```cs\npublic sealed class BDD : IEquatable\u003cBDD\u003e\n{\n  [MethodImpl(MethodImplOptions.NoInlining)]\n  public bool Equals(BDD other) =\u003e throw new NotSupportedException(\"Linked away\");\n}\n```\n\nThe wasm code emmited is quite large \n\n```wasm\n  (func $Wasm_Browser_Sample_BDD_Equals_BDD (;35420;) (param $var0 i32) (param $var1 i32) (param $var2 i32) (result i32)\n    (local $var3 i32)\n    (local $var4 i32)\n    global.get $__stack_pointer\n    i32.const 16\n    i32.sub\n    local.tee $var4\n    global.set $__stack_pointer\n    local.get $var4\n    i32.const 3996424\n    i32.load\n    i32.const 21\n    call $aot_wrapper_icall_mono_helper_ldstr\n    local.tee $var3\n    i32.store offset=12\n    local.get $var4\n    i32.const 33554635\n    local.get $var3\n    call $mono_create_corlib_exception_1\n    local.tee $var3\n    i32.store offset=8\n    local.get $var3\n    call $mini_llvmonly_throw_exception\n    unreachable\n  )\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOvpunuQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6-m6e5",
                                           "createdAt":  "2025-08-18T17:50:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-08-18T17:50:21Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "[mono][AOT] linked away methods are emmited into final binary",
        "labels":  [
                       "arch-wasm",
                       "area-Codegen-AOT-mono"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/119143",
        "createdAt":  "2025-08-27T14:18:31Z",
        "number":  119143,
        "author":  "pavelsavara",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-17T12:14:33Z",
        "body":  "Simplest repro is AOT build of\n```cs\nActivator.CreateInstance(typeof(Queue), new[] { new List\u003cNullable\u003cInt128\u003e\u003e(){0,null} });\n```\n\nOriginally from `NumberHandlingTestsDynamic.Number_AsCollectionElement_RoundTrip`\n\nhttps://github.com/dotnet/runtime/blob/0be1d88b1444a5473394f35f4ca5e723c47b7241/src/libraries/System.Text.Json/tests/Common/NumberHandlingTests.cs#L581-L582\n\n\n[Log](https://helixr1107v0xdcypoyl9e7f.blob.core.windows.net/dotnet-runtime-refs-pull-116390-merge-4f9a4df2d8564ac1af/WasmTestOnChrome-ST-System.Text.Json.Tests/1/console.a7fe1b95.log?helixlogtype=result)\n```\n[21:25:54] fail: MONO_WASM: null function or function signature mismatch\n                 RuntimeError: null function or function signature mismatch\n                     at aot_instances_aot_wrapper_gsharedvt_out_sig_obj_cl4c_Mono_dValueTuple_602_3cbyte_2c_20Mono_dValueTuple_602_3clong_2c_20long_3e_3e_ (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[64734]:0x12547d4)\n                     at corlib_System_Collections_Generic_List_1_Enumerator_T_GSHAREDVT_System_Collections_IEnumerator_get_Current (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[41067]:0xa76714)\n                     at ut_corlib_System_Collections_Generic_List_1_Enumerator_T_GSHAREDVT_System_Collections_IEnumerator_get_Current (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[41068]:0xa76763)\n                     at System_Collections_NonGeneric_System_Collections_Queue__ctor_System_Collections_ICollection (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[10716]:0x36f692)\n                     at JsonSchema_Net_aot_wrapper_gsharedvt_out_sig_void_this_obj (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[1405]:0xe20e9)\n                     at jit_call_cb (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[90080]:0x187fb43)\n                     at mono_llvm_cpp_catch_exception (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[93365]:0x1972bf1)\n                     at mono_llvm_catch_exception (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[93417]:0x1977254)\n                     at do_jit_call (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[90000]:0x187c659)\n                     at mono_interp_exec_method (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[89995]:0x187bb1a)\n                     at interp_entry (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[90074]:0x187f7cc)\n                     at interp_entry_static_ret_2 (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[90103]:0x1880733)\n                     at aot_instances_aot_wrapper_gsharedvt_in_sig_obj_objcl40_Mono_dValueTuple_601_3cMono_dValueTuple_602_3cint_2c_20int_3e_3e_ (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[64696]:0x1252fd9)\n                     at corlib_wrapper_delegate_invoke__Module_invoke_object_object_Span_1_object_object_System_Span_1_object (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[41567]:0xa9241f)\n                     at corlib_System_Reflection_MethodBaseInvoker_InvokeWithOneArg_object_System_Reflection_BindingFlags_System_Reflection_Binder_object___System_Globalization_CultureInfo (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[36414]:0x95b605)\n                     at corlib_System_Reflection_RuntimeConstructorInfo_Invoke_System_Reflection_BindingFlags_System_Reflection_Binder_object___System_Globalization_CultureInfo (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[36560]:0x963d60)\n                     at corlib_System_RuntimeType_CreateInstanceImpl_System_Reflection_BindingFlags_System_Reflection_Binder_object___System_Globalization_CultureInfo (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[25239]:0x794d42)\n                     at corlib_System_Activator_CreateInstance_System_Type_System_Reflection_BindingFlags_System_Reflection_Binder_object___System_Globalization_CultureInfo_object__ (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[25970]:0x7b916a)\n                     at corlib_System_Activator_CreateInstance_System_Type_object__ (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[25971]:0x7b91af)\n                     at aot_instances_aot_wrapper_gsharedvt_out_sig_obj_objobj (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[64654]:0x1252284)\n                     at jit_call_cb (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[90080]:0x187fb5b)\n                     at mono_llvm_cpp_catch_exception (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[93365]:0x1972bf1)\n                     at mono_llvm_catch_exception (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[93417]:0x1977254)\n                     at do_jit_call (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[90000]:0x187c659)\n                     at mono_interp_exec_method (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[89995]:0x186f460)\n                     at interp_entry (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[90074]:0x187f7cc)\n                     at interp_entry_instance_0 (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[90092]:0x188030a)\n                     at aot_instances_aot_wrapper_gsharedvt_in_sig_void_this_ (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[64620]:0x12503b0)\n                     at corlib_System_Runtime_CompilerServices_AsyncMethodBuilderCore_Start_TStateMachine_GSHAREDVT_TStateMachine_GSHAREDVT_ (http://127.0.0.1:44947/_framework/dotnet.native.wasm:wasm-function[40516]:0xa5f42d)\n```\n\nhttps://github.com/dotnet/runtime/issues/66220 may be related",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOwHXZSw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc7AbYl1",
                                           "createdAt":  "2025-08-27T14:18:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-08-27T14:18:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7AbwIa",
                                           "createdAt":  "2025-08-27T14:44:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "```\n[MONO] AOT: FOUND method System.RuntimeType:GetConstructors (System.Reflection.BindingFlags) [0x1276 - 0x1277 0x106f98]\ndotnet.runtime.js:1415 [MONO] AOT: FOUND method System.Buffer:Memmove\u003cT\u003e (T\u0026,T\u0026,uintptr) [0x1169 - 0x116a 0x106f98]\ndotnet.runtime.js:1415 [MONO] Running class .cctor for System.Collections.Generic.List`1\u003cSystem.Reflection.MethodBase\u003e from \u0027System.Private.CoreLib.dll\u0027\ndotnet.runtime.js:1415 [MONO] AOT: FOUND method System.Collections.Generic.List`1:.cctor () [0x3832 - 0x3833 0x106f98]\ndotnet.runtime.js:1415 [MONO] AOT: FOUND method System.RuntimeType:IsArrayImpl () [0x12f2 - 0x12f3 0x106f98]\ndotnet.runtime.js:1415 [MONO] AOT: FOUND method System.DefaultBinder:BindToMethod (System.Reflection.BindingFlags,System.Reflection.MethodBase[],object[]\u0026,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,string[],object\u0026) [0x1762 - 0x1763 0x106f98]\ndotnet.runtime.js:1415 [MONO] AOT: FOUND method System.Array:Clone () [0x114e - 0x114f 0x106f98]\ndotnet.runtime.js:1415 [MONO] AOT: FOUND method System.RuntimeType:IsPrimitiveImpl () [0x12f6 - 0x12f7 0x106f98]\ndotnet.runtime.js:1415 [MONO] AOT: FOUND method System.RuntimeType:GetTypeCodeImpl () [0x12f0 - 0x12f1 0x106f98]\ndotnet.runtime.js:1415 [MONO] AOT: FOUND method System.Reflection.RuntimeConstructorInfo:Invoke (System.Reflection.BindingFlags,System.Reflection.Binder,object[],System.Globalization.CultureInfo) [0x2f2b - 0x2f2c 0x106f98]\ndotnet.runtime.js:1415 [MONO] AOT: FOUND method System.RuntimeType:IsInstanceOfType (object) [0x1280 - 0x1281 0x106f98]\ndotnet.runtime.js:1415 [MONO] AOT: FOUND method System.Collections.Generic.List`1\u003cT_GSHAREDVT\u003e:get_Count () [0x3a43 - 0x3a44 0x106f98]\ndotnet.runtime.js:1415 [MONO] AOT: FOUND method System.Collections.Generic.List`1\u003cT_GSHAREDVT\u003e:System.Collections.IEnumerable.GetEnumerator () [0x3a4a - 0x3a4b 0x106f98]\ndotnet.runtime.js:1415 [MONO] AOT NOT FOUND: System.Collections.Generic.List`1\u003cSystem.Nullable`1\u003cSystem.Int128\u003e\u003e:System.Collections.Generic.IEnumerable\u003cT\u003e.GetEnumerator ().\ndotnet.runtime.js:1415 [MONO] AOT: FOUND method (wrapper other) object:gsharedvt_in_sig (intptr) [0x508d - 0x508e 0x106f98]\ndotnet.runtime.js:1415 [MONO] AOT NOT FOUND: System.Collections.Generic.List`1\u003cSystem.Nullable`1\u003cSystem.Int128\u003e\u003e:GetEnumerator ().\ndotnet.runtime.js:1415 [MONO] AOT: FOUND method (wrapper other) object:gsharedvt_out_sig (intptr,intptr) [0x5053 - 0x5054 0x106f98]\ndotnet.runtime.js:1415 [MONO] AOT: FOUND method System.Collections.Generic.List`1/Enumerator\u003cT_GSHAREDVT\u003e:.ctor (System.Collections.Generic.List`1\u003cT_GSHAREDVT\u003e) [0x3a50 - 0x3a51 0x106f98]\ndotnet.runtime.js:1415 [MONO] AOT: FOUND method string:bzero (byte*,int) [0x1338 - 0x1339 0x106f98]\ndotnet.runtime.js:1415 [MONO] AOT: FOUND method System.Collections.Generic.List`1/Enumerator\u003cT_GSHAREDVT\u003e:MoveNext () [0x3a52 - 0x3a53 0x106f98]\ndotnet.runtime.js:1415 [MONO] AOT: FOUND method string:memcpy (byte*,byte*,int) [0x1337 - 0x1338 0x106f98]\ndotnet.runtime.js:1415 [MONO] AOT: FOUND method System.Collections.Generic.List`1/Enumerator\u003cT_GSHAREDVT\u003e:System.Collections.IEnumerator.get_Current () [0x3a53 - 0x3a54 0x106f98]\ndotnet.runtime.js:1415 [MONO] AOT NOT FOUND: System.Nullable`1\u003cSystem.Int128\u003e:Box (System.Nullable`1\u003cSystem.Int128\u003e).\ndotnet.runtime.js:1415 [MONO] AOT NOT FOUND: (wrapper other) object:gsharedvt_out_sig (intptr,Mono.ValueTuple`2\u003cbyte, Mono.ValueTuple`2\u003clong, long\u003e\u003e\u0026,intptr).\n```",
                                           "updatedAt":  "2025-08-27T14:52:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7AcCPZ",
                                           "createdAt":  "2025-08-27T15:01:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "```\n$mini_get_gsharedvt_wrapper\t@\tmini-generic-sharing.c:2114\n$mini_llvmonly_add_method_wrappers\t@\tllvmonly-runtime.c:213\n$class_type_info\t@\tmini-generic-sharing.c:1082\n$instantiate_info\t@\tmini-generic-sharing.c:2244\n$instantiate_info\t@\tmini-generic-sharing.c:2661\n$mini_instantiate_gshared_info\t@\tmini-generic-sharing.c:2760\n$mini_init_method_rgctx\t@\tjit-icalls.c:1743\n$corlib_System_Collections_Generic_List_1_Enumerator_T_GSHAREDVT_System_Collections_IEnumerator_get_Current\n$ut_corlib_System_Collections_Generic_List_1_Enumerator_T_GSHAREDVT_System_Collections_IEnumerator_get_Current\n$System_Collections_NonGeneric_System_Collections_Queue__ctor_System_Collections_ICollection\n```",
                                           "updatedAt":  "2025-08-27T15:01:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7AddlL",
                                           "createdAt":  "2025-08-27T16:39:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "pavelsavara",
                                           "body":  "I though that this is because AOT doesn\u0027t have visibility for the call, because we use reflection to call the constructor.\n\nSo I prefixed it direct call, to make sure it\u0027s not trimmed and it\u0027s AOT generated. But it didn\u0027t help.\n```cs\nvar q = new Queue(new List\u003cNullable\u003cInt128\u003e\u003e() { 42, null });\n```\n\nThis doesn\u0027t reproduce it either.\n```cs\nList\u003cNullable\u003cInt128\u003e\u003e n = new List\u003cNullable\u003cInt128\u003e\u003e() { 42, null };\nforeach (object item in n)\n{\n}\n```\n\nRight now I think we need something like code below, but for combination of generic and non-generic collections/enumerables.\n\nhttps://github.com/dotnet/runtime/blob/0be1d88b1444a5473394f35f4ca5e723c47b7241/src/mono/mono/mini/aot-compiler.c#L5824-L5828",
                                           "updatedAt":  "2025-08-27T16:39:21Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "[wasm][AOT] null function or function signature mismatch -",
        "labels":  [
                       "arch-wasm",
                       "disabled-test",
                       "area-Codegen-AOT-mono",
                       "wasm-aot-test",
                       "os-browser"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/119205",
        "createdAt":  "2025-08-29T13:27:25Z",
        "number":  119205,
        "author":  "pavelsavara",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T03:04:26Z",
        "body":  "## Build Information\nBuild: https://dev.azure.com/dnceng-public/public/_build/results?buildId=1134807\u0026view=results\nBuild error leg or test failing: System.Runtime.Intrinsics.Tests\n\u003c!-- Error message template  --\u003e\n## Error Message\n\n```json\n{\n  \"ErrorMessage\": [\"WasmApp.Common.targets\", \"error : Could not allocate\"],\n  \"BuildRetry\": false,\n  \"ExcludeConsoleLog\": false\n}\n```\n\n[Log](https://helixr1107v0xdcypoyl9e7f.blob.core.windows.net/dotnet-runtime-refs-heads-main-20c6d05a0d9e48e58f/WasmTestOnChrome-ST-System.Runtime.Intrinsics.Tests/1/console.0e5bb1dd.log?helixlogtype=result\u0026skoid=8eda00af-b5ec-4be9-b69b-0919a2338892\u0026sktid=72f988bf-86f1-41af-91ab-2d7cd011db47\u0026skt=2025-08-29T13%3A17%3A48Z\u0026ske=2025-08-29T14%3A17%3A48Z\u0026sks=b\u0026skv=2024-11-04\u0026sv=2024-11-04\u0026se=2025-08-29T14%3A17%3A48Z\u0026sr=b\u0026sp=rl\u0026sig=6W7SZf7hLAsNnvXlMagNfDapTUkSZa5NdW6cHrX3ykE%3D)\n```\n[24/47] System.Private.Uri.dll -\u003e System.Private.Uri.dll.bc\n  [System.Private.Xml.dll] Exec (with response file contents expanded) in C:\\helix\\work\\workitem\\e\\wasm_build\\obj\\wasm\\for-build\\aot-in: MONO_PATH=C:\\helix\\work\\workitem\\e\\wasm_build\\obj\\wasm\\for-build\\aot-in;C:\\helix\\work\\correlation\\build\\microsoft.netcore.app.runtime.browser-wasm\\runtimes\\browser-wasm\\native\\;C:\\helix\\work\\correlation\\build\\microsoft.netcore.app.runtime.browser-wasm\\runtimes\\browser-wasm\\lib\\net10.0 MONO_ENV_OPTIONS= C:\\helix\\work\\correlation\\build\\cross\\mono-aot-cross.exe --wasm-exceptions --debug --llvm \"--aot=no-opt,static,direct-icalls,deterministic,mattr=simd,nodebug,llvm-path=C:\\helix\\work\\correlation\\build\\emsdk\\bin\\,static,dedup-skip,trimming-eligible-methods-outfile=C:\\helix\\work\\workitem\\e\\wasm_build\\obj\\wasm\\for-build\\tokens\\System_Private_Xml_dll_compiled_methods.txt,llvmonly,interp,asmonly,llvm-outfile=C:\\helix\\work\\workitem\\e\\wasm_build\\obj\\wasm\\for-build\\System.Private.Xml.dll.bc.tmp,temp-path=C:\\helix\\work\\workitem\\e\\wasm_build\\obj\\wasm\\for-build\\System.Private.Xml.dll.tmp\" \"System.Private.Xml.dll\"\n  \nC:\\helix\\work\\correlation\\build\\wasm-shared\\WasmApp.Common.targets(672,5): error : Precompiling failed for C:\\helix\\work\\workitem\\e\\wasm_build\\obj\\wasm\\for-build\\aot-in\\System.Private.Xml.dll with exit code -1073740791. [C:\\helix\\work\\workitem\\e\\publish\\ProxyProjectForAOTOnHelix.proj]\nC:\\helix\\work\\correlation\\build\\wasm-shared\\WasmApp.Common.targets(672,5): error : Mono Ahead of Time compiler - compiling assembly C:\\helix\\work\\workitem\\e\\wasm_build\\obj\\wasm\\for-build\\aot-in\\System.Private.Xml.dll [C:\\helix\\work\\workitem\\e\\publish\\ProxyProjectForAOTOnHelix.proj]\nC:\\helix\\work\\correlation\\build\\wasm-shared\\WasmApp.Common.targets(672,5): error : Could not allocate 163840 bytes [C:\\helix\\work\\workitem\\e\\publish\\ProxyProjectForAOTOnHelix.proj]\n  [System.Private.CoreLib.dll] Exec (with response file contents expanded) in C:\\helix\\work\\workitem\\e\\wasm_build\\obj\\wasm\\for-build\\aot-in: MONO_PATH=C:\\helix\\work\\workitem\\e\\wasm_build\\obj\\wasm\\for-build\\aot-in;C:\\helix\\work\\correlation\\build\\microsoft.netcore.app.runtime.browser-wasm\\runtimes\\browser-wasm\\native\\;C:\\helix\\work\\correlation\\build\\microsoft.netcore.app.runtime.browser-wasm\\runtimes\\browser-wasm\\lib\\net10.0 MONO_ENV_OPTIONS= C:\\helix\\work\\correlation\\build\\cross\\mono-aot-cross.exe --wasm-exceptions --debug --llvm \"--aot=no-opt,static,direct-icalls,deterministic,mattr=simd,nodebug,llvm-path=C:\\helix\\work\\correlation\\build\\emsdk\\bin\\,static,dedup-skip,trimming-eligible-methods-outfile=C:\\helix\\work\\workitem\\e\\wasm_build\\obj\\wasm\\for-build\\tokens\\System_Private_CoreLib_dll_compiled_methods.txt,llvmonly,interp,asmonly,llvm-outfile=C:\\helix\\work\\workitem\\e\\wasm_build\\obj\\wasm\\for-build\\System.Private.CoreLib.dll.bc.tmp,temp-path=C:\\helix\\work\\workitem\\e\\wasm_build\\obj\\wasm\\for-build\\System.Private.CoreLib.dll.tmp\" \"System.Private.CoreLib.dll\"\n  \nC:\\helix\\work\\correlation\\build\\wasm-shared\\WasmApp.Common.targets(672,5): error : Precompiling failed for C:\\helix\\work\\workitem\\e\\wasm_build\\obj\\wasm\\for-build\\aot-in\\System.Private.CoreLib.dll with exit code -1073740791. [C:\\helix\\work\\workitem\\e\\publish\\ProxyProjectForAOTOnHelix.proj]\nC:\\helix\\work\\correlation\\build\\wasm-shared\\WasmApp.Common.targets(672,5): error : Mono Ahead of Time compiler - compiling assembly C:\\helix\\work\\workitem\\e\\wasm_build\\obj\\wasm\\for-build\\aot-in\\System.Private.CoreLib.dll [C:\\helix\\work\\workitem\\e\\publish\\ProxyProjectForAOTOnHelix.proj]\nC:\\helix\\work\\correlation\\build\\wasm-shared\\WasmApp.Common.targets(672,5): error : Could not allocate 163840 bytes [C:\\helix\\work\\workitem\\e\\publish\\ProxyProjectForAOTOnHelix.proj]\n  [25/47] System.Private.Xml.Linq.dll -\u003e System.Private.Xml.Linq.dll.bc\n```\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=1134807\r\n**Error message validated:** `[WasmApp.Common.targets error : Could not allocate`]\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 8/29/2025 1:28:18 PM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n\r\n|Build|Definition|Test|Pull Request|\r\n|---|---|---|---|\r\n|[1150838](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150838)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Intrinsics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150838\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31791224\u0026resultId=109495)|dotnet/runtime#119662|\r\n|[1150815](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150815)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Intrinsics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150815\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31790140\u0026resultId=109493)|dotnet/runtime#115766|\r\n|[1143398](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143398)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Intrinsics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143398\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31529104\u0026resultId=109493)|dotnet/runtime#119493|\r\n|[1142935](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142935)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Intrinsics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142935\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31511358\u0026resultId=100001)|dotnet/runtime#119255|\r\n|[1134807](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1134807)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Intrinsics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1134807\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31234936\u0026resultId=109493)||\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|2|5|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOwPGJVw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc7A8YlX",
                                           "createdAt":  "2025-08-29T13:31:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-08-29T13:31:43Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "[wasm][AOT] error : Could not allocate XXX bytes",
        "labels":  [
                       "arch-wasm",
                       "area-Codegen-AOT-mono",
                       "Known Build Error",
                       "os-browser"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/119299",
        "createdAt":  "2025-09-03T08:54:29Z",
        "number":  119299,
        "author":  "pavelsavara",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T03:04:28Z",
        "body":  "[Log](https://helixr1107v0xdcypoyl9e7f.blob.core.windows.net/dotnet-runtime-refs-pull-119253-merge-938304e2fc7145fe81/Invariant.Tests/1/console.293ca2be.log?helixlogtype=result\u0026skoid=8eda00af-b5ec-4be9-b69b-0919a2338892\u0026sktid=72f988bf-86f1-41af-91ab-2d7cd011db47\u0026skt=2025-09-03T08%3A48%3A21Z\u0026ske=2025-09-03T09%3A48%3A21Z\u0026sks=b\u0026skv=2024-11-04\u0026sv=2024-11-04\u0026se=2025-09-03T09%3A48%3A21Z\u0026sr=b\u0026sp=rl\u0026sig=AwyGcDKvM7tKl%2BtuktyURwgTTbrblH0Y%2Bhy0Q6dF%2B9g%3D)\n```\n19:58:16] info: Error: failed to run main module `dotnet.wasm`\n[19:58:16] info: \n[19:58:16] info: Caused by:\n[19:58:16] info:     0: failed to invoke `run` function\n[19:58:16] info:     1: error while executing at wasm backtrace:\n[19:58:16] info:            0: 0x1816a90 - address_of_bucket\n[19:58:16] info:                            at /__w/1/s/src/native/containers/dn-simdhash-specialization.h:167:31              - dn_simdhash_string_ptr_find_value_internal\n[19:58:16] info:                            at /__w/1/s/src/native/containers/dn-simdhash-specialization.h:295:2              - dn_simdhash_string_ptr_try_get_value_with_hash_raw\n[19:58:16] info:                            at /__w/1/s/src/native/containers/dn-simdhash-specialization.h:497:35\n[19:58:16] info:            1: 0x1816a4b - dn_simdhash_string_ptr_try_get_value_raw\n[19:58:16] info:                            at /__w/1/s/src/native/containers/dn-simdhash-specialization.h:489:9\n[19:58:16] info:            2: 0x1816e64 - dn_simdhash_string_ptr_try_get_value\n[19:58:16] info:                            at /__w/1/s/src/native/containers/dn-simdhash-string-ptr.c:73:9\n[19:58:16] info:            3: 0x17337a4 - mono_class_from_name_checked_aux\n[19:58:16] info:                            at /__w/1/s/src/mono/mono/metadata/class.c:3420:7\n[19:58:16] info:            4: 0x1732c70 - mono_class_from_name_checked\n[19:58:16] info:                            at /__w/1/s/src/mono/mono/metadata/class.c:3535:10\n[19:58:16] info:            5: 0x1732b85 - mono_class_load_from_name\n[19:58:16] info:                            at /__w/1/s/src/mono/mono/metadata/class.c:3584:10\n[19:58:16] info:            6: 0x17d83a7 - mono_class_get_assembly_load_context_class\n[19:58:16] info:                            at /__w/1/s/src/mono/mono/metadata/assembly-load-context.c:16:1              - mono_alc_invoke_resolve_using_resolving_event\n[19:58:16] info:                            at /__w/1/s/src/mono/mono/metadata/assembly-load-context.c:548:27              - mono_alc_invoke_resolve_using_resolving_event_nofail\n[19:58:16] info:                            at /__w/1/s/src/mono/mono/metadata/assembly-load-context.c:569:11\n[19:58:16] info:            7: 0x172f6f6 - netcore_load_reference\n[19:58:16] info:                            at /__w/1/s/src/mono/mono/metadata/assembly.c:850:14              - mono_assembly_request_byname\n[19:58:16] info:                            at /__w/1/s/src/mono/mono/metadata/assembly.c:2786:11\n[19:58:16] info:            8: 0x17fa5bc - load_image\n[19:58:16] info:                            at /__w/1/s/src/mono/mono/mini/aot-runtime.c:326:14\n[19:58:16] info:            9: 0x17f93e7 - load_aot_module\n[19:58:16] info:                            at /__w/1/s/src/mono/mono/mini/aot-runtime.c:2398:4\n[19:58:16] info:           10: 0x173014f - mono_assembly_invoke_load_hook_internal\n[19:58:16] info:                            at /__w/1/s/src/mono/mono/metadata/assembly.c:1080:4\n[19:58:16] info:           11: 0x1730b70 - mono_assembly_request_load_from\n[19:58:16] info:                            at /__w/1/s/src/mono/mono/metadata/assembly.c:2020:2\n[19:58:16] info:           12: 0x172fea9 - mono_assembly_request_open\n[19:58:16] info:                            at /__w/1/s/src/mono/mono/metadata/assembly.c:1625:8\n[19:58:16] info:           13: 0x1731bfa - load_in_path\n[19:58:16] info:                            at /__w/1/s/src/mono/mono/metadata/assembly.c:340:12              - mono_assembly_load_corlib\n[19:58:16] info:                            at /__w/1/s/src/mono/mono/metadata/assembly.c:2694:13\n[19:58:16] info:           14: 0x1728b29 - mono_init_internal\n[19:58:16] info:                            at /__w/1/s/src/mono/mono/metadata/domain.c:150:20              - mono_init\n[19:58:16] info:                            at /__w/1/s/src/mono/mono/metadata/domain.c:317:9\n[19:58:16] info:           15: 0x17ef659 - mini_init\n[19:58:16] info:                            at /__w/1/s/src/mono/mono/mini/mini-runtime.c:4841:11\n[19:58:16] info:           16: 0x17f76d6 - mono_jit_init_version\n[19:58:16] info:                            at /__w/1/s/src/mono/mono/mini/driver.c:2720:20\n[19:58:16] info:           17: 0x4c709 - mono_wasm_load_runtime_common\n[19:58:16] info:                            at /root/helix/work/correlation/build/microsoft.netcore.app.runtime.wasi-wasm/runtimes/wasi-wasm/native/src/runtime.c:342:11\n[19:58:16] info:           18: 0x4bcf8 - mono_wasm_load_runtime\n[19:58:16] info:                            at /root/helix/work/correlation/build/microsoft.netcore.app.runtime.wasi-wasm/runtimes/wasi-wasm/native/src/driver.c:277:16\n[19:58:16] info:           19: 0x4f272 - initialize_runtime\n[19:58:16] info:                            at /root/helix/work/correlation/build/microsoft.netcore.app.runtime.wasi-wasm/runtimes/wasi-wasm/native/src/main.c:56:2\n[19:58:16] info:           20: 0x4f2fc - __main_argc_argv\n[19:58:16] info:                            at /root/helix/work/correlation/build/microsoft.netcore.app.runtime.wasi-wasm/runtimes/wasi-wasm/native/src/main.c:74:19\n[19:58:16] info:           21: 0x1827069 - dotnet.wasm!__main_void\n[19:58:16] info:           22: 0x4b534 - _start\n[19:58:16] info:                            at wasisdk://v25.0/build/sysroot/wasi-libc-wasm32-wasip2/libc-bottom-half/crt/crt1-command.c:43:13\n[19:58:16] info:           23: 0x2cc0a83 - wit-component:adapter:wasi_snapshot_preview1!wasi:cli/run@0.2.0#run\n[19:58:16] info:     2: memory fault at wasm address 0x7568633c in linear memory of size 0x3200000\n[19:58:16] info:     3: wasm trap: out of bounds memory access\n[19:58:16] info: Process wasmtime exited with 134\n```\n\n## Build Information\nBuild: https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137474\nBuild error leg or test failing: WASI AOT\n\u003c!-- Error message template  --\u003e\n## Error Message\n\n\n```json\n{\n  \"ErrorMessage\": [\"memory fault at wasm address\"],\n  \"BuildRetry\": false,\n  \"ExcludeConsoleLog\": false\n}\n```\n\n\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137474\r\n**Error message validated:** `[memory fault at wasm address`]\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 9/3/2025 8:55:17 AM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n\r\n|Build|Definition|Test|Pull Request|\r\n|---|---|---|---|\r\n|[1151627](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151627)|dotnet/runtime|[Invariant.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151627\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31813934\u0026resultId=100001)||\r\n|[1151114](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151114)|dotnet/runtime|[Invariant.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151114\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31799040\u0026resultId=100001)||\r\n|[1137474](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137474)|dotnet/runtime|[System.Collections.Specialized.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137474\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31322210\u0026resultId=100004)|dotnet/runtime#119253|\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|2|3|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOwZ1Lsg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc7BnUuy",
                                           "createdAt":  "2025-09-03T08:54:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-09-03T08:54:41Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "[WASI][AOT] memory fault at wasm address 0x6c6f7314 in linear memory of size 0x3200000",
        "labels":  [
                       "arch-wasm",
                       "area-Codegen-AOT-mono",
                       "Known Build Error",
                       "os-wasi"
                   ]
    }
]
