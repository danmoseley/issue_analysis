[
    {
        "url":  "https://github.com/dotnet/runtime/issues/31180",
        "createdAt":  "2019-10-16T06:50:55Z",
        "number":  31180,
        "author":  "Daniel15",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC7TT4g==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "dhcgn",
                                            "createdAt":  "2020-04-13T18:44:03Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "mikebm94",
                                            "createdAt":  "2020-06-27T15:35:15Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Veverke",
                                            "createdAt":  "2020-11-09T10:08:52Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "arthq2",
                                            "createdAt":  "2021-07-07T17:45:59Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Planet-Patrick",
                                            "createdAt":  "2022-12-05T05:51:25Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "olfek",
                                            "createdAt":  "2023-01-09T11:45:13Z"
                                        },
                                        {
                                            "content":  "EYES",
                                            "user":  "olfek",
                                            "createdAt":  "2023-01-09T11:45:20Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "albi005",
                                            "createdAt":  "2023-03-08T18:22:44Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "chillaxdev",
                                            "createdAt":  "2024-05-20T21:29:34Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Anatoly03",
                                            "createdAt":  "2024-09-25T11:20:29Z"
                                        }
                                    ],
                          "totalCount":  10
                      },
        "updatedAt":  "2024-01-26T07:10:16Z",
        "body":  "Trying to publish a project for `linux-x86` fails:\r\n```\r\nλ dotnet publish -c Release -o --self-contained --runtime linux-x86\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(87,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier \u0027linux-x86\u0027. [C:\\src\\test\\Test.Worker.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(87,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier \u0027linux-x86\u0027. [C:\\src\\test\\Test.Worker.csproj]\r\n```\r\n\r\n`linux-x64` works fine though.\r\n\r\nCan `--self-contained` not be used for 32-bit Linux builds?",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOcfCHVw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0Mjg3MTUyMQ==",
                                           "createdAt":  "2019-10-16T20:11:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wfurt",
                                           "body":  "There are no official builds for Linux x86. https://github.com/dotnet/core-sdk\r\nYou would have to build it your self. \r\n\r\ncc: @richlander ",
                                           "updatedAt":  "2019-10-16T20:11:19Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0Mjg3MzU2MA==",
                                           "createdAt":  "2019-10-16T20:16:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODifqCw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "motoko89",
                                                                               "createdAt":  "2020-04-13T20:30:40Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "atauenis",
                                                                               "createdAt":  "2020-04-27T08:52:13Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Type1JGB",
                                                                               "createdAt":  "2020-06-16T12:55:31Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "mikebm94",
                                                                               "createdAt":  "2020-06-27T15:35:10Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Veverke",
                                                                               "createdAt":  "2020-11-09T10:08:34Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jswolf19",
                                                                               "createdAt":  "2020-11-18T04:32:36Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "arthq2",
                                                                               "createdAt":  "2021-07-07T17:46:14Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "miegir",
                                                                               "createdAt":  "2021-11-30T16:19:10Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "defyjoy",
                                                                               "createdAt":  "2022-03-09T15:40:29Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "BrunoJuchli",
                                                                               "createdAt":  "2022-03-14T11:32:51Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Planet-Patrick",
                                                                               "createdAt":  "2022-11-25T07:25:44Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "olfek",
                                                                               "createdAt":  "2023-01-09T11:45:36Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "truboxl",
                                                                               "createdAt":  "2023-04-28T08:13:32Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Rafouf69",
                                                                               "createdAt":  "2024-05-03T11:44:10Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "chillaxdev",
                                                                               "createdAt":  "2024-05-20T21:29:55Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  15
                                                         },
                                           "author":  "Daniel15",
                                           "body":  "The docs at https://docs.microsoft.com/en-us/dotnet/core/rid-catalog say:\r\n\r\n\u003e You can see the list of supported RIDs and the RID graph in the runtime.json file, which is located at the CoreFX repo.\r\n\r\nThe runtime.json file does have a `linux-x86` RID listed. Is this documentation incorrect?\r\n\r\nWhy is there an x86 build for Windows but not Linux? I\u0027ve got a few VPSes with very limited RAM (128 MB) which I\u0027d like to run .NET Core apps on. With such a small amount of RAM there\u0027s not really any benefits of 64-bit over 32-bit.",
                                           "updatedAt":  "2019-10-16T20:16:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc47fskf",
                                           "createdAt":  "2021-12-20T18:20:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "robertobecchiniWR",
                                           "body":  "\u003e \r\n\r\nI\u0027m trying to cross-build the runtime using an Ubuntu 18.04 x86-64 for a linux-x86 system. I do receive also this error.\r\nSo apparently I need to rebuild also the SDK (https://github.com/dotnet/installer/tree/v6.0.100) so thatthe RID linux-x86 is available. How do I do this in practice? The instructions at README at installer repository don\u0027t help  at all.\r\nCan some of you here shed some light?",
                                           "updatedAt":  "2021-12-20T18:20:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc47fs-k",
                                           "createdAt":  "2021-12-20T18:22:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "robertobecchiniWR",
                                           "body":  "\u003e There are no official builds for Linux x86. https://github.com/dotnet/core-sdk You would have to build it your self.\r\n\u003e \r\n\u003e cc: @richlander\r\n\r\nReferring to this. How? what parameters to the build scripts? Following the README took me nowhere",
                                           "updatedAt":  "2021-12-20T18:22:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4753oq",
                                           "createdAt":  "2022-01-04T17:31:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "\u003e the runtime.json file does have a linux-x86 RID listed. Is this documentation incorrect?\r\n\r\nThere are many RIDs which are present in the graph which are not built by Microsoft.  Some are built by the community or other parties.  The list of RIDs which the SDK supports for self-contained apps is stored here: https://github.com/dotnet/installer/blob/8b9782a074c51ef9f8b8b0608870c23ed77df7f5/src/redist/targets/GenerateBundledVersions.targets#L181-L192\r\n\r\n@dsplaisted might be able to comment if there\u0027s a good place where this is documented.\r\n\r\nMoving this to area-Infrastructure as it has become a question of building the product.\r\n\r\n\r\n\r\n",
                                           "updatedAt":  "2022-01-04T17:31:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4753qx",
                                           "createdAt":  "2022-01-04T17:31:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nTrying to publish a project for `linux-x86` fails:\r\n```\r\nλ dotnet publish -c Release -o --self-contained --runtime linux-x86\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(87,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier \u0027linux-x86\u0027. [C:\\src\\test\\Test.Worker.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(87,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier \u0027linux-x86\u0027. [C:\\src\\test\\Test.Worker.csproj]\r\n```\r\n\r\n`linux-x64` works fine though.\r\n\r\nCan `--self-contained` not be used for 32-bit Linux builds?\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eDaniel15\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`question`, `arch-x86`, `os-linux`, `area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003eFuture\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-01-04T17:31:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc476h0r",
                                           "createdAt":  "2022-01-04T21:54:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "I would imagine that you\u0027d want to build dotnet/runtime for linux-x86 release, the output you\u0027d be interested in is the runtime-pack.  Then you could tell the SDK to use this when publishing your self-contained app.  Given we don\u0027t officially support this, there is no guarantee it would work.  It looks like https://github.com/dotnet/runtime/issues/7335 tracks an effort to build the product for x86.\r\n",
                                           "updatedAt":  "2022-01-04T21:54:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc48A87B",
                                           "createdAt":  "2022-01-06T19:42:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "weltkante",
                                           "body":  "Considering you get this very error when you cross-compile an x86 build I don\u0027t think you can use this approach to produce a runtime-pack (see last note in the issue you linked, and I just verified it still is regressed and produces this error).\r\n\r\nNote that cross compiling x86 on an x64 host is the only way to produce x86 binaries, since you cannot compile the dotnet runtime on an x86 host (the build process needs more memory than an x86 host can manage)\r\n\r\nI\u0027ve managed to cross compile in the past with an earlier version, before the cross compilation regressed, but even then I never managed to convince the SDK to actually use the produced artifacts; and building the SDK itself for x86 is impossible (for me), the build scripts are too poorly managed/documented.",
                                           "updatedAt":  "2022-01-06T19:44:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc48mqSQ",
                                           "createdAt":  "2022-01-19T18:52:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "avlec",
                                           "body":  "Having this same issue when trying to publish an application, but instead to a ARM target with softfpu, requiring linux-armel, doing this with the below command on .NET 6.0.101 on VS2022. Is there any guide on how to build the SDK and inform dotnet of its existence so the below works?\r\n`dotnet publish -r linux-armel --self-contained -p:PublishSingleFile=true -p:PublishTrimmed=true`",
                                           "updatedAt":  "2022-01-19T18:52:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5x06Og",
                                           "createdAt":  "2024-01-25T09:00:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Adinihal",
                                           "body":  "I am also having this same issue when trying to run a 32bit .net application in Linux I am getting the error as\r\n![image](https://github.com/dotnet/runtime/assets/48099440/e146a47d-1a44-444d-8118-84620b8475f2)\r\nby using **`dotnet run`** command \r\nby using **`dotnet run -c Debug -r linux-x86`**  command I am getting this below error \r\n![image](https://github.com/dotnet/runtime/assets/48099440/e49b3a53-2194-4ddf-9152-e90e69d5c285)\r\n\r\nas per the above answer There are no official builds for Linux x86 so is there any way to resolve this error .  \r\n\r\n",
                                           "updatedAt":  "2024-01-25T09:00:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5x1EO9",
                                           "createdAt":  "2024-01-25T09:25:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "weltkante",
                                           "body":  "\u003e I am also having this same issue when trying to run a 32bit .net application in Linux I am getting the error as\r\n\r\nas you noted Microsoft does not provide official builds for Linux x86, so how did you get that SDK/runtime? did you compile it yourself? are you trying to cross-compile on a 64 bit machine? this is known to not work since there are no official builds of the platform specific packages for x86 on nuget, you\u0027d have to make your own\r\n\r\nmaybe add some information about what you\u0027re doing, but the most likely response will be \"you are on your own, this can be made working but is not officially supported\"\r\n\r\nPS: I got compiling the runtime to work years ago, see the [linked issue](https://github.com/dotnet/runtime/issues/7335) from earlier, but never got the SDK to build for x86 out of the box, so as far as I can tell its only possible if you put lots of effort into it to customize/fix the build scripts\r\n\r\n[edit] it looks like someone on [the other issue](https://github.com/dotnet/runtime/issues/7335#issuecomment-1099573662) got the SDK to build for earlier versions of .NET Core after all, so thats probably what you are looking for if you\u0027re trying to get this working yourself",
                                           "updatedAt":  "2024-01-25T09:36:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5x8IdX",
                                           "createdAt":  "2024-01-26T07:10:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODvJoRw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "filipnavara",
                                                                               "createdAt":  "2024-08-21T20:30:01Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "dkurt",
                                           "body":  "Have same problem with missed RID on 9.0 (upstream branch): `error NETSDK1084: There is no application host available for the specified RuntimeIdentifier \u0027linux-riscv64\u0027`. However I were able to [build](https://github.com/dkurt/dotnet_riscv/blob/main/.github/workflows/main.yaml) entire SDK for riscv64 with the same build commands on 8.0.1 tag.",
                                           "updatedAt":  "2024-01-26T07:10:15Z"
                                       }
                                   ],
                         "totalCount":  12
                     },
        "title":  "error NETSDK1084: There is no application host available for the specified RuntimeIdentifier \u0027linux-x86\u0027",
        "labels":  [
                       "question",
                       "arch-x86",
                       "os-linux",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/31446",
        "createdAt":  "2019-11-08T21:41:36Z",
        "number":  31446,
        "author":  "jnm2",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-05-10T09:59:28Z",
        "body":  "`build.cmd` fails with:\r\n\r\n\u003e EXEC : error : DIA SDK is missing at \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\DIA SDK\". Make sure you selected the correct dependencies when installing Visual Studio. [C:\\Users\\Joseph\\Source\\Repos\\corefx\\src\\Native\\build-native.proj]\r\n\u003e   Visual Studio Express does not include the DIA SDK. You need Visual Studio 2017 or 2019 (Community is free).\r\n\u003e   See: https://github.com/dotnet/corefx/blob/master/Documentation/building/windows-instructions.md#required-software\r\n\r\nI don\u0027t want my preview install to be as heavy as my stable install. Everything corefx needs is installed in VS 16.3.8.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOQuMkBg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1Nzc4NjY1NQ==",
                                           "createdAt":  "2019-11-23T10:38:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "buybackoff",
                                           "body":  "Just run build.cmd from *Developer Command Prompt for VS 2019*.",
                                           "updatedAt":  "2019-11-23T10:38:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1NzgxODE1Mg==",
                                           "createdAt":  "2019-11-23T17:43:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jnm2",
                                           "body":  "That\u0027s good, should have thought of that. Can this hint be included in the failure message then?",
                                           "updatedAt":  "2019-11-23T17:43:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1ODU4ODkzOA==",
                                           "createdAt":  "2019-11-26T11:32:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "huoyaoyuan",
                                           "body":  "I have the exact situation with you that having a heavy stable and light preview.\r\nMoreover, VS Dev PS is not compatible with PS Core, and hard to integrate with Windows Terminal (requires hard-coding the installation uid in profile). If the integration is improved, the workaround should be fair enough.",
                                           "updatedAt":  "2019-11-26T11:32:35Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5OTExMDUwNA==",
                                           "createdAt":  "2020-03-14T17:57:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "@ViktorHofer @jkoritzinsky is this issue still relevant in the runtime repo?",
                                           "updatedAt":  "2020-03-14T17:57:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2MTI2MzY2OA==",
                                           "createdAt":  "2020-07-20T18:38:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Yes this still applies to dotnet/runtime but not related to 5.0 so moving to Future.",
                                           "updatedAt":  "2020-07-20T18:38:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5C4yQG",
                                           "createdAt":  "2022-05-10T09:59:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n`build.cmd` fails with:\r\n\r\n\u003e EXEC : error : DIA SDK is missing at \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\DIA SDK\". Make sure you selected the correct dependencies when installing Visual Studio. [C:\\Users\\Joseph\\Source\\Repos\\corefx\\src\\Native\\build-native.proj]\r\n\u003e   Visual Studio Express does not include the DIA SDK. You need Visual Studio 2017 or 2019 (Community is free).\r\n\u003e   See: https://github.com/dotnet/corefx/blob/master/Documentation/building/windows-instructions.md#required-software\r\n\r\nI don\u0027t want my preview install to be as heavy as my stable install. Everything corefx needs is installed in VS 16.3.8.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ejnm2\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`up-for-grabs`, `area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003eFuture\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-05-10T09:59:27Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "Building should not prefer a preview VS installation that doesn\u0027t have all the required workloads",
        "labels":  [
                       "help wanted",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/33419",
        "createdAt":  "2020-03-10T12:23:34Z",
        "number":  33419,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-11-10T18:07:45Z",
        "body":  "We [agreed on](https://github.com/dotnet/runtime/pull/32833#discussion_r384214660) using the terms `BuildOS` for the build machine\u0027s OS and `TargetOS` for the target platform\u0027s OS. We should rename the existing `RuntimeOS` property to reflect that.\r\n\r\ncc @ericstj @jkotas ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOI5io7g==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5NzA2Mjc3MQ==",
                                           "createdAt":  "2020-03-10T12:36:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "stephentoub",
                                           "body":  "It\u0027s great that we\u0027re improving the build system. Every time we change something like this, though (and that\u0027s been happening a lot recently), devs need to unlearn the old thing and learn the new thing, fighting muscle memory, and usually after having build problems that they then need to figure out how to resolve. Can we put in place some guardrails, a timeline that indicates what we expect to change and when, and at what date we expect no further such changes for the foreseeable future? Again, I\u0027m not objecting to the changes / improving things, as that\u0027s important, but the incremental trickle is starting to wear me down ;-)",
                                           "updatedAt":  "2020-03-10T12:36:37Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5NzA3MTY5Ng==",
                                           "createdAt":  "2020-03-10T12:58:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e and that\u0027s been happening a lot recently\r\n\r\n... because we consolidated three repositories into one.\r\n\r\n\u003e need to figure out how to resolve\r\n\r\nI understand that the last months were rough in terms of productivity because of so many moving pieces but we can\u0027t stop making progress until the consolidation is done. \r\n\r\nI would say we are midway through but still need to tackle big rocks that will definitely cause more disruption to meet the goals defined here: https://github.com/dotnet/arcade/pull/4980. \r\n\r\nWe usually try to announce changes that disrupt the dev workflow via a pinned announcement issue and in addition to that via mail to the team. Let me know if you think we should consider other communication channels as well (ie Gitter).\r\n\r\n\r\n\r\n\u003e when, and at what date we expect no further such changes for the foreseeable future?\r\n\r\nWe always try to batch changes together that potentially cause disruption but when working on long-term goals (e.g. dotnet test), that\u0027s not always possible.\r\n\r\n\u003e Can we put in place some guardrails, a timeline that indicates what we expect to change and when, and at what date we expect no further such changes for the foreseeable future?\r\n\r\n\u003e Again, I\u0027m not objecting to the changes / improving things, as that\u0027s important, but the incremental trickle is starting to wear me down ;-)\r\n\r\nUnderstandable. cc @ericstj @jaredpar @danmosemsft",
                                           "updatedAt":  "2020-03-10T12:58:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5NzA5MzU1Mw==",
                                           "createdAt":  "2020-03-10T13:45:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "stephentoub",
                                           "body":  "\u003e because we consolidated three repositories into one.\r\n\u003e I would say we are midway through\r\n\r\nYes, in December.  It\u0027s now March.  And many of the changes being made are orthogonal to the repo consolidation.\r\n\r\nAgain, I\u0027m not criticizing the work or the quality of the work or even the timeline; it\u0027s a lot of change for a good end reason.  It just seems like every week for the past three months there\u0027s been at least one change that causes every dev on the team (that includes the whole community contributing to the repo) to need to re-learn something about their workflow.  Maybe I\u0027m misremembering or overstating, but I\u0027m so confused at this point.  Do I use /t:rebuildandtest or /t:buildandtest or /t:test, and what does that end up doing?  Do I use /p:TargetGroup or /p:TargetFramework or /p:TargetOS or /p:BuildOS or...?  I can\u0027t keep it straight, and it feels like every time I think I know it, it changes, which means I\u0027m frequently getting it wrong and then either slowing someone else down by asking them or trying to find an email or an issue or something that explains what the magic incantation is today.\r\n\r\nMy request is simply that we:\r\na) be thoughtful about the impact this has on folks.  In particular, think about the end-to-end holistically, and try to avoid changing something only to then change it again.\r\nb) outline all of the changes that we intend to make, and with an approximate timeline for when we intend to do so, as we\u0027d do in general with any large feature implementation plan.  Is there a checklist somewhere of all of these changes?  A project board showing everything that\u0027s been done, is being done, and will be done to consider the effort complete?  It\u0027s possible this all exists and I\u0027m just not aware of it (in which case I expect others aren\u0027t, either).\r\n\r\nThanks for all of your efforts.",
                                           "updatedAt":  "2020-03-10T13:49:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5NzEwODA5NQ==",
                                           "createdAt":  "2020-03-10T14:13:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e  be thoughtful about the impact this has on folks. In particular, think about the end-to-end holistically, and try to avoid changing something only to then change it again.\r\n\r\n👍 \r\n\r\n\u003e A project board showing everything that\u0027s been done, is being done, and will be done to consider the effort complete? It\u0027s possible this all exists and I\u0027m just not aware of it (in which case I expect others aren\u0027t, either).\r\n\r\nThese are the words were we track the work we are planning to do:\r\n- [Infrastructure Backlog General](https://github.com/dotnet/runtime/projects/26)\r\n- [Infrastructure Backlog Libraries](https://github.com/dotnet/runtime/projects/31)\r\n- [Infrastructure Backlog CoreClr](https://github.com/dotnet/runtime/projects/32)\r\n- [Infrastructure Backlog Installer](https://github.com/dotnet/runtime/projects/34)\r\n- [Infrastructure Backlog Mono](https://github.com/dotnet/runtime/projects/34)\r\n\r\n@jaredpar and I were chatting about having something like a changelog in which we list all the recent changes. The project boards helps with that but they tend to not work well with hundreds of items. We are tracking all our planned work as GH issues. We just recently created the boards but they should already provide an overview of what changes are currently being worked on. We are in the middle of triaging down the area-Infrastructure-libraries label which currently contains \u003e100 issues.\r\n\r\n\u003e outline all of the changes that we intend to make, and with an approximate timeline for when we intend to do so, as we\u0027d do in general with any large feature implementation plan\r\n\r\nETAs are hard because of conflicting priorities (releases, servicing) but I wouldn\u0027t be against working more agile, i.e. bi-weekly Sprints.\r\n\r\ncc @danmosemsft @ericstj ",
                                           "updatedAt":  "2020-03-10T14:13:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5NzE2MjcwMA==",
                                           "createdAt":  "2020-03-10T15:52:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOA9uljw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "stephentoub",
                                                                               "createdAt":  "2020-03-10T16:09:25Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "danmoseley",
                                                                               "createdAt":  "2020-03-10T16:09:30Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "jkotas",
                                           "body":  "@ViktorHofer @jaredpar Here are concrete suggestions for how to make things better:\r\n\r\n- *Batch the user facing changes together*: Schedule 1 week every 2 months where we flush the user facing changes and people will need to adjust the workflow. It avoids the constant trickle that is wearing everybody down. You can still do most of the work in the remaining time, but it may need a bit of glue to connect new and old way - this temporary glue can be flushed during that 1 week every 2 months. \r\n\r\n- *Good user facing names matter*: Have open discussion and agree about renaming and good names of public facing names *before* the change is made. For example, the original plan for the build OS property was not TargetOS. The new name was arrived upon only after I happened to look at the PR and pointed out the inconsistencies. Another example is `src\\coreclr\\build-runtime.cmd` script name that does not feel quite right - see https://github.com/dotnet/runtime/issues/32991#issuecomment-596796162 .\r\n\r\n- *Make sure that things constantly improve*: Avoid pushing our regressions just to promise that things will get better in future. For example, your recent change that added minutes to the build is regression, with no benefits, for 95+% of the team. This change should have been pushed out only after addressing the NuGet performance issues.",
                                           "updatedAt":  "2020-03-10T15:52:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5NzIwNzI3OA==",
                                           "createdAt":  "2020-03-10T17:16:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOA9vTfA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkotas",
                                                                               "createdAt":  "2020-03-10T17:37:30Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "I agree with comments above (including appreciating your continuing efforts @ViktorHofer which are undoubtedly making things better over the long run). The long term direction is good we just have to tune our tactics.\r\n\r\nOne thing that\u0027s changed of course is we have approx 3x more committers in the repo as any of the old repos had. That magnifies the impact of every change now - we have to balance continuing improvement with the huge multiplier of any impact. The staging and continuous improvement suggestions are good ones. ",
                                           "updatedAt":  "2020-03-10T17:16:27Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "Rename RuntimeOS to BuildOS",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/37436",
        "createdAt":  "2020-06-04T18:21:35Z",
        "number":  37436,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-09-27T15:26:33Z",
        "body":  "Currently, `installer.tests` is part of the `installer` subset: https://github.com/dotnet/runtime/blob/master/eng/Subsets.props#L64. We should consider removing it from the default subset to save time during restore and build (no need to restore test dependencies).\r\n\r\ncc @safern ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOZ5IQzQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzOTAyNDAxNQ==",
                                           "createdAt":  "2020-06-04T18:21:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @safern, @viktorhofer\nNotify danmosemsft if you want to be subscribed.",
                                           "updatedAt":  "2020-06-04T18:21:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0NTUzMTkyNA==",
                                           "createdAt":  "2020-12-15T19:58:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "NikolaMilosavljevic",
                                           "body":  "[Triage] @jkoritzinsky do you know if this is now possible after SharedFX refactoring and concurrent changes in subset infra?",
                                           "updatedAt":  "2020-12-15T19:58:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0NTUzMzYwNA==",
                                           "createdAt":  "2020-12-15T20:01:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "Yes this should now be possible.",
                                           "updatedAt":  "2020-12-15T20:01:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41UJwE",
                                           "createdAt":  "2021-08-06T19:31:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "NikolaMilosavljevic",
                                           "body":  "[Triage] @NikolaMilosavljevic can you verify that this is now working?",
                                           "updatedAt":  "2021-08-06T19:31:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5nkg0u",
                                           "createdAt":  "2023-09-27T15:26:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "NikolaMilosavljevic",
                                           "body":  "`host.tests` subset is included in default `host` subset. `host` subset doesn\u0027t build as part of `installer` subset, which was removed during one of previous subset refactorings and split into distinct `host` and `packs` subsets.\r\n\r\nUpdating area so this can be reevaluated.",
                                           "updatedAt":  "2023-09-27T15:26:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5nkhDN",
                                           "createdAt":  "2023-09-27T15:26:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nCurrently, `installer.tests` is part of the `installer` subset: https://github.com/dotnet/runtime/blob/master/eng/Subsets.props#L64. We should consider removing it from the default subset to save time during restore and build (no need to restore test dependencies).\r\n\r\ncc @safern \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003eNikolaMilosavljevic\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003eFuture\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-09-27T15:26:33Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "Stop building installer tests when specifying installer subset or none",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/38503",
        "createdAt":  "2020-06-28T14:33:52Z",
        "number":  38503,
        "author":  "teo-tsirpanis",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC4fW6g==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ViktorHofer",
                                            "createdAt":  "2024-06-09T10:27:32Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2022-03-04T19:44:12Z",
        "body":  "A leftover from the .NET Core 1.0 days, the [`System.Runtime.Loader`](https://nuget.org/packages/System.Runtime.Loader) NuGet package is especially dangerous (in addition to bloating the package dependency tree) because it \"gives\" the .NET Core-only `AssemblyLoadContext` class to .NET Standard libraries.\r\n\r\nDirectly using the package from an unsupported framework like the .NET Framework does not import any such type, but consider the (very realistic) scenario of having a .NET Framework or Xamarin app, importing a .NET Standard library and \"using\" `AssemblyLoadContext`. The app will crash, but most importantly, __the illusion that `AssemblyLoadContext` is supported in .NET Standard is maintained at compile-time__.\r\n\r\nEven first-party libraries have fallen into the trap, like `FSharp.Compiler.Service` and there are [other libraries](https://www.nuget.org/packages/Extreme.Numerics/7.0.12) that misuse the package even more by referencing it from .NET Core. And it has 55k downloads per day!\r\n\r\nBecause of this false compatibility with .NET Standard, I propose to unlist this package and [deprecate it](https://docs.microsoft.com/en-us/nuget/nuget-org/deprecate-packages), suggesting the .NET Standard consumers to retarget to .NET Core and the .NET Core ones to simply drop it.\r\n\r\nOf course if any other of these .NET Standard packages also falsely provides .NET Core-only features, it should get the same treatment.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOPyYg6A==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1NTE4NjUxNw==",
                                           "createdAt":  "2020-07-07T23:14:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @ViktorHofer\nNotify danmosemsft if you want to be subscribed.",
                                           "updatedAt":  "2020-07-07T23:14:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1NTU2MjkwMg==",
                                           "createdAt":  "2020-07-08T14:41:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "cc @ericstj ",
                                           "updatedAt":  "2020-07-08T14:41:32Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1NTkyNTIyNg==",
                                           "createdAt":  "2020-07-09T06:17:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "\u003e  importing a .NET Standard library and \"using\" AssemblyLoadContext. \r\n\r\nTo be clear, this is a library that never tested it\u0027s behavior on that platform which is dubious.  We reccomend that any netstandard library still test all the frameworks it supports.\r\n\r\nWe can consider deprecation of this package.  I\u0027m curious what deprecation does for transitive dependencies.  Would we break packages that are only netcore and depend on this?  //cc @nkolev92 \r\n\r\nI can\u0027t think of too many other packages in this boat, for most we built a version that throws PNSE when they aren\u0027t supported.",
                                           "updatedAt":  "2020-07-09T06:17:40Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1NjI0MzgyMw==",
                                           "createdAt":  "2020-07-09T17:04:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "nkolev92",
                                           "body":  "Deprecation has no affect on transitive libraries. \r\nCurrently the consumers get a warning in the Package Manager UI whenever they consume the package:https://docs.microsoft.com/en-us/nuget/nuget-org/deprecate-packages#client-experience-for-deprecated-packages",
                                           "updatedAt":  "2020-07-09T17:04:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_HVMQ",
                                           "createdAt":  "2022-03-04T06:53:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Smartisa",
                                           "body":  "What method can be used to automatically know whether this package supports the actual installed platform?",
                                           "updatedAt":  "2022-03-04T06:53:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_HZTh",
                                           "createdAt":  "2022-03-04T07:22:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCRbMrQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Smartisa",
                                                                               "createdAt":  "2022-03-04T10:17:33Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "teo-tsirpanis",
                                           "body":  "@Smartisa you could use `Type.GetType(\"System.Runtime.Loader.AssemblyLoadContext\") != null`, but that\u0027s not the best option since it uses reflection and is not compatible with AOT. If you target modern .NET, the answer to your question is always a \"yes\" and you shouldn\u0027t bother with this package at all.\r\n\r\n@ericstj, is there something that prevents this issue from moving forward? It\u0027s been open for more than a year.",
                                           "updatedAt":  "2022-03-04T07:22:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_H8le",
                                           "createdAt":  "2022-03-04T10:43:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Smartisa",
                                           "body":  "\u003e @Smartisa you could use `Type.GetType(\"System.Runtime.Loader.AssemblyLoadContext\") != null`, but that\u0027s not the best option since it uses reflection and is not compatible with AOT. If you target modern .NET, the answer to your question is always a \"yes\" and you shouldn\u0027t bother with this package at all.\r\n\u003e \r\n\u003e @ericstj, is there something that prevents this issue from moving forward? It\u0027s been open for more than a year.\r\n\r\nThanks for your answer. How can I automatically know whether any package is compatible with the actual installed platform? ",
                                           "updatedAt":  "2022-03-04T10:43:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_H9WU",
                                           "createdAt":  "2022-03-04T10:48:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "teo-tsirpanis",
                                           "body":  "In general, a NuGet package should work on all frameworks it targets. This package is an exception and you should avoid it using it in all cases. If you target modern .NET and you want to use `AssemblyLoadContext`, _you don\u0027t need this package, the type is already there_.\r\n\r\nIf you target .NET Standard, _this package is __lying__ to you_, and I strongly recommend you to target to .NET 6.",
                                           "updatedAt":  "2022-03-04T10:48:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_IA8L",
                                           "createdAt":  "2022-03-04T11:07:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Smartisa",
                                           "body":  "\u003e In general, a NuGet package should work on all frameworks it targets. This package is an exception and you should avoid it using it in all cases. If you target modern .NET and you want to use `AssemblyLoadContext`, _you don\u0027t need this package, the type is already there_.\r\n\u003e \r\n\u003e If you target .NET Standard, _this package is **lying** to you_, and I strongly recommend you to target to .NET 6.\r\n\r\nWe want to check the compatibility of any package with the actual installed platform, but we haven\u0027t found a practical method yet. Thanks for your help",
                                           "updatedAt":  "2022-03-04T11:07:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_JiDo",
                                           "createdAt":  "2022-03-04T19:44:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCRiz4w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Smartisa",
                                                                               "createdAt":  "2022-03-05T02:08:25Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ericstj",
                                           "body":  "\u003e @ericstj is there something that prevents this issue from moving forward? It\u0027s been open for more than a year.\r\n\r\nIt\u0027s not getting traction because it\u0027s not a blocking issue and it\u0027s assigned to future.  There\u0027s also uncertainty around the fallout of leveraging the deprecated feature for existing consumers.\r\n\r\nIt could be interesting a case for trying out deprecation.  All of the frameworks that actually needed it are now out of support so the only consumers of it today are getting the false promise of this API\u0027s availability on .NETStandard.   The risk here is that we somehow break a scenario for one of our consumers who didn\u0027t care about the lack of availability.\r\n\r\nWith respect to other questions about checking the compatibility of packages, https://docs.microsoft.com/en-us/dotnet/standard/analyzers/platform-compat-analyzer can help for newer packages that use it.  That doesn\u0027t help this scenario though, since the package is older than that feature.  That feature also doesn\u0027t represent framework gaps.   Our recommendation has always been to test on the concrete frameworks you want to support.\r\n\r\nThis package is really just a relic of 1.0 where support was expressed differently (matching ref/lib).  What this package did, at the time, would fail when restored on a framework that didn\u0027t resolve the lib, but later Nuget removed that failure and this package was left behind.  We would never build this package this way today, but it exists and we haven\u0027t had any precedent for removing or deprecating old packages (yet).\r\n\r\n@mkArtakMSFT is driving an un-listing effort in 7.0 -- perhaps we can deprecate this one as part of that effort.  cc @agocke whose team owns the API that was defined in this package.",
                                           "updatedAt":  "2022-03-04T19:44:12Z"
                                       }
                                   ],
                         "totalCount":  10
                     },
        "title":  "Proposal: Unlist and deprecate the System.Runtime.Loader NuGet package",
        "labels":  [
                       "packaging",
                       "discussion",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/38631",
        "createdAt":  "2020-06-30T17:42:45Z",
        "number":  38631,
        "author":  "xtqqczze",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-01-14T18:27:37Z",
        "body":  "*Follow-up to: #38549*\r\n\r\nWe should check markdown link definitions are valid. We could use \u003chttps://github.com/marketplace/actions/markdown-link-check\u003e action.\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOmmxBMg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1MTk0MzY2NA==",
                                           "createdAt":  "2020-06-30T17:42:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Dotnet-GitSync-Bot",
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2020-06-30T17:42:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1MTk0Mzg4MA==",
                                           "createdAt":  "2020-06-30T17:43:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @ViktorHofer\nNotify danmosemsft if you want to be subscribed.",
                                           "updatedAt":  "2020-06-30T17:43:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1MTk0NTUxNw==",
                                           "createdAt":  "2020-06-30T17:46:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "@jaredpar @ViktorHofer for thoughts.\r\n\r\nFWIW have rarely had noticeable issues creep into markdown. The main issues would be the occasional broken link. It would be nice to prevent that creeping in. We also don\u0027t want CI reliability to go backwards or use significant new resources. So in my mind, to have sufficient cost/benefit, a linter would have to be 100% reliable and fast.\r\n\r\nI suggest to try it, if someone offers the PR, and see how it goes (?)",
                                           "updatedAt":  "2020-06-30T17:52:53Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1ODcxNzU0NQ==",
                                           "createdAt":  "2020-07-15T11:37:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Sure no concerns from my side. Whoever wants to give it a try feel free to loop us in.",
                                           "updatedAt":  "2020-07-15T11:37:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6abEEy",
                                           "createdAt":  "2025-01-14T18:22:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "xtqqczze",
                                           "body":  "@dotnet-policy-service keep open",
                                           "updatedAt":  "2025-01-14T18:22:13Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Add Github action to check markdown links",
        "labels":  [
                       "documentation",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/38929",
        "createdAt":  "2020-07-08T13:43:31Z",
        "number":  38929,
        "author":  "directhex",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-08-06T16:59:50Z",
        "body":  "\r\n### Description\r\n\r\nThis works:\r\n`build.cmd -ci -arch x86 -os Windows_NT -c release -runtimeConfiguration debug /p:a=a`\r\n\r\nThis fails:\r\n\r\n`build.cmd -ci -arch x86 -os Windows_NT -c release -runtimeConfiguration debug /p:a=a /p:b=b /p:c=c` with:\r\n```\r\nC:\\Users\\joshield\\Source\\Repos\\runtime\\eng\\SubsetValidation.targets(39,5): error : Subset not recognized: /p:b=b [C:\\Users\\joshield\\Source\\Repos\\runtime\\Build.proj]\r\n```\r\n\r\nBecause the second property (and only the second one) has been turned into a subset:\r\n\r\n```\r\nC:\\Users\\joshield\\Source\\Repos\\runtime\\.dotnet\\sdk\\5.0.100-preview.6.20310.4\\MSBuild.dll /nologo -maxcpucount /m -verbosity:m /v:minimal /bl:C:\\Users\\joshield\\Source\\Repos\\runtime\\artifacts\\log\\Release\\Build.binlog /clp:Summary /logger:C:\\Users\\joshield\\Source\\Repos\\runtime\\.packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.20316.1\\tools\\netcoreapp2.1\\Microsoft.DotNet.Arcade.Sdk.dll /nr:False /p:ContinuousIntegrationBuild=True /p:TreatWarningsAsErrors=true /p:Configuration=Release /p:RepoRoot=C:\\Users\\joshield\\Source\\Repos\\runtime /p:Restore=True /p:DeployDeps=False /p:Build=True /p:Rebuild=False /p:Deploy=False /p:Test=False /p:Pack=False /p:IntegrationTest=False /p:PerformanceTest=False /p:Sign=False /p:Publish=False /p:TargetArchitecture=x86 /p:TargetOS=Windows_NT /p:RuntimeConfiguration=Debug /p:subset=/p:b=b /p:a=a /p:c=c /warnaserror C:\\Users\\joshield\\Source\\Repos\\runtime\\.packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.20316.1\\tools\\Build.proj\r\n```\r\n\r\n### Configuration\r\n\r\ngit master on Windows\r\n\r\n### Workaround\r\n\r\nThis issue appears related to the use of `[Parameter(Position=0)]` in the argument processing in build.ps` - removing it resolves the issue (but will obviously break the behaviour where \u0027-subset\u0027 can be omitted if the subset is given as the first argument)",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOJxLe_Q==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1NTUyOTAwNw==",
                                           "createdAt":  "2020-07-08T13:43:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Dotnet-GitSync-Bot",
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2020-07-08T13:43:36Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1NTUzMTE2Mw==",
                                           "createdAt":  "2020-07-08T13:47:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @ViktorHofer\nNotify danmosemsft if you want to be subscribed.",
                                           "updatedAt":  "2020-07-08T13:47:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1NTU0ODE1Nw==",
                                           "createdAt":  "2020-07-08T14:16:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Another workaround would be to specify the subsets, i.e.\r\n\r\n`build.cmd -ci -arch x86 -os Windows_NT -c release -runtimeConfiguration debug libs+mono+installer /p:a=a /p:b=b /p:c=c`",
                                           "updatedAt":  "2020-07-08T14:16:35Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "build.ps1 argument processing breaks on multiple `/p:` properties",
        "labels":  [
                       "os-windows",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/39274",
        "createdAt":  "2020-07-14T15:07:21Z",
        "number":  39274,
        "author":  "marek-safar",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-08-09T15:32:03Z",
        "body":  "Newly added trimming libraries tests run only for configurations which are not by default trimmed aggressively. All the ones which are and are used to customers are missing so we have no test coverage.\r\n\r\nMandatory RIDs to be added to the existing matrix\r\n- browser-wasm\r\n- ios-arm64\r\n- tvos-arm64\r\n- android-arm64",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOYVPGDA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1ODIzNTE1NQ==",
                                           "createdAt":  "2020-07-14T15:07:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Dotnet-GitSync-Bot",
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2020-07-14T15:07:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1ODIzNTYwNw==",
                                           "createdAt":  "2020-07-14T15:08:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @safern, @viktorhofer\nNotify danmosemsft if you want to be subscribed.",
                                           "updatedAt":  "2020-07-14T15:08:11Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1ODI4MjM5NQ==",
                                           "createdAt":  "2020-07-14T16:32:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "Cc: @joperezr ",
                                           "updatedAt":  "2020-07-14T16:32:26Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1ODM5NjgyOA==",
                                           "createdAt":  "2020-07-14T20:29:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "joperezr",
                                           "body":  "Although we do plan to enable a few extra platforms, with the trimming tests we are manually changing the way we invoke the linker in order to force aggressive trimming so we do have coverage for now. That said, I do want to restate that we do plan to add at least wasm platform as well",
                                           "updatedAt":  "2020-07-14T20:29:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1ODQwMTI2NQ==",
                                           "createdAt":  "2020-07-14T20:39:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "@joperezr could you add the right milestone on when you\u0027re going to be adding these? At least browser seems important for 5.0.0",
                                           "updatedAt":  "2020-07-14T20:39:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY1ODQyOTg0Mg==",
                                           "createdAt":  "2020-07-14T21:46:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "joperezr",
                                           "body":  "yup, wasm will be done before 5.0 definitely.",
                                           "updatedAt":  "2020-07-14T21:46:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4MTAyNjc2Mg==",
                                           "createdAt":  "2020-08-26T17:43:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@joperezr it\u0027s unclear to me what the remaining work is. Is someone actively working on this? Thanks ",
                                           "updatedAt":  "2020-08-26T17:43:55Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4MTA0MDYxMg==",
                                           "createdAt":  "2020-08-26T18:11:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "joperezr",
                                           "body":  "We still haven\u0027t added a wasm leg for the linker tests, today we only have these 3:\r\n\r\nhttps://github.com/dotnet/runtime/blob/afa4b2f344192c3609dd3c1419f68d99d10d7d62/eng/pipelines/runtime-linker-tests.yml#L61-L64\r\n\r\nIdeally we would want to add wasm in there as well to build that vertical and run linker tests for that runtime, so that would be the remaining work. @eerhardt do we still want to do that for 5.0?",
                                           "updatedAt":  "2020-08-26T18:11:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4MTA3ODIyOA==",
                                           "createdAt":  "2020-08-26T19:27:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "\u003e Ideally we would want to add wasm in there as well to build that vertical and run linker tests for that runtime, so that would be the remaining work. @eerhardt do we still want to do that for 5.0?\r\n\r\nIt would be good to get the wasm leg in, but I don\u0027t think it is required for 5.0 at this point. It can be done early in 6.0.",
                                           "updatedAt":  "2020-08-26T19:27:26Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0Nzc4MDE4OQ==",
                                           "createdAt":  "2020-12-17T23:59:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Added to story https://github.com/dotnet/runtime/issues/43078 ",
                                           "updatedAt":  "2020-12-17T23:59:22Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1NjY1OTA2Nw==",
                                           "createdAt":  "2021-01-08T09:47:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "marek-safar",
                                           "body":  "I think this is ready from our side. Running the linker against listed RIDs should be possible a long time ago and we now have AndroidAppBuilderTask, AppleAppBuilderTask and WasmBuildApp to produce the executable and Helix integration to run it.",
                                           "updatedAt":  "2021-01-08T09:47:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NjkyODY2OQ==",
                                           "createdAt":  "2021-01-25T16:14:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "@eerhardt could you summarize the current thinking here -- I believe you talked to @marek-safar -- what are the right next actions here do you see?",
                                           "updatedAt":  "2021-01-25T16:14:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NjkzNDAzMg==",
                                           "createdAt":  "2021-01-25T16:22:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "We will start off by adding a wasm leg, and then ios and android legs to the trimming tests.",
                                           "updatedAt":  "2021-01-25T16:22:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2Njk0NTk3NA==",
                                           "createdAt":  "2021-01-25T16:39:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBdxQ3w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "joperezr",
                                                                               "createdAt":  "2021-01-26T18:45:34Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "sounds good. To summarize my understanding,\r\n* we don\u0027t need Xamarin/Blazor libraries/templates/SDK support here; that kind of testing has to happen upstack, both functionally, and size (latter in perf repo)\r\n* we need to publish for their RIDs as that swaps in different implementations of our libraries in some cases\r\n* the tests verify that (a) there are no linker errors/warnings (b) libraries functionality doesn\u0027t break under trimming \r\n* we write these tests to focus on particular \"tricky\" API we have annotated -- eg., where there is serialization - to ensure our annotations remain good",
                                           "updatedAt":  "2021-01-25T16:39:50Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NzE5Njk0MQ==",
                                           "createdAt":  "2021-01-26T00:19:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "That summary looks good except:\r\n\r\n\u003e the tests verify that (a) there are no linker errors/warnings (b) libraries functionality doesn\u0027t break under trimming\r\n\r\nTechnically (a) happens during the build, and not during the tests. The tests verify \"(b) libraries functionality doesn\u0027t break under trimming\".",
                                           "updatedAt":  "2021-01-26T00:19:36Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NzI3NDE0Ng==",
                                           "createdAt":  "2021-01-26T03:35:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Ah, saw warningsaserrors on the test project build and assumed it was for that purpose. Fine!",
                                           "updatedAt":  "2021-01-26T03:35:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41DDaP",
                                           "createdAt":  "2021-07-30T16:06:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "Moving to 7.0. We added a browser-wasm leg, which covers the basic mono scenarios. We should enable android and ios in 7.0.",
                                           "updatedAt":  "2021-07-30T16:06:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc49aTlb",
                                           "createdAt":  "2022-02-04T19:58:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCNMMCQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "eerhardt",
                                                                               "createdAt":  "2022-02-04T20:00:12Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "steveisok",
                                           "body":  "This is something my team can help out on.  These tests seem similar to our functional tests and I don\u0027t think would take too much effort to enable.",
                                           "updatedAt":  "2022-02-04T19:58:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GH27U",
                                           "createdAt":  "2022-07-06T17:02:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "carlossanlop",
                                           "body":  "@joperezr @steveisok should we move this to 8.0?",
                                           "updatedAt":  "2022-07-06T17:02:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GJQmb",
                                           "createdAt":  "2022-07-06T22:50:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "joperezr",
                                           "body":  "I\u0027ll defer to @steveisok on this. Ideally we would want to have these tests running on all different runtimes that we cross-target, but the most important thing here is to decide when do we want to do that work.",
                                           "updatedAt":  "2022-07-06T22:50:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5G9g9L",
                                           "createdAt":  "2022-07-20T17:03:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "ping @steveisok for the above question",
                                           "updatedAt":  "2022-07-20T17:03:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5G9sbT",
                                           "createdAt":  "2022-07-20T17:49:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCoHQaA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2022-07-20T17:57:05Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "carlossanlop",
                                                                               "createdAt":  "2022-07-22T18:20:08Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "steveisok",
                                           "body":  "Let\u0027s leave it in 7.  I could end up being wrong, but I believe the work is hooking up to our mobile testing targets the same way the functional tests (src/tests/FunctionalTests) do. If I\u0027m correct, then I think it\u0027s less than a few days of work at worst.",
                                           "updatedAt":  "2022-07-20T17:49:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5IjE0R",
                                           "createdAt":  "2022-08-16T20:54:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "@steveisok - should we keep this in 7.0 or move it out at this point?",
                                           "updatedAt":  "2022-08-16T20:54:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5IjE8r",
                                           "createdAt":  "2022-08-16T20:54:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nNewly added trimming libraries tests run only for configurations which are not by default trimmed aggressively. All the ones which are and are used to customers are missing so we have no test coverage.\r\n\r\nMandatory RIDs to be added to the existing matrix\r\n- browser-wasm\r\n- ios-arm64\r\n- tvos-arm64\r\n- android-arm64\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003emarek-safar\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-wasm`, `area-Infrastructure-libraries`, `test-enhancement`, `linkable-framework`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e7.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-08-16T20:54:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JcF4n",
                                           "createdAt":  "2022-08-30T19:54:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "directhex",
                                           "body":  "Are we good on this for wasm, i.e. was #48429 everything needed? If so, I can duplicate that PR\u0027s changes for iOS, tvOS and Android",
                                           "updatedAt":  "2022-08-30T19:54:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JcOg9",
                                           "createdAt":  "2022-08-30T20:31:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "\u003e Are we good on this for wasm, i.e. was #48429 everything needed? If so, I can duplicate that PR\u0027s changes for iOS, tvOS and Android\r\n\r\nAs far as I know.  The wiring up of these tests for mobile should be the same as the functional tests.",
                                           "updatedAt":  "2022-08-30T20:31:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hJlPG",
                                           "createdAt":  "2023-07-11T00:09:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027os-ios\u0027: @steveisok, @akoeplinger, @kotlarmilos\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nNewly added trimming libraries tests run only for configurations which are not by default trimmed aggressively. All the ones which are and are used to customers are missing so we have no test coverage.\r\n\r\nMandatory RIDs to be added to the existing matrix\r\n- browser-wasm\r\n- ios-arm64\r\n- tvos-arm64\r\n- android-arm64\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003emarek-safar\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003edirecthex\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-wasm`, `area-Infrastructure-libraries`, `test-enhancement`, `linkable-framework`, `os-ios`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e8.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-07-11T00:09:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hU8YM",
                                           "createdAt":  "2023-07-12T16:48:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nNewly added trimming libraries tests run only for configurations which are not by default trimmed aggressively. All the ones which are and are used to customers are missing so we have no test coverage.\r\n\r\nMandatory RIDs to be added to the existing matrix\r\n- browser-wasm\r\n- ios-arm64\r\n- tvos-arm64\r\n- android-arm64\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003emarek-safar\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003edirecthex\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`test-enhancement`, `area-Infrastructure`, `linkable-framework`, `os-ios`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e8.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-07-12T16:48:06Z"
                                       }
                                   ],
                         "totalCount":  28
                     },
        "title":  "Libraries trimming test are missing a lot of configurations",
        "labels":  [
                       "test-enhancement",
                       "area-Infrastructure",
                       "linkable-framework",
                       "os-ios"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/39694",
        "createdAt":  "2020-07-21T11:17:56Z",
        "number":  39694,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-08-06T17:00:25Z",
        "body":  "Current the perf pipelines depends on OOBs being present in the testhost folder instead of being acquired app-local (which represents the customer scenario). We are removing OOBs from the testhost with https://github.com/dotnet/runtime/pull/35606.\r\n\r\nI added a workaround to manually copy the runtime directory\u0027s content which includes OOBs into the testhost. This is a hack and should be fixed i.e. by including the built packages (e.g. System.Drawing.Common) into the payload and then restoring from that cache. I don\u0027t have enough context how the perf pipeline works but I assume, as I saw that the whole dotnet/performance repository is part of the correlation payload, that the performance library isn\u0027t prebuilt.\r\n\r\ncc @adamsitnik @DrewScoggins @safern ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOJ3IyVg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2MTc5NTI3MQ==",
                                           "createdAt":  "2020-07-21T11:17:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @safern, @tannergooding\nNotify danmosemsft if you want to be subscribed.",
                                           "updatedAt":  "2020-07-21T11:17:59Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY2MTc5NTQxNA==",
                                           "createdAt":  "2020-07-21T11:18:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @ViktorHofer\nNotify danmosemsft if you want to be subscribed.",
                                           "updatedAt":  "2020-07-21T11:18:20Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Performance pipelines depends on OOBs being present in the testhost",
        "labels":  [
                       "tenet-performance",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/41410",
        "createdAt":  "2020-08-26T17:46:58Z",
        "number":  41410,
        "author":  "CoffeeFlux",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-08-06T17:01:31Z",
        "body":  "We appear to have two lanes doing very similar work:\r\n* Build Linux x64 Release AllSubsets_Mono_LLVMAOT\r\n* Mono llvmaot Product Build Linux x64 release\r\n\r\nIt seems they\u0027re pulling from separate templates based on the names, but if there\u0027s any way to avoid duplicate builds we should consider it, especially since LLVMAOT can take a little while.\r\n\r\ncc: @naricc @imhameed ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOKTVMfQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4MjgyNTc0MA==",
                                           "createdAt":  "2020-08-28T16:19:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @ViktorHofer\nSee info in area-owners.md if you want to be subscribed.",
                                           "updatedAt":  "2020-08-28T16:19:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5MTM1NjIxMg==",
                                           "createdAt":  "2020-09-11T23:44:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Anipik",
                                           "body":  "@safern @ViktorHofer  do u have context on why we build the mono runtime again in all ```AllSubsets_Mono_LLVMAOT``` leg rather than using the runtime built in ```Mono llvmaot Product Build Linux x64 release``` similar to what we do for coreclr ?",
                                           "updatedAt":  "2020-09-11T23:44:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5MTM1ODg0NQ==",
                                           "createdAt":  "2020-09-11T23:58:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBQW_lA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Anipik",
                                                                               "createdAt":  "2020-09-14T21:31:23Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "safern",
                                           "body":  "`Mono llvmaot Product Build Linux x64 release` is used to run the runtime tests against a `llvmaot` runtime. `AllSubsets_Mono_LLVMAOT` doesn\u0027t publish any assets for the Mono runtime, which the runtime tests need it. However we could do the work to avoid duplicating builds.\r\n\r\nWe would need to update the `run-test-job.yml` for runtime tests in order to depend on this build instead of `Mono llvmaot Product Build Linux x64 release` and add a extraStepsTemplate in order to publish these build assets. We do something similar in runtimelab, so it wouldn\u0027t be that much of work. ",
                                           "updatedAt":  "2020-09-11T23:58:24Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "CI lanes show two Mono Linux x64 LLVMAOT Release builds",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/43095",
        "createdAt":  "2020-10-06T15:39:26Z",
        "number":  43095,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBSnHQA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "CoffeeFlux",
                                            "createdAt":  "2020-10-06T15:52:30Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "steveisok",
                                            "createdAt":  "2020-10-06T16:12:50Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2022-07-29T21:14:04Z",
        "body":  "A few months ago we switched from a named reference for `System.Private.CoreLib` to a ProjectReference so that we can build libraries without needing to build `System.Private.CoreLib` via the coreclr/mono.corelib subset first. This works as expected and improved the developer innerloop as CoreLib is now incrementally built as a dependency of libraries.\r\n\r\nSo far so good. We would now like to also binplace CoreLib incrementally into the testhost and runtime pack (as any other managed library under libraries) so that we don\u0027t need to invoke externals.csproj (libs.pretest subset) to update the testhost and the runtime pack. Basically we would like to switch from a pull to a push model to improve the developer innerloop workflow.\r\n\r\nWhy we haven\u0027t done this yet and what makes this less trivial are the following nuances:\r\n1. CoreClr (and mono?) requires CoreLib\u0027s build configuration to match the native runtime bits. As an example, if `coreclr.dll` is compiled with the Debug configuration, CoreLib needs to be built in that configuration as well.\r\n2. We currently pull the crossgend version of CoreLib when building libraries in Release. We would need to be able to crossgen CoreLib as a post-build step (ideally msbuild logic) conditionally (only in Release and not when measuring code coverage `/p:Coverage=true`). What makes this even more difficult is that we would need to make sure that crossgening CoreLib is fast and that crossgen itself is already built. Also crossgen vs crossgen2?\r\n\r\nRaising this now as the Mono team asked for this actively and as it would improve the developer innerloop workflow: https://github.com/dotnet/runtime/commit/792fd1df1894200a159a3fc0d03eeda3c400cc3e.\r\n\r\nRelated: https://github.com/dotnet/runtime/issues/38034\r\n\r\ncc @jkotas @ericstj @akoeplinger @safern @dotnet/runtime-infrastructure ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOKfzUQA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwNDM1OTEwMQ==",
                                           "createdAt":  "2020-10-06T15:39:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @safern, @viktorhofer\nSee info in area-owners.md if you want to be subscribed.",
                                           "updatedAt":  "2020-10-06T15:39:35Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwNDQzMjc4MA==",
                                           "createdAt":  "2020-10-06T17:30:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e We currently pull the crossgend version of CoreLib when building libraries in Release.\r\n\r\nI do not think this is useful to crossgen for developer inner loop. The inner loop should use non-crossgened CoreLib. Yes, it will make the inner loop different from the full stack build and test, and that\u0027s fine.",
                                           "updatedAt":  "2020-10-06T17:30:58Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcwNDQzNTI2NA==",
                                           "createdAt":  "2020-10-06T17:35:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e Yes, it will make the inner loop different from the full stack build and test, and that\u0027s fine.\r\n\r\nI don\u0027t think this is useful for developer innerloop as well besides for perf measurements of incremental changes. If we don\u0027t care about that scenario too much, then I\u0027m fine with not crossgening in incremental builds.\r\n\r\nUnrelated, we still don\u0027t crossgen other shared framework libraries than CoreLib when testing in CI. So we are already inconsistent here.",
                                           "updatedAt":  "2020-10-06T22:04:16Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Binplace System.Private.CoreLib into the testhost and runtimepack incrementally",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/43455",
        "createdAt":  "2020-10-15T18:01:35Z",
        "number":  43455,
        "author":  "hoyosjs",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-08-17T18:42:55Z",
        "body":  "Are there a typical/recommended set of commands we can provide, for each relevant OS, that would let someone simply copy/paste each command into their shell? i.e. one to download the bits, one to extract them, one to set whatever environment variables need to be set, etc.?  I\u0027m thinking of something like the step-by-step copy/paste commands available for the official bits.\r\n\r\n_Originally posted by @stephentoub in https://github.com/dotnet/runtime/pull/43392#discussion_r504792946_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOKlNuag==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcxMDExMDY4Ng==",
                                           "createdAt":  "2020-10-16T15:20:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeffschwMSFT",
                                           "body":  "cc @AaronRobinsonMSFT ",
                                           "updatedAt":  "2020-10-16T15:20:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcxMDExMDgyNg==",
                                           "createdAt":  "2020-10-16T15:20:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @ViktorHofer\nSee info in area-owners.md if you want to be subscribed.",
                                           "updatedAt":  "2020-10-16T15:20:16Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Document general scenario to use nightly builds in a step-by-step easy to script way",
        "labels":  [
                       "documentation",
                       "help wanted",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/44476",
        "createdAt":  "2020-11-10T19:10:33Z",
        "number":  44476,
        "author":  "mmitche",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-28T18:34:14Z",
        "body":  "The -internal archives don\u0027t serve a strong purpose and largely just take up space. They are also a source of possibility differences between a source and Microsoft build. When https://github.com/dotnet/installer/issues/9042 and https://github.com/dotnet/aspnetcore/issues/27687 are completed, the runtime -internal archives should be removed.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOU5MvhA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyNDkwNzkyOA==",
                                           "createdAt":  "2020-11-10T19:11:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mmitche",
                                           "body":  "Depends on https://github.com/dotnet/installer/issues/9042 and https://github.com/dotnet/aspnetcore/issues/27687",
                                           "updatedAt":  "2020-11-10T19:12:14Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyNTAzMzY5Ng==",
                                           "createdAt":  "2020-11-10T23:41:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @ViktorHofer\nSee info in area-owners.md if you want to be subscribed.\u003cdetails\u003e\n  \u003chr\u003e\n  \u003cb\u003eIssue meta data\u003c/b\u003e\n  \u003ctable\u003e\n  \u003ctr\u003e\n    \u003ctd\u003eIssue content:\u003c/td\u003e\n    \u003ctd\u003eThe -internal archives don\u0027t serve a strong purpose and largely just take up space. They are also a source of possibility differences between a source and Microsoft build. When https://github.com/dotnet/installer/issues/9042 and https://github.com/dotnet/aspnetcore/issues/27687 are completed, the runtime -internal archives should be removed.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003eIssue author:\u003c/td\u003e\n    \u003ctd\u003emmitche\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003eAssignees:\u003c/td\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003eMilestone:\u003c/td\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003c/table\u003e\n  \u003c/details\u003e",
                                           "updatedAt":  "2020-11-10T23:41:10Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyNTU4OTM0Nw==",
                                           "createdAt":  "2020-11-11T18:33:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "cc @jkoritzinsky, this is the matching runtime issue.",
                                           "updatedAt":  "2020-11-11T18:33:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41T1oR",
                                           "createdAt":  "2021-08-06T17:03:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@mmitche do you know if we still use the -internal archives? What would need to happen to remove these?",
                                           "updatedAt":  "2021-08-06T17:03:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41T8XB",
                                           "createdAt":  "2021-08-06T17:51:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mmitche",
                                           "body":  "I am not sure. We need to ensure we don\u0027t have downstream use of them (usually just go and grep through aspnetcore, installer, sdk, and windowsdesktop).",
                                           "updatedAt":  "2021-08-06T17:51:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5INbdi",
                                           "createdAt":  "2022-08-11T02:04:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "Since the installer issue is still open, I\u0027m moving this to NET 8",
                                           "updatedAt":  "2022-08-11T02:04:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5KaUg7",
                                           "createdAt":  "2022-09-15T17:44:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCsTh7A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "mmitche",
                                                                               "createdAt":  "2022-09-15T18:00:44Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2022-09-15T18:09:13Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "The installer issue has been closed, so I think we can do this now.",
                                           "updatedAt":  "2022-09-15T17:44:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5KaYYl",
                                           "createdAt":  "2022-09-15T18:02:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "I took a quick look into this work, and I have a quick question. Do we still need to produce the `dotnet-runtime-symbols-xxx.zip/tar` symbol archives? Or is that also unused?\r\n\r\nWe use the Microsoft.DotNet.Build.Tasks.Archives package to build both archives, and right now that package doesn\u0027t have a good mechanism to only build the symbol archive and not the product archive.",
                                           "updatedAt":  "2022-09-15T18:02:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Ti9Mk",
                                           "createdAt":  "2023-01-24T10:09:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e Do we still need to produce the dotnet-runtime-symbols-xxx.zip/tar symbol archives? Or is that also unused?\r\n\r\n@mmitche @hoyosjs would you know the answer to Jeremy\u0027s question?",
                                           "updatedAt":  "2023-01-24T10:09:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Tky-E",
                                           "createdAt":  "2023-01-24T15:38:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mmitche",
                                           "body":  "As far as I can tell, these are not unpackaged and published to the symbol servers. Maybe they\u0027re used for something else?",
                                           "updatedAt":  "2023-01-24T15:38:12Z"
                                       }
                                   ],
                         "totalCount":  10
                     },
        "title":  "Remove -internal archives",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/44761",
        "createdAt":  "2020-11-16T21:57:19Z",
        "number":  44761,
        "author":  "jkoritzinsky",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCzdneg==",
                          "nodes":  [
                                        {
                                            "content":  "ROCKET",
                                            "user":  "ViktorHofer",
                                            "createdAt":  "2020-11-16T22:01:53Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "ViktorHofer",
                                            "createdAt":  "2020-11-16T22:01:56Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "hez2010",
                                            "createdAt":  "2021-01-10T08:05:01Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "jashook",
                                            "createdAt":  "2021-03-16T19:02:48Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "mwallner",
                                            "createdAt":  "2021-10-14T07:44:57Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "akhanalcs",
                                            "createdAt":  "2022-09-10T21:09:52Z"
                                        },
                                        {
                                            "content":  "ROCKET",
                                            "user":  "akhanalcs",
                                            "createdAt":  "2022-09-10T21:09:52Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "wabscale",
                                            "createdAt":  "2022-09-29T20:31:47Z"
                                        },
                                        {
                                            "content":  "ROCKET",
                                            "user":  "wabscale",
                                            "createdAt":  "2022-09-29T20:31:55Z"
                                        },
                                        {
                                            "content":  "EYES",
                                            "user":  "vernou",
                                            "createdAt":  "2023-03-09T09:37:26Z"
                                        },
                                        {
                                            "content":  "ROCKET",
                                            "user":  "MineCake147E",
                                            "createdAt":  "2023-10-08T06:22:37Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "elksson",
                                            "createdAt":  "2023-10-21T04:53:45Z"
                                        }
                                    ],
                          "totalCount":  12
                      },
        "updatedAt":  "2023-10-16T21:06:10Z",
        "body":  "As part of improving performance of local and CI builds, we\u0027ve enabled using Ninja instead of MSBuild for building CoreCLR as well as the .NET Libraries and .NET Hosts native assets as an optional flag and enabled it in CI.\r\n\r\nDuring the .NET 6 time frame, we plan to move to using Ninja exclusively on Windows and removing the MSBuild generator support from our native build scripts. This will enable a faster build by default, will remove the current confusion in our build scripts where we use two different MSBuild installations during our native builds (.NET CLI MSBuild for the initial build from the root build scripts, Visual Studio MSBuild for the native build), and will enable us to not have our minimum CMake version on Windows dictated by which Visual Studio tools version we use to compile. We\u0027ll do this in multiple phases, where generally each phase requires the phases before it to be complete and the last phase requires all of the previous phases to be complete.\r\n\r\n- [x] Enable Ninja for the Cross OS DAC builds in CI\r\n- [x] Make Ninja the default generator on Windows. (Requires infrastructure rollout)\r\n  - We\u0027ll continue to protect the MSBuild support in CI to ensure we don\u0027t horribly break it.\r\n  - MSBuild will still be the recommended generator for editing in VS.\r\n- [ ] Enable developing CoreCLR, native libraries, and native hosts with the Visual Studio CMake support.\r\n- [ ] Remove the MSBuild support from our build scripts. (Requires infrastructure rollout)",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOaTfknQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyODM1MzI1Ng==",
                                           "createdAt":  "2020-11-16T21:57:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @ViktorHofer\nSee info in area-owners.md if you want to be subscribed.\u003cdetails\u003e\n  \u003csummary\u003eIssue Details\u003c/summary\u003e\n  \u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eDescription:\u003c/th\u003e\n    \u003ctd\u003e\n\nAs part of improving performance of local and CI builds, we\u0027ve enabled using Ninja instead of MSBuild for building CoreCLR as well as the .NET Libraries and .NET Hosts native assets as an optional flag and enabled it in CI.\r\n\r\nDuring the .NET 6 time frame, we plan to move to using Ninja exclusively on Windows and removing the MSBuild generator support from our native build scripts. This will enable a faster build by default, will remove the current confusion in our build scripts where we use two different MSBuild installations during our native builds (.NET CLI MSBuild for the initial build from the root build scripts, Visual Studio MSBuild for the native build), and will enable us to not have our minimum CMake version on Windows dictated by which Visual Studio tools version we use to compile. We\u0027ll do this in multiple phases, where generally each phase requires the phases before it to be complete and the last phase requires all of the previous phases to be complete.\r\n\r\n- [ ] Enable Ninja for the Cross OS DAC builds in CI\r\n- [ ] Make Ninja the default generator on Windows. (Requires infrastructure rollout)\r\n  - We\u0027ll continue to protect the MSBuild support in CI to ensure we don\u0027t horribly break it.\r\n  - MSBuild will still be the recommended generator for editing in VS.\r\n- [ ] Enable developing CoreCLR, native libraries, and native hosts with the Visual Studio CMake support.\r\n- [ ] Remove the MSBuild support from our build scripts. (Requires infrastructure rollout)\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ejkoritzinsky\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`Bottom Up Work`, `User Story`, `area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e[object Object]\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003c/table\u003e\n  \u003c/details\u003e",
                                           "updatedAt":  "2020-11-16T21:57:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyODM2MjYyNg==",
                                           "createdAt":  "2020-11-16T22:15:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@danmosemsft Jeremy labeled this runtime specific infra issue as a \"User Story\". As we discussed offline, I assume we should not do this for net6 as we are only customer deliverables in the tree?",
                                           "updatedAt":  "2020-11-16T22:15:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyODM4MDI4NA==",
                                           "createdAt":  "2020-11-16T22:57:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Personally I wouldn\u0027t but perhaps @jeffschwMSFT  has different guidance? They have Team Epic as an option.",
                                           "updatedAt":  "2020-11-16T22:57:36Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyODM4MTI3Nw==",
                                           "createdAt":  "2020-11-16T23:00:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "According to the last time I talked with Jeff, Runtime was moving from Team Epic to User Story + Bottom Up Work for unparented stories so it doesn\u0027t show up on the https://themesof.net page.",
                                           "updatedAt":  "2020-11-16T23:00:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyODM4Mjg1Mw==",
                                           "createdAt":  "2020-11-16T23:04:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "Looks like Bottom Up Work does show up on the page (there\u0027s an option to track it). Let\u0027s get some guidance from @jeffschwMSFT for what I should do here.",
                                           "updatedAt":  "2020-11-16T23:04:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyODM4NjUxNw==",
                                           "createdAt":  "2020-11-16T23:13:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "My thinking was that we didn\u0027t (yet?) have an ambition for this tree to turn into tracking all our work (although I suspect in future that might be interesting) so in my mind it was just for work contributing to customer visible user stories - I didn\u0027t want to ask folks to do lots of wiring up if they already got what they needed from project boards. But I don\u0027t have a strong opinion and if it means we can all simplify by eliminating Team Epic then that sounds like a fine thing.",
                                           "updatedAt":  "2020-11-16T23:13:54Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyODQzNjgxMQ==",
                                           "createdAt":  "2020-11-16T23:50:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeffschwMSFT",
                                           "body":  "User Story + Bottom Up is our new Team Epic",
                                           "updatedAt":  "2020-11-16T23:50:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyODUyMTk5Mg==",
                                           "createdAt":  "2020-11-17T00:34:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBXBSyQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2020-11-17T10:06:40Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "OK, sounds good to me. @ViktorHofer feel free to put infra stuff in the tree labeled as such if you feel it is valuable to you and the infra crew. ",
                                           "updatedAt":  "2020-11-17T00:34:11Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDczMDQyMTgyNA==",
                                           "createdAt":  "2020-11-19T14:45:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODJ6qGw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "lateralusX",
                                                                               "createdAt":  "2023-10-16T21:37:28Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "janvorli",
                                           "body":  "While I am fine with making Ninja the default build engine for native projects on Windows, I don\u0027t like removal of support for the msbuild project generator. The generated projects are a very easy way to debug native runtime using visual studio, see what defines / compiler options are set for a specific project using a nice UI, navigating code with the code browser seeing precisely the macro definitions set for the given build, etc.\r\nWhat is the reason for dropping the msbuild project generator? Is it the fact that to ensure it keeps working we would need to have a lab test using this project generator?\r\n",
                                           "updatedAt":  "2020-11-19T14:45:08Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0NTUyNTYwMg==",
                                           "createdAt":  "2020-12-15T19:48:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "We\u0027d only remove the MSBuild generator once we have equivalent development support with the Ninja generator (for example with the CMake for VS support).\r\n\r\nIf we drop support for the MSBuild scripts, it simplifies our build scripts and ensures that we don\u0027t have to bump our minimum CMake version unnecessarily just to get the generator for a new Visual Studio. With the Ninja generator, we can move to a new VS version without having to make significant changes in the build and in build prereqs.",
                                           "updatedAt":  "2020-12-15T19:48:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc4NDIyNDk1Mg==",
                                           "createdAt":  "2021-02-23T14:04:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@jkoritzinsky would it make sense to assign yourself to the issue?",
                                           "updatedAt":  "2021-02-23T14:04:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5pN-Sd",
                                           "createdAt":  "2023-10-16T21:03:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODJ6r6w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkoritzinsky",
                                                                               "createdAt":  "2023-10-16T21:42:26Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "lateralusX",
                                           "body":  "We have a couple of downstream repros that depends on Visual Studio SDK\u0027s that currently needs the Visual Studio cmake generator with custom cmake toolchains. Only supporting ninja cmake generator would probably cause issue for parts of the native runtime builds (mono, native libs, nativeaot) that targets SDK\u0027s like https://learn.microsoft.com/en-us/gaming/gdk/_content/gc/tools-console/gc-tools-toc. Keeping the Visual Studio cmake generator will probably simplify the runtime build targeting SDK\u0027s that primarily uses Visual Studio template projects + msbuild with limited or no support for alternative cmake generators like ninja, above is just one example.",
                                           "updatedAt":  "2023-10-16T21:06:10Z"
                                       }
                                   ],
                         "totalCount":  12
                     },
        "title":  "Making Ninja the only supported CMake Generator on Windows",
        "labels":  [
                       "area-Infrastructure",
                       "User Story",
                       "Bottom Up Work"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/45120",
        "createdAt":  "2020-11-23T18:47:48Z",
        "number":  45120,
        "author":  "Anipik",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-09-27T20:13:42Z",
        "body":  "Installer depends on some of the packages which are built in runtime. these packages are not getting consumed live or being updated.\r\n\r\nSo we could enable darc to update these versions where we cant consume the live version, and use the live version where we can.\r\n\r\nexample packages https://github.com/dotnet/runtime/pull/43192/files",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOZ0S-IQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDczNzUyNjU3OA==",
                                           "createdAt":  "2020-12-02T22:10:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "NikolaMilosavljevic",
                                           "body":  "@Anipik is this dependency for dotnet/installer repo? Also, why is this an \"api suggestion\"?",
                                           "updatedAt":  "2020-12-02T22:10:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0NDY3MjcwNw==",
                                           "createdAt":  "2020-12-14T19:54:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Anipik",
                                           "body":  "its for the installer section of the runtime repo",
                                           "updatedAt":  "2020-12-14T19:54:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1ODg1MTA5NQ==",
                                           "createdAt":  "2021-01-12T18:27:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Anipik",
                                           "body":  "Microsoft.NETCore.ILAsm (used in libraries not sure about installer)\r\nruntime.native.System.IO.Ports \r\nMicrosoft.NETCore.DotNetHost (used in installer)\r\nMicrosoft.NET.Sdk.IL (used in libraries not sure about installer)\r\nMicrosoft.NETCore.DotNetHostPolicy (used in installer)\r\nSystem.Runtime.CompilerServices.Unsafe (used in installer)\r\nSystem.Text.Json (used in installer)",
                                           "updatedAt":  "2021-01-12T18:27:59Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc1ODg1MTUzMQ==",
                                           "createdAt":  "2021-01-12T18:28:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Anipik",
                                           "body":  "all these packages have a darc subscripition, we need to decide if we want to leave it as darc subscripition or if we want to consume live assets",
                                           "updatedAt":  "2021-01-12T18:28:47Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2Njk1MTczNw==",
                                           "createdAt":  "2021-01-25T16:48:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e Microsoft.NETCore.ILAsm (used in libraries not sure about installer)\r\nMicrosoft.NET.Sdk.IL (used in libraries not sure about installer)\r\n\r\nIdeally we would use live assets for those but AFAIK these depend on the coreclr runtime being built which would create a dependency on the runtime being built to build the libraries...\r\n\r\n\u003e Microsoft.NETCore.DotNetHost (used in installer)\r\nMicrosoft.NETCore.DotNetHostPolicy (used in installer)\r\n\r\nThose are used in libraries currently. We should remove the dependency on these and use the live built host assets instead.\r\n\r\n\u003e System.Runtime.CompilerServices.Unsafe (used in installer)\r\nSystem.Text.Json (used in installer)\r\n\r\nThose are dependencies of the remaining managed component in installer which is planned to be moved into libraries which will mitigate this issue. The overall issue here is that you today can\u0027t P2P a managed library under libraries as dependencies aren\u0027t defined in a way that would allow that. If I could build a library without a libraries root build then this wouldn\u0027t be an issue.\r\n\r\n\u003e runtime.native.System.IO.Ports\r\n\r\nUnsure who references this?",
                                           "updatedAt":  "2021-01-25T16:48:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5nIsXN",
                                           "createdAt":  "2023-09-21T21:33:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "NikolaMilosavljevic",
                                           "body":  "[Triage] @NikolaMilosavljevic please investigate and move to the appropriate area.",
                                           "updatedAt":  "2023-09-21T21:33:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5nRL4h",
                                           "createdAt":  "2023-09-24T12:19:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nInstaller depends on some of the packages which are built in runtime. these packages are not getting consumed live or being updated.\r\n\r\nSo we could enable darc to update these versions where we cant consume the live version, and use the live version where we can.\r\n\r\nexample packages https://github.com/dotnet/runtime/pull/43192/files\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eAnipik\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e8.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-09-24T12:19:23Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "Automatically flow the darc package dependencies or use live dependencies for mono and installer packages",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/47290",
        "createdAt":  "2021-01-21T21:03:11Z",
        "number":  47290,
        "author":  "directhex",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-06-29T11:16:32Z",
        "body":  "The Windows install instructions mention PATH values and required software, but no mention of the AutoCRLF config value. It seems the libs subset cannot be built if the user sets the wrong AutoCRLF value during installation of Git, and it\u0027s not obvious to the user _why_ it\u0027s failing.\r\n\r\nhttps://github.com/dotnet/runtime/blob/master/docs/workflow/requirements/windows-requirements.md",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOM-LckQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NDk0MDI1Ng==",
                                           "createdAt":  "2021-01-21T21:03:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-01-21T21:03:16Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NDk2MzY3Nw==",
                                           "createdAt":  "2021-01-21T21:49:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @ViktorHofer\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThe Windows install instructions mention PATH values and required software, but no mention of the AutoCRLF config value. It seems the libs subset cannot be built if the user sets the wrong AutoCRLF value during installation of Git, and it\u0027s not obvious to the user _why_ it\u0027s failing.\r\n\r\nhttps://github.com/dotnet/runtime/blob/master/docs/workflow/requirements/windows-requirements.md\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003edirecthex\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `documentation`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-01-21T21:49:40Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NDk3MjQ1NQ==",
                                           "createdAt":  "2021-01-21T22:08:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "directhex",
                                           "body":  "There are seemingly other gaps in the Windows doc requirements. I installed what the docs told me to, but the libs subset is failing:\r\n\r\n```\r\nC:\\source\\repos\\dotnet\\runtime\\src\\libraries\\shims\\manual\\System.forwards.cs(8,88): error CS0234: The type or namespace name \u0027ZLibException\u0027 does not exist in the namespace \u0027System.IO.Compression\u0027 (are you missing an assembly reference?) [C:\\source\\repos\\dotnet\\runtime\\src\\libraries\\shims\\manual\\System.csproj]\r\nC:\\source\\repos\\dotnet\\runtime\\src\\libraries\\shims\\manual\\System.forwards.cs(9,77): error CS0234: The type or namespace name \u0027CookieVariant\u0027 does not exist in the namespace \u0027System.Net\u0027 (are you missing an assembly reference?) [C:\\source\\repos\\dotnet\\runtime\\src\\libraries\\shims\\manual\\System.csproj]\r\nC:\\source\\repos\\dotnet\\runtime\\src\\libraries\\shims\\manual\\System.forwards.cs(10,77): error CS0234: The type or namespace name \u0027PathList\u0027 does not exist in the namespace \u0027System.Net\u0027 (are you missing an assembly reference?) [C:\\source\\repos\\dotnet\\runtime\\src\\libraries\\shims\\manual\\System.csproj]\r\nC:\\source\\repos\\dotnet\\runtime\\src\\libraries\\src.proj(45,5): error MSB4181: The \"MSBuild\" task returned false but did not log an error.\r\n    0 Warning(s)\r\n    4 Error(s)\r\n```",
                                           "updatedAt":  "2021-01-21T22:08:07Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3MDUwNTYxNw==",
                                           "createdAt":  "2021-06-29T11:16:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bekir-ozturk",
                                           "body":  "I\u0027m getting the same errors regarding `ZLibException`, `CookieVariant` and `PathList`. @directhex have you found a fix?",
                                           "updatedAt":  "2021-06-29T11:16:32Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Documentation should cover CRLF values",
        "labels":  [
                       "documentation",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/48000",
        "createdAt":  "2021-02-08T17:33:54Z",
        "number":  48000,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-29T21:23:21Z",
        "body":  "See the table in https://github.com/dotnet/runtime/blob/master/docs/project/dogfooding.md which doesn\u0027t list anything newer than 6.0.0 alpha1 where-as the current band is 6.0.0 preview2.\r\n\r\nJust for reference, here\u0027s the regenerate download table proj: https://github.com/dotnet/runtime/blob/master/eng/regenerate-download-table.proj\r\n\r\ncc @hoyosjs @Anipik ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOL0ic7Q==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3NTMxNTYzMg==",
                                           "createdAt":  "2021-02-08T17:33:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @ViktorHofer\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nSee the table in https://github.com/dotnet/runtime/blob/master/docs/project/dogfooding.md which doesn\u0027t list anything newer than 6.0.0 alpha1 where-as the current band is 6.0.0 preview2.\r\n\r\ncc @hoyosjs @Anipik \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e6.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-02-08T17:33:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3NTYwNjMzMw==",
                                           "createdAt":  "2021-02-09T02:21:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "I checked this. The bits are actually up to date, however the SVG\u0027s aren\u0027t. This means we\u0027ve stopped publishing the updated one and the aka links now point to the last published version.",
                                           "updatedAt":  "2021-02-09T02:21:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3NTYyOTA1Nw==",
                                           "createdAt":  "2021-02-09T03:17:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "Looks like we lost the badges in the move to the shared framework SDK. the assets are still versioned, so I\u0027d say low rpi. However, it\u0027s easy to fix.\r\n\r\nJust reset to release/5.0, grab a copy of version_badge.svg and then add the following target pending of a target like Build:\r\n```xml\r\n  \u003cTarget Name=\"GenerateVersionBadge\"\u003e\r\n    \u003cPropertyGroup\u003e\r\n      \u003ctemplateSvg\u003e$(MSBuildThisFileDirectory)version_badge.svg\u003c/templateSvg\u003e\r\n    \u003c/PropertyGroup\u003e\r\n\r\n    \u003cMakeDir  Condition=\"!Exists(\u0027$(BaseOutputRootPath)\u0027)\" Directories=\"$(BaseOutputRootPath)\" /\u003e\r\n\r\n    \u003cWriteLinesToFile\r\n      File=\"$(OutputVersionBadge)\"\r\n      Lines=\"$([System.IO.File]::ReadAllText(\u0027$(templateSvg)\u0027).Replace(\u0027ver_number\u0027, \u0027$(Version)\u0027))\"\r\n      Overwrite=\"true\"\r\n                      /\u003e\r\n  \u003c/Target\u003e\r\n```\r\n\r\nI just wonder if this should be in the SFX SDK. Thoughts @jkoritzinsky ?",
                                           "updatedAt":  "2021-02-09T03:17:16Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc4ODk5ODA2OA==",
                                           "createdAt":  "2021-03-02T15:37:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBh84ew==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "hoyosjs",
                                                                               "createdAt":  "2021-03-02T19:26:57Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "michellemcdaniel",
                                           "body":  "Just a quick note: runtime and windowsdesktop both produce and svg with the same file name. With the changes to the aka.ms links (what we use in the table), we need to have these two repos generate different file names. When you add this back, can you add a runtime moniker of some variety to the svg filename?",
                                           "updatedAt":  "2021-03-02T15:37:00Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5MzIyOTQ0MA==",
                                           "createdAt":  "2021-03-09T01:09:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "@adiaaida, good thinking. Quick question though. What happens with assets that get produced in two places that tend to be common names? IS there a safeguard so that it doesn\u0027t collide?",
                                           "updatedAt":  "2021-03-09T01:09:14Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5MzI4NzkxNw==",
                                           "createdAt":  "2021-03-09T02:37:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "michellemcdaniel",
                                           "body":  "There is not, currently. That\u0027s why we renamed the productVersion.txt files to include the product type (runtime, sdk, and aspnetcore). I missed the fact that windowsdesktop and runtime produce the same svg files (they are the only ones who do so). For clarity, only the aka.ms links collide. The blob storage backing has no collisions.",
                                           "updatedAt":  "2021-03-09T02:37:17Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "Dogfooding table doesn\u0027t contain an SVG with the version",
        "labels":  [
                       "documentation",
                       "good first issue",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/48229",
        "createdAt":  "2021-02-12T17:27:15Z",
        "number":  48229,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-08-22T15:42:12Z",
        "body":  "The `PackageVersion` property is currently specified four times instead of once centrally. We should consolidate that before we ship NET6 to ease servicing (especially as NET6 will be an LTS release).\r\n\r\nThis also involves consolidating the installer `GetProductVersion` logic with the rest of the repo: https://github.com/dotnet/runtime/blob/372248b9b4e3e7c08e0c0aa53d4a94f826fe273b/src/installer/Directory.Build.targets#L25-L138\r\n\r\ncc @dotnet/runtime-infrastructure ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSDAV6g==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc3ODMzMTgyNA==",
                                           "createdAt":  "2021-02-12T17:27:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @ViktorHofer\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThe `PackageVersion` property is currently specified four times instead of once centrally. We should consolidate that before we ship NET6 to ease servicing (especially as NET6 will be an LTS release).\r\n\r\ncc @dotnet/runtime-infrastructure \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e6.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-02-12T17:27:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5IMBXq",
                                           "createdAt":  "2022-08-10T18:40:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SamMonoRT",
                                           "body":  "Moving to 8.0.0",
                                           "updatedAt":  "2022-08-10T18:40:08Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Consolidate PackageVersion properties",
        "labels":  [
                       "help wanted",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/49226",
        "createdAt":  "2021-03-05T18:16:51Z",
        "number":  49226,
        "author":  "bartonjs",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-03-24T17:37:31Z",
        "body":  "When pulling a development branch forward recently from ~2021-01-15 to ~2021-03-02 I stopped being able to build with Ubuntu 18.04 with the distro-provided clang-6.0 package, due to errors about unrecognized/unsupported arguments to objcopy.\r\n\r\nWhile what I\u0027d /really/ prefer is that we kept our minimum compiler version to distro-provided packages, I was frustrated by how long it took to identify what had gone wrong, and what I needed to do about it.  The fact that even after installing clang13 and setting that as my default \"clang\" I /still/ failed the build because for some reason it kept finding and preferring clang6 made it even more frustrating.\r\n\r\nI know this has come up before (e.g. in https://github.com/dotnet/runtime/issues/38342), but it seems like it\u0027s a constant source of pain, and that we could certainly use some love/polish here.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOLy7Hzg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5MTU5NDk1OA==",
                                           "createdAt":  "2021-03-05T18:16:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nWhen pulling a development branch forward recently from ~2021-01-15 to ~2021-03-02 I stopped being able to build with Ubuntu 18.04 with the distro-provided clang-6.0 package, due to errors about unrecognized/unsupported arguments to objcopy.\r\n\r\nWhile what I\u0027d /really/ prefer is that we kept our minimum compiler version to distro-provided packages, I was frustrated by how long it took to identify what had gone wrong, and what I needed to do about it.  The fact that even after installing clang13 and setting that as my default \"clang\" I /still/ failed the build because for some reason it kept finding and preferring clang6 made it even more frustrating.\r\n\r\nI know this has come up before (e.g. in https://github.com/dotnet/runtime/issues/38342), but it seems like it\u0027s a constant source of pain, and that we could certainly use some love/polish here.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ebartonjs\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-03-05T18:16:54Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "(Better) Frontload llvm/clang version check",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/49233",
        "createdAt":  "2021-03-05T19:14:00Z",
        "number":  49233,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-08-22T15:42:12Z",
        "body":  "To my knowledge the host components consist of the native source files, nuget packages, the managed HostModel library and tests. Most of these assets are located under src/installer as that\u0027s where they lived before repository consolidation (core-setup repo). I propose moving these components together to common place out of src/installer:\r\n\r\n```\r\nsrc/host\r\n  - Microsoft.NET.HostModel\r\n  - native (+ msbuild entrypoint: corehost.proj)\r\n  - packages\r\n  - tests\r\n  - Solution File (for opening inside VS)\r\n```\r\n\r\nAs the HostModel library isn\u0027t publicly shipping but maintains the contract with the host, it doesn\u0027t belong into libraries as that\u0027s where we ship public APIs from. Aside from that, the host tests require the HostModel library and the HostModel tests aren\u0027t unit tests but end-to-end tests which we currently don\u0027t have under src/libraries.\r\n\r\nI don\u0027t propose to change any of the subset names or the host dependencies (i.e. shared framework packs for testing).\r\n\r\ncc @agocke @vitek-karas @VSadov @jkotas ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSDDFxw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5MTYyNDc4Ng==",
                                           "createdAt":  "2021-03-05T19:14:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nTo my knowledge the host components consist of the native source files, nuget packages, the managed HostModel library and tests. Most of these assets are located under src/installer as that\u0027s where they lived before repository consolidation (core-setup repo). I propose moving these components together to common place out of src/installer:\r\n\r\n```\r\nsrc/host\r\n  - Microsoft.NET.HostModel\r\n  - native (+ msbuild entrypoint: corehost.proj)\r\n  - packages\r\n  - tests\r\n  - Solution File (for opening inside VS)\r\n```\r\n\r\nAs the HostModel library isn\u0027t publicly shipping but maintains the contract with the host, it doesn\u0027t belong into libraries as that\u0027s where we ship public APIs from. Aside from that, the host tests require the HostModel library and the HostModel tests aren\u0027t unit tests but end-to-end tests which we currently don\u0027t have under src/libraries.\r\n\r\nI don\u0027t propose to change any of the subset names or the host dependencies (i.e. shared framework packs for testing).\r\n\r\ncc @agocke @vitek-karas @VSadov @jkotas \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`Discussion`, `area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-03-05T19:14:03Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5NTgxNTY4MA==",
                                           "createdAt":  "2021-03-10T17:50:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Any concerns with the proposal? If not I would start decoupling the components from the src/installer infrastructure and move bits by bits.",
                                           "updatedAt":  "2021-03-10T17:50:53Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5NTgyMTA0MQ==",
                                           "createdAt":  "2021-03-10T17:54:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBi-u8Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "trylek",
                                                                               "createdAt":  "2021-03-10T18:30:08Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkotas",
                                                                               "createdAt":  "2021-03-10T18:33:49Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "VSadov",
                                                                               "createdAt":  "2021-03-10T19:05:11Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "safern",
                                                                               "createdAt":  "2021-03-10T19:24:28Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "The proposal sounds good to me.",
                                           "updatedAt":  "2021-03-10T17:54:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5NTg0NDUzNA==",
                                           "createdAt":  "2021-03-10T18:10:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "VSadov",
                                           "body":  "The native part has been moved recently to `src\\native\\corehost`, since it is a shared component. It is used by Mono too and the singlefile part is used by clr partition build. I think that is where it should be.\r\n\r\nThe rest looks reasonable, but I wonder how much will stay under src\\installer",
                                           "updatedAt":  "2021-03-10T18:10:32Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5NTg2MTExNA==",
                                           "createdAt":  "2021-03-10T18:21:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "The eventual goal is to remove src/installer and have the subfolders under src better match the subset category names (host, packs).",
                                           "updatedAt":  "2021-03-10T18:21:36Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5NTkxODI5NQ==",
                                           "createdAt":  "2021-03-10T19:01:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "VSadov",
                                           "body":  "Yes, that is what I thought. Once host and packs are out, I do not think there is something that belongs to \"installer\".",
                                           "updatedAt":  "2021-03-10T19:01:46Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5NTkyODMwMA==",
                                           "createdAt":  "2021-03-10T19:09:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "Technically, we could keep the `dotnet-host.proj`, `dotnet-hostfxr.proj` , the `dotnet-runtime-prereqs` folder and the bundle project in `src/installer` since they only build installers. Depends on what we want to do.",
                                           "updatedAt":  "2021-03-10T19:09:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5NTk2Mzg4Mg==",
                                           "createdAt":  "2021-03-10T19:33:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e Once host and packs are out, I do not think there is something that belongs to \"installer\".\r\n\r\nAbsolutely. That\u0027s tracked via https://github.com/dotnet/runtime/issues/49428.\r\n\r\n\u003e Technically, we could keep the dotnet-host.proj, dotnet-hostfxr.proj , the dotnet-runtime-prereqs folder and the bundle project in src/installer since they only build installers. Depends on what we want to do.\r\n\r\nThat discussion probably belongs into https://github.com/dotnet/runtime/issues/49426. I would be fine to keep it as-is (installers as part of packs) for simplicity.\r\n\r\n\u003e The native part has been moved recently to src\\native\\corehost, since it is a shared component. It is used by Mono too and the singlefile part is used by clr partition build. I think that is where it should be.\r\n\r\nWe usually group sources in dotnet/runtime by component and less by language (i.e. src/libraries/*, coreclr, mono, tasks). The existing `src\\native\\corehost` folder would be renamed to `src\\host\\native` which wouldn\u0027t prevent it from being a shared component, nor indicate that these files aren\u0027t shared components. Thoughts?",
                                           "updatedAt":  "2021-03-10T19:33:06Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5NjA2NDMxMA==",
                                           "createdAt":  "2021-03-10T20:38:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e We usually group sources in dotnet/runtime by component and less by language \r\n\r\nWe do not have one unifying scheme how to group sources together. It is not unusual to see sources grouped by language - `src/libraries/native` is example of such grouping. Or to group shared or common sources used from more than one place - `src/libraries/Common`, `src/coreclr/tools/Common` or `src/native` are examples of such groupings.\r\n\r\n\u003e  The existing src\\native\\corehost folder would be renamed to src\\host\\native which wouldn\u0027t prevent it from being a shared component\r\n\r\nI agree that it would not hurt, but I do not see it helping much either.",
                                           "updatedAt":  "2021-03-10T20:38:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5NjA5MTEwNA==",
                                           "createdAt":  "2021-03-10T20:56:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e We do not have one unifying scheme how to group sources together. It is not unusual to see sources grouped by language - src/libraries/native is example of such grouping. Or to group shared or common sources used from more than one place - src/libraries/Common, src/coreclr/tools/Common or src/native are examples of such groupings.\r\n\r\nPutting the first time contributor hat on I would say it\u0027s highly confusing that a \"src/native\" folder exists. It suggests that it contains the native source files of the repository even though it only contains a very limited set of it. Even though we might not be consistent today doesn\u0027t mean we shouldn\u0027t strive towards a consistent scheme.\r\n\r\n\u003e src/libraries/native\r\n\r\nThe native folder under libraries actually made perfect sense as it was the home of all native code in CoreFx before repositories were consolidated. IMO it doesn\u0027t make much sense anymore in it\u0027s current form.\r\n\r\n\u003e Or to group shared or common sources used from more than one place - src/libraries/Common, src/coreclr/tools/Common or src/native are examples of such groupings.\r\n\r\nAbsolutely agree on the necessity of shared source folders. The first two examples make perfect sense as their paths clearly indicate which component their shared sources belong.",
                                           "updatedAt":  "2021-03-10T20:56:22Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5NjE1MzMwMg==",
                                           "createdAt":  "2021-03-10T21:33:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e Even though we might not be consistent today doesn\u0027t mean we shouldn\u0027t strive towards a consistent scheme.\r\n\r\nAgree. I think we may want to work towards gradually moving all native code from the whole repo under `src/native`. Questions like this come up in number of discussion, e.g. https://github.com/dotnet/runtime/pull/47639#discussion_r582500870 \r\n\r\n\u003e The native folder under libraries actually made perfect sense as it was the home of all native code in CoreFx before repositories were consolidated. IMO it doesn\u0027t make much sense anymore in it\u0027s current form.\r\n\r\nWhat would make more sense in the current repo in your opinion? ",
                                           "updatedAt":  "2021-03-10T21:33:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5NjE3OTI1NQ==",
                                           "createdAt":  "2021-03-10T21:49:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "eerhardt",
                                           "body":  "\u003e\u003e The existing src\\native\\corehost folder would be renamed to src\\host\\native which wouldn\u0027t prevent it from being a shared component\r\n\r\n\u003e I agree that it would not hurt, but I do not see it helping much either.\r\n\r\nThe reason I would think `src/host` makes sense is because I would expect all the assets related to the \"host\" would be in one spot:\r\n\r\n* corehost C code\r\n* Packaging logic for the host NuGet packages\r\n* Microsoft.NET.HostModel C# code\r\n* Tests\r\n\r\nSplitting these assets across top-level folders would be confusing IMO.\r\n\r\nIf you wanted to have both `src/host` (for most of the host assets) and `src/native/corehost` (for the corehost C code), I guess that could work. Is the thinking that the `corehost` C code would be shared with something else? If yes, what? My thinking is that `coreclr` and `mono` are self-contained. And `host` would \"live on top\" of them, just like `libraries` does today.",
                                           "updatedAt":  "2021-03-10T21:49:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5NjE4MDkyNg==",
                                           "createdAt":  "2021-03-10T21:50:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "With the single-file host, the separation between the various groups of native code has kind of blurred.",
                                           "updatedAt":  "2021-03-10T21:50:32Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5NjIyMjc4MA==",
                                           "createdAt":  "2021-03-10T22:20:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vitek-karas",
                                           "body":  "We could in theory look at single-file host as just a packaging thing. It in itself actually introduces only a small amount of special code. For the most part it\u0027s just a different way how to package our assets. It\u0027s not that different from runtime installer, or runtime pack.\r\n\r\nI personally would also prefer organizing the code by the feature (host, runtime, libraries, ...) and not the language it\u0027s written in.",
                                           "updatedAt":  "2021-03-10T22:20:47Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5OTU3NzIyMQ==",
                                           "createdAt":  "2021-03-15T16:53:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e What would make more sense in the current repo in your opinion?\r\n\r\nIf we already have the `src/native` folder, I would just move everything which is shared into it. For anything else that is distinct (ie https://github.com/dotnet/runtime/tree/main/src/libraries/Native/Windows/System.IO.Compression.Native) would it make sense to move them next to managed component? If that isn\u0027t feasible (ie necessity of build wrapper scripts per component), should we just move everything into src/native?\r\n\r\n\u003e We could in theory look at single-file host as just a packaging thing. It in itself actually introduces only a small amount of special code. For the most part it\u0027s just a different way how to package our assets. It\u0027s not that different from runtime installer, or runtime pack.\r\n\r\nI\u0027m not exactly what you mean by that. Could you please elaborate? ",
                                           "updatedAt":  "2021-03-15T16:53:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5OTU4NzYyOQ==",
                                           "createdAt":  "2021-03-15T17:07:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e necessity of build wrapper scripts per component\r\n\r\nIt is doable, but pain to maintain.\r\n\r\n\u003e should we just move everything into src/native?\r\n\r\nRight, that was my thinking.",
                                           "updatedAt":  "2021-03-15T17:07:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41VfHd",
                                           "createdAt":  "2021-08-08T16:53:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "Another library `Microsoft.NETCore.Platforms` from core-setup repo was moved under src/libraries. From MSBuild restore perspective, it has similar constraints as HostModel. If HostModel is moved under src/libraries, it wouldn\u0027t be too strange compared to other *more stranger* stuff we have in that directory. The only thing we need to care about is \u003ckbd\u003ewhen\u003c/kbd\u003e do we run its tests. That can be remain tied to `host.tests` and `packs.tests` subsets.\r\n\r\nI was able to do the mechanical work for it in commit \u0027Move HostModel under src/libraries\u0027 in: https://github.com/dotnet/runtime/compare/main...am11:feature/hostmodel-move, which is rebased on branch of PR #57036.\r\n\r\nThe benefit, IMO, is that this approach makes \u0027host packages\u0027 very independent and we can then rename `src/installer` to `src/hostpacks` or `src/packs` (something that resembles its subset name: `packs`). This folder will only left with bunch of proj/pkgproj files and give us a chance to rehash various properties/targets which is gluing together miscellaneous stuff.",
                                           "updatedAt":  "2021-08-08T16:53:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41VgC9",
                                           "createdAt":  "2021-08-08T17:23:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e I was able to do the mechanical work for it in commit \u0027Move HostModel under src/libraries\u0027 in: main...am11:feature/hostmodel-move, which is rebased on branch of PR #57036.\r\n\r\nIMO it makes more sense to have everything host related under `src/host`.",
                                           "updatedAt":  "2021-08-08T17:23:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41VgW7",
                                           "createdAt":  "2021-08-08T17:35:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "\u003e everything host related under `src/host`.\r\n\r\nby just renaming `src/installer` to `src/host`? (since besides hostmodel+tests and pkgs, there is nothing else left in that directory)\r\n\r\nOK. I was thinking it a little bit differently; we already reference src/installer/pkg in src/libraries so in a sense they are not decoupled anyway. Which is why I thought a library project with src+tests is best suited under libraries rather than one off exception (that seldom gets maintenance updates).",
                                           "updatedAt":  "2021-08-08T17:35:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41VhZT",
                                           "createdAt":  "2021-08-08T18:09:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB1kOiQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2021-08-09T09:52:36Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e by just renaming src/installer to src/host? (since besides hostmodel+tests and pkgs, there is nothing else left in that directory)\r\n\r\nNo, I still believe that the proposal in the top post makes sense. The remaining part of src/installer which is the shared framework and the publishing logic is tracked by https://github.com/dotnet/runtime/issues/49428.",
                                           "updatedAt":  "2021-08-08T18:09:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41WihZ",
                                           "createdAt":  "2021-08-09T10:06:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "@ViktorHofer, it makes sense to me as well. 🙂\r\nSince corehost (native project) is now under src/native, what do you think about a slight modification to the proposed structure:\r\n\r\n```yaml\r\nsrc/host\r\n  - Microsoft.NET.HostModel\r\n    - src/\r\n    - tests/\r\n  - packages\r\n  - Solution File (for opening inside VS)\r\n```\r\n\r\nthe prerequisites for `Solution File` to successfully build in VS / with MSBuild will continue to be coreclr and/or mono, libs and host.native subsets are built first. I think it is a similar prereq as solution files under src/libraries, which interop with src/libraries/Native and require libs.native subset to be built first.",
                                           "updatedAt":  "2021-08-09T10:06:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41Wzfr",
                                           "createdAt":  "2021-08-09T12:09:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vitek-karas",
                                           "body":  "Would we also move host tests from `src/installer/tests` to `src/host/tests` then? (It seems it would make sense).\r\nI\u0027m not sure I like the fact that \"host\" source code is NOT in `src/host` if we add it though.",
                                           "updatedAt":  "2021-08-09T12:09:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41W1bD",
                                           "createdAt":  "2021-08-09T12:22:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "\u003e Would we also move host tests from `src/installer/tests` to `src/host/tests` then? (It seems it would make sense).\r\n\r\nYup, it will be either `src/host/{Microsoft.NET.HostModel,tests}` or with the structure we use for other libraries:`src/host/Microsoft.NET.HostModel/{src,tests}`.\r\n\r\n\u003e I\u0027m not sure I like the fact that \"host\" source code is NOT in `src/host` if we add it though.\r\n\r\nIt consists of HostModel\u0027s src, tests, packages and corehost (native). The native bits were moved to neutral place `src/native/corehost` because it is shared with coreclr, mono and host. In terms of subset, corehost mainly builds as part of `host.native`.",
                                           "updatedAt":  "2021-08-09T12:22:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41W-Gn",
                                           "createdAt":  "2021-08-09T13:16:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "I would useful to write down the principle that we are going to use to decided whether a component or a feature area should get its own top-level directory.\r\n\r\nThe host does not look that special to me. I think it would be better to make its tests fit into the existing test structures (either `src/tests` or `libraries/*/tests`).",
                                           "updatedAt":  "2021-08-09T13:16:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41XwI4",
                                           "createdAt":  "2021-08-09T17:51:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e I would useful to write down the principle that we are going to use to decided whether a component or a feature area should get its own top-level directory.\r\n\r\nI agree that we need some clarity on this. Examples are `src/tests` or `src/tasks` which IMO don\u0027t belong there. `src/tests` implies tests for the repo being there where-as only runtime tests can be found there. `src/tasks` was considered the home for repo tasks which are used during the build (and hence need to be restored and built before anything else) and which are by definition non-shipping. In reality many of these tasks are now shipping and because of the lack of build dependencies all tasks are now by default built upfront which is a waste of build time for i.e. non-mobile configurations.\r\n\r\n\u003e The host does not look that special to me. I think it would be better to make its tests fit into the existing test structures (either src/tests or libraries/*/tests).\r\n\r\nWasn\u0027t the host since the incarnation of corefx, coreclr and core-setup special as it only lived in core-setup because of the lack of a better place? It sounds to me that it doesn\u0027t belong into libraries nor into the runtime folders. As we would like to remove the src/installer partition, host related sources need to move to a different location. As the host test end-to-end I don\u0027t think they belong either into the libraries tests or the runtime tests.",
                                           "updatedAt":  "2021-08-09T17:51:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41YIp-",
                                           "createdAt":  "2021-08-09T20:28:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e src/tests implies tests for the repo being there where-as only runtime tests can be found there\r\n\r\nI look at src/tests as the place for everything that is not a pure managed API, where the libraries test setup that is designed for testing pure managed APIs would not work well.\r\n\r\n\u003e Wasn\u0027t the host since the incarnation of corefx, coreclr and core-setup special as it only lived in core-setup because of the lack of a better place?\r\n\r\nYes, the host was special back then. I do not think it is as special in the merged repo.",
                                           "updatedAt":  "2021-08-09T20:28:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41YMCs",
                                           "createdAt":  "2021-08-09T20:48:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCqXp4Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2022-08-10T18:59:50Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "am11",
                                           "body":  "Related to top-level directories, I think src/workloads is also something that probably does not warrant a top-level directory for two project files. (could be under src/mono)",
                                           "updatedAt":  "2021-08-09T20:48:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5IMCax",
                                           "createdAt":  "2022-08-10T18:43:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SamMonoRT",
                                           "body":  "@trylek - does your test consolidation work have any effect on any of the above discussion? At this point moving to 8.0.0 to avoid any stability issues so late in the cycle.",
                                           "updatedAt":  "2022-08-10T18:43:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5IMMXH",
                                           "createdAt":  "2022-08-10T19:19:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCqX2Sg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "SamMonoRT",
                                                                               "createdAt":  "2022-08-10T19:35:32Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "trylek",
                                           "body":  "@SamMonoRT - I think this discussion is mostly unrelated to the pending test consolidation which only deals with runtime (CoreCLR \u0026 Mono) tests, not hosting tests.",
                                           "updatedAt":  "2022-08-10T19:19:36Z"
                                       }
                                   ],
                         "totalCount":  29
                     },
        "title":  "Move host components out of installer into a common location",
        "labels":  [
                       "discussion",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/49426",
        "createdAt":  "2021-03-10T11:54:46Z",
        "number":  49426,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-28T18:25:36Z",
        "body":  "Simliar to https://github.com/dotnet/runtime/issues/49233, there\u0027s value in moving the shared framework packages out of src/installer/packages/sfx/ into a common location, i.e. src/packs. A few benefits of doing that are:\r\n- Better mapping between subsets and source code (`packs` subset refers to the physical sfx location: src/packs)\r\n- Removal of the obsolete installer (previously called core-setup) infrastructure after sfx and host move\r\n\r\ncc @NikolaMilosavljevic @jkoritzinsky ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOL2d2Dw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5NTMwOTU4Mw==",
                                           "createdAt":  "2021-03-10T11:54:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nSimliar to https://github.com/dotnet/runtime/issues/49233, there\u0027s value in moving the shared framework packages out of src/installer/packages/sfx/ into a common location, i.e. src/packs. A few benefits of doing that are:\r\n- Better mapping between subsets and source code (`packs` subset refers to the physical sfx location src/packs)\r\n- Removal of the obsolete installer (previously called core-setup) infrastructure after sfx and host move\r\n\r\ncc @NikolaMilosavljevic @jkoritzinsky \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e6.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-03-10T11:54:49Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Move sfx packages out of installer into src/packs",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/49428",
        "createdAt":  "2021-03-10T12:11:15Z",
        "number":  49428,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-09-11T10:05:05Z",
        "body":  "Today, src/installer consists of various assets which are planned to either be removed or moved out of the installer directory:\r\n- [ ] Host including end-to-end tests: https://github.com/dotnet/runtime/issues/49233\r\n- [x] Snaps: https://github.com/dotnet/runtime/issues/49374\r\n- [ ] Shared Framework packages: https://github.com/dotnet/runtime/issues/49426\r\n- [ ] Publishing: https://github.com/dotnet/arcade/issues/8889\r\n\r\nThis issue tracks the completion of the sub-tasks and the final removal of the src/installer directory and its custom infrastructure.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOL2e6kg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc5NTMyNzEyMg==",
                                           "createdAt":  "2021-03-10T12:11:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nToday, src/installer consists of various assets which are planned to either be removed or moved out of the installer directory:\r\n- [ ] Host including end-to-end tests: https://github.com/dotnet/runtime/issues/49233\r\n- [ ] Snaps: https://github.com/dotnet/runtime/issues/49374\r\n- [ ] Shared Framework packages: https://github.com/dotnet/runtime/issues/49426\r\n- [ ] Publishing: https://github.com/dotnet/core-eng/issues/12289\r\n\r\nThis issue tracks the completion of the sub-tasks and the final removal of the src/installer directory and its custom infrastructure.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e6.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-03-10T12:11:19Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Remove src/installer (core-setup) umbrella in favor of distinct components",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/49753",
        "createdAt":  "2021-03-17T13:06:09Z",
        "number":  49753,
        "author":  "antonfirsov",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBjzQpA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ManickaP",
                                            "createdAt":  "2021-03-17T14:27:24Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2021-03-24T17:37:09Z",
        "body":  "The logic inside the tool used to auto-generate `.dockerignore` seems to be simple. Instead of maintaining a `.dockerfile`  it might worth to inline it into our scripts to and auto-generate it on every build.\r\n\r\nhttps://github.com/LinusU/gitignore-to-dockerignore/blob/master/index.js\r\n\r\n/cc @ManickaP @eiriktsarpalis @ViktorHofer @wfurt ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOL79Lzg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgwMTA2NTY3MA==",
                                           "createdAt":  "2021-03-17T13:06:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-03-17T13:06:15Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgwMTA2NTkzNA==",
                                           "createdAt":  "2021-03-17T13:06:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThe logic inside the tool used to auto-generate `.dockerignore` seems to be simple. Instead of maintaining a `.dockerfile`  it might worth to inline it into our scripts to and auto-generate it on every build.\r\n\r\nhttps://github.com/LinusU/gitignore-to-dockerignore/blob/master/index.js\r\n\r\n/cc @ManickaP @eiriktsarpalis @ViktorHofer @wfurt \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eantonfirsov\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-03-17T13:06:43Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Consider auto-generating .dockerignore in build-docker-sdk.sh/ps1",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/50110",
        "createdAt":  "2021-03-23T17:23:31Z",
        "number":  50110,
        "author":  "safern",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-08-17T18:43:12Z",
        "body":  "In the beginning we added some legs in the dev-innerloop pipeline to protect developer workflow that wasn\u0027t exercised in CI, i.e: `build.cmd libs+mono`. However, we added mobile platforms to the main pipeline or `runtime-staging` that exercise some of this scenarios, so we can remove them from `dev-innerloop` and save some machine time there.\r\n\r\nTis is from: https://github.com/dotnet/runtime/pull/50102#discussion_r599716180",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSDAUnA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgwNTA4NTk1Mg==",
                                           "createdAt":  "2021-03-23T17:23:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-03-23T17:23:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgwNTA4NjM3MA==",
                                           "createdAt":  "2021-03-23T17:24:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nIn the beginning we added some legs in the dev-innerloop pipeline to protect developer workflow that wasn\u0027t exercised in CI, i.e: `build.cmd libs+mono`. However, we added mobile platforms to the main pipeline or `runtime-staging` that exercise some of this scenarios, so we can remove them from `dev-innerloop` and save some machine time there.\r\n\r\nTis is from: https://github.com/dotnet/runtime/pull/50102#discussion_r599716180\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003esafern\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003esafern\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-03-23T17:24:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5IMBSc",
                                           "createdAt":  "2022-08-10T18:39:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SamMonoRT",
                                           "body":  "Moving to 8.0.0",
                                           "updatedAt":  "2022-08-10T18:39:46Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Cleanup dev-innerloop pipeline to remove legs that are no longer needed to be exercised there",
        "labels":  [
                       "help wanted",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/50127",
        "createdAt":  "2021-03-23T21:04:59Z",
        "number":  50127,
        "author":  "trylek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-07-12T16:38:19Z",
        "body":  "As part of the switch-over from Crossgen1 to Crossgen2 we should start running regular library test runs over CG2-compiled framework to catch potential regressions or issues. We should update the library test build scripts to optionally support CG2 compilation of framework assemblies, add the corresponding support to the YAML scripts and define a new type of run leveraging this functionality to run library tests over CG2-compiled framework. For now I would run them on a daily basis; if they turn out to be stable enough, we may consider switching some of the library tests in PR runs to work this this too.\r\n\r\n/cc @dotnet/runtime-infrastructure, @dotnet/crossgen-contrib ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOYVOTWw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgwNTI1OTI1MQ==",
                                           "createdAt":  "2021-03-23T21:05:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @Anipik, @safern, @ViktorHofer\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nAs part of the switch-over from Crossgen1 to Crossgen2 we should start running regular library test runs over CG2-compiled framework to catch potential regressions or issues. We should update the library test build scripts to optionally support CG2 compilation of framework assemblies, add the corresponding support to the YAML scripts and define a new type of run leveraging this functionality to run library tests over CG2-compiled framework. For now I would run them on a daily basis; if they turn out to be stable enough, we may consider switching some of the library tests in PR runs to work this this too.\r\n\r\n/cc @dotnet/runtime-infrastructure, @dotnet/crossgen-contrib \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003etrylek\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003etrylek\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e6.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-03-23T21:05:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41Os9E",
                                           "createdAt":  "2021-08-04T23:40:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Anipik",
                                           "body":  "@trylek can we move this to 7.0.0 ?",
                                           "updatedAt":  "2021-08-04T23:40:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41PIBf",
                                           "createdAt":  "2021-08-05T04:35:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB1MIdA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "trylek",
                                                                               "createdAt":  "2021-08-05T07:16:47Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "davidwrighton",
                                           "body":  "Yes. We\u0027re not going to do this in the 6.0 timeframe.",
                                           "updatedAt":  "2021-08-05T04:35:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GHxuv",
                                           "createdAt":  "2022-07-06T16:42:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "carlossanlop",
                                           "body":  "@trylek @danmoseley do we still want to do this in 7.0 or should we move it to 8.0?",
                                           "updatedAt":  "2022-07-06T16:42:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GH_wx",
                                           "createdAt":  "2022-07-06T17:38:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "I don\u0027t think this is strictly necessary in 7.0. It\u0027s kind of nice to have but, as it\u0027s an infrastructure change, it doesn\u0027t need to be tightly coupled with a particular release. In fact I believe this to be the perfect candidate for a quality week project.",
                                           "updatedAt":  "2022-07-06T17:38:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hU5Nb",
                                           "createdAt":  "2023-07-12T16:38:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nAs part of the switch-over from Crossgen1 to Crossgen2 we should start running regular library test runs over CG2-compiled framework to catch potential regressions or issues. We should update the library test build scripts to optionally support CG2 compilation of framework assemblies, add the corresponding support to the YAML scripts and define a new type of run leveraging this functionality to run library tests over CG2-compiled framework. For now I would run them on a daily basis; if they turn out to be stable enough, we may consider switching some of the library tests in PR runs to work this this too.\r\n\r\n/cc @dotnet/runtime-infrastructure, @dotnet/crossgen-contrib \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003etrylek\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003etrylek\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003eFuture\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-07-12T16:38:18Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "Implement support for library tests using CG2-compiled framework and add the corresponding CI run",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/50374",
        "createdAt":  "2021-03-29T17:37:27Z",
        "number":  50374,
        "author":  "CoffeeFlux",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-29T21:15:09Z",
        "body":  "Right now, the defines are unclear, ambiguous, and not all set at the top level of the CMake scripts.\r\n\r\nWe should set `TARGET_DARWIN` for all Aple platforms and `TARGET_MACOS`, `TARGET_IOS`, etc for the specific platform as well. Using `TARGET_OSX` for all Apple platforms is not sustainable long-term, since there are cases where we want behavior on desktop MacOS that is not desired on iOS.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONGFWZw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgwOTU3Mzc1Mw==",
                                           "createdAt":  "2021-03-29T17:37:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-03-29T17:37:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3ODc5NDM0Mw==",
                                           "createdAt":  "2021-07-13T05:37:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nRight now, the defines are unclear, ambiguous, and not all set at the top level of the CMake scripts.\r\n\r\nWe should set `TARGET_DARWIN` for all Aple platforms and `TARGET_MACOS`, `TARGET_IOS`, etc for the specific platform as well. Using `TARGET_OSX` for all Apple platforms is not sustainable long-term, since there are cases where we want behavior on desktop MacOS that is not desired on iOS.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eCoffeeFlux\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `area-PAL-libraries`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e6.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-07-13T05:37:53Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "System.Native should match mono `TARGET_*` defines for Apple platforms",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/50792",
        "createdAt":  "2021-04-06T18:53:09Z",
        "number":  50792,
        "author":  "agocke",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBmXPSg==",
                          "nodes":  [
                                        {
                                            "content":  "HEART",
                                            "user":  "SingleAccretion",
                                            "createdAt":  "2021-04-07T11:48:36Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "AaronRobinsonMSFT",
                                            "createdAt":  "2021-04-08T00:33:52Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2021-04-07T16:33:57Z",
        "body":  "This could be hard to do for every dependency, but each incremental addition is worth a lot in saved time for users.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOMJTDYw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgxNDM2MTk2OA==",
                                           "createdAt":  "2021-04-06T18:53:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-04-06T18:53:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgxNDM2ODU5MQ==",
                                           "createdAt":  "2021-04-06T19:04:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThis could be hard to do for every dependency, but each incremental addition is worth a lot in saved time for users.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eagocke\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-04-06T19:04:16Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgxNTA1NTcxNQ==",
                                           "createdAt":  "2021-04-07T16:33:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@agocke what native dependencies do you think of? We discussed similar in https://github.com/dotnet/runtime/issues/1251.\r\n\r\nAn idea that I just discussed with @hoyosjs is that we could move the prereq check for ninja and cmake into the native build scripts and call them during the restore of the msbuild projects to fail fast.",
                                           "updatedAt":  "2021-04-07T16:33:43Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "System requirements for development should be checked on build",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/52139",
        "createdAt":  "2021-04-30T21:18:36Z",
        "number":  52139,
        "author":  "jkoritzinsky",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBpTjDw==",
                          "nodes":  [
                                        {
                                            "content":  "HEART",
                                            "user":  "SingleAccretion",
                                            "createdAt":  "2021-05-02T09:04:17Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2021-05-05T16:19:29Z",
        "body":  "Today we have partial enforcement across the repo for various formatting standards, and we have some level of IDE integration to make it simple to enforce.\r\n\r\nFor example, we currently enforce formatting with CI checks for Markdown files, C# files outside of the src/coreclr folder, and C++ files in the src/coreclr/jit directory. The C# file format is gated by the local build as well. However, we have minimal tooling to enable easily resolving these formatting issues. The Markdown style errors and the C# errors require manual fixes (or at least any automatic tools for fixing are not documented anywhere). The jit directory uses a custom tool in the dotnet/jitutils directory to download and execute clang-format on all of the files, so either you need to clone and build that repo and run the tool or download the patch file manually from AzDO.\r\n\r\nAdditionally, it is quite common for newcomers to the dotnet/runtime repo who work in areas without the automatic formatting rules to receive dozens of formatting nit comments, which further shows that we have code styles in these other files, but they are just unenforced.\r\n\r\nI propose a multi-pronged approach described below:\r\n\r\n- [ ] Define a code style/styles for the remaining unenforced files in the repo.\r\n- [ ] Enable an in-repo mechanism to pull down formatting tools\r\n   - [ ] Determine which version of clang-format we wish to use (the CoreCLR JIT team currently uses 3.9)\r\n- [ ] Provide out-of-the-box or 1-step-setup support for working formatting integration with various IDEs/editors that our team uses:\r\n   - This includes support for \"Format On Save\" in supporting editors.\r\n   - [ ] Visual Studio Code\r\n   - [ ] Visual Studio\r\n   - [ ] Vim\r\n   - Any additional tools that team members regularly use.\r\n- [ ] Provide a pre-commit hook as part of the \"contributing\" documentation in the repo to enforce formatting before committing to make sure that formatting is correct **before** a PR is opened even for developers who use editors that don\u0027t enforce .\r\n- [ ] Since pre-commit hooks are optional, provide tooling in CI to check formatting errors and automatically add \"suggested changes\" comments with the various formatting changes.\r\n   - This ensures that the comments are easily actionable by the developer.\r\n   - This saves time for the reviewers so they don\u0027t need to worry about style comments since they will be automatically provided.\r\n\r\nWith these items completed, this will enable us to have a more consistent infrastructure and a seamless, mostly invisible, enforcement of our style guidelines. This will assist us in writing more easily readable and consistent code throughout the repo. It will also assist new developers with contributing to the repository for similar reasons.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOMX70RA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMDQwMzY1Mg==",
                                           "createdAt":  "2021-04-30T21:18:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nToday we have partial enforcement across the repo for various formatting standards, and we have some level of IDE integration to make it simple to enforce.\r\n\r\nFor example, we currently enforce formatting with CI checks for Markdown files, C# files outside of the src/coreclr folder, and C++ files in the src/coreclr/jit directory. The C# file format is gated by the local build as well. However, we have minimal tooling to enable easily resolving these formatting issues. The Markdown style errors and the C# errors require manual fixes (or at least any automatic tools for fixing are not documented anywhere). The jit directory uses a custom tool in the dotnet/jitutils directory to download and execute clang-format on all of the files, so either you need to clone and build that repo and run the tool or download the patch file manually from AzDO.\r\n\r\nAdditionally, it is quite common for newcomers to the dotnet/runtime repo who work in areas without the automatic formatting rules to receive dozens of formatting nit comments, which further shows that we have code styles in these other files, but they are just unenforced.\r\n\r\nI propose a multi-pronged approach described below:\r\n\r\n- [ ] Define a code style/styles for the remaining unenforced files in the repo.\r\n- [ ] Enable an in-repo mechanism to pull down formatting tools\r\n   - [ ] Determine which version of clang-format we wish to use (the CoreCLR JIT team currently uses 3.9)\r\n- [ ] Provide out-of-the-box or 1-step-setup support for working formatting integration with various IDEs/editors that our team uses:\r\n   - This includes support for \"Format On Save\" in supporting editors.\r\n   - [ ] Visual Studio Code\r\n   - [ ] Visual Studio\r\n   - [ ] Vim\r\n   - Any additional tools that team members regularly use.\r\n- [ ] Provide a pre-commit hook as part of the \"contributing\" documentation in the repo to enforce formatting before committing to make sure that formatting is correct **before** a PR is opened even for developers who use editors that don\u0027t enforce .\r\n- [ ] Since pre-commit hooks are optional, provide tooling in CI to check formatting errors and automatically add \"suggested changes\" comments with the various formatting changes.\r\n   - This ensures that the comments are easily actionable by the developer.\r\n   - This saves time for the reviewers so they don\u0027t need to worry about style comments since they will be automatically provided.\r\n\r\nWith these items completed, this will enable us to have a more consistent infrastructure and a seamless, mostly invisible, enforcement of our style guidelines. This will assist us in writing more easily readable and consistent code throughout the repo. It will also assist new developers with contributing to the repository for similar reasons.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ejkoritzinsky\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-04-30T21:18:38Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Define standardized formatting and enable seamless tooling/CI integration",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/52201",
        "createdAt":  "2021-05-03T17:58:33Z",
        "number":  52201,
        "author":  "robertpi",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-11-24T12:33:41Z",
        "body":  "### Description\r\n\r\nI can\u0027t build main branch from this repo, as the restore stage fails with various SSL errors:\r\n\r\n```\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.targets(131,5): error : Unable to load the service index for source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public/nuget/v3/index.json. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\6.0.0-beta.21222.1\\tools\\Tools.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.targets(131,5): error :   The SSL connection could not be established, see inner exception. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\6.0.0-beta.21222.1\\tools\\Tools.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.targets(131,5): error :   Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host.. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\6.0.0-beta.21222.1\\tools\\Tools.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.targets(131,5): error :   An existing connection was forcibly closed by the remote host. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\6.0.0-beta.21222.1\\tools\\Tools.proj]\r\n```\r\n\r\nI the error messages is not always the sames, so it does look like a network issue, but could conceivably be something I\u0027m doing wrong too.\r\n\r\n### Configuration\r\n\r\n* Which version of .NET is the code running on?\r\n\r\n```\r\n\u003edotnet --list-sdks\r\nC:\\code\\runtime\\.dotnet\r\n6.0.100-preview.2.21155.3 [C:\\code\\runtime\\.dotnet\\sdk]\r\n\r\nc:\\code\r\n\u003edotnet --list-sdks\r\n2.1.815 [C:\\Program Files\\dotnet\\sdk]\r\n2.2.207 [C:\\Program Files\\dotnet\\sdk]\r\n3.0.103 [C:\\Program Files\\dotnet\\sdk]\r\n3.1.114 [C:\\Program Files\\dotnet\\sdk]\r\n5.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n```\r\n\r\n\r\n* What OS and version, and what distro if applicable?\r\n\r\nWindows 10 -10.0.19042 Build 19042\r\n\r\n* What is the architecture (x64, x86, ARM, ARM64)?\r\n\r\nx64\r\n\r\n\r\n### Regression?\r\n\r\nThis is the first time I\u0027ve attempted to build on this laptop\u003c\r\n\r\n### Other information\r\n\r\nI noticed it looks similar to this issue: https://github.com/dotnet/runtime/issues/52053 , but I don\u0027t think it\u0027s the same issue as the download of the initial sdk seems to work okay.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONF54Wg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMTQyODE3MA==",
                                           "createdAt":  "2021-05-03T17:58:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-05-03T17:58:37Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMTUzOTU3Mw==",
                                           "createdAt":  "2021-05-03T21:16:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\r\n\r\nI can\u0027t build main branch from this repo, as the restore stage fails with various SSL errors:\r\n\r\n```\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.targets(131,5): error : Unable to load the service index for source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public/nuget/v3/index.json. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\6.0.0-beta.21222.1\\tools\\Tools.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.targets(131,5): error :   The SSL connection could not be established, see inner exception. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\6.0.0-beta.21222.1\\tools\\Tools.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.targets(131,5): error :   Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host.. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\6.0.0-beta.21222.1\\tools\\Tools.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.targets(131,5): error :   An existing connection was forcibly closed by the remote host. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\6.0.0-beta.21222.1\\tools\\Tools.proj]\r\n```\r\n\r\nI the error messages is not always the sames, so it does look like a network issue, but could conceivably be something I\u0027m doing wrong too.\r\n\r\n### Configuration\r\n\r\n* Which version of .NET is the code running on?\r\n\r\n```\r\n\u003edotnet --list-sdks\r\nC:\\code\\runtime\\.dotnet\r\n6.0.100-preview.2.21155.3 [C:\\code\\runtime\\.dotnet\\sdk]\r\n\r\nc:\\code\r\n\u003edotnet --list-sdks\r\n2.1.815 [C:\\Program Files\\dotnet\\sdk]\r\n2.2.207 [C:\\Program Files\\dotnet\\sdk]\r\n3.0.103 [C:\\Program Files\\dotnet\\sdk]\r\n3.1.114 [C:\\Program Files\\dotnet\\sdk]\r\n5.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n```\r\n\r\n\r\n* What OS and version, and what distro if applicable?\r\n\r\nWindows 10 -10.0.19042 Build 19042\r\n\r\n* What is the architecture (x64, x86, ARM, ARM64)?\r\n\r\nx64\r\n\r\n\r\n### Regression?\r\n\r\nThis is the first time I\u0027ve attempted to build on this laptop\u003c\r\n\r\n### Other information\r\n\r\nI noticed it looks similar to this issue: https://github.com/dotnet/runtime/issues/52053 , but I don\u0027t think it\u0027s the same issue as the download of the initial sdk seems to work okay.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003erobertpi\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-05-03T21:16:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMTU0Mjc1MA==",
                                           "createdAt":  "2021-05-03T21:19:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "~Dupe of #51640. When you update to preview 3 like in #52196, the issue should go away. Feel free to comment if this doesn\u0027t work and I\u0027ll reopen.~",
                                           "updatedAt":  "2021-05-03T21:38:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMTU0MzY0Mw==",
                                           "createdAt":  "2021-05-03T21:20:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBpcIhA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "hoyosjs",
                                                                               "createdAt":  "2021-05-03T21:38:33Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Wasn\u0027t that linux only @hoyosjs ?",
                                           "updatedAt":  "2021-05-03T21:20:59Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMTU0NDkxMQ==",
                                           "createdAt":  "2021-05-03T21:23:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "#51640 was with package signing, this appears to be happen earlier than that, when Nuget is connecting to AzDo feed. \r\n\r\n\u003e I noticed it looks similar to this issue: #52053 , but I don\u0027t think it\u0027s the same issue as the download of the initial sdk seems to work okay.\r\n\r\nDownload of the initial SDK doesn\u0027t happen through latest .NET runtime, it [uses PowerShell](https://github.com/dotnet/runtime/blob/01b7e73cd378145264a7cb7a09365b41ed42b240/eng/common/tools.ps1) which will use .NETFramework in OS.  It could be the same issue.  cc @dotnet/ncl ",
                                           "updatedAt":  "2021-05-03T21:28:07Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMTU1MTUzOQ==",
                                           "createdAt":  "2021-05-03T21:37:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "Indeed. My bad, I somehow read the message and missed the path completely. This seems like a rude closed connection. The only thing that I could find around this is https://developercommunity.visualstudio.com/t/deployment-failing-in-release-pipeline-1/932190 and https://github.com/microsoft/azure-pipelines-tasks/issues/12444#issuecomment-593517116. Not sure if it applies as I don\u0027t see a TLS version warning on yours, but this is easy to check.",
                                           "updatedAt":  "2021-05-03T21:38:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMTcwODMwOQ==",
                                           "createdAt":  "2021-05-04T06:19:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "robertpi",
                                           "body":  "I checked that I\u0027m using a recent version of powershell, it seems it meets the minimum specified:\r\n\r\n```\r\nPS C:\\Users\\rober\u003e $PSVersionTable.PSVersion\r\n\r\nMajor  Minor  Build  Revision\r\n-----  -----  -----  --------\r\n5      1      19041  906\r\n```\r\n\r\nI also entered the following values into my registry:\r\n\r\n```\r\nWindows Registry Editor Version 5.00\r\n\r\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Microsoft\\.NETFramework\\v2.0.50727]\r\n\"SystemDefaultTlsVersions\"=dword:00000001\r\n\"SchUseStrongCrypto\"=dword:00000001\r\n\r\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Microsoft\\.NETFramework\\v4.0.30319]\r\n\"SystemDefaultTlsVersions\"=dword:00000001\r\n\"SchUseStrongCrypto\"=dword:00000001\r\n\r\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\.NETFramework\\v2.0.50727]\r\n\"SystemDefaultTlsVersions\"=dword:00000001\r\n\"SchUseStrongCrypto\"=dword:00000001\r\n\r\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319]\r\n\"SystemDefaultTlsVersions\"=dword:00000001\r\n\"SchUseStrongCrypto\"=dword:00000001\r\n```\r\n\r\nThis didn\u0027t seem to make any difference.\r\n\r\nIf I try to manually download the url causing an issue, it seems to work fine:\r\n```\r\nPS C:\\Users\\rober\u003e (New-Object System.Net.WebClient).DownloadString(\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public/nuget/v3/index.json\")\r\n{\"@context\":{\"@vocab\":\"http://schema.nuget.org/services#\",\"comment\":\"http://www.w3.org/2000/01/rdf-schema#comment\",\"label\":\"http://www.w3.org/2000/01/rdf-schema#label\"},\"resources\":[{\"@id\":\"https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c ...\r\n```\r\n\r\n",
                                           "updatedAt":  "2021-05-04T06:19:42Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMTc3OTI3OQ==",
                                           "createdAt":  "2021-05-04T08:43:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "robertpi",
                                           "body":  "I decided to check with fiddle which URLs were failing, but this seemed to cause the error message to change, to variations of the following:\r\n\r\n```\r\nc:\\code\\runtime\r\n\u003ebuild.cmd -Restore\r\n  Determining projects to restore...\r\n  Tool \u0027coverlet.console\u0027 (version \u00271.7.2\u0027) was restored. Available commands: coverlet\r\n  Tool \u0027dotnet-reportgenerator-globaltool\u0027 (version \u00274.5.8\u0027) was restored. Available commands: reportgenerator\r\n  Tool \u0027microsoft.dotnet.xharness.cli\u0027 (version \u00271.0.0-prerelease.21227.1\u0027) was restored. Available commands: xharness\r\n  Tool \u0027microsoft.visualstudio.slngen.tool\u0027 (version \u00275.0.5\u0027) was restored. Available commands: slngen\r\n\r\n  Restore was successful.\r\n  Failed to download package \u0027Microsoft.DotNet.SignTool.6.0.0-beta.21222.1\u0027 from \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/1a5f89f6-d8da-4080-b15f-242650c914a8/nuget/v3/flat2/microsoft.dotnet.signtool/6.0.0-beta.21222.1/microsoft.dotnet.signtool.6.0.0-beta.21222.1.nupkg\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Failed to download package \u0027Microsoft.DotNet.SignTool.6.0.0-beta.21222.1\u0027 from \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/1a5f89f6-d8da-4080-b15f-242650c914a8/nuget/v3/flat2/microsoft.dotnet.signtool/6.0.0-beta.21222.1/microsoft.dotnet.signtool.6.0.0-beta.21222.1.nupkg\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/azure-public/3ccf6661-f8ce-4e8a-bb2e-eff943ddd3c7/_packaging/58ca65bb-e6c1-4210-88ac-fa55c1cd7877/nuget/v3/flat2/microsoft.dotnet.build.tasks.packaging/index.json\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2/microsoft.dotnet.build.tasks.feed/index.json\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/1a5f89f6-d8da-4080-b15f-242650c914a8/nuget/v3/flat2/microsoft.dotnet.packagevalidation/index.json\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/flat2/microsoft.dotnet.packagevalidation/index.json\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/c9f8ac11-6bd8-4926-8306-f075241547f7/nuget/v3/flat2/microsoft.dotnet.packagevalidation/index.json\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/flat2/microsoft.dotnet.build.tasks.feed/index.json\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/flat2/microsoft.dotnet.versiontools.tasks/index.json\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/azure-public/3ccf6661-f8ce-4e8a-bb2e-eff943ddd3c7/_packaging/58ca65bb-e6c1-4210-88ac-fa55c1cd7877/nuget/v3/flat2/microsoft.dotnet.build.tasks.feed/index.json\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2/microsoft.dotnet.versiontools.tasks/index.json\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/1a5f89f6-d8da-4080-b15f-242650c914a8/nuget/v3/flat2/microsoft.dotnet.packagevalidation/index.json\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/c9f8ac11-6bd8-4926-8306-f075241547f7/nuget/v3/flat2/microsoft.dotnet.packagevalidation/index.json\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/azure-public/3ccf6661-f8ce-4e8a-bb2e-eff943ddd3c7/_packaging/58ca65bb-e6c1-4210-88ac-fa55c1cd7877/nuget/v3/flat2/microsoft.dotnet.build.tasks.feed/index.json\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/flat2/microsoft.dotnet.versiontools.tasks/index.json\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.targets(131,5): error : Failed to retrieve information about \u0027Microsoft.DotNet.PackageValidation\u0027 from remote source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/1a5f89f6-d8da-4080-b15f-242650c914a8/nuget/v3/flat2/microsoft.dotnet.packagevalidation/index.json\u0027. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\6.0.0-beta.21222.1\\tools\\Tools.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.targets(131,5): error :   The SSL connection could not be established, see inner exception. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\6.0.0-beta.21222.1\\tools\\Tools.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.targets(131,5): error :   Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host.. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\6.0.0-beta.21222.1\\tools\\Tools.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.targets(131,5): error :   An existing connection was forcibly closed by the remote host. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\6.0.0-beta.21222.1\\tools\\Tools.proj]\r\n\r\nBuild FAILED.\r\n\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.targets(131,5): error : Failed to retrieve information about \u0027Microsoft.DotNet.PackageValidation\u0027 from remote source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/1a5f89f6-d8da-4080-b15f-242650c914a8/nuget/v3/flat2/microsoft.dotnet.packagevalidation/index.json\u0027. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\6.0.0-beta.21222.1\\tools\\Tools.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.targets(131,5): error :   The SSL connection could not be established, see inner exception. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\6.0.0-beta.21222.1\\tools\\Tools.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.targets(131,5): error :   Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host.. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\6.0.0-beta.21222.1\\tools\\Tools.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.targets(131,5): error :   An existing connection was forcibly closed by the remote host. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\6.0.0-beta.21222.1\\tools\\Tools.proj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:04.98\r\nBuild failed with exit code 1. Check errors above.\r\nSome builds failed:\r\n        Configuration: Debug, Architecture: x64\r\n```\r\n\r\nI noticed that while some failures were for .json index files, others where for actual nuget packages, for example: `https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/1a5f89f6-d8da-4080-b15f-242650c914a8/nuget/v3/flat2/microsoft.dotnet.signtool/6.0.0-beta.21222.1/microsoft.dotnet.signtool.6.0.0-beta.21222.1.nupkg`. I found I could download these packages manually via Chrome, which seems to have some retry mechanism build in.\r\n\r\nI installed this packages locally via:\r\n\r\n```\r\ndotnet nuget add source C:\\Users\\rober\\AppData\\Local\\PackageManagement\\NuGet\\Packages\r\n\r\nInstall-Package microsoft.dotnet.build.tasks.feed -Scope CurrentUser -Source C:\\Users\\rober\\Downloads\\\r\n```\r\n\r\nOnce the following packages were installed locally, the build seems to get a little further:\r\n```\r\nMicrosoft.DotNet.Build.Tasks.Feed.6.0.0-beta.21222.1\r\nMicrosoft.DotNet.Build.Tasks.Packaging.6.0.0-beta.21222.1\r\nMicrosoft.DotNet.PackageValidation.6.0.0-beta.21222.1\r\nMicrosoft.DotNet.SignTool.6.0.0-beta.21222.1\r\nMicrosoft.DotNet.VersionTools.Tasks.6.0.0-beta.21222.1\r\n```\r\n\r\nHowever the build still fails with this error:\r\n\r\n```\r\nc:\\code\\runtime\r\n\u003ebuild.cmd -Restore\r\n  Determining projects to restore...\r\n  Tool \u0027coverlet.console\u0027 (version \u00271.7.2\u0027) was restored. Available commands: coverlet\r\n  Tool \u0027dotnet-reportgenerator-globaltool\u0027 (version \u00274.5.8\u0027) was restored. Available commands: reportgenerator\r\n  Tool \u0027microsoft.dotnet.xharness.cli\u0027 (version \u00271.0.0-prerelease.21227.1\u0027) was restored. Available commands: xharness\r\n  Tool \u0027microsoft.visualstudio.slngen.tool\u0027 (version \u00275.0.5\u0027) was restored. Available commands: slngen\r\n\r\n  Restore was successful.\r\n  All projects are up-to-date for restore.\r\n  Determining projects to restore...\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error : The result \"\" of evaluating the value \"$(DotNetSharedFrameworkTaskFile)\" of the \"AssemblyFile\" attribute in element \u003cUsingTask\u003e is not valid.  C:\\code\\runtime\\src\\libraries\\ref.proj [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, Object[] args) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Shared.ProjectErrorUtilities.VerifyThrowInvalidProject[T1,T2,T3,T4](Boolean condition, String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, T1 arg0, T2 arg1, T3 arg2, T4 arg3) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Execution.TaskRegistry.RegisterTasksFromUsingTaskElement[P,I](ILoggingService loggingService, BuildEventContext buildEventContext, String directoryOfImportingFile, ProjectUsingTaskElement projectUsingTaskXml, TaskRegistry taskRegistry, Expander`2 expander, ExpanderOptions expanderOptions, IFileSystem fileSystem) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Evaluator`4.EvaluateUsingTaskElement(String directoryOfImportingFile, ProjectUsingTaskElement projectUsingTaskElement) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Evaluator`4.Evaluate() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Evaluator`4.Evaluate(IEvaluatorData`4 data, ProjectRootElement root, ProjectLoadSettings loadSettings, Int32 maxNodeCount, PropertyDictionary`1 environmentProperties, ILoggingService loggingService, IItemFactory`2 itemFactory, IToolsetProvider toolsetProvider, ProjectRootElementCacheBase projectRootElementCache, BuildEventContext buildEventContext, ISdkResolverService sdkResolverService, Int32 submissionId, EvaluationContext evaluationContext, Boolean interactive) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Project.ProjectImpl.Reevaluate(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Project.ProjectImpl.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Project.ProjectImpl.ReevaluateIfNecessary(EvaluationContext evaluationContext) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Project.ProjectImpl.Initialize(IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Project.FromFile(String file, ProjectOptions options) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at NuGet.Build.Tasks.Console.MSBuildStaticGraphRestore.\u003c\u003ec__DisplayClass38_1.\u003cLoadProjects\u003eb__0(String path, Dictionary`2 properties, ProjectCollection collection) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.GraphBuilder.ParseProject(ConfigurationMetadata configurationMetadata) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.GraphBuilder.\u003c\u003ec__DisplayClass35_0.\u003cSubmitProjectForParsing\u003eb__0() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at System.Lazy`1.CreateValue() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at System.Lazy`1.get_Value() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.ParallelWorkSet`2.ExecuteWorkItem() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.ParallelWorkSet`2.\u003cCreateProcessorItemTask\u003eb__16_0() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.ParallelWorkSet`2.WaitForAllWorkAndComplete() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.GraphBuilder.FindGraphNodes() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.GraphBuilder.BuildGraph() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.ProjectGraph..ctor(IEnumerable`1 entryPoints, ProjectCollection projectCollection, ProjectInstanceFactoryFunc projectInstanceFactory, Int32 degreeOfParallelism, CancellationToken cancellationToken) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.ProjectGraph..ctor(IEnumerable`1 entryPoints, ProjectCollection projectCollection, ProjectInstanceFactoryFunc projectInstanceFactory) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at NuGet.Build.Tasks.Console.MSBuildStaticGraphRestore.LoadProjects(IEnumerable`1 entryProjects) [C:\\code\\runtime\\Build.proj]\r\n\r\nBuild FAILED.\r\n\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error : The result \"\" of evaluating the value \"$(DotNetSharedFrameworkTaskFile)\" of the \"AssemblyFile\" attribute in element \u003cUsingTask\u003e is not valid.  C:\\code\\runtime\\src\\libraries\\ref.proj [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, Object[] args) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Shared.ProjectErrorUtilities.VerifyThrowInvalidProject[T1,T2,T3,T4](Boolean condition, String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, T1 arg0, T2 arg1, T3 arg2, T4 arg3) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Execution.TaskRegistry.RegisterTasksFromUsingTaskElement[P,I](ILoggingService loggingService, BuildEventContext buildEventContext, String directoryOfImportingFile, ProjectUsingTaskElement projectUsingTaskXml, TaskRegistry taskRegistry, Expander`2 expander, ExpanderOptions expanderOptions, IFileSystem fileSystem) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Evaluator`4.EvaluateUsingTaskElement(String directoryOfImportingFile, ProjectUsingTaskElement projectUsingTaskElement) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Evaluator`4.Evaluate() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Evaluator`4.Evaluate(IEvaluatorData`4 data, ProjectRootElement root, ProjectLoadSettings loadSettings, Int32 maxNodeCount, PropertyDictionary`1 environmentProperties, ILoggingService loggingService, IItemFactory`2 itemFactory, IToolsetProvider toolsetProvider, ProjectRootElementCacheBase projectRootElementCache, BuildEventContext buildEventContext, ISdkResolverService sdkResolverService, Int32 submissionId, EvaluationContext evaluationContext, Boolean interactive) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Project.ProjectImpl.Reevaluate(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Project.ProjectImpl.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Project.ProjectImpl.ReevaluateIfNecessary(EvaluationContext evaluationContext) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Project.ProjectImpl.Initialize(IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Project.FromFile(String file, ProjectOptions options) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at NuGet.Build.Tasks.Console.MSBuildStaticGraphRestore.\u003c\u003ec__DisplayClass38_1.\u003cLoadProjects\u003eb__0(String path, Dictionary`2 properties, ProjectCollection collection) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.GraphBuilder.ParseProject(ConfigurationMetadata configurationMetadata) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.GraphBuilder.\u003c\u003ec__DisplayClass35_0.\u003cSubmitProjectForParsing\u003eb__0() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at System.Lazy`1.CreateValue() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at System.Lazy`1.get_Value() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.ParallelWorkSet`2.ExecuteWorkItem() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.ParallelWorkSet`2.\u003cCreateProcessorItemTask\u003eb__16_0() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.ParallelWorkSet`2.WaitForAllWorkAndComplete() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.GraphBuilder.FindGraphNodes() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.GraphBuilder.BuildGraph() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.ProjectGraph..ctor(IEnumerable`1 entryPoints, ProjectCollection projectCollection, ProjectInstanceFactoryFunc projectInstanceFactory, Int32 degreeOfParallelism, CancellationToken cancellationToken) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.ProjectGraph..ctor(IEnumerable`1 entryPoints, ProjectCollection projectCollection, ProjectInstanceFactoryFunc projectInstanceFactory) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at NuGet.Build.Tasks.Console.MSBuildStaticGraphRestore.LoadProjects(IEnumerable`1 entryProjects) [C:\\code\\runtime\\Build.proj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:11.19\r\nBuild failed with exit code 1. Check errors above.\r\nSome builds failed:\r\n        Configuration: Debug, Architecture: x64\r\n```\r\n\r\nExamining the http requests with fiddler, I see the download of this package fails repeatedly:\r\n\r\n```\r\nGET https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/825db618-e3eb-4426-ba54-b1d6e6c944d8/nuget/v3/flat2/microsoft.dotnet.sharedframework.sdk/index.json HTTP/1.1\r\nHost: pkgs.dev.azure.com\r\nX-NuGet-Session-Id: a18c7270-e1aa-4aeb-bf5a-400b35a64a36\r\nUser-Agent: NuGet Client V3/5.10.0\r\nX-NuGet-Client-Version: 5.10.0\r\nAccept-Language: en-GB\r\nAccept-Encoding: gzip, deflate\r\n\r\n{\"$id\":\"1\",\"innerException\":null,\"message\":\"Can\u0027t find the package \u0027microsoft.dotnet.sharedframework.sdk\u0027 in feed \u0027dotnet6\u0027.\",\"typeName\":\"Microsoft.VisualStudio.Services.NuGet.WebApi.Exceptions.PackageNotFoundException, Microsoft.VisualStudio.Services.NuGet.WebApi\",\"typeKey\":\"PackageNotFoundException\",\"errorCode\":0,\"eventId\":3000}\r\n\r\n```\r\n\r\nSince I have no way to install `microsoft.dotnet.sharedframework.sdk`, I\u0027m not sure how to get any further with this.",
                                           "updatedAt":  "2021-05-04T08:43:31Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMTc4MDcxNA==",
                                           "createdAt":  "2021-05-04T08:45:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "How many SDKs do you currently have installed? In case you have old 2.x or 3.x ones installed, you could try deleting those. Also we are updating the SDK to Preview 3 later today, that might also help you to get further.",
                                           "updatedAt":  "2021-05-04T08:45:55Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMTc5NzI3Mg==",
                                           "createdAt":  "2021-05-04T09:13:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "robertpi",
                                           "body":  "I have quite a few old sdks installed:\r\n\r\n```\r\n\u003edotnet --list-sdks\r\n2.1.815 [C:\\Program Files\\dotnet\\sdk]\r\n2.2.207 [C:\\Program Files\\dotnet\\sdk]\r\n3.0.103 [C:\\Program Files\\dotnet\\sdk]\r\n3.1.114 [C:\\Program Files\\dotnet\\sdk]\r\n5.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n```\r\n\r\nBut I\u0027d be reluctant to remove them, since I need to be able to test with a wide range of frameworks. I don\u0027t really see how it would help, since fiddle seems to show it\u0027s very recent version of nuget that are making the failing requests.\r\n\r\nI just tried building the v5.0.5 tag and that fails with similar issues, which makes me think the problem related to nuget servers supporting this build, although if that\u0027s the case, I don\u0027t really understand why other people aren\u0027t complaining about it.\r\n\r\n",
                                           "updatedAt":  "2021-05-04T09:13:03Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMTgwMTc4MQ==",
                                           "createdAt":  "2021-05-04T09:20:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "I recommended to delete these old SDKs as IIRC @tmds it a similar issues and deleting old SDKs helped him. Maybe you could give it a try and afterwards reinstall the old ones?",
                                           "updatedAt":  "2021-05-04T09:20:19Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMTgyOTI5MA==",
                                           "createdAt":  "2021-05-04T10:08:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "robertpi",
                                           "body":  "I removed all sdks apart from `5.0.101` and tried again.\r\n\r\nWhen I try to build tag v5.0.5, I get this error:\r\n\r\n```\r\n\u003ebuild.cmd -Restore\r\n  Determining projects to restore...\r\n  Tool \u0027coverlet.console\u0027 (version \u00271.7.2\u0027) was restored. Available commands: coverlet\r\n  Tool \u0027dotnet-reportgenerator-globaltool\u0027 (version \u00274.5.8\u0027) was restored. Available commands: reportgenerator\r\n  Tool \u0027microsoft.dotnet.xharness.cli\u0027 (version \u00271.0.0-prerelease.20403.2\u0027) was restored. Available commands: xharness\r\n\r\n  Restore was successful.\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2/microsoft.dotnet.versiontools.tasks/index.json\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2/microsoft.dotnet.build.tasks.feed/index.json\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/flat2/microsoft.dotnet.build.tasks.feed/index.json\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/flat2/microsoft.dotnet.versiontools.tasks/index.json\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2/microsoft.dotnet.versiontools.tasks/index.json\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/flat2/microsoft.dotnet.build.tasks.feed/index.json\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\nC:\\code\\runtime\\.dotnet\\sdk\\5.0.100\\NuGet.targets(131,5): error : Failed to retrieve information about \u0027Microsoft.DotNet.VersionTools.Tasks\u0027 from remote source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2/microsoft.dotnet.versiontools.tasks/index.json\u0027. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.21159.7\\tools\\Tools.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\5.0.100\\NuGet.targets(131,5): error :   The SSL connection could not be established, see inner exception. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.21159.7\\tools\\Tools.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\5.0.100\\NuGet.targets(131,5): error :   Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host.. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.21159.7\\tools\\Tools.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\5.0.100\\NuGet.targets(131,5): error :   An existing connection was forcibly closed by the remote host. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.21159.7\\tools\\Tools.proj]\r\n\r\nBuild FAILED.\r\n\r\nC:\\code\\runtime\\.dotnet\\sdk\\5.0.100\\NuGet.targets(131,5): error : Failed to retrieve information about \u0027Microsoft.DotNet.VersionTools.Tasks\u0027 from remote source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2/microsoft.dotnet.versiontools.tasks/index.json\u0027. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.21159.7\\tools\\Tools.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\5.0.100\\NuGet.targets(131,5): error :   The SSL connection could not be established, see inner exception. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.21159.7\\tools\\Tools.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\5.0.100\\NuGet.targets(131,5): error :   Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host.. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.21159.7\\tools\\Tools.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\5.0.100\\NuGet.targets(131,5): error :   An existing connection was forcibly closed by the remote host. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.21159.7\\tools\\Tools.proj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:00.78\r\nBuild failed.\r\nSome builds failed:\r\n        Configuration: Debug, Architecture: x64\r\n```\r\nIf I try and build the latest main I get:\r\n\r\n```\r\n\u003ebuild.cmd -Restore\r\nGET https://dot.net/v1/dotnet-install.ps1\r\ndotnet-install: Note that the intended use of this script is for Continuous Integration (CI) scenarios, where:\r\ndotnet-install: - The SDK needs to be installed without user interaction and without admin rights.\r\ndotnet-install: - The SDK installation doesn\u0027t need to persist across multiple CI runs.\r\ndotnet-install: To set up a development environment or to run apps, use installers rather than this script. Visit https://dotnet.microsoft.com/download to get the installer.\r\n\r\ndotnet-install: Downloading primary link https://dotnetcli.azureedge.net/dotnet/Sdk/6.0.100-preview.2.21155.3/dotnet-sdk-6.0.100-preview.2.21155.3-win-x64.zip\r\ndotnet-install: Extracting zip from https://dotnetcli.azureedge.net/dotnet/Sdk/6.0.100-preview.2.21155.3/dotnet-sdk-6.0.100-preview.2.21155.3-win-x64.zip\r\ndotnet-install: Adding to current process PATH: \"C:\\code\\runtime\\.dotnet\\\". Note: This change will not be visible if PowerShell was run as a child process.\r\ndotnet-install: Note that the script does not resolve dependencies during installation.\r\ndotnet-install: To check the list of dependencies, go to https://docs.microsoft.com/dotnet/core/install/windows#dependencies\r\ndotnet-install: Installation finished\r\n  Determining projects to restore...\r\n  Tool \u0027coverlet.console\u0027 (version \u00271.7.2\u0027) was restored. Available commands: coverlet\r\n  Tool \u0027dotnet-reportgenerator-globaltool\u0027 (version \u00274.5.8\u0027) was restored. Available commands: reportgenerator\r\n  Tool \u0027microsoft.dotnet.xharness.cli\u0027 (version \u00271.0.0-prerelease.21227.1\u0027) was restored. Available commands: xharness\r\n  Tool \u0027microsoft.visualstudio.slngen.tool\u0027 (version \u00275.0.5\u0027) was restored. Available commands: slngen\r\n\r\n  Restore was successful.\r\n  Restored C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\6.0.0-beta.21222.1\\tools\\Tools.proj (in 571 ms).\r\n  Determining projects to restore...\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error : The result \"\" of evaluating the value \"$(DotNetSharedFrameworkTaskFile)\" of the \"AssemblyFile\" attribute in element \u003cUsingTask\u003e is not valid.  C:\\code\\runtime\\src\\libraries\\ref.proj [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, Object[] args) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Shared.ProjectErrorUtilities.VerifyThrowInvalidProject[T1,T2,T3,T4](Boolean condition, String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, T1 arg0, T2 arg1, T3 arg2, T4 arg3) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Execution.TaskRegistry.RegisterTasksFromUsingTaskElement[P,I](ILoggingService loggingService, BuildEventContext buildEventContext, String directoryOfImportingFile, ProjectUsingTaskElement projectUsingTaskXml, TaskRegistry taskRegistry, Expander`2 expander, ExpanderOptions expanderOptions, IFileSystem fileSystem) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Evaluator`4.EvaluateUsingTaskElement(String directoryOfImportingFile, ProjectUsingTaskElement projectUsingTaskElement) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Evaluator`4.Evaluate() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Evaluator`4.Evaluate(IEvaluatorData`4 data, ProjectRootElement root, ProjectLoadSettings loadSettings, Int32 maxNodeCount, PropertyDictionary`1 environmentProperties, ILoggingService loggingService, IItemFactory`2 itemFactory, IToolsetProvider toolsetProvider, ProjectRootElementCacheBase projectRootElementCache, BuildEventContext buildEventContext, ISdkResolverService sdkResolverService, Int32 submissionId, EvaluationContext evaluationContext, Boolean interactive) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Project.ProjectImpl.Reevaluate(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Project.ProjectImpl.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Project.ProjectImpl.ReevaluateIfNecessary(EvaluationContext evaluationContext) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Project.ProjectImpl.Initialize(IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Project.FromFile(String file, ProjectOptions options) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at NuGet.Build.Tasks.Console.MSBuildStaticGraphRestore.\u003c\u003ec__DisplayClass38_1.\u003cLoadProjects\u003eb__0(String path, Dictionary`2 properties, ProjectCollection collection) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.GraphBuilder.ParseProject(ConfigurationMetadata configurationMetadata) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.GraphBuilder.\u003c\u003ec__DisplayClass35_0.\u003cSubmitProjectForParsing\u003eb__0() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at System.Lazy`1.CreateValue() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at System.Lazy`1.get_Value() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.ParallelWorkSet`2.ExecuteWorkItem() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.ParallelWorkSet`2.\u003cCreateProcessorItemTask\u003eb__16_0() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.ParallelWorkSet`2.WaitForAllWorkAndComplete() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.GraphBuilder.FindGraphNodes() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.GraphBuilder.BuildGraph() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.ProjectGraph..ctor(IEnumerable`1 entryPoints, ProjectCollection projectCollection, ProjectInstanceFactoryFunc projectInstanceFactory, Int32 degreeOfParallelism, CancellationToken cancellationToken) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.ProjectGraph..ctor(IEnumerable`1 entryPoints, ProjectCollection projectCollection, ProjectInstanceFactoryFunc projectInstanceFactory) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at NuGet.Build.Tasks.Console.MSBuildStaticGraphRestore.LoadProjects(IEnumerable`1 entryProjects) [C:\\code\\runtime\\Build.proj]\r\n\r\nBuild FAILED.\r\n\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error : The result \"\" of evaluating the value \"$(DotNetSharedFrameworkTaskFile)\" of the \"AssemblyFile\" attribute in element \u003cUsingTask\u003e is not valid.  C:\\code\\runtime\\src\\libraries\\ref.proj [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, Object[] args) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Shared.ProjectErrorUtilities.VerifyThrowInvalidProject[T1,T2,T3,T4](Boolean condition, String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, T1 arg0, T2 arg1, T3 arg2, T4 arg3) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Execution.TaskRegistry.RegisterTasksFromUsingTaskElement[P,I](ILoggingService loggingService, BuildEventContext buildEventContext, String directoryOfImportingFile, ProjectUsingTaskElement projectUsingTaskXml, TaskRegistry taskRegistry, Expander`2 expander, ExpanderOptions expanderOptions, IFileSystem fileSystem) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Evaluator`4.EvaluateUsingTaskElement(String directoryOfImportingFile, ProjectUsingTaskElement projectUsingTaskElement) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Evaluator`4.Evaluate() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Evaluator`4.Evaluate(IEvaluatorData`4 data, ProjectRootElement root, ProjectLoadSettings loadSettings, Int32 maxNodeCount, PropertyDictionary`1 environmentProperties, ILoggingService loggingService, IItemFactory`2 itemFactory, IToolsetProvider toolsetProvider, ProjectRootElementCacheBase projectRootElementCache, BuildEventContext buildEventContext, ISdkResolverService sdkResolverService, Int32 submissionId, EvaluationContext evaluationContext, Boolean interactive) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Project.ProjectImpl.Reevaluate(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Project.ProjectImpl.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Project.ProjectImpl.ReevaluateIfNecessary(EvaluationContext evaluationContext) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Project.ProjectImpl.Initialize(IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Evaluation.Project.FromFile(String file, ProjectOptions options) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at NuGet.Build.Tasks.Console.MSBuildStaticGraphRestore.\u003c\u003ec__DisplayClass38_1.\u003cLoadProjects\u003eb__0(String path, Dictionary`2 properties, ProjectCollection collection) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.GraphBuilder.ParseProject(ConfigurationMetadata configurationMetadata) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.GraphBuilder.\u003c\u003ec__DisplayClass35_0.\u003cSubmitProjectForParsing\u003eb__0() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at System.Lazy`1.CreateValue() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at System.Lazy`1.get_Value() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.ParallelWorkSet`2.ExecuteWorkItem() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.ParallelWorkSet`2.\u003cCreateProcessorItemTask\u003eb__16_0() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.ParallelWorkSet`2.WaitForAllWorkAndComplete() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.GraphBuilder.FindGraphNodes() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.GraphBuilder.BuildGraph() [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.ProjectGraph..ctor(IEnumerable`1 entryPoints, ProjectCollection projectCollection, ProjectInstanceFactoryFunc projectInstanceFactory, Int32 degreeOfParallelism, CancellationToken cancellationToken) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at Microsoft.Build.Graph.ProjectGraph..ctor(IEnumerable`1 entryPoints, ProjectCollection projectCollection, ProjectInstanceFactoryFunc projectInstanceFactory) [C:\\code\\runtime\\Build.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\6.0.100-preview.2.21155.3\\NuGet.RestoreEx.targets(19,5): error :    at NuGet.Build.Tasks.Console.MSBuildStaticGraphRestore.LoadProjects(IEnumerable`1 entryProjects) [C:\\code\\runtime\\Build.proj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:33.84\r\nBuild failed with exit code 1. Check errors above.\r\nSome builds failed:\r\n        Configuration: Debug, Architecture: x64\r\n```\r\n\r\n",
                                           "updatedAt":  "2021-05-04T10:08:46Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMTgzODg1MQ==",
                                           "createdAt":  "2021-05-04T10:25:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e If I try and build the latest main I get:\r\n\r\nThis indicates that the nuget sdk resolver silently failed when restoring the SDK package. cc @nkolev92 \r\n\r\n\u003e When I try to build tag v5.0.5, I get this error:\r\n\r\nHmm that\u0027s unfortunate. As a last resort, could you please try to build again from a clean repo (git clean -xdf) with the following change:\r\n\r\n![image](https://user-images.githubusercontent.com/7412651/116990739-d2399c80-acd3-11eb-9d01-b56eb8db522f.png)\r\n\r\nThanks a lot",
                                           "updatedAt":  "2021-05-04T10:25:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMTkwNDczOQ==",
                                           "createdAt":  "2021-05-04T12:30:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "robertpi",
                                           "body":  "I tried to clean build (git clean -xdf) tag v5.0.5 with the modifications suggested, but still get similar error messages:\r\n\r\n```\r\nc:\\code\\runtime\r\n\u003ebuild.cmd -Restore\r\nGET https://dot.net/v1/dotnet-install.ps1\r\ndotnet-install: Note that the intended use of this script is for Continuous Integration (CI) scenarios, where:\r\ndotnet-install: - The SDK needs to be installed without user interaction and without admin rights.\r\ndotnet-install: - The SDK installation doesn\u0027t need to persist across multiple CI runs.\r\ndotnet-install: To set up a development environment or to run apps, use installers rather than this script. Visit https://dotnet.microsoft.com/download to get the installer.\r\n\r\ndotnet-install: Downloading primary link https://dotnetcli.azureedge.net/dotnet/Sdk/5.0.202/dotnet-sdk-5.0.202-win-x64.zip\r\ndotnet-install: Extracting zip from https://dotnetcli.azureedge.net/dotnet/Sdk/5.0.202/dotnet-sdk-5.0.202-win-x64.zip\r\ndotnet-install: Adding to current process PATH: \"C:\\code\\runtime\\.dotnet\\\". Note: This change will not be visible if PowerShell was run as a child process.\r\ndotnet-install: Note that the script does not resolve dependencies during installation.\r\ndotnet-install: To check the list of dependencies, go to https://docs.microsoft.com/dotnet/core/install/windows#dependencies\r\ndotnet-install: Installation finished\r\n\r\nWelcome to .NET 5.0!\r\n---------------------\r\nSDK Version: 5.0.202\r\n\r\nTelemetry\r\n---------\r\nThe .NET tools collect usage data in order to help us improve your experience. It is collected by Microsoft and shared with the community. You can opt-out of telemetry by setting the DOTNET_CLI_TELEMETRY_OPTOUT environment variable to \u00271\u0027 or \u0027true\u0027 using your favorite shell.\r\n\r\nRead more about .NET CLI Tools telemetry: https://aka.ms/dotnet-cli-telemetry\r\n\r\n----------------\r\nInstalled an ASP.NET Core HTTPS development certificate.\r\nTo trust the certificate run \u0027dotnet dev-certs https --trust\u0027 (Windows and macOS only).\r\nLearn about HTTPS: https://aka.ms/dotnet-https\r\n----------------\r\nWrite your first app: https://aka.ms/dotnet-hello-world\r\nFind out what\u0027s new: https://aka.ms/dotnet-whats-new\r\nExplore documentation: https://aka.ms/dotnet-docs\r\nReport issues and find source on GitHub: https://github.com/dotnet/core\r\nUse \u0027dotnet --help\u0027 to see available commands or visit: https://aka.ms/dotnet-cli\r\n--------------------------------------------------------------------------------------\r\n  Determining projects to restore...\r\n  Tool \u0027coverlet.console\u0027 (version \u00271.7.2\u0027) was restored. Available commands: coverlet\r\n  Tool \u0027dotnet-reportgenerator-globaltool\u0027 (version \u00274.5.8\u0027) was restored. Available commands: reportgenerator\r\n  Tool \u0027microsoft.dotnet.xharness.cli\u0027 (version \u00271.0.0-prerelease.20403.2\u0027) was restored. Available commands: xharness\r\n\r\n  Restore was successful.\r\n  Failed to download package \u0027Microsoft.DotNet.SignTool.5.0.0-beta.21159.7\u0027 from \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/1a5f89f6-d8da-4080-b15f-242650c914a8/nuget/v3/flat2/microsoft.dotnet.signtool/5.0.0-beta.21159.7/microsoft.dotnet.signtool.5.0.0-beta.21159.7.nupkg\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Failed to download package \u0027Microsoft.DotNet.SignTool.5.0.0-beta.21159.7\u0027 from \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/1a5f89f6-d8da-4080-b15f-242650c914a8/nuget/v3/flat2/microsoft.dotnet.signtool/5.0.0-beta.21159.7/microsoft.dotnet.signtool.5.0.0-beta.21159.7.nupkg\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2/microsoft.dotnet.build.tasks.feed/index.json\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/flat2/microsoft.dotnet.build.tasks.feed/index.json\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/a8a526e9-91b3-4569-ba2d-ff08dbb7c110/nuget/v3/flat2/microsoft.dotnet.versiontools.tasks/index.json\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/7d9f5c21-0d79-403f-bfe3-9a4506529760/nuget/v3/flat2/microsoft.dotnet.build.tasks.feed/index.json\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2/microsoft.dotnet.versiontools.tasks/index.json\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2/microsoft.dotnet.build.tasks.feed/index.json\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/a8a526e9-91b3-4569-ba2d-ff08dbb7c110/nuget/v3/flat2/microsoft.dotnet.versiontools.tasks/index.json\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2/microsoft.dotnet.versiontools.tasks/index.json\u0027.\r\n  The SSL connection could not be established, see inner exception.\r\n    Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n    An existing connection was forcibly closed by the remote host.\r\nC:\\code\\runtime\\.dotnet\\sdk\\5.0.202\\NuGet.targets(131,5): error : Failed to retrieve information about \u0027Microsoft.DotNet.Build.Tasks.Feed\u0027 from remote source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2/microsoft.dotnet.build.tasks.feed/index.json\u0027. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.21159.7\\tools\\Tools.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\5.0.202\\NuGet.targets(131,5): error :   The SSL connection could not be established, see inner exception. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.21159.7\\tools\\Tools.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\5.0.202\\NuGet.targets(131,5): error :   Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host.. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.21159.7\\tools\\Tools.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\5.0.202\\NuGet.targets(131,5): error :   An existing connection was forcibly closed by the remote host. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.21159.7\\tools\\Tools.proj]\r\n\r\nBuild FAILED.\r\n\r\nC:\\code\\runtime\\.dotnet\\sdk\\5.0.202\\NuGet.targets(131,5): error : Failed to retrieve information about \u0027Microsoft.DotNet.Build.Tasks.Feed\u0027 from remote source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2/microsoft.dotnet.build.tasks.feed/index.json\u0027. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.21159.7\\tools\\Tools.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\5.0.202\\NuGet.targets(131,5): error :   The SSL connection could not be established, see inner exception. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.21159.7\\tools\\Tools.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\5.0.202\\NuGet.targets(131,5): error :   Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host.. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.21159.7\\tools\\Tools.proj]\r\nC:\\code\\runtime\\.dotnet\\sdk\\5.0.202\\NuGet.targets(131,5): error :   An existing connection was forcibly closed by the remote host. [C:\\Users\\rober\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\5.0.0-beta.21159.7\\tools\\Tools.proj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:03.34\r\nBuild failed.\r\nSome builds failed:\r\n        Configuration: Debug, Architecture: x64\r\n```\r\n",
                                           "updatedAt":  "2021-05-04T12:30:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMTkwNTc4MQ==",
                                           "createdAt":  "2021-05-04T12:32:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Thanks for trying the suggested workarounds out. In this case I don\u0027t know how to help further. Let me ping the @dotnet/nuget-team who are hopefully able to help.",
                                           "updatedAt":  "2021-05-04T12:32:23Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMTk5OTQ1Nw==",
                                           "createdAt":  "2021-05-04T14:46:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "robertpi",
                                           "body":  "So it turns out the issue is my wifi router or ISP. After a brief automated reboot of my wifi router made me think, what if the problem is the network, but my network infrastructure, so I switched by laptop to use my phones 4G connection and the restore phase worked just fine (if a little slower than I might have hoped).\r\n\r\nThe actual build phase is running now, so all good.\r\n\r\nI\u0027d be very interested into digging into why the ssl connections to `pkgs.dev.azure.com` was failing over my home wifi. I can connect to `nuget.org` without issue and, a few route reboots aside, my internet seems quite stable. Not quite sure where I should start looking.",
                                           "updatedAt":  "2021-05-04T14:46:40Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMjAwNjI1NQ==",
                                           "createdAt":  "2021-05-04T14:55:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@johnterickson for the AzDO packaging related question. Maybe you can help @robertpi diagnose this further?",
                                           "updatedAt":  "2021-05-04T14:55:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMjA0ODUxMA==",
                                           "createdAt":  "2021-05-04T15:51:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "zivkan",
                                           "body":  "From NuGet\u0027s perspective, we use `HttpClient` in a very standard way, allowing it to handle SSL. Hence when the networking issues were happening, I would have expected a console app with `await new HttpClient().GetAsStream(\"https://pkgs.dev.azure.com\")` to fail with the same exception. The System.Net.Http experts here in dotnet/runtime will have better suggestions than I do. If you\u0027re really curious about investigating it, should it happen again, my best guess would be to start with WireShark, but possibly an ETW trace with networking information could help too.\r\n\r\nGiven the error message \"An existing connection was forcibly closed by the remote host\", it sounds to me like the operating system was seeing a TCP packet to close the TCP connection, while the SSL stream was expecting it to remain open. WireShark might help you see a TCP FIN packet, if that\u0027s really the case. Whether that originated from your router or your ISP or a pkgs.dev.azure.com CDN endpoint, I\u0027m not sure if it\u0027s possible to determine. This is very much outside my expertise.\r\n\r\nAll I can say as a NuGet expert is that the .NET HttpClient didn\u0027t give us a successful connection to do transfers over.",
                                           "updatedAt":  "2021-05-04T15:51:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMjA4NDYwMA==",
                                           "createdAt":  "2021-05-04T16:42:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBqGO2g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "karelz",
                                                                               "createdAt":  "2021-05-08T08:16:50Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "wfurt",
                                           "body":  "I know it may be hard to know where this is coming from but the `An existing connection was forcibly closed by the remote host.` really comes from OS e.g. TCP stack. Pretty much in all cases I have seen so far this is caused by upstream network or firewalls and has nothing to do with actually SSL or Http. \r\n\r\nAside from firewalls and real network failures, it may be possible that one provider uses IPv6 and the other does not. Also with global load ballancing using different ISP may connect you to different region. Wireshark packet capture would show either one.\r\n",
                                           "updatedAt":  "2021-05-04T16:42:19Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMjA4NjU0OA==",
                                           "createdAt":  "2021-05-04T16:45:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "johnterickson",
                                           "body":  "What doesn\u0027t make sense to me is that it works with PowerShell\r\n```\r\n(New-Object System.Net.WebClient).DownloadString(\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public/nuget/v3/index.json\")\r\n```\r\n\r\nbut not with NuGet.  We\u0027re not doing any User-Agent trickery or anything like that 🤷‍♂️",
                                           "updatedAt":  "2021-05-04T16:45:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzNDYwNDQxNg==",
                                           "createdAt":  "2021-05-07T16:36:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "robertpi",
                                           "body":  "@johnterickson I later found out that `(New-Object System.Net.WebClient).DownloadString(\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-public/nuget/v3/index.json\")` did fail sometimes too, as did curl and requests from web browsers. It was intermittent, so it was quite difficult to figure out what was failing and what wasn\u0027t.",
                                           "updatedAt":  "2021-05-07T16:36:36Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzNTIwMjI0NA==",
                                           "createdAt":  "2021-05-08T08:19:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "karelz",
                                           "body":  "Looks like there is not much we can do here ... this indeed looks like external problem, beyond the local machine (given it fails as well with curl, PS, etc.). Should we close it or is there anything left here to troubleshoot or help with?",
                                           "updatedAt":  "2021-05-08T08:19:15Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzNTMzNjc5Mw==",
                                           "createdAt":  "2021-05-08T12:21:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "robertpi",
                                           "body":  "My suspicion is this is global load balancing sending me to a dodgy set of nuget servers, which is one of the things @wfurt mentioned, in that case there would be some infrastructure issues to correct. But it could be lots of other things too, so feel free to close if there\u0027s nothing that can be done on this front.",
                                           "updatedAt":  "2021-05-08T12:21:59Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzNTg3OTcwMg==",
                                           "createdAt":  "2021-05-09T20:21:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Thanks @robertpi. Closing.",
                                           "updatedAt":  "2021-05-09T20:21:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3ODU2NjU4Ng==",
                                           "createdAt":  "2021-07-12T20:18:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@karelz I have started to get the same problem on all my local physical devices (macOS, Linux, Windows). And after cleaning the nuget cache on one of the devices, I cannot build anything from the runtime repo anymore. This is what happens:\r\n```\r\n  Determining projects to restore...\r\n  Tool \u0027coverlet.console\u0027 (version \u00271.7.2\u0027) was restored. Available commands: coverlet\r\n  Tool \u0027dotnet-reportgenerator-globaltool\u0027 (version \u00274.5.8\u0027) was restored. Available commands: reportgenerator\r\n  Tool \u0027microsoft.dotnet.xharness.cli\u0027 (version \u00271.0.0-prerelease.21357.4\u0027) was restored. Available commands: xharness\r\n  Tool \u0027microsoft.visualstudio.slngen.tool\u0027 (version \u00275.0.5\u0027) was restored. Available commands: slngen\r\n\r\n  Restore was successful.\r\n  Restored /Users/janvorli/.nuget/packages/microsoft.dotnet.arcade.sdk/6.0.0-beta.21357.3/tools/Tools.proj (in 6.03 sec).\r\n  Determining projects to restore...\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/9d15d80a-6afc-4f7e-901b-9378146a4b8b/nuget/v3/flat2/microsoft.dotnet.codeanalysis/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/1a5f89f6-d8da-4080-b15f-242650c914a8/nuget/v3/flat2/microsoft.codeanalysis.netanalyzers/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/c9f8ac11-6bd8-4926-8306-f075241547f7/nuget/v3/flat2/microsoft.codeanalysis.netanalyzers/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/azure-public/3ccf6661-f8ce-4e8a-bb2e-eff943ddd3c7/_packaging/58ca65bb-e6c1-4210-88ac-fa55c1cd7877/nuget/v3/flat2/microsoft.dotnet.codeanalysis/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/1a5f89f6-d8da-4080-b15f-242650c914a8/nuget/v3/flat2/microsoft.codeanalysis.csharp.codestyle/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/9d15d80a-6afc-4f7e-901b-9378146a4b8b/nuget/v3/flat2/microsoft.codeanalysis.netanalyzers/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/azure-public/3ccf6661-f8ce-4e8a-bb2e-eff943ddd3c7/_packaging/58ca65bb-e6c1-4210-88ac-fa55c1cd7877/nuget/v3/flat2/microsoft.codeanalysis.netanalyzers/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/c9f8ac11-6bd8-4926-8306-f075241547f7/nuget/v3/flat2/microsoft.codeanalysis.csharp.codestyle/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/9d15d80a-6afc-4f7e-901b-9378146a4b8b/nuget/v3/flat2/microsoft.codeanalysis.csharp.codestyle/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/azure-public/3ccf6661-f8ce-4e8a-bb2e-eff943ddd3c7/_packaging/58ca65bb-e6c1-4210-88ac-fa55c1cd7877/nuget/v3/flat2/microsoft.codeanalysis.csharp.codestyle/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/flat2/stylecop.analyzers/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/1a5f89f6-d8da-4080-b15f-242650c914a8/nuget/v3/flat2/stylecop.analyzers/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/825db618-e3eb-4426-ba54-b1d6e6c944d8/nuget/v3/flat2/stylecop.analyzers/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/9d15d80a-6afc-4f7e-901b-9378146a4b8b/nuget/v3/flat2/stylecop.analyzers/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/azure-public/3ccf6661-f8ce-4e8a-bb2e-eff943ddd3c7/_packaging/58ca65bb-e6c1-4210-88ac-fa55c1cd7877/nuget/v3/flat2/stylecop.analyzers/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2/microsoft.net.illink.analyzers/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/9d15d80a-6afc-4f7e-901b-9378146a4b8b/nuget/v3/flat2/microsoft.net.illink.analyzers/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/flat2/microsoft.net.illink.analyzers/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/1a5f89f6-d8da-4080-b15f-242650c914a8/nuget/v3/flat2/microsoft.net.illink.analyzers/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/c9f8ac11-6bd8-4926-8306-f075241547f7/nuget/v3/flat2/microsoft.net.illink.analyzers/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2/system.net.msquic.transport/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/azure-public/3ccf6661-f8ce-4e8a-bb2e-eff943ddd3c7/_packaging/58ca65bb-e6c1-4210-88ac-fa55c1cd7877/nuget/v3/flat2/microsoft.net.illink.analyzers/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/flat2/system.net.msquic.transport/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/825db618-e3eb-4426-ba54-b1d6e6c944d8/nuget/v3/flat2/system.net.msquic.transport/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/1a5f89f6-d8da-4080-b15f-242650c914a8/nuget/v3/flat2/system.net.msquic.transport/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/c9f8ac11-6bd8-4926-8306-f075241547f7/nuget/v3/flat2/system.net.msquic.transport/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/9d15d80a-6afc-4f7e-901b-9378146a4b8b/nuget/v3/flat2/system.net.msquic.transport/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/azure-public/3ccf6661-f8ce-4e8a-bb2e-eff943ddd3c7/_packaging/58ca65bb-e6c1-4210-88ac-fa55c1cd7877/nuget/v3/flat2/system.net.msquic.transport/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/825db618-e3eb-4426-ba54-b1d6e6c944d8/nuget/v3/flat2/stylecop.analyzers.unstable/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/1a5f89f6-d8da-4080-b15f-242650c914a8/nuget/v3/flat2/stylecop.analyzers.unstable/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/flat2/stylecop.analyzers.unstable/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/c9f8ac11-6bd8-4926-8306-f075241547f7/nuget/v3/flat2/stylecop.analyzers.unstable/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/9d15d80a-6afc-4f7e-901b-9378146a4b8b/nuget/v3/flat2/stylecop.analyzers.unstable/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/azure-public/3ccf6661-f8ce-4e8a-bb2e-eff943ddd3c7/_packaging/58ca65bb-e6c1-4210-88ac-fa55c1cd7877/nuget/v3/flat2/stylecop.analyzers.unstable/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/c9f8ac11-6bd8-4926-8306-f075241547f7/nuget/v3/flat2/microsoft.dotnet.genfacades/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/825db618-e3eb-4426-ba54-b1d6e6c944d8/nuget/v3/flat2/microsoft.dotnet.genfacades/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/9d15d80a-6afc-4f7e-901b-9378146a4b8b/nuget/v3/flat2/microsoft.dotnet.genfacades/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/azure-public/3ccf6661-f8ce-4e8a-bb2e-eff943ddd3c7/_packaging/58ca65bb-e6c1-4210-88ac-fa55c1cd7877/nuget/v3/flat2/microsoft.dotnet.genfacades/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/1a5f89f6-d8da-4080-b15f-242650c914a8/nuget/v3/flat2/microsoft.dotnet.genfacades/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/9d15d80a-6afc-4f7e-901b-9378146a4b8b/nuget/v3/flat2/microsoft.codeanalysis.netanalyzers/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/azure-public/3ccf6661-f8ce-4e8a-bb2e-eff943ddd3c7/_packaging/58ca65bb-e6c1-4210-88ac-fa55c1cd7877/nuget/v3/flat2/microsoft.codeanalysis.netanalyzers/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/1a5f89f6-d8da-4080-b15f-242650c914a8/nuget/v3/flat2/microsoft.codeanalysis.csharp.codestyle/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/c9f8ac11-6bd8-4926-8306-f075241547f7/nuget/v3/flat2/microsoft.codeanalysis.csharp.codestyle/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/9d15d80a-6afc-4f7e-901b-9378146a4b8b/nuget/v3/flat2/microsoft.codeanalysis.csharp.codestyle/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/9d15d80a-6afc-4f7e-901b-9378146a4b8b/nuget/v3/flat2/microsoft.net.illink.analyzers/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/flat2/microsoft.net.illink.analyzers/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/1a5f89f6-d8da-4080-b15f-242650c914a8/nuget/v3/flat2/microsoft.net.illink.analyzers/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/c9f8ac11-6bd8-4926-8306-f075241547f7/nuget/v3/flat2/microsoft.net.illink.analyzers/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/1a5f89f6-d8da-4080-b15f-242650c914a8/nuget/v3/flat2/stylecop.analyzers.unstable/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/45bacae2-5efb-47c8-91e5-8ec20c22b4f8/nuget/v3/flat2/system.net.msquic.transport/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/azure-public/3ccf6661-f8ce-4e8a-bb2e-eff943ddd3c7/_packaging/58ca65bb-e6c1-4210-88ac-fa55c1cd7877/nuget/v3/flat2/microsoft.net.illink.analyzers/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/825db618-e3eb-4426-ba54-b1d6e6c944d8/nuget/v3/flat2/system.net.msquic.transport/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/9d15d80a-6afc-4f7e-901b-9378146a4b8b/nuget/v3/flat2/system.net.msquic.transport/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/c9f8ac11-6bd8-4926-8306-f075241547f7/nuget/v3/flat2/stylecop.analyzers.unstable/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/azure-public/3ccf6661-f8ce-4e8a-bb2e-eff943ddd3c7/_packaging/58ca65bb-e6c1-4210-88ac-fa55c1cd7877/nuget/v3/flat2/stylecop.analyzers.unstable/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/azure-public/3ccf6661-f8ce-4e8a-bb2e-eff943ddd3c7/_packaging/58ca65bb-e6c1-4210-88ac-fa55c1cd7877/nuget/v3/flat2/system.net.msquic.transport/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/flat2/system.net.msquic.transport/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/c9f8ac11-6bd8-4926-8306-f075241547f7/nuget/v3/flat2/microsoft.dotnet.genfacades/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/825db618-e3eb-4426-ba54-b1d6e6c944d8/nuget/v3/flat2/microsoft.dotnet.genfacades/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/9d15d80a-6afc-4f7e-901b-9378146a4b8b/nuget/v3/flat2/microsoft.dotnet.genfacades/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/1a5f89f6-d8da-4080-b15f-242650c914a8/nuget/v3/flat2/microsoft.dotnet.genfacades/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/825db618-e3eb-4426-ba54-b1d6e6c944d8/nuget/v3/flat2/stylecop.analyzers.unstable/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/9d15d80a-6afc-4f7e-901b-9378146a4b8b/nuget/v3/flat2/stylecop.analyzers.unstable/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/c9f8ac11-6bd8-4926-8306-f075241547f7/nuget/v3/flat2/system.net.msquic.transport/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/flat2/stylecop.analyzers.unstable/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/azure-public/3ccf6661-f8ce-4e8a-bb2e-eff943ddd3c7/_packaging/58ca65bb-e6c1-4210-88ac-fa55c1cd7877/nuget/v3/flat2/microsoft.dotnet.genfacades/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n  Retrying \u0027FindPackagesByIdAsync\u0027 for source \u0027https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/1a5f89f6-d8da-4080-b15f-242650c914a8/nuget/v3/flat2/system.net.msquic.transport/index.json\u0027.\r\n  No route to host (pkgs.dev.azure.com:443)\r\n    No route to host\r\n```\r\nUsing browser / wget on most of these URLs works fine, so I assume it is some issue in the HttpClient w.r.t. my internet provider infra or something like that. Close before the issue started to happen, I got my internet modem replaced. \r\nI can provide a packet capture from WireShark on Windows if that helps. Or do whatever debugging you\u0027d recommend.",
                                           "updatedAt":  "2021-07-12T20:18:05Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3ODU2OTk0Nw==",
                                           "createdAt":  "2021-07-12T20:23:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wfurt",
                                           "body":  "Can you check what site it resolves to @janvorli ?\r\n```\r\nfurt@ubu20:~/github/wfurt-runtime/src/libraries/System.Net.Http/src$ ping pkgs.dev.azure.com\r\nPING l-0011.l-msedge.net (13.107.42.20) 56(84) bytes of data.\r\n64 bytes from 13.107.42.20 (13.107.42.20): icmp_seq=1 ttl=128 time=4.77 ms\r\n```\r\nThis seems like some CDN. Also HttpClient would prefer IPv6 if available. In this case the name does not seems to resolve to IPv6 (at least for me) so it should not problem but it something to remember.  ",
                                           "updatedAt":  "2021-07-12T20:23:17Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3ODU3MTMwNA==",
                                           "createdAt":  "2021-07-12T20:25:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "The same as yours:\r\n```\r\njanvorli-mac:nuget janvorli$ ping pkgs.dev.azure.com\r\nPING l-0011.l-msedge.net (13.107.42.20): 56 data bytes\r\n64 bytes from 13.107.42.20: icmp_seq=0 ttl=119 time=28.226 ms\r\n64 bytes from 13.107.42.20: icmp_seq=1 ttl=119 time=13.918 ms\r\n\r\n```",
                                           "updatedAt":  "2021-07-12T20:25:37Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3ODU3MzY1NQ==",
                                           "createdAt":  "2021-07-12T20:29:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "I have also tried to create a simple test app like this and compile it with the latest .NET 6. All of the URLs above return HTTP error 404, which is kind of strange by itself, but none complains about no route to host. And the errors above are 100% repeatable.\r\n\r\n```c#\r\nusing System;\r\n\r\nnamespace nuget\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var task = new System.Net.Http.HttpClient().GetAsync(args[0]);\r\n            task.Wait();\r\n            task.Result.EnsureSuccessStatusCode();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nSo I wonder if it is possible that the nuget version used by the build uses some old .NET runtime that had some issue that is resolved in the latest.",
                                           "updatedAt":  "2021-07-12T20:29:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3ODU3NTExMQ==",
                                           "createdAt":  "2021-07-12T20:31:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Btw, opening these URLs return 404 even in Chrome on Windows, the contents of the response is similar for all of them, one example being:\r\n`{\"$id\":\"1\",\"innerException\":null,\"message\":\"Can\u0027t find the package \u0027stylecop.analyzers\u0027 in feed \u0027dotnet-tools\u0027.\",\"typeName\":\"Microsoft.VisualStudio.Services.NuGet.WebApi.Exceptions.PackageNotFoundException, Microsoft.VisualStudio.Services.NuGet.WebApi\",\"typeKey\":\"PackageNotFoundException\",\"errorCode\":0,\"eventId\":3000}`",
                                           "updatedAt":  "2021-07-12T20:31:54Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3ODU3NTMwNg==",
                                           "createdAt":  "2021-07-12T20:32:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "This was for the https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/d1622942-d16f-48e5-bc83-96f4539e7601/nuget/v3/flat2/stylecop.analyzers/index.json",
                                           "updatedAt":  "2021-07-12T20:32:15Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3ODU4NTQ5Ng==",
                                           "createdAt":  "2021-07-12T20:49:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Btw, in the Wireshark log, I can see quite a number of \"TCP Retransmission\", \"TCP Spurious Retransmission\" and \"TCP Dup ACK 508680\". I wonder if it could be related in some way and our HttpClient hickups on these.\r\n\r\n```\r\n506840\t72.573816\t192.168.1.3\t13.107.43.20\tTCP\t501\t[TCP Retransmission] 58467 → 443 [PSH, ACK] Seq=5130 Ack=16847 Win=261376 Len=447\r\n507631\t73.339456\t192.168.1.3\t13.107.43.20\tTCP\t501\t[TCP Retransmission] 58467 → 443 [PSH, ACK] Seq=5130 Ack=16847 Win=261376 Len=447\r\n508537\t73.908387\t13.107.43.20\t192.168.1.3\tTCP\t60\t443 → 58467 [ACK] Seq=16847 Ack=5577 Win=524800 Len=0\r\n508636\t74.055391\t13.107.43.20\t192.168.1.3\tTLSv1.2\t1308\tApplication Data\r\n508680\t74.106650\t192.168.1.3\t13.107.43.20\tTCP\t54\t58467 → 443 [ACK] Seq=5577 Ack=18101 Win=262656 Len=0\r\n508954\t74.357202\t13.107.43.20\t192.168.1.3\tTLSv1.2\t1308\t[TCP Spurious Retransmission] , Application Data\r\n508955\t74.357208\t192.168.1.3\t13.107.43.20\tTCP\t66\t[TCP Dup ACK 508680#1] 58467 → 443 [ACK] Seq=5577 Ack=18101 Win=262656 Len=0 SLE=16847 SRE=18101\r\n```\r\nI can also see many logs as the following ones that Wireshark marks with red color, so I assume there is something wrong. Maybe the Win/Len being zero? But my knowledge of the TCP protocol has faded over the years, so I am not sure.\r\n```\r\n505921\t71.645691\t13.107.43.20\t192.168.1.3\tTCP\t60\t443 → 61077 [RST] Seq=1 Win=0 Len=0\r\n```",
                                           "updatedAt":  "2021-07-12T20:49:55Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3ODU4NzE5NA==",
                                           "createdAt":  "2021-07-12T20:52:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "And also this one:\r\n```\r\n98496\t49.699509\t192.168.1.3\t13.107.43.20\tTLSv1.2\t212\t[TCP ACKed unseen segment] , Client Key Exchange, Change Cipher Spec, Encrypted Handshake Message\r\n```",
                                           "updatedAt":  "2021-07-12T20:52:58Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3ODU5MzE3OQ==",
                                           "createdAt":  "2021-07-12T21:03:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wfurt",
                                           "body":  "The 13.107.43.20 is the server ... or networking gear in the middle. All the TCP is handle by the Linux kernel. What matters is stream of data we read from the socket. ",
                                           "updatedAt":  "2021-07-12T21:03:14Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3ODU5OTk3OQ==",
                                           "createdAt":  "2021-07-12T21:13:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wfurt",
                                           "body":  "BTW there also seems to be some general outage  https://github.com/dotnet/core-eng/issues/13691 ",
                                           "updatedAt":  "2021-07-12T21:13:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3ODYwMDY1MQ==",
                                           "createdAt":  "2021-07-12T21:14:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "It seems it is even more involved. Rerunning the build of clr+libs multiple times ended up passing, so it seems that the problem is really intermittent.\r\nAs for the outage you\u0027ve mentioned, I was never getting 50x responses.",
                                           "updatedAt":  "2021-07-12T21:14:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3ODYwMjc0MA==",
                                           "createdAt":  "2021-07-12T21:18:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wfurt",
                                           "body":  "It is possible that your ISP has some transparent caches and once they cannot fetch the file they give you different error. With CDN in place networking is way more complicated. In your case this looks like some packet loss at least. \r\nI\u0027m not sure what your filer is but the `No route to host` probably comes ICP message. ",
                                           "updatedAt":  "2021-07-12T21:18:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3ODYwNTg0NQ==",
                                           "createdAt":  "2021-07-12T21:22:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "I\u0027ve just learned that the 404 error codes are benign. Nuget tries to fetch packages from all the configured sources and the 404 just means that the intermittent issue happened when trying to fetch it from other sources than the one it was in.",
                                           "updatedAt":  "2021-07-12T21:22:31Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3ODYwNjQyNg==",
                                           "createdAt":  "2021-07-12T21:23:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "In the intermittent cases, there are no HTTP response codes, as the communication gets broken in various ways.",
                                           "updatedAt":  "2021-07-12T21:23:25Z"
                                       }
                                   ],
                         "totalCount":  38
                     },
        "title":  "I can\u0027t build main branch because of ssl issue with the restore",
        "labels":  [
                       "tracking-external-issue",
                       "discussion",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/52415",
        "createdAt":  "2021-05-06T21:35:08Z",
        "number":  52415,
        "author":  "danmoseley",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBqAorg==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "gfoidl",
                                            "createdAt":  "2021-05-07T07:51:04Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "EgorBo",
                                            "createdAt":  "2021-05-07T13:29:42Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2021-05-12T16:51:20Z",
        "body":  "I have a laptop and sometimes want to build in the background to fix a bug but do meetings etc meantime. I\u0027m fine if it takes much longer. I would like to tell build to work in the background.\r\n\r\nOur tools each have their own flags eg `msbuild /low /m:1` and apparently for Ninja `-DCMAKE_JOB_POOLS:STRING=compile=1 -DCMAKE_JOB_POOL_COMPILE:STRING=compile\"` . There also may be flags to CL and Link.\r\n\r\nIdeally I\u0027d be able to pass `-low` to build.cmd/build.sh and it would set all these.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOMb7kUw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMzg4MzgzOQ==",
                                           "createdAt":  "2021-05-06T21:35:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nI have a laptop and sometimes want to build in the background to fix a bug but do meetings etc meantime. I\u0027m fine if it takes much longer. I would like to tell build to work in the background.\r\n\r\nOur tools each have their own flags eg `msbuild /low /m:1` and apparently for Ninja `-DCMAKE_JOB_POOLS:STRING=compile=1 -DCMAKE_JOB_POOL_COMPILE:STRING=compile\"` . There also may be flags to CL and Link.\r\n\r\nIdeally I\u0027d be able to pass `-low` to build.cmd/build.sh and it would set all these.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003edanmoseley\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-05-06T21:35:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzMzk0Mjc1MQ==",
                                           "createdAt":  "2021-05-06T23:26:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Based on my experience working on build perf in the past, the key is to reduce the number of concurrent build tasks -- simply running processes at lower priority, at least on Windows, does not much reduce the load on the machine (at least for IO)",
                                           "updatedAt":  "2021-05-06T23:26:22Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgzNDU5Mzg3NQ==",
                                           "createdAt":  "2021-05-07T16:25:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tannergooding",
                                           "body":  "Maybe we could call this `--background`?",
                                           "updatedAt":  "2021-05-07T16:25:55Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Consider a \"-nice\" flag for build",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/53805",
        "createdAt":  "2021-06-07T10:03:32Z",
        "number":  53805,
        "author":  "sangramsalunkhe97",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-06-16T20:41:14Z",
        "body":  "Hi, after cloning a source code i wanna build it on my Ubuntu 18.04 machine. So i go to \"/runtime-main$\" Directory and start \"build.sh\" script. But I faced the following error. can you please suggest why that error has been occur or any argument has to pass with \"build.sh\" script.\r\n\r\n![error](https://user-images.githubusercontent.com/81962828/120997900-35bc5b80-c7a5-11eb-938c-7b3af51049ec.png)\r\n\r\n\r\n````\r\nsangram@sangram-VirtualBox:~/Downloads/mozilla_sangram0/runtime-main$` ./build.sh \r\n__DistroRid: linux-x64\r\n  Determining projects to restore..\r\n  Tool \u0027coverlet.console\u0027 (version \u00271.7.2\u0027) was restored. Available commands: coverlet\r\n  Tool \u0027dotnet-reportgenerator-globaltool\u0027 (version \u00274.5.8\u0027) was restored. Available commands: reportgenerator\r\n  Tool \u0027microsoft.dotnet.xharness.cli\u0027 (version \u00271.0.0-prerelease.21281.2\u0027) was restored. Available commands: xharness\r\n  Tool \u0027microsoft.visualstudio.slngen.tool\u0027 (version \u00275.0.5\u0027) was restored. Available commands: slngen\r\n  \r\n  Restore was successful.\r\n  All projects are up-to-date for restore.\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  System.Private.CoreLib.Generators -\u003e /home/sangram/Downloads/mozilla_sangram0/runtime-main/artifacts/bin/System.Private.CoreLib.Generators/netstandard2.0-Debug/System.Private.CoreLib.Generators.dll\r\n  System.Private.CoreLib -\u003e /home/sangram/Downloads/mozilla_sangram0/runtime-main/artifacts/bin/coreclr/Linux.x64.Debug/IL/System.Private.CoreLib.dll\r\n  runtime -\u003e \r\n  Commencing CoreCLR Repo build\r\n  __DistroRid: linux-x64\r\n  Setting up directories for build\r\n  Checking prerequisites...\r\n  Restoring the OptimizationData package\r\n  /home/sangram/Downloads/mozilla_sangram0/runtime-main/.dotnet/sdk/6.0.100-preview.3.21202.5/MSBuild.dll /nologo -bl:/home/sangram/Downloads/mozilla_sangram0/runtime-main/artifacts/log/Debug/OptRestore_Linux.x64.Debug.binlog -distributedlogger:Microsoft.DotNet.Tools.MSBuild.MSBuildLogger,/home/sangram/Downloads/mozilla_sangram0/runtime-main/.dotnet/sdk/6.0.100-preview.3.21202.5/dotnet.dll*Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingLogger,/home/sangram/Downloads/mozilla_sangram0/runtime-main/.dotnet/sdk/6.0.100-preview.3.21202.5/dotnet.dll -maxcpucount /m /m -verbosity:m /v:minimal /clp:Summary /clp:nosummary /nr:true /nodeReuse:false /nodereuse:false /p:TreatWarningsAsErrors=true /p:ContinuousIntegrationBuild=false /p:TargetArchitecture=x64 /p:Configuration=Debug /p:TargetOS=Linux /t:Restore /warnaserror /home/sangram/Downloads/mozilla_sangram0/runtime-main/src/coreclr/.nuget/optdata/optdata.csproj\r\n    Determining projects to restore...\r\n    Restored /home/sangram/Downloads/mozilla_sangram0/runtime-main/src/coreclr/.nuget/optdata/optdata.csproj (in 806 ms).\r\n  Commencing build of \"install\" target in \"CoreCLR component\" for Linux.x64.Debug in /home/sangram/Downloads/mozilla_sangram0/runtime-main/artifacts/obj/coreclr/Linux.x64.Debug\r\n  /home/sangram/Downloads/mozilla_sangram0/runtime-main/.dotnet/sdk/6.0.100-preview.3.21202.5/MSBuild.dll /nologo -bl:/home/sangram/Downloads/mozilla_sangram0/runtime-main/artifacts/log/Debug/GenNativeVersion_Linux.x64.Debug.binlog -distributedlogger:Microsoft.DotNet.Tools.MSBuild.MSBuildLogger,/home/sangram/Downloads/mozilla_sangram0/runtime-main/.dotnet/sdk/6.0.100-preview.3.21202.5/dotnet.dll*Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingLogger,/home/sangram/Downloads/mozilla_sangram0/runtime-main/.dotnet/sdk/6.0.100-preview.3.21202.5/dotnet.dll -maxcpucount /m -verbosity:m /v:minimal /clp:Summary /clp:nosummary /nr:true /nodeReuse:false /p:TreatWarningsAsErrors=true /p:ContinuousIntegrationBuild=false /p:NativeVersionFile=/home/sangram/Downloads/mozilla_sangram0/runtime-main/artifacts/obj/coreclr/Linux.x64.Debug/version.c /p:RuntimeVersionFile=/home/sangram/Downloads/mozilla_sangram0/runtime-main/artifacts/obj/coreclr/Linux.x64.Debug/../runtime_version.h /p:TargetArchitecture=x64 /p:Configuration=Debug /p:TargetOS=Linux /restore /t:GenerateRuntimeVersionFile /warnaserror /home/sangram/Downloads/mozilla_sangram0/runtime-main/eng/empty.csproj\r\n    Determining projects to restore...\r\n    Restored /home/sangram/Downloads/mozilla_sangram0/runtime-main/eng/empty.csproj (in 327 ms).\r\n  Invoking \"/home/sangram/Downloads/mozilla_sangram0/runtime-main/eng/native/gen-buildsys.sh\" \"/home/sangram/Downloads/mozilla_sangram0/runtime-main/src/coreclr\" \"/home/sangram/Downloads/mozilla_sangram0/runtime-main/artifacts/obj/coreclr/Linux.x64.Debug\" x64 clang \"\" \"\" Debug \"\"  -DCLR_CMAKE_PGO_INSTRUMENT=0 -DCLR_CMAKE_OPTDATA_PATH=/home/sangram/.nuget/packages/optimization.linux-x64.pgo.coreclr/1.0.0-prerelease.21275.7 -DCLR_CMAKE_PGO_OPTIMIZE=1 -DFEATURE_DISTRO_AGNOSTIC_SSL=1 \r\n  CMake command line is unchanged. Reusing previous cache instead of regenerating.\r\n  make: *** No rule to make target \u0027install\u0027.  Stop.\r\n  ~/Downloads/mozilla_sangram0/runtime-main/artifacts/obj/coreclr/Linux.x64.Debug ~/Downloads/mozilla_sangram0/runtime-main/src/coreclr\r\n  Executing make install -j 1\r\n  ~/Downloads/mozilla_sangram0/runtime-main/src/coreclr\r\n  Failed to build \"CoreCLR component\".\r\n/home/sangram/Downloads/mozilla_sangram0/runtime-main/src/coreclr/runtime.proj(46,5): error MSB3073: The command \"\"/home/sangram/Downloads/mozilla_sangram0/runtime-main/src/coreclr/build-runtime.sh\" -x64 -debug -os Linux\" exited with code 2.\r\n\r\nBuild FAILED.\r\n\r\n/home/sangram/Downloads/mozilla_sangram0/runtime-main/src/coreclr/runtime.proj(46,5): error MSB3073: The command \"\"/home/sangram/Downloads/mozilla_sangram0/runtime-main/src/coreclr/build-runtime.sh\" -x64 -debug -os Linux\" exited with code 2.\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:03:38.09\r\nBuild failed with exit code 1. Check errors above.\r\n  \r\n```  ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOMwcRsA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NTc5MjkzOA==",
                                           "createdAt":  "2021-06-07T10:03:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-06-07T10:03:37Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NjAxMjc5Mg==",
                                           "createdAt":  "2021-06-07T15:02:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nHi, after cloning a source code i wanna build it on my Ubuntu 18.04 machine. So i go to \"/runtime-main$\" Directory and start \"build.sh\" script. But I faced the following error. can you please suggest why that error has been occur or any argument has to pass with \"build.sh\" script.\r\n\r\n![error](https://user-images.githubusercontent.com/81962828/120997900-35bc5b80-c7a5-11eb-938c-7b3af51049ec.png)\r\n\r\n\r\n````\r\nsangram@sangram-VirtualBox:~/Downloads/mozilla_sangram0/runtime-main$` ./build.sh \r\n__DistroRid: linux-x64\r\n  Determining projects to restore..\r\n  Tool \u0027coverlet.console\u0027 (version \u00271.7.2\u0027) was restored. Available commands: coverlet\r\n  Tool \u0027dotnet-reportgenerator-globaltool\u0027 (version \u00274.5.8\u0027) was restored. Available commands: reportgenerator\r\n  Tool \u0027microsoft.dotnet.xharness.cli\u0027 (version \u00271.0.0-prerelease.21281.2\u0027) was restored. Available commands: xharness\r\n  Tool \u0027microsoft.visualstudio.slngen.tool\u0027 (version \u00275.0.5\u0027) was restored. Available commands: slngen\r\n  \r\n  Restore was successful.\r\n  All projects are up-to-date for restore.\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  System.Private.CoreLib.Generators -\u003e /home/sangram/Downloads/mozilla_sangram0/runtime-main/artifacts/bin/System.Private.CoreLib.Generators/netstandard2.0-Debug/System.Private.CoreLib.Generators.dll\r\n  System.Private.CoreLib -\u003e /home/sangram/Downloads/mozilla_sangram0/runtime-main/artifacts/bin/coreclr/Linux.x64.Debug/IL/System.Private.CoreLib.dll\r\n  runtime -\u003e \r\n  Commencing CoreCLR Repo build\r\n  __DistroRid: linux-x64\r\n  Setting up directories for build\r\n  Checking prerequisites...\r\n  Restoring the OptimizationData package\r\n  /home/sangram/Downloads/mozilla_sangram0/runtime-main/.dotnet/sdk/6.0.100-preview.3.21202.5/MSBuild.dll /nologo -bl:/home/sangram/Downloads/mozilla_sangram0/runtime-main/artifacts/log/Debug/OptRestore_Linux.x64.Debug.binlog -distributedlogger:Microsoft.DotNet.Tools.MSBuild.MSBuildLogger,/home/sangram/Downloads/mozilla_sangram0/runtime-main/.dotnet/sdk/6.0.100-preview.3.21202.5/dotnet.dll*Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingLogger,/home/sangram/Downloads/mozilla_sangram0/runtime-main/.dotnet/sdk/6.0.100-preview.3.21202.5/dotnet.dll -maxcpucount /m /m -verbosity:m /v:minimal /clp:Summary /clp:nosummary /nr:true /nodeReuse:false /nodereuse:false /p:TreatWarningsAsErrors=true /p:ContinuousIntegrationBuild=false /p:TargetArchitecture=x64 /p:Configuration=Debug /p:TargetOS=Linux /t:Restore /warnaserror /home/sangram/Downloads/mozilla_sangram0/runtime-main/src/coreclr/.nuget/optdata/optdata.csproj\r\n    Determining projects to restore...\r\n    Restored /home/sangram/Downloads/mozilla_sangram0/runtime-main/src/coreclr/.nuget/optdata/optdata.csproj (in 806 ms).\r\n  Commencing build of \"install\" target in \"CoreCLR component\" for Linux.x64.Debug in /home/sangram/Downloads/mozilla_sangram0/runtime-main/artifacts/obj/coreclr/Linux.x64.Debug\r\n  /home/sangram/Downloads/mozilla_sangram0/runtime-main/.dotnet/sdk/6.0.100-preview.3.21202.5/MSBuild.dll /nologo -bl:/home/sangram/Downloads/mozilla_sangram0/runtime-main/artifacts/log/Debug/GenNativeVersion_Linux.x64.Debug.binlog -distributedlogger:Microsoft.DotNet.Tools.MSBuild.MSBuildLogger,/home/sangram/Downloads/mozilla_sangram0/runtime-main/.dotnet/sdk/6.0.100-preview.3.21202.5/dotnet.dll*Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingLogger,/home/sangram/Downloads/mozilla_sangram0/runtime-main/.dotnet/sdk/6.0.100-preview.3.21202.5/dotnet.dll -maxcpucount /m -verbosity:m /v:minimal /clp:Summary /clp:nosummary /nr:true /nodeReuse:false /p:TreatWarningsAsErrors=true /p:ContinuousIntegrationBuild=false /p:NativeVersionFile=/home/sangram/Downloads/mozilla_sangram0/runtime-main/artifacts/obj/coreclr/Linux.x64.Debug/version.c /p:RuntimeVersionFile=/home/sangram/Downloads/mozilla_sangram0/runtime-main/artifacts/obj/coreclr/Linux.x64.Debug/../runtime_version.h /p:TargetArchitecture=x64 /p:Configuration=Debug /p:TargetOS=Linux /restore /t:GenerateRuntimeVersionFile /warnaserror /home/sangram/Downloads/mozilla_sangram0/runtime-main/eng/empty.csproj\r\n    Determining projects to restore...\r\n    Restored /home/sangram/Downloads/mozilla_sangram0/runtime-main/eng/empty.csproj (in 327 ms).\r\n  Invoking \"/home/sangram/Downloads/mozilla_sangram0/runtime-main/eng/native/gen-buildsys.sh\" \"/home/sangram/Downloads/mozilla_sangram0/runtime-main/src/coreclr\" \"/home/sangram/Downloads/mozilla_sangram0/runtime-main/artifacts/obj/coreclr/Linux.x64.Debug\" x64 clang \"\" \"\" Debug \"\"  -DCLR_CMAKE_PGO_INSTRUMENT=0 -DCLR_CMAKE_OPTDATA_PATH=/home/sangram/.nuget/packages/optimization.linux-x64.pgo.coreclr/1.0.0-prerelease.21275.7 -DCLR_CMAKE_PGO_OPTIMIZE=1 -DFEATURE_DISTRO_AGNOSTIC_SSL=1 \r\n  CMake command line is unchanged. Reusing previous cache instead of regenerating.\r\n  make: *** No rule to make target \u0027install\u0027.  Stop.\r\n  ~/Downloads/mozilla_sangram0/runtime-main/artifacts/obj/coreclr/Linux.x64.Debug ~/Downloads/mozilla_sangram0/runtime-main/src/coreclr\r\n  Executing make install -j 1\r\n  ~/Downloads/mozilla_sangram0/runtime-main/src/coreclr\r\n  Failed to build \"CoreCLR component\".\r\n/home/sangram/Downloads/mozilla_sangram0/runtime-main/src/coreclr/runtime.proj(46,5): error MSB3073: The command \"\"/home/sangram/Downloads/mozilla_sangram0/runtime-main/src/coreclr/build-runtime.sh\" -x64 -debug -os Linux\" exited with code 2.\r\n\r\nBuild FAILED.\r\n\r\n/home/sangram/Downloads/mozilla_sangram0/runtime-main/src/coreclr/runtime.proj(46,5): error MSB3073: The command \"\"/home/sangram/Downloads/mozilla_sangram0/runtime-main/src/coreclr/build-runtime.sh\" -x64 -debug -os Linux\" exited with code 2.\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:03:38.09\r\nBuild failed with exit code 1. Check errors above.\r\n  \r\n```  \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003esangramsalunkhe97\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-06-07T15:02:26Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NjA4MDcyOA==",
                                           "createdAt":  "2021-06-07T16:23:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "@sangramsalunkhe97 - looking at the log excerpt I\u0027m wondering whether it may be occurring due to stale artifacts confusing the build after codebase update (as CMake claims it sees a pre-existing cache). In case you updated a pre-existing runtime clone, can you please try to \"git clean -xdf\" and retry build.sh? Of course it wouldn\u0027t make sense if you made a fresh new clone.",
                                           "updatedAt":  "2021-06-07T16:23:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NjEwMTI5Ng==",
                                           "createdAt":  "2021-06-07T16:53:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "This is a dupe of https://github.com/dotnet/runtime/issues/53594. Copying my comment here and closing the other issue:\r\n\r\n\u003e It\u0027s not obvious from you output what went wrong. It looks like a cached CMake run - probably from a previous try - prevents us from having more diagnostic output. Can you try deleting artifacts/obj/coreclr/Linux.x64.Debug/cmake_cmd_line.txt (or the one for your build configuration, be it debug or release) and retry? We also recommend building inside Docker to ensure you have all the dependencies. The image we use for Linux x64 currently is `mcr.microsoft.com/dotnet-buildtools/prereqs:centos-7-20201227183837-5fe0e50` and instructions can be found in https://github.com/dotnet/runtime/blob/main/docs/workflow/building/coreclr/linux-instructions.md",
                                           "updatedAt":  "2021-06-07T16:53:01Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  " Failed to build \"CoreCLR component\".",
        "labels":  [
                       "question",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/53829",
        "createdAt":  "2021-06-07T18:21:41Z",
        "number":  53829,
        "author":  "radical",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-25T20:26:03Z",
        "body":  "Right now, to debug issues with tests running on helix, you have to make changes to your PR, and wait for the build to eventually get queued, and built. That adds unnecessary time, and resources queuing, and building all the other builds too.\r\n\r\nInstead, it would be very helpful to be able to run tests on helix, from a dev\u0027s local machine.\r\n\r\n`aspnetcore` has something like this - https://github.com/dotnet/aspnetcore/blob/main/docs/Helix.md\r\n\r\ncc @akoeplinger ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOMwjqOg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NjE2MDM1MA==",
                                           "createdAt":  "2021-06-07T18:21:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nRight now, to debug issues with tests running on helix, you have to make changes to your PR, and wait for the build to eventually get queued, and built. That adds unnecessary time, and resources queuing, and building all the other builds too.\r\n\r\nInstead, it would be very helpful to be able to run tests on helix, from a dev\u0027s local machine.\r\n\r\n`aspnetcore` has something like this - https://github.com/dotnet/aspnetcore/blob/main/docs/Helix.md\r\n\r\ncc @akoeplinger \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eradical\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-06-07T18:21:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NjE2MTIwOQ==",
                                           "createdAt":  "2021-06-07T18:23:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "\u003e Right now, to debug issues with tests running on helix, you have to make changes to your PR, and wait for the build to eventually get queued, and built. That adds unnecessary time, and resources queuing, and building all the other builds too.\r\n\r\n\u003e Instead, it would be very helpful to be able to run tests on helix, from a dev\u0027s local machine.\r\n\r\nHelix is not tight to CI on dotnet/runtime either. You only need to do what CI does, build, and then just invoke `sendtohelix.proj` with the right properties and env vars set and that should do the trick. That is actually what I do to test helix changes. \r\n",
                                           "updatedAt":  "2021-06-07T18:23:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NjE2MTk5OQ==",
                                           "createdAt":  "2021-06-07T18:24:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBts6UA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "radical",
                                                                               "createdAt":  "2021-06-07T18:25:15Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Wraith2",
                                                                               "createdAt":  "2021-06-07T18:30:48Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "\u003e You only need to do what CI does, build, and then just invoke sendtohelix.proj with the right properties and env vars set and that should do the trick.\r\n\r\nDoing that is not easy or even documented though, so having a simple script which does it for you would be nice.",
                                           "updatedAt":  "2021-06-07T18:24:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NjE2NTk1Mg==",
                                           "createdAt":  "2021-06-07T18:31:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBttAlA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "akoeplinger",
                                                                               "createdAt":  "2021-06-07T18:42:57Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "I don\u0027t see much value in a script over an msbuild invocation but I do see a ton of value in documenting the command and its parameters.",
                                           "updatedAt":  "2021-06-07T18:31:14Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NjE2NjY5MQ==",
                                           "createdAt":  "2021-06-07T18:32:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "\u003e I don\u0027t see much value in a script over an msbuild invocation but I do see a ton of value in documenting the command and its parameters.\r\n\r\nMaybe a msbuild target, that would work for library, and runtime tests?",
                                           "updatedAt":  "2021-06-07T18:32:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NjE3MDAxMQ==",
                                           "createdAt":  "2021-06-07T18:38:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "That target already exists in sendtohelix.proj, so it probably just needs to be documented.",
                                           "updatedAt":  "2021-06-07T18:38:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NjE3NjA0Mw==",
                                           "createdAt":  "2021-06-07T18:48:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBttFmQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "radical",
                                                                               "createdAt":  "2021-06-07T18:52:22Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "safern",
                                           "body":  "\u003e That target already exists in sendtohelix.proj, so it probably just needs to be documented.\r\n\r\nYes I think just document it. A script would be cumbersome as you would have to still pass down msbuild parameters... invoking MSBuild is simple. ",
                                           "updatedAt":  "2021-06-07T18:48:54Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NjE5MjcxMg==",
                                           "createdAt":  "2021-06-07T19:17:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "Cc @michaelgsharp who’s been working in this area in dotnet/machinelearning.",
                                           "updatedAt":  "2021-06-07T19:17:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NjIwNzg5Mw==",
                                           "createdAt":  "2021-06-07T19:45:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "michaelgsharp",
                                           "body":  "I did it by invoking MSBuild as @safern suggested. Since MSBuild pulls from environment variables identically to pulling from parameters, I wrote a powershell script that set the variables I needed and then called MSBuild with my submit to helix job:\r\n\r\n```powershell\r\n$env:BuildArchitecture=\"x64\"\r\n$env:HelixTargetQueues=\"Windows.10.Amd64.Open\"\r\n# Whatever other env variables I needed to set\r\n\r\npowershell \"$env:BUILD_SOURCESDIRECTORY\\eng\\common\\msbuild.ps1 $env:BUILD_SOURCESDIRECTORY\\eng\\helix.proj /t:Test /bl:$env:BUILD_SOURCESDIRECTORY\\artifacts\\log\\$env:BuildConfig\\SendToHelix.binlog \"... # Any other parameters needed go here\r\n```\r\n\r\nObviously the paths will probably need to be different than mine here. I did have some issues if I had a docker image name in the HelixTargetQueues and used an environment variable, but IIRC I just switched then to passing that in with `/p` and it worked fine.\r\n\r\nNote though that if you have slow upload internet speed and your payload is large it can take a while to upload.",
                                           "updatedAt":  "2021-06-07T19:45:56Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NjIyMjI2Ng==",
                                           "createdAt":  "2021-06-07T20:11:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "In the case of wasm and quite possibly iOS, we build and run the tests on helix.  If you have to make and validate a build change, it can be quite time consuming to iterate.  I think there are at least three parts to this:\r\n\r\n1. How can we trigger a build and archive only one test suite easily?\r\n\r\n2. Is there a target or script like @michaelgsharp specified to make it easier to send to helix?\r\n\r\n3. What is the easiest / quickest way to browse the logs?  FWIW - I use firefox as it presents json nicely.  ",
                                           "updatedAt":  "2021-06-07T20:11:31Z"
                                       }
                                   ],
                         "totalCount":  10
                     },
        "title":  "Need a simple way to run tests on helix, from the command line",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/53959",
        "createdAt":  "2021-06-09T21:04:37Z",
        "number":  53959,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-06-10T12:44:52Z",
        "body":  "With https://github.com/dotnet/arcade/pull/7403 merged, dotnet/runtime can use the `GenerateFileFromTemplate` task to generate files based on templates from within msbuild. Some code places that would benefit from this:\r\n- https://github.com/dotnet/runtime/blob/ccec848395a0b7306d34f6160931a8d8067dd434/eng/testing/tests.targets#L96-L98\r\n- https://github.com/dotnet/runtime/blob/b13715b6984889a709ba29ea8a1961db469f8805/src/tests/Common/CLRTest.Execute.Batch.targets#L63\r\n- https://github.com/dotnet/runtime/blob/e25f14b40cf164388f08d9989ea96bc57c694ad4/src/libraries/pkg/test/testPackages.proj#L118-L123\r\n- https://github.com/dotnet/runtime/blob/e25f14b40cf164388f08d9989ea96bc57c694ad4/eng/testing/linker/trimmingTests.targets#L69-L86\r\n- https://github.com/dotnet/runtime/blob/e25f14b40cf164388f08d9989ea96bc57c694ad4/src/mono/nuget/Microsoft.NET.Workload.Mono.Toolchain.Manifest/WorkloadManifest.json.in#L2\r\n\r\nand probably a few others that I that don\u0027t know about.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOMyWRYg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1ODEwMDA2Ng==",
                                           "createdAt":  "2021-06-09T21:04:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nWith https://github.com/dotnet/arcade/pull/7403 merged, dotnet/runtime can use the `GenerateFileFromTemplate` task to generate files based on templates from within msbuild. Some code places that would benefit from this:\r\n- https://github.com/dotnet/runtime/blob/ccec848395a0b7306d34f6160931a8d8067dd434/eng/testing/tests.targets#L96-L98\r\n- https://github.com/dotnet/runtime/blob/b13715b6984889a709ba29ea8a1961db469f8805/src/tests/Common/CLRTest.Execute.Batch.targets#L63\r\n- https://github.com/dotnet/runtime/blob/e25f14b40cf164388f08d9989ea96bc57c694ad4/src/libraries/pkg/test/testPackages.proj#L118-L123\r\n- https://github.com/dotnet/runtime/blob/e25f14b40cf164388f08d9989ea96bc57c694ad4/eng/testing/linker/trimmingTests.targets#L69-L86\r\n\r\nand probably a few others that I that don\u0027t know about.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003eFuture\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-06-09T21:04:42Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Replace usages of templating mechanism inside msbuild code paths with GenerateFileFromTemplate",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/54022",
        "createdAt":  "2021-06-10T19:40:48Z",
        "number":  54022,
        "author":  "hoyosjs",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-08-10T17:28:14Z",
        "body":  "Looking at build times in this [query (sadly internal)](https://dataexplorer.azure.com/clusters/engsrvprod/databases/engineeringdata?query=H4sIAAAAAAAAA4VSXW/UMBB8769YokpNJBda8dCnIEEACdQepyPQR+Szt4l7iR2tHY4ifjxrX673wUnkwfJO1uPxzNamx85YXKBypP3ZH1i3SAhfg6RQ8094A7Jx+esrXYC0GmaSsbKE7N1oOg2VI6xuF7AYbeDuLPUs0I9dSF1+VApRo86YGn8F5N9zSWjDZ7ecy9CWflz6QMY2eSwFXAm4KQS8H0kG4+yM15+4uayEj8Ya3yZdlzuNTD2Qe0QVLuVaPiWNYlJROf28F3Arfbhz2jwY1HwHBmk6L+ADkaPK8RsE3EuyrGaqvlHHp1zzidtr6VffkTyr2hRbMN7HGh6dsZDXh47CGUzff62dbHtRwoVfmWFAfZFwtqdDm+wpoqk3/1CmUHzk9WsTWsi2scCcnB5VgGRgtkuQc5haVYtqFfPZkU45zRz1sjO/UccjJeHQSYV5dm+sdmv/Y1ZnArL1puJt7Cr2aA4y2Sawn8qxh0cWPxsl9nKPDNHYeO4LaSQxzVMEqlbaBuMuaQFnNw+PyNsQsB9YwXmHD+HlwRBGV8/JNG3EQ7ubp1NjKI6M4W4/9r0kBiCNTanimhewfII7Y8eAvlwam58ge3XdC7guTnC6+Lg9BpBeMcyqIx4nTLXsz1+czAq4wQMAAA==) Windows native builds are now 10-12 mins on avg, while the linux and linux-musl variants take at least double as much and macOS has a long tail. It would be worth investigating the wins of doing this all across the board.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOMzlDYA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1ODk3MzgyNg==",
                                           "createdAt":  "2021-06-10T19:40:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-threading-tasks\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nLooking at build times in this [query (sadly internal)](https://dataexplorer.azure.com/clusters/engsrvprod/databases/engineeringdata?query=H4sIAAAAAAAAA4VSXW/UMBB8769YokpNJBda8dCnIEEACdQepyPQR+Szt4l7iR2tHY4ifjxrX673wUnkwfJO1uPxzNamx85YXKBypP3ZH1i3SAhfg6RQ8094A7Jx+esrXYC0GmaSsbKE7N1oOg2VI6xuF7AYbeDuLPUs0I9dSF1+VApRo86YGn8F5N9zSWjDZ7ecy9CWflz6QMY2eSwFXAm4KQS8H0kG4+yM15+4uayEj8Ya3yZdlzuNTD2Qe0QVLuVaPiWNYlJROf28F3Arfbhz2jwY1HwHBmk6L+ADkaPK8RsE3EuyrGaqvlHHp1zzidtr6VffkTyr2hRbMN7HGh6dsZDXh47CGUzff62dbHtRwoVfmWFAfZFwtqdDm+wpoqk3/1CmUHzk9WsTWsi2scCcnB5VgGRgtkuQc5haVYtqFfPZkU45zRz1sjO/UccjJeHQSYV5dm+sdmv/Y1ZnArL1puJt7Cr2aA4y2Sawn8qxh0cWPxsl9nKPDNHYeO4LaSQxzVMEqlbaBuMuaQFnNw+PyNsQsB9YwXmHD+HlwRBGV8/JNG3EQ7ubp1NjKI6M4W4/9r0kBiCNTanimhewfII7Y8eAvlwam58ge3XdC7guTnC6+Lg9BpBeMcyqIx4nTLXsz1+czAq4wQMAAA==) Windows native builds are now 10-12 mins on avg, while the linux and linux-musl variants take at least double as much and macOS has a long tail. It would be worth investigating the wins of doing this all across the board.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ehoyosjs\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-System.Threading.Tasks`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-06-10T19:40:52Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1ODk3NDA5Nw==",
                                           "createdAt":  "2021-06-10T19:41:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nLooking at build times in this [query (sadly internal)](https://dataexplorer.azure.com/clusters/engsrvprod/databases/engineeringdata?query=H4sIAAAAAAAAA4VSXW/UMBB8769YokpNJBda8dCnIEEACdQepyPQR+Szt4l7iR2tHY4ifjxrX673wUnkwfJO1uPxzNamx85YXKBypP3ZH1i3SAhfg6RQ8094A7Jx+esrXYC0GmaSsbKE7N1oOg2VI6xuF7AYbeDuLPUs0I9dSF1+VApRo86YGn8F5N9zSWjDZ7ecy9CWflz6QMY2eSwFXAm4KQS8H0kG4+yM15+4uayEj8Ya3yZdlzuNTD2Qe0QVLuVaPiWNYlJROf28F3Arfbhz2jwY1HwHBmk6L+ADkaPK8RsE3EuyrGaqvlHHp1zzidtr6VffkTyr2hRbMN7HGh6dsZDXh47CGUzff62dbHtRwoVfmWFAfZFwtqdDm+wpoqk3/1CmUHzk9WsTWsi2scCcnB5VgGRgtkuQc5haVYtqFfPZkU45zRz1sjO/UccjJeHQSYV5dm+sdmv/Y1ZnArL1puJt7Cr2aA4y2Sawn8qxh0cWPxsl9nKPDNHYeO4LaSQxzVMEqlbaBuMuaQFnNw+PyNsQsB9YwXmHD+HlwRBGV8/JNG3EQ7ubp1NjKI6M4W4/9r0kBiCNTanimhewfII7Y8eAvlwam58ge3XdC7guTnC6+Lg9BpBeMcyqIx4nTLXsz1+czAq4wQMAAA==) Windows native builds are now 10-12 mins on avg, while the linux and linux-musl variants take at least double as much and macOS has a long tail. It would be worth investigating the wins of doing this all across the board.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ehoyosjs\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-06-10T19:41:05Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1OTA1MjExMQ==",
                                           "createdAt":  "2021-06-10T20:47:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "We already have the infrastructure in our builds to support using Ninja on non-Windows platforms. So we just need to investigate build throughput",
                                           "updatedAt":  "2021-06-10T20:47:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1OTM3OTg5Nw==",
                                           "createdAt":  "2021-06-11T08:19:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Running build of debug flavor of coreclr on a clean state of the repo with and without Ninja on my Linux devbox:\r\n```\r\ntime src/coreclr/build-runtime.sh\r\nreal    5m18.566s\r\nuser    29m52.820s\r\nsys     2m7.488s\r\n```\r\n```\r\ntime src/coreclr/build-runtime.sh -ninja\r\nreal    5m12.258s\r\nuser    29m37.416s\r\nsys     2m1.352s\r\n```\r\n\r\nSo the gain is mere 6 seconds (may as well be a noise)",
                                           "updatedAt":  "2021-06-11T08:19:22Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1OTM4MTY4Mw==",
                                           "createdAt":  "2021-06-11T08:22:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "That\u0027s a bummer. Would be good to collect data, especially on machines with less cores. @janvorli what\u0027s your setup? ",
                                           "updatedAt":  "2021-06-11T08:22:14Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1OTM4MzU4Nw==",
                                           "createdAt":  "2021-06-11T08:25:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "This is a very old device (the CPU was introduced in 2009) with 8 cores:\r\n```\r\n lscpu\r\nArchitecture:          x86_64\r\nCPU op-mode(s):        32-bit, 64-bit\r\nByte Order:            Little Endian\r\nCPU(s):                8\r\nOn-line CPU(s) list:   0-7\r\nThread(s) per core:    1\r\nCore(s) per socket:    4\r\nSocket(s):             2\r\nNUMA node(s):          2\r\nVendor ID:             GenuineIntel\r\nCPU family:            6\r\nModel:                 26\r\nModel name:            Intel(R) Xeon(R) CPU           E5530  @ 2.40GHz\r\nStepping:              5\r\nCPU MHz:               2394.094\r\nBogoMIPS:              4787.89\r\nVirtualization:        VT-x\r\nL1d cache:             32K\r\nL1i cache:             32K\r\nL2 cache:              256K\r\nL3 cache:              8192K\r\nNUMA node0 CPU(s):     0-3\r\nNUMA node1 CPU(s):     4-7\r\nFlags:                 fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm dca sse4_1 sse4_2 popcnt lahf_lm ssbd ibrs ibpb stibp kaiser tpr_shadow vnmi flexpriority ept vpid dtherm ida flush_l1d\r\n\r\n```",
                                           "updatedAt":  "2021-06-11T08:25:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1OTM5MDgxNg==",
                                           "createdAt":  "2021-06-11T08:37:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "No idea what causes then the builds to be so slow. I know on Alpine we use a pretty old version of clang, but I am not convinced it\u0027d be that. ",
                                           "updatedAt":  "2021-06-11T08:37:28Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "Investigate using ninja for non-windows builds",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/54725",
        "createdAt":  "2021-06-25T05:48:07Z",
        "number":  54725,
        "author":  "sandreenko",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCqMWqQ==",
                          "nodes":  [
                                        {
                                            "content":  "HEART",
                                            "user":  "vcsjones",
                                            "createdAt":  "2021-06-25T15:13:41Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "svick",
                                            "createdAt":  "2021-06-27T13:18:35Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "PathogenDavid",
                                            "createdAt":  "2022-08-19T01:25:44Z"
                                        }
                                    ],
                          "totalCount":  3
                      },
        "updatedAt":  "2021-06-30T16:33:10Z",
        "body":  "It would be useful (at least for @dotnet/jit-contrib team) to be able to build very old commits like `git checkout MAIN~1000; build.cmd libs+clr` in order to find when regressions were introduced.\r\n\r\nThe proposal is to have a ci job that runs build ( Windows x64 would be enough in my opinion, once per week) that runs a build of old checkouts (like last release+100*n for all available n) to make sure they are still available if we need them.\r\n\r\n\r\nNowadays it usually does not work well, the first problem is that we can\u0027t download the old SDK listed here:\r\nhttps://github.com/dotnet/runtime/blob/881e90231b93652acde39bea946c6075a71d5ddc/global.json#L3\r\n\r\na hack to make it work is to stash the current version and apply it to the older versions.\r\n\r\nThe other popular break is when a csproj file was deleted and when we go to an older version we see \"no restore\" action found, like we deleted \"src/tests/Common/scripts/scripts.csproj\" recently.\r\n\r\na hack to make it work is to delete it in the older versions as well, usually helps.\r\n\r\nand if we go even further then we start seeing issues like `D:\\Sergey\\git\\runtime\\.dotnet\\sdk\\6.0.100-preview.4.21255.9\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.ImportWorkloads.targets(24,5): error NETSDK1147: The following workload packs were not installed: Microsoft.iOS.Sdk [D:\\Sergey\\git\\runtime\\Build.proj]` that I have not found how to hide.\r\n\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOM8AEBA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2ODIyMTk1Ng==",
                                           "createdAt":  "2021-06-25T05:48:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nIt would be useful (at least for @dotnet/jit-contrib team) to be able to build very old commits like `git checkout MAIN~1000; build.cmd libs+clr` in order to find when regressions were introduced.\r\n\r\nThe proposal is to have a ci job that runs build ( Windows x64 would be enough in my opinion, once per week) that runs a build of old checkouts (like last release+100*n for all available n) to make sure they are still available if we need them.\r\n\r\n\r\nNowadays it usually does not work well, the first problem is that we can\u0027t download the old SDK listed here:\r\nhttps://github.com/dotnet/runtime/blob/881e90231b93652acde39bea946c6075a71d5ddc/global.json#L3\r\n\r\na hack to make it work is to stash the current version and apply it to the older versions.\r\n\r\nThe other popular break is when a csproj file was deleted and when we go to an older version we see \"no restore\" action found, like we deleted \"src/tests/Common/scripts/scripts.csproj\" recently.\r\n\r\na hack to make it work is to delete it in the older versions as well, usually helps.\r\n\r\nand if we go even further then we start seeing issues like `D:\\Sergey\\git\\runtime\\.dotnet\\sdk\\6.0.100-preview.4.21255.9\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.ImportWorkloads.targets(24,5): error NETSDK1147: The following workload packs were not installed: Microsoft.iOS.Sdk [D:\\Sergey\\git\\runtime\\Build.proj]` that I have not found how to hide.\r\n\r\n\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003esandreenko\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `wishlist`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-06-25T05:48:09Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Support building old commits of Runtime and check it in CI.",
        "labels":  [
                       "wishlist",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/54957",
        "createdAt":  "2021-06-30T11:54:06Z",
        "number":  54957,
        "author":  "noahfalk",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-28T18:22:59Z",
        "body":  "Working on [a recent PR](https://github.com/dotnet/runtime/pull/54333/checks?check_run_id=2951363176) the OSX tests failed. After following the link to [the log](https://helix.dot.net/api/2019-06-17/jobs/f690f8d0-f9b1-46b8-8dde-10a3ba276cbe/workitems/System.Diagnostics.DiagnosticSource.Tests/console) this is the information shown:\r\n\r\n```\r\nConsole log: \u0027System.Diagnostics.DiagnosticSource.Tests\u0027 from job f690f8d0-f9b1-46b8-8dde-10a3ba276cbe workitem fad5a9d9-9dfc-4bc3-9708-bed82a1aa195 (osx.1014.amd64.open) executed on machine dci-mac-build-151\r\n+ ./RunTests.sh --runtime-path /tmp/helix/working/B4910A08/p\r\n----- start Wed Jun 30 03:27:42 PDT 2021 =============== To repro directly: =====================================================\r\npushd .\r\n/tmp/helix/working/B4910A08/p/dotnet exec --runtimeconfig System.Diagnostics.DiagnosticSource.Tests.runtimeconfig.json --depsfile System.Diagnostics.DiagnosticSource.Tests.deps.json xunit.console.dll System.Diagnostics.DiagnosticSource.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing \r\npopd\r\n===========================================================================================================\r\n/private/tmp/helix/working/B4910A08/w/C4D20A3E/e /private/tmp/helix/working/B4910A08/w/C4D20A3E/e\r\n  Discovering: System.Diagnostics.DiagnosticSource.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Diagnostics.DiagnosticSource.Tests (found 203 of 206 test cases)\r\n  Starting:    System.Diagnostics.DiagnosticSource.Tests (parallel test collections = on, max threads = 12)\r\n  Finished:    System.Diagnostics.DiagnosticSource.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Diagnostics.DiagnosticSource.Tests  Total: 257, Errors: 0, Failed: 0, Skipped: 0, Time: 13.556s\r\n[\u0027System.Diagnostics.DiagnosticSource.Tests\u0027 END OF WORK ITEM LOG: Command timed out, and was killed]\r\n```\r\n\r\nThe log ends saying that \u0027Command timed out and was killed\u0027. If I had a wishlist of improvements to the scenario:\r\n1. The timeout wouldn\u0027t have occured\r\n2. The console output would make it obvious what code/process is in-progress and failed to complete. I think after some investigation xunit.console.dll hasn\u0027t yet exited, but I am uncertain and it took 20+ min of trying to learn how the automated scripts invoke each other to reach that guess.\r\n3. When the timeout occured, dumps or other diagnostic data would be captured and linked to provide better odds of diagnosing the problem\r\n4. This log would provide links or instructions how to find important assets such as:\r\n  - The zip files containing files that helix deployed to run this work item. Most importantly [the one that contains RunTests.sh](https://helixde8s23ayyeko0k025g8.blob.core.windows.net/helix-job-acaf2ddc-07c4-459f-964e-0aec4db595bc10f1c118c904c3784/System.Diagnostics.DiagnosticSource.Tests.zip)\r\n  - [Helix\u0027s log file for executing this work item](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-54333-merge-7af3c783f89349c58b/System.Diagnostics.DiagnosticSource.Tests/2b1612e3-d4eb-413f-a3a0-79d816388b61.log?sv=2019-07-07\u0026se=2021-07-20T10%3A27%3A26Z\u0026sr=c\u0026sp=rl\u0026sig=qimS3iudw%2B4KtBN5UMhsGm62f4TA9exKNrZ1VaXY3Tw%3D)\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOM_jf3A==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3MTMzODA2OA==",
                                           "createdAt":  "2021-06-30T11:54:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @tarekgh, @tommcdon, @pjanotti\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nWorking on [a recent PR](https://github.com/dotnet/runtime/pull/54333/checks?check_run_id=2951363176) the OSX tests failed. After following the link to [the log](https://helix.dot.net/api/2019-06-17/jobs/f690f8d0-f9b1-46b8-8dde-10a3ba276cbe/workitems/System.Diagnostics.DiagnosticSource.Tests/console) this is the information shown:\r\n\r\n```\r\nConsole log: \u0027System.Diagnostics.DiagnosticSource.Tests\u0027 from job f690f8d0-f9b1-46b8-8dde-10a3ba276cbe workitem fad5a9d9-9dfc-4bc3-9708-bed82a1aa195 (osx.1014.amd64.open) executed on machine dci-mac-build-151\r\n+ ./RunTests.sh --runtime-path /tmp/helix/working/B4910A08/p\r\n----- start Wed Jun 30 03:27:42 PDT 2021 =============== To repro directly: =====================================================\r\npushd .\r\n/tmp/helix/working/B4910A08/p/dotnet exec --runtimeconfig System.Diagnostics.DiagnosticSource.Tests.runtimeconfig.json --depsfile System.Diagnostics.DiagnosticSource.Tests.deps.json xunit.console.dll System.Diagnostics.DiagnosticSource.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing \r\npopd\r\n===========================================================================================================\r\n/private/tmp/helix/working/B4910A08/w/C4D20A3E/e /private/tmp/helix/working/B4910A08/w/C4D20A3E/e\r\n  Discovering: System.Diagnostics.DiagnosticSource.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Diagnostics.DiagnosticSource.Tests (found 203 of 206 test cases)\r\n  Starting:    System.Diagnostics.DiagnosticSource.Tests (parallel test collections = on, max threads = 12)\r\n  Finished:    System.Diagnostics.DiagnosticSource.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Diagnostics.DiagnosticSource.Tests  Total: 257, Errors: 0, Failed: 0, Skipped: 0, Time: 13.556s\r\n[\u0027System.Diagnostics.DiagnosticSource.Tests\u0027 END OF WORK ITEM LOG: Command timed out, and was killed]\r\n```\r\n\r\nThe log ends saying that \u0027Command timed out and was killed\u0027. If I had a wishlist of improvements to the scenario:\r\n1. The timeout wouldn\u0027t have occured\r\n2. The console output would make it obvious what code/process is in-progress and failed to complete. I think after some investigation xunit.console.dll hasn\u0027t yet exited, but I am uncertain and it took 20+ min of trying to learn how the automated scripts invoke each other to reach that guess.\r\n3. When the timeout occured, dumps or other diagnostic data would be captured and linked to provide better odds of diagnosing the problem\r\n4. This log would provide links or instructions how to find important assets such as:\r\n  - The zip files containing files that helix deployed to run this work item. Most importantly [the one that contains RunTests.sh](https://helixde8s23ayyeko0k025g8.blob.core.windows.net/helix-job-acaf2ddc-07c4-459f-964e-0aec4db595bc10f1c118c904c3784/System.Diagnostics.DiagnosticSource.Tests.zip)\r\n  - [Helix\u0027s log file for executing this work item](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-54333-merge-7af3c783f89349c58b/System.Diagnostics.DiagnosticSource.Tests/2b1612e3-d4eb-413f-a3a0-79d816388b61.log?sv=2019-07-07\u0026se=2021-07-20T10%3A27%3A26Z\u0026sr=c\u0026sp=rl\u0026sig=qimS3iudw%2B4KtBN5UMhsGm62f4TA9exKNrZ1VaXY3Tw%3D)\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003enoahfalk\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-System.Diagnostics.Tracing`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-06-30T11:54:10Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3MTMzOTAyMA==",
                                           "createdAt":  "2021-06-30T11:55:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "noahfalk",
                                           "body":  "@hoyosjs - can you help me route this issue?",
                                           "updatedAt":  "2021-06-30T11:55:37Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3MTQ2NDUxOA==",
                                           "createdAt":  "2021-06-30T14:40:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nWorking on [a recent PR](https://github.com/dotnet/runtime/pull/54333/checks?check_run_id=2951363176) the OSX tests failed. After following the link to [the log](https://helix.dot.net/api/2019-06-17/jobs/f690f8d0-f9b1-46b8-8dde-10a3ba276cbe/workitems/System.Diagnostics.DiagnosticSource.Tests/console) this is the information shown:\r\n\r\n```\r\nConsole log: \u0027System.Diagnostics.DiagnosticSource.Tests\u0027 from job f690f8d0-f9b1-46b8-8dde-10a3ba276cbe workitem fad5a9d9-9dfc-4bc3-9708-bed82a1aa195 (osx.1014.amd64.open) executed on machine dci-mac-build-151\r\n+ ./RunTests.sh --runtime-path /tmp/helix/working/B4910A08/p\r\n----- start Wed Jun 30 03:27:42 PDT 2021 =============== To repro directly: =====================================================\r\npushd .\r\n/tmp/helix/working/B4910A08/p/dotnet exec --runtimeconfig System.Diagnostics.DiagnosticSource.Tests.runtimeconfig.json --depsfile System.Diagnostics.DiagnosticSource.Tests.deps.json xunit.console.dll System.Diagnostics.DiagnosticSource.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing \r\npopd\r\n===========================================================================================================\r\n/private/tmp/helix/working/B4910A08/w/C4D20A3E/e /private/tmp/helix/working/B4910A08/w/C4D20A3E/e\r\n  Discovering: System.Diagnostics.DiagnosticSource.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Diagnostics.DiagnosticSource.Tests (found 203 of 206 test cases)\r\n  Starting:    System.Diagnostics.DiagnosticSource.Tests (parallel test collections = on, max threads = 12)\r\n  Finished:    System.Diagnostics.DiagnosticSource.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Diagnostics.DiagnosticSource.Tests  Total: 257, Errors: 0, Failed: 0, Skipped: 0, Time: 13.556s\r\n[\u0027System.Diagnostics.DiagnosticSource.Tests\u0027 END OF WORK ITEM LOG: Command timed out, and was killed]\r\n```\r\n\r\nThe log ends saying that \u0027Command timed out and was killed\u0027. If I had a wishlist of improvements to the scenario:\r\n1. The timeout wouldn\u0027t have occured\r\n2. The console output would make it obvious what code/process is in-progress and failed to complete. I think after some investigation xunit.console.dll hasn\u0027t yet exited, but I am uncertain and it took 20+ min of trying to learn how the automated scripts invoke each other to reach that guess.\r\n3. When the timeout occured, dumps or other diagnostic data would be captured and linked to provide better odds of diagnosing the problem\r\n4. This log would provide links or instructions how to find important assets such as:\r\n  - The zip files containing files that helix deployed to run this work item. Most importantly [the one that contains RunTests.sh](https://helixde8s23ayyeko0k025g8.blob.core.windows.net/helix-job-acaf2ddc-07c4-459f-964e-0aec4db595bc10f1c118c904c3784/System.Diagnostics.DiagnosticSource.Tests.zip)\r\n  - [Helix\u0027s log file for executing this work item](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-54333-merge-7af3c783f89349c58b/System.Diagnostics.DiagnosticSource.Tests/2b1612e3-d4eb-413f-a3a0-79d816388b61.log?sv=2019-07-07\u0026se=2021-07-20T10%3A27%3A26Z\u0026sr=c\u0026sp=rl\u0026sig=qimS3iudw%2B4KtBN5UMhsGm62f4TA9exKNrZ1VaXY3Tw%3D)\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003enoahfalk\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-06-30T14:40:26Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3MTY2NTcyMQ==",
                                           "createdAt":  "2021-06-30T19:21:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "\u003e 1. The timeout wouldn\u0027t have occured\r\n\r\nThis one is not easily negotiable. We need to kill long running workitems. Weird that it says it ran for 13 seconds... However, if you see `System.Diagnostics.DiagnosticSource.Tests  Total: 257, Errors: 0, Failed: 0, Skipped: 0, Time: 13.556s`, that means tests ran all. We just had an unfortunate timeout after the fact, and there would be no dump. This is outside our tests. \r\n\r\n\u003e 2. The console output would make it obvious what code/process is in-progress and failed to complete. I think after some investigation xunit.console.dll hasn\u0027t yet exited, but I am uncertain and it took 20+ min of trying to learn how the automated scripts invoke each other to reach that guess.\r\n\r\nWhile this is definitely something that has room for improvement, we have two issues here. The first one is XUnit not showing what is happening. This is not as easy as it\u0027s highly parallel. Also, we can\u0027t easily modify the xunit console runner (and the verbose flag makes stuff really verbose and it\u0027s not useful). That being said, test timeouts and such are logged if we use `dotnet-test`\r\n\r\n\u003e 3. When the timeout occurred, dumps or other diagnostic data would be captured and linked to provide better odds of diagnosing the problem\r\n\r\nWe do collect dumps on crash, and CoreCLR does dump on timeout too if I am not wrong. This should light up for libraries once we start using `dotnet-test` (cc: @ViktorHofer, @safern)\r\n\r\n\u003e 4. This log would provide links or instructions how to find important assets such as ...\r\n\r\nConsole logs are from helix running. On the \"Helix Test Logs (Beta)\" tab you\u0027d find the list of links to the cores. In library tests this even comes with a markdown on how to obtain the files. It basically shows this: https://github.com/dotnet/runtime/blob/main/eng/testing/debug-dump-template.md with with the job and workitem filled out. For yours it\u0027d look like `runfo get-helix-payload --jobid aa7e2ad2-fa39-4e4d-8666-1fb4c70a6631 --workitems System.Diagnostics.DiagnosticSource.Tests -o .`. Running that would get everything to that was needed to run it - scripts, log, and all. \r\n\r\nMaybe the thing to consider here is to point to that tab in the log if something in the test execution went wrong.",
                                           "updatedAt":  "2021-06-30T19:21:54Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3MTY2NjExMQ==",
                                           "createdAt":  "2021-06-30T19:22:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nWorking on [a recent PR](https://github.com/dotnet/runtime/pull/54333/checks?check_run_id=2951363176) the OSX tests failed. After following the link to [the log](https://helix.dot.net/api/2019-06-17/jobs/f690f8d0-f9b1-46b8-8dde-10a3ba276cbe/workitems/System.Diagnostics.DiagnosticSource.Tests/console) this is the information shown:\r\n\r\n```\r\nConsole log: \u0027System.Diagnostics.DiagnosticSource.Tests\u0027 from job f690f8d0-f9b1-46b8-8dde-10a3ba276cbe workitem fad5a9d9-9dfc-4bc3-9708-bed82a1aa195 (osx.1014.amd64.open) executed on machine dci-mac-build-151\r\n+ ./RunTests.sh --runtime-path /tmp/helix/working/B4910A08/p\r\n----- start Wed Jun 30 03:27:42 PDT 2021 =============== To repro directly: =====================================================\r\npushd .\r\n/tmp/helix/working/B4910A08/p/dotnet exec --runtimeconfig System.Diagnostics.DiagnosticSource.Tests.runtimeconfig.json --depsfile System.Diagnostics.DiagnosticSource.Tests.deps.json xunit.console.dll System.Diagnostics.DiagnosticSource.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing \r\npopd\r\n===========================================================================================================\r\n/private/tmp/helix/working/B4910A08/w/C4D20A3E/e /private/tmp/helix/working/B4910A08/w/C4D20A3E/e\r\n  Discovering: System.Diagnostics.DiagnosticSource.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Diagnostics.DiagnosticSource.Tests (found 203 of 206 test cases)\r\n  Starting:    System.Diagnostics.DiagnosticSource.Tests (parallel test collections = on, max threads = 12)\r\n  Finished:    System.Diagnostics.DiagnosticSource.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Diagnostics.DiagnosticSource.Tests  Total: 257, Errors: 0, Failed: 0, Skipped: 0, Time: 13.556s\r\n[\u0027System.Diagnostics.DiagnosticSource.Tests\u0027 END OF WORK ITEM LOG: Command timed out, and was killed]\r\n```\r\n\r\nThe log ends saying that \u0027Command timed out and was killed\u0027. If I had a wishlist of improvements to the scenario:\r\n1. The timeout wouldn\u0027t have occured\r\n2. The console output would make it obvious what code/process is in-progress and failed to complete. I think after some investigation xunit.console.dll hasn\u0027t yet exited, but I am uncertain and it took 20+ min of trying to learn how the automated scripts invoke each other to reach that guess.\r\n3. When the timeout occured, dumps or other diagnostic data would be captured and linked to provide better odds of diagnosing the problem\r\n4. This log would provide links or instructions how to find important assets such as:\r\n  - The zip files containing files that helix deployed to run this work item. Most importantly [the one that contains RunTests.sh](https://helixde8s23ayyeko0k025g8.blob.core.windows.net/helix-job-acaf2ddc-07c4-459f-964e-0aec4db595bc10f1c118c904c3784/System.Diagnostics.DiagnosticSource.Tests.zip)\r\n  - [Helix\u0027s log file for executing this work item](https://helixre8s23ayyeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-54333-merge-7af3c783f89349c58b/System.Diagnostics.DiagnosticSource.Tests/2b1612e3-d4eb-413f-a3a0-79d816388b61.log?sv=2019-07-07\u0026se=2021-07-20T10%3A27%3A26Z\u0026sr=c\u0026sp=rl\u0026sig=qimS3iudw%2B4KtBN5UMhsGm62f4TA9exKNrZ1VaXY3Tw%3D)\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003enoahfalk\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e7.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-06-30T19:22:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3MTY3MDg4Ng==",
                                           "createdAt":  "2021-06-30T19:30:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "Somehow that workitem lasted 45 min, out of which less than a min was test execution. As you said, XUnit is hung. Not sure how to make it obvious what\u0027s our part vs xunit. Maybe someone has an idea? In this case xunit and your test are in the same process. Unclear how we\u0027d signal a non-exiting test harness. RunTests should also probably implement harness timeout on top of the test timeout for misbehaving infra. ",
                                           "updatedAt":  "2021-06-30T19:30:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3MTY3MTg3Mw==",
                                           "createdAt":  "2021-06-30T19:31:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "[Query](https://dataexplorer.azure.com/clusters/engsrvprod/databases/engineeringdata?query=H4sIAAAAAAAAAwvPL8r2LEnNLeaqUSjPSC1KVfDKT/JLzE1VsLVVUEpMNE81Skwx0k1LNLbUNUk1SdG1MDMz0zVMSzJJNjdINDMzNlRSSMxLUXArykzNS8mphGsNriwGGqvnkpmYnpdfXJKZXIzEDs4vLUpO1QtJLS4pVgIAS5R0hYMAAAA=)\r\n```SQL\r\nWorkItems\r\n| where JobName == \"aa7e2ad2-fa39-4e4d-8666-1fb4c70a6631\" and FriendlyName == \"System.Diagnostics.DiagnosticSource.Tests\"\r\n```",
                                           "updatedAt":  "2021-06-30T19:31:58Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3MTk0MjkxOQ==",
                                           "createdAt":  "2021-07-01T05:54:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "noahfalk",
                                           "body":  "\u003e \u003e The timeout wouldn\u0027t have occured\r\n\r\n\u003e This one is not easily negotiable. We need to kill long running workitems.\r\n\r\nI agree. Perhaps it wasn\u0027t well phrased. I mean \"I wish that whatever the mystery thing is that made it run a long time is fixed, such that it would not have run a long time and not needed to timeout.\"\r\n\r\n\u003e \u003e This log would provide links or instructions how to find important assets such as ...\r\n\r\n\u003e On the \"Helix Test Logs (Beta)\" tab you\u0027d find\r\n\r\nThe crux of this wishlist item is that I want the info to be easily discoverable. If the links/instructions had been in this log I expect I would have found them right away. If the links/instructions are somewhere else then the value is lower based on how long it takes me to remember/discover what the other place is. Of course if I am the only one who has trouble finding them and for everyone else it is intuitive its fine to say that my experience is not representative and the solution is that I need to learn more about it. My default assumption is that if I had trouble then perhaps I am not the only one.",
                                           "updatedAt":  "2021-07-01T05:54:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3MTk0ODI1Mg==",
                                           "createdAt":  "2021-07-01T06:04:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "noahfalk",
                                           "body":  "\u003e Not sure how to make it obvious what\u0027s our part vs xunit. Maybe someone has an idea?\r\n\r\nTwo potential ideas:\r\n1. I think you already said this one - RunTests.sh has its own timeout for xunit that is shorter than helix\u0027s overall timeout. This lets Runtests.sh print some explicit output \"xunit process did exit after X minutes and was killed\"\r\n2. Structure the output in a way that strongly implies the nesting:\r\n\r\n```\r\nRunning command: dotnet xunit.console.dll ...\r\nAll xunit command output shown inline between the { and } lines\r\n{\r\n  Discovering: System.Diagnostics.DiagnosticSource.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Diagnostics.DiagnosticSource.Tests (found 203 of 206 test cases)\r\n  Starting:    System.Diagnostics.DiagnosticSource.Tests (parallel test collections = on, max threads = 12)\r\n  Finished:    System.Diagnostics.DiagnosticSource.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Diagnostics.DiagnosticSource.Tests  Total: 257, Errors: 0, Failed: 0, Skipped: 0, Time: 13.556s\r\n\r\n[\u0027System.Diagnostics.DiagnosticSource.Tests\u0027 END OF WORK ITEM LOG: Command timed out, and was killed]\r\n",
                                           "updatedAt":  "2021-07-01T06:04:54Z"
                                       }
                                   ],
                         "totalCount":  9
                     },
        "title":  "Helix test failure log makes it hard to diagnose failure",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/55163",
        "createdAt":  "2021-07-05T07:21:26Z",
        "number":  55163,
        "author":  "VincentBu",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-07-12T00:13:28Z",
        "body":  "Run: [runtime-coreclr r2r-extra 20210703.1](https://dev.azure.com/dnceng/public/_build/results?buildId=1219742\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=36365904\u0026resultId=109367\u0026paneView=debug)\r\n\r\n**One of Error messages:**\r\n```\r\nTest Infrastructure Failure: System.IO.IOException: No space left on device\r\nat System.IO.FileSystem.CreateDirectory(String fullPath) in System.IO.FileSystem.dll:token 0x60001a7+0x18a\r\nat System.IO.Directory.CreateDirectory(String path) in System.IO.FileSystem.dll:token 0x6000071+0x25\r\nat JIT_Methodical.casts_ilseq__il_relCommonBase__il_relCommonBase._casts_ilseq__il_relCommonBase__il_relCommonBase_sh() in JIT.Methodical.XUnitWrapper.dll:token 0x6000240+0xa8\r\nExpected: True\r\nActual:   False\r\n\r\n\r\nStack trace\r\n   at JIT_Methodical._casts_ilseq__il_relCommonBase__il_relCommonBase_._casts_ilseq__il_relCommonBase__il_relCommonBase_sh() in JIT.Methodical.XUnitWrapper.dll:token 0x6000240+0xf0\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONCSXSQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3Mzg3MDA4Mg==",
                                           "createdAt":  "2021-07-05T07:21:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-io\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nRun: [runtime-coreclr r2r-extra 20210703.1](https://dev.azure.com/dnceng/public/_build/results?buildId=1219742\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=36365904\u0026resultId=109367\u0026paneView=debug)\r\n\r\n**One of Error messages:**\r\n```\r\nTest Infrastructure Failure: System.IO.IOException: No space left on device\r\nat System.IO.FileSystem.CreateDirectory(String fullPath) in System.IO.FileSystem.dll:token 0x60001a7+0x18a\r\nat System.IO.Directory.CreateDirectory(String path) in System.IO.FileSystem.dll:token 0x6000071+0x25\r\nat JIT_Methodical.casts_ilseq__il_relCommonBase__il_relCommonBase._casts_ilseq__il_relCommonBase__il_relCommonBase_sh() in JIT.Methodical.XUnitWrapper.dll:token 0x6000240+0xa8\r\nExpected: True\r\nActual:   False\r\n\r\n\r\nStack trace\r\n   at JIT_Methodical._casts_ilseq__il_relCommonBase__il_relCommonBase_._casts_ilseq__il_relCommonBase__il_relCommonBase_sh() in JIT.Methodical.XUnitWrapper.dll:token 0x6000240+0xf0\r\n```\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eVincentBu\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-arm64`, `area-System.IO`, `os-mac-os-x`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-07-05T07:21:31Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3Mzg4MDEwNQ==",
                                           "createdAt":  "2021-07-05T07:38:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nRun: [runtime-coreclr r2r-extra 20210703.1](https://dev.azure.com/dnceng/public/_build/results?buildId=1219742\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=36365904\u0026resultId=109367\u0026paneView=debug)\r\n\r\n**One of Error messages:**\r\n```\r\nTest Infrastructure Failure: System.IO.IOException: No space left on device\r\nat System.IO.FileSystem.CreateDirectory(String fullPath) in System.IO.FileSystem.dll:token 0x60001a7+0x18a\r\nat System.IO.Directory.CreateDirectory(String path) in System.IO.FileSystem.dll:token 0x6000071+0x25\r\nat JIT_Methodical.casts_ilseq__il_relCommonBase__il_relCommonBase._casts_ilseq__il_relCommonBase__il_relCommonBase_sh() in JIT.Methodical.XUnitWrapper.dll:token 0x6000240+0xa8\r\nExpected: True\r\nActual:   False\r\n\r\n\r\nStack trace\r\n   at JIT_Methodical._casts_ilseq__il_relCommonBase__il_relCommonBase_._casts_ilseq__il_relCommonBase__il_relCommonBase_sh() in JIT.Methodical.XUnitWrapper.dll:token 0x6000240+0xf0\r\n```\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eVincentBu\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-arm64`, `area-Infrastructure`, `area-System.IO`, `os-mac-os-x`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-07-05T07:38:59Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3Mzg4MDc1MA==",
                                           "createdAt":  "2021-07-05T07:40:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "adamsitnik",
                                           "body":  "\u003e Test Infrastructure Failure: System.IO.IOException: No space left on device\r\n\r\n@ViktorHofer @safern it looks that we have run out of space on one of our machines, whom should I report it to?",
                                           "updatedAt":  "2021-07-05T07:40:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3NDE4OTc3MA==",
                                           "createdAt":  "2021-07-05T15:20:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "In such cases I usually ping @dotnet/dnceng ",
                                           "updatedAt":  "2021-07-05T15:20:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3NDgxMzI1Nw==",
                                           "createdAt":  "2021-07-06T14:31:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ilyas1974",
                                           "body":  "Thank you for letting us know. I have created https://github.com/dotnet/core-eng/issues/13596 to investigate this. ",
                                           "updatedAt":  "2021-07-06T14:31:49Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "JIT/Methodical tests failed with Test Infrastructure Failure: System.IO.IOException: No space left on device",
        "labels":  [
                       "arch-arm64",
                       "os-mac-os-x",
                       "tracking-external-issue",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/56622",
        "createdAt":  "2021-07-30T14:13:50Z",
        "number":  56622,
        "author":  "am11",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCwScmg==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ViktorHofer",
                                            "createdAt":  "2021-07-30T14:16:00Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "truboxl",
                                            "createdAt":  "2023-05-25T05:18:04Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2021-07-31T21:01:31Z",
        "body":  "The cross-build in `:/eng/` requires user to pass `-cross` argument to `:/build.sh` and set `ROOTFS_DIR` environment variable.\r\n\r\nDuring the native build, it relies on setup done by the scripts under `:/eng/common/cross`. We have multiple examples in our platform matrix (`{os}-{arch}`) which make use of this infrastructure.\r\n\r\nAndroid, however, is at the odds. For coreclr, it uses setup from `:/eng/common/cross/build-android-rootfs.sh` and `:/eng/common/cross/toolchain.cmake`, but for mono it uses a different setup. The impact is that:\r\n\r\n\u003e The cross-build in `:/eng/` requires user to pass `-cross` argument to `:/build.sh` and set `ROOTFS_DIR` environment variable.\r\n\r\ndoes not hold for \"Android on mono\", due to which it requires us to add a few exceptions in the build infra and need us to remember about this exceptional case. Another down side is that the coreclr Android setup gets stale every now and then because no CI leg is exercising it.\r\n\r\nI am opening this issue to discuss what can be done to consolidate Android build on mono and coreclr without losing any flexibility and still adapt to `-cross` / CrossBuild infrastructure.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONQ2nhQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc41CyEN",
                                           "createdAt":  "2021-07-30T14:14:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "cc @akoeplinger, @fanyang-mono , @ViktorHofer, @janvorli",
                                           "updatedAt":  "2021-07-30T14:14:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41DBQA",
                                           "createdAt":  "2021-07-30T15:51:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "fanyang-mono",
                                           "body":  "Thanks for opening this issue. More discussions could be found from this PR https://github.com/dotnet/runtime/pull/55641",
                                           "updatedAt":  "2021-07-30T15:51:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41DabW",
                                           "createdAt":  "2021-07-30T18:50:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThe cross-build in `:/eng/` requires user to pass `-cross` argument to `:/build.sh` and set `ROOTFS_DIR` environment variable.\r\n\r\nDuring the native build, it relies on setup done by the scripts under `:/eng/common/cross`. We have multiple examples in our platform matrix (`{os}-{arch}`) which make use this infrastructure.\r\n\r\nAndroid, however, is at the odds. For coreclr, it uses setup from `:/eng/common/cross/build-android-rootfs.sh` and `:/eng/common/cross/toolchain.cmake`, but for mono it uses a different setup. The impact is that:\r\n\r\n\u003e The cross-build in `:/eng/` requires user to pass `-cross` and `ROOTFS_DIR` to `./build.sh`.\r\n\r\ndoes not hold for \"Android on mono\", due to which it requires us to add a few exceptions in the build infra and need us to remember about this exceptional case. Another down side is that the coreclr Android setup gets stale every now and then because no CI leg is exercising it.\r\n\r\nI am opening this issue to discuss what can be done to consolidate Android build on mono and coreclr without losing any flexibility and still adapting the `-cross` / CrossBuild infrastructure.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eam11\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-07-30T18:50:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41DaeF",
                                           "createdAt":  "2021-07-30T18:50:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027arch-android\u0027: @steveisok, @akoeplinger\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThe cross-build in `:/eng/` requires user to pass `-cross` argument to `:/build.sh` and set `ROOTFS_DIR` environment variable.\r\n\r\nDuring the native build, it relies on setup done by the scripts under `:/eng/common/cross`. We have multiple examples in our platform matrix (`{os}-{arch}`) which make use this infrastructure.\r\n\r\nAndroid, however, is at the odds. For coreclr, it uses setup from `:/eng/common/cross/build-android-rootfs.sh` and `:/eng/common/cross/toolchain.cmake`, but for mono it uses a different setup. The impact is that:\r\n\r\n\u003e The cross-build in `:/eng/` requires user to pass `-cross` and `ROOTFS_DIR` to `./build.sh`.\r\n\r\ndoes not hold for \"Android on mono\", due to which it requires us to add a few exceptions in the build infra and need us to remember about this exceptional case. Another down side is that the coreclr Android setup gets stale every now and then because no CI leg is exercising it.\r\n\r\nI am opening this issue to discuss what can be done to consolidate Android build on mono and coreclr without losing any flexibility and still adapting the `-cross` / CrossBuild infrastructure.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eam11\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `os-android`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-07-30T18:50:50Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Consolidate Android cross-build setup for mono and coreclr",
        "labels":  [
                       "discussion",
                       "os-android",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/57708",
        "createdAt":  "2021-08-19T02:13:39Z",
        "number":  57708,
        "author":  "varunmankal",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-08-10T17:31:40Z",
        "body":  "I am trying to build the 4.4.0 version of System.ComponentModel.Annotations package on my machine. I have followed the instructions mentioned here: https://github.com/dotnet/corefx/blob/8321c729934c0f8be754953439b88e6e1c120c24/Documentation/building/unix-instructions.md . \r\n\r\nWhen I run the command `./build.sh`, it returns the following error:\r\n\r\n```\r\n/home/ubuntu/corefx/init-tools.sh: line 119: 14991 Segmentation fault      \r\n(core dumped) $__DOTNET_CMD restore \"$__INIT_TOOLS_RESTORE_PROJECT\" --no-cache --packages $__PACKAGES_DIR --source $__BUILDTOOLS_SOURCE /p:BuildToolsPackageVersion=$__BUILD_TOOLS_PACKAGE_VERSION \u003e\u003e $__init_tools_log\r\n\r\nERROR: Could not restore build tools correctly. \r\n\r\nInitializing BuildTools...\r\n\r\nchmod: cannot access \u0027/home/ubuntu/corefx/packages/microsoft.dotnet.buildtools/2.0.0-prerelease-01721-01/lib/init-tools.sh\u0027: No such file or directory\r\n\r\n/home/ubuntu/corefx/init-tools.sh: line 99: /home/ubuntu/corefx/packages/microsoft.dotnet.buildtools/2.0.0-prerelease-01721-01/lib/init-tools.sh: No such file or file or directory\r\n```\r\n\r\n### Configuration\r\n\r\n* running it on ubuntu 18.04\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONcgsDA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc41vKM2",
                                           "createdAt":  "2021-08-19T02:13:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-08-19T02:13:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41wulR",
                                           "createdAt":  "2021-08-19T14:32:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @safern\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nI am trying to build the 4.4.0 version of System.ComponentModel.Annotations package on my machine. I have followed the instructions mentioned here: https://github.com/dotnet/corefx/blob/8321c729934c0f8be754953439b88e6e1c120c24/Documentation/building/unix-instructions.md . \r\n\r\nWhen I run the command `./build.sh`, it returns the following error:\r\n\r\n```\r\n/home/ubuntu/corefx/init-tools.sh: line 119: 14991 Segmentation fault      \r\n(core dumped) $__DOTNET_CMD restore \"$__INIT_TOOLS_RESTORE_PROJECT\" --no-cache --packages $__PACKAGES_DIR --source $__BUILDTOOLS_SOURCE /p:BuildToolsPackageVersion=$__BUILD_TOOLS_PACKAGE_VERSION \u003e\u003e $__init_tools_log\r\n\r\nERROR: Could not restore build tools correctly. \r\n\r\nInitializing BuildTools...\r\n\r\nchmod: cannot access \u0027/home/ubuntu/corefx/packages/microsoft.dotnet.buildtools/2.0.0-prerelease-01721-01/lib/init-tools.sh\u0027: No such file or directory\r\n\r\n/home/ubuntu/corefx/init-tools.sh: line 99: /home/ubuntu/corefx/packages/microsoft.dotnet.buildtools/2.0.0-prerelease-01721-01/lib/init-tools.sh: No such file or file or directory\r\n```\r\n\r\n### Configuration\r\n\r\n* running it on ubuntu 18.04\r\n\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003evarunmankal\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-System.ComponentModel`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-08-19T14:32:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41x22d",
                                           "createdAt":  "2021-08-19T21:31:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nI am trying to build the 4.4.0 version of System.ComponentModel.Annotations package on my machine. I have followed the instructions mentioned here: https://github.com/dotnet/corefx/blob/8321c729934c0f8be754953439b88e6e1c120c24/Documentation/building/unix-instructions.md . \r\n\r\nWhen I run the command `./build.sh`, it returns the following error:\r\n\r\n```\r\n/home/ubuntu/corefx/init-tools.sh: line 119: 14991 Segmentation fault      \r\n(core dumped) $__DOTNET_CMD restore \"$__INIT_TOOLS_RESTORE_PROJECT\" --no-cache --packages $__PACKAGES_DIR --source $__BUILDTOOLS_SOURCE /p:BuildToolsPackageVersion=$__BUILD_TOOLS_PACKAGE_VERSION \u003e\u003e $__init_tools_log\r\n\r\nERROR: Could not restore build tools correctly. \r\n\r\nInitializing BuildTools...\r\n\r\nchmod: cannot access \u0027/home/ubuntu/corefx/packages/microsoft.dotnet.buildtools/2.0.0-prerelease-01721-01/lib/init-tools.sh\u0027: No such file or directory\r\n\r\n/home/ubuntu/corefx/init-tools.sh: line 99: /home/ubuntu/corefx/packages/microsoft.dotnet.buildtools/2.0.0-prerelease-01721-01/lib/init-tools.sh: No such file or file or directory\r\n```\r\n\r\n### Configuration\r\n\r\n* running it on ubuntu 18.04\r\n\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003evarunmankal\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-08-19T21:31:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41x3tD",
                                           "createdAt":  "2021-08-19T21:38:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "It looks like you\u0027re trying to build the .NETCore 2.0 codebase using Ubuntu 18.04.  Most likely the versions of the tools you\u0027re pulling down to do that don\u0027t support running on Ubuntu 18.04 since that codebase is from 2017.   Is there a reason you\u0027re trying to build this very old version of the package?\r\n\r\nThe latest version of that package is from release/5.0 here: https://github.com/dotnet/runtime/tree/release/5.0/src/libraries/System.ComponentModel.Annotations",
                                           "updatedAt":  "2021-08-19T21:38:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41yCwM",
                                           "createdAt":  "2021-08-19T23:10:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "varunmankal",
                                           "body":  "I see.  let me try on ubuntu 16.04, thanks.\r\n\r\nWe have a dotnet standard library that depends on this package. we have a requirement to build the dependent packages locally and we are dependent on the 4.4.0 version of the package since latest version has an issue that is described here: https://github.com/dotnet/runtime/issues/54257. \r\n\r\nI have tried what you have mentioned there but for some reason it is failing to build dll\u0027s for our services targeting .NET framework.\r\n",
                                           "updatedAt":  "2021-08-19T23:14:37Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "System.componentModel.Annotation version 4.4.0 fails to build locally",
        "labels":  [
                       "discussion",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/57947",
        "createdAt":  "2021-08-23T16:11:01Z",
        "number":  57947,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-02-28T17:58:03Z",
        "body":  "TODO:\r\n- [ ] Update the table below with the changing configurations (either something being added, removed or replaced by a higher OS version) [based on the OneNote](https://microsoft.sharepoint.com/teams/DNFPlanning/Shared%20Documents/General/NET%20Core%20OneNote/x-team%20test%20configurations.one#Test%20Configurations\u0026section-id={236997E6-9A88-4103-852B-5B17917C695C}\u0026page-id={9B59E53D-60A0-4F79-BEA8-33849CF66ACB}\u0026end)\r\n- [ ] Work with core-eng to make sure that test queues are available for all configurations that we want to add.\r\n- [ ] Update the queues in the yml files.\r\n- [ ] Address (either fix or disable) any test failures that are specific to new queues.\r\n\r\n## Implementation\r\n\r\nThe ymls with the helix queues are:\r\n- Libraries: https://github.com/dotnet/runtime/blob/main/eng/pipelines/libraries/helix-queues-setup.yml\r\n- CoreCLR: https://github.com/dotnet/runtime/blob/main/eng/pipelines/coreclr/templates/helix-queues-setup.yml\r\n- Installer: https://github.com/dotnet/runtime/blob/9bdd29220a8e3a806a3657b78775a443d1a6d8c1/eng/pipelines/installer/jobs/base-job.yml#L26-L31\r\n\r\nRelated issue that will be fixed by updating the installer queues: https://github.com/dotnet/runtime/issues/1252\r\n\r\nTarget branch: main\r\n**Backport into release/6.0 when completed.**\r\n\r\n## Queues\r\n\r\n- [ ] Update Ubuntu 19.10 -\u003e Ubuntu 21.04\r\n- [x] Update Debian 9 -\u003e Debian 11: https://github.com/dotnet/runtime/commit/3edda177b07120f761a9ac6ab7f33089972d7170\r\n- [ ] Update alpine 3.9 and 3.12 -\u003e alpine 3.14: Partially covered by https://github.com/dotnet/runtime/pull/57324\r\n- [ ] Remove macOS 10.13\r\n- [x] Add CBL Mariner: https://github.com/dotnet/runtime/commit/380cfc9f3b4e1dab3266f44bb178ec456a9ae8a6\r\n- [ ] Add Fedora 35 (releases 10/26)\r\n- [ ] Add RHEL8\r\n- [ ] Add CentOS 7\r\n- [ ] Add openSUSE (version?)\r\n- [ ] Windows Server 20H2\r\n\r\ncc @danmoseley @am11",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONs3Lbg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc414KPF",
                                           "createdAt":  "2021-08-23T16:11:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n- [ ] Update Ubuntu 19.10 -\u003e Ubuntu 21.04\r\n- [x] Update Debian 9 -\u003e Debian 11: https://github.com/dotnet/runtime/commit/3edda177b07120f761a9ac6ab7f33089972d7170\r\n- [ ] Update alpine 3.9 and 3.12 -\u003e alpine 3.14: Partially covered by https://github.com/dotnet/runtime/pull/57324\r\n- [ ] Remove macOS 10.13\r\n- [x] Add CBL Mariner: https://github.com/dotnet/runtime/commit/380cfc9f3b4e1dab3266f44bb178ec456a9ae8a6\r\n- [ ] Add RHEL8\r\n- [ ] Add CentOS 7\r\n- [ ] Add openSUSE (version?)\r\n\r\nWe eventually want to backport these changes into release/6.0 as well.\r\n\r\ncc @danmoseley @am11 @dotnet/runtime-infrastructure\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e7.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-08-23T16:11:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42rwrR",
                                           "createdAt":  "2021-09-11T17:15:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "aik-jahoda",
                                           "body":  "The Current status and changes are in the specific PRs below:\r\n\r\n- [x] #58987 \r\n- [x] #59084\r\n- [x] #58988\r\n- [x] #57324\r\n- [ ] #58989\r\n- [ ] ~~#59572~~, (~~#60054~~ Reverted in #62253 due to flakiness.), #62435 \r\n- [ ] ~~#59574~~, #60161\r\n- [ ] ~~#59578~~, #60162 followup: #62783\r\n- [ ] #60163\r\n- [x] dotnet/dotnet-buildtools-prereqs-docker#502\r\n- [x] dotnet/core-eng#14309\r\n\r\nBlockers:\r\n- Windows 11 arm / arm64 - No HW available (ETA: Oct/Nov): https://github.com/dotnet/core-eng/issues/14309#issuecomment-920183189\r\n- macOS 12.00 (Amd64) - OS GA not available (released on [10/25](https://en.wikipedia.org/wiki/MacOS_Monterey)): https://github.com/dotnet/core-eng/issues/14309#issuecomment-920183189\r\n- macOS 12 ARM #59085 - Not enough HW: https://github.com/dotnet/core-eng/issues/14309#issuecomment-946909143\r\n- Fedora 35 - Doesn\u0027t fit Helix infrastructure.  More details in PR: dotnet/dotnet-buildtools-prereqs-docker#509\r\n\r\nBackports to 6.0:\r\n- https://github.com/dotnet/runtime/pull/62538 ",
                                           "updatedAt":  "2021-12-14T15:45:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42ylV6",
                                           "createdAt":  "2021-09-14T14:54:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "cc @jkotas",
                                           "updatedAt":  "2021-09-14T14:54:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42ymQj",
                                           "createdAt":  "2021-09-14T14:58:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB6UYrw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "danmoseley",
                                                                               "createdAt":  "2021-09-14T19:37:01Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkotas",
                                           "body":  "I think we can drop PR coverage (rolling is sufficient) for:\r\n\r\n- Windows Server 20H2 (covered by Windows Server Core 20H2)\r\n- SLES 12 (covered by other Linux flavors)",
                                           "updatedAt":  "2021-09-14T14:58:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42zctu",
                                           "createdAt":  "2021-09-14T19:36:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Sounds good to me.",
                                           "updatedAt":  "2021-09-14T19:36:57Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Update unsupported distros in helix queues to latest and add missing ones",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/58266",
        "createdAt":  "2021-08-27T14:25:21Z",
        "number":  58266,
        "author":  "lambdageek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCqEDwA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ViktorHofer",
                                            "createdAt":  "2022-08-10T19:06:39Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2024-07-26T16:17:42Z",
        "body":  "Make it possible to build and run the tests using Mono, without building all of CoreCLR.  In principle the runtime tests infrastructure only needs `corerun` (and `ilasm` - but I think that can already be built from a separate subset)\r\n\r\n- [x] Build tests against each RuntimeFlavor\u0027s System.Private.CoreLib (PR: #58232)\r\n- [x] Build corerun without building coreclr: PR https://github.com/dotnet/runtime/pull/62500 \r\n- [x] build the Tests/Core_Root directory layout directly from artifacts/bin/mono, without a separate mono patching step PR: PR https://github.com/dotnet/runtime/pull/62500 \r\n- [x] #62581\r\n- [x] Update mono runtime tests CI to generate Core_Root without building CoreCLR https://github.com/dotnet/runtime/issues/43952\r\n- [x] For mobile and WASM don\u0027t depend on corerun at all (free consequence of the removing the patching of Core_Root)\r\n- [ ] #62512\r\n   - see discussion in #43952 for details\r\n- [ ] Remove the `PatchCoreClrCoreRoot`/`RestoreCoreClrCoreRoot` targets from [mono.proj](https://github.com/dotnet/runtime/blob/c8ede5c4b1aba85fc894d5faed42d6d5186eabe1/src/mono/mono.proj#L175-L187) as part of the monthly infrastructure rollout.\r\n- [ ] move all mono runs to use global-build-job.yml\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSC2iLg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc42E3BN",
                                           "createdAt":  "2021-08-27T14:25:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nMake it possible to build and run the tests using Mono, without building all of CoreCLR.  In principle the runtime tests infrastructure only needs `corerun`\r\n\r\n- [ ] Build tests against each RuntimeFlavor\u0027s System.Private.CoreLib (PR: #58232)\r\n- [ ] Build corerun without building coreclr\r\n   - [ ] Maybe move it to `src/native/hosts/`\r\n- [ ] build the Tests/Core_Root directory layout directly from artifacts/bin/mono, without a separate mono patching step\r\n\r\nStretch goal:\r\n- [ ] For mobile and WASM don\u0027t depend on corerun at all\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003elambdageek\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-08-27T14:25:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42E3HX",
                                           "createdAt":  "2021-08-27T14:26:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nMake it possible to build and run the tests using Mono, without building all of CoreCLR.  In principle the runtime tests infrastructure only needs `corerun`\r\n\r\n- [ ] Build tests against each RuntimeFlavor\u0027s System.Private.CoreLib (PR: #58232)\r\n- [ ] Build corerun without building coreclr\r\n   - [ ] Maybe move it to `src/native/hosts/`\r\n- [ ] build the Tests/Core_Root directory layout directly from artifacts/bin/mono, without a separate mono patching step\r\n\r\nStretch goal:\r\n- [ ] For mobile and WASM don\u0027t depend on corerun at all\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003elambdageek\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`enhancement`, `area-Infrastructure`, `untriaged`, `tracking`, `Bottom Up Work`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-08-27T14:26:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42E49f",
                                           "createdAt":  "2021-08-27T14:37:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "This could also benefit the CI pipelines although actually cleaning up the CI dependencies could be done separately after the initial work of just teasing apart the build dependencies is completed.",
                                           "updatedAt":  "2021-08-27T14:37:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42FOyX",
                                           "createdAt":  "2021-08-27T16:56:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "@lambdageek, a side question (in case you know it offhand 🙂), do we have any direct dev innerloop script for mono that {re}builds \u0027just\u0027 the native components and entirely skips .NET SDK / MSBuild? e.g. in case of non-mono subsets, we can use:\r\n\r\n```sh\r\nOSName=banana\r\nOSArch=apricotarch\r\nROOTFS_DIR=/crossrootfs/$OSArch\r\nexport ROOTFS_DIR\r\n\r\n# coreclr\r\n/runtime/src/coreclr/build-runtime.sh -skipgenerateversion -skipmanaged -nopgooptimize \\\r\n    -os $OSName -cross -$OSArch\r\n\r\n# libraries/native\r\n/runtime/src/libraries/Native/build-native.sh -skipgenerateversion -skipmanaged -os $OSName \\\r\n    -cross -$OSArch\r\n\r\n# corehost (dotnet(1) etc.) is currently a bit mouthful\r\n/runtime/src/native/corehost/build.sh -skipmanaged -skipgenerateversion -os $OSName -cross -$OSArch \\\r\n    -policyver 0.0.1-dev -fxrver 0.0.1-dev -hostver 0.0.1-dev -apphostver 0.0.1-dev \\\r\n    -commithash $(git -C /runtime rev-parse HEAD)\r\n```\r\n(these are also useful to build stage 0 on new platforms natively, where .NET SDK is not yet available and crossbuild is not yet configured)",
                                           "updatedAt":  "2021-08-27T18:27:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc42FYe2",
                                           "createdAt":  "2021-08-27T18:07:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB4HFYQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2021-08-27T18:27:55Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "\u003e @lambdageek, a side question (in case you know it offhand 🙂), do we have any direct dev innerloop script for mono that {re}builds \u0027just\u0027 the native components and entirely skips .NET SDK / MSBuild? \r\n\r\nI think @vargaz  just runs cmake directly.  I don\u0027t think we have any scripts to simplify it.",
                                           "updatedAt":  "2021-08-27T18:07:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc467krQ",
                                           "createdAt":  "2021-12-08T10:38:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "marek-safar",
                                           "body":  "@trylek is this something you are looking into?",
                                           "updatedAt":  "2021-12-08T10:38:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc467veU",
                                           "createdAt":  "2021-12-08T11:42:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "Not directly right now - the test refactoring we\u0027re working on with Jeremy might simplify overall testing infrastructure including Mono though. For this particular change, yesterday I reviewed Nathan\u0027s PR 62500 (see link above) that seems to be contributing to the efforts tracked by this issue.",
                                           "updatedAt":  "2021-12-08T11:42:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc47OH3z",
                                           "createdAt":  "2021-12-14T13:45:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "\u003e For mobile and WASM don\u0027t depend on corerun at all\r\n\r\n@naricc  I think this is incidentally fixed by #62652, right?  Or are there still some coreclr artifacts that are used by the mobile runtime testing CI legs?",
                                           "updatedAt":  "2021-12-14T13:45:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc47OfDk",
                                           "createdAt":  "2021-12-14T15:22:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "naricc",
                                           "body":  "@lambdageek Wasm never depended on coreclr in the first place, since it was using the global-build-job.yml. I don\u0027t think android and iOS did either, but I am looking at the runtime templates and it is hard to make out. But yes, if they did it should be fixed now.\r\n\r\nIt probably makes sense to move all mono runs to use global-build-job.",
                                           "updatedAt":  "2021-12-14T15:25:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc47Oj0h",
                                           "createdAt":  "2021-12-14T15:43:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "\u003e It probably makes sense to move all mono runs to use global-build-job.\r\n\r\nI don\u0027t know any of the consequences of that, but it sounds good, and if you think it\u0027s a good idea, go for it. 😁 ",
                                           "updatedAt":  "2021-12-14T15:43:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc47POlW",
                                           "createdAt":  "2021-12-14T18:13:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCGlmcA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "lambdageek",
                                                                               "createdAt":  "2021-12-14T18:56:56Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "safern",
                                           "body":  "\u003e It probably makes sense to move all mono runs to use global-build-job.\r\n\r\nWe have https://github.com/dotnet/runtime/issues/45521 to track that work.",
                                           "updatedAt":  "2021-12-14T18:13:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ILaIu",
                                           "createdAt":  "2022-08-10T16:21:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SamMonoRT",
                                           "body":  "@naricc -- Assigning this to you and moving to 8.0.0  I believe the 3 remaining items are related to your open PR. ",
                                           "updatedAt":  "2022-08-10T16:21:07Z"
                                       }
                                   ],
                         "totalCount":  12
                     },
        "title":  "[dev innerloop] build runtime tests without CoreCLR",
        "labels":  [
                       "enhancement",
                       "wishlist",
                       "area-Infrastructure",
                       "tracking",
                       "Bottom Up Work"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/59185",
        "createdAt":  "2021-09-15T22:00:53Z",
        "number":  59185,
        "author":  "fanyang-mono",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-05-05T16:05:23Z",
        "body":  "Currently the target value is hard-coded.\r\n```\r\n--targets ios-simulator-64 %5c\r\n```\r\n\r\nIt should use a variable contains the value of the target, so that it could support both iOS and tvos runs.\r\n\r\nCode location:\r\nhttps://github.com/dotnet/runtime/blob/main/src/tests/Common/CLRTest.Execute.Bash.targets#L421",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONtxioQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc423GKh",
                                           "createdAt":  "2021-09-15T22:00:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nCurrently the target value is hard-coded.\r\n```\r\n--targets ios-simulator-64 %5c\r\n```\r\n\r\nIt should use a variable contains the value of the target, so that it could support both iOS and tvos runs.\r\n\r\nCode location:\r\nhttps://github.com/dotnet/runtime/blob/main/src/tests/Common/CLRTest.Execute.Bash.targets#L421\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003efanyang-mono\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003efanyang-mono\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e7.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-09-15T22:00:58Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Make target value dynamic for iOS in CLRTest.Execute.Bash.targets",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/59355",
        "createdAt":  "2021-09-20T16:50:48Z",
        "number":  59355,
        "author":  "ericstj",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCqrIvg==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ViktorHofer",
                                            "createdAt":  "2022-09-21T12:29:00Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-08-25T16:30:06Z",
        "body":  "### Description\r\n\r\nWe have a custom task in the repo that has an arcade equivalent:\r\nhttps://github.com/dotnet/runtime/blob/main/src/tasks/WorkloadBuildTasks/GenerateFileFromTemplate.cs\r\nhttps://github.com/dotnet/arcade/blob/main/src/Microsoft.DotNet.Build.Tasks.Templating/src/GenerateFileFromTemplate.cs\r\n\r\n@steveisok \r\n\r\nHere\u0027s a place where I did it: https://github.com/dotnet/runtime/commit/095808bb1000b4da4caf7fb23ec43df25ac9982b\r\n\r\nWe should be able to just add a `PackageReference` where that\u0027s needed to use the task and delete the copy in dotnet/runtime.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHONycU5A==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc43BWiU",
                                           "createdAt":  "2021-09-20T16:50:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-threading-tasks\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\r\n\r\nWe have a custom task in the repo that has an arcade equivalent:\r\nhttps://github.com/dotnet/runtime/blob/main/src/tasks/WorkloadBuildTasks/GenerateFileFromTemplate.cs\r\nhttps://github.com/dotnet/arcade/blob/main/src/Microsoft.DotNet.Build.Tasks.Templating/src/GenerateFileFromTemplate.cs\r\n\r\n@steveisok \r\n\r\nHere\u0027s a place where I did it: https://github.com/dotnet/runtime/commit/095808bb1000b4da4caf7fb23ec43df25ac9982b\r\n\r\nWe should be able to just add a `PackageReference` where that\u0027s needed to use the task and delete the copy in dotnet/runtime.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eericstj\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-System.Threading.Tasks`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-09-20T16:50:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc43BXB0",
                                           "createdAt":  "2021-09-20T16:53:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "/cc @directhex @radical ",
                                           "updatedAt":  "2021-09-20T16:53:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc43JsSy",
                                           "createdAt":  "2021-09-22T20:03:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\r\n\r\nWe have a custom task in the repo that has an arcade equivalent:\r\nhttps://github.com/dotnet/runtime/blob/main/src/tasks/WorkloadBuildTasks/GenerateFileFromTemplate.cs\r\nhttps://github.com/dotnet/arcade/blob/main/src/Microsoft.DotNet.Build.Tasks.Templating/src/GenerateFileFromTemplate.cs\r\n\r\n@steveisok \r\n\r\nHere\u0027s a place where I did it: https://github.com/dotnet/runtime/commit/095808bb1000b4da4caf7fb23ec43df25ac9982b\r\n\r\nWe should be able to just add a `PackageReference` where that\u0027s needed to use the task and delete the copy in dotnet/runtime.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eericstj\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-09-22T20:03:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc43JxTk",
                                           "createdAt":  "2021-09-22T20:32:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB7bHYg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ericstj",
                                                                               "createdAt":  "2021-09-22T22:27:16Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Already took care of that in https://github.com/dotnet/runtime/pull/57499 which needs to be resurrected to move Mono away from the pkgproj infrastructure.",
                                           "updatedAt":  "2021-09-22T20:32:39Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Replace GenerateFileFromTemplate with arcade task",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/59598",
        "createdAt":  "2021-09-25T07:48:23Z",
        "number":  59598,
        "author":  "kunalspathak",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOB8HayA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "krwq",
                                            "createdAt":  "2021-09-28T17:05:54Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2023-09-05T18:05:17Z",
        "body":  "[Pipeline caching](https://docs.microsoft.com/en-us/azure/devops/pipelines/release/caching?view=azure-devops) sounds to be a powerful feature which lets us cache the artifacts that are built and reuse them in other runs provided certain criteria match. We could use this feature for at least few purposes that I can think of:\r\n\r\n- If we trigger multiple pipeline runs (e.g. `jitstress`, `jitstressregs` `runtime`) on same commit, one pipeline can perform all the needed builds and cache it against the commit. Other pipelines can then simply download the already built artifacts, saving lot of time in machine time and freeing up resources that does same build over and over.\r\n- We could also cache the nuget packages that we download against some logical key (index, library hash, nuget package versions, dotnet version, etc.) and then use it during `nuget restore`. The download IMO will be faster because contents will be downloaded from internal azure storage rather than internet.\r\n- Cache the libraries built against a commit that last touched the libraries folder. Someone who is working on `CoreClr` changes need to do CI run, they won\u0027t have to build the libraries because we already have it cached, it can be simply downloaded and use. Vice-versa for caching `coreclr` builds.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHON2guvA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc43QdKE",
                                           "createdAt":  "2021-09-25T07:48:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-09-25T07:48:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc43QdN1",
                                           "createdAt":  "2021-09-25T07:48:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kunalspathak",
                                           "body":  "@jkotas ",
                                           "updatedAt":  "2021-09-25T07:48:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc43QdQe",
                                           "createdAt":  "2021-09-25T07:48:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n[Pipeline caching](https://docs.microsoft.com/en-us/azure/devops/pipelines/release/caching?view=azure-devops) sounds to be a powerful feature which lets us cache the artifacts that are built and reuse them in other runs provided certain criteria match. We could use this feature for at least few purposes that I can think of:\r\n\r\n- If we trigger multiple pipeline runs (e.g. `jitstress`, `jitstressregs` `runtime`) on same commit, one pipeline can perform all the needed builds and cache it against the commit. Other pipelines can then simply download the already built artifacts, saving lot of time in machine time and freeing up resources that does same build over and over.\r\n- We could also cache the nuget packages that we download against some logical key (index, library hash, nuget package versions, dotnet version, etc.) and then use it during `nuget restore`. The download IMO will be faster because contents will be downloaded from internal azure storage rather than internet.\r\n- Cache the libraries built against a commit that last touched the libraries folder. Someone who is working on `CoreClr` changes need to do CI run, they won\u0027t have to build the libraries because we already have it cached, it can be simply downloaded and use. Vice-versa for caching `coreclr` builds.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ekunalspathak\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-09-25T07:48:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc43Qj4g",
                                           "createdAt":  "2021-09-25T08:31:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "This is an interesting idea overall.\r\n\r\n\u003e * Cache the libraries built against a commit that last touched the libraries folder. Someone who is working on `CoreClr` changes need to do CI run, they won\u0027t have to build the libraries because we already have it cached, it can be simply downloaded and use. Vice-versa for caching `coreclr` builds.\r\n\r\nThis one is hard to get right. I\u0027d say use this for PRs at most - let CI be a sanity test and official build should never touch the cache. For this one you\u0027d need to consider: the eng folder (easier than exactly versions.props and eng/common), the targets/props files in the root, and global.json. Also, there are some portions of SPC that are in the coreclr. I don\u0027t think there\u0027s something else that ties them (I don\u0027t know for mono). \r\n\r\nAlso, maybe this is something we should consider for an experiment: I wonder if outside a PR\u0027s builds this will have a big effect - as the commit rate to each folder is non-trivial on main, invalidating the proposed cache policies often.  However, within a PR this could have big savings - saves a lot of build overlaps between pipelines and restores in iterations of a given PR.  That\u0027s why I think bullets1 and 2 might represent big wins. ",
                                           "updatedAt":  "2021-09-25T08:31:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc43Q4n6",
                                           "createdAt":  "2021-09-25T19:36:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "/cc @akoeplinger @directhex ",
                                           "updatedAt":  "2021-09-25T19:36:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc43VfUi",
                                           "createdAt":  "2021-09-27T22:38:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB8JX7A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "akoeplinger",
                                                                               "createdAt":  "2021-09-28T10:50:42Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "hoyosjs",
                                                                               "createdAt":  "2021-09-28T20:28:55Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "safern",
                                           "body":  "\u003e Also, maybe this is something we should consider for an experiment: I wonder if outside a PR\u0027s builds this will have a big effect - as the commit rate to each folder is non-trivial on main, invalidating the proposed cache policies often. However, within a PR this could have big savings - saves a lot of build overlaps between pipelines and restores in iterations of a given PR. That\u0027s why I think bullets1 and 2 might represent big wins.\r\n\r\nMaybe we could start with caching the dotnet SDK we use (since it mostly changes once a month). I think that would be helpful, not a lot timewise but it would be helpful on reliability as we hit a  lot of errors when downloading the SDK?",
                                           "updatedAt":  "2021-09-27T22:38:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc43aC68",
                                           "createdAt":  "2021-09-28T19:52:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB8JYRQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "hoyosjs",
                                                                               "createdAt":  "2021-09-28T20:29:25Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "PathogenDavid",
                                           "body":  "\u003e * Cache the libraries built against a commit that last touched the libraries folder. Someone who is working on CoreClr changes need to do CI run, they won\u0027t have to build the libraries because we already have it cached, it can be simply downloaded and use. Vice-versa for caching coreclr builds.\r\n\r\nAs @hoyosjs noted this one is hard to get right. A nice compromise I\u0027ve had a lot of success with is utilizing [Mozilla sccache](https://github.com/mozilla/sccache) for my builds and caching its database between runs. It took my CI builds of libclang down from 2.5-3 hours to 15-20 minutes when there\u0027s little/no actual changes.\r\n\r\n(sccache is pretty simple to use, but [here\u0027s my workflow](https://github.com/InfectedLibraries/ClangSharp.Pathogen/blob/21c92170474c854d44ea35167eceb03bc3fcaa73/.github/workflows/ClangSharp.Pathogen.yml#L78-L95) if you want to see it used in practice. It\u0027s GitHub Actions instead of Azure DevOps, but in my experience they\u0027re pretty similar since one\u0027s a fork of the other. `build-native.cmd/sh` is what configures its use with CMake.)",
                                           "updatedAt":  "2021-09-28T19:52:03Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "Use pipeline caching feature of AzDo in CI",
        "labels":  [
                       "design-discussion",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/60812",
        "createdAt":  "2021-10-24T16:41:11Z",
        "number":  60812,
        "author":  "jkotas",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-11T18:15:21Z",
        "body":  "### Description\r\n\r\nBuild does not work with longer repo root paths (verified for repo root 55 characters long)\r\n\r\nOriginally reported as https://github.com/dotnet/runtimelab/issues/1676\r\n\r\n### Reproduction Steps\r\n\r\nmkdir \\LongPathLongPathLongPathLongPathLongPathLongPathLongPath\r\ncd \\LongPathLongPathLongPathLongPathLongPathLongPathLongPath\r\ngit clone http://github.com/dotnet/runtime\r\ncd runtime\r\nbuild.cmd -c release\r\n\r\n### Expected behavior\r\n\r\nBuild works, or there is a clear error message saying that the repo root path is too long.\r\n\r\n(The specific repro steps above produce cmake warning about long paths. However, there are situations like in the original runtimelab report where this warning is not present or buried too deep to be noticeable.)\r\n\r\n### Actual behavior\r\n\r\nBuild fails with:\r\n\r\n```\r\n...\r\n running \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe\" --build D:\\LongPathLongPathLongPathLongPathLongPathLongPathLongPath\\runtime\\src\\coreclr\\..\\..\\artifacts\\obj\\coreclr\\windows.x64.Release --target install --config Release --\r\n  ninja: error: mkdir(Native.Windows/System.IO.Compression.Native/CMakeFiles/System.IO.Compression.Native-Static.dir/D_/LongPathLongPathLongPathLongPathLongPathLongPathLongPath): No such file or directory\r\n  ninja: build stopped: .\r\n```\r\n\r\n### Configuration\r\n\r\nWindows 10, VS 2022 Preview",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOOKVHqQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc44pUcn",
                                           "createdAt":  "2021-10-24T16:41:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-10-24T16:41:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44pUd_",
                                           "createdAt":  "2021-10-24T16:41:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCF2IBg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "PRIMETSS",
                                                                               "createdAt":  "2021-12-09T02:23:11Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkotas",
                                           "body":  "cc @jkoritzinsky Looks like ninja is not able to handle long paths.",
                                           "updatedAt":  "2021-10-24T16:41:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc44pUep",
                                           "createdAt":  "2021-10-24T16:42:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\r\n\r\nBuild does not work with longer repo root paths (verified for repo root 55 characters long)\r\n\r\nOriginally reported as https://github.com/dotnet/runtimelab/issues/1676\r\n\r\n### Reproduction Steps\r\n\r\nmkdir \\LongPathLongPathLongPathLongPathLongPathLongPathLongPath\r\ncd \\LongPathLongPathLongPathLongPathLongPathLongPathLongPath\r\ngit clone http://github.com/dotnet/runtime\r\ncd runtime\r\nbuild.cmd -c release\r\n\r\n### Expected behavior\r\n\r\nBuild works, or there is a clear error message saying that the repo root path is too long.\r\n\r\n(The specific repro steps above produce cmake warning about long paths. However, there are situations like in the original runtimelab report where this warning is not present or buried too deep to be noticeable.)\r\n\r\n### Actual behavior\r\n\r\nBuild fails with:\r\n\r\n```\r\n...\r\n running \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe\" --build D:\\LongPathLongPathLongPathLongPathLongPathLongPathLongPath\\runtime\\src\\coreclr\\..\\..\\artifacts\\obj\\coreclr\\windows.x64.Release --target install --config Release --\r\n  ninja: error: mkdir(Native.Windows/System.IO.Compression.Native/CMakeFiles/System.IO.Compression.Native-Static.dir/D_/LongPathLongPathLongPathLongPathLongPathLongPathLongPath): No such file or directory\r\n  ninja: build stopped: .\r\n```\r\n\r\n### Configuration\r\n\r\nWindows 10, VS 2022 Preview\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ejkotas\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-10-24T16:42:20Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Build fails with longer repo root paths ",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/61473",
        "createdAt":  "2021-11-11T19:07:47Z",
        "number":  61473,
        "author":  "agocke",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-26T23:26:24Z",
        "body":  "Right now we have two main ways to disable tests:\r\n\r\n1. Adding the path to `src/test/issues.targets` to disable runtime tests\r\n2. Add `[ActiveIssue]` to libraries tests\r\n\r\nThe second one is problematic because it can be hard to find the appropriate test, and it involves a code change to disable the test. Adding a centralized location will allow the Test Monitor or automation to easily disable any test.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOOZyDAA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc45nHB4",
                                           "createdAt":  "2021-11-11T19:07:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nRight now we have two main ways to disable tests:\r\n\r\n1. Adding the path to `src/test/issues.targets` to disable runtime tests\r\n2. Add `[ActiveIssue]` to libraries tests\r\n\r\nWe should have one uniform way to disable tests. This preferably would not involve a source code change, as that requires expertise to find the appropriate test.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eagocke\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-11-11T19:07:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc45nIMA",
                                           "createdAt":  "2021-11-11T19:15:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "It would be nice if we could use xunit exclude files, but I\u0027m not sure if that\u0027s easy for the runtime tests.",
                                           "updatedAt":  "2021-11-11T19:15:21Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Support disabling libraries tests with `issues.targets`",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/61790",
        "createdAt":  "2021-11-18T17:42:07Z",
        "number":  61790,
        "author":  "jkoritzinsky",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-11T19:18:28Z",
        "body":  "As part of the runtime test build reorganization, we introduced some special cases in build-test-job.yml where instead of using `$(managedTestArtifactRootFolderPath)` for the upload path, we manually build the folder name. We should investigate refactoring how we set `managedTestArtifactRootFolderPath` so we can go back to using it in all cases.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOOgBtLA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc46AG0s",
                                           "createdAt":  "2021-11-18T17:42:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nAs part of the runtime test build reorganization, we introduced some special cases in build-test-job.yml where instead of using `$(managedTestArtifactRootFolderPath)` for the upload path, we manually build the folder name. We should investigate refactoring how we set `managedTestArtifactRootFolderPath` so we can go back to using it in all cases.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ejkoritzinsky\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`up-for-grabs`, `area-Infrastructure`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-11-18T17:42:09Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Clean up AnyOS handling in build-test-job.yml",
        "labels":  [
                       "help wanted",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/62276",
        "createdAt":  "2021-12-02T13:00:42Z",
        "number":  62276,
        "author":  "marek-safar",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCFAhHw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jkotas",
                                            "createdAt":  "2021-12-02T17:57:12Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2022-04-04T17:07:32Z",
        "body":  "This issue tracks rolling build (post PR merge) build and test failures caused by insufficient tests coverage during pull request CI build.\r\n\r\nBroad impact:\r\n\r\n- #61721\r\n\t- Source (possibly) #60491\r\n- #62362\r\n        - Source https://github.com/dotnet/runtime/pull/62339\r\n- #62747 (broke System.Console on OSX ARM64)\r\n        - Source #61938\r\n- https://github.com/dotnet/runtime/pull/66044\r\n        - Source #65944\r\n- https://github.com/dotnet/runtime/issues/66118\r\n        - Source #65986\r\n- https://github.com/dotnet/runtime/issues/67538\r\n        - Update PR broke wasm rolling builds in `runtime-extra-platforms`\r\n        \r\nLocal impact:\r\n\r\n- #62081\r\n\t- Source unknown\r\n- #60649\r\n\t- Source #60259\r\n- #62303\r\n\t- Source #61467 \r\n- #62311\r\n\t- Source #60770\r\n- #61299\r\n\t- Source #61226\r\n- #62285\r\n\t- Source #61079 \r\n- #61693\r\n\t- Source #61707\r\n- #62341\r\n\t- Source #62240\r\n- #62067\r\n\t- Source #61802\r\n- #61084\r\n\t- Source #60808\r\n\r\n@SamMonoRT @lewing @steveisok ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOOr7_cw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc46r-df",
                                           "createdAt":  "2021-12-02T13:00:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-12-02T13:00:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46r-gU",
                                           "createdAt":  "2021-12-02T13:00:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nGeneral tracker for issues that were caused by insufficient tests run during CI build\r\n\r\n- #61721\r\n- #62081\r\n\r\n\r\n@SamMonoRT @lewing @steveisok \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003emarek-safar\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`, `tracking`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-12-02T13:00:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46s7I0",
                                           "createdAt":  "2021-12-02T17:46:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "cc @agocke ",
                                           "updatedAt":  "2021-12-02T17:46:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46s7Qt",
                                           "createdAt":  "2021-12-02T17:47:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "- #61084",
                                           "updatedAt":  "2021-12-02T17:47:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46ui6m",
                                           "createdAt":  "2021-12-03T07:31:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "What sorts of issues are we tracking here -- in principle any outerloop failure is a CI test hole. I assume this is about inner loop failures in configurations that didn\u0027t run before commit?\r\n\r\nBTW it is not well defined whether \"CI\" means before or after commit so I avoid the term.",
                                           "updatedAt":  "2021-12-03T07:31:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46vv9z",
                                           "createdAt":  "2021-12-03T15:08:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "marek-safar",
                                           "body":  "\u003e What sorts of issues are we tracking here\r\n\r\nUpdate the description to be clearer.\r\n\r\n\u003e in principle any outerloop failure is a CI test hole\r\n\r\nYes and I would include them here if they ever show up as a problem.",
                                           "updatedAt":  "2021-12-03T15:08:39Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "Pull Requests CI Tests Holes Tracker",
        "labels":  [
                       "area-Infrastructure",
                       "tracking"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/62512",
        "createdAt":  "2021-12-08T01:18:13Z",
        "number":  62512,
        "author":  "lambdageek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-26T16:16:59Z",
        "body":  "See the discussion in https://github.com/dotnet/runtime/issues/43952#issuecomment-740183317, for example, as well as PR reviews here https://github.com/dotnet/runtime/pull/62500#pullrequestreview-825800234.\r\n\r\nThe idea is that since `corerun` and `CoreShim` are used by both CoreCLR and MonoVM for runtime testing, and are not really part of CoreCLR proper, they should move to the common location where other shared code resides.\r\n\r\nThere\u0027s a slight complication: the hosts depend on the CoreCLR cmake infrastructure (`add_component`, `add_executable_clr`, `install_clr`), so at least some of that infrastructure should move to a shared directory too.\r\n\r\nPart of #58266 ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOahWhEA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc466dfF",
                                           "createdAt":  "2021-12-08T01:18:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-12-08T01:18:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc466elH",
                                           "createdAt":  "2021-12-08T01:26:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nSee the discussion in https://github.com/dotnet/runtime/issues/43952#issuecomment-740183317, for example, as well as PR reviews here https://github.com/dotnet/runtime/pull/62500#pullrequestreview-825800234.\r\n\r\nThe idea is that since `corerun` and `CoreShim` are used by both CoreCLR and MonoVM and are not really part of CoreCLR, they should move to the common location where other shared code resides.\r\n\r\nThere\u0027s a slight complication: the hosts depend on the CoreCLR and cmake infrastructure (`add_component`, `add_executable_clr`, `install_clr`), so at least some of that infrastructure should move to a shared directory too.\r\n\r\nPart of #58266 \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003elambdageek\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-12-08T01:26:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5qFaEQ",
                                           "createdAt":  "2023-10-25T18:11:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SamMonoRT",
                                           "body":  "Low priority",
                                           "updatedAt":  "2023-10-25T18:11:55Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Move corerun to src/native/hosts/",
        "labels":  [
                       "area-Infrastructure",
                       "Bottom Up Work"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/62535",
        "createdAt":  "2021-12-08T15:26:40Z",
        "number":  62535,
        "author":  "carlossanlop",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC1aRFw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ryank425",
                                            "createdAt":  "2021-12-08T15:35:00Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "vcsjones",
                                            "createdAt":  "2021-12-08T16:33:11Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "MihaZupan",
                                            "createdAt":  "2021-12-08T17:51:44Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ivdiazsa",
                                            "createdAt":  "2024-01-24T22:40:21Z"
                                        }
                                    ],
                          "totalCount":  4
                      },
        "updatedAt":  "2024-06-20T19:59:03Z",
        "body":  "If you have a fresh repo (no artifacts) and you run `./build.cmd` with an argument that has a typo or is misused, the script will perform some verifications, including downloading the sdk zip file and installing it. If you have a bad internet connection, this could take a long time. Then after that process finishes, you get the error telling you that you wrote your command wrong.\r\n\r\nCan we explore the possibility of changing the order of the initial tasks of `build.cmd`, particularly checking arguments, to ensure the script ends quickly if there\u0027s misusage?",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOccrpCw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc468Z5r",
                                           "createdAt":  "2021-12-08T15:26:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nIf you have a fresh repo (no artifacts) and you run `./build.cmd` with an argument that has a typo or is misused, the script will perform some verifications, including downloading the sdk zip file and installing it. If you have a bad internet connection, this could take a long time. Then after that process finishes, you get the error telling you that you wrote your command wrong.\r\n\r\nCan we explore the possibility of changing the order of the initial tasks of `build.cmd`, particularly checking arguments, to ensure the script ends quickly if there\u0027s misusage?\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ecarlossanlop\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003eFuture\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-12-08T15:26:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5xyukL",
                                           "createdAt":  "2024-01-25T00:01:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivdiazsa",
                                           "body":  "I agree this would help a lot. It\u0027s really annoying to leave a build running, go get coffee or lunch, and come back to see it failed because the command was wrong. This gets worse if you\u0027re on Windows, as it takes even longer than Linux to finish running checks and downloading the SDK, and therefore longer to fail before attempting the build.\r\n\r\nI was looking at this issue just now, and some options might require more validation work than others. Here are the observations I came upon.\r\n\r\n* Parameters defined as `ValidateSet` in `eng/build.ps1` are safe, as those fail right away. We also implemented something similar in `eng/build.sh`, so MacOS and Linux are safe as well.\r\n\r\n* Unknown flags by mistake to the scripts, usually in the form of typos like `--suibset` for example, are passed as potential MSBuild arguments, and therefore can\u0027t fail until the SDK is downloaded and active. For those ones, I have a potential solution:\r\n  * Do we ever pass stuff to MSBuild through the build scripts, without prefixing it with `-t:` or `-p:`? If not, we could add a check to verify that all unknown flags are prefixed. That way, we don\u0027t have to wait for the SDK.\r\n\r\n* We have some open string options, such as `--framework` and `--verbosity`. I believe we could use some sort of regexp for *framework*, and we could convert *verbosity* to a defined set, as I believe we only have like 5 or 6 valid values for this flag.\r\n\r\nWhat do you think @carlossanlop @jkoritzinsky?",
                                           "updatedAt":  "2024-01-25T00:01:58Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Check build.cmd arguments before we start doing actual work",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/63638",
        "createdAt":  "2022-01-11T18:23:16Z",
        "number":  63638,
        "author":  "agocke",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCqKG_w==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "EgorBo",
                                            "createdAt":  "2022-01-11T20:47:45Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "VSadov",
                                            "createdAt":  "2022-01-11T22:13:31Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "imhameed",
                                            "createdAt":  "2022-01-11T22:24:45Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "omariom",
                                            "createdAt":  "2022-08-16T23:44:11Z"
                                        }
                                    ],
                          "totalCount":  4
                      },
        "updatedAt":  "2023-08-15T23:30:38Z",
        "body":  "It looks like some ARM32 OSes can be configured to panic on unaligned read -- if possible we should do this in our ARM32 CI so that these kinds of issues can be caught in testing.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSI3EQA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc48NwqP",
                                           "createdAt":  "2022-01-11T18:23:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2022-01-11T18:23:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc48NwsS",
                                           "createdAt":  "2022-01-11T18:23:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nIt looks like some ARM32 OSes can be configured to panic on unaligned read -- if possible we should do this in our ARM32 CI so that these kinds of issues can be caught in testing.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eagocke\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-01-11T18:23:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5IjcRA",
                                           "createdAt":  "2022-08-16T22:53:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "According to https://www.kernel.org/doc/html/latest/arm/mem_alignment.html, it looks like the magic might be:\r\n\r\n```\r\necho 5 \u003e /proc/cpu/alignment\r\n```\r\n",
                                           "updatedAt":  "2022-08-16T22:53:45Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Configure ARM32 to panic on unligned read in CI",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/63729",
        "createdAt":  "2022-01-13T09:16:47Z",
        "number":  63729,
        "author":  "MarcasRealAccount",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCmGfgg==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ViktorHofer",
                                            "createdAt":  "2022-07-11T18:16:33Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2022-07-11T18:16:44Z",
        "body":  "When using `build.cmd` or `build.sh` to build certain subsets, you might end up with a few errors stating that you\u0027re missing executables.\r\nThat\u0027s because `build.cmd` and `build.sh` expects all subset dependencies are already built, which to my belief is very bad.\r\n\r\nFor instance building `Libs` requires that you first build some things from both `Clr` and `Host`.\r\n\r\nI think `build.cmd` and `build.sh` should not only build the target subset but also that subset\u0027s dependencies, such that instead of doing\r\n`build.cmd Clr+Host+Libs` because you only wanted the `Libs`, you\u0027d instead just do `build.cmd Libs` and it would build the dependencies from `Clr` and `Host`.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOPFu0qA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc48UQhk",
                                           "createdAt":  "2022-01-13T09:16:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nWhen using `build.cmd` or `build.sh` to build certain subsets, you might end up with a few errors stating that you\u0027re missing executables.\r\nThat\u0027s because `build.cmd` and `build.sh` expects all subset dependencies are already built, which to my belief is very bad.\r\n\r\nFor instance building `Libs` requires that you first build some things from both `Clr` and `Host`.\r\n\r\nI think `build.cmd` and `build.sh` should not only build the target subset but also that subset\u0027s dependencies, such that instead of doing\r\n`build.cmd Clr+Host+Libs` because you only wanted the `Libs`, you\u0027d instead just do `build.cmd Libs` and it would build the dependencies from `Clr` and `Host`.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eMarcasRealAccount\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-01-13T09:16:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc48WHn-",
                                           "createdAt":  "2022-01-13T19:14:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "safern",
                                           "body":  "Thanks, @MarcasRealAccount for your input, we appreciate it.\r\n\r\nIn my opinion, I think that would slow down innerloop and complicate things. There are various scenarios where you don\u0027t want to build dependencies for a subset, say CI scenarios, or even a scenario where I already have Clr built locally and I\u0027m just iterating over Libs, I don\u0027t want to spend time building Clr and just build Libs. \r\n\r\nWe could perhaps enable this if we fixed our incremental story and make it super fast to incrementally build all subsets, which we are investing on, but I don\u0027t know how much time people would waste building things they no longer need to build. \r\n\r\n@dotnet/runtime-infrastructure for more thoughts/ideas. ",
                                           "updatedAt":  "2022-01-13T19:14:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc48W7So",
                                           "createdAt":  "2022-01-14T00:32:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nWhen using `build.cmd` or `build.sh` to build certain subsets, you might end up with a few errors stating that you\u0027re missing executables.\r\nThat\u0027s because `build.cmd` and `build.sh` expects all subset dependencies are already built, which to my belief is very bad.\r\n\r\nFor instance building `Libs` requires that you first build some things from both `Clr` and `Host`.\r\n\r\nI think `build.cmd` and `build.sh` should not only build the target subset but also that subset\u0027s dependencies, such that instead of doing\r\n`build.cmd Clr+Host+Libs` because you only wanted the `Libs`, you\u0027d instead just do `build.cmd Libs` and it would build the dependencies from `Clr` and `Host`.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eMarcasRealAccount\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-01-14T00:32:58Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Build Subset Dependencies",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/65150",
        "createdAt":  "2022-02-10T19:11:13Z",
        "number":  65150,
        "author":  "am11",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-07-25T17:45:24Z",
        "body":  "Currently, opcode.def in coreclr and mono have the following diff:\r\n\r\n\u003cdetails\u003e\r\n  \u003csummary\u003e\u003ccode\u003ediff -u coreclr_opcode.def.csv mono_opcode.def.csv\u003c/code\u003e\u003c/summary\u003e\r\n\r\n```diff\r\n--- coreclr_opcode.def.csv\r\n+++ mono_opcode.def.csv\r\n@@ -25,7 +25,7 @@\r\n CEE_BNE_UN_S,  \"bne.un.s\",  Pop1+Pop1,  Push0,  ShortInlineBrTarget,  1,  0xFF,  0x33,  COND_BRANCH\r\n CEE_BOX,  \"box\",  Pop1,  PushRef,  InlineType,  1,  0xFF,  0x8C,  NEXT\r\n CEE_BR,  \"br\",  Pop0,  Push0,  InlineBrTarget,  1,  0xFF,  0x38,  BRANCH\r\n-CEE_BREAK,  \"break\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0x01,  BREAK\r\n+CEE_BREAK,  \"break\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0x01,  ERROR\r\n CEE_BRFALSE,  \"brfalse\",  PopI,  Push0,  InlineBrTarget,  1,  0xFF,  0x39,  COND_BRANCH\r\n CEE_BRFALSE_S,  \"brfalse.s\",  PopI,  Push0,  ShortInlineBrTarget,  1,  0xFF,  0x2C,  COND_BRANCH\r\n CEE_BRTRUE,  \"brtrue\",  PopI,  Push0,  InlineBrTarget,  1,  0xFF,  0x3A,  COND_BRANCH\r\n@@ -41,8 +41,7 @@\r\n CEE_CKFINITE,  \"ckfinite\",  Pop1,  PushR8,  InlineNone,  1,  0xFF,  0xC3,  NEXT\r\n CEE_CLT,  \"clt\",  Pop1+Pop1,  PushI,  InlineNone,  2,  0xFE,  0x04,  NEXT\r\n CEE_CLT_UN,  \"clt.un\",  Pop1+Pop1,  PushI,  InlineNone,  2,  0xFE,  0x05,  NEXT\r\n-CEE_CODE_LABEL,  \"codelabel\",  Pop0,  Push0,  InlineNone,  0,  MOOT,  MOOT,  META\r\n-CEE_CONSTRAINED,  \"constrained.\",  Pop0,  Push0,  InlineType,  2,  0xFE,  0x16,  META\r\n+CEE_CONSTRAINED_,  \"constrained.\",  Pop0,  Push0,  InlineType,  2,  0xFE,  0x16,  META\r\n CEE_CONV_I,  \"conv.i\",  Pop1,  PushI,  InlineNone,  1,  0xFF,  0xD3,  NEXT\r\n CEE_CONV_I1,  \"conv.i1\",  Pop1,  PushI,  InlineNone,  1,  0xFF,  0x67,  NEXT\r\n CEE_CONV_I2,  \"conv.i2\",  Pop1,  PushI,  InlineNone,  1,  0xFF,  0x68,  NEXT\r\n@@ -83,7 +82,8 @@\r\n CEE_DUP,  \"dup\",  Pop1,  Push1+Push1,  InlineNone,  1,  0xFF,  0x25,  NEXT\r\n CEE_ENDFILTER,  \"endfilter\",  PopI,  Push0,  InlineNone,  2,  0xFE,  0x11,  RETURN\r\n CEE_ENDFINALLY,  \"endfinally\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xDC,  RETURN\r\n-CEE_ILLEGAL,  \"illegal\",  Pop0,  Push0,  InlineNone,  0,  MOOT,  MOOT,  META\r\n+CEE_ENDMAC,  \"endmac\",  Pop0,  Push0,  InlineNone,  2,  0x00,  0x00,  META\r\n+CEE_ILLEGAL,  \"illegal\",  Pop0,  Push0,  InlineNone,  2,  0x00,  0x00,  META\r\n CEE_INITBLK,  \"initblk\",  PopI+PopI+PopI,  Push0,  InlineNone,  2,  0xFE,  0x18,  NEXT\r\n CEE_INITOBJ,  \"initobj\",  PopI,  Push0,  InlineType,  2,  0xFE,  0x15,  NEXT\r\n CEE_ISINST,  \"isinst\",  PopRef,  PushI,  InlineType,  1,  0xFF,  0x75,  NEXT\r\n@@ -157,8 +157,41 @@\r\n CEE_LEAVE,  \"leave\",  Pop0,  Push0,  InlineBrTarget,  1,  0xFF,  0xDD,  BRANCH\r\n CEE_LEAVE_S,  \"leave.s\",  Pop0,  Push0,  ShortInlineBrTarget,  1,  0xFF,  0xDE,  BRANCH\r\n CEE_LOCALLOC,  \"localloc\",  PopI,  PushI,  InlineNone,  2,  0xFE,  0x0F,  NEXT\r\n-CEE_MACRO_END,  \"endmac\",  Pop0,  Push0,  InlineNone,  0,  MOOT,  MOOT,  META\r\n CEE_MKREFANY,  \"mkrefany\",  PopI,  Push1,  InlineType,  1,  0xFF,  0xC6,  NEXT\r\n+CEE_MONO_ATOMIC_STORE_I4,  \"mono_atomic_store_i4\",  PopI+PopI,  Push0,  InlineI,  2,  0xF0,  0x1A,  NEXT\r\n+CEE_MONO_CALLI_EXTRA_ARG,  \"mono_calli_extra_arg\",  VarPop,  VarPush,  InlineSig,  2,  0xF0,  0x18,  CALL\r\n+CEE_MONO_CCASTCLASS,  \"mono_ccastclass\",  PopRef,  Push1,  InlineType,  2,  0xF0,  0x08,  NEXT\r\n+CEE_MONO_CISINST,  \"mono_cisinst\",  PopRef,  Push1,  InlineType,  2,  0xF0,  0x07,  NEXT\r\n+CEE_MONO_CLASSCONST,  \"mono_classconst\",  Pop0,  PushI,  InlineI,  2,  0xF0,  0x0B,  NEXT\r\n+CEE_MONO_DYN_CALL,  \"mono_dyn_call\",  Pop0,  PushI,  InlineNone,  2,  0xF0,  0x0F,  NEXT\r\n+CEE_MONO_GET_RGCTX_ARG,  \"mono_get_rgctx_arg\",  Pop0,  PushI,  InlineNone,  2,  0xF0,  0x1C,  NEXT\r\n+CEE_MONO_GET_SP,  \"mono_get_sp\",  Pop0,  PushI,  InlineNone,  2,  0xF0,  0x20,  NEXT\r\n+CEE_MONO_ICALL,  \"mono_icall\",  VarPop,  VarPush,  InlineI,  2,  0xF0,  0x00,  NEXT\r\n+CEE_MONO_ICALL_ADDR,  \"mono_icall_addr\",  Pop0,  PushI,  InlineI,  2,  0xF0,  0x0E,  NEXT\r\n+CEE_MONO_JIT_ICALL_ADDR,  \"mono_jit_icall_addr\",  Pop0,  PushI,  InlineI,  2,  0xF0,  0x13,  NEXT\r\n+CEE_MONO_LDDOMAIN,  \"mono_lddomain\",  Pop0,  PushI,  InlineNone,  2,  0xF0,  0x19,  NEXT\r\n+CEE_MONO_LDNATIVEOBJ,  \"mono_ldnativeobj\",  PopI,  Push1,  InlineType,  2,  0xF0,  0x06,  RETURN\r\n+CEE_MONO_LDPTR,  \"mono_ldptr\",  Pop0,  PushI,  InlineI,  2,  0xF0,  0x02,  NEXT\r\n+CEE_MONO_LDPTR_CARD_TABLE,  \"mono_ldptr_card_table\",  Pop0,  PushI,  InlineNone,  2,  0xF0,  0x15,  NEXT\r\n+CEE_MONO_LDPTR_INT_REQ_FLAG,  \"mono_ldptr_int_req_flag\",  Pop0,  PushI,  InlineNone,  2,  0xF0,  0x14,  NEXT\r\n+CEE_MONO_LDPTR_NURSERY_BITS,  \"mono_ldptr_nursery_bits\",  Pop0,  PushI,  InlineNone,  2,  0xF0,  0x17,  NEXT\r\n+CEE_MONO_LDPTR_NURSERY_START,  \"mono_ldptr_nursery_start\",  Pop0,  PushI,  InlineNone,  2,  0xF0,  0x16,  NEXT\r\n+CEE_MONO_LDPTR_PROFILER_ALLOCATION_COUNT,  \"mono_ldptr_profiler_allocation_count\",  Pop0,  PushI,  InlineNone,  2,  0xF0,  0x1D,  NEXT\r\n+CEE_MONO_LD_DELEGATE_METHOD_PTR,  \"mono_ld_delegate_method_ptr\",  Pop1,  PushI,  InlineNone,  2,  0xF0,  0x1E,  NEXT\r\n+CEE_MONO_MEMORY_BARRIER,  \"mono_memory_barrier\",  Pop0,  Push0,  InlineI,  2,  0xF0,  0x10,  NEXT\r\n+CEE_MONO_METHODCONST,  \"mono_methodconst\",  Pop0,  PushI,  InlineI,  2,  0xF0,  0x21,  NEXT\r\n+CEE_MONO_NEWOBJ,  \"mono_newobj\",  Pop0,  PushRef,  InlineType,  2,  0xF0,  0x04,  NEXT\r\n+CEE_MONO_NOT_TAKEN,  \"mono_not_taken\",  Pop0,  Push0,  InlineNone,  2,  0xF0,  0x0C,  NEXT\r\n+CEE_MONO_OBJADDR,  \"mono_objaddr\",  Pop1,  PushI,  InlineNone,  2,  0xF0,  0x01,  NEXT\r\n+CEE_MONO_PINVOKE_ADDR_CACHE,  \"mono_pinvoke_addr_cache\",  Pop0,  PushI,  InlineI,  2,  0xF0,  0x22,  NEXT\r\n+CEE_MONO_REMAP_OVF_EXC,  \"mono_remap_ovf_exc\",  Pop0,  Push0,  InlineI,  2,  0xF0,  0x23,  NEXT\r\n+CEE_MONO_RESTORE_LMF,  \"mono_restore_lmf\",  Pop0,  Push0,  InlineNone,  2,  0xF0,  0x0A,  NEXT\r\n+CEE_MONO_RETHROW,  \"mono_rethrow\",  PopRef,  Push0,  InlineNone,  2,  0xF0,  0x1F,  ERROR\r\n+CEE_MONO_RETOBJ,  \"mono_retobj\",  PopI,  Push0,  InlineType,  2,  0xF0,  0x05,  RETURN\r\n+CEE_MONO_SAVE_LAST_ERROR,  \"mono_save_last_error\",  Pop0,  Push0,  InlineNone,  2,  0xF0,  0x1B,  NEXT\r\n+CEE_MONO_SAVE_LMF,  \"mono_save_lmf\",  Pop0,  Push0,  InlineNone,  2,  0xF0,  0x09,  NEXT\r\n+CEE_MONO_TLS,  \"mono_tls\",  Pop0,  PushI,  InlineI,  2,  0xF0,  0x0D,  NEXT\r\n+CEE_MONO_VTADDR,  \"mono_vtaddr\",  Pop1,  PushI,  InlineNone,  2,  0xF0,  0x03,  NEXT\r\n CEE_MUL,  \"mul\",  Pop1+Pop1,  Push1,  InlineNone,  1,  0xFF,  0x5A,  NEXT\r\n CEE_MUL_OVF,  \"mul.ovf\",  Pop1+Pop1,  Push1,  InlineNone,  1,  0xFF,  0xD8,  NEXT\r\n CEE_MUL_OVF_UN,  \"mul.ovf.un\",  Pop1+Pop1,  Push1,  InlineNone,  1,  0xFF,  0xD9,  NEXT\r\n@@ -167,6 +200,7 @@\r\n CEE_NEWOBJ,  \"newobj\",  VarPop,  PushRef,  InlineMethod,  1,  0xFF,  0x73,  CALL\r\n CEE_NOP,  \"nop\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0x00,  NEXT\r\n CEE_NOT,  \"not\",  Pop1,  Push1,  InlineNone,  1,  0xFF,  0x66,  NEXT\r\n+CEE_NO_,  \"no.\",  Pop0,  Push0,  ShortInlineI,  2,  0xFE,  0x19,  NEXT\r\n CEE_OR,  \"or\",  Pop1+Pop1,  Push1,  InlineNone,  1,  0xFF,  0x60,  NEXT\r\n CEE_POP,  \"pop\",  Pop1,  Push0,  InlineNone,  1,  0xFF,  0x26,  NEXT\r\n CEE_PREFIX1,  \"prefix1\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xFE,  META\r\n@@ -177,13 +211,13 @@\r\n CEE_PREFIX6,  \"prefix6\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF9,  META\r\n CEE_PREFIX7,  \"prefix7\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF8,  META\r\n CEE_PREFIXREF,  \"prefixref\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xFF,  META\r\n-CEE_READONLY,  \"readonly.\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x1E,  META\r\n+CEE_READONLY_,  \"readonly.\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x1E,  META\r\n CEE_REFANYTYPE,  \"refanytype\",  Pop1,  PushI,  InlineNone,  2,  0xFE,  0x1D,  NEXT\r\n CEE_REFANYVAL,  \"refanyval\",  Pop1,  PushI,  InlineType,  1,  0xFF,  0xC2,  NEXT\r\n CEE_REM,  \"rem\",  Pop1+Pop1,  Push1,  InlineNone,  1,  0xFF,  0x5D,  NEXT\r\n CEE_REM_UN,  \"rem.un\",  Pop1+Pop1,  Push1,  InlineNone,  1,  0xFF,  0x5E,  NEXT\r\n CEE_RET,  \"ret\",  VarPop,  Push0,  InlineNone,  1,  0xFF,  0x2A,  RETURN\r\n-CEE_RETHROW,  \"rethrow\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x1A,  THROW\r\n+CEE_RETHROW,  \"rethrow\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x1A,  ERROR\r\n CEE_SHL,  \"shl\",  Pop1+Pop1,  Push1,  InlineNone,  1,  0xFF,  0x62,  NEXT\r\n CEE_SHR,  \"shr\",  Pop1+Pop1,  Push1,  InlineNone,  1,  0xFF,  0x63,  NEXT\r\n CEE_SHR_UN,  \"shr.un\",  Pop1+Pop1,  Push1,  InlineNone,  1,  0xFF,  0x64,  NEXT\r\n@@ -220,75 +254,76 @@\r\n CEE_SUB_OVF,  \"sub.ovf\",  Pop1+Pop1,  Push1,  InlineNone,  1,  0xFF,  0xDA,  NEXT\r\n CEE_SUB_OVF_UN,  \"sub.ovf.un\",  Pop1+Pop1,  Push1,  InlineNone,  1,  0xFF,  0xDB,  NEXT\r\n CEE_SWITCH,  \"switch\",  PopI,  Push0,  InlineSwitch,  1,  0xFF,  0x45,  COND_BRANCH\r\n-CEE_TAILCALL,  \"tail.\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x14,  META\r\n-CEE_THROW,  \"throw\",  PopRef,  Push0,  InlineNone,  1,  0xFF,  0x7A,  THROW\r\n-CEE_UNALIGNED,  \"unaligned.\",  Pop0,  Push0,  ShortInlineI,  2,  0xFE,  0x12,  META\r\n+CEE_TAIL_,  \"tail.\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x14,  META\r\n+CEE_THROW,  \"throw\",  PopRef,  Push0,  InlineNone,  1,  0xFF,  0x7A,  ERROR\r\n+CEE_UNALIGNED_,  \"unaligned.\",  Pop0,  Push0,  ShortInlineI,  2,  0xFE,  0x12,  META\r\n CEE_UNBOX,  \"unbox\",  PopRef,  PushI,  InlineType,  1,  0xFF,  0x79,  NEXT\r\n CEE_UNBOX_ANY,  \"unbox.any\",  PopRef,  Push1,  InlineType,  1,  0xFF,  0xA5,  NEXT\r\n-CEE_UNUSED1,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0x78,  NEXT\r\n-CEE_UNUSED10,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xAB,  NEXT\r\n-CEE_UNUSED11,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xAC,  NEXT\r\n-CEE_UNUSED12,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xAD,  NEXT\r\n-CEE_UNUSED13,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xAE,  NEXT\r\n-CEE_UNUSED14,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xAF,  NEXT\r\n-CEE_UNUSED15,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xB0,  NEXT\r\n-CEE_UNUSED16,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xB1,  NEXT\r\n-CEE_UNUSED17,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xB2,  NEXT\r\n-CEE_UNUSED18,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xBC,  NEXT\r\n-CEE_UNUSED19,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xBD,  NEXT\r\n-CEE_UNUSED20,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xBE,  NEXT\r\n-CEE_UNUSED21,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xBF,  NEXT\r\n-CEE_UNUSED22,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC0,  NEXT\r\n-CEE_UNUSED23,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC1,  NEXT\r\n-CEE_UNUSED24,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC4,  NEXT\r\n-CEE_UNUSED25,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC5,  NEXT\r\n-CEE_UNUSED26,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE1,  NEXT\r\n-CEE_UNUSED27,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE2,  NEXT\r\n-CEE_UNUSED28,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE3,  NEXT\r\n-CEE_UNUSED29,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE4,  NEXT\r\n-CEE_UNUSED30,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE5,  NEXT\r\n-CEE_UNUSED31,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE6,  NEXT\r\n-CEE_UNUSED32,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE7,  NEXT\r\n-CEE_UNUSED33,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE8,  NEXT\r\n-CEE_UNUSED34,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE9,  NEXT\r\n-CEE_UNUSED35,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xEA,  NEXT\r\n-CEE_UNUSED36,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xEB,  NEXT\r\n-CEE_UNUSED37,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xEC,  NEXT\r\n-CEE_UNUSED38,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xED,  NEXT\r\n-CEE_UNUSED39,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xEE,  NEXT\r\n-CEE_UNUSED40,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xEF,  NEXT\r\n-CEE_UNUSED41,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF0,  NEXT\r\n-CEE_UNUSED42,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF1,  NEXT\r\n-CEE_UNUSED43,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF2,  NEXT\r\n-CEE_UNUSED44,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF3,  NEXT\r\n-CEE_UNUSED45,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF4,  NEXT\r\n-CEE_UNUSED46,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF5,  NEXT\r\n-CEE_UNUSED47,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF6,  NEXT\r\n-CEE_UNUSED48,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF7,  NEXT\r\n-CEE_UNUSED49,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0x24,  NEXT\r\n-CEE_UNUSED5,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xA6,  NEXT\r\n-CEE_UNUSED50,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xBB,  NEXT\r\n-CEE_UNUSED51,  \"unused\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x1B,  NEXT\r\n-CEE_UNUSED53,  \"unused\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x1F,  NEXT\r\n-CEE_UNUSED54,  \"unused\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x20,  NEXT\r\n-CEE_UNUSED55,  \"unused\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x21,  NEXT\r\n-CEE_UNUSED56,  \"unused\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x08,  NEXT\r\n-CEE_UNUSED57,  \"unused\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x10,  NEXT\r\n-CEE_UNUSED58,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0x77,  NEXT\r\n-CEE_UNUSED59,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC7,  NEXT\r\n-CEE_UNUSED6,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xA7,  NEXT\r\n-CEE_UNUSED60,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC8,  NEXT\r\n-CEE_UNUSED61,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC9,  NEXT\r\n-CEE_UNUSED62,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xCA,  NEXT\r\n-CEE_UNUSED63,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xCB,  NEXT\r\n-CEE_UNUSED64,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xCC,  NEXT\r\n-CEE_UNUSED65,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xCD,  NEXT\r\n-CEE_UNUSED66,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xCE,  NEXT\r\n-CEE_UNUSED67,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xCF,  NEXT\r\n-CEE_UNUSED69,  \"unused\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x19,  NEXT\r\n-CEE_UNUSED7,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xA8,  NEXT\r\n-CEE_UNUSED70,  \"unused\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x22,  NEXT\r\n-CEE_UNUSED8,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xA9,  NEXT\r\n-CEE_UNUSED9,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xAA,  NEXT\r\n-CEE_VOLATILE,  \"volatile.\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x13,  META\r\n+CEE_UNUSED,  \"unused\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x1B,  NEXT\r\n+CEE_UNUSED1,  \"unused1\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0x78,  NEXT\r\n+CEE_UNUSED10,  \"unused10\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xAB,  NEXT\r\n+CEE_UNUSED11,  \"unused11\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xAC,  NEXT\r\n+CEE_UNUSED12,  \"unused12\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xAD,  NEXT\r\n+CEE_UNUSED13,  \"unused13\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xAE,  NEXT\r\n+CEE_UNUSED14,  \"unused14\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xAF,  NEXT\r\n+CEE_UNUSED15,  \"unused15\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xB0,  NEXT\r\n+CEE_UNUSED16,  \"unused16\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xB1,  NEXT\r\n+CEE_UNUSED17,  \"unused17\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xB2,  NEXT\r\n+CEE_UNUSED18,  \"unused18\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xBC,  NEXT\r\n+CEE_UNUSED19,  \"unused19\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xBD,  NEXT\r\n+CEE_UNUSED20,  \"unused20\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xBE,  NEXT\r\n+CEE_UNUSED21,  \"unused21\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xBF,  NEXT\r\n+CEE_UNUSED22,  \"unused22\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC0,  NEXT\r\n+CEE_UNUSED23,  \"unused23\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC1,  NEXT\r\n+CEE_UNUSED24,  \"unused24\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC4,  NEXT\r\n+CEE_UNUSED25,  \"unused25\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC5,  NEXT\r\n+CEE_UNUSED26,  \"unused26\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE1,  NEXT\r\n+CEE_UNUSED27,  \"unused27\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE2,  NEXT\r\n+CEE_UNUSED28,  \"unused28\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE3,  NEXT\r\n+CEE_UNUSED29,  \"unused29\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE4,  NEXT\r\n+CEE_UNUSED30,  \"unused30\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE5,  NEXT\r\n+CEE_UNUSED31,  \"unused31\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE6,  NEXT\r\n+CEE_UNUSED32,  \"unused32\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE7,  NEXT\r\n+CEE_UNUSED33,  \"unused33\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE8,  NEXT\r\n+CEE_UNUSED34,  \"unused34\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE9,  NEXT\r\n+CEE_UNUSED35,  \"unused35\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xEA,  NEXT\r\n+CEE_UNUSED36,  \"unused36\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xEB,  NEXT\r\n+CEE_UNUSED37,  \"unused37\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xEC,  NEXT\r\n+CEE_UNUSED38,  \"unused38\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xED,  NEXT\r\n+CEE_UNUSED39,  \"unused39\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xEE,  NEXT\r\n+CEE_UNUSED40,  \"unused40\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xEF,  NEXT\r\n+CEE_UNUSED41,  \"unused41\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF0,  NEXT\r\n+CEE_UNUSED42,  \"unused42\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF1,  NEXT\r\n+CEE_UNUSED43,  \"unused43\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF2,  NEXT\r\n+CEE_UNUSED44,  \"unused44\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF3,  NEXT\r\n+CEE_UNUSED45,  \"unused45\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF4,  NEXT\r\n+CEE_UNUSED46,  \"unused46\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF5,  NEXT\r\n+CEE_UNUSED47,  \"unused47\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF6,  NEXT\r\n+CEE_UNUSED48,  \"unused48\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF7,  NEXT\r\n+CEE_UNUSED5,  \"unused5\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xA6,  NEXT\r\n+CEE_UNUSED50,  \"unused50\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xBB,  NEXT\r\n+CEE_UNUSED53,  \"unused53\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x1F,  NEXT\r\n+CEE_UNUSED54,  \"unused54\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x20,  NEXT\r\n+CEE_UNUSED55,  \"unused55\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x21,  NEXT\r\n+CEE_UNUSED56,  \"unused56\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x08,  NEXT\r\n+CEE_UNUSED57,  \"unused57\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x10,  NEXT\r\n+CEE_UNUSED58,  \"unused58\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0x77,  NEXT\r\n+CEE_UNUSED59,  \"unused59\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC7,  NEXT\r\n+CEE_UNUSED6,  \"unused6\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xA7,  NEXT\r\n+CEE_UNUSED60,  \"unused60\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC8,  NEXT\r\n+CEE_UNUSED61,  \"unused61\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC9,  NEXT\r\n+CEE_UNUSED62,  \"unused62\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xCA,  NEXT\r\n+CEE_UNUSED63,  \"unused63\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xCB,  NEXT\r\n+CEE_UNUSED64,  \"unused64\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xCC,  NEXT\r\n+CEE_UNUSED65,  \"unused65\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xCD,  NEXT\r\n+CEE_UNUSED66,  \"unused66\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xCE,  NEXT\r\n+CEE_UNUSED67,  \"unused67\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xCF,  NEXT\r\n+CEE_UNUSED7,  \"unused7\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xA8,  NEXT\r\n+CEE_UNUSED70,  \"unused70\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x22,  NEXT\r\n+CEE_UNUSED71,  \"unused71\",  Pop0,  Push0,  InlineNone,  2,  0xF0,  0x11,  NEXT\r\n+CEE_UNUSED72,  \"unused72\",  Pop0,  Push0,  InlineNone,  2,  0xF0,  0x12,  NEXT\r\n+CEE_UNUSED8,  \"unused8\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xA9,  NEXT\r\n+CEE_UNUSED9,  \"unused9\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xAA,  NEXT\r\n+CEE_UNUSED99,  \"unused99\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0x24,  NEXT\r\n+CEE_VOLATILE_,  \"volatile.\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x13,  META\r\n CEE_XOR,  \"xor\",  Pop1+Pop1,  Push1,  InlineNone,  1,  0xFF,  0x61,  NEXT\r\n```\r\n\u003c/details\u003e\r\n\r\nThese CSV files was generated by ignoring \"Type\" column in opcode.def files (because in coreclr, type or kind column has type names (e.g. `IPrimitive`) and mono has numeric values).\r\n\r\nCan these be unified such that it doesn\u0027t produce any diff?\r\n\r\nIf so, we can move `src/coreclr/inc/opcode.def` to minipal and share it with coreclr and mono for native component build. That will also make it possible to convert Perl-based source generator for *.cs files to a Roslyn-based source generator and remove dependency on Perl, XSLT and Perl modules (XML::Parser used in mono one) from this process.\r\n\r\nOverall, there are a few (eight) perl scripts left, this will remove two from the repo.\r\n\r\ncc @jkotas, @jkoritzinsky, @lambdageek",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOPbqmzA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc49tmJb",
                                           "createdAt":  "2022-02-10T19:11:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2022-02-10T19:11:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc49two2",
                                           "createdAt":  "2022-02-10T19:39:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCOH5ow==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkoritzinsky",
                                                                               "createdAt":  "2022-02-10T19:40:40Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e we can move src/coreclr/inc/opcode.def to minipal \r\n\r\nYes, it is fine to de-dup it and move it to shared location.\r\n\r\nI do not think it should be under minipal. PAL is Platform Adoption Layer. This file is not that.",
                                           "updatedAt":  "2022-02-10T19:39:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc49tzZq",
                                           "createdAt":  "2022-02-10T19:48:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "minipal is currently just an include directory with shared headers under src/native, so I called it out. By that definition, entrypoints.h also does not belong there. :)\r\n\r\nMain question is if the opcode definitions be aligned or would it break something if we change the values shown by diff?",
                                           "updatedAt":  "2022-02-10T19:48:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc49t3z5",
                                           "createdAt":  "2022-02-10T20:01:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "What should we do about the mono-specific opcodes (these are used in various wrappers that we need to generate) such as `CEE_MONO_RETHROW`\r\n",
                                           "updatedAt":  "2022-02-10T20:01:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc49uAQ8",
                                           "createdAt":  "2022-02-10T20:27:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCOI9fQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "lambdageek",
                                                                               "createdAt":  "2022-02-10T21:27:40Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "am11",
                                           "body":  "We can use `#ifdef MONO` for the ones unique to a runtime.\r\n\r\nFor the other opcodes like `CEE_RETHROW` and `CEE_BREAK`, where they differ by control value (BREAK or THROW in coreclr vs. ERROR in mono), will it break something if we use coreclr values on mono?",
                                           "updatedAt":  "2022-02-10T20:27:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc49uDc3",
                                           "createdAt":  "2022-02-10T20:36:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCOI9JQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2022-02-10T21:27:06Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "lambdageek",
                                           "body":  "\u003e For the other opcodes like `CEE_RETHROW` and `CEE_BREAK`, where they differ by control value (BREAK or THROW in coreclr vs. ERROR in mono), will it break something if we use coreclr values on mono?\r\n\r\nas far as I can tell the only value we care about is `MONO_FLOW_BRANCH`.  but even in that case, its straightforward to use another name.\r\n",
                                           "updatedAt":  "2022-02-10T20:36:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc49uqbM",
                                           "createdAt":  "2022-02-10T23:33:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nCurrently, opcode.def in coreclr and mono have the following diff:\r\n\r\n\u003cdetails\u003e\r\n  \u003csummary\u003e\u003ccode\u003ediff -u coreclr_opcode.def.csv mono_opcode.def.csv\u003c/code\u003e\u003c/summary\u003e\r\n\r\n```diff\r\n--- coreclr_opcode.def.csv\r\n+++ mono_opcode.def.csv\r\n@@ -25,7 +25,7 @@\r\n CEE_BNE_UN_S,  \"bne.un.s\",  Pop1+Pop1,  Push0,  ShortInlineBrTarget,  1,  0xFF,  0x33,  COND_BRANCH\r\n CEE_BOX,  \"box\",  Pop1,  PushRef,  InlineType,  1,  0xFF,  0x8C,  NEXT\r\n CEE_BR,  \"br\",  Pop0,  Push0,  InlineBrTarget,  1,  0xFF,  0x38,  BRANCH\r\n-CEE_BREAK,  \"break\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0x01,  BREAK\r\n+CEE_BREAK,  \"break\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0x01,  ERROR\r\n CEE_BRFALSE,  \"brfalse\",  PopI,  Push0,  InlineBrTarget,  1,  0xFF,  0x39,  COND_BRANCH\r\n CEE_BRFALSE_S,  \"brfalse.s\",  PopI,  Push0,  ShortInlineBrTarget,  1,  0xFF,  0x2C,  COND_BRANCH\r\n CEE_BRTRUE,  \"brtrue\",  PopI,  Push0,  InlineBrTarget,  1,  0xFF,  0x3A,  COND_BRANCH\r\n@@ -41,8 +41,7 @@\r\n CEE_CKFINITE,  \"ckfinite\",  Pop1,  PushR8,  InlineNone,  1,  0xFF,  0xC3,  NEXT\r\n CEE_CLT,  \"clt\",  Pop1+Pop1,  PushI,  InlineNone,  2,  0xFE,  0x04,  NEXT\r\n CEE_CLT_UN,  \"clt.un\",  Pop1+Pop1,  PushI,  InlineNone,  2,  0xFE,  0x05,  NEXT\r\n-CEE_CODE_LABEL,  \"codelabel\",  Pop0,  Push0,  InlineNone,  0,  MOOT,  MOOT,  META\r\n-CEE_CONSTRAINED,  \"constrained.\",  Pop0,  Push0,  InlineType,  2,  0xFE,  0x16,  META\r\n+CEE_CONSTRAINED_,  \"constrained.\",  Pop0,  Push0,  InlineType,  2,  0xFE,  0x16,  META\r\n CEE_CONV_I,  \"conv.i\",  Pop1,  PushI,  InlineNone,  1,  0xFF,  0xD3,  NEXT\r\n CEE_CONV_I1,  \"conv.i1\",  Pop1,  PushI,  InlineNone,  1,  0xFF,  0x67,  NEXT\r\n CEE_CONV_I2,  \"conv.i2\",  Pop1,  PushI,  InlineNone,  1,  0xFF,  0x68,  NEXT\r\n@@ -83,7 +82,8 @@\r\n CEE_DUP,  \"dup\",  Pop1,  Push1+Push1,  InlineNone,  1,  0xFF,  0x25,  NEXT\r\n CEE_ENDFILTER,  \"endfilter\",  PopI,  Push0,  InlineNone,  2,  0xFE,  0x11,  RETURN\r\n CEE_ENDFINALLY,  \"endfinally\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xDC,  RETURN\r\n-CEE_ILLEGAL,  \"illegal\",  Pop0,  Push0,  InlineNone,  0,  MOOT,  MOOT,  META\r\n+CEE_ENDMAC,  \"endmac\",  Pop0,  Push0,  InlineNone,  2,  0x00,  0x00,  META\r\n+CEE_ILLEGAL,  \"illegal\",  Pop0,  Push0,  InlineNone,  2,  0x00,  0x00,  META\r\n CEE_INITBLK,  \"initblk\",  PopI+PopI+PopI,  Push0,  InlineNone,  2,  0xFE,  0x18,  NEXT\r\n CEE_INITOBJ,  \"initobj\",  PopI,  Push0,  InlineType,  2,  0xFE,  0x15,  NEXT\r\n CEE_ISINST,  \"isinst\",  PopRef,  PushI,  InlineType,  1,  0xFF,  0x75,  NEXT\r\n@@ -157,8 +157,41 @@\r\n CEE_LEAVE,  \"leave\",  Pop0,  Push0,  InlineBrTarget,  1,  0xFF,  0xDD,  BRANCH\r\n CEE_LEAVE_S,  \"leave.s\",  Pop0,  Push0,  ShortInlineBrTarget,  1,  0xFF,  0xDE,  BRANCH\r\n CEE_LOCALLOC,  \"localloc\",  PopI,  PushI,  InlineNone,  2,  0xFE,  0x0F,  NEXT\r\n-CEE_MACRO_END,  \"endmac\",  Pop0,  Push0,  InlineNone,  0,  MOOT,  MOOT,  META\r\n CEE_MKREFANY,  \"mkrefany\",  PopI,  Push1,  InlineType,  1,  0xFF,  0xC6,  NEXT\r\n+CEE_MONO_ATOMIC_STORE_I4,  \"mono_atomic_store_i4\",  PopI+PopI,  Push0,  InlineI,  2,  0xF0,  0x1A,  NEXT\r\n+CEE_MONO_CALLI_EXTRA_ARG,  \"mono_calli_extra_arg\",  VarPop,  VarPush,  InlineSig,  2,  0xF0,  0x18,  CALL\r\n+CEE_MONO_CCASTCLASS,  \"mono_ccastclass\",  PopRef,  Push1,  InlineType,  2,  0xF0,  0x08,  NEXT\r\n+CEE_MONO_CISINST,  \"mono_cisinst\",  PopRef,  Push1,  InlineType,  2,  0xF0,  0x07,  NEXT\r\n+CEE_MONO_CLASSCONST,  \"mono_classconst\",  Pop0,  PushI,  InlineI,  2,  0xF0,  0x0B,  NEXT\r\n+CEE_MONO_DYN_CALL,  \"mono_dyn_call\",  Pop0,  PushI,  InlineNone,  2,  0xF0,  0x0F,  NEXT\r\n+CEE_MONO_GET_RGCTX_ARG,  \"mono_get_rgctx_arg\",  Pop0,  PushI,  InlineNone,  2,  0xF0,  0x1C,  NEXT\r\n+CEE_MONO_GET_SP,  \"mono_get_sp\",  Pop0,  PushI,  InlineNone,  2,  0xF0,  0x20,  NEXT\r\n+CEE_MONO_ICALL,  \"mono_icall\",  VarPop,  VarPush,  InlineI,  2,  0xF0,  0x00,  NEXT\r\n+CEE_MONO_ICALL_ADDR,  \"mono_icall_addr\",  Pop0,  PushI,  InlineI,  2,  0xF0,  0x0E,  NEXT\r\n+CEE_MONO_JIT_ICALL_ADDR,  \"mono_jit_icall_addr\",  Pop0,  PushI,  InlineI,  2,  0xF0,  0x13,  NEXT\r\n+CEE_MONO_LDDOMAIN,  \"mono_lddomain\",  Pop0,  PushI,  InlineNone,  2,  0xF0,  0x19,  NEXT\r\n+CEE_MONO_LDNATIVEOBJ,  \"mono_ldnativeobj\",  PopI,  Push1,  InlineType,  2,  0xF0,  0x06,  RETURN\r\n+CEE_MONO_LDPTR,  \"mono_ldptr\",  Pop0,  PushI,  InlineI,  2,  0xF0,  0x02,  NEXT\r\n+CEE_MONO_LDPTR_CARD_TABLE,  \"mono_ldptr_card_table\",  Pop0,  PushI,  InlineNone,  2,  0xF0,  0x15,  NEXT\r\n+CEE_MONO_LDPTR_INT_REQ_FLAG,  \"mono_ldptr_int_req_flag\",  Pop0,  PushI,  InlineNone,  2,  0xF0,  0x14,  NEXT\r\n+CEE_MONO_LDPTR_NURSERY_BITS,  \"mono_ldptr_nursery_bits\",  Pop0,  PushI,  InlineNone,  2,  0xF0,  0x17,  NEXT\r\n+CEE_MONO_LDPTR_NURSERY_START,  \"mono_ldptr_nursery_start\",  Pop0,  PushI,  InlineNone,  2,  0xF0,  0x16,  NEXT\r\n+CEE_MONO_LDPTR_PROFILER_ALLOCATION_COUNT,  \"mono_ldptr_profiler_allocation_count\",  Pop0,  PushI,  InlineNone,  2,  0xF0,  0x1D,  NEXT\r\n+CEE_MONO_LD_DELEGATE_METHOD_PTR,  \"mono_ld_delegate_method_ptr\",  Pop1,  PushI,  InlineNone,  2,  0xF0,  0x1E,  NEXT\r\n+CEE_MONO_MEMORY_BARRIER,  \"mono_memory_barrier\",  Pop0,  Push0,  InlineI,  2,  0xF0,  0x10,  NEXT\r\n+CEE_MONO_METHODCONST,  \"mono_methodconst\",  Pop0,  PushI,  InlineI,  2,  0xF0,  0x21,  NEXT\r\n+CEE_MONO_NEWOBJ,  \"mono_newobj\",  Pop0,  PushRef,  InlineType,  2,  0xF0,  0x04,  NEXT\r\n+CEE_MONO_NOT_TAKEN,  \"mono_not_taken\",  Pop0,  Push0,  InlineNone,  2,  0xF0,  0x0C,  NEXT\r\n+CEE_MONO_OBJADDR,  \"mono_objaddr\",  Pop1,  PushI,  InlineNone,  2,  0xF0,  0x01,  NEXT\r\n+CEE_MONO_PINVOKE_ADDR_CACHE,  \"mono_pinvoke_addr_cache\",  Pop0,  PushI,  InlineI,  2,  0xF0,  0x22,  NEXT\r\n+CEE_MONO_REMAP_OVF_EXC,  \"mono_remap_ovf_exc\",  Pop0,  Push0,  InlineI,  2,  0xF0,  0x23,  NEXT\r\n+CEE_MONO_RESTORE_LMF,  \"mono_restore_lmf\",  Pop0,  Push0,  InlineNone,  2,  0xF0,  0x0A,  NEXT\r\n+CEE_MONO_RETHROW,  \"mono_rethrow\",  PopRef,  Push0,  InlineNone,  2,  0xF0,  0x1F,  ERROR\r\n+CEE_MONO_RETOBJ,  \"mono_retobj\",  PopI,  Push0,  InlineType,  2,  0xF0,  0x05,  RETURN\r\n+CEE_MONO_SAVE_LAST_ERROR,  \"mono_save_last_error\",  Pop0,  Push0,  InlineNone,  2,  0xF0,  0x1B,  NEXT\r\n+CEE_MONO_SAVE_LMF,  \"mono_save_lmf\",  Pop0,  Push0,  InlineNone,  2,  0xF0,  0x09,  NEXT\r\n+CEE_MONO_TLS,  \"mono_tls\",  Pop0,  PushI,  InlineI,  2,  0xF0,  0x0D,  NEXT\r\n+CEE_MONO_VTADDR,  \"mono_vtaddr\",  Pop1,  PushI,  InlineNone,  2,  0xF0,  0x03,  NEXT\r\n CEE_MUL,  \"mul\",  Pop1+Pop1,  Push1,  InlineNone,  1,  0xFF,  0x5A,  NEXT\r\n CEE_MUL_OVF,  \"mul.ovf\",  Pop1+Pop1,  Push1,  InlineNone,  1,  0xFF,  0xD8,  NEXT\r\n CEE_MUL_OVF_UN,  \"mul.ovf.un\",  Pop1+Pop1,  Push1,  InlineNone,  1,  0xFF,  0xD9,  NEXT\r\n@@ -167,6 +200,7 @@\r\n CEE_NEWOBJ,  \"newobj\",  VarPop,  PushRef,  InlineMethod,  1,  0xFF,  0x73,  CALL\r\n CEE_NOP,  \"nop\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0x00,  NEXT\r\n CEE_NOT,  \"not\",  Pop1,  Push1,  InlineNone,  1,  0xFF,  0x66,  NEXT\r\n+CEE_NO_,  \"no.\",  Pop0,  Push0,  ShortInlineI,  2,  0xFE,  0x19,  NEXT\r\n CEE_OR,  \"or\",  Pop1+Pop1,  Push1,  InlineNone,  1,  0xFF,  0x60,  NEXT\r\n CEE_POP,  \"pop\",  Pop1,  Push0,  InlineNone,  1,  0xFF,  0x26,  NEXT\r\n CEE_PREFIX1,  \"prefix1\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xFE,  META\r\n@@ -177,13 +211,13 @@\r\n CEE_PREFIX6,  \"prefix6\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF9,  META\r\n CEE_PREFIX7,  \"prefix7\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF8,  META\r\n CEE_PREFIXREF,  \"prefixref\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xFF,  META\r\n-CEE_READONLY,  \"readonly.\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x1E,  META\r\n+CEE_READONLY_,  \"readonly.\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x1E,  META\r\n CEE_REFANYTYPE,  \"refanytype\",  Pop1,  PushI,  InlineNone,  2,  0xFE,  0x1D,  NEXT\r\n CEE_REFANYVAL,  \"refanyval\",  Pop1,  PushI,  InlineType,  1,  0xFF,  0xC2,  NEXT\r\n CEE_REM,  \"rem\",  Pop1+Pop1,  Push1,  InlineNone,  1,  0xFF,  0x5D,  NEXT\r\n CEE_REM_UN,  \"rem.un\",  Pop1+Pop1,  Push1,  InlineNone,  1,  0xFF,  0x5E,  NEXT\r\n CEE_RET,  \"ret\",  VarPop,  Push0,  InlineNone,  1,  0xFF,  0x2A,  RETURN\r\n-CEE_RETHROW,  \"rethrow\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x1A,  THROW\r\n+CEE_RETHROW,  \"rethrow\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x1A,  ERROR\r\n CEE_SHL,  \"shl\",  Pop1+Pop1,  Push1,  InlineNone,  1,  0xFF,  0x62,  NEXT\r\n CEE_SHR,  \"shr\",  Pop1+Pop1,  Push1,  InlineNone,  1,  0xFF,  0x63,  NEXT\r\n CEE_SHR_UN,  \"shr.un\",  Pop1+Pop1,  Push1,  InlineNone,  1,  0xFF,  0x64,  NEXT\r\n@@ -220,75 +254,76 @@\r\n CEE_SUB_OVF,  \"sub.ovf\",  Pop1+Pop1,  Push1,  InlineNone,  1,  0xFF,  0xDA,  NEXT\r\n CEE_SUB_OVF_UN,  \"sub.ovf.un\",  Pop1+Pop1,  Push1,  InlineNone,  1,  0xFF,  0xDB,  NEXT\r\n CEE_SWITCH,  \"switch\",  PopI,  Push0,  InlineSwitch,  1,  0xFF,  0x45,  COND_BRANCH\r\n-CEE_TAILCALL,  \"tail.\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x14,  META\r\n-CEE_THROW,  \"throw\",  PopRef,  Push0,  InlineNone,  1,  0xFF,  0x7A,  THROW\r\n-CEE_UNALIGNED,  \"unaligned.\",  Pop0,  Push0,  ShortInlineI,  2,  0xFE,  0x12,  META\r\n+CEE_TAIL_,  \"tail.\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x14,  META\r\n+CEE_THROW,  \"throw\",  PopRef,  Push0,  InlineNone,  1,  0xFF,  0x7A,  ERROR\r\n+CEE_UNALIGNED_,  \"unaligned.\",  Pop0,  Push0,  ShortInlineI,  2,  0xFE,  0x12,  META\r\n CEE_UNBOX,  \"unbox\",  PopRef,  PushI,  InlineType,  1,  0xFF,  0x79,  NEXT\r\n CEE_UNBOX_ANY,  \"unbox.any\",  PopRef,  Push1,  InlineType,  1,  0xFF,  0xA5,  NEXT\r\n-CEE_UNUSED1,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0x78,  NEXT\r\n-CEE_UNUSED10,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xAB,  NEXT\r\n-CEE_UNUSED11,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xAC,  NEXT\r\n-CEE_UNUSED12,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xAD,  NEXT\r\n-CEE_UNUSED13,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xAE,  NEXT\r\n-CEE_UNUSED14,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xAF,  NEXT\r\n-CEE_UNUSED15,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xB0,  NEXT\r\n-CEE_UNUSED16,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xB1,  NEXT\r\n-CEE_UNUSED17,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xB2,  NEXT\r\n-CEE_UNUSED18,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xBC,  NEXT\r\n-CEE_UNUSED19,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xBD,  NEXT\r\n-CEE_UNUSED20,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xBE,  NEXT\r\n-CEE_UNUSED21,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xBF,  NEXT\r\n-CEE_UNUSED22,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC0,  NEXT\r\n-CEE_UNUSED23,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC1,  NEXT\r\n-CEE_UNUSED24,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC4,  NEXT\r\n-CEE_UNUSED25,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC5,  NEXT\r\n-CEE_UNUSED26,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE1,  NEXT\r\n-CEE_UNUSED27,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE2,  NEXT\r\n-CEE_UNUSED28,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE3,  NEXT\r\n-CEE_UNUSED29,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE4,  NEXT\r\n-CEE_UNUSED30,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE5,  NEXT\r\n-CEE_UNUSED31,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE6,  NEXT\r\n-CEE_UNUSED32,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE7,  NEXT\r\n-CEE_UNUSED33,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE8,  NEXT\r\n-CEE_UNUSED34,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE9,  NEXT\r\n-CEE_UNUSED35,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xEA,  NEXT\r\n-CEE_UNUSED36,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xEB,  NEXT\r\n-CEE_UNUSED37,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xEC,  NEXT\r\n-CEE_UNUSED38,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xED,  NEXT\r\n-CEE_UNUSED39,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xEE,  NEXT\r\n-CEE_UNUSED40,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xEF,  NEXT\r\n-CEE_UNUSED41,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF0,  NEXT\r\n-CEE_UNUSED42,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF1,  NEXT\r\n-CEE_UNUSED43,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF2,  NEXT\r\n-CEE_UNUSED44,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF3,  NEXT\r\n-CEE_UNUSED45,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF4,  NEXT\r\n-CEE_UNUSED46,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF5,  NEXT\r\n-CEE_UNUSED47,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF6,  NEXT\r\n-CEE_UNUSED48,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF7,  NEXT\r\n-CEE_UNUSED49,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0x24,  NEXT\r\n-CEE_UNUSED5,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xA6,  NEXT\r\n-CEE_UNUSED50,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xBB,  NEXT\r\n-CEE_UNUSED51,  \"unused\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x1B,  NEXT\r\n-CEE_UNUSED53,  \"unused\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x1F,  NEXT\r\n-CEE_UNUSED54,  \"unused\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x20,  NEXT\r\n-CEE_UNUSED55,  \"unused\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x21,  NEXT\r\n-CEE_UNUSED56,  \"unused\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x08,  NEXT\r\n-CEE_UNUSED57,  \"unused\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x10,  NEXT\r\n-CEE_UNUSED58,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0x77,  NEXT\r\n-CEE_UNUSED59,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC7,  NEXT\r\n-CEE_UNUSED6,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xA7,  NEXT\r\n-CEE_UNUSED60,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC8,  NEXT\r\n-CEE_UNUSED61,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC9,  NEXT\r\n-CEE_UNUSED62,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xCA,  NEXT\r\n-CEE_UNUSED63,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xCB,  NEXT\r\n-CEE_UNUSED64,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xCC,  NEXT\r\n-CEE_UNUSED65,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xCD,  NEXT\r\n-CEE_UNUSED66,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xCE,  NEXT\r\n-CEE_UNUSED67,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xCF,  NEXT\r\n-CEE_UNUSED69,  \"unused\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x19,  NEXT\r\n-CEE_UNUSED7,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xA8,  NEXT\r\n-CEE_UNUSED70,  \"unused\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x22,  NEXT\r\n-CEE_UNUSED8,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xA9,  NEXT\r\n-CEE_UNUSED9,  \"unused\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xAA,  NEXT\r\n-CEE_VOLATILE,  \"volatile.\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x13,  META\r\n+CEE_UNUSED,  \"unused\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x1B,  NEXT\r\n+CEE_UNUSED1,  \"unused1\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0x78,  NEXT\r\n+CEE_UNUSED10,  \"unused10\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xAB,  NEXT\r\n+CEE_UNUSED11,  \"unused11\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xAC,  NEXT\r\n+CEE_UNUSED12,  \"unused12\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xAD,  NEXT\r\n+CEE_UNUSED13,  \"unused13\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xAE,  NEXT\r\n+CEE_UNUSED14,  \"unused14\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xAF,  NEXT\r\n+CEE_UNUSED15,  \"unused15\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xB0,  NEXT\r\n+CEE_UNUSED16,  \"unused16\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xB1,  NEXT\r\n+CEE_UNUSED17,  \"unused17\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xB2,  NEXT\r\n+CEE_UNUSED18,  \"unused18\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xBC,  NEXT\r\n+CEE_UNUSED19,  \"unused19\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xBD,  NEXT\r\n+CEE_UNUSED20,  \"unused20\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xBE,  NEXT\r\n+CEE_UNUSED21,  \"unused21\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xBF,  NEXT\r\n+CEE_UNUSED22,  \"unused22\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC0,  NEXT\r\n+CEE_UNUSED23,  \"unused23\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC1,  NEXT\r\n+CEE_UNUSED24,  \"unused24\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC4,  NEXT\r\n+CEE_UNUSED25,  \"unused25\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC5,  NEXT\r\n+CEE_UNUSED26,  \"unused26\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE1,  NEXT\r\n+CEE_UNUSED27,  \"unused27\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE2,  NEXT\r\n+CEE_UNUSED28,  \"unused28\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE3,  NEXT\r\n+CEE_UNUSED29,  \"unused29\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE4,  NEXT\r\n+CEE_UNUSED30,  \"unused30\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE5,  NEXT\r\n+CEE_UNUSED31,  \"unused31\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE6,  NEXT\r\n+CEE_UNUSED32,  \"unused32\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE7,  NEXT\r\n+CEE_UNUSED33,  \"unused33\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE8,  NEXT\r\n+CEE_UNUSED34,  \"unused34\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xE9,  NEXT\r\n+CEE_UNUSED35,  \"unused35\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xEA,  NEXT\r\n+CEE_UNUSED36,  \"unused36\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xEB,  NEXT\r\n+CEE_UNUSED37,  \"unused37\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xEC,  NEXT\r\n+CEE_UNUSED38,  \"unused38\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xED,  NEXT\r\n+CEE_UNUSED39,  \"unused39\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xEE,  NEXT\r\n+CEE_UNUSED40,  \"unused40\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xEF,  NEXT\r\n+CEE_UNUSED41,  \"unused41\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF0,  NEXT\r\n+CEE_UNUSED42,  \"unused42\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF1,  NEXT\r\n+CEE_UNUSED43,  \"unused43\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF2,  NEXT\r\n+CEE_UNUSED44,  \"unused44\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF3,  NEXT\r\n+CEE_UNUSED45,  \"unused45\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF4,  NEXT\r\n+CEE_UNUSED46,  \"unused46\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF5,  NEXT\r\n+CEE_UNUSED47,  \"unused47\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF6,  NEXT\r\n+CEE_UNUSED48,  \"unused48\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xF7,  NEXT\r\n+CEE_UNUSED5,  \"unused5\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xA6,  NEXT\r\n+CEE_UNUSED50,  \"unused50\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xBB,  NEXT\r\n+CEE_UNUSED53,  \"unused53\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x1F,  NEXT\r\n+CEE_UNUSED54,  \"unused54\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x20,  NEXT\r\n+CEE_UNUSED55,  \"unused55\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x21,  NEXT\r\n+CEE_UNUSED56,  \"unused56\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x08,  NEXT\r\n+CEE_UNUSED57,  \"unused57\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x10,  NEXT\r\n+CEE_UNUSED58,  \"unused58\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0x77,  NEXT\r\n+CEE_UNUSED59,  \"unused59\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC7,  NEXT\r\n+CEE_UNUSED6,  \"unused6\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xA7,  NEXT\r\n+CEE_UNUSED60,  \"unused60\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC8,  NEXT\r\n+CEE_UNUSED61,  \"unused61\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xC9,  NEXT\r\n+CEE_UNUSED62,  \"unused62\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xCA,  NEXT\r\n+CEE_UNUSED63,  \"unused63\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xCB,  NEXT\r\n+CEE_UNUSED64,  \"unused64\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xCC,  NEXT\r\n+CEE_UNUSED65,  \"unused65\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xCD,  NEXT\r\n+CEE_UNUSED66,  \"unused66\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xCE,  NEXT\r\n+CEE_UNUSED67,  \"unused67\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xCF,  NEXT\r\n+CEE_UNUSED7,  \"unused7\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xA8,  NEXT\r\n+CEE_UNUSED70,  \"unused70\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x22,  NEXT\r\n+CEE_UNUSED71,  \"unused71\",  Pop0,  Push0,  InlineNone,  2,  0xF0,  0x11,  NEXT\r\n+CEE_UNUSED72,  \"unused72\",  Pop0,  Push0,  InlineNone,  2,  0xF0,  0x12,  NEXT\r\n+CEE_UNUSED8,  \"unused8\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xA9,  NEXT\r\n+CEE_UNUSED9,  \"unused9\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0xAA,  NEXT\r\n+CEE_UNUSED99,  \"unused99\",  Pop0,  Push0,  InlineNone,  1,  0xFF,  0x24,  NEXT\r\n+CEE_VOLATILE_,  \"volatile.\",  Pop0,  Push0,  InlineNone,  2,  0xFE,  0x13,  META\r\n CEE_XOR,  \"xor\",  Pop1+Pop1,  Push1,  InlineNone,  1,  0xFF,  0x61,  NEXT\r\n```\r\n\u003c/details\u003e\r\n\r\nThese CSV files was generated by ignoring \"Type\" column in opcode.def files (because in coreclr, type or kind column has type names (e.g. `IPrimitive`) and mono has numeric values).\r\n\r\nCan these be unified such that it doesn\u0027t produce any diff?\r\n\r\nIf so, we can move `src/coreclr/inc/opcode.def` to minipal and share it with coreclr and mono for native component build. That will also make it possible to convert Perl-based source generator for *.cs files to a Roslyn-based source generator and remove dependency on Perl, XSLT and Perl modules (XML::Parser used in mono one) from this process.\r\n\r\nOverall, there are a few (eight) perl scripts left, this will remove two from the repo.\r\n\r\ncc @jkotas, @jkoritzinsky, @lambdageek\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eam11\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-02-10T23:33:21Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "Unify opcode generators",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/65422",
        "createdAt":  "2022-02-16T04:18:02Z",
        "number":  65422,
        "author":  "elinor-fung",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCQGXGA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "safern",
                                            "createdAt":  "2022-02-16T18:49:15Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "danmoseley",
                                            "createdAt":  "2022-02-23T22:20:40Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2025-08-25T16:11:59Z",
        "body":  "System dumps on macOS are large - uploading them has been taking down helix queues. Using the runtime\u0027s coredump features should allow for configuration such that we can get smaller and still useful dumps.\r\n\r\nSince createdump is part of the test/payload, I *think* we should just be able to update the libraries runner template to set the [dump configuration environment variables](https://github.com/dotnet/runtime/blob/57bfe474518ab5b7cfe6bf7424a79ce3af9d6657/docs/design/coreclr/botr/xplat-minidump-generation.md#configurationpolicy) for `DbgEnableMiniDump`, `DbgMiniDumpName`, and `DbgMiniDumpType` (cc @mikem8361 @hoyosjs) instead of using ulimit:\r\nhttps://github.com/dotnet/runtime/blob/8cd701ae165be73a91ec907e9522819c50d4f0ba/eng/testing/RunnerTemplate.sh#L130-L136\r\n\r\nSee also:\r\nhttps://github.com/dotnet/runtime/pull/65405#discussion_r807507914\r\nhttps://github.com/dotnet/core-eng/issues/15333\r\n\r\ncc @danmoseley ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOahnxgg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc4-Db49",
                                           "createdAt":  "2022-02-16T04:18:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2022-02-16T04:18:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4-Db8C",
                                           "createdAt":  "2022-02-16T04:18:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nSystem dumps on macOS are large - uploading them has been taking down helix queues. Using the runtime\u0027s coredump features should allow for configuration such that we can get smaller and still useful dumps.\r\n\r\nI *think* we should just be able to update the libraries runner template to set the [dump configuration environment variables](https://github.com/dotnet/runtime/blob/57bfe474518ab5b7cfe6bf7424a79ce3af9d6657/docs/design/coreclr/botr/xplat-minidump-generation.md#configurationpolicy) for `DbgEnableMiniDump`, `DbgMiniDumpName`, and `DbgMiniDumpType` instead of using ulimit:\r\nhttps://github.com/dotnet/runtime/blob/8cd701ae165be73a91ec907e9522819c50d4f0ba/eng/testing/RunnerTemplate.sh#L130-L136\r\n\r\nSee also:\r\nhttps://github.com/dotnet/runtime/pull/65405#discussion_r807507914\r\nhttps://github.com/dotnet/core-eng/issues/15333\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eelinor-fung\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-02-16T04:18:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4-SEKN",
                                           "createdAt":  "2022-02-18T17:55:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mikem8361",
                                           "body":  "I recommend setting the following env vars:\r\n```\r\nexport COMPlus_DbgEnableMiniDump=1\r\nexport COMPlus_DbgMiniDumpName=/path/to/coredump.%p\r\nexport COMPlus_DbgMiniDumpType=2\r\n```\r\nThis enables a heap dump which has everything needed to diagnose most managed and native problems. The path can also contain these special name formatting chars:\r\n\r\n```\r\n%p  PID of dumped process.\r\n%e  The process executable filename.\r\n%h  Hostname return by gethostname().\r\n%t  Time of dump, expressed as seconds since the Epoch, 1970-01-01 00:00:00 +0000 (UTC).\r\n```",
                                           "updatedAt":  "2022-02-18T17:55:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4-SeEd",
                                           "createdAt":  "2022-02-18T19:04:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "Type 2 was still somewhat big when we looked at it. It\u0027s the best fidelity, but it definitely can get big and we need to improve the doc on debugging coredumps that we include. ",
                                           "updatedAt":  "2022-02-18T19:04:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4-SlDj",
                                           "createdAt":  "2022-02-18T19:25:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mikem8361",
                                           "body":  "They are not going to be as big as a full or system dump (especially on MacOS). The other choices are that great. The \"normal\" and \"triage\" dump types only have enough for triaging a problem: only the \"pe\", \"clrstack\" and \"clrthreads\" commands will work for managed code.  There should be enough for native stacks and threads though.\n",
                                           "updatedAt":  "2022-02-18T19:25:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4-WWbm",
                                           "createdAt":  "2022-02-19T15:46:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "We often need full dumps to investigate crashes that only happen intermittently in the CI.\r\n\r\nShould the problem be rather solved by throttling the dump uploads? If a PR generates many dumps or if many PRs generate same dump, skip uploading them. \r\n\r\nThe system should be designed to handle and gracefully recover from situations when we suddenly end up with large volume of crash dumps. There are many ways we can end up in a situation like that. It may be even worth it to create a weekly chaos monkey job that tries to flood the system with many big dumps to validate that it is not killing the system.",
                                           "updatedAt":  "2022-02-19T15:46:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4-WdwI",
                                           "createdAt":  "2022-02-19T18:18:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "\u003e We often need full dumps to investigate crashes that only happen intermittently in the CI.\n\u003e \n\u003e Should the problem be rather solved by throttling the dump uploads? If a PR generates many dumps or if many PRs generate same dump, skip uploading them. \n\nThat change is upcoming. They are capping it in 2 ways. Upload time capped, and total dump size capped to 6 gb. They have the telemetry to say in helix 6 gb is what\u0027s safely uploadable while still being able to do the work and report results without timing out. There\u0027s two issues still there. The first one is the disk can still get full if many tests in a work item crash. A more concerning one is 6 gb is big, but not crazy for a macOS system dump. CreateDump is a little better here, but often still too big, mini with private memory seems like what we want from a diagnosibility perspective. I just don\u0027t know yet if that is going to cap us. I guess the best to do here is run a few experiments.\n\n",
                                           "updatedAt":  "2022-02-19T18:18:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4-ipPS",
                                           "createdAt":  "2022-02-23T22:18:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nSystem dumps on macOS are large - uploading them has been taking down helix queues. Using the runtime\u0027s coredump features should allow for configuration such that we can get smaller and still useful dumps.\r\n\r\nSince createdump is part of the test/payload, I *think* we should just be able to update the libraries runner template to set the [dump configuration environment variables](https://github.com/dotnet/runtime/blob/57bfe474518ab5b7cfe6bf7424a79ce3af9d6657/docs/design/coreclr/botr/xplat-minidump-generation.md#configurationpolicy) for `DbgEnableMiniDump`, `DbgMiniDumpName`, and `DbgMiniDumpType` (cc @mikem8361 @hoyosjs) instead of using ulimit:\r\nhttps://github.com/dotnet/runtime/blob/8cd701ae165be73a91ec907e9522819c50d4f0ba/eng/testing/RunnerTemplate.sh#L130-L136\r\n\r\nSee also:\r\nhttps://github.com/dotnet/runtime/pull/65405#discussion_r807507914\r\nhttps://github.com/dotnet/core-eng/issues/15333\r\n\r\ncc @danmoseley \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eelinor-fung\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e7.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-02-23T22:18:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Gsglv",
                                           "createdAt":  "2022-07-16T02:45:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nSystem dumps on macOS are large - uploading them has been taking down helix queues. Using the runtime\u0027s coredump features should allow for configuration such that we can get smaller and still useful dumps.\r\n\r\nSince createdump is part of the test/payload, I *think* we should just be able to update the libraries runner template to set the [dump configuration environment variables](https://github.com/dotnet/runtime/blob/57bfe474518ab5b7cfe6bf7424a79ce3af9d6657/docs/design/coreclr/botr/xplat-minidump-generation.md#configurationpolicy) for `DbgEnableMiniDump`, `DbgMiniDumpName`, and `DbgMiniDumpType` (cc @mikem8361 @hoyosjs) instead of using ulimit:\r\nhttps://github.com/dotnet/runtime/blob/8cd701ae165be73a91ec907e9522819c50d4f0ba/eng/testing/RunnerTemplate.sh#L130-L136\r\n\r\nSee also:\r\nhttps://github.com/dotnet/runtime/pull/65405#discussion_r807507914\r\nhttps://github.com/dotnet/core-eng/issues/15333\r\n\r\ncc @danmoseley \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eelinor-fung\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003ehoyosjs\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e7.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-07-16T02:45:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ohhQv",
                                           "createdAt":  "2023-10-09T19:43:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "@hoyosjs would it make since to try to do this with the libraries crash symbolization effort?   What\u0027s involved?",
                                           "updatedAt":  "2023-10-09T19:43:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ojpZS",
                                           "createdAt":  "2023-10-10T01:43:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "For crashes of libraries? It would be setting https://github.com/dotnet/runtime/issues/65422#issuecomment-1044923021 these variables if not present in the wrapper such that they store the dumps in the folder that helix uploads. You can then symbolize all different dumps. For macOS, Jeremy is already staging work for it https://github.com/dotnet/runtime/pull/92967/files",
                                           "updatedAt":  "2023-10-10T01:43:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5qGfGC",
                                           "createdAt":  "2023-10-25T21:31:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "I meant - are you planning on re-enabling dumps for the places it was disabled? Perhaps by adding these settings.  In cases where it still might be too expensive to pull the dumps off the machine maybe @ivdiazsa\u0027s tool might be used to just dump the relevant info to the log.",
                                           "updatedAt":  "2023-10-25T21:31:35Z"
                                       }
                                   ],
                         "totalCount":  12
                     },
        "title":  "Use createdump to collect crash dumps where possible in runtime",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/65933",
        "createdAt":  "2022-02-27T20:22:05Z",
        "number":  65933,
        "author":  "jeffhandley",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCQl8HA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ViktorHofer",
                                            "createdAt":  "2022-02-28T07:13:18Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2022-08-10T23:50:49Z",
        "body":  "[Cleanup Issue-URLs in Code · Issue #63902 · dotnet/runtime](https://github.com/dotnet/runtime/issues/63902) identified a workaround in place and it seems the backing issue has been resolved but the workaround remains.\r\n\r\n- The original issue was: [Bad IBC data causing official build failures · Issue #33303 · dotnet/runtime](https://github.com/dotnet/runtime/issues/33303)\r\n- The PR that applied the workaround was: [Disable IBC on OSX by jkoritzinsky · Pull Request #43839 · dotnet/runtime](https://github.com/dotnet/runtime/pull/43839)\r\n\r\nhttps://github.com/dotnet/runtime/blob/b37f10a504f20faef2558b6d79180411ad0603c3/eng/codeOptimization.targets#L7-L12\r\n\r\nThe workaround should be evaluated to determine if it\u0027s still necessary. With the findings, we should either update the code to remove the workaround, or the code comment to reference an open issue for tracking when we can remove the workaround.\r\n\r\n/cc @deeprobin",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSDS3uw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc4-zbYO",
                                           "createdAt":  "2022-02-27T20:22:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n[Cleanup Issue-URLs in Code · Issue #63902 · dotnet/runtime](https://github.com/dotnet/runtime/issues/63902) identified a workaround in place and it seems the backing issue has been resolved but the workaround remains.\r\n\r\n- The original issue was: [Bad IBC data causing official build failures · Issue #33303 · dotnet/runtime](https://github.com/dotnet/runtime/issues/33303)\r\n- The PR that applied the workaround was: [Disable IBC on OSX by jkoritzinsky · Pull Request #43839 · dotnet/runtime](https://github.com/dotnet/runtime/pull/43839)\r\n\r\nhttps://github.com/dotnet/runtime/blob/b37f10a504f20faef2558b6d79180411ad0603c3/eng/codeOptimization.targets#L7-L12\r\n\r\nThe workaround should be evaluated to determine if it\u0027s still necessary. With the findings, we should either update the code to remove the workaround, or the code comment to reference an open issue for tracking when we can remove the workaround.\r\n\r\n/cc @deeprobin\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ejeffhandley\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`os-mac-os-x`, `area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-02-27T20:22:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GYGuW",
                                           "createdAt":  "2022-07-11T18:22:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@jeffhandley do you know if we want to re-enable this for 7.0 or who would be a good person to talk to?",
                                           "updatedAt":  "2022-07-11T18:22:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HR3Jz",
                                           "createdAt":  "2022-07-26T18:57:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "agocke",
                                           "body":  "@jkoritzinsky It looks like you did the initial disable. Could you try re-enabling? We should now have automated IBC flow, so hopefully this will no longer be a problem.",
                                           "updatedAt":  "2022-07-26T18:57:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HXu8k",
                                           "createdAt":  "2022-07-27T21:47:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "So the issue was that we were trying to apply Linux IBC data to the macOS build of CoreLib and other assemblies. Do we have MIBC data now for the macOS builds so that we apply the correct info?",
                                           "updatedAt":  "2022-07-27T21:47:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5INLe7",
                                           "createdAt":  "2022-08-10T23:50:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "There\u0027s no IBC packages with an OSX rid, I\u0027ll move this.",
                                           "updatedAt":  "2022-08-10T23:50:44Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Review workaround for bad IBC data causing official build failures on macOS",
        "labels":  [
                       "os-mac-os-x",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/65976",
        "createdAt":  "2022-02-28T21:38:19Z",
        "number":  65976,
        "author":  "thaystg",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-11T19:15:05Z",
        "body":  "```\r\n2022-02-28T20:29:51.9363822Z   Time Elapsed 00:00:07.59\r\n2022-02-28T20:29:52.1615332Z   Segmentation fault (core dumped)\r\n2022-02-28T20:29:52.1677546Z /__w/1/s/eng/testing/workloads-testing.targets(96,5): error MSB3073: The command \"dotnet build -bl -restore -t:Pack -p:TestingWorkloads=true -p:Configuration=Release -p:TargetOS=Browser -p:TargetArchitecture=wasm -p:ContinuousIntegrationBuild=true -p:RuntimeIdentifier=linux-x64 -p:TargetCrossRid=browser-wasm Microsoft.NETCore.App.MonoCrossAOT.sfxproj\" exited with code 139. [/__w/1/s/src/tests/BuildWasmApps/Wasm.Build.Tests/Wasm.Build.Tests.csproj]\r\n2022-02-28T20:29:52.1794362Z ##[error]eng/testing/workloads-testing.targets(96,5): error MSB3073: (NETCORE_ENGINEERING_TELEMETRY=Build) The command \"dotnet build -bl -restore -t:Pack -p:TestingWorkloads=true -p:Configuration=Release -p:TargetOS=Browser -p:TargetArchitecture=wasm -p:ContinuousIntegrationBuild=true -p:RuntimeIdentifier=linux-x64 -p:TargetCrossRid=browser-wasm Microsoft.NETCore.App.MonoCrossAOT.sfxproj\" exited with code 139.\r\n2022-02-28T20:29:52.3922158Z \r\n2022-02-28T20:29:52.3930120Z Build FAILED.\r\n```\r\n\r\nThe logs:\r\nhttps://dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_apis/build/builds/1636503/logs/754\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=1636503\u0026view=logs\u0026j=6f051c1a-c3e7-5cde-411e-64125624a208",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOPt-Kbg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc4-3Umt",
                                           "createdAt":  "2022-02-28T21:38:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2022-02-28T21:38:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4-3UpK",
                                           "createdAt":  "2022-02-28T21:38:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @vitek-karas, @agocke, @vsadov\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n```\r\n2022-02-28T20:29:51.9363822Z   Time Elapsed 00:00:07.59\r\n2022-02-28T20:29:52.1615332Z   Segmentation fault (core dumped)\r\n2022-02-28T20:29:52.1677546Z /__w/1/s/eng/testing/workloads-testing.targets(96,5): error MSB3073: The command \"dotnet build -bl -restore -t:Pack -p:TestingWorkloads=true -p:Configuration=Release -p:TargetOS=Browser -p:TargetArchitecture=wasm -p:ContinuousIntegrationBuild=true -p:RuntimeIdentifier=linux-x64 -p:TargetCrossRid=browser-wasm Microsoft.NETCore.App.MonoCrossAOT.sfxproj\" exited with code 139. [/__w/1/s/src/tests/BuildWasmApps/Wasm.Build.Tests/Wasm.Build.Tests.csproj]\r\n2022-02-28T20:29:52.1794362Z ##[error]eng/testing/workloads-testing.targets(96,5): error MSB3073: (NETCORE_ENGINEERING_TELEMETRY=Build) The command \"dotnet build -bl -restore -t:Pack -p:TestingWorkloads=true -p:Configuration=Release -p:TargetOS=Browser -p:TargetArchitecture=wasm -p:ContinuousIntegrationBuild=true -p:RuntimeIdentifier=linux-x64 -p:TargetCrossRid=browser-wasm Microsoft.NETCore.App.MonoCrossAOT.sfxproj\" exited with code 139.\r\n2022-02-28T20:29:52.3922158Z \r\n2022-02-28T20:29:52.3930120Z Build FAILED.\r\n```\r\n\r\nThe logs:\r\nhttps://dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_apis/build/builds/1636503/logs/754\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=1636503\u0026view=logs\u0026j=6f051c1a-c3e7-5cde-411e-64125624a208\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ethaystg\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Host`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-02-28T21:38:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4-34S0",
                                           "createdAt":  "2022-03-01T00:08:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n```\r\n2022-02-28T20:29:51.9363822Z   Time Elapsed 00:00:07.59\r\n2022-02-28T20:29:52.1615332Z   Segmentation fault (core dumped)\r\n2022-02-28T20:29:52.1677546Z /__w/1/s/eng/testing/workloads-testing.targets(96,5): error MSB3073: The command \"dotnet build -bl -restore -t:Pack -p:TestingWorkloads=true -p:Configuration=Release -p:TargetOS=Browser -p:TargetArchitecture=wasm -p:ContinuousIntegrationBuild=true -p:RuntimeIdentifier=linux-x64 -p:TargetCrossRid=browser-wasm Microsoft.NETCore.App.MonoCrossAOT.sfxproj\" exited with code 139. [/__w/1/s/src/tests/BuildWasmApps/Wasm.Build.Tests/Wasm.Build.Tests.csproj]\r\n2022-02-28T20:29:52.1794362Z ##[error]eng/testing/workloads-testing.targets(96,5): error MSB3073: (NETCORE_ENGINEERING_TELEMETRY=Build) The command \"dotnet build -bl -restore -t:Pack -p:TestingWorkloads=true -p:Configuration=Release -p:TargetOS=Browser -p:TargetArchitecture=wasm -p:ContinuousIntegrationBuild=true -p:RuntimeIdentifier=linux-x64 -p:TargetCrossRid=browser-wasm Microsoft.NETCore.App.MonoCrossAOT.sfxproj\" exited with code 139.\r\n2022-02-28T20:29:52.3922158Z \r\n2022-02-28T20:29:52.3930120Z Build FAILED.\r\n```\r\n\r\nThe logs:\r\nhttps://dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_apis/build/builds/1636503/logs/754\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=1636503\u0026view=logs\u0026j=6f051c1a-c3e7-5cde-411e-64125624a208\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ethaystg\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-03-01T00:08:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4-34pu",
                                           "createdAt":  "2022-03-01T00:10:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "The eng. infrastructure has to collect and upload coredumps for crashes like this to make them actionable.\r\n\r\nIt is unlikely that this crash has anything to do with host.",
                                           "updatedAt":  "2022-03-01T00:10:36Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Segmentation fault while running \"dotnet build\"",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/66032",
        "createdAt":  "2022-03-01T21:51:22Z",
        "number":  66032,
        "author":  "mdh1418",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-11-25T11:42:19Z",
        "body":  "Libraries Test Run release coreclr Linux arm Release\r\n```\r\nstderr: \r\ngzip: stdin: invalid compressed data--format violated\r\n/bin/tar: Unexpected EOF in archive\r\n/bin/tar: Unexpected EOF in archive\r\n/bin/tar: Error is not recoverable: exiting now\r\n \r\nerror: undefined;\r\n##[error]Extraction failed for file: /mnt/vss/_work/1/s/__download__/libraries_test_assets_Linux_arm_Release/libraries_test_assets_Linux_arm_Release.tar.gz \r\n```\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=1636124\u0026view=logs\u0026j=3af70de0-9753-58b8-b476-56d8238660f2\u0026t=ebc957cc-2054-5b9c-76a0-1c61cc6bbc2e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOTx4Lxg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc4-76-K",
                                           "createdAt":  "2022-03-01T21:51:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2022-03-01T21:51:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_A6UR",
                                           "createdAt":  "2022-03-02T17:44:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nLibraries Test Run release coreclr Linux arm Release\r\n```\r\nstderr: \r\ngzip: stdin: invalid compressed data--format violated\r\n/bin/tar: Unexpected EOF in archive\r\n/bin/tar: Unexpected EOF in archive\r\n/bin/tar: Error is not recoverable: exiting now\r\n \r\nerror: undefined;\r\n##[error]Extraction failed for file: /mnt/vss/_work/1/s/__download__/libraries_test_assets_Linux_arm_Release/libraries_test_assets_Linux_arm_Release.tar.gz \r\n```\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=1636124\u0026view=logs\u0026j=3af70de0-9753-58b8-b476-56d8238660f2\u0026t=ebc957cc-2054-5b9c-76a0-1c61cc6bbc2e\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003emdh1418\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-03-02T17:44:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_BZ_j",
                                           "createdAt":  "2022-03-02T20:09:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "carlossanlop",
                                           "body":  "How often does this happen? Do you know where the code is that calls the `tar` tool? I\u0027d like to see the arguments we are passing to it.",
                                           "updatedAt":  "2022-03-02T20:09:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4_B574",
                                           "createdAt":  "2022-03-02T22:37:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mdh1418",
                                           "body":  "I saw this happen twice on a seemingly unrelated PR (successive attempts). I don\u0027t know where the code is, but I can try to look what that step in the lane is doing. ",
                                           "updatedAt":  "2022-03-02T22:37:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CvKj0",
                                           "createdAt":  "2022-05-06T14:05:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Sounds like an AzDO issue which isn\u0027t actionable on our side. If this is still happening, please talk with core-eng to understand how to reach out to their team to get an IcM ticket opened.",
                                           "updatedAt":  "2022-05-06T14:05:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CvKl_",
                                           "createdAt":  "2022-05-06T14:05:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "This issue has been marked `needs-author-action` and may be missing some important information.",
                                           "updatedAt":  "2022-05-06T14:05:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5DiGRo",
                                           "createdAt":  "2022-05-20T15:01:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "This issue has been automatically marked `no-recent-activity` because it has not had any activity for 14 days. It will be closed if no further activity occurs within 14 more days. Any new comment (by anyone, not necessarily the author) will remove `no-recent-activity`.",
                                           "updatedAt":  "2022-05-20T15:01:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Dk5yf",
                                           "createdAt":  "2022-05-21T18:23:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AaronRobinsonMSFT",
                                           "body":  "Perhaps another instance of AzDO issue: https://dev.azure.com/dnceng/public/_build/results?buildId=1783143\u0026view=logs\u0026jobId=2662b7d9-28ff-5dca-b58f-3053d0bc5578\u0026j=2662b7d9-28ff-5dca-b58f-3053d0bc5578\u0026t=4d4a5b9c-0a42-5d4d-71ab-d0e293a111d8\r\n\r\nThis is on Windows x64\r\n\r\n```\r\nERROR: D:\\a\\_work\\1\\s\\__download__\\CoreCLRProduct___windows_x64_checked\\CoreCLRProduct___windows_x64_checked.zip\r\nCan not open the file as archive\r\n\r\n\r\n7-Zip 19.00 (x64) : Copyright (c) 1999-2018 Igor Pavlov : 2019-02-21\r\nError: Extraction failed for file: D:\\a\\_work\\1\\s\\__download__\\CoreCLRProduct___windows_x64_checked\\CoreCLRProduct___windows_x64_checked.zip \r\n\r\ncode: 2 \r\nScanning the drive for archives:\r\nstdout: \r\n1 file, 0 bytes\r\n\r\n7-Zip 19.00 (x64) : Copyright (c) 1999-2018 Igor Pavlov : 2019-02-21\r\nExtracting archive: D:\\a\\_work\\1\\s\\__download__\\CoreCLRProduct___windows_x64_checked\\CoreCLRProduct___windows_x64_checked.zip\r\n\r\nCan\u0027t open as archive: 1\r\nFiles: 0\r\nSize:       0\r\nCompressed: 0\r\n##[error]Extraction failed for file: D:\\a\\_work\\1\\s\\__download__\\CoreCLRProduct___windows_x64_checked\\CoreCLRProduct___windows_x64_checked.zip \r\ncode: 2 \r\nstdout: \r\n7-Zip 19.00 (x64) : Copyright (c) 1999-2018 Igor Pavlov : 2019-02-21\r\n\r\nScanning the drive for archives:\r\n1 file, 0 bytes\r\n```",
                                           "updatedAt":  "2022-05-21T18:23:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5DpKl3",
                                           "createdAt":  "2022-05-23T16:05:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@MattGal @dotnet/dnceng are you aware of this issue? Need to gather some data on how often this is happening.",
                                           "updatedAt":  "2022-05-23T16:05:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5DpOkf",
                                           "createdAt":  "2022-05-23T16:21:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MattGal",
                                           "body":  "\u003e @MattGal @dotnet/dnceng are you aware of this issue? Need to gather some data on how often this is happening.\r\n\r\nFirst I\u0027ve seen this (recently). From the symptoms, it\u0027s either a partial artifact download or a malformed archive which should be detect-able from downloading the same artifact locally and unzipping via 7-zip.  \r\n",
                                           "updatedAt":  "2022-05-23T16:21:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5DpPMr",
                                           "createdAt":  "2022-05-23T16:23:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MattGal",
                                           "body":  "Yup it\u0027s what I guessed:\r\n\r\nFrom the logs: \r\n```\r\nDownloaded  to D:\\a\\_work\\1\\s\\__download__\\CoreCLRProduct___windows_x64_checked.zip\r\nTotal Files: 1, Processed: 1, Skipped: 0, Failed: 0, Download time: 32.249 secs, Download size: 402Bytes\r\nStarting artifact items integrity check\r\nArtifact items integrity check successfully finished\r\nSuccessfully downloaded artifacts to D:\\a\\_work\\1\\s\\__download__\r\n```\r\nNote this file is 301 MB, not 402 bytes.  There\u0027s a bug with the download task here.  @ilyas1974 FYI.",
                                           "updatedAt":  "2022-05-23T16:23:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5DpRaq",
                                           "createdAt":  "2022-05-23T16:32:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MattGal",
                                           "body":  "After checking timestamps and convincing myself the artifact was finished uploading many minutes before the download occurred, I filed https://portal.microsofticm.com/imp/v3/incidents/details/309716763/home to ask Azure DevOps to investigate.  Note from the logging (`Artifact items integrity check successfully finished`) this isn\u0027t the first time we\u0027ve asked them to do better here. ",
                                           "updatedAt":  "2022-05-23T16:32:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Dp1cX",
                                           "createdAt":  "2022-05-23T19:08:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Thanks for opening the IcM.",
                                           "updatedAt":  "2022-05-23T19:08:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5DqnoI",
                                           "createdAt":  "2022-05-23T23:44:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCeUQKQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2022-05-24T08:39:25Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "MattGal",
                                           "body":  "@ViktorHofer I synched with an engineer from the Azure DevOps team who is investigating the IcM linked above.  He suggests that updating the task version used to latest might buy you some validation checking (it\u0027s cheap to try, at least)\r\nAs seen in places like \r\nhttps://github.com/dotnet/runtime/blob/main/eng/pipelines/common/download-artifact-step.yml#L10-L17\r\nhttps://github.com/dotnet/runtime/blob/main/eng/pipelines/common/download-specific-artifact-step.yml#L10-L21,\r\nit should literally boil down \"change to `DownloadBuildArtifacts@0` --\u003e `DownloadBuildArtifacts@1` and verify\"\r\n",
                                           "updatedAt":  "2022-05-23T23:44:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5PHdPH",
                                           "createdAt":  "2022-11-25T11:21:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nLibraries Test Run release coreclr Linux arm Release\r\n```\r\nstderr: \r\ngzip: stdin: invalid compressed data--format violated\r\n/bin/tar: Unexpected EOF in archive\r\n/bin/tar: Unexpected EOF in archive\r\n/bin/tar: Error is not recoverable: exiting now\r\n \r\nerror: undefined;\r\n##[error]Extraction failed for file: /mnt/vss/_work/1/s/__download__/libraries_test_assets_Linux_arm_Release/libraries_test_assets_Linux_arm_Release.tar.gz \r\n```\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=1636124\u0026view=logs\u0026j=3af70de0-9753-58b8-b476-56d8238660f2\u0026t=ebc957cc-2054-5b9c-76a0-1c61cc6bbc2e\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003emdh1418\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`tracking-external-issue`, `area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003eFuture\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-11-25T11:21:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5PHdWW",
                                           "createdAt":  "2022-11-25T11:21:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e He suggests that updating the task version used to latest might buy you some validation checking (it\u0027s cheap to try, at least)\r\nAs seen in places like\r\n\r\n@dotnet/runtime-infrastructure we might want to do that as we are still on version \"@0\".",
                                           "updatedAt":  "2022-11-25T11:21:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5PHgTb",
                                           "createdAt":  "2022-11-25T11:36:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "~~So I looked at the sources and from what I can tell the v1 and v0 tasks are identical (I think that happened in https://github.com/microsoft/azure-pipelines-tasks/commit/714ebff7214fa4c47e43d1667321ab49c33518bb)~~ looks like that commit was reverted.\r\n\r\nThere is an option on the task called `checkDownloadedFiles` that we could enable, though that seems to also only fail the task if the validation failed.",
                                           "updatedAt":  "2022-11-25T11:42:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5PHgvG",
                                           "createdAt":  "2022-11-25T11:38:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "Maybe updating to `DownloadPipelineArtifact@2` would help, it is recommended by the docs: https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/download-build-artifacts?view=azure-devops",
                                           "updatedAt":  "2022-11-25T11:39:16Z"
                                       }
                                   ],
                         "totalCount":  18
                     },
        "title":  "Unable to Unzip Test Assets -- gzip: stdin: invalid compressed data--format violated",
        "labels":  [
                       "tracking-external-issue",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/69329",
        "createdAt":  "2022-05-13T20:19:26Z",
        "number":  69329,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC_vh5w==",
                          "nodes":  [
                                        {
                                            "content":  "HOORAY",
                                            "user":  "tannergooding",
                                            "createdAt":  "2022-05-13T20:26:23Z"
                                        },
                                        {
                                            "content":  "HOORAY",
                                            "user":  "raulsntos",
                                            "createdAt":  "2025-03-05T19:00:46Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2024-09-10T09:11:19Z",
        "body":  "Related https://github.com/dotnet/arcade/issues/9153\r\nFeature: https://devblogs.microsoft.com/nuget/introducing-central-package-management/\r\n\r\ncc @tannergooding ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOQyP_dw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5DI_93",
                                           "createdAt":  "2022-05-13T20:19:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nRelated https://github.com/dotnet/arcade/issues/9153\r\nFeature: https://devblogs.microsoft.com/nuget/introducing-central-package-management/\r\n\r\nAssigning to myself as I\u0027ll be working on this, but not as a high-prio.\r\n\r\ncc @tannergooding \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-05-13T20:19:37Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Use NuGet Central Package Management in dotnet/runtime",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/72562",
        "createdAt":  "2022-07-20T23:55:22Z",
        "number":  72562,
        "author":  "ThadHouse",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCn4KhA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jkoritzinsky",
                                            "createdAt":  "2022-07-21T15:02:42Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2022-07-21T14:35:46Z",
        "body":  "There are still some platforms that run soft-float linux. One of the big ones are National Instruments Xilinx Zynq based platforms. This platform is used by the High School Robotics Competition I help maintain the software stack for. Currently it runs C++ and Java, but for years there has been interest in running C# as well. I\u0027ve been working on this off and on for a while now at https://github.com/robotdotnet. One of the biggest issues is I currently use Mono, because the effort to maintain a working build of .NET core for armel is pretty high. It likes to break a lot because many devs like to hardcode arm checks to just the linux-arm RID, which breaks when attempting to build armel. I have done it in the past however, and it does build and run just fine if I fix the issue. So if we could get CI and hopefully a release build of linux-armel, that would be super helpful, and would make the possibility of that project much more feasible to support long term.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHORwXRzA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5G-3PA",
                                           "createdAt":  "2022-07-20T23:55:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2022-07-20T23:55:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5G_7ev",
                                           "createdAt":  "2022-07-21T07:53:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThere are still some platforms that run soft-float linux. One of the big ones are National Instruments Xilinx Zynq based platforms. This platform is used by the High School Robotics Competition I help maintain the software stack for. Currently it runs C++ and Java, but for years there has been interest in running C# as well. I\u0027ve been working on this off and on for a while now at https://github.com/robotdotnet. One of the biggest issues is I currently use Mono, because the effort to maintain a working build of .NET core for armel is pretty high. It likes to break a lot because many devs like to hardcode arm checks to just the linux-arm RID, which breaks when attempting to build armel. I have done it in the past however, and it does build and run just fine if I fix the issue. So if we could get CI and hopefully a release build of linux-armel, that would be super helpful, and would make the possibility of that project much more feasible to support long term.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eThadHouse\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-07-21T07:53:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HAF9D",
                                           "createdAt":  "2022-07-21T08:37:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "cc @jkotas ",
                                           "updatedAt":  "2022-07-21T08:37:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HBWU4",
                                           "createdAt":  "2022-07-21T14:11:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "Are you interested in CoreCLR VM or Mono VM for this? \r\n\r\nWe have CI build for CoreCLR armel for Tizen: https://github.com/dotnet/runtime/search?q=Tizen_armel ",
                                           "updatedAt":  "2022-07-21T14:11:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HBaZo",
                                           "createdAt":  "2022-07-21T14:26:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ThadHouse",
                                           "body":  "CoreCLR. The Tizen one doesn\u0027t fully work, its got some weird dependencies that are difficult to satisfy on normal linux systems.",
                                           "updatedAt":  "2022-07-21T14:26:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HBdHM",
                                           "createdAt":  "2022-07-21T14:35:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "I would expect the Tizen armel build to catch most of the armel specific breaks.\r\n\r\nThe first step for this would be for you to submit a PR that makes the armel build work the way you need. We can then discuss the next steps.",
                                           "updatedAt":  "2022-07-21T14:35:26Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "Add CI and release build for linux-armel",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/73166",
        "createdAt":  "2022-08-01T17:22:32Z",
        "number":  73166,
        "author":  "tarekgh",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-08-22T15:42:15Z",
        "body":  "Here is example of that https://dev.azure.com/dnceng/public/_build/results?buildId=1905509\u0026view=logs\u0026j=b1ad8889-01f1-5331-c3a1-dcfbcdd4499f\u0026t=affe8412-3853-58c1-7034-679fc1395f80.\r\n\r\nThis is causing a problem as after merging the changes, we get a new issues failed because of the ignored failed tests in the staging build. ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOR6ZmbA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5HnVi5",
                                           "createdAt":  "2022-08-01T17:22:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2022-08-01T17:22:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HnVpQ",
                                           "createdAt":  "2022-08-01T17:23:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nHere is example of that https://dev.azure.com/dnceng/public/_build/results?buildId=1905509\u0026view=logs\u0026j=b1ad8889-01f1-5331-c3a1-dcfbcdd4499f\u0026t=affe8412-3853-58c1-7034-679fc1395f80.\r\n\r\nThis is causing a problem as after merging the changes, we get a new issues failed because of the ignored failed tests in the staging build. \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003etarekgh\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-08-01T17:23:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HnVwl",
                                           "createdAt":  "2022-08-01T17:23:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tarekgh",
                                           "body":  "https://github.com/dotnet/runtime/issues/72995#issuecomment-1199721728",
                                           "updatedAt":  "2022-08-01T17:23:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HnYcx",
                                           "createdAt":  "2022-08-01T17:33:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "The `runtime-staging` pipeline is supposed to not be red when tests fail. The staging pipeline is where we put tests for legs that aren\u0027t yet reliable enough to be in the runtime or runtime-extra-platforms pipeline.",
                                           "updatedAt":  "2022-08-01T17:33:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HnZ1t",
                                           "createdAt":  "2022-08-01T17:39:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "@directhex Should we promote linix-bionic to the runtime pipeline or runtime-extra-platforms?",
                                           "updatedAt":  "2022-08-01T17:40:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Hnd24",
                                           "createdAt":  "2022-08-01T17:57:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tarekgh",
                                           "body":  "\u003e The runtime-staging pipeline is supposed to not be red when tests fail. The staging pipeline is where we put tests for legs that aren\u0027t yet reliable enough to be in the runtime or runtime-extra-platforms pipeline.\r\n\r\nThis was not the case in my instant. I considered the test to be stable and still failed in the staging build. It caused more work for me to get a new issue and handle it while would be easier if I did that in the original PR. How do we decide which test is stable and which is not? The concerned failed test for me was disabled for some time and I started to enable it after fixing it. \r\n\r\n\u003e @directhex Jo Shields FTE Should we promote linix-bionic to the runtime pipeline or runtime-extra-platforms?\r\n\r\nI think this will make sense. \r\n",
                                           "updatedAt":  "2022-08-01T17:57:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Hnmsr",
                                           "createdAt":  "2022-08-01T18:30:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "Keep in mind that `runtime-extra-platforms` doesn\u0027t run on PRs by default.\r\nIt would be very useful if we can set `continueOnError` for the `runtime-staging` jobs also.",
                                           "updatedAt":  "2022-08-01T18:30:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HnotH",
                                           "createdAt":  "2022-08-01T18:40:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "\u003e How do we decide which test is stable and which is not?\r\n\r\nThe way mobile in particular is set up, resolving failing tests may have to be done post merge.  `runtime-staging` is meant to run per PR, but not fail the build, which means you have to look to see if any tests failed in azdo.\r\n\r\n",
                                           "updatedAt":  "2022-08-01T18:40:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HnvQM",
                                           "createdAt":  "2022-08-01T19:08:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tarekgh",
                                           "body":  "At least, I hope the CI gives any indication about failures in the staging build even when leg marked as succeeding. I don\u0027t think anyone is manually checking the staging build when seeing it green.",
                                           "updatedAt":  "2022-08-01T19:08:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HpmZs",
                                           "createdAt":  "2022-08-02T06:50:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ilonatommy",
                                           "body":  "@tarekgh, it\u0027s printing a text message next to `runtime-staging` job in the job list. Either: *Build #XX.X had test failures* or *Build #XX.X succeeded*. But yes, you need to scroll for it manually. I can see we are sorting jobs by failed - skipped - passed and then alphabetically in the jobs view. If the `runtime-staging` was higher, with the failed or skipped ones when the failure message is displayed, then probably people who are not aware of the need of checking it would see the message anyway.",
                                           "updatedAt":  "2022-08-02T06:50:16Z"
                                       }
                                   ],
                         "totalCount":  10
                     },
        "title":  "CI staging build succeeds even if some tests fails there",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/73327",
        "createdAt":  "2022-08-03T19:25:47Z",
        "number":  73327,
        "author":  "MichalPetryka",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-07-17T17:54:49Z",
        "body":  "Running in such directory results in:\r\n```\r\n\u003cpath with a space\u003e/runtime/eng/build.sh: line 156: \u003cpath with a space up to the space\u003e: No such file or directory\r\n```\r\nIt looks like this line is the cause:\r\nhttps://github.com/dotnet/runtime/blob/main/eng/build.sh#L156",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSSu5mQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5HyWud",
                                           "createdAt":  "2022-08-03T19:25:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nRunning in such directory results in:\r\n```\r\n\u003cpath with a space\u003e/runtime/eng/build.sh: line 156: \u003cpath with a space up to the space\u003e: No such file or directory\r\n```\r\nIt looks like this line is the cause:\r\nhttps://github.com/dotnet/runtime/blob/main/eng/build.sh#L156\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eMichalPetryka\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-08-03T19:25:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HyYEe",
                                           "createdAt":  "2022-08-03T19:31:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichalPetryka",
                                           "body":  "It seems like fixing that line leads to more errors later on.",
                                           "updatedAt":  "2022-08-03T19:31:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HyY7N",
                                           "createdAt":  "2022-08-03T19:35:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Thanks for brining this to our attention. Would you mind submitting a PR with the fix? And can you please post the failures that happen when this line is fixed?",
                                           "updatedAt":  "2022-08-03T19:35:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HybDH",
                                           "createdAt":  "2022-08-03T19:44:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "Related:\r\nhttps://github.com/dotnet/runtime/issues/42397\r\nhttps://github.com/dotnet/runtime/issues/13740\r\n",
                                           "updatedAt":  "2022-08-03T19:44:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HyhI0",
                                           "createdAt":  "2022-08-03T20:10:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichalPetryka",
                                           "body":  "\u003e Thanks for brining this to our attention. Would you mind submitting a PR with the fix? And can you please post the failures that happen when this line is fixed?\r\n\r\nI\u0027ve already moved my repo to a path without spaces and closed the terminal so I can\u0027t tell exactly but it was an error when invoking `msbuild`, so changing that one line for sure is not enough. I\u0027ll try fixing it again tomorrow.",
                                           "updatedAt":  "2022-08-03T20:10:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5IzMz8",
                                           "createdAt":  "2022-08-20T18:25:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichalPetryka",
                                           "body":  "\u003e Thanks for brining this to our attention. Would you mind submitting a PR with the fix? And can you please post the failures that happen when this line is fixed?\r\n\r\nLooked into this again, the following error appears after fixing the first one, I don\u0027t really know how to fix it though:\r\n```sh\r\nMSBUILD : error MSB1008: Only one project can be specified.\r\n Full command line: „/media/ewa/Samsung USB/runtime/.dotnet/sdk/7.0.100-preview.7.22377.5/MSBuild.dll -maxcpucount -verbosity:m /m /nologo /clp:Summary /v:minimal /nr:true /warnaserror /p:TreatWarningsAsErrors=true /p:ContinuousIntegrationBuild=false /home/ewa/.nuget/packages/microsoft.dotnet.arcade.sdk/7.0.0-beta.22416.1/tools/Build.proj /p:Configuration=Release /p:RepoRoot=/media/ewa/Samsung USB/runtime/ /p:Restore=true /p:Build=true /p:ArcadeBuildFromSource=false /p:Rebuild=false /p:Test=false /p:Pack=false /p:IntegrationTest=false /p:PerformanceTest=false /p:Sign=false /p:Publish=false /p:Subset=clr+libs /p:TargetArchitecture=x64 /p:BuildArchitecture=x64 /p:CMakeArgs=\"\" -distributedlogger:Microsoft.DotNet.Tools.MSBuild.MSBuildLogger,/media/ewa/Samsung USB/runtime/.dotnet/sdk/7.0.100-preview.7.22377.5/dotnet.dll*Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingLogger,/media/ewa/Samsung USB/runtime/.dotnet/sdk/7.0.100-preview.7.22377.5/dotnet.dll“\r\n Switches appended by response files: \r\nSwitch: USB/runtime/\r\n\r\nFor switch syntax, type \"MSBuild -help\"\r\n```",
                                           "updatedAt":  "2022-08-20T18:25:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5IzSly",
                                           "createdAt":  "2022-08-20T20:40:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "Try to wrap https://github.com/dotnet/runtime/blob/57bfe474518ab5b7cfe6bf7424a79ce3af9d6657/eng/common/build.ps1#L113 in quotes, like ` \"/p:RepoRoot=$RepoRoot\"`",
                                           "updatedAt":  "2022-08-20T20:40:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5IzS_S",
                                           "createdAt":  "2022-08-20T20:51:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichalPetryka",
                                           "body":  "\u003e Try to wrap\r\n\u003e \r\n\u003e https://github.com/dotnet/runtime/blob/57bfe474518ab5b7cfe6bf7424a79ce3af9d6657/eng/common/build.ps1#L113\r\n\u003e \r\n\u003e in quotes, like ` \"/p:RepoRoot=$RepoRoot\"`\r\n\r\nAlready tried, the same error.",
                                           "updatedAt":  "2022-08-20T20:51:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JEtXM",
                                           "createdAt":  "2022-08-24T16:39:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nRunning in such directory results in:\r\n```\r\n\u003cpath with a space\u003e/runtime/eng/build.sh: line 156: \u003cpath with a space up to the space\u003e: No such file or directory\r\n```\r\nIt looks like this line is the cause:\r\nhttps://github.com/dotnet/runtime/blob/main/eng/build.sh#L156\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eMichalPetryka\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003eFuture\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-08-24T16:39:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JF4kX",
                                           "createdAt":  "2022-08-24T20:33:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivdiazsa",
                                           "body":  "The MSBuild error is just part of the problem. Bash also doesn\u0027t like paths with spaces when sourcing other scripts.\r\n\r\nFor example, `build.sh --help` also fails, albeit with a different error. It treats the path as up to the first space, and consequently, there is no directory under that name. This one is fixed by enclosing `\"$scriptroot\"` with quotes. Most of our scripts already did that but there were a few unquoted instances.\r\n\r\nCurrently looking into the MSBuild failure as Jan\u0027s suggestion unfortunately didn\u0027t work as expected.\r\n\r\nEDIT: Tested on Windows and builds also fail there.",
                                           "updatedAt":  "2022-08-24T20:48:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JHF48",
                                           "createdAt":  "2022-08-24T23:28:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivdiazsa",
                                           "body":  "After some more investigation, and reading through the issues pointed by @jkotas here https://github.com/dotnet/runtime/issues/73327#issuecomment-1204400327, I can conclude this issue goes far deeper than meets the eye. It might actually be a bug with the MSBuild parser rather than our runtime, since it just ignores my quoted paths and splits in spaces. Additionally, I got two different repros in MacOS/Linux and Windows:\r\n\r\n**Linux/MacOS**\r\n\r\n```bash\r\n$ ./build.sh -s clr -c Release\r\n\r\n__DistroRid: osx-arm64\r\nMSBUILD : error MSB1008: Only one project can be specified.\r\n    Full command line: \u0027/usr/local/share/dotnet/sdk/7.0.100-preview.7.22377.5/MSBuild.dll -maxcpucount -verbosity:m /m /nologo /clp:Summary /v:minimal /nr:true /warnaserror /p:TreatWarningsAsErrors=true /p:ContinuousIntegrationBuild=false /Path/To/.nuget/packages/microsoft.dotnet.arcade.sdk/7.0.0-beta.22419.1/tools/Build.proj /p:Configuration=Release /p:RepoRoot=\"/Path/To/Runtime With Spaces/\" /p:Restore=true /p:Build=true /p:ArcadeBuildFromSource=false /p:Rebuild=false /p:Test=false /p:Pack=false /p:IntegrationTest=false /p:PerformanceTest=false /p:Sign=false /p:Publish=false /p:Subset=clr /p:TargetArchitecture=arm64 /p:BuildArchitecture=arm64 /p:CMakeArgs=\"\" -distributedlogger:Microsoft.DotNet.Tools.MSBuild.MSBuildLogger,/usr/local/share/dotnet/sdk/7.0.100-preview.7.22377.5/dotnet.dll*Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingLogger,/usr/local/share/dotnet/sdk/7.0.100-preview.7.22377.5/dotnet.dll\u0027\r\n  Switches appended by response files:\r\nSwitch: With\r\n\r\nFor switch syntax, type \"MSBuild -help\"\r\nBuild failed with exit code 1. Check errors above.\r\n```\r\n\r\nCheck out the `/p:RepoRoot` flag. Also, out of curiosity, I passed the path with just a starting quote, but no closing one, and it failed with the exact same error. Which means it ignores them. Single quotes and no quotes yielded the same result.\r\n\r\n**Windows**\r\n\r\n```cmd\r\n$\u003e .\\build.cmd -s clr -c Release\r\n\r\nC:\\Path\\To\\Runtime With Spaces\\src\\coreclr\\runtime.proj(61,5): error MSB3073: The command \"\"C:\\Path\\To\\Runtime With Spaces\\src\\coreclr\\build-runtime.cmd\" -x64 -release -os windows -pgodatapath \"C:\\Path\\To\\.nuget\\packages\\optimization.windows_nt-x64.pgo.coreclr\\1.0.0-prerelease.22415.6\"\" exited with code 1.\r\n\r\nBuild FAILED.\r\n\r\nC:\\Path\\To\\Runtime With Spaces\\src\\coreclr\\runtime.proj(61,5): error MSB3073: The command \"\"C:\\Path\\To\\Runtime With Spaces\\src\\coreclr\\build-runtime.cmd\" -x64 -release -os windows -pgodatapath \"C:\\Path\\To\\.nuget\\packages\\optimization.windows_nt-x64.pgo.coreclr\\1.0.0-prerelease.22415.6\"\" exited with code 1.\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:13.20\r\nBuild failed with exit code 1. Check errors above.\r\n```\r\n\r\nI found the offending line in `build-runtime.cmd` and fixed it (there was a `call` statement without quoting the script path name), and then it failed later on somewhere else. My hypothesis is that the problem will keep propagating to other places (our scripts\u0027 problem) until it eventually lands on the MSBuild problem like it happens in MacOS and Linux.\r\n\r\n",
                                           "updatedAt":  "2022-08-24T23:31:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JHHZm",
                                           "createdAt":  "2022-08-24T23:36:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "This is a bottomless Pandora\u0027s box. Manish also spent some time on this but to my knowledge no-one has yet made this work end to end. I think that in general it\u0027s a worthwhile effort so if you have some fixes that let the build proceed further, just get them merged in; once we\u0027re sure we\u0027re no longer able to make progress due to internal issues in components like MSBuild, we can follow up with the partner teams.",
                                           "updatedAt":  "2022-08-24T23:36:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JHKw2",
                                           "createdAt":  "2022-08-25T00:04:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Building with spaces seems to fail about once a year. Which tells me that the developers working on this day to day just avoid it and it will keep breaking periodically unless we make CI work this way.\n\nWe could just document that we don\u0027t support it...",
                                           "updatedAt":  "2022-08-25T00:04:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JHMz9",
                                           "createdAt":  "2022-08-25T00:18:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCrKzNA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ivdiazsa",
                                                                               "createdAt":  "2022-08-25T18:09:20Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "trylek",
                                           "body":  "Sure, we all strive to avoid it, but some people are less lucky - in many institutions, universities, companies, IT may force a policy that requires people to use root folders with names beyond their control (e.g. based on their names that may contain a plethora of accent signs and spaces). While it\u0027s a sad reality that today this doesn\u0027t work, I think our north star should be ultimately making this fully functional, at the very least as a nod to our inclusiveness principle.",
                                           "updatedAt":  "2022-08-25T00:18:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JHOEc",
                                           "createdAt":  "2022-08-25T00:26:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "And, after all, the default VS installation folder contains at least four blanks (\u003ccode\u003eC:\\Program Files (x86)\\Microsoft Visual Studio\u003c/code\u003e).",
                                           "updatedAt":  "2022-08-25T00:26:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JHOVz",
                                           "createdAt":  "2022-08-25T00:27:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCrKyeA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "trylek",
                                                                               "createdAt":  "2022-08-25T00:30:56Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2022-08-25T13:15:33Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ivdiazsa",
                                                                               "createdAt":  "2022-08-25T18:05:36Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "MichalPetryka",
                                           "body":  "\u003e Building with spaces seems to fail about once a year. Which tells me that the developers working on this day to day just avoid it and it will keep breaking periodically unless we make CI work this way.\r\n\u003e \r\n\u003e We could just document that we don\u0027t support it...\r\n\r\nThere could be some weekly CI job that\u0027d build and test from a directory that contains spaces and non-ASCII characters, this\u0027d keep things working in check.",
                                           "updatedAt":  "2022-08-25T00:27:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JHPHt",
                                           "createdAt":  "2022-08-25T00:33:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "(In practice, even this is non-trivial as AzDO has its own rules regarding directory naming, I believe we looked into that in the past and there was no easy way to name the AzDO folder for a particular run \"šílený raťafák\" so that would be one more thing to follow up on with the AzDO team.)",
                                           "updatedAt":  "2022-08-25T00:33:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JHV95",
                                           "createdAt":  "2022-08-25T01:18:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "You\u0027re right, now I recall in the past at least one of the folks hitting this had no other option, because their user name was chosen to have a space and they could not access any other folder.",
                                           "updatedAt":  "2022-08-25T01:18:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JIcf4",
                                           "createdAt":  "2022-08-25T08:32:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "One workaround for those users could be to build in a VM/Docker container.",
                                           "updatedAt":  "2022-08-25T08:32:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JK0Cp",
                                           "createdAt":  "2022-08-25T17:34:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "It\u0027s possible the machine is locked down such that they can\u0027t do that kind of thing?",
                                           "updatedAt":  "2022-08-25T17:34:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JK7Vn",
                                           "createdAt":  "2022-08-25T18:06:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivdiazsa",
                                           "body":  "\u003e This is a bottomless Pandora\u0027s box. Manish also spent some time on this but to my knowledge no-one has yet made this work end to end. I think that in general it\u0027s a worthwhile effort so if you have some fixes that let the build proceed further, just get them merged in; once we\u0027re sure we\u0027re no longer able to make progress due to internal issues in components like MSBuild, we can follow up with the partner teams.\r\n\r\nAlright then it\u0027s settled! I\u0027ll get a PR with fixes on our part, i.e. until the failure falls onto MSBuild.",
                                           "updatedAt":  "2022-08-25T18:06:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JK7mZ",
                                           "createdAt":  "2022-08-25T18:08:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivdiazsa",
                                           "body":  "\u003e It\u0027s possible the machine is locked down such that they can\u0027t do that kind of thing?\r\n\r\nThis is a thing in some companies so unfortunately that workaround wouldn\u0027t work for them. It\u0027s not a huge amount of places, but there are some locked down out there.",
                                           "updatedAt":  "2022-08-25T18:08:43Z"
                                       }
                                   ],
                         "totalCount":  22
                     },
        "title":  "`build.sh` fails when run in a directory that contains spaces",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/74096",
        "createdAt":  "2022-08-17T19:20:40Z",
        "number":  74096,
        "author":  "radical",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCqLD8w==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jakobbotsch",
                                            "createdAt":  "2022-08-17T19:50:00Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2022-09-06T16:17:15Z",
        "body":  "I\u0027m aware that AzDO doesn\u0027t support this with `/azp run`. But maybe this can be implemented with the help of a GitHub action? or @akoeplinger suggested that maybe we can read comments from the PR to get the arguments.\r\n\r\n- This would allow not having to incur the cost of running entire pipelines (like runtime-extra-platforms, or runtime-wasm), and having faster turnaround times for developers. This can be achieved very crudely, and manually right now by editing `platform-matrix.yml`, and then the jobs in the relevant pipelines.\r\n- Or for example running *all* the wasm AOT tests, and not just the smoke ones\r\n- Same for `runtime-wasm-perf` - which runs only sanity checks by default, but with an argument, it could run all the benchmarks\r\n\r\n/cc @akoeplinger @directhex ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSJ9SYA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5In1Jg",
                                           "createdAt":  "2022-08-17T19:20:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nI\u0027m aware that AzDO doesn\u0027t support this with `/azp run`. But maybe this can be implemented with the help of a GitHub action? or @akoeplinger suggested that maybe we can read comments from the PR to get the PR.\r\n\r\n- This would allow not having to incur the cost of running entire pipelines (like runtime-extra-platforms, or runtime-wasm), and having faster turnaround times for developers. This can be achieved very crudely, and manually right now by editing `platform-matrix.yml`, and then the jobs in the relevant pipelines.\r\n- Or for example running *all* the wasm AOT tests, and not just the smoke ones\r\n- Same for `runtime-wasm-perf` - which runs only sanity checks by default, but with an argument, it could run all the benchmarks\r\n\r\n/cc @akoeplinger @directhex \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eradical\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-08-17T19:20:45Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Add support for running pipelines on PRs, with *arguments*",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/75243",
        "createdAt":  "2022-09-08T06:48:27Z",
        "number":  75243,
        "author":  "hoyosjs",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCqgOxw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ViktorHofer",
                                            "createdAt":  "2022-09-08T12:00:46Z"
                                        },
                                        {
                                            "content":  "HOORAY",
                                            "user":  "tommcdon",
                                            "createdAt":  "2022-09-08T18:21:33Z"
                                        },
                                        {
                                            "content":  "EYES",
                                            "user":  "jeffschwMSFT",
                                            "createdAt":  "2022-09-08T21:56:32Z"
                                        }
                                    ],
                          "totalCount":  3
                      },
        "updatedAt":  "2024-08-22T15:42:16Z",
        "body":  "# [User Story] CI Health: Redefining CI investigations and Merge on Green\r\n\r\nThe purpose of this issue is to document the different work streams happening throughout the runtime to improve the UX and reliability\r\nof the CI system. The main goal is to help developers feel productive while maintaining product risk low. The aim of this project is to\r\nachieve a system where 80%+ off all PRs are merged with a green \"Build Analysis\" check, with all issues understood, and aiming to lower\r\nthe time wasted in repetitive investigation of known issues.\r\n\r\n\r\nThe work streams are roughly:\r\n\r\n- [x] 1. Issues can be easily searched for throughout the different components of a PR to reason about failures:\r\n\r\n  - [x] 1.1 Build issue search within AzDO has been deployed.\r\n  - [x] 1.2 **[Owner: DevWF]** Helix test log searching. Rolled out and the tab identifies issue, but issue counts are not accurate yet and doesn\u0027t properly update a failure table on the tracking issue.\r\n\r\n- [x] 2. It\u0027s easy to report issues directly from the `Build Analysis` check tab:\r\n\r\n  - [x] 2.1 Build issues from are reported are easy to report as infrastructure issues for issues like AzDO feeds with retries capability.\r\n  - [x] 2.2 Test issues are easy to report from the failed build. This includes all relevant information and all the end user has to do is provide identifiable information for automation to find the correct issue.\r\n  - [x] 2.3 **[Owner: DevWF]** Issue should contain all accurate accounting of occurrences as this helps teams prioritize impactful issues. We are missing for the table to have source - i.e. PR backlink - and an accurate count of hits on a sliding window.\r\n\r\n- [ ] 3. Update docs to account for opening issues, assessing if an issue is known, and how to proceed if issues are found:\r\n\r\n  - [ ] 3.1 **[Owner: Runtime]** https://github.com/dotnet/runtime/pull/74615 largely achieved this work, but it needs to be updated for the opening issues workflow that got enabled as well as some of the timing expectations for the system.\r\n\r\n- [x] 4. Tests should have failures logged in a format that Build Analysis can easily reasoned about and surfaced to the check tab:\r\n\r\n  - [x] 4.1 **[Owner: Runtime/DevWF]** Ensure that the xUnit based tests properly surface asserts to the generated wrappers. That is, reap StdErr for the child process as much as possible so that the check tab can show the appropriate information.\r\n    - [x] 4.1.1 https://github.com/dotnet/runtime/issues/77918\r\n  - [x] 4.2 **[Owner: Runtime]** Ensure the new source-generated testing framework allows for proper attribution at the test level and that all tests are surfaced in a way the engineering system can shortcut people\u0027s workflow. This includes an analysis of catastrophe style issues that are now reported as workitem failures. @davidwrighton was taking a cursory look at this.\r\n    - [x] 4.2.1 https://github.com/dotnet/runtime/issues/77735\r\n  - [ ] ~4.3 **[Moved to Future Item]** **[Owner: Runtime]** Ensure timeouts and hang dumps are properly handled in the new testing system, and that they are surfaced in a way build analysis can upload them.~\r\n\r\n- [ ] 5. Redefine merge on red: Make build analysis the definition for merge on red\r\n  - [ ] 5.1 **[Owner: DevWF]** Turning \u0027Build Analysis\u0027 into a required check requires:\r\n      - [x] 5.1.1 Reporting an issue should rerun the check against it to move it to the known column.\r\n      - [ ] ~5.1.2 Correlating an issue manually is possible (even if undesirable) to unblock merging.~\r\n      - [x] 5.1.3 Re-run a check is necessary to some extent - otherwise PRs need to wait 1+ hours for DWV to rerun.\r\n  - [x] 5.2 **[Owner: Runtime/DevWF]** Define a metric that measures how successful this new definition is at helping people quickly distinguish errors from their PRs from known issues.\r\n  - [ ] 5.3 **[Owner: Runtime]** Find a way to help people discover this definition easily: if all known issues, it should be obvious to the end user they can merge. **Specify in documentation to mark this as completed.**\r\n  - [x] 5.4 **[Owner: Runtime/DevWF]** Define a mechanism to study what failures need hardening and what issues should be invested on. The dashboard could surface \r\n\r\n# Future Work\r\n\r\n- [ ] Adding crashdump and hang dump in Libraries tests\r\n- [ ] V1 \u0026 V2 test system: Enable crash collection on macOS (e.g., Singlefile, exception handling)\r\n- [ ] V2 test system: Hang dump collection and integrate symbolication from V1\r\n  - 4.3 **[Moved to Future Item]** **[Owner: Runtime]** Ensure timeouts and hang dumps are properly handled in the new testing system, and that they are surfaced in a way build analysis can upload them.\r\n- [ ] Move from ASP.NET to dotnet/arcade (repo with all the shared infrastructure) for test level retry\r\n- [ ] No crashdump and hang dump support for mono and wasm. They don\u0027t have a good crash mechanism yet. @SamMonoRT @lewing @BrzVlad\r\n\r\n\r\ncc: @JulieLeeMSFT @tommcdon @markwilkie \r\n\r\ncc: @AlitzelMendez @missymessa @ulisesh @ChadNedzlek ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSnVASA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5J7WqK",
                                           "createdAt":  "2022-09-08T06:48:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n# [User Story] CI Health: Redefining CI investigations and Merge on Green\r\n\r\nThe purpose of this issue is to document the different work streams happening throughout the runtime to improve the UX and reliability\r\nof the CI system. The main goal is to help developers feel productive while maintaining product risk low. The aim of this project is to\r\nachieve a system where 80%+ off all PRs are merged with a green \"Build Analysis\" check, with all issues understood, and aiming to lower\r\nthe time wasted in repetitive investigation of known issues.\r\n\r\n\r\nThe work streams are roughly:\r\n\r\n- Issues can be easily searched for throughout the different components of a PR:\r\n\r\n  - [x] Build issue search within AzDO has been deployed.\r\n  - [ ] Helix test log searching. Rolled out and the tab identifies issue, but issue counts are not accurate yet and doesn\u0027t properly update\r\n\r\n- It\u0027s easy to report issues directly from the `Build Analysis` check tab\r\n\r\n  - [x] Build issues from are reported are easy to report as infrastructure issues for issues like AzDO feeds with retries capability.\r\n  - [x] Test issues are easy to report from the failed build. This includes all relevant information and all the end user has to do is provide identifiable information for automation to find the correct issue.\r\n  - [ ] Issue should contain all accurate accounting of occurrences as this helps teams prioritize impactful issues. We are missing for the table to have source - i.e. PR backlink - and an accurate count of hits on a sliding window.\r\n\r\n- Update docs to account for opening issues, assessing if an issue is known, and how to proceed if issues are found:\r\n\r\n  - [ ] https://github.com/dotnet/runtime/pull/74615 largely achieved this work, but it needs to be updated for the opening issues workflow that got enabled as well as some of the timing expectations for the system.\r\n\r\n- Tests should have failures logged in a format that :\r\n\r\n  - [ ] The legacy system (xUnit) is not properly surfacing asserts. Ensure that StdErr for the child process is properly being redirected as much as possible.\r\n  - [ ] Ensure the new source-generated testing framework allows for proper attribution at the test level. This includes an analysis of catastrophe style issues that are now reported as workitem failures. @davidwrighton was taking a cursory look at this.\r\n  - [ ] Ensure timeouts and hang dumps are properly handled in the new testing system and surfaced in a way build analysis can surface them.\r\n\r\n- Redefine merge on red: Make build analysis the definition for merge on red\r\n  - [ ] Turning \u0027Build Analysis\u0027 into a required check requires:\r\n      - Reporting an issue should rerun the check against it to move it to the known column.\r\n      - Correlating an issue manually is possible (even if undesirable) to unblock merging.\r\n      - Re-run a check is necessary to some extent - otherwise PRs need to wait 1+ hours for DWV to rerun.\r\n  - [ ] Define a metric that measures how successful this new definition is at helping people quickly distinguish errors from their PRs from known issues.\r\n  - [ ] Find a way to help people discover this definition easily: if all known issues, it should be obvious to the end user they can merge.\r\n  - [ ] Define a mechanism to study what failures need hardening and what issues should be invested on. The dashboard could surface \r\n\r\ncc: @JulieLeeMSFT @tommcdon @markwilkie \r\n\r\ncc: @AlitzelMendez @missymessa @ulisesh @ChadNedzlek \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ehoyosjs\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `User Story`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e8.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-09-08T06:48:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5J_DwZ",
                                           "createdAt":  "2022-09-08T21:47:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "JulieLeeMSFT",
                                           "body":  "cc @jeffschwMSFT @mangod9. ",
                                           "updatedAt":  "2022-09-08T21:47:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Kae6Q",
                                           "createdAt":  "2022-09-15T18:31:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "\u003e Ensure timeouts and hang dumps are properly handled in the new testing system,\r\n\r\nDoes this include making sure hangs lead to dumps? Or we believe that\u0027s now the case (I wasn\u0027t aware). I do agree this would really help a category of test failures that aren\u0027t currently actionable.",
                                           "updatedAt":  "2022-09-15T18:31:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Ka3B1",
                                           "createdAt":  "2022-09-15T20:03:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "@danmoseley This happens for coreclr tests. Libraries tests have no provision for this, other than dotnet-test based runs and I think there were reasons not to move to that?",
                                           "updatedAt":  "2022-09-15T20:03:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5KbU2m",
                                           "createdAt":  "2022-09-15T21:59:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Ah. Yes, for moving to dotnet-test I think we discussed that we need some more lightweight runner due to being bottom of the stack. @ViktorHofer do we have anything like that on the backlog still?",
                                           "updatedAt":  "2022-09-15T21:59:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5KdUBI",
                                           "createdAt":  "2022-09-16T10:25:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e @ViktorHofer do we have anything like that on the backlog still?\r\n\r\nI filed https://github.com/microsoft/vstest/issues/3595 for that a while ago. We basically need a way to run our tests in-proc with a minimal set of dependencies.",
                                           "updatedAt":  "2022-09-16T10:25:47Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "[User Story] CI Health: Redefining CI investigations and Health",
        "labels":  [
                       "area-Infrastructure",
                       "User Story"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/75966",
        "createdAt":  "2022-09-21T12:48:49Z",
        "number":  75966,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-25T20:06:56Z",
        "body":  "During the .NET 6 timeframe, the .NET libraries infrastructure team heavily invested in replacing the legacy [pkgproj packaging system](https://github.com/dotnet/arcade/tree/main/src/Microsoft.DotNet.Build.Tasks.Packaging) with NuGet Pack task based projects. [The completion of that work](https://github.com/dotnet/runtime/issues/53202) resulted in a significant simplified servicing process as various flawed concepts that complicated publishing, RTM and servicing were eliminated:\r\n- package index maintenance\r\n- harvesting and the cross-release dependencies that it caused\r\n- [runtime.json restore infrastructure](https://github.com/dotnet/runtime/issues/49137)\r\n- the custom packaging infrastructure that still todays relies on a different set of packaging properties than NuGet\u0027s Pack task (the common path)\r\n\r\nWe, the .NET libraries infrastructure team don\u0027t plan to further invest in the pkgproj packaging system and eventually want to remove it entirely in favor of the NuGet Pack task which is the official way to produce nuget packages.\r\n\r\nThis repository still relies on the pkgproj infrastructure for the producing runtime and host packages:\r\n- https://github.com/dotnet/runtime/blob/d6a4f7ac145df96e21ec895476cfe0eb0b1efa9d/src/mono/nuget/mono-packages.proj\r\n- https://github.com/dotnet/runtime/blob/20dd6ea921028b3a2cc660654b65112077671fb5/src/installer/pkg/projects/host-packages.proj\r\n- https://github.com/dotnet/runtime/blob/c4c1c3aac7c42494791aaa5b791ae3641dc2561a/src/coreclr/.nuget/coreclr-packages.proj\r\n\r\nWhile these packages don\u0027t use the full set feature set of the pkgproj infrastructure, history has shown that any part of the custom packaging infrastructure continues to break RTM and servicing builds for various reasons. Recent examples that would have hindered RTM and servicing of .NET 7 are https://github.com/dotnet/runtime/commit/16314656aa9d4eb3bd3bf90f9e454638958a9cc7, and https://github.com/dotnet/runtime/commit/b966a10d938bd06e35cb121391a76cbbfe3cbf70.\r\n\r\nI suggest that we invest in replacing the remaining set of pkgproj based projects by converting them to NuGet Pack task based projects. For the mono ones, I already started with the migration a year ago but couldn\u0027t finish it because of conflicting priorities. Even though some of the packaging projects changed, it should be possible to either revive or mimic my PR: https://github.com/dotnet/runtime/pull/57499.\r\n\r\n**Size: S-M**\r\nI expect that this shouldn\u0027t take more than a week per area (coreclr, mono). Also, it\u0027s unclear if the legacy host packages need to be migrated as those aren\u0027t used anymore by the the libraries (as we now use the live host).\r\n\r\nRelated: https://github.com/dotnet/runtime/issues/49137, https://github.com/dotnet/runtime/issues/59355\r\n\r\ncc @jeffschwMSFT @marek-safar @steveisok @dotnet/runtime-infrastructure @ericstj",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSzl1Ng==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5KuWKM",
                                           "createdAt":  "2022-09-21T12:48:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nDuring the .NET 6 timeframe, the .NET libraries infrastructure team invested in replacing the legacy [pkgproj packaging system](https://github.com/dotnet/arcade/tree/main/src/Microsoft.DotNet.Build.Tasks.Packaging) with NuGet Pack task based projects. [The completion of that work](https://github.com/dotnet/runtime/issues/53202) resulted in a significant simplified servicing process as various flawed concepts that complicated publishing, RTM and servicing were eliminated:\r\n- package index maintenance\r\n- harvesting and the cross-release dependencies that it caused\r\n- the custom packaging infrastructure that still todays relies on a different set of packaging properties than NuGet\u0027s Pack task (the common path)\r\n\r\nThis repository still relies on the pkgproj infrastructure for the producing runtime and host packages:\r\n- https://github.com/dotnet/runtime/blob/d6a4f7ac145df96e21ec895476cfe0eb0b1efa9d/src/mono/nuget/mono-packages.proj\r\n- https://github.com/dotnet/runtime/blob/20dd6ea921028b3a2cc660654b65112077671fb5/src/installer/pkg/projects/host-packages.proj\r\n- https://github.com/dotnet/runtime/blob/c4c1c3aac7c42494791aaa5b791ae3641dc2561a/src/coreclr/.nuget/coreclr-packages.proj\r\n\r\nWhile these packages only use a limited set of the pkgproj infrastructure, history has shown that the custom packaging infrastructure continues to break RTM and servicing builds as different packaging properties are used. Recent examples that would have hindered RTM and servicing of .NET 7 are https://github.com/dotnet/runtime/commit/16314656aa9d4eb3bd3bf90f9e454638958a9cc7, and https://github.com/dotnet/runtime/commit/b966a10d938bd06e35cb121391a76cbbfe3cbf70.\r\n\r\nI suggest that we invest in replacing the remaining set of pkgproj based projects by converting them to NuGet Pack task based projects. For the mono ones, I already started with the migration a year ago but couldn\u0027t finish it because of conflicting priorities. Even though some of the packaging projects changed, it should be possible to either revive or mimic my PR: https://github.com/dotnet/runtime/pull/57499.\r\n\r\n**Size: S-M**\r\nI expect that this shouldn\u0027t take more than a week per component. Also, it\u0027s unclear if the legacy host packages need to be migrated as those aren\u0027t used anymore by the the libraries (as we now use the live host).\r\n\r\nRelated: https://github.com/dotnet/runtime/issues/49137, https://github.com/dotnet/runtime/issues/59355\r\n\r\ncc @jeffschwMSFT @marek-safar @steveisok @dotnet/runtime-infrastructure @ericstj\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `Bottom Up Work`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e8.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-09-21T12:48:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5LKpJ7",
                                           "createdAt":  "2022-09-28T15:26:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCs99sQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "steveisok",
                                                                               "createdAt":  "2022-09-28T15:56:36Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2022-09-28T16:00:06Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "We should also replace the .pkgproj\u0027s in these repos:\r\n- https://github.com/dotnet/llvm-project\r\n- https://github.com/dotnet/emsdk\r\n- https://github.com/dotnet/icu",
                                           "updatedAt":  "2022-09-28T15:26:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5LK5aY",
                                           "createdAt":  "2022-09-28T16:19:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Agreed. IIRC there were a few more usages in other repositories that we don\u0027t own. I will follow-up with the respective owners of such individually. I assume that llvm-project and emsdk is owned / maintained by the Mono team? Who manages the icu repo?",
                                           "updatedAt":  "2022-09-28T16:19:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5LLNoi",
                                           "createdAt":  "2022-09-28T17:27:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCs-51A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2022-09-28T19:47:34Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "steveisok",
                                           "body":  "\u003e I assume that llvm-project and emsdk is owned / maintained by the Mono team? Who manages the icu repo?\r\n\r\nWe manage llvm-project (except for the objwriter fork for nativeaot), emsdk, and icu.  \r\n",
                                           "updatedAt":  "2022-09-28T17:27:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5LOBjA",
                                           "createdAt":  "2022-09-29T08:48:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "Correct, but the objwriter fork was done by copying our project files so I\u0027d say we just fix it all at the same time, it shouldn\u0027t be hard.",
                                           "updatedAt":  "2022-09-29T08:48:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5LOCi3",
                                           "createdAt":  "2022-09-29T08:51:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCtGxbQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jeffschwMSFT",
                                                                               "createdAt":  "2022-09-29T14:05:46Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkotas",
                                                                               "createdAt":  "2022-09-30T15:39:09Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "filipnavara",
                                           "body":  "\u003e Correct, but the objwriter fork was done by copying our project files so I\u0027d say we just fix it all at the same time, it shouldn\u0027t be hard.\r\n\r\nWould there be any interest in getting the objwriter merged into the same branch (and upgrading it to LLVM 14)?",
                                           "updatedAt":  "2022-09-29T08:51:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5LODpP",
                                           "createdAt":  "2022-09-29T08:55:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "That is something we\u0027re discussing as well (also because it\u0027d simplify the source-build/VMR story), but that will likely take a bit longer.",
                                           "updatedAt":  "2022-09-29T08:55:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5LOEpD",
                                           "createdAt":  "2022-09-29T08:58:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "filipnavara",
                                           "body":  "\u003e That is something we\u0027re discussing as well (also because it\u0027d simplify the source-build/VMR story), but that will likely take a bit longer.\r\n\r\nI am willing to do some heavy lifting on that if it\u0027s desired and someone can reconfigure the DARC / Azure Pipelines once it\u0027s done.",
                                           "updatedAt":  "2022-09-29T08:58:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5LOXU2",
                                           "createdAt":  "2022-09-29T10:03:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCtBNhQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "filipnavara",
                                                                               "createdAt":  "2022-09-29T10:08:26Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "Thanks, I\u0027ll ping you once we made a decision :)",
                                           "updatedAt":  "2022-09-29T10:03:40Z"
                                       }
                                   ],
                         "totalCount":  9
                     },
        "title":  "Replace pkgprojs with NuGet Pack task based projects",
        "labels":  [
                       "area-Infrastructure",
                       "Bottom Up Work"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/76147",
        "createdAt":  "2022-09-25T09:21:18Z",
        "number":  76147,
        "author":  "filipnavara",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCqufhQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "EgorBo",
                                            "createdAt":  "2022-09-25T12:03:54Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "SingleAccretion",
                                            "createdAt":  "2022-09-25T17:24:21Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "vcsjones",
                                            "createdAt":  "2022-09-25T21:16:46Z"
                                        }
                                    ],
                          "totalCount":  3
                      },
        "updatedAt":  "2023-07-25T17:44:21Z",
        "body":  "There\u0027s a `@dotnet/external-ci-access` group that had access to running the `/az` commands. It broke long time ago. It was mentioned on several issues but ultimately never resolved. It\u0027s making some workflows abnormally obnoxious and I hate to bug people just to write a command in comments.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSwTD9Q==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5K7qap",
                                           "createdAt":  "2022-09-25T09:21:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-meta\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThere\u0027s a `@dotnet/external-ci-access` group that had access to running the `/az` commands. It broke long time ago. It was mentioned on several issues but ultimately never resolved. It\u0027s making some workflows abnormally obnoxious and I hate to bug people just to write a command in comments.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003efilipnavara\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Meta`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-09-25T09:21:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5K_KK_",
                                           "createdAt":  "2022-09-26T13:48:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThere\u0027s a `@dotnet/external-ci-access` group that had access to running the `/az` commands. It broke long time ago. It was mentioned on several issues but ultimately never resolved. It\u0027s making some workflows abnormally obnoxious and I hate to bug people just to write a command in comments.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003efilipnavara\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Meta`, `area-Infrastructure`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-09-26T13:48:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5K_KYp",
                                           "createdAt":  "2022-09-26T13:48:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "@MattGal do you know if this is on anyone\u0027s to do list?",
                                           "updatedAt":  "2022-09-26T13:48:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5K_Yb0",
                                           "createdAt":  "2022-09-26T14:30:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "cc @mmitche ",
                                           "updatedAt":  "2022-09-26T14:30:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5K_lsV",
                                           "createdAt":  "2022-09-26T15:08:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mmitche",
                                           "body":  "I\u0027m not entirely sure how this worked. @jaredpar or @hoyosjs any idea how this worked?",
                                           "updatedAt":  "2022-09-26T15:08:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5K_trk",
                                           "createdAt":  "2022-09-26T15:27:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jaredpar",
                                           "body":  "In order to use `/azp run` they need to have at least explicit read access to the repo IIRC.",
                                           "updatedAt":  "2022-09-26T15:27:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5LAMYP",
                                           "createdAt":  "2022-09-26T16:54:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "filipnavara",
                                           "body":  "Since we are already in the org in a special group and the repo is publicly readable would adding that permission pose any security risk? I would not expect it to give us any additional permission on the repository itself but if external tools use it then other bots may use it too...\r\n\r\n(Funnily enough I have permissions to run `/backport` because it only check the org membership; I don\u0027t have permissions to edit the template on the generated PR though)",
                                           "updatedAt":  "2022-09-26T17:47:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5LAshj",
                                           "createdAt":  "2022-09-26T18:58:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCs1P_g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "CONFUSED",
                                                                               "user":  "filipnavara",
                                                                               "createdAt":  "2022-09-26T19:16:57Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "vcsjones",
                                           "body":  "\u003e In order to use `/azp run` they need to have at least explicit read access to the repo IIRC.\r\n\r\nI think that is how it used to work and how communicated members used to be able to interact with Azure Pipelines. [According to the docs](https://learn.microsoft.com/en-us/azure/devops/pipelines/repos/github?view=azure-devops\u0026tabs=yaml):\r\n\r\n\u003e  Only repository owners and collaborators with \u0027Write\u0027 permission can trigger the build by commenting on the pull request with /AzurePipelines run or /AzurePipelines run \u003cpipeline-name\u003e.\r\n\r\nThis unfortunately means write permission is required for the `/azp` command to work.",
                                           "updatedAt":  "2022-09-26T19:33:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5LBMP1",
                                           "createdAt":  "2022-09-26T20:35:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCs1i2Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "filipnavara",
                                                                               "createdAt":  "2022-09-26T20:38:32Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "steveisok",
                                           "body":  "We\u0027ve kicked around an idea of creating a bot to be a better version of `/azp run`.  If that happens, then I think this issue is solved.",
                                           "updatedAt":  "2022-09-26T20:35:15Z"
                                       }
                                   ],
                         "totalCount":  9
                     },
        "title":  "Get \"/azp run\" working again for external contributors",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/76488",
        "createdAt":  "2022-10-01T17:52:48Z",
        "number":  76488,
        "author":  "jkotas",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T23:00:19Z",
        "body":  "```\r\n  Building intermediate nupkg, and supplemental nupkgs for runtime, ILCompiler, Crossgen2Pack...\r\n/__w/1/s/.dotnet/sdk/7.0.100-preview.7.22377.5/Microsoft.Common.CurrentVersion.targets(2318,5): error MSB3101: Could not write state file \"/__w/1/s/artifacts/obj/SourceBuildIntermediate/Release/netstandard2.0/SourceBuildIntermediate.proj.AssemblyReference.cache\". The file \u0027/__w/1/s/artifacts/obj/SourceBuildIntermediate/Release/netstandard2.0/SourceBuildIntermediate.proj.AssemblyReference.cache\u0027 already exists. [/__w/1/s/artifacts/obj/ArcadeGeneratedProjects/SourceBuildIntermediate/SourceBuildIntermediate.proj]\r\n##[error].dotnet/sdk/7.0.100-preview.7.22377.5/Microsoft.Common.CurrentVersion.targets(2318,5): error MSB3101: (NETCORE_ENGINEERING_TELEMETRY=AfterSourceBuild) Could not write state file \"/__w/1/s/artifacts/obj/SourceBuildIntermediate/Release/netstandard2.0/SourceBuildIntermediate.proj.AssemblyReference.cache\". The file \u0027/__w/1/s/artifacts/obj/SourceBuildIntermediate/Release/netstandard2.0/SourceBuildIntermediate.proj.AssemblyReference.cache\u0027 already exists.\r\n/__w/1/s/.dotnet/sdk/7.0.100-preview.7.22377.5/Microsoft.Common.CurrentVersion.targets(2318,5): error MSB3101: Could not write state file \"/__w/1/s/artifacts/obj/SourceBuildIntermediate/Release/netstandard2.0/SourceBuildIntermediate.proj.AssemblyReference.cache\". The file \u0027/__w/1/s/artifacts/obj/SourceBuildIntermediate/Release/netstandard2.0/SourceBuildIntermediate.proj.AssemblyReference.cache\u0027 already exists. [/__w/1/s/artifacts/obj/ArcadeGeneratedProjects/SourceBuildIntermediate/SourceBuildIntermediate.proj]\r\n##[error].dotnet/sdk/7.0.100-preview.7.22377.5/Microsoft.Common.CurrentVersion.targets(2318,5): error MSB3101: (NETCORE_ENGINEERING_TELEMETRY=AfterSourceBuild) Could not write state file \"/__w/1/s/artifacts/obj/SourceBuildIntermediate/Release/netstandard2.0/SourceBuildIntermediate.proj.AssemblyReference.cache\". The file \u0027/__w/1/s/artifacts/obj/SourceBuildIntermediate/Release/netstandard2.0/SourceBuildIntermediate.proj.AssemblyReference.cache\u0027 already exists.\r\n```\r\n\r\n```json\r\n {\r\n    \"ErrorMessage\" : \"Could not write state file\",\r\n    \"BuildRetry\": true\r\n }\r\n```\r\n\r\nFull log: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/37592/logs/106\r\nHit in: #76463\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n|Build|Definition|Step Name|Console log|Pull Request|\r\n|---|---|---|---|---|\r\n|[1152308](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152308)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1152308/logs/81)|dotnet/runtime#119432|\r\n|[1152066](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152066)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1152066/logs/101)|dotnet/runtime#117429|\r\n|[1151920](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151920)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1151920/logs/101)|dotnet/runtime#117429|\r\n|[1151554](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151554)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1151554/logs/81)|dotnet/runtime#119432|\r\n|[1150733](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150733)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1150733/logs/101)|dotnet/runtime#119810|\r\n|[1150315](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150315)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1150315/logs/81)|dotnet/runtime#119432|\r\n|[1150179](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150179)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1150179/logs/101)|dotnet/runtime#119564|\r\n|[1149197](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149197)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1149197/logs/90)|dotnet/runtime#119745|\r\n|[1149025](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149025)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1149025/logs/81)|dotnet/runtime#119432|\r\n|[1148993](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148993)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1148993/logs/88)|dotnet/runtime#119738|\r\n|[1147722](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147722)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1147722/logs/101)|dotnet/runtime#119564|\r\n|[1147008](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147008)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1147008/logs/65)|dotnet/runtime#119674|\r\n|[1145876](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145876)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1145876/logs/88)|dotnet/runtime#119432|\r\n|[1145788](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145788)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1145788/logs/101)|dotnet/runtime#119599|\r\n|[1145390](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145390)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1145390/logs/225)|dotnet/runtime#118539|\r\n|[1144937](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144937)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1144937/logs/88)|dotnet/runtime#119432|\r\n|[1144768](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144768)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1144768/logs/88)|dotnet/runtime#119432|\r\n|[1143903](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143903)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1143903/logs/88)|dotnet/runtime#119432|\r\n|[1143831](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143831)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1143831/logs/65)|dotnet/runtime#119517|\r\n|[1143564](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143564)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1143564/logs/81)|dotnet/runtime#119432|\r\n|[1141258](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141258)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1141258/logs/81)|dotnet/runtime#119432|\r\n|[1139838](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139838)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1139838/logs/90)|dotnet/runtime#118264|\r\n|[1136981](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136981)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1136981/logs/90)|dotnet/runtime#119262|\r\n|[1136623](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136623)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1136623/logs/90)|dotnet/runtime#118123|\r\n|[1135861](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135861)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1135861/logs/90)|dotnet/runtime#115268|\r\n|[1134537](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1134537)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1134537/logs/101)|dotnet/runtime#119197|\r\n|[1131604](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1131604)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1131604/logs/90)|dotnet/runtime#119077|\r\n|[1131467](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1131467)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1131467/logs/90)|dotnet/runtime#119077|\r\n|[1130480](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1130480)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1130480/logs/65)|dotnet/runtime#119033|\r\n|[1130302](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1130302)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1130302/logs/89)|dotnet/runtime#118996|\r\n|[1130274](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1130274)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1130274/logs/65)|dotnet/runtime#118996|\r\n|[1130241](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1130241)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1130241/logs/65)|dotnet/runtime#118996|\r\n|[1129793](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1129793)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1129793/logs/101)|dotnet/runtime#118997|\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|11|33|\r\n\u003c!--Known issue error report end --\u003e\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** \r\n**Result validation: :warning:** Validation could not be done without an Azure DevOps build URL on the issue. Please add it to the \"**Build: :mag_right:**\" line.\r\n\u003c!-- Known issue validation end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOS3DMmQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5LXcKJ",
                                           "createdAt":  "2022-10-01T17:52:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n```\r\n  Building intermediate nupkg, and supplemental nupkgs for runtime, ILCompiler, Crossgen2Pack...\r\n/__w/1/s/.dotnet/sdk/7.0.100-preview.7.22377.5/Microsoft.Common.CurrentVersion.targets(2318,5): error MSB3101: Could not write state file \"/__w/1/s/artifacts/obj/SourceBuildIntermediate/Release/netstandard2.0/SourceBuildIntermediate.proj.AssemblyReference.cache\". The file \u0027/__w/1/s/artifacts/obj/SourceBuildIntermediate/Release/netstandard2.0/SourceBuildIntermediate.proj.AssemblyReference.cache\u0027 already exists. [/__w/1/s/artifacts/obj/ArcadeGeneratedProjects/SourceBuildIntermediate/SourceBuildIntermediate.proj]\r\n##[error].dotnet/sdk/7.0.100-preview.7.22377.5/Microsoft.Common.CurrentVersion.targets(2318,5): error MSB3101: (NETCORE_ENGINEERING_TELEMETRY=AfterSourceBuild) Could not write state file \"/__w/1/s/artifacts/obj/SourceBuildIntermediate/Release/netstandard2.0/SourceBuildIntermediate.proj.AssemblyReference.cache\". The file \u0027/__w/1/s/artifacts/obj/SourceBuildIntermediate/Release/netstandard2.0/SourceBuildIntermediate.proj.AssemblyReference.cache\u0027 already exists.\r\n/__w/1/s/.dotnet/sdk/7.0.100-preview.7.22377.5/Microsoft.Common.CurrentVersion.targets(2318,5): error MSB3101: Could not write state file \"/__w/1/s/artifacts/obj/SourceBuildIntermediate/Release/netstandard2.0/SourceBuildIntermediate.proj.AssemblyReference.cache\". The file \u0027/__w/1/s/artifacts/obj/SourceBuildIntermediate/Release/netstandard2.0/SourceBuildIntermediate.proj.AssemblyReference.cache\u0027 already exists. [/__w/1/s/artifacts/obj/ArcadeGeneratedProjects/SourceBuildIntermediate/SourceBuildIntermediate.proj]\r\n##[error].dotnet/sdk/7.0.100-preview.7.22377.5/Microsoft.Common.CurrentVersion.targets(2318,5): error MSB3101: (NETCORE_ENGINEERING_TELEMETRY=AfterSourceBuild) Could not write state file \"/__w/1/s/artifacts/obj/SourceBuildIntermediate/Release/netstandard2.0/SourceBuildIntermediate.proj.AssemblyReference.cache\". The file \u0027/__w/1/s/artifacts/obj/SourceBuildIntermediate/Release/netstandard2.0/SourceBuildIntermediate.proj.AssemblyReference.cache\u0027 already exists.\r\n```\r\n\r\n```json\r\n {\r\n    \"ErrorMessage\" : \"Could not write state file\",\r\n    \"BuildRetry\": false\r\n }\r\n```\r\n\r\nFull log: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/37592/logs/106\r\nHit in: #76463\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ejkotas\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `Known Build Error`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-10-01T17:52:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5LcMyZ",
                                           "createdAt":  "2022-10-03T16:01:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "cc @MichaelSimons regarding `SourceBuildIntermediate.proj`",
                                           "updatedAt":  "2022-10-03T16:01:44Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Intermittent build failure in AfterSourceBuild: \"Could not write state file\"",
        "labels":  [
                       "area-Infrastructure",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/76912",
        "createdAt":  "2022-10-12T01:21:31Z",
        "number":  76912,
        "author":  "steveisok",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-08-22T15:42:17Z",
        "body":  "In order to make the runtime more source build friendly, we need to try to eliminate as many \"join points\" as possible in the official build.  We need to determine if it\u0027s even possible to split out crossdac packaging per configuration.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOTBbl-g==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5MBgd8",
                                           "createdAt":  "2022-10-12T01:21:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nIn order to make the runtime more source build friendly, we need to try to eliminate as many \"join points\" as possible in the official build.  We need to determine if it\u0027s even possible to split out crossdac packaging per configuration.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003esteveisok\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e8.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-10-12T01:21:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5MBnHH",
                                           "createdAt":  "2022-10-12T02:06:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCtr52g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "steveisok",
                                                                               "createdAt":  "2022-10-12T02:58:38Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "With the new support for step targets and the recent refactoring I did for container resources, as well as Linux Containers on Windows support, we have the ability to make the cross-dac packaging step fully independent of the build job, or alternatively, do the cross-dac build as part of the product build.",
                                           "updatedAt":  "2022-10-12T02:06:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5MBuFq",
                                           "createdAt":  "2022-10-12T02:59:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "Thanks @jkoritzinsky!  Good enough for me.",
                                           "updatedAt":  "2022-10-12T02:59:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5MCTuT",
                                           "createdAt":  "2022-10-12T06:47:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "Do we want to keep this open to track doing this work, or do we want to open a new issue tracking the work?",
                                           "updatedAt":  "2022-10-12T06:47:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5MCy1c",
                                           "createdAt":  "2022-10-12T08:40:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Let\u0027s keep this open to track the work.",
                                           "updatedAt":  "2022-10-12T08:40:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5MC2I4",
                                           "createdAt":  "2022-10-12T08:49:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@jkoritzinsky when you say step targets, are you referring to [`templateContext`](https://learn.microsoft.com/en-us/azure/devops/release-notes/2022/sprint-202-update#extended-yaml-pipelines-templates-can-now-be-passed-context-information-for-stages-jobs-and-deployments)?",
                                           "updatedAt":  "2022-10-12T08:49:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5MFNMH",
                                           "createdAt":  "2022-10-12T16:19:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCtvTkA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2022-10-12T18:41:55Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "No, I’m referring to the ability to use the `target` property on a step to run it in a different named container. Here’s the place we use it today:\r\n\r\nhttps://github.com/dotnet/runtime/blob/6ee57c0d1a8ef6ea6a5886b3367f04702fa07e58/eng/pipelines/installer/jobs/steps/build-linux-package.yml#L22",
                                           "updatedAt":  "2022-10-12T16:19:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5MFuX6",
                                           "createdAt":  "2022-10-12T18:25:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "cc: @hoyosjs \r\n\r\nIn the infra standup today, we discussed moving the cross-DAC build/package job into a separate pipeline along with the workloads job as both of them produce intermediate artifacts that we do not ship to customers (cross-DAC is for the symbol server only and the workloads job only produces assets that we insert into Visual Studio).",
                                           "updatedAt":  "2022-10-12T18:25:31Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "Investigate if crossdac packaging can be built per configuration",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/77215",
        "createdAt":  "2022-10-19T12:47:01Z",
        "number":  77215,
        "author":  "CarnaViire",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCrEiHw==",
                          "nodes":  [
                                        {
                                            "content":  "HEART",
                                            "user":  "kunalspathak",
                                            "createdAt":  "2022-10-19T13:31:09Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2022-11-21T19:51:06Z",
        "body":  "Recently, the ability to run Crank benchmarks on PRs was added to runtime repo by @kunalspathak (see configs [here](https://github.com/aspnet/Benchmarks/blob/main/build/prbenchmarks.runtime.windows_x64.config.yml)), and microbenchmarks were added there by @CarnaViire in https://github.com/aspnet/Benchmarks/pull/1755\r\n\r\nTesting the functionality in https://github.com/dotnet/runtime/pull/77008 has highlighted several areas for improvement, which I would be tracking here.\r\n\r\n## Main pain points:\r\n\r\n1) High number of failures (#77008 has only 1 successful run out of 8 so far, for different reasons) -- most frustrating are those which could be **fail-fast** (e.g. crank could not be run due to agent being down or due to incorrect arguments -- and you only learn that after ~30min build)\r\n1) Hard to find logs on failures -- runs happen on a private pipeline that uses scheduled runs and polling instead of being triggered by the comment, there is no link to/from your PR and there are a lot of no-op runs (you can only find \"your\" run by going inside each run and manually checking the logs).\r\n1) Time of full run, main part (~60-80%) of it is build (was reduced from ~1h to ~30min by https://github.com/aspnet/Benchmarks/pull/1763, but still high)\r\n\r\n\u003cdetails\u003e\r\n\u003csummary\u003eFull list of areas and points below\u003c/summary\u003e\r\n\r\n## Speed\r\n\r\n- [ ] Benchmark PR bot reacts in ~5 min, while /azp run bot reacts much faster, in less than a minute\r\n- [ ] Full runtime build happens twice (on main and on PR branch) which is extremely slow. Potential improvements: \r\n    - [x] ~~allow to build only libraries as a separate component~~ https://github.com/aspnet/Benchmarks/pull/1763\r\n    - [ ] track what was changes and build only the changed libs.\r\n\r\n## User experience\r\n\r\n- [ ] Tracking progress/stages (can be solved by pipelines integration, or in some other ways)\r\n- [x] ~~Include at least some information about errors + links to logs. Now it\u0027s just \"An error occured, please check the logs\", and it\u0027s unclear where to search for the logs. Even when you know where the logs are (currently they are [here](https://dev.azure.com/dnceng/internal/_build?definitionId=1088\u0026_a=summary)), the runs there are not linked to the runtime PR that had triggered it, so it\u0027s a manual search by opening all of the logs)~~\r\n- [x] ~~Minor styling nit: The result table is added as \"code block\", though it might look better as a normal table (and it is already in markdown table format)~~\r\n\r\n## Points of failure\r\n\r\n- [x] ~~Precheck crank agents and configs to enable fail-fast (e.g. not to wait for 50 min build to learn that crank can\u0027t be started due to agent being unavailable or other problems)~~\r\n- [ ] Be able to inform if the bot itself has crashed -- I\u0027ve seen the bot just going AWOL without any error comment -- that is very frustrating while there\u0027s no progress tracking (can be solved by pipelines integration, or in some other ways)\r\n\r\n## Pipelines integration\r\n\r\n- [ ] Runs could be added to the same \"checks\" page that has testing and all other pipelines -\u003e would solve tracking progress and finding the logs\r\n- [ ] Runs could potentially reuse pre-built runtime from testing pipelines\r\n- [ ] Main build and benchmark result could be saved and reused for incremental benchmark runs\r\n- [ ] PR bot monitoring comments could be separate from an agent/pipeline that builds branches and triggers Crank (that can be a separate pipeline triggered similar to how /azp run triggers pipelines. It would be nice if it could be triggered manually from pipelines interface as well)\r\n\r\n## Other platforms\r\n\r\n- [ ] Currently only Win x64 is supported (though other configs exist), as PR bot only runs on Win in CI, and build happens on PR bot machine ATM. May be fixed by splitting PR bot and build agent. To add:\r\n    - [ ] Linux x64\r\n    - [ ] Linux ARM\r\n    - [ ] Windows ARM\r\n\r\n\u003c/details\u003e\r\n\r\n----\r\n\r\nAdditional thoughts and comments welcome.\r\ncc @stephentoub @kunalspathak @sebastienros ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOTdik4Q==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5Mh7J2",
                                           "createdAt":  "2022-10-19T12:47:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nRecently, the ability to run Crank benchmarks on PRs was added to runtime repo by @kunalspathak (see configs [here](https://github.com/aspnet/Benchmarks/blob/main/build/prbenchmarks.runtime.windows_x64.config.yml)), and microbenchmarks were added there by @CarnaViire in https://github.com/aspnet/Benchmarks/pull/1755\r\n\r\nTesting the functionality in https://github.com/dotnet/runtime/pull/77008 has highlighted several areas for improvement, which I would be tracking here.\r\n\r\n## Speed\r\n\r\n- [ ] Benchmark PR bot reacts in ~5 min, while /azp run bot reacts much faster, in less than a minute\r\n- [ ] Full runtime build happens twice (on main and on PR branch) which is extremely slow. Potential improvements: \r\n    - [ ] allow to build only libraries as a separate component\r\n    - [ ] track what was changes and build only the changed libs.\r\n\r\n## User experience\r\n\r\n- [ ] Tracking progress/stages (can be solved by pipelines integration, or in some other ways)\r\n- [ ] Include at least some information about errors + links to logs. Now it\u0027s just \"An error occured, please check the logs\", and it\u0027s unclear where to search for the logs. Even when you know where the logs are (currently they are [here](https://dev.azure.com/dnceng/internal/_build?definitionId=1088\u0026_a=summary)), the runs there are not linked to the runtime PR that had triggered it, so it\u0027s a manual search by opening all of the logs)\r\n- [ ] Minor styling nit: The result table is added as \"code block\", though it might look better as a normal table (and it is already in markdown table format)\r\n\r\n## Points of failure\r\n\r\n- [ ] Precheck crank agents and configs to enable fail-fast (e.g. not to wait for 50 min build to learn that crank can\u0027t be started due to agent being unavailable or other problems)\r\n- [ ] Be able to inform if the bot itself has crashed -- I\u0027ve seen the bot just going AWOL without any error comment -- that is very frustrating while there\u0027s no progress tracking (can be solved by pipelines integration, or in some other ways)\r\n\r\n## Pipelines integration\r\n\r\n- [ ] Runs could be added to the same \"checks\" page that has testing and all other pipelines -\u003e would solve tracking progress and finding the logs\r\n- [ ] Runs could potentially reuse pre-built runtime from testing pipelines\r\n- [ ] Main build and benchmark result could be saved and reused for incremental benchmark runs\r\n- [ ] PR bot monitoring comments could be separate from an agent/pipeline that builds branches and triggers Crank (that can be a separate pipeline triggered similar to how /azp run triggers pipelines. It would be nice if it could be triggered manually from pipelines interface as well)\r\n\r\n## Other platforms\r\n\r\n- [ ] Currently only Win x64 is supported (though other configs exist), as PR bot only runs on Win in CI, and build happens on PR bot machine ATM. May be fixed by splitting PR bot and build agent. To add:\r\n    - [ ] Linux x64\r\n    - [ ] Linux ARM\r\n    - [ ] Windows ARM\r\n\r\n----\r\n\r\nAdditional thoughts and comments welcome.\r\ncc @stephentoub @kunalspathak @sebastienros \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eCarnaViire\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003eCarnaViire\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003eFuture\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-10-19T12:47:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5MjXbb",
                                           "createdAt":  "2022-10-19T17:22:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCuTC1A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "CarnaViire",
                                                                               "createdAt":  "2022-10-19T18:21:04Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "kunalspathak",
                                                                               "createdAt":  "2022-10-21T23:27:56Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "sebastienros",
                                           "body":  "### Logs\r\n\r\nThe logs are not displayed on the PR comments in case they might expose secrets (ENV, connection strings, ...). The runs are in our internal pool, and as such the logs should only be seen by users who have access to this pool. Linking to the page is fine IMO since AZDO\u0027s auth will kick in.\r\n\r\n### Runs frequency\r\n\r\nRuns occur every 5 mins. That\u0027s unfortunate and I\u0027d love it to be started as the comment is created, but we are not allowed (for security reasons AFAIR) to send webhooks from comments on this internal pipeline. So the pipeline is scheduled and checks all recent comments on a repo (polling). Another limitation is that the delay between scheduled pipelines can\u0027t be too short or AZDO blocks it. I am currently cheating it a little by creating multiple schedules.\r\n\r\n### Security\r\n\r\nThese benchmarks are on-demand, and only users with merge permission on the target branch can write a comment. This is important to understand as otherwise anyone would be able to trigger some benchmark (and custom code) on our internal pool. Triggering a benchmark requires the runtime dev to understand the PR and check for exploits, with the same scrutiny as if the PR was merge. It has the same impact, not less, not more. For devs it means that running a benchmark is a serious thing to do, don\u0027t run \"any\" random PR for benchmarks. For security engineers it means that it\u0027s as secure/unsecure as being able to merge a PR on `main`.\r\n\r\n### Build checks\r\n\r\nA benchmark could be executed on each commit as a \"check\" step to ensure it\u0027s not regressing specific things (within a margin). But for the runtime repository it\u0027s not practical as there are too many things that can vary. Two problems: we might benchmark something that didn\u0027t change in a PR, or we might not benchmark the thing that is changed. The bot could be configured cleverly based on tags (area), or ML, to detect which benchmark should be a requirement and be triggered as a check. Maybe not mandatory. I don\u0027t think it would slow down the build that much since it would be a parallel job. Could be an issue if used broadly as the perf machines would then be the bottleneck.\r\n\r\n### Efficiency\r\n\r\nYou can trigger PR benchmarks from your own machine though, or even run benchmarks from your local builds if you are the author of the PR. These are much better/faster options and it\u0027s very easy to do. I would recommend this bot for external contribution PRs only as it will prevent you from cloning and building forks. Nobody does it as it\u0027s too much churn, hence the bot to help.\r\n\r\nSpeed can be optimized to only build the component that a PR changes, like the GC, Libraries, JIT, ... Currently it\u0027s building the whole runtime as it\u0027s easier to test the feature. This is also the reason the comment ends with `runtime`. It\u0027s the __component__ part of the benchmark that you ask the bot to build before running a benchmark with the binaries it generated.\r\n\r\n### Benchmarking machines\r\n\r\nOther platforms are supported (ARM, Linux, ...) though I am still waiting for the lab engineers to add a Linux image to the AZDO pool that is used in this pipeline. We don\u0027t have this constraint in ASP.NET as our code in managed only and we can build for Linux benchmarks on a Windows machine.",
                                           "updatedAt":  "2022-10-19T17:22:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5N2KTh",
                                           "createdAt":  "2022-11-07T18:52:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCvKo5w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "CarnaViire",
                                                                               "createdAt":  "2022-11-07T18:52:29Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "kunalspathak",
                                                                               "createdAt":  "2022-11-07T19:55:31Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "sebastienros",
                                           "body":  "Things we are doing to improve the experience:\r\n\r\n- [x] Pre-check the crank command without custom binaries. In parallel of the build.\r\n- [x] Retry each run once (base + pr) when it fails as builds might fail on infrastructure problems (networking).\r\n- [x] Display a link to the build logs in the result comment. The link is passed from AZDO to `crank-pr` as an argument\r\n- [ ] Document `crank` command usage with examples specific to the runtime repository. The documentation will be available in the runtime and dotnet/performance repositories.",
                                           "updatedAt":  "2022-11-21T19:48:57Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "PR Benchmarks Improvements",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/78251",
        "createdAt":  "2022-11-11T21:44:28Z",
        "number":  78251,
        "author":  "jozkee",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-04-03T14:48:23Z",
        "body":  "Hit on https://github.com/dotnet/runtime/pull/77338\r\n\r\nhttps://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/80475/logs/313\r\n\r\n```\r\n2022-11-11T17:53:04.4648501Z /__w/1/s/src/tests/build.proj(437,5): error MSB3073: The command \"\"/__w/1/s/.dotnet/dotnet\" restore -r freebsd-x64 Common/XUnitWrapperLibrary/XUnitWrapperLibrary.csproj  /p:SetTFMForRestore=true /p:TargetOS=FreeBSD /p:TargetArchitecture=x64 /p:Configuration=Release /p:CrossBuild=true\" exited with code 1.\r\n2022-11-11T17:53:04.4778451Z \r\n2022-11-11T17:53:04.4779702Z Build FAILED.\r\n2022-11-11T17:53:04.4780940Z \r\n2022-11-11T17:53:04.4783365Z /__w/1/s/src/tests/build.proj(437,5): error MSB3073: The command \"\"/__w/1/s/.dotnet/dotnet\" restore -r freebsd-x64 Common/XUnitWrapperLibrary/XUnitWrapperLibrary.csproj  /p:SetTFMForRestore=true /p:TargetOS=FreeBSD /p:TargetArchitecture=x64 /p:Configuration=Release /p:CrossBuild=true\" exited with code 1.\r\n2022-11-11T17:53:04.4784520Z     0 Warning(s)\r\n2022-11-11T17:53:04.4785350Z     1 Error(s)\r\n2022-11-11T17:53:04.4785644Z \r\n2022-11-11T17:53:04.4786101Z Time Elapsed 00:00:19.84\r\n2022-11-11T17:53:04.5018884Z Build failed with exit code 1. Check errors above.\r\n2022-11-11T17:53:04.5025363Z Failed to build tests. See the build logs:\r\n2022-11-11T17:53:04.5026036Z     /__w/1/s/artifacts/log/TestBuild.FreeBSD.x64.Release.log\r\n2022-11-11T17:53:04.5027050Z     /__w/1/s/artifacts/log/TestBuild.FreeBSD.x64.Release.wrn\r\n2022-11-11T17:53:04.5027554Z     /__w/1/s/artifacts/log/TestBuild.FreeBSD.x64.Release.err\r\n2022-11-11T17:53:04.5028037Z     /__w/1/s/artifacts/log/TestBuild.FreeBSD.x64.Release.binlog\r\n2022-11-11T17:53:04.5100983Z ##[error]Bash exited with code \u00271\u0027.\r\n2022-11-11T17:53:04.5176307Z ##[section]Finishing: Build native test components\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOT33MMg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5ONs1M",
                                           "createdAt":  "2022-11-11T21:44:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nhttps://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/80475/logs/313\r\n\r\n```\r\n2022-11-11T17:53:04.4648501Z /__w/1/s/src/tests/build.proj(437,5): error MSB3073: The command \"\"/__w/1/s/.dotnet/dotnet\" restore -r freebsd-x64 Common/XUnitWrapperLibrary/XUnitWrapperLibrary.csproj  /p:SetTFMForRestore=true /p:TargetOS=FreeBSD /p:TargetArchitecture=x64 /p:Configuration=Release /p:CrossBuild=true\" exited with code 1.\r\n2022-11-11T17:53:04.4778451Z \r\n2022-11-11T17:53:04.4779702Z Build FAILED.\r\n2022-11-11T17:53:04.4780940Z \r\n2022-11-11T17:53:04.4783365Z /__w/1/s/src/tests/build.proj(437,5): error MSB3073: The command \"\"/__w/1/s/.dotnet/dotnet\" restore -r freebsd-x64 Common/XUnitWrapperLibrary/XUnitWrapperLibrary.csproj  /p:SetTFMForRestore=true /p:TargetOS=FreeBSD /p:TargetArchitecture=x64 /p:Configuration=Release /p:CrossBuild=true\" exited with code 1.\r\n2022-11-11T17:53:04.4784520Z     0 Warning(s)\r\n2022-11-11T17:53:04.4785350Z     1 Error(s)\r\n2022-11-11T17:53:04.4785644Z \r\n2022-11-11T17:53:04.4786101Z Time Elapsed 00:00:19.84\r\n2022-11-11T17:53:04.5018884Z Build failed with exit code 1. Check errors above.\r\n2022-11-11T17:53:04.5025363Z Failed to build tests. See the build logs:\r\n2022-11-11T17:53:04.5026036Z     /__w/1/s/artifacts/log/TestBuild.FreeBSD.x64.Release.log\r\n2022-11-11T17:53:04.5027050Z     /__w/1/s/artifacts/log/TestBuild.FreeBSD.x64.Release.wrn\r\n2022-11-11T17:53:04.5027554Z     /__w/1/s/artifacts/log/TestBuild.FreeBSD.x64.Release.err\r\n2022-11-11T17:53:04.5028037Z     /__w/1/s/artifacts/log/TestBuild.FreeBSD.x64.Release.binlog\r\n2022-11-11T17:53:04.5100983Z ##[error]Bash exited with code \u00271\u0027.\r\n2022-11-11T17:53:04.5176307Z ##[section]Finishing: Build native test components\r\n```\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eJozkee\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-11-11T21:44:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5OUeYZ",
                                           "createdAt":  "2022-11-14T16:04:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nHit on https://github.com/dotnet/runtime/pull/77338\r\n\r\nhttps://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/80475/logs/313\r\n\r\n```\r\n2022-11-11T17:53:04.4648501Z /__w/1/s/src/tests/build.proj(437,5): error MSB3073: The command \"\"/__w/1/s/.dotnet/dotnet\" restore -r freebsd-x64 Common/XUnitWrapperLibrary/XUnitWrapperLibrary.csproj  /p:SetTFMForRestore=true /p:TargetOS=FreeBSD /p:TargetArchitecture=x64 /p:Configuration=Release /p:CrossBuild=true\" exited with code 1.\r\n2022-11-11T17:53:04.4778451Z \r\n2022-11-11T17:53:04.4779702Z Build FAILED.\r\n2022-11-11T17:53:04.4780940Z \r\n2022-11-11T17:53:04.4783365Z /__w/1/s/src/tests/build.proj(437,5): error MSB3073: The command \"\"/__w/1/s/.dotnet/dotnet\" restore -r freebsd-x64 Common/XUnitWrapperLibrary/XUnitWrapperLibrary.csproj  /p:SetTFMForRestore=true /p:TargetOS=FreeBSD /p:TargetArchitecture=x64 /p:Configuration=Release /p:CrossBuild=true\" exited with code 1.\r\n2022-11-11T17:53:04.4784520Z     0 Warning(s)\r\n2022-11-11T17:53:04.4785350Z     1 Error(s)\r\n2022-11-11T17:53:04.4785644Z \r\n2022-11-11T17:53:04.4786101Z Time Elapsed 00:00:19.84\r\n2022-11-11T17:53:04.5018884Z Build failed with exit code 1. Check errors above.\r\n2022-11-11T17:53:04.5025363Z Failed to build tests. See the build logs:\r\n2022-11-11T17:53:04.5026036Z     /__w/1/s/artifacts/log/TestBuild.FreeBSD.x64.Release.log\r\n2022-11-11T17:53:04.5027050Z     /__w/1/s/artifacts/log/TestBuild.FreeBSD.x64.Release.wrn\r\n2022-11-11T17:53:04.5027554Z     /__w/1/s/artifacts/log/TestBuild.FreeBSD.x64.Release.err\r\n2022-11-11T17:53:04.5028037Z     /__w/1/s/artifacts/log/TestBuild.FreeBSD.x64.Release.binlog\r\n2022-11-11T17:53:04.5100983Z ##[error]Bash exited with code \u00271\u0027.\r\n2022-11-11T17:53:04.5176307Z ##[section]Finishing: Build native test components\r\n```\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eJozkee\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-11-14T16:04:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Pfcwy",
                                           "createdAt":  "2022-12-01T11:47:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jakobbotsch",
                                           "body":  "I removed the \"known build error\" again as it looks like it was hitting way too many other issues with the same text. It\u0027s hard to extract a message that will match only this restore error.",
                                           "updatedAt":  "2022-12-01T11:47:27Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Error MSB3073: dotnet restore failing in CI on FreeBSD",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/78427",
        "createdAt":  "2022-11-15T22:30:29Z",
        "number":  78427,
        "author":  "tannergooding",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-11-16T16:59:31Z",
        "body":  "As an example, see https://github.com/dotnet/runtime/pull/76642/checks?check_run_id=9487437169\r\n\r\nWhere one of the legs was rerun but then failed with\r\n\u003e Build log #L33\r\nArtifact mono_llvmfullaot_TestRunLogs_Linux_x64_release_innerloop already exists for build 82673.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOToUyDg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5Ob9t6",
                                           "createdAt":  "2022-11-15T22:30:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2022-11-15T22:30:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5OhAqH",
                                           "createdAt":  "2022-11-16T16:16:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nAs an example, see https://github.com/dotnet/runtime/pull/76642/checks?check_run_id=9487437169\r\n\r\nWhere one of the legs was rerun but then failed with\r\n\u003e Build log #L33\r\nArtifact mono_llvmfullaot_TestRunLogs_Linux_x64_release_innerloop already exists for build 82673.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003etannergooding\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-11-16T16:16:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5OhTIO",
                                           "createdAt":  "2022-11-16T16:59:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Yes, that\u0027s a known issue on our side. We never had the bandwidth to fix it. Presumably for retries, we could fix this by appending the retry count to the asset id. Marking this issue with the \"help wanted\" label.",
                                           "updatedAt":  "2022-11-16T16:59:24Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "CI rerun fails with \"Artifact * already exists for build #.\"",
        "labels":  [
                       "help wanted",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/78797",
        "createdAt":  "2022-11-24T03:51:43Z",
        "number":  78797,
        "author":  "kant2002",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-02-13T18:20:07Z",
        "body":  "I\u0027m building runtime on the Loongarch hardware and I discover that dotnet by itself very reliant on the arch-specific nugets.\r\nAlso even if I have SDK built for loongarch I still face some issues which is very delicate in nature.\r\n\r\nFor example self-contained apps require `Microsoft.NETCore.App.Runtime.linux-loongarch64` and `Microsoft.AspNetCore.App.Runtime.linux-loongarch64`. See https://github.com/dotnet/linker/issues/3130#issuecomment-1325198251\r\n\r\n- [ ] so who and where should distribute these bits, and under what name when they would be eventually produced? What interim solution for these kind of issues exists? https://github.com/dotnet/runtime/issues/78854\r\n\r\n- [ ] Similar to this https://github.com/dotnet/runtime/issues/78749 which is asking for a way to disable Crossgen2 at build level.\r\n- [ ] Also Mono does not supported on Loongarch https://github.com/dotnet/runtime/issues/78796\r\n\r\n/cc @shushanhf",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOTySUlQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5PB_ey",
                                           "createdAt":  "2022-11-24T03:51:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2022-11-24T03:51:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5PCDrY",
                                           "createdAt":  "2022-11-24T04:22:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nI\u0027m building runtime on the Loongarch hardware and I discover that dotnet by itself very reliant on the arch-specific nugets.\r\nAlso even if I have SDK built for loongarch I still face some issues which is very delicate in nature.\r\n\r\nFor example self-contained apps require `Microsoft.NETCore.App.Runtime.linux-loongarch64` and `Microsoft.AspNetCore.App.Runtime.linux-loongarch64`. See https://github.com/dotnet/linker/issues/3130#issuecomment-1325198251\r\n\r\n- [ ] so who and where should distribute these bits, and under what name when they would be eventually produced? What interim solution for these kind of issues exists?\r\n\r\n- [ ] Similar to this https://github.com/dotnet/runtime/issues/78749 which is asking for a way to disable Crossgen2 at build level.\r\n- [ ] Also Mono does not supported on Loongarch https://github.com/dotnet/runtime/issues/78796\r\n\r\n/cc @shushanhf\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ekant2002\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`, `arch-loongarch64`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-11-24T04:22:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5PF9yG",
                                           "createdAt":  "2022-11-25T02:41:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "shushanhf",
                                           "body":  "Hi, @jkotas \r\nThe https://github.com/dotnet/dotnet should be consider the LoongArch64.\r\n\r\nIs there some discussion about it ?\r\nMaybe my experience about construction the SDK3.1, SDK6.0, SDK7.0 for LoongArch is helpful.\r\n",
                                           "updatedAt":  "2022-11-25T02:41:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5PJHvM",
                                           "createdAt":  "2022-11-25T18:55:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "https://github.com/dotnet/arcade/issues/11584 is announcement for dotnet/dotnet. You can read more about that in the announcement. dotnet/arcade has the design documents and the discussions for dotnet/dotnet.\r\n\r\nFor example, Red Hat is building S390 port using https://github.com/dotnet/source-build today, and they will switch to dotnet/dotnet once it becomes ready. dotnet/dotnet is a better way to do source-build. I would expect that LoongArch64 can be on the same plan.",
                                           "updatedAt":  "2022-11-25T18:55:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5PJJSV",
                                           "createdAt":  "2022-11-25T19:08:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCwNswA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "kant2002",
                                                                               "createdAt":  "2022-11-25T19:18:07Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e self-contained apps require Microsoft.NETCore.App.Runtime.linux-loongarch64 and Microsoft.AspNetCore.App.Runtime.linux-loongarch64\r\n\r\nhttps://github.com/dotnet/source-build/issues/1215",
                                           "updatedAt":  "2022-11-25T19:08:26Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Build support for unknown archs - Loongarch in my case",
        "labels":  [
                       "area-Infrastructure",
                       "arch-loongarch64"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/79673",
        "createdAt":  "2022-12-14T20:05:42Z",
        "number":  79673,
        "author":  "am11",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-08-17T21:18:09Z",
        "body":  "We only embed sccid string on Unix binaries, because on Windows _version.c is not generated. To support the same in Windows binaries (in addition and unrelated to PE metadata), we would need to update `GenerateNativeVersionFile` target in arcade, `eng/native/version` and some CMake and MSBuild scripts.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOULGPtw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5Qlz7v",
                                           "createdAt":  "2022-12-14T20:05:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2022-12-14T20:05:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Ql0Bc",
                                           "createdAt":  "2022-12-14T20:06:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nWe only embed sccid string on Unix binaries, because on Windows _version.c is not generated. To support the same in Windows binaries (in addition and unrelated to PE metadata), we would need to update `GenerateNativeVersionFile` target in arcade, `eng/native/version` and some CMake and MSBuild scripts.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eam11\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-12-14T20:06:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5QsJCM",
                                           "createdAt":  "2022-12-15T21:46:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@am11 I wonder what would be the benefit of doing that when the same information is in the version resources of the windows dlls / executables?",
                                           "updatedAt":  "2022-12-15T21:46:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5QsV9r",
                                           "createdAt":  "2022-12-15T22:33:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "@janvorli, this was discussed in https://github.com/dotnet/runtime/pull/51835#discussion_r620700656 and it came up again in https://github.com/dotnet/runtime/pull/79623. 1) The embedded string makes it easy to query this information from published .NET applications on any platform from the command line. 2) On Windows, the published apps do not have commit information of dotnet/runtime as they do on Unix; runtime\u0027s version resource is not embedded there because we wanted to reserve it for user\u0027s version resource.",
                                           "updatedAt":  "2022-12-15T22:33:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5QsY-3",
                                           "createdAt":  "2022-12-15T22:50:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Ah, the published apps, I\u0027ve forgotten about those.",
                                           "updatedAt":  "2022-12-15T22:50:28Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Generate and embed _version.c in Windows native binaries",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/81034",
        "createdAt":  "2023-01-23T17:17:31Z",
        "number":  81034,
        "author":  "ashnaga",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-12-09T18:28:42Z",
        "body":  "With Debian 12 in pre-release, container team plan to create .NET 8 images based of Debian 12. Following the discussion in here https://github.com/dotnet/dotnet-docker/issues/4322, this issue is for testing the dotnet/runtime for Bookworm before .NET 8 preview 1.\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOlr3xug==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5TfQO5",
                                           "createdAt":  "2023-01-23T17:17:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2023-01-23T17:17:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5TfTFv",
                                           "createdAt":  "2023-01-23T17:25:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ashnaga",
                                           "body":  "@ViktorHofer ",
                                           "updatedAt":  "2023-01-23T17:25:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5TfZ16",
                                           "createdAt":  "2023-01-23T17:48:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@dotnet/runtime-infrastructure we plan to replace Debian 10 usage in our test matrixes with Debian 12 (https://github.com/dotnet/dotnet-docker/issues/4322#issuecomment-1379228297). Any objections to that? cc @wfurt ",
                                           "updatedAt":  "2023-01-23T17:49:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5TfZ-Q",
                                           "createdAt":  "2023-01-23T17:49:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nWith Debian 12 in pre-release, container team plan to create .NET 8 images based of Debian 12. Following the discussion in here https://github.com/dotnet/dotnet-docker/issues/4322, this issue is for testing the dotnet/runtime for Bookworm before .NET 8 preview 1.\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eashnaga\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-01-23T17:49:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5TfxCw",
                                           "createdAt":  "2023-01-23T19:05:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wfurt",
                                           "body":  "It seems to lack compat OpenSSL 1.1 e.g. offers only OpenSSL 3. That will currently break QUIC and HTTP3.\r\nConceptually, this is problem with MsQUIC but it is current limitation.\r\nI think it is OK to move forward as our users will do anyway.  ",
                                           "updatedAt":  "2023-01-23T19:05:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5euPdY",
                                           "createdAt":  "2023-06-13T12:10:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sangauit",
                                           "body":  "I\u0027m waiting for that too!",
                                           "updatedAt":  "2023-06-13T12:10:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6WupOO",
                                           "createdAt":  "2024-12-09T17:24:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "@agocke @ViktorHofer @wfurt - is there any action to take on this issue?  I see the change to docker packages was already merged.",
                                           "updatedAt":  "2024-12-09T17:24:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6WvfG6",
                                           "createdAt":  "2024-12-09T18:28:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wfurt",
                                           "body":  "I do see some tests being executed on Debian 12 e.g. I feel we should be ok here. The MsQuic support for OpneSSL 3.x was fixed and it should be working.",
                                           "updatedAt":  "2024-12-09T18:28:40Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  ".NET 8 dotnet/runtime Testing for Debian 12 (Bookworm)",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/81600",
        "createdAt":  "2023-02-03T16:12:57Z",
        "number":  81600,
        "author":  "mmitche",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-04T21:48:43Z",
        "body":  "### Description\n\nA few binaries in the 8.0 runtime build appear to not have a copyright header. This causes some warnings in the signing infra.\n\n### Reproduction Steps\n\nhttps://dev.azure.com/dnceng/internal/_build/results?buildId=2103341\u0026view=logs\u0026j=4d50a8bf-a143-51c7-5cc8-defff437e23b\u0026t=0b0b242f-bbcb-57b5-fe9f-26dc042642ec\r\n\r\n```\r\n  SIGN004: Signing 3rd party library \u0027D:\\a\\_work\\1\\s\\artifacts\\tmp\\Release\\ContainerSigning\\3346\\tools/net8.0/any/shims/win-x64/dotnet-pgo.exe\u0027 with Microsoft certificate \u0027MicrosoftDotNet500\u0027. The library is considered 3rd party library due to its copyright: \u0027\u0027.\r\n  SIGN004: Signing 3rd party library \u0027D:\\a\\_work\\1\\s\\artifacts\\tmp\\Release\\ContainerSigning\\3347\\tools/net8.0/any/shims/win-x86/dotnet-pgo.exe\u0027 with Microsoft certificate \u0027MicrosoftDotNet500\u0027. The library is considered 3rd party library due to its copyright: \u0027\u0027.\r\n  SIGN004: Signing 3rd party library \u0027D:\\a\\_work\\1\\s\\artifacts\\tmp\\Release\\ContainerSigning\\3348\\tools/net8.0/any/shims/win-arm/dotnet-pgo.exe\u0027 with Microsoft certificate \u0027MicrosoftDotNet500\u0027. The library is considered 3rd party library due to its copyright: \u0027\u0027.\r\n  SIGN004: Signing 3rd party library \u0027D:\\a\\_work\\1\\s\\artifacts\\tmp\\Release\\ContainerSigning\\6808\\tools/mono-aot-cross.exe\u0027 with Microsoft certificate \u0027MicrosoftDotNet500\u0027. The library is considered 3rd party library due to its copyright: \u0027\u0027.\r\n  SIGN004: Signing 3rd party library \u0027D:\\a\\_work\\1\\s\\artifacts\\tmp\\Release\\ContainerSigning\\6824\\tools/mono-aot-cross.exe\u0027 with Microsoft certificate \u0027MicrosoftDotNet500\u0027. The library is considered 3rd party library due to its copyright: \u0027\u0027.\r\n  SIGN004: Signing 3rd party library \u0027D:\\a\\_work\\1\\s\\artifacts\\tmp\\Release\\ContainerSigning\\6835\\tools/mono-aot-cross.exe\u0027 with Microsoft certificate \u0027MicrosoftDotNet500\u0027. The library is considered 3rd party library due to its copyright: \u0027\u0027.\r\n  SIGN004: Signing 3rd party library \u0027D:\\a\\_work\\1\\s\\artifacts\\tmp\\Release\\ContainerSigning\\6846\\tools/mono-aot-cross.exe\u0027 with Microsoft certificate \u0027MicrosoftDotNet500\u0027. The library is considered 3rd party library due to its copyright: \u0027\u0027.\r\n  SIGN004: Signing 3rd party library \u0027D:\\a\\_work\\1\\s\\artifacts\\tmp\\Release\\ContainerSigning\\6857\\tools/mono-aot-cross.exe\u0027 with Microsoft certificate \u0027MicrosoftDotNet500\u0027. The library is considered 3rd party library due to its copyright: \u0027\u0027.\r\n```\n\n### Expected behavior\n\nFiles should have a copyright header\n\n### Actual behavior\n\nThere is no copyright header.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOVQLYYg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5UZ8FK",
                                           "createdAt":  "2023-02-03T16:13:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2023-02-03T16:13:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5UZ8IH",
                                           "createdAt":  "2023-02-03T16:13:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mmitche",
                                           "body":  "@hoyosjs @carlossanlop ",
                                           "updatedAt":  "2023-02-03T16:13:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5UaDpN",
                                           "createdAt":  "2023-02-03T16:37:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "carlossanlop",
                                           "body":  "@mmitche Are the warnings being treated as errors? In other words, is this blocking?",
                                           "updatedAt":  "2023-02-03T16:37:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5UaEZD",
                                           "createdAt":  "2023-02-03T16:40:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mmitche",
                                           "body":  "Not blocking.",
                                           "updatedAt":  "2023-02-03T16:40:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5UmZkQ",
                                           "createdAt":  "2023-02-06T16:18:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\n\nA few binaries in the 8.0 runtime build appear to not have a copyright header. This causes some warnings in the signing infra.\n\n### Reproduction Steps\n\nhttps://dev.azure.com/dnceng/internal/_build/results?buildId=2103341\u0026view=logs\u0026j=4d50a8bf-a143-51c7-5cc8-defff437e23b\u0026t=0b0b242f-bbcb-57b5-fe9f-26dc042642ec\r\n\r\n```\r\n  SIGN004: Signing 3rd party library \u0027D:\\a\\_work\\1\\s\\artifacts\\tmp\\Release\\ContainerSigning\\3346\\tools/net8.0/any/shims/win-x64/dotnet-pgo.exe\u0027 with Microsoft certificate \u0027MicrosoftDotNet500\u0027. The library is considered 3rd party library due to its copyright: \u0027\u0027.\r\n  SIGN004: Signing 3rd party library \u0027D:\\a\\_work\\1\\s\\artifacts\\tmp\\Release\\ContainerSigning\\3347\\tools/net8.0/any/shims/win-x86/dotnet-pgo.exe\u0027 with Microsoft certificate \u0027MicrosoftDotNet500\u0027. The library is considered 3rd party library due to its copyright: \u0027\u0027.\r\n  SIGN004: Signing 3rd party library \u0027D:\\a\\_work\\1\\s\\artifacts\\tmp\\Release\\ContainerSigning\\3348\\tools/net8.0/any/shims/win-arm/dotnet-pgo.exe\u0027 with Microsoft certificate \u0027MicrosoftDotNet500\u0027. The library is considered 3rd party library due to its copyright: \u0027\u0027.\r\n  SIGN004: Signing 3rd party library \u0027D:\\a\\_work\\1\\s\\artifacts\\tmp\\Release\\ContainerSigning\\6808\\tools/mono-aot-cross.exe\u0027 with Microsoft certificate \u0027MicrosoftDotNet500\u0027. The library is considered 3rd party library due to its copyright: \u0027\u0027.\r\n  SIGN004: Signing 3rd party library \u0027D:\\a\\_work\\1\\s\\artifacts\\tmp\\Release\\ContainerSigning\\6824\\tools/mono-aot-cross.exe\u0027 with Microsoft certificate \u0027MicrosoftDotNet500\u0027. The library is considered 3rd party library due to its copyright: \u0027\u0027.\r\n  SIGN004: Signing 3rd party library \u0027D:\\a\\_work\\1\\s\\artifacts\\tmp\\Release\\ContainerSigning\\6835\\tools/mono-aot-cross.exe\u0027 with Microsoft certificate \u0027MicrosoftDotNet500\u0027. The library is considered 3rd party library due to its copyright: \u0027\u0027.\r\n  SIGN004: Signing 3rd party library \u0027D:\\a\\_work\\1\\s\\artifacts\\tmp\\Release\\ContainerSigning\\6846\\tools/mono-aot-cross.exe\u0027 with Microsoft certificate \u0027MicrosoftDotNet500\u0027. The library is considered 3rd party library due to its copyright: \u0027\u0027.\r\n  SIGN004: Signing 3rd party library \u0027D:\\a\\_work\\1\\s\\artifacts\\tmp\\Release\\ContainerSigning\\6857\\tools/mono-aot-cross.exe\u0027 with Microsoft certificate \u0027MicrosoftDotNet500\u0027. The library is considered 3rd party library due to its copyright: \u0027\u0027.\r\n```\n\n### Expected behavior\n\nFiles should have a copyright header\n\n### Actual behavior\n\nThere is no copyright header.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003emmitche\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-02-06T16:18:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5UmuUd",
                                           "createdAt":  "2023-02-06T17:14:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "cc @steveisok @directhex for mono-aot-cross.exe\r\ncc @hoyosjs @agocke for dotnet-pgo",
                                           "updatedAt":  "2023-02-06T17:14:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5UnBJ3",
                                           "createdAt":  "2023-02-06T18:00:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "agocke",
                                           "body":  "~~I don\u0027t think this is about copyright header -- aren\u0027t those binaries?~~ I think I don\u0027t know what is meant by copyright header here. Presumably not the thing that appears at the top of files.",
                                           "updatedAt":  "2023-02-06T18:01:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5UnEu8",
                                           "createdAt":  "2023-02-06T18:08:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mmitche",
                                           "body":  "It\u0027s not. It\u0027s the copyright field in the PE header.",
                                           "updatedAt":  "2023-02-06T18:08:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5UoB4N",
                                           "createdAt":  "2023-02-06T21:27:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "Locally I see this getting generated: \r\n![image](https://user-images.githubusercontent.com/19413848/217091264-f291b2d9-79dd-48c3-9aec-69dd24884606.png)\r\n\r\nDo you have a file to share @mmitche? Since this is a native file, it would be in the rsrc directory of the file.",
                                           "updatedAt":  "2023-02-06T21:27:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5UoMsw",
                                           "createdAt":  "2023-02-06T21:52:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mmitche",
                                           "body":  "![image](https://user-images.githubusercontent.com/8725170/217096073-710093f6-1b55-4520-acb7-deffb8374a2c.png)\r\n\r\nFrom\r\n\r\n![image](https://user-images.githubusercontent.com/8725170/217096124-12127a33-be60-4009-8e99-ceb507d84411.png)\r\n",
                                           "updatedAt":  "2023-02-06T21:52:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5UxRoA",
                                           "createdAt":  "2023-02-08T08:17:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "I believe the resource only gets generated on Windows - we don\u0027t generate shim metadata on Linux.",
                                           "updatedAt":  "2023-02-08T08:17:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5VAthi",
                                           "createdAt":  "2023-02-10T19:34:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "directhex",
                                           "body":  "Done on our side.",
                                           "updatedAt":  "2023-02-10T19:34:57Z"
                                       }
                                   ],
                         "totalCount":  12
                     },
        "title":  "Missing copyright header in some runtime binaries",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/82011",
        "createdAt":  "2023-02-12T11:29:27Z",
        "number":  82011,
        "author":  "am11",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCudDzQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "akoeplinger",
                                            "createdAt":  "2023-02-13T17:04:28Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ViktorHofer",
                                            "createdAt":  "2023-02-17T13:22:10Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2023-02-13T18:18:14Z",
        "body":  "Naming of output directories have improved on Unix after @ViktorHofer\u0027s https://github.com/dotnet/runtime/pull/80164, as it was done on Windows earlier.\r\n\r\nHowever, there are still some inconsistencies, hence room for improvement. For example, with `./build.sh clr+libs` on macOS, the bin directory has these variants:\r\n \r\n```sh\r\n$ ./build.sh clr+libs\r\n$ find artifacts/bin -iname \u0027*osx*arm64*\u0027\r\n\r\nartifacts/bin/osx-arm64.Debug\r\nartifacts/bin/native/net8.0-osx-Debug-arm64\r\nartifacts/bin/runtime/net8.0-osx-Debug-arm64\r\nartifacts/bin/coreclr/osx.arm64.Debug\r\nartifacts/bin/coreclr/osx.arm64.Debug/SuperFileCheck/runtimes/osx.11.0-arm64  # (versioned RID -\u003e unnecessary)\r\nartifacts/bin/runtime.osx-arm64.runtime.native.System.IO.Ports\r\nartifacts/bin/microsoft.netcore.app.runtime.osx-arm64\r\nartifacts/bin/microsoft.netcore.app.runtime.osx-arm64/Debug/runtimes/osx-arm64\r\nartifacts/bin/testhost/net8.0-osx-Debug-arm64\r\n```\r\n\r\nNotice hyphen `osx-arm64` vs. period `osx.arm64`. Then different order `osx-Debug-arm64` vs. `osx-arm64.Debug`.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOVQ5p6w==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5VDmnG",
                                           "createdAt":  "2023-02-12T11:29:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2023-02-12T11:29:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5VDmnr",
                                           "createdAt":  "2023-02-12T11:29:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nNaming of output directories have improved on Unix after @ViktorHofer\u0027s https://github.com/dotnet/runtime/pull/80164, as it was done on Windows earlier.\r\n\r\nHowever, there are still some inconsistencies, hence room for improvement. For example, with `./build.sh clr+libs` on macOS, the bin directory has these variants:\r\n \r\n```sh\r\n$ ./build.sh clr+libs\r\n$ find artifacts/bin -iname \u0027*osx*arm64*\u0027\r\n\r\nartifacts/bin/osx-arm64.Debug\r\nartifacts/bin/native/net8.0-osx-Debug-arm64\r\nartifacts/bin/runtime/net8.0-osx-Debug-arm64\r\nartifacts/bin/coreclr/osx.arm64.Debug\r\nartifacts/bin/coreclr/osx.arm64.Debug/SuperFileCheck/runtimes/osx.11.0-arm64  # (versioned RID -\u003e unnecessary)\r\nartifacts/bin/runtime.osx-arm64.runtime.native.System.IO.Ports\r\nartifacts/bin/microsoft.netcore.app.runtime.osx-arm64\r\nartifacts/bin/microsoft.netcore.app.runtime.osx-arm64/Debug/runtimes/osx-arm64\r\nartifacts/bin/testhost/net8.0-osx-Debug-arm64\r\n```\r\n\r\nNotice hyphen `osx-arm64` vs. period `osx.arm64`. Then different order `osx-Debug-arm64` vs. `osx-arm64.Debug`.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eam11\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-02-12T11:29:42Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "artifiacts/bin sub-directories naming",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/83047",
        "createdAt":  "2023-03-06T21:29:12Z",
        "number":  83047,
        "author":  "agocke",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-03-06T21:48:55Z",
        "body":  "See https://helixre107v0xdcypoyl9e7f.blob.core.windows.net/dotnet-runtime-refs-pull-83041-merge-db6a1b833d39419584/System.Net.Http.Functional.Tests/1/console.b1f74ffd.log?helixlogtype=result\r\n\r\nMachine is win-x64 and a dump was collected. I would expect a stack trace to be created here.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOVtjYMQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5W2IF1",
                                           "createdAt":  "2023-03-06T21:29:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nSee https://helixre107v0xdcypoyl9e7f.blob.core.windows.net/dotnet-runtime-refs-pull-83041-merge-db6a1b833d39419584/System.Net.Http.Functional.Tests/1/console.b1f74ffd.log?helixlogtype=result\r\n\r\nMachine is win-x64 and a dump was collected. I would expect a stack trace to be created here.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eagocke\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-03-06T21:29:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5W2IQq",
                                           "createdAt":  "2023-03-06T21:29:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "agocke",
                                           "body":  "@hoyosjs Any ideas?",
                                           "updatedAt":  "2023-03-06T21:29:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5W2K35",
                                           "createdAt":  "2023-03-06T21:39:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC3Ssjw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "agocke",
                                                                               "createdAt":  "2023-03-06T21:48:01Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "We haven\u0027t hooked up the stack trace dumping for the libraries test runs, and the current Merge-on-Red initiative is focused on the runtime tests, where native crashes are more common. We may eventually bring over the stack trace dumping for these tests, but it\u0027s currently out of scope for that initiative.",
                                           "updatedAt":  "2023-03-06T21:39:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5W2Ngx",
                                           "createdAt":  "2023-03-06T21:48:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "agocke",
                                           "body":  "Adjusted title to reflect that. Makes sense.",
                                           "updatedAt":  "2023-03-06T21:48:55Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "No stack trace for crashes in libraries tests",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/84127",
        "createdAt":  "2023-03-30T14:14:33Z",
        "number":  84127,
        "author":  "omajid",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-08T17:05:21Z",
        "body":  "### Description\r\n\r\nThe dotnet/runtime build fails when running on Alpine in source-build mode with a portable configuration:\r\n\r\n``` \r\n  /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platforms.csproj(63,5): error MSB4018: The \"GenerateRuntimeGraph\" task failed unexpectedly. [TargetFramework=net8.0]\r\n  /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platforms.csproj(63,5): error MSB4018: System.InvalidOperationException: AdditionalRuntimeIdentifier x64 was specified, which could not be found in any existing RuntimeGroup, and no parent was specified. [TargetFramework=net8.0]\r\n  /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platforms.csproj(63,5): error MSB4018:    at Microsoft.NETCore.Platforms.BuildTasks.RuntimeGroupCollection.AddRuntimeIdentifier(RID rid, String parent) in /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/RuntimeGroupCollection.cs:line 116 [TargetFramework=net8.0]\r\n  /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platforms.csproj(63,5): error MSB4018:    at Microsoft.NETCore.Platforms.BuildTasks.RuntimeGroupCollection.AddRuntimeIdentifier(RID rid, String parent) in /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/RuntimeGroupCollection.cs:line 140 [TargetFramework=net8.0]\r\n  /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platforms.csproj(63,5): error MSB4018:    at Microsoft.NETCore.Platforms.BuildTasks.RuntimeGroupCollection.AddRuntimeIdentifier(RID rid, String parent) in /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/RuntimeGroupCollection.cs:line 140 [TargetFramework=net8.0]\r\n  /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platforms.csproj(63,5): error MSB4018:    at Microsoft.NETCore.Platforms.BuildTasks.RuntimeGroupCollection.AddRuntimeIdentifier(String runtimeIdentifier, String parent) in /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/RuntimeGroupCollection.cs:line 39 [TargetFramework=net8.0]\r\n  /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platforms.csproj(63,5): error MSB4018:    at Microsoft.NETCore.Platforms.BuildTasks.GenerateRuntimeGraph.AddRuntimeIdentifiers(ICollection`1 runtimeGroups) in /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/GenerateRuntimeGraph.cs:line 327 [TargetFramework=net8.0]\r\n  /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platforms.csproj(63,5): error MSB4018:    at Microsoft.NETCore.Platforms.BuildTasks.GenerateRuntimeGraph.Execute() in /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/GenerateRuntimeGraph.cs:line 157 [TargetFramework=net8.0]\r\n  /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platforms.csproj(63,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [TargetFramework=net8.0]\r\n  /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platforms.csproj(63,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [TargetFramework=net8.0]\r\n```\r\n\r\nThe problem is most visible with .NET 6, because dotnet/runtime is built in portable mode as part of the end-to-end source-build process.\r\n\r\nWith .NET 7 and .NET 8, source-build only builds dotnet/runtime in non-portable mode, so this problem doesn\u0027t appear there out of the box. It only appears when building dotnet/runtime by itself, in a configuration that\u0027s not used by source-build.\r\n\r\n### Reproduction Steps\r\n\r\nCreate an alpine container using a `Dockerfile`\r\n\r\n```Dockerfile\r\n# Dockerfile suitable for building .NET on Alpine\r\n\r\nFROM alpine:3.17\r\n\r\nRUN apk update \u0026\u0026 \\\r\n    apk add \\\r\n    bash \\\r\n    binutils \\\r\n    clang \\\r\n    cmake \\\r\n    git \\\r\n    gcc \\\r\n    icu-dev \\\r\n    krb5-dev \\\r\n    llvm \\\r\n    libstdc++ \\\r\n    linux-headers \\\r\n    lttng-ust-dev \\\r\n    make \\\r\n    musl-dev \\\r\n    openssl-dev \\\r\n    python3 \\\r\n    zlib-dev \\\r\n```\r\n\r\nThen `git clone https://github.com/dotnet/runtime` in the container and try and build runtime in source-build mode in the appropriate branch:\r\n\r\nmain:\r\n\r\n    ./build.sh -p:TargetRid=linux-musl-x64 -c Release --restore --build --pack /p:ArcadeBuildFromSource=true -bl\r\n\r\nrelease/7.0 and release/6.0\r\n\r\n    ./build.sh -c Release --restore --build --pack /p:ArcadeBuildFromSource=true -bl\r\n\r\n### Expected behavior\r\n\r\nBuild works\r\n\r\n### Actual behavior\r\n\r\nBuild fails\r\n\r\n### Regression?\r\n\r\n_No response_\r\n\r\n### Known Workarounds\r\n\r\n_No response_\r\n\r\n### Configuration\r\n\r\n_No response_\r\n\r\n### Other information\r\n\r\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOWV5Kng==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5Y1YFO",
                                           "createdAt":  "2023-03-30T14:16:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "omajid",
                                           "body":  "cc @ayakael @crummel @mthalman  @MichaelSimons @tmds ",
                                           "updatedAt":  "2023-03-30T14:16:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Y1dQf",
                                           "createdAt":  "2023-03-30T14:29:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tmds",
                                           "body":  "This is probably due to https://github.com/dotnet/runtime/pull/77508 being merged in 6.0 for runtime, but not the changes in installer: https://github.com/dotnet/installer/pull/14816.\r\n\r\nThe fix is to revert https://github.com/dotnet/runtime/pull/77508 and maybe some other PRs that got merged for eliminating the portable build with 6.0.",
                                           "updatedAt":  "2023-03-30T14:29:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Y1iIM",
                                           "createdAt":  "2023-03-30T14:41:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ayakael",
                                           "body":  "\u003e This is probably due to #77508 being merged in 6.0 for runtime, but not the changes in installer: [dotnet/installer#14816](https://github.com/dotnet/installer/pull/14816).\r\n\u003e \r\n\u003e The fix is to revert #77508 and maybe some other PRs that got merged for eliminating the portable build with 6.0.\r\n\r\nReverting this particular one would break a workaround we use for https://github.com/dotnet/runtime/issues/73525 as TargetRid would never be passed to __DistroRid. I\u0027m looking into this right now to propose a better fix.",
                                           "updatedAt":  "2023-03-30T14:41:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Y1kIh",
                                           "createdAt":  "2023-03-30T14:46:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tmds",
                                           "body":  "\u003e Reverting this particular one would break a workaround we use for #73525 as TargetRid would never be passed to __DistroRid\r\n\r\nThe fix for this can backported.",
                                           "updatedAt":  "2023-03-30T14:46:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Y1qDb",
                                           "createdAt":  "2023-03-30T15:00:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ayakael",
                                           "body":  "\u003e tmds\r\n\r\nCould you point to the fix for this so I can backport?",
                                           "updatedAt":  "2023-03-30T15:00:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Y16X5",
                                           "createdAt":  "2023-03-30T15:43:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "omajid",
                                           "body":  "\u003e This is probably due to https://github.com/dotnet/runtime/pull/77508 being merged in 6.0 for runtime, but not the changes in installer: https://github.com/dotnet/installer/pull/14816.\r\n\r\nI am not sure I follow. I ran into this issue when building dotnet/runtime standalone. How is dotnet/installer involved?",
                                           "updatedAt":  "2023-03-30T15:44:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Y1_y6",
                                           "createdAt":  "2023-03-30T15:58:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC45kkg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "omajid",
                                                                               "createdAt":  "2023-03-30T16:01:37Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "tmds",
                                           "body":  "\u003e I am not sure I follow. I ran into this issue when building dotnet/runtime standalone.\r\n\r\n`SourceBuild.props` no longer worked standalone with the changes for the non-portable build. That is fixed on `main`.\r\n\r\nIf you want to make it work standalone on 6.0 as-is, you can add `/p:BaseOS=`.\r\n\r\n\u003e Could you point to the fix for this so I can backport?\r\n\r\nI think that would be https://github.com/dotnet/runtime/pull/80901 and https://github.com/dotnet/runtime/pull/81497",
                                           "updatedAt":  "2023-03-30T15:58:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Y2DkU",
                                           "createdAt":  "2023-03-30T16:09:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ayakael",
                                           "body":  "\u003e \u003e This is probably due to #77508 being merged in 6.0 for runtime, but not the changes in installer: [dotnet/installer#14816](https://github.com/dotnet/installer/pull/14816).\r\n\u003e \r\n\u003e I am not sure I follow. I ran into this issue when building dotnet/runtime standalone. How is dotnet/installer involved?\r\n\r\nApplying the following diff yields the same behaviour, as well: \r\n```diff\r\ndiff --git a/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platforms.csproj b/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platforms.csproj\r\nindex 84d4bb88604..9fc8774c083 100644\r\n--- a/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platforms.csproj\r\n+++ b/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platforms.csproj\r\n@@ -18,7 +18,7 @@\r\n     \u003cPackageDescription\u003eProvides runtime information required to resolve target framework, platform, and runtime specific implementations of .NETCore packages.\u003c/PackageDescription\u003e\r\n \r\n     \u003c!-- When building from source, ensure the RID we\u0027re building for is part of the RID graph --\u003e\r\n-    \u003cAdditionalRuntimeIdentifiers Condition=\"\u0027$(DotNetBuildFromSource)\u0027 == \u0027true\u0027\"\u003e$(AdditionalRuntimeIdentifiers);$(OutputRID)\u003c/AdditionalRuntimeIdentifiers\u003e\r\n+    \u003cAdditionalRuntimeIdentifiers Condition=\"\u0027$(DotNetBuildFromSource)\u0027 == \u0027true\u0027\"\u003elinux-musl-x64\u003c/AdditionalRuntimeIdentifiers\u003e\r\n     \u003cServicingVersion\u003e8\u003c/ServicingVersion\u003e\r\n     \u003cGeneratePackageOnBuild\u003etrue\u003c/GeneratePacm kageOnBuild\u003e\r\n   \u003c/PropertyGroup\u003e\r\n```\r\n\r\nThus, this seems to have to do something with how GenerateRuntimeGraph parses AdditionalRuntimeIdentifiers. If it had to do with how OutputRid was set (or not, in the case of lack of the installer backport), this would\u0027ve fixed the error. \r\n\r\nAlso, re-reading omajid\u0027s tests, they also tested against `main`. So, there\u0027s someting wrong with the code regardless of the backport.\r\n\r\n\r\n\u003e \u003e I am not sure I follow. I ran into this issue when building dotnet/runtime standalone.\r\n\u003e \r\n\u003e `SourceBuild.props` no longer worked standalone with the changes for the non-portable build. That is fixed on `main`.\r\n\u003e \r\n\u003e If you want to make it work standalone on 6.0 as-is, you can add `/p:BaseOS=`.\r\n\u003e \r\n\u003e \u003e Could you point to the fix for this so I can backport?\r\n\u003e \r\n\u003e I think that would be #80901 and #81497\r\n\r\nAwesome, thank you for pointing that out :)",
                                           "updatedAt":  "2023-03-30T16:09:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Y2Gv_",
                                           "createdAt":  "2023-03-30T16:18:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tmds",
                                           "body":  "\u003e Thus, this seems to have to do something with how GenerateRuntimeGraph parses AdditionalRuntimeIdentifiers. If it had to do with how OutputRid was set (or not, in the case of lack of the installer backport), this would\u0027ve fixed the error.\r\n\r\nThere were other PRs backported to 6.0 for eliminating portable build, like https://github.com/dotnet/runtime/pull/77510.\r\n\r\nI think we should start by reverting those, and seeing if there is still an issue to be solved.\r\n\r\n\u003e Also, re-reading omajid\u0027s tests, they also tested against main. So, there\u0027s someting wrong with the code regardless of the backport.\r\n\r\nafaik everything works well on `main`.",
                                           "updatedAt":  "2023-03-30T16:18:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Y2_FR",
                                           "createdAt":  "2023-03-30T19:19:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\r\n\r\nThe dotnet/runtime build fails when running on Alpine in source-build mode with a portable configuration:\r\n\r\n``` \r\n  /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platforms.csproj(63,5): error MSB4018: The \"GenerateRuntimeGraph\" task failed unexpectedly. [TargetFramework=net8.0]\r\n  /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platforms.csproj(63,5): error MSB4018: System.InvalidOperationException: AdditionalRuntimeIdentifier x64 was specified, which could not be found in any existing RuntimeGroup, and no parent was specified. [TargetFramework=net8.0]\r\n  /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platforms.csproj(63,5): error MSB4018:    at Microsoft.NETCore.Platforms.BuildTasks.RuntimeGroupCollection.AddRuntimeIdentifier(RID rid, String parent) in /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/RuntimeGroupCollection.cs:line 116 [TargetFramework=net8.0]\r\n  /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platforms.csproj(63,5): error MSB4018:    at Microsoft.NETCore.Platforms.BuildTasks.RuntimeGroupCollection.AddRuntimeIdentifier(RID rid, String parent) in /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/RuntimeGroupCollection.cs:line 140 [TargetFramework=net8.0]\r\n  /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platforms.csproj(63,5): error MSB4018:    at Microsoft.NETCore.Platforms.BuildTasks.RuntimeGroupCollection.AddRuntimeIdentifier(RID rid, String parent) in /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/RuntimeGroupCollection.cs:line 140 [TargetFramework=net8.0]\r\n  /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platforms.csproj(63,5): error MSB4018:    at Microsoft.NETCore.Platforms.BuildTasks.RuntimeGroupCollection.AddRuntimeIdentifier(String runtimeIdentifier, String parent) in /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/RuntimeGroupCollection.cs:line 39 [TargetFramework=net8.0]\r\n  /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platforms.csproj(63,5): error MSB4018:    at Microsoft.NETCore.Platforms.BuildTasks.GenerateRuntimeGraph.AddRuntimeIdentifiers(ICollection`1 runtimeGroups) in /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/GenerateRuntimeGraph.cs:line 327 [TargetFramework=net8.0]\r\n  /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platforms.csproj(63,5): error MSB4018:    at Microsoft.NETCore.Platforms.BuildTasks.GenerateRuntimeGraph.Execute() in /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/GenerateRuntimeGraph.cs:line 157 [TargetFramework=net8.0]\r\n  /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platforms.csproj(63,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [TargetFramework=net8.0]\r\n  /runtime/artifacts/source-build/self/src/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platforms.csproj(63,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [TargetFramework=net8.0]\r\n```\r\n\r\nThe problem is most visible with .NET 6, because dotnet/runtime is built in portable mode as part of the end-to-end source-build process.\r\n\r\nWith .NET 7 and .NET 8, source-build only builds dotnet/runtime in non-portable mode, so this problem doesn\u0027t appear there out of the box. It only appears when building dotnet/runtime by itself, in a configuration that\u0027s not used by source-build.\r\n\r\n### Reproduction Steps\r\n\r\nCreate an alpine container using a `Dockerfile`\r\n\r\n```Dockerfile\r\n# Dockerfile suitable for building .NET on Alpine\r\n\r\nFROM alpine:3.17\r\n\r\nRUN apk update \u0026\u0026 \\\r\n    apk add \\\r\n    bash \\\r\n    binutils \\\r\n    clang \\\r\n    cmake \\\r\n    git \\\r\n    gcc \\\r\n    icu-dev \\\r\n    krb5-dev \\\r\n    llvm \\\r\n    libstdc++ \\\r\n    linux-headers \\\r\n    lttng-ust-dev \\\r\n    make \\\r\n    musl-dev \\\r\n    openssl-dev \\\r\n    python3 \\\r\n    zlib-dev \\\r\n```\r\n\r\nThen `git clone https://github.com/dotnet/runtime` in the container and try and build runtime in source-build mode in the appropriate branch:\r\n\r\nmain:\r\n\r\n    ./build.sh -p:TargetRid=linux-musl-x64 -c Release --restore --build --pack /p:ArcadeBuildFromSource=true -bl\r\n\r\nrelease/7.0 and release/6.0\r\n\r\n    ./build.sh -c Release --restore --build --pack /p:ArcadeBuildFromSource=true -bl\r\n\r\n### Expected behavior\r\n\r\nBuild works\r\n\r\n### Actual behavior\r\n\r\nBuild fails\r\n\r\n### Regression?\r\n\r\n_No response_\r\n\r\n### Known Workarounds\r\n\r\n_No response_\r\n\r\n### Configuration\r\n\r\n_No response_\r\n\r\n### Other information\r\n\r\n_No response_\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eomajid\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-03-30T19:19:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ZKgF5",
                                           "createdAt":  "2023-04-04T12:56:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tmds",
                                           "body":  "@omajid @ayakael is there an issue on `main`?\r\n\r\nAre you looking into fixing the issue with `6.0`? If you want, I can look into it.",
                                           "updatedAt":  "2023-04-04T12:56:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ZKk5T",
                                           "createdAt":  "2023-04-04T13:09:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "omajid",
                                           "body":  "\u003e is there an issue on main?\r\n\r\nOn `main`, this command fails when running on Alpine.\r\n\r\n    ./build.sh -p:TargetRid=linux-musl-x64 -c Release --restore --build --pack /p:ArcadeBuildFromSource=true -bl\r\n\r\nMy goal was to build runtime in portable mode. Is it supposed to work with just `TargetRid` specified like this?",
                                           "updatedAt":  "2023-04-04T13:09:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ZLN47",
                                           "createdAt":  "2023-04-04T14:52:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC5N35g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "omajid",
                                                                               "createdAt":  "2023-04-04T15:49:45Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "tmds",
                                           "body":  "\u003e Is it supposed to work with just TargetRid specified like this?\r\n\r\n`TargetRid` names the output of the build. You can set it to anything you want.\r\n\r\nI\u0027m not sure if you actually need to set something because there is Alpine handling here:\r\n\r\nhttps://github.com/dotnet/runtime/blob/e579ccb60acb044453f2cf1907482b165658488e/Directory.Build.props#L198\r\n\r\nIf it\u0027s needed, you need to set `/p:RuntimeOS=linux-musl`:\r\n\r\nhttps://github.com/dotnet/runtime/blob/e579ccb60acb044453f2cf1907482b165658488e/eng/SourceBuild.props#L34-L35\r\n\r\n\u003e My goal was to build runtime in portable mode\r\n\r\nI\u0027m not sure what you want to build. source-build (`/p:ArcadeBuildFromSource=true`) implies non-portable.",
                                           "updatedAt":  "2023-04-04T14:52:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ZOCwy",
                                           "createdAt":  "2023-04-05T02:59:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ayakael",
                                           "body":  "I can reproduce this on [.NET 7.0.104](https://lab.ilot.io/ayakael/dotnet-stage0/-/jobs/1831) and on [.NET 8.0.0-preview.2](https://lab.ilot.io/ayakael/dotnet-stage0/-/jobs/1836). This referenced jobs build runtime in portable mode while setting `DotNetBuildFromSource=true`. \r\n\r\nI still suspect there\u0027s an issue with the code. When error code occurs by: https://github.com/dotnet/runtime/blob/e13f0dc1e0327b5d0cd0602b55ee257ef554f0a1/src/libraries/Microsoft.NETCore.Platforms/src/RuntimeGroupCollection.cs#L116, `${rid}` equals `x64` when `AdditionalRuntimeId` is set to `linux-musl-x64`. Maybe something gnarly occurs in the parsing logics here?https://github.com/dotnet/runtime/blob/e13f0dc1e0327b5d0cd0602b55ee257ef554f0a1/src/libraries/Microsoft.NETCore.Platforms/src/RID.cs#L59-L122\r\n\r\nNote: I needed to force OutputRid to linux-musl-x64 on dotnet8, else the build would target alpine.3.17-x64. I suspect the parsing logics fizz out due to m̀ultiple dashes. I\u0027m C# stupid, so can\u0027t help more other than vague intuitions.",
                                           "updatedAt":  "2023-04-05T03:03:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ZONVg",
                                           "createdAt":  "2023-04-05T04:19:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ayakael",
                                           "body":  "To test this hypothesis, I attempted [a build](https://lab.ilot.io/ayakael/dotnet-stage0/-/jobs/1837) with OutputRid set as linuxmusl-x64. Of course, it failed as no parent as defined. But it failed with this error: `error MSB4018: System.InvalidOperationException: AdditionalRuntimeIdentifier linuxmusl-x64 was specified, which could not be found in any existing RuntimeGroup, and no parent was specified. [TargetFramework=net8.0]` OutputRid was well parsed. When it is linux-musl-x64, it parses as x64.",
                                           "updatedAt":  "2023-04-05T04:19:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ZOkxL",
                                           "createdAt":  "2023-04-05T06:40:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tmds",
                                           "body":  "\u003e I can reproduce this on [.NET 7.0.104](https://lab.ilot.io/ayakael/dotnet-stage0/-/jobs/1831) and on [.NET 8.0.0-preview.2](https://lab.ilot.io/ayakael/dotnet-stage0/-/jobs/1836).\r\n\r\nWhat command are you running? on what branch of what repo?\r\nI don\u0027t see it in the logs.",
                                           "updatedAt":  "2023-04-05T06:40:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ZQThV",
                                           "createdAt":  "2023-04-05T13:00:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ayakael",
                                           "body":  "Tag `v7.0.4` and `v8.0.0-preview.2.23128.3` of `runtime` with the following command:\r\n```\r\nexport DotNetBuildFromSource=true\r\n\r\n./build.sh \\\r\n\t-c Release \\\r\n\t-bl \\\r\n\t-clang \\\r\n\t-arch x64 \\\r\n\t/p:OutputRid=linux-musl-x64 \\\r\n\t/p:NoPgoOptimize=true \\\r\n\t/p:EnableNgenOptimization=false\r\n```",
                                           "updatedAt":  "2023-04-05T13:00:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ZSlIE",
                                           "createdAt":  "2023-04-05T19:59:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC5Uu_g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "tmds",
                                                                               "createdAt":  "2023-04-05T20:26:34Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "omajid",
                                                                               "createdAt":  "2023-04-05T21:45:56Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "ayakael",
                                           "body":  "I extracted the RID parsing code, and passed `linux-musl-x64` through it:\r\n\r\nhttps://dotnetfiddle.net/3ej5qT\r\n\r\nAs you can see, `rid.BaseRID` and `rid.Architecture` comes out as `linux` (expected `linux-musl`) and `musl` (expected `x64`), respectively. The code just doesn\u0027t have a case when a `BaseRID` has a `-` character, unless there\u0027s a version number tracked using `.` .\r\n\r\nA quick fix is to skip adding `OutputRid` to `AdditionalRuntimeIdentifiers` when `RuntimeOS` is equal to `linux-musl`:\r\n```diff\r\ndiff --git a/src/runtime/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platforms.csproj b/src/runtime/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platfor\r\nms.csproj\r\nindex 1df893388..6a1591035 100644\r\n--- a/src/runtime/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platforms.csproj\r\n+++ b/src/runtime/src/libraries/Microsoft.NETCore.Platforms/src/Microsoft.NETCore.Platforms.csproj\r\n@@ -23,7 +23,9 @@\r\n     \u003c_generateRuntimeGraphTargetFramework Condition=\"\u0027$(MSBuildRuntimeType)\u0027 != \u0027core\u0027\"\u003enet472\u003c/_generateRuntimeGraphTargetFramework\u003e\r\n     \u003c_generateRuntimeGraphTask\u003e$([MSBuild]::NormalizePath(\u0027$(BaseOutputPath)\u0027, $(Configuration), \u0027$(_generateRuntimeGraphTargetFramework)\u0027, \u0027$(AssemblyName).dll\u0027))\u003c/_generateRuntimeGraphTask\u003e\r\n     \u003c!-- When building from source, ensure the RID we\u0027re building for is part of the RID graph --\u003e\r\n-    \u003cAdditionalRuntimeIdentifiers Condition=\"\u0027$(DotNetBuildFromSource)\u0027 == \u0027true\u0027\"\u003e$(AdditionalRuntimeIdentifiers);$(OutputRID)\u003c/AdditionalRuntimeIdentifiers\u003e\r\n+  \u003c!-- Skips \u0027linux-musl\u0027 and \u0027linux-bionic\u0027 as \u0027RID.Parse\u0027 doesn\u0027t know how to parse \u0027BaseRID\u0027 containing a \u0027-\u0027 character \r\n+       See https://github.com/dotnet/runtime/issues/84127 --\u003e\r\n+    \u003cAdditionalRuntimeIdentifiers Condition=\"\u0027$(DotNetBuildFromSource)\u0027 == \u0027true\u0027 AND ( \u0027$(RuntimeOS)\u0027 != \u0027linux-musl\u0027 OR \u0027$(RuntimeOS)\u0027 != \u0027linux-bionic\u0027 )\"\u003e$(AdditionalRuntimeIdentifiers);$(OutputRid)\u003c/AdditionalRuntimeIdentifiers\u003e\r\n   \u003c/PropertyGroup\u003e\r\n \r\n   \u003cItemGroup Condition=\"\u0027$(TargetFrameworkIdentifier)\u0027 == \u0027.NETFramework\u0027\"\u003e\r\n```\r\nAn actual fix is adding in a case for parsing `BaseRID` that contains a `-` characters. You would probably have to add logics to `src/libraries/Microsoft.NETCore.Platforms/src/RID.cs` to be able to parse supported architectures, as to extract that from RIDs that don\u0027t contain a version string.",
                                           "updatedAt":  "2023-04-05T20:07:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ZSwE0",
                                           "createdAt":  "2023-04-05T20:23:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tmds",
                                           "body":  "\u003e as \u0027RID.Parse\u0027 doesn\u0027t know how to parse \u0027BaseRID\u0027 containing a \u0027-\u0027 character \r\n\r\nAha, good you found the root cause!\r\n\r\nLooking at the code here:\r\n\r\nhttps://github.com/dotnet/runtime/blob/042a3509a3f24c6c8da0b0d48eeb45854c8665fc/src/libraries/Microsoft.NETCore.Platforms/src/RID.cs#L91-L95\r\n\r\nWe should add something like the following (at line 93), which causes the first `-` of `linux-musl-x64` to be considered part of the `RIDPart.Base`.\r\n```cs\r\n// ensure there\u0027s no architeture later in the string\r\nif (runtimeIdentifier.IndexOf(ArchitectureDelimiter, i + 1) != -1)\r\n{\r\n    break;\r\n}\r\n```",
                                           "updatedAt":  "2023-04-05T20:27:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ZS6l7",
                                           "createdAt":  "2023-04-05T20:46:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ayakael",
                                           "body":  "\u003e ```cs\r\n\u003e if (runtimeIdentifier.IndexOf(ArchitectureDelimiter, i + 1) != -1)\r\n\u003e ```\r\n\r\nNice, that did it! I wish I could read C#! Want me to get a PR going for this?",
                                           "updatedAt":  "2023-04-05T20:46:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ZTGan",
                                           "createdAt":  "2023-04-05T21:22:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tmds",
                                           "body":  "\u003e Nice, that did it! I wish I could read C#! Want me to get a PR going for this?\r\n\r\nI was going to suggest adding something to the tests, and looking at them I see:\r\n\r\nhttps://github.com/dotnet/runtime/blob/042a3509a3f24c6c8da0b0d48eeb45854c8665fc/src/libraries/Microsoft.NETCore.Platforms/tests/RidTests.cs#L22-L23\r\n\r\nSo, it\u0027s a known ambiguity with the parser.\r\n\r\nThe parsing takes into account an optional qualifier that may exist at the end of the rid, which is also separated by a `-`.\r\nA full rid can look like: `[os].[version]-[architecture]-[additional qualifiers]`. \r\n(see https://learn.microsoft.com/en-us/dotnet/core/rid-catalog).\r\n\r\nI\u0027m not sure what the desired solution is.\r\n\r\nOne option would be to make the parser aware of the architectures. We know the dashes before the `architecture` should be considered part of the `os`.\r\n\r\n@ericstj @ViktorHofer what do you think?",
                                           "updatedAt":  "2023-04-05T21:24:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ZT_Bs",
                                           "createdAt":  "2023-04-06T02:39:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "`linux-musl-x64` should already be part of the RID graph.  It\u0027s defined in `runtimeGroups`: https://github.com/dotnet/runtime/blob/58d1ecb3e50ead5cd48752bbaedf6dc23ccd2523/src/libraries/Microsoft.NETCore.Platforms/src/runtimeGroups.props#L12-L15\r\nI would expect this to be pre-loaded into the collection:\r\nhttps://github.com/dotnet/runtime/blob/58d1ecb3e50ead5cd48752bbaedf6dc23ccd2523/src/libraries/Microsoft.NETCore.Platforms/src/GenerateRuntimeGraph.cs#L323-L328\r\nLater on, I\u0027d expect this fast path to be hit:\r\nhttps://github.com/dotnet/runtime/blob/58d1ecb3e50ead5cd48752bbaedf6dc23ccd2523/src/libraries/Microsoft.NETCore.Platforms/src/RuntimeGroupCollection.cs#L44-L48\r\nHowever it\u0027s not hit, since we hit the ambiguous case where `linux-musl-x64` was parsed differently, so it\u0027s getting a different hashcode even though its string representation is identical.\r\nhttps://github.com/dotnet/runtime/blob/58d1ecb3e50ead5cd48752bbaedf6dc23ccd2523/src/libraries/Microsoft.NETCore.Platforms/src/RID.cs#L190-L194\r\n\r\nOne fix would be to use a comparer for this hashset that treated RIDs that were the same string representation as equal.  There\u0027s really not a case where we\u0027d define structured RIDs from the runtime groups with this ambiguity - it\u0027s only comping from string parsing in which case we want to ignore that ambiguity.\r\n\r\n\u003e if (runtimeIdentifier.IndexOf(ArchitectureDelimiter, i + 1) != -1)\r\nNice, that did it! I wish I could read C#! Want me to get a PR going for this?\r\n\r\nThat\u0027s actually ignoring Qualifier.  The same check works for Version because the version delimiter can only occur once.  I think one option would be to make the Parse option have a flag to ignore Qualifiers and then plumb this through for AdditionalRuntimeIdentifier.  The use of qualifiers was something we did early on (`-aot` could be used to provide a different asset for .NET Native vs CoreCLR) but then later abandoned due to RID graph explosion.  I think dropping it from the AdditionalRuntimeIdentifier scenario is reasonable.",
                                           "updatedAt":  "2023-04-06T02:39:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ZUJGC",
                                           "createdAt":  "2023-04-06T03:49:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tmds",
                                           "body":  "\u003e That\u0027s actually ignoring Qualifier.\r\n\r\nI had come to that conclusion  as well.\r\n\r\n@ericstj I had also suggested another option:\r\n\r\n\u003e One option would be to make the parser aware of the architectures. We know the dashes before the architecture should be considered part of the os.\r\n\r\nAny thoughts about that?\r\n\r\n\u003e I think one option would be to make the Parse option have a flag to ignore Qualifiers and then plumb this through for AdditionalRuntimeIdentifier.\r\n\r\nShall I go ahead and implement this?",
                                           "updatedAt":  "2023-04-06T03:50:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ZUThQ",
                                           "createdAt":  "2023-04-06T05:02:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "I\u0027d prefer to not further complicate the parsing algorithm with lookahead searches for known architectures.  If anything I\u0027d prefer we simplify it.\r\n\r\nMy order of preference would be:\r\n1. Change the RuntimeGroupCollection knownRIDs comparer to use string value of RID, or just switch to HashSet\u003cstring\u003e.\r\n2. Parse(string, noQualifier = true)\r\n3. Add knowledge of existing architectures",
                                           "updatedAt":  "2023-04-06T05:02:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ZUXwP",
                                           "createdAt":  "2023-04-06T05:29:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC5YKrQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ericstj",
                                                                               "createdAt":  "2023-04-06T14:37:36Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "tmds",
                                           "body":  "\u003e Later on, I\u0027d expect this fast path to be hit:\r\n\r\nI assume the path doesn\u0027t get hit because the `knownRIDs` didn\u0027t get parsed but constructed. So it looks like: `BaseRID = \"linux-musl\", Architecture = \"x64\", Qualifier = \"\"`. And then fails equality against ``BaseRID = \"linux\", Architecture = \"musl\", Qualifier = \"x64\"``.\r\n\r\nBecause we know the additional rids won\u0027t have a qualifier, my preferred option would be:\r\n```\r\nParse(string, noQualifier = true)\r\n```\r\nOtherwise we still have issue when an additional runtime identifier has `-` in its `os` and is not yet known.",
                                           "updatedAt":  "2023-04-06T05:29:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ZU2LK",
                                           "createdAt":  "2023-04-06T07:50:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC5YgVQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ericstj",
                                                                               "createdAt":  "2023-04-06T14:36:30Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ayakael",
                                                                               "createdAt":  "2023-04-06T15:38:20Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "tmds",
                                           "body":  "\u003e Tag v7.0.4 and v8.0.0-preview.2.23128.3 of runtime with the following command:\r\n\r\n@ayakael because source-build uses a non-portable rid, it won\u0027t encounter this parse issue.\r\nTo make this command work, you can probably unblock yourself by explicitly adding `/p:AdditionalRuntimeIdentifiers=` to it.",
                                           "updatedAt":  "2023-04-06T07:50:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ZW5ro",
                                           "createdAt":  "2023-04-06T14:40:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "I\u0027m good with that.  I\u0027d even consider deprecating the qualifier completely if we thought we could remove the `-aot` RIDs, not sure about that breaking change though.\r\n\r\nI\u0027d also be OK with doing both 1\u00262.  It\u0027s not correct to allow two different RIDs with the same string representation but different meaning into the graph.  Things will break later on when writing the graph in this case.",
                                           "updatedAt":  "2023-04-06T15:17:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ZXd3n",
                                           "createdAt":  "2023-04-06T16:25:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tmds",
                                           "body":  "The parsing problem is fixed by https://github.com/dotnet/runtime/pull/84413.\r\n\r\n@omajid @ayakael are we good to close this issue?",
                                           "updatedAt":  "2023-04-06T16:25:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ZXez3",
                                           "createdAt":  "2023-04-06T16:28:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ayakael",
                                           "body":  "Yes, I\u0027d like to backport this to `release/6.0` to unblock the testing CI if that\u0027s okay.",
                                           "updatedAt":  "2023-04-06T16:28:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ZXkqe",
                                           "createdAt":  "2023-04-06T16:51:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tmds",
                                           "body":  "I think the most important CI, is the one for `main`.\r\nI\u0027m not sure the 6.0 will catch many issues at this point. Or if it will catch them in time, so you can act on them before the release date.\r\n\r\nYou can make the request on the PR. The maintainers will decide.",
                                           "updatedAt":  "2023-04-06T16:52:03Z"
                                       }
                                   ],
                         "totalCount":  30
                     },
        "title":  "GenerateRuntimeGraph fails when building runtime in source-build mode on Alpine",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/85644",
        "createdAt":  "2023-05-02T12:14:30Z",
        "number":  85644,
        "author":  "AaronRobinsonMSFT",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-08T17:05:21Z",
        "body":  "The generated `CORE_ROOT` for running runtime tests contains very old Roslyn assemblies. I\u0027m not sure how to update these properly but it would helpful to have them track with our ingestion of Roslyn.\r\n\r\n```\r\n...\\artifacts\\TargetingPack\u003edir Microsoft.CodeAnalysis*\r\n Volume in drive E is Source\r\n Volume Serial Number is XXXX-XXXX\r\n\r\n Directory of ...\\artifacts\\TargetingPack\r\n\r\n02-Dec-15  12:29         4,097,216 Microsoft.CodeAnalysis.CSharp.dll\r\n02-Dec-15  12:29         1,901,232 Microsoft.CodeAnalysis.dll\r\n02-Dec-15  12:29         4,957,896 Microsoft.CodeAnalysis.VisualBasic.dll\r\n               3 File(s)     10,956,344 bytes\r\n               0 Dir(s)  96,453,009,408 bytes free\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOW07GAA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5bRs3L",
                                           "createdAt":  "2023-05-02T12:14:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThe generated `CORE_ROOT` for running runtime tests contains very old Roslyn assemblies. I\u0027m not sure how to update these properly but it would helpful to have them track with our ingestion of Roslyn.\r\n\r\n```\r\n...\\artifacts\\TargetingPack\u003edir Microsoft.CodeAnalysis*\r\n Volume in drive E is Source\r\n Volume Serial Number is XXXX-XXXX\r\n\r\n Directory of ...\\artifacts\\TargetingPack\r\n\r\n02-Dec-15  12:29         4,097,216 Microsoft.CodeAnalysis.CSharp.dll\r\n02-Dec-15  12:29         1,901,232 Microsoft.CodeAnalysis.dll\r\n02-Dec-15  12:29         4,957,896 Microsoft.CodeAnalysis.VisualBasic.dll\r\n               3 File(s)     10,956,344 bytes\r\n               0 Dir(s)  96,453,009,408 bytes free\r\n```\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eAaronRobinsonMSFT\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-05-02T12:14:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5bTsYA",
                                           "createdAt":  "2023-05-02T17:45:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "The Roslyn assemblies are used in the CscBench test that the JIT team owns. They would know best if it would be worthwhile to update to a modern Roslyn version.",
                                           "updatedAt":  "2023-05-02T17:45:03Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Update Roslyn assemblies used in testing with `CORE_ROOT`",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/88286",
        "createdAt":  "2023-07-01T10:42:33Z",
        "number":  88286,
        "author":  "filipnavara",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCxMf8A==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "neon-sunset",
                                            "createdAt":  "2023-07-01T12:17:50Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "EgorBo",
                                            "createdAt":  "2023-07-02T12:09:14Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "lemonmojo",
                                            "createdAt":  "2023-07-09T17:30:24Z"
                                        }
                                    ],
                          "totalCount":  3
                      },
        "updatedAt":  "2025-07-28T17:00:28Z",
        "body":  "macOS tooling expects symbols to be distributed as .dSYM bundles created using `dsymtool` without the `--flat` parameter. The distribution using dSYM allows the `lldb` debugger, `spindump`, `sample`, and other tools to locate the symbols automatically (through Spotlight indexer with matches the symbols through UUID back to the original executable). This automatic symbol loading doesn\u0027t work for .dwarf files located next to the executable.\r\n\r\nThis makes debugging tools like ILCompiler particularly annoying. Profiling long compilations produces non-symbolicated traces which are hard to interpret.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOheRMNw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5gT80J",
                                           "createdAt":  "2023-07-01T10:42:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @tommcdon\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nmacOS tooling expects symbols to be distributed as .dSYM bundles created using `dsymtool` without the `--flat` parameter. The distribution using dSYM allows the `lldb` debugger, `spindump`, `sample`, and other tools to locate the symbols automatically (through Spotlight indexer with matches the symbols through UUID back to the original executable). This automatic symbol loading doesn\u0027t work for .dwarf files located next to the executable.\r\n\r\nThis makes debugging tools like ILCompiler particularly annoying. Profiling long compilations produces non-symbolicated traces which are hard to interpret.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003efilipnavara\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Diagnostics-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-07-01T10:42:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5gWeGL",
                                           "createdAt":  "2023-07-02T09:12:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC_m0jA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "filipnavara",
                                                                               "createdAt":  "2023-07-02T10:29:43Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "am11",
                                           "body":  "I think if we want to also ship .dSYM files, it will require coordinated effort. After the mechanical code changes in these places:\r\n\r\n* https://github.com/dotnet/runtime/blob/0d77cf0750e2e959951d11705ce77bc5af9028f0/eng/native/functions.cmake#L389\r\n* https://github.com/dotnet/runtime/blob/0d77cf0750e2e959951d11705ce77bc5af9028f0/eng/native/naming.props#L21\r\n* https://github.com/dotnet/runtime/blob/0d77cf0750e2e959951d11705ce77bc5af9028f0/src/coreclr/nativeaot/BuildIntegration/Microsoft.NETCore.Native.targets#L397\r\n* https://github.com/dotnet/runtime/blob/0d77cf0750e2e959951d11705ce77bc5af9028f0/src/coreclr/nativeaot/BuildIntegration/Microsoft.NETCore.Native.Unix.targets#L22\r\n* https://github.com/dotnet/runtime/blob/0d77cf0750e2e959951d11705ce77bc5af9028f0/src/coreclr/nativeaot/BuildIntegration/Microsoft.NETCore.Native.Unix.targets#L236\r\n\r\nthere might be additional work required in https://github.com/dotnet/diagnostics tools and https://github.com/dotnet/symstore (and the underlying blob storage).",
                                           "updatedAt":  "2023-07-02T09:12:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5gW7pZ",
                                           "createdAt":  "2023-07-02T12:09:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODAMFoQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "lemonmojo",
                                                                               "createdAt":  "2023-07-09T17:30:13Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "EgorBo",
                                           "body":  "I guess it should also help native profilers?",
                                           "updatedAt":  "2023-07-02T12:09:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5gW8Bw",
                                           "createdAt":  "2023-07-02T12:10:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODAMFow==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "lemonmojo",
                                                                               "createdAt":  "2023-07-09T17:30:19Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "filipnavara",
                                           "body":  "\u003e I guess it should also help native profilers?\r\n\r\nYep. It applies to Instruments too.",
                                           "updatedAt":  "2023-07-02T12:10:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6F5Ew3",
                                           "createdAt":  "2024-07-23T21:15:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-07-23T21:15:17Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Distribute macOS symbols as dSYM, not .dwarf",
        "labels":  [
                       "enhancement",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/88306",
        "createdAt":  "2023-07-03T01:58:56Z",
        "number":  88306,
        "author":  "v-wenyuxu",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-08T17:05:22Z",
        "body":  "**Failed in:** [runtime-coreclr jitstress 20230701.1](https://dev.azure.com/dnceng-public/public/_build/results?buildId=327561\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=6750056\u0026resultId=117875\u0026paneView=debug)\r\n\r\n**Failed tests:**\r\n```\r\ncoreclr osx x64 Checked jitstress2_tiered @ OSX.1200.Amd64.Open\r\n    - baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh\r\ncoreclr osx x64 Checked jitstress2_tiered @ OSX.1200.Amd64.Open\r\n    - baseservices/exceptions/AccessViolationException/AVException02/AVException02.sh\r\n    - baseservices/exceptions/unittests/Baadbaad/Baadbaad.sh\r\n```\r\n\r\n**Error message:**\r\n```\r\nTest Infrastructure Failure: System.IO.IOException: No space left on device : \u0027/tmp/helix/working/BC9309C9/w/B6180A65/uploads/Reports/baseservices.exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.output.txt\u0027\r\n   at System.IO.RandomAccess.WriteAtOffset(SafeFileHandle handle, ReadOnlySpan`1 buffer, Int64 fileOffset)\r\n   at System.IO.Strategies.OSFileStreamStrategy.Write(ReadOnlySpan`1 buffer)\r\n   at System.IO.Strategies.BufferedFileStreamStrategy.FlushWrite()\r\n   at System.IO.StreamWriter.Flush(Boolean flushStream, Boolean flushEncoder)\r\n   at CoreclrTestLib.CoreclrTestWrapperLib.RunTest(String executable, String outputFile, String errorFile, String category, String testBinaryBase, String outputDir)\r\n   at baseservices_exceptions._regressions_V1_SEH_asm_NestedExcept_NestedExcept_._regressions_V1_SEH_asm_NestedExcept_NestedExcept_sh()\r\nExpected: True\r\nActual:   False\r\n```\r\n\r\n**Stack trace:**\r\n```\r\n   at baseservices_exceptions._regressions_V1_SEH_asm_NestedExcept_NestedExcept_._regressions_V1_SEH_asm_NestedExcept_NestedExcept_sh()\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)\r\n```\r\nQueued | Pipeline | Pipeline_Configuration | OS | Arch | Test | Outcome | Properties | BuildReason\r\n-- | -- | -- | -- | -- | -- | -- | -- | --\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n\u003cdetails\u003e\r\n\u003csummary\u003eMore failures\u003c/summary\u003e\r\n\r\nQueued | Pipeline | Pipeline_Configuration | OS | Arch | Test | Outcome | Properties | BuildReason\r\n-- | -- | -- | -- | -- | -- | -- | -- | --\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n\u003c/details\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOYLBGCg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5gYyAs",
                                           "createdAt":  "2023-07-03T01:59:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @JulieLeeMSFT, @jakobbotsch\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n**Failed in:** [runtime-coreclr jitstress 20230701.1](https://dev.azure.com/dnceng-public/public/_build/results?buildId=327561\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=6750056\u0026resultId=117875\u0026paneView=debug)\r\n\r\n**Failed tests:**\r\n```\r\ncoreclr osx x64 Checked jitstress2_tiered @ OSX.1200.Amd64.Open\r\n    - baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh\r\ncoreclr osx x64 Checked jitstress2_tiered @ OSX.1200.Amd64.Open\r\n    - baseservices/exceptions/AccessViolationException/AVException02/AVException02.sh\r\n    - baseservices/exceptions/unittests/Baadbaad/Baadbaad.sh\r\n```\r\n\r\n**Error message:**\r\n```\r\nTest Infrastructure Failure: System.IO.IOException: No space left on device : \u0027/tmp/helix/working/BC9309C9/w/B6180A65/uploads/Reports/baseservices.exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.output.txt\u0027\r\n   at System.IO.RandomAccess.WriteAtOffset(SafeFileHandle handle, ReadOnlySpan`1 buffer, Int64 fileOffset)\r\n   at System.IO.Strategies.OSFileStreamStrategy.Write(ReadOnlySpan`1 buffer)\r\n   at System.IO.Strategies.BufferedFileStreamStrategy.FlushWrite()\r\n   at System.IO.StreamWriter.Flush(Boolean flushStream, Boolean flushEncoder)\r\n   at CoreclrTestLib.CoreclrTestWrapperLib.RunTest(String executable, String outputFile, String errorFile, String category, String testBinaryBase, String outputDir)\r\n   at baseservices_exceptions._regressions_V1_SEH_asm_NestedExcept_NestedExcept_._regressions_V1_SEH_asm_NestedExcept_NestedExcept_sh()\r\nExpected: True\r\nActual:   False\r\n```\r\n\r\n**Stack trace:**\r\n```\r\n   at baseservices_exceptions._regressions_V1_SEH_asm_NestedExcept_NestedExcept_._regressions_V1_SEH_asm_NestedExcept_NestedExcept_sh()\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)\r\n```\r\nQueued | Pipeline | Pipeline_Configuration | OS | Arch | Test | Outcome | Properties | BuildReason\r\n-- | -- | -- | -- | -- | -- | -- | -- | --\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n\u003cdetails\u003e\r\n\u003csummary\u003eMore failures\u003c/summary\u003e\r\n\r\nQueued | Pipeline | Pipeline_Configuration | OS | Arch | Test | Outcome | Properties | BuildReason\r\n-- | -- | -- | -- | -- | -- | -- | -- | --\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n\u003c/details\u003e\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ev-wenyuxu\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-CodeGen-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-07-03T01:59:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5grkQf",
                                           "createdAt":  "2023-07-05T15:47:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AndyAyersMS",
                                           "body":  "This seems like an infrastructure issue\r\n```\r\nTest Infrastructure Failure: System.IO.IOException: No space left on device\r\n```\r\nso resetting the area path.",
                                           "updatedAt":  "2023-07-05T15:47:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5grkYb",
                                           "createdAt":  "2023-07-05T15:47:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n**Failed in:** [runtime-coreclr jitstress 20230701.1](https://dev.azure.com/dnceng-public/public/_build/results?buildId=327561\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=6750056\u0026resultId=117875\u0026paneView=debug)\r\n\r\n**Failed tests:**\r\n```\r\ncoreclr osx x64 Checked jitstress2_tiered @ OSX.1200.Amd64.Open\r\n    - baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh\r\ncoreclr osx x64 Checked jitstress2_tiered @ OSX.1200.Amd64.Open\r\n    - baseservices/exceptions/AccessViolationException/AVException02/AVException02.sh\r\n    - baseservices/exceptions/unittests/Baadbaad/Baadbaad.sh\r\n```\r\n\r\n**Error message:**\r\n```\r\nTest Infrastructure Failure: System.IO.IOException: No space left on device : \u0027/tmp/helix/working/BC9309C9/w/B6180A65/uploads/Reports/baseservices.exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.output.txt\u0027\r\n   at System.IO.RandomAccess.WriteAtOffset(SafeFileHandle handle, ReadOnlySpan`1 buffer, Int64 fileOffset)\r\n   at System.IO.Strategies.OSFileStreamStrategy.Write(ReadOnlySpan`1 buffer)\r\n   at System.IO.Strategies.BufferedFileStreamStrategy.FlushWrite()\r\n   at System.IO.StreamWriter.Flush(Boolean flushStream, Boolean flushEncoder)\r\n   at CoreclrTestLib.CoreclrTestWrapperLib.RunTest(String executable, String outputFile, String errorFile, String category, String testBinaryBase, String outputDir)\r\n   at baseservices_exceptions._regressions_V1_SEH_asm_NestedExcept_NestedExcept_._regressions_V1_SEH_asm_NestedExcept_NestedExcept_sh()\r\nExpected: True\r\nActual:   False\r\n```\r\n\r\n**Stack trace:**\r\n```\r\n   at baseservices_exceptions._regressions_V1_SEH_asm_NestedExcept_NestedExcept_._regressions_V1_SEH_asm_NestedExcept_NestedExcept_sh()\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)\r\n```\r\nQueued | Pipeline | Pipeline_Configuration | OS | Arch | Test | Outcome | Properties | BuildReason\r\n-- | -- | -- | -- | -- | -- | -- | -- | --\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n\u003cdetails\u003e\r\n\u003csummary\u003eMore failures\u003c/summary\u003e\r\n\r\nQueued | Pipeline | Pipeline_Configuration | OS | Arch | Test | Outcome | Properties | BuildReason\r\n-- | -- | -- | -- | -- | -- | -- | -- | --\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n2023-07-02T05:59:01.393Z | runtime-coreclr jitstress | Checked-jitstress2_tiered | osx.1200.amd64.open | x64 | baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh | Failed | {\"operatingSystem\":\"OSX.1200.Amd64.Open\",\"DefinitionId\":\"109\",\"System.JobAttempt\":\"1\",\"System.JobId\":\"bf644a0b-2dbe-5a03-d8c6-a86fdd97c823\",\"CollectionUri\":\"https://dev.azure.com/dnceng-public/\",\"configuration\":\"Checked-jitstress2_tiered\",\"System.StageAttempt\":\"1\",\"AzurePipelinesTestRunId\":\"6750056\",\"System.JobName\":\"__default\",\"BuildNumber\":\"20230701.1\",\"System.PhaseAttempt\":\"1\",\"Project\":\"public\",\"System.StageName\":\"Build\",\"Reason\":\"Schedule\",\"System.PhaseName\":\"run_test_p1__osx_x64_checked\",\"DefinitionName\":\"runtime-coreclr jitstress\",\"BuildId\":\"327561\",\"architecture\":\"x64\"} | Schedule\r\n\u003c/details\u003e\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ev-wenyuxu\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-CodeGen-coreclr`, `area-Infrastructure`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-07-05T15:47:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5gsEYK",
                                           "createdAt":  "2023-07-05T17:10:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e Test Infrastructure Failure: System.IO.IOException: No space left on device\r\n\r\ncc @dotnet/dnceng",
                                           "updatedAt":  "2023-07-05T17:10:57Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Test failure baseservices/exceptions/regressions/V1/SEH/asm/NestedExcept/NestedExcept.sh",
        "labels":  [
                       "os-mac-os-x",
                       "arch-x64",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/89257",
        "createdAt":  "2023-07-05T17:18:40Z",
        "number":  89257,
        "author":  "dviererbe",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-09-26T16:56:54Z",
        "body":  "On Ubuntu we currently use mostly the embedded libraries included in the source, to build .NET. Optimally we want to use the library packages of the Ubuntu Archive.\r\n\r\nA shallow investigation by @mirespace and me showed that there are:\r\n1. mentioned 3rd party dependencies we could not find in the source; e.g. Slicing-by-8:\r\n    - We downloaded the Slicing-by-8 source from https://sourceforge.net/projects/slicing-by-8/ as mentioned by https://github.com/dotnet/runtime/blob/main/THIRD-PARTY-NOTICES.TXT#L23\r\n    - We could not find the `crc.c`, `crc.h`, `8x256_tables.c` file\r\n2. references to older versions of 3rd party dependencies; e.g. https://github.com/dotnet/runtime/blob/main/src/coreclr/pal/inc/rt/cpp/xmmintrin.h references `llvm-3.9/clang-3.9.1`\r\n\r\nI have to correct my statement that `brotli` was modified. There is a diff between the files contained in the repository ([here](https://github.com/google/brotli/tree/master)) and the released tarball ([here](https://github.com/google/brotli/releases)). The release tarball does not contain the files:\r\n- `fuzz/*` \r\n- `common/dictionary.bin`\r\n- `common/dictionary.bin.br`\r\n\r\nBut, if Microsoft is aware of modified 3rd party dependencies, we should look into getting them merged upstream.\r\n\r\nThis issue is not mission critical, but long-term we would like to patch the embedded libraries out; I will start a deeper investigation over the next weeks.\r\n\r\nAlso, @omajid you mentioned in this weeks meeting that there is a flag to enable using the platform libraries. Can you provide more details about that flag?",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOYhhANw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5iADbr",
                                           "createdAt":  "2023-07-05T17:18:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one area label.",
                                           "updatedAt":  "2023-07-05T17:18:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5iADbz",
                                           "createdAt":  "2023-07-06T16:10:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichaelSimons",
                                           "body":  "[Triage] There are two parts to this issue.  One is on the source-build side around documentation and possibly providing a single option to use the platform libraries.  The second part is more specific to the runtime around the specific 3rd party dependencies.",
                                           "updatedAt":  "2023-07-06T16:10:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5iADb7",
                                           "createdAt":  "2023-07-20T15:54:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichaelSimons",
                                           "body":  "Logged https://github.com/dotnet/source-build/issues/3563 to track the source-build side of this.  Transferring this to runtime to respond to the specific runtime questions.",
                                           "updatedAt":  "2023-07-20T15:54:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5iGEA3",
                                           "createdAt":  "2023-07-21T15:23:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nOn Ubuntu we currently use mostly the embedded libraries included in the source, to build .NET. Optimally we want to use the library packages of the Ubuntu Archive.\r\n\r\nA shallow investigation by @mirespace and me showed that there are:\r\n1. mentioned 3rd party dependencies we could not find in the source; e.g. Slicing-by-8:\r\n    - We downloaded the Slicing-by-8 source from https://sourceforge.net/projects/slicing-by-8/ as mentioned by https://github.com/dotnet/runtime/blob/main/THIRD-PARTY-NOTICES.TXT#L23\r\n    - We could not find the `crc.c`, `crc.h`, `8x256_tables.c` file\r\n2. references to older versions of 3rd party dependencies; e.g. https://github.com/dotnet/runtime/blob/main/src/coreclr/pal/inc/rt/cpp/xmmintrin.h references `llvm-3.9/clang-3.9.1`\r\n\r\nI have to correct my statement that `brotli` was modified. There is a diff between the files contained in the repository ([here](https://github.com/google/brotli/tree/master)) and the released tarball ([here](https://github.com/google/brotli/releases)). The release tarball does not contain the files:\r\n- `fuzz/*` \r\n- `common/dictionary.bin`\r\n- `common/dictionary.bin.br`\r\n\r\nBut, if Microsoft is aware of modified 3rd party dependencies, we should look into getting them merged upstream.\r\n\r\nThis issue is not mission critical, but long-term we would like to patch the embedded libraries out; I will start a deeper investigation over the next weeks.\r\n\r\nAlso, @omajid you mentioned in this weeks meeting that there is a flag to enable using the platform libraries. Can you provide more details about that flag?\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003edviererbe\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`, `needs-area-label`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-07-21T15:23:01Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "3rd party dependencies: Build against platform libraries instead of the embedded libraries",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/88688",
        "createdAt":  "2023-07-11T18:38:29Z",
        "number":  88688,
        "author":  "jkoritzinsky",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC1aRzg==",
                          "nodes":  [
                                        {
                                            "content":  "ROCKET",
                                            "user":  "ViktorHofer",
                                            "createdAt":  "2023-07-11T19:30:17Z"
                                        },
                                        {
                                            "content":  "ROCKET",
                                            "user":  "hoyosjs",
                                            "createdAt":  "2023-07-11T22:44:57Z"
                                        },
                                        {
                                            "content":  "ROCKET",
                                            "user":  "huoyaoyuan",
                                            "createdAt":  "2023-07-17T06:15:06Z"
                                        },
                                        {
                                            "content":  "ROCKET",
                                            "user":  "shushanhf",
                                            "createdAt":  "2023-07-26T01:02:35Z"
                                        },
                                        {
                                            "content":  "ROCKET",
                                            "user":  "lambdageek",
                                            "createdAt":  "2024-01-24T22:52:54Z"
                                        }
                                    ],
                          "totalCount":  5
                      },
        "updatedAt":  "2024-05-05T00:28:06Z",
        "body":  "There\u0027s a few simplifications we can do now that our minimum CMake version is 3.20 on all platforms:\r\n\r\n\r\n- [x] #92787\r\n- [x] Remove the polyfills used with older CMake versions in `functions.cmake`\r\n- [ ] #92843\r\n- [x] Remove our conditional setting of CMake policies for policies that are now always available.\r\n- [x] #94354 : PR #96814\r\n- [x] #96815 : PR #97053\r\n- [ ] Use CMake\u0027s support to set up IPO optimizations: https://cmake.org/cmake/help/latest/policy/CMP0069.html, https://cmake.org/cmake/help/latest/module/CheckIPOSupported.html#module:CheckIPOSupported\r\n- [ ] Use CMake\u0027s support to set up PIE options: https://cmake.org/cmake/help/latest/policy/CMP0083.html, https://cmake.org/cmake/help/latest/module/CheckPIESupported.html#module:CheckPIESupported\r\n- [x] Use the `FindPython3` CMake module instead of the deprecated `FindPythonInterp` module. The deprecated module is being removed in newer versions of CMake.\r\n- [x] Remove any CMake version checks that check for versions less than 3.20\r\n- [x] #93370\r\n- [ ] Investigate if we can simplify the build configuration for Apple Silicon using CMake\u0027s support that was added in CMake 3.19\r\n- [ ] #97113\r\n- [ ] Add [CMake presets](https://cmake.org/cmake/help/latest/manual/cmake-presets.7.html) for common build command line settings (like our standard Debug/Checked/Release options) to help enable better IDE integration and simplify our build process a little. (We can only use features available in version 1 or 2 of the presets format).\r\n- [ ] Use [CMake\u0027s improved support for cross-compiling to Android](https://cmake.org/cmake/help/latest/release/3.20.html#platforms) to simplify our Android and Linux-Bionic build processes.\r\n- [x] #97423 : PR #97426\r\n- [x] #93702",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOYTv3Dw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5hO_cP",
                                           "createdAt":  "2023-07-11T18:38:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThere\u0027s a few simplifications we can do now that our minimum CMake version is 3.20 on all platforms:\r\n\r\n\r\n- [ ] Remove the `_obj` suffix on our CMake targets and remove the \"interface\" targets now that `target_link_libraries` can link to object libraries.\r\n- [ ] Remove the polyfills used with older CMake versions in `functions.cmake`\r\n- [ ] Remove the `add_linker_flag` function and instead use `target_link_options`\r\n- [ ] Remove our conditional setting of CMake policies for policies that are now always available.\r\n- [ ] Enable CMake policy [CMP0117](https://cmake.org/cmake/help/latest/policy/CMP0117.html) and update the corresponding compile options throughout the repo.\r\n- [ ] Enable CMake policy [CMP0092](https://cmake.org/cmake/help/latest/policy/CMP0092.html) and update the corresponding compile options throughout the repo.\r\n- [ ] Use CMake\u0027s support to set up IPO optimizations: https://cmake.org/cmake/help/latest/policy/CMP0069.html, https://cmake.org/cmake/help/latest/module/CheckIPOSupported.html#module:CheckIPOSupported\r\n- [ ] Use CMake\u0027s support to set up PIE options: https://cmake.org/cmake/help/latest/policy/CMP0083.html, https://cmake.org/cmake/help/latest/module/CheckPIESupported.html#module:CheckPIESupported\r\n- [ ] Use the `FindPython3` CMake module instead of the deprecated `FindPythonInterp` module. The deprecated module is being removed in newer versions of CMake.\r\n- [ ] Remove any CMake version checks that check for versions less than 3.20\r\n- [ ] Use improvements in CMake generator expressions to simplify our CMake generator expressions (there are many cases where we can simplify expressions like `$\u003cOR:$\u003cCONFIG:X\u003e,$\u003cCONFIG:Y\u003e\u003e:-flag\u003e` to `$\u003cCONFIG:X,Y\u003e`)\r\n- [ ] Investigate if we can simplify the build configuration for Apple Silicon using CMake\u0027s support that was added in CMake 3.19\r\n- [ ] Set [CMP0112](https://cmake.org/cmake/help/latest/policy/CMP0112.html) to the `NEW` behavior and fix any target dependency issues.\r\n- [ ] Add [CMake presets](https://cmake.org/cmake/help/latest/manual/cmake-presets.7.html) for common build command line settings (like our standard Debug/Checked/Release options) to help enable better IDE integration and simplify our build process a little. (We can only use features available in version 1 or 2 of the presets format).\r\n- [ ] Use [CMake\u0027s improved support for cross-compiling to Android](https://cmake.org/cmake/help/latest/release/3.20.html#platforms) to simplify our Android and Linux-Bionic build processes.\r\n- [ ] Use the [`CMAKE_\u003cLANG\u003e_BYTE_ORDER` setting](https://cmake.org/cmake/help/latest/variable/CMAKE_LANG_BYTE_ORDER.html#variable:CMAKE_%3CLANG%3E_BYTE_ORDER) instead of manually detecting endianness or using the [`TestBigEndian` module](https://cmake.org/cmake/help/latest/module/TestBigEndian.html#module:TestBigEndian) (currently used by Mono)\r\n- [ ] Use the `-S` and `-B` options on the CMake command line to specify source and build directories instead of using `pushd` to be in specific working directories.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ejkoritzinsky\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003eFuture\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-07-11T18:38:55Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Simplify CMake build system now that our minimum is 3.20",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/89133",
        "createdAt":  "2023-07-18T21:26:17Z",
        "number":  89133,
        "author":  "jkoritzinsky",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-09-03T23:32:18Z",
        "body":  "Use-After-Return detection was disabled when AddressSanitizer was initially stood up because various components in CoreCLR (and possibly NativeAOT) check if a pointer is on the current thread\u0027s stack, which doesn\u0027t work with the fake stacks that the Use-After-Return detection uses to implement the feature. AddressSanitizer has APIs in its \"public interface\" that we can use to detect if a pointer is in the current thread\u0027s fake stack. We should use this feature in the places where we are asserting that a particular pointer points to the thread\u0027s stack and enable the detection.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOYdKfgA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5hz983",
                                           "createdAt":  "2023-07-18T21:26:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nUse-After-Return detection was disabled when AddressSanitizer was initially stood up because various components in CoreCLR (and possibly NativeAOT) check if a pointer is on the current thread\u0027s stack, which doesn\u0027t work with the fake stacks that the Use-After-Return detection uses to implement the feature. AddressSanitizer has APIs in its \"public interface\" that we can use to detect if a pointer is in the current thread\u0027s fake stack. We should use this feature in the places where we are asserting that a particular pointer points to the thread\u0027s stack and enable the detection.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ejkoritzinsky\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-07-18T21:26:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5h0p-A",
                                           "createdAt":  "2023-07-19T00:23:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "Green threads had a similar issue. This commit has the places that needed to be updated: https://github.com/dotnet/runtimelab/commit/ba2a40dd5a04f9762be489187f4202fc498df9d4#diff-2683b20032662221023affe4d7e1a689fd966abfe1bd44fb6b65b83571a127ddR2994\r\n\r\nLook for the `stackPointerLessThan` helper.",
                                           "updatedAt":  "2023-07-19T00:23:37Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Enable Use-After-Return detection in AddressSanitizer",
        "labels":  [
                       "area-Infrastructure",
                       "in-pr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/89136",
        "createdAt":  "2023-07-18T21:32:36Z",
        "number":  89136,
        "author":  "jkoritzinsky",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-07-18T21:32:43Z",
        "body":  "Enable the UndefinedBehaviorSanitizer on supported platforms and fix any failures.\r\n\r\nAlso, remove the `enable_sanitizers.sh` script once we can run `./build.sh -fsanitize undefined` in our build scripts.\r\n\r\nRelated: #73418 #73644 #73927 #73964 #74930 #74964 #75034 #75037",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOYdAKDg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5h0AoO",
                                           "createdAt":  "2023-07-18T21:32:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nEnable the UndefinedBehaviorSanitizer on supported platforms and fix any failures.\r\n\r\nAlso, remove the `enable_sanitizers.sh` script once we can run `./build.sh -fsanitize undefined` in our build scripts.\r\n\r\nRelated: #73418 #73644 #73927 #73964 #74930 #74964 #75034 #75037\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ejkoritzinsky\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`tenet-reliability`, `area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003eFuture\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-07-18T21:32:42Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Add UndefinedBehaviorSanitizer test legs to runtime-sanitized",
        "labels":  [
                       "tenet-reliability",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/89137",
        "createdAt":  "2023-07-18T21:35:14Z",
        "number":  89137,
        "author":  "jkoritzinsky",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-07-18T21:35:21Z",
        "body":  "Although Clang says it technically does not support AddressSanitizer on ARM64, it looks like Mac has support for it on ARM64. We should look at adding test legs for it to ensure that we don\u0027t have memory safety issues on our ARM64-specific code paths.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOYdAUGQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5h0BQZ",
                                           "createdAt":  "2023-07-18T21:35:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nAlthough Clang says it technically does not support AddressSanitizer on ARM64, it looks like Mac has support for it on ARM64. We should look at adding test legs for it to ensure that we don\u0027t have memory safety issues on our ARM64-specific code paths.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ejkoritzinsky\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-arm64`, `area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003eFuture\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-07-18T21:35:20Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Enable AddressSanitizer on ARM64",
        "labels":  [
                       "arch-arm64",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/89138",
        "createdAt":  "2023-07-18T21:36:26Z",
        "number":  89138,
        "author":  "jkoritzinsky",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-07-18T21:36:32Z",
        "body":  "We should try adding a ThreadSanitizer leg to runtime-sanitized and see if we find value in the violations it finds. If so, we should add a ThreadSanitizer leg to our runtime-sanitized pipeline.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOYdAYlg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5h0BiW",
                                           "createdAt":  "2023-07-18T21:36:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nWe should try adding a ThreadSanitizer leg to runtime-sanitized and see if we find value in the violations it finds. If so, we should add a ThreadSanitizer leg to our runtime-sanitized pipeline.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ejkoritzinsky\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003eFuture\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-07-18T21:36:31Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Explore ThreadSanitizer testing",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/89468",
        "createdAt":  "2023-07-25T20:09:24Z",
        "number":  89468,
        "author":  "jkoritzinsky",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-08T17:05:23Z",
        "body":  "It looks like the ASAN default options (i.e. disabling LeakSanitizer) is not being respected on the NativeAOT smoke tests on Linux.\r\n\r\n[https://helixre107v0xdcypoyl9e7f.blob.core.windows.net/dotnet-runtime-refs-heads-main-9878d392b51a427eac/nativeaot.SmokeTests/1/console.41df8d24.log?helixlogtype=result](https://helixre107v0xdcypoyl9e7f.blob.core.windows.net/dotnet-runtime-refs-heads-main-9878d392b51a427eac/nativeaot.SmokeTests/1/console.41df8d24.log?helixlogtype=result)",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOYmBcQQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5iYFxB",
                                           "createdAt":  "2023-07-25T20:09:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nIt looks like the ASAN default options (i.e. disabling LeakSanitizer) is not being respected on the NativeAOT smoke tests on Linux.\r\n\r\n[https://helixre107v0xdcypoyl9e7f.blob.core.windows.net/dotnet-runtime-refs-heads-main-9878d392b51a427eac/nativeaot.SmokeTests/1/console.41df8d24.log?helixlogtype=result](https://helixre107v0xdcypoyl9e7f.blob.core.windows.net/dotnet-runtime-refs-heads-main-9878d392b51a427eac/nativeaot.SmokeTests/1/console.41df8d24.log?helixlogtype=result)\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ejkoritzinsky\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-07-25T20:09:27Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "[runtime-sanitized]: ASAN default options not being respected on NativeAOT smoke tests on Linux",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/90682",
        "createdAt":  "2023-08-16T18:29:37Z",
        "number":  90682,
        "author":  "trylek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-11-27T22:31:53Z",
        "body":  "**ETA**: 1 work-week for design and initial PR switching over parts of CoreCLR build and test execution to the new model\r\n\r\nToday, ```artifacts/log``` is a mess combining build and execution logs without clear indication of what and when was running; among others this means that running a limited test run erroneously ingests the results from a potential prior broader run, sometimes even leading to duplication errors in the Python script.\r\n\r\nThis proposal is to create (possibly gradually as many scripts will need modifying) a cleaner log structure that lets developers reason about their individual builds and runs. My initial thinking is to modify log paths according to the following examples (feel free to suggest any modifications to this scheme):\r\n\r\n* ```artifacts/log/windows.x64.Release/230302-1907.build/(build logs from 19:07 on 3/2 2023)```\r\n* ```artifacts/log/Linux.arm64.Debug/230302-1909.run/(run logs from 19:09 on 3/2 2023)```\r\n\r\nThe nice bit is that you can use filename vs. extension sorting in the file explorer to organize the logs by builds vs. runs vs. a combo of everything ordered by timestamps. \r\n\r\nWe can consider having an extra level corresponding to runtime flavor i.e. ```artifacts/log/coreclr``` vs. ```artifacts/log/mono```.\r\n\r\nWe might want to have something like \"latest build / latest run\", either as a copy of the respective log directory or as a text file containing the name of the \"latest\" folder.\r\n\r\n/cc @dotnet/runtime-infrastructure @janvorli @jkotas @agocke @jkoritzinsky @ViktorHofer @hoyosjs @stephentoub ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHObQBApw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5kM2RD",
                                           "createdAt":  "2023-08-16T18:29:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n**ETA**: 1 work-week for design and initial PR switching over parts of CoreCLR build and test execution to the new model\r\n\r\nToday, ```artifacts/log``` is a mess combining build and execution logs without clear indication of what and when was running; among others this means that running a limited test run erroneously ingests the results from a potential prior broader run, sometimes even leading to duplication errors in the Python script.\r\n\r\nThis proposal is to create (possibly gradually as many scripts will need modifying) a cleaner log structure that lets developers reason about their individual builds and runs. My initial thinking is to modify log paths according to the following examples (feel free to suggest any modifications to this scheme):\r\n\r\n* ```artifacts/log/windows.x64.Release/230302-1907.build/(build logs from 19:07 on 3/2 2023)```\r\n* ```artifacts/log/Linux.arm64.Debug/230302-1909.run/(run logs from 19:09 on 3/2 2023)```\r\n\r\nThe nice bit is that you can use filename vs. extension sorting in the file explorer to organize the logs by builds vs. runs vs. a combo of everything ordered by timestamps. \r\n\r\nWe can consider having an extra level corresponding to runtime flavor i.e. ```artifacts/log/coreclr``` vs. ```artifacts/log/mono```.\r\n\r\nWe might want to have something like \"latest build / latest run\", either as a copy of the respective log directory or as a text file containing the name of the \"latest\" folder.\r\n\r\n/cc @dotnet/runtime-infrastructure @janvorli @jkotas @agocke @jkoritzinsky @vihofer @hoyosjs @stephentoub \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003etrylek\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003eFuture\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-08-16T18:29:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5kM8Jp",
                                           "createdAt":  "2023-08-16T18:50:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "/cc @SamMonoRT @naricc @fanyang-mono ",
                                           "updatedAt":  "2023-08-16T18:50:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5kM958",
                                           "createdAt":  "2023-08-16T18:55:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SamMonoRT",
                                           "body":  "/cc @radical @kotlarmilos ",
                                           "updatedAt":  "2023-08-16T18:55:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5kNCC-",
                                           "createdAt":  "2023-08-16T19:09:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "Would it be interesting to do this for the Arcade-managed binlogs as well, or just for our one-off text-based logs?",
                                           "updatedAt":  "2023-08-16T19:09:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5kNDas",
                                           "createdAt":  "2023-08-16T19:14:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "Thanks Jeremy, of course it would be great to clean up all logs. @SamMonoRT has also just reminded me that there\u0027s an equivalent mess in the pipeline logs i.o.w. in naming of the artifacts in yml files, that would be great to clean up too but it remains to be seen how much work can fit in the quality week timeframe. I think the main thing is to agree on a structure that annoys the smallest number of people, the actual work can be incremental and take a longer period of time as schedule allows considering this is just a \"nice-to-have\" without any blocking implications.",
                                           "updatedAt":  "2023-08-16T19:14:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5kNDnn",
                                           "createdAt":  "2023-08-16T19:14:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "Are there build environments out there that try to sort build and test logs into time-stamped directories?\r\n\r\nWould this mean that developers iterating on their changes and building repeatedly are going to end up with many sets of logs?",
                                           "updatedAt":  "2023-08-16T19:14:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5kNEN8",
                                           "createdAt":  "2023-08-16T19:17:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "Well, I guess that\u0027s up to discussion. I personally find this convenient and it shouldn\u0027t be hard to devise a system that implements a simple retention policy of e.g. 1 month; but we can probably live without it with the caveat that all preceding run\u0027s results are lost the moment you run the next one unless you do manual steps. For precedents, that\u0027s how local testing worked in .NET Native but I guess you don\u0027t count that as a \"commonly used build environment\".",
                                           "updatedAt":  "2023-08-16T19:17:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5kNEnj",
                                           "createdAt":  "2023-08-16T19:18:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "(In fact Helix testing of .NET Native worked in a similar way too in the sense that it created an Azure blob container for each run.)",
                                           "updatedAt":  "2023-08-16T19:18:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5kNKr9",
                                           "createdAt":  "2023-08-16T19:40:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODEBNWg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkotas",
                                                                               "createdAt":  "2023-08-16T19:44:49Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kotlarmilos",
                                                                               "createdAt":  "2023-08-18T07:49:45Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "janvorli",
                                           "body":  "I would actually prefer to get the log directories cleared at the beginning of each test run instead of having the time stamped subfolders. I don\u0027t remember ever needing to look back at previous run results. ",
                                           "updatedAt":  "2023-08-16T19:40:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5kNPrq",
                                           "createdAt":  "2023-08-16T19:57:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODD2xwA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "radical",
                                                                               "createdAt":  "2023-08-16T21:04:27Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Consider using the RID layout here: `windows.x64.Release` -\u003e `windows-x64_Release`. The underscore is borrowed from the new `UseArtifactsOutput` SDK feature that arcadified repositories will eventually switch to: https://learn.microsoft.com/en-us/dotnet/core/whats-new/dotnet-8#simplified-output-paths\r\n\r\nThe idea to use RIDs comes from https://github.com/dotnet/runtime/issues/82011",
                                           "updatedAt":  "2023-08-16T19:57:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5kNib3",
                                           "createdAt":  "2023-08-16T21:05:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radical",
                                           "body":  "\u003e among others this means that running a limited test run erroneously ingests the results from a potential prior broader run, sometimes even leading to duplication errors in the Python script.\r\n\r\nCan you give an example of this for local runs?\r\n\r\nre:retention-of-logs, it could be useful to have results of the last few runs available at least. It can be useful if you are trying to compare test results of some changes, like when investigating a failure, or some random crash in the tests.",
                                           "updatedAt":  "2023-08-16T21:05:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5kUV74",
                                           "createdAt":  "2023-08-17T22:24:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "naricc",
                                           "body":  "This sounds nice, and makes me wish I was still working on Mono.",
                                           "updatedAt":  "2023-08-17T22:24:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5kWJFF",
                                           "createdAt":  "2023-08-18T08:03:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kotlarmilos",
                                           "body":  "Sounds good!\r\n\r\n\u003e We can consider having an extra level corresponding to runtime flavor i.e. `artifacts/log/coreclr` vs. `artifacts/log/mono`.\r\n\r\nI think adding an extra level corresponding to runtime flavor could narrow down the search.\r\n\r\n\u003e We might want to have something like \"latest build / latest run\", either as a copy of the respective log directory or as a text file containing the name of the \"latest\" folder.\r\n\r\nIf we decided to have previous run results, `latest build / latest run` directories would definitely help. ",
                                           "updatedAt":  "2023-08-18T08:03:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5k7PYL",
                                           "createdAt":  "2023-08-25T12:04:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODEytwA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2023-08-25T14:14:29Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "janvorli",
                                           "body":  "\u003e re:retention-of-logs, it could be useful to have results of the last few runs available at least. It can be useful if you are trying to compare test results of some changes, like when investigating a failure, or some random crash in the tests.\r\n\r\nI would argue that if you need this, it is very easy to make a copy of the logs folder between the runs manually. From my experience, this would be needed quite rarely, so most of the time the previous logs would be just a garbage that\u0027s not used. ",
                                           "updatedAt":  "2023-08-25T12:04:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5miST1",
                                           "createdAt":  "2023-09-14T23:02:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "I think we can divide and conquer the discussion so far into two categories:\r\n\r\n1. Improve the structure of the log subtree being produced. Today, the artifacts\\log folder is a complete mess. Cleanly separating build / run logs and using some OS.Arch.Config structure as mentioned by Viktor would go a long way towards something easier to understand.\r\n\r\n2. Local log retention. I perhaps inadvertently spawned that by mentioning timestamps in the log folders. Apparently this bit is somewhat controversial and perhaps goes beyond the scope of what a normal test infrastructure is supposed to do.\r\n\r\nI am all for putting this second part on the back burner for now in favor of making progress on bullet 1; after all, as JanV mentions, there are other ways to archive logs from past local runs and Azure has a retention policy of its own with regards to lab pipeline runs.",
                                           "updatedAt":  "2023-09-14T23:02:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5tAECn",
                                           "createdAt":  "2023-11-27T22:31:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "Adding one more request that isn\u0027t strictly related: during a test run, various log files get written to the test artifacts directories. I\u0027d like to see these get written to the log directories instead, so the test build remains \"untouched\". (I realize it is currently modified for R2R and ilasm round-trip testing, which makes it hard to \"re-run\" tests.)",
                                           "updatedAt":  "2023-11-27T22:31:48Z"
                                       }
                                   ],
                         "totalCount":  16
                     },
        "title":  "[Quality Week Design Proposal] Clean up structure of artifacts/log",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/90905",
        "createdAt":  "2023-08-21T23:26:42Z",
        "number":  90905,
        "author":  "VSadov",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-08T17:05:23Z",
        "body":  "\r\nThis, so far, has been observed only in NativeAOT and only locally, but I am not sure if this could happen in CoreCLR or in CI.\r\nSee discussion here: https://github.com/dotnet/runtime/issues/90848#issuecomment-1687133565\r\n\r\nA repro:\r\n- undo the fix done in https://github.com/dotnet/runtime/pull/90867   (it is a very small fix)\r\n- run runtime tests with NativeAOT Checked   (this may take a while)\r\n```\r\nbuild clr+libs -rc Checked -lc Release \u0026 src\\tests\\build.cmd nativeaot Checked \u0026  src\\tests\\run.cmd runnativeaottests Checked\r\n```\r\n\r\nYou will see a test failure in the output like:\r\n```\r\nUnhandled Exception: System.Diagnostics.DebugProvider+DebugAssertException: IsInstanceOfClass called with interface M\r\n  ethodTable\r\n     at System.Diagnostics.DebugProvider.Fail(String, String) + 0x36\r\n     at System.Diagnostics.Debug.Fail(String, String) + 0x32\r\n     at System.Runtime.TypeCast.IsInstanceOfClass(MethodTable*, Object) + 0x72\r\n     at System.Runtime.EH.FindFirstPassHandler(Object, UInt32, StackFrameIterator\u0026, UInt32\u0026, Byte*\u0026) + 0xfb\r\n     at System.Runtime.EH.DispatchEx(StackFrameIterator\u0026, EH.ExInfo\u0026) + 0x131\r\n     at System.Runtime.EH.RhThrowEx(Object, EH.ExInfo\u0026) + 0x4b\r\n     at GenericCatchInterfaceProgram.Main() + 0x2a\r\n     at Program.\u003c\u003cMain\u003e$\u003eg__TestExecutor23|0_24(StreamWriter tempLogSw, StreamWriter statsCsvSw, Program.\u003c\u003ec__DisplayCl\r\n  ass0_0\u0026) + 0xa7\r\n     at Program.\u003cMain\u003e$(String[] args) + 0x337\r\n     at JIT.Generics!\u003cBaseAddress\u003e+0x26a500\r\n```\r\n\r\nHowever, the test is not marked as failed in the summary of the test run.\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOZJCGIg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5kkIYi",
                                           "createdAt":  "2023-08-21T23:26:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n\r\nThis, so far, has been observed only in NativeAOT and only locally, but I am not sure if this could happen in CoreCLR or in CI.\r\nSee discussion here: https://github.com/dotnet/runtime/issues/90848#issuecomment-1687133565\r\n\r\nA repro:\r\n- undo the fix done in https://github.com/dotnet/runtime/pull/90867   (it is a very small fix)\r\n- run runtime tests with NativeAOT Checked   (this may take a while)\r\n```\r\nbuild clr+libs -rc Checked -lc Release \u0026 src\\tests\\build.cmd nativeaot Checked \u0026  src\\tests\\run.cmd runnativeaottests Checked\r\n```\r\n\r\nYou will see a test failure in the output like:\r\n```\r\nUnhandled Exception: System.Diagnostics.DebugProvider+DebugAssertException: IsInstanceOfClass called with interface M\r\n  ethodTable\r\n     at System.Diagnostics.DebugProvider.Fail(String, String) + 0x36\r\n     at System.Diagnostics.Debug.Fail(String, String) + 0x32\r\n     at System.Runtime.TypeCast.IsInstanceOfClass(MethodTable*, Object) + 0x72\r\n     at System.Runtime.EH.FindFirstPassHandler(Object, UInt32, StackFrameIterator\u0026, UInt32\u0026, Byte*\u0026) + 0xfb\r\n     at System.Runtime.EH.DispatchEx(StackFrameIterator\u0026, EH.ExInfo\u0026) + 0x131\r\n     at System.Runtime.EH.RhThrowEx(Object, EH.ExInfo\u0026) + 0x4b\r\n     at GenericCatchInterfaceProgram.Main() + 0x2a\r\n     at Program.\u003c\u003cMain\u003e$\u003eg__TestExecutor23|0_24(StreamWriter tempLogSw, StreamWriter statsCsvSw, Program.\u003c\u003ec__DisplayCl\r\n  ass0_0\u0026) + 0xa7\r\n     at Program.\u003cMain\u003e$(String[] args) + 0x337\r\n     at JIT.Generics!\u003cBaseAddress\u003e+0x26a500\r\n```\r\n\r\nHowever, the test is not marked as failed in the summary of the test run.\r\n\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eVSadov\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-08-21T23:26:48Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "[NativeAOT] Individual test failures may not always be surfaced as a failure in the test run summary.",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/91871",
        "createdAt":  "2023-09-11T10:21:53Z",
        "number":  91871,
        "author":  "kotlarmilos",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-06-19T10:22:11Z",
        "body":  "## Description\r\n\r\nNative AOT doesn\u0027t support loading a test assembly from disk. To run the library tests on apple mobile platforms with Native AOT, it is required to implement the XHarness test discovery/running without the XunitFrontController, similar to the ThreadlessXunitRunner in XHarness or SingleFileTestRunner in the runtime.\r\n\r\n## Repro steps\r\n1. Checkout to the https://github.com/kotlarmilos/runtime/tree/feature/nativeaot-library-tests\r\n2. Run the tests using the command below.\r\n```sh\r\n./build.sh -ci -arch arm64 -os ios -s libs.tests -c Release /p:ArchiveTests=true /p:RunSmokeTestsOnly=true /p:DevTeamProvisioning=- /p:BuildTestsOn=local /p:UseNativeAOTRuntime=true /p:RunAOTCompilation=false /p:ContinuousIntegrationBuild=true  /p:BuildDarwinFrameworks=true /bl\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOZiOoxQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5mI6fY",
                                           "createdAt":  "2023-09-11T10:31:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n## Description\r\n\r\nNative AOT doesn\u0027t support loading a test assembly from disk. To run the library tests on apple mobile platforms, it is required to implement the XHarness test discovery/running without the XunitFrontController.\r\n\r\n## Repro steps\r\n1. Checkout to the https://github.com/kotlarmilos/runtime/tree/feature/nativeaot-library-tests\r\n2. Run the tests using the command below.\r\n```sh\r\n./build.sh -ci -arch arm64 -os ios -s libs.tests -c Release /p:ArchiveTests=true /p:RunSmokeTestsOnly=true /p:DevTeamProvisioning=- /p:BuildTestsOn=local /p:UseNativeAOTRuntime=true /p:RunAOTCompilation=false /p:ContinuousIntegrationBuild=true  /p:BuildDarwinFrameworks=true /bl\r\n```\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ekotlarmilos\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`, `needs-area-label`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-09-11T10:31:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5mI6jF",
                                           "createdAt":  "2023-09-11T10:31:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027os-ios\u0027: @steveisok, @akoeplinger, @kotlarmilos\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n## Description\r\n\r\nNative AOT doesn\u0027t support loading a test assembly from disk. To run the library tests on apple mobile platforms, it is required to implement the XHarness test discovery/running without the XunitFrontController.\r\n\r\n## Repro steps\r\n1. Checkout to the https://github.com/kotlarmilos/runtime/tree/feature/nativeaot-library-tests\r\n2. Run the tests using the command below.\r\n```sh\r\n./build.sh -ci -arch arm64 -os ios -s libs.tests -c Release /p:ArchiveTests=true /p:RunSmokeTestsOnly=true /p:DevTeamProvisioning=- /p:BuildTestsOn=local /p:UseNativeAOTRuntime=true /p:RunAOTCompilation=false /p:ContinuousIntegrationBuild=true  /p:BuildDarwinFrameworks=true /bl\r\n```\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ekotlarmilos\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `os-ios`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-09-11T10:31:39Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "[infra] Implement XHarness test discovery/running without the XunitFrontController",
        "labels":  [
                       "area-Infrastructure",
                       "os-ios"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/92290",
        "createdAt":  "2023-09-19T17:58:14Z",
        "number":  92290,
        "author":  "jkoritzinsky",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T23:00:38Z",
        "body":  "## Build Information\r\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=410579\r\nBuild error leg or test failing: Build / Mono  Product Build windows x64 release / Build product\r\nPull request: https://github.com/dotnet/runtime/pull/91768\r\n\u003c!-- Error message template  --\u003e\r\n## Error Message\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssues.md#how-to-fill-out-a-known-issue-error-section).\r\n\r\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": \"\",\r\n  \"ErrorPattern\": \"Child Node \\\"[0-9]+\\\" exited prematurely.\",\r\n  \"BuildRetry\": true,\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\n\r\n\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n|Build|Definition|Step Name|Console log|Pull Request|\r\n|---|---|---|---|---|\r\n|[1153034](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153034)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1153034/logs/271)|dotnet/runtime#119829|\r\n|[1150893](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150893)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1150893/logs/556)||\r\n|[1150230](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150230)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1150230/logs/839)|dotnet/runtime#119791|\r\n|[1148163](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148163)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1148163/logs/642)||\r\n|[1147155](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147155)|dotnet/runtime|Build|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1147155/logs/2252)|dotnet/runtime#119676|\r\n|[2792199](https://dev.azure.com/dnceng/internal/_build/results?buildId=2792199)|dotnet-runtime|Build product|[Log](https://dev.azure.com/dnceng/7ea9116e-9fac-403d-b258-b31fcf1bb293/_apis/build/builds/2792199/logs/143)||\r\n|[1144732](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144732)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1144732/logs/339)||\r\n|[1142005](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142005)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1142005/logs/59)|dotnet/runtime#119454|\r\n|[2786228](https://dev.azure.com/dnceng/internal/_build/results?buildId=2786228)|dotnet-runtime|Build product|[Log](https://dev.azure.com/dnceng/7ea9116e-9fac-403d-b258-b31fcf1bb293/_apis/build/builds/2786228/logs/1923)||\r\n|[1133869](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1133869)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1133869/logs/348)||\r\n|[1133049](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1133049)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1133049/logs/562)||\r\n|[1132305](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1132305)|dotnet/runtime|Build Tests|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1132305/logs/395)||\r\n|[1130264](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1130264)|dotnet/runtime|Build|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1130264/logs/2140)|dotnet/runtime#119027|\r\n\r\n|Build|Definition|Test|Pull Request|\r\n|---|---|---|---|\r\n|[1143283](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143283)|dotnet/runtime|[Wasm.Build.Tests.DllImportTests.DllImportWithFunctionPointersCompilesWithoutWarning(config: Release, aot: False)](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143283\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31524270\u0026resultId=100016)|dotnet/runtime#119494|\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|4|14|\r\n\u003c!--Known issue error report end --\u003e\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=410579\r\n**Error message validated:** `Child Node \"[0-9]+\" exited prematurely.`\r\n**Result validation: :white_check_mark:** Known issue matched with the provided build.\r\n**Validation performed at:** 9/19/2023 6:06:29 PM UTC\r\n\u003c!-- Known issue validation end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOiFK5Rg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5m5D0O",
                                           "createdAt":  "2023-09-19T17:58:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n## Build Information\r\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=410579\r\nBuild error leg or test failing: Build / Mono  Product Build windows x64 release / Build product\r\nPull request: https://github.com/dotnet/runtime/pull/91768\r\n\u003c!-- Error message template  --\u003e\r\n## Error Message\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssues.md#how-to-fill-out-a-known-issue-error-section).\r\n\r\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": \"\",\r\n  \"ErrorPattern\": \"Child Node \\\"[0-9]+\\\" exited prematurely.\",\r\n  \"BuildRetry\": true,\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\n\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ejkoritzinsky\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`blocking-clean-ci`, `area-Infrastructure`, `untriaged`, `Known Build Error`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-09-19T17:58:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5pocRt",
                                           "createdAt":  "2023-10-20T07:16:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "190 hits per month\r\n\r\ncc @rainersigwald @rokonec",
                                           "updatedAt":  "2023-10-20T07:16:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5sHYQ5",
                                           "createdAt":  "2023-11-16T06:42:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "reup for 97 hits per month",
                                           "updatedAt":  "2023-11-16T06:42:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc50cQyM",
                                           "createdAt":  "2024-02-20T06:30:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichalStrehovsky",
                                           "body":  "We now have more useful information in the logs for these. Two of the available logs have this in it:\r\n\r\n```\r\n2024-02-19T21:13:25.8115210Z MSBUILD : error MSB4166: Child node \"2\" exited prematurely. Shutting down. Diagnostic information may be found in files in \"/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/MSBuildTemprunner/\" and will be named MSBuild_*.failure.txt. This location can be changed by setting the MSBUILDDEBUGPATH environment variable to a different directory.\r\n2024-02-19T21:13:25.8126770Z MSBUILD : error MSB4166: /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/MSBuildTemprunner/MSBuild_pid-50918_4ee39488d5ca4c7d9fb049f19f43c144.failure.txt:\r\n2024-02-19T21:13:25.8128200Z MSBUILD : error MSB4166: UNHANDLED EXCEPTIONS FROM PROCESS 50918:\r\n2024-02-19T21:13:25.8129250Z MSBUILD : error MSB4166: =====================\r\n2024-02-19T21:13:25.8140670Z MSBUILD : error MSB4166: 2/19/2024 9:13:25 PM\r\n2024-02-19T21:13:25.8241810Z MSBUILD : error MSB4166: System.IO.IOException: No buffer space available\r\n2024-02-19T21:13:25.8260730Z MSBUILD : error MSB4166:  ---\u003e System.Net.Sockets.SocketException (55): No buffer space available\r\n2024-02-19T21:13:25.8363710Z MSBUILD : error MSB4166:    at System.IO.Pipes.PipeStream.WriteCore(ReadOnlySpan`1 buffer)\r\n2024-02-19T21:13:25.8364490Z MSBUILD : error MSB4166:    --- End of inner exception stack trace ---\r\n2024-02-19T21:13:25.8465500Z MSBUILD : error MSB4166:    at System.IO.Pipes.PipeStream.WriteCore(ReadOnlySpan`1 buffer)\r\n2024-02-19T21:13:25.8569320Z MSBUILD : error MSB4166:    at System.IO.Pipes.PipeStream.Write(Byte[] buffer, Int32 offset, Int32 count)\r\n2024-02-19T21:13:25.8670730Z MSBUILD : error MSB4166:    at Microsoft.Build.BackEnd.NodeEndpointOutOfProcBase.RunReadLoop(Stream localReadPipe, Stream localWritePipe, ConcurrentQueue`1 localPacketQueue, AutoResetEvent localPacketAvailable, AutoResetEvent localTerminatePacketPump)\r\n2024-02-19T21:13:25.8773480Z MSBUILD : error MSB4166: ===================\r\n```\r\n\r\n@rainersigwald does this ring any bell?",
                                           "updatedAt":  "2024-02-20T06:30:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6IUXrI",
                                           "createdAt":  "2024-08-13T20:09:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rainersigwald",
                                           "body":  "All of the recent hits seem to be dotnet/msbuild#10342, which should be fixed in the preview7 GA build. Is there a timeline for updating to that? Anything my team can help with?",
                                           "updatedAt":  "2024-08-13T20:09:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6IUYbW",
                                           "createdAt":  "2024-08-13T20:11:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rainersigwald",
                                           "body":  "\u003e ```\r\n\u003e 2024-02-19T21:13:25.8115210Z MSBUILD : error MSB4166: Child node \"2\" exited prematurely. Shutting down. Diagnostic information may be found in files in \"/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/MSBuildTemprunner/\" and will be named MSBuild_*.failure.txt. This location can be changed by setting the MSBUILDDEBUGPATH environment variable to a different directory.\r\n\u003e 2024-02-19T21:13:25.8126770Z MSBUILD : error MSB4166: /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/MSBuildTemprunner/MSBuild_pid-50918_4ee39488d5ca4c7d9fb049f19f43c144.failure.txt:\r\n\u003e 2024-02-19T21:13:25.8128200Z MSBUILD : error MSB4166: UNHANDLED EXCEPTIONS FROM PROCESS 50918:\r\n\u003e 2024-02-19T21:13:25.8129250Z MSBUILD : error MSB4166: =====================\r\n\u003e 2024-02-19T21:13:25.8140670Z MSBUILD : error MSB4166: 2/19/2024 9:13:25 PM\r\n\u003e 2024-02-19T21:13:25.8241810Z MSBUILD : error MSB4166: System.IO.IOException: No buffer space available\r\n\u003e 2024-02-19T21:13:25.8260730Z MSBUILD : error MSB4166:  ---\u003e System.Net.Sockets.SocketException (55): No buffer space available\r\n\u003e 2024-02-19T21:13:25.8363710Z MSBUILD : error MSB4166:    at System.IO.Pipes.PipeStream.WriteCore(ReadOnlySpan`1 buffer)\r\n\u003e 2024-02-19T21:13:25.8364490Z MSBUILD : error MSB4166:    --- End of inner exception stack trace ---\r\n\u003e 2024-02-19T21:13:25.8465500Z MSBUILD : error MSB4166:    at System.IO.Pipes.PipeStream.WriteCore(ReadOnlySpan`1 buffer)\r\n\u003e 2024-02-19T21:13:25.8569320Z MSBUILD : error MSB4166:    at System.IO.Pipes.PipeStream.Write(Byte[] buffer, Int32 offset, Int32 count)\r\n\u003e 2024-02-19T21:13:25.8670730Z MSBUILD : error MSB4166:    at Microsoft.Build.BackEnd.NodeEndpointOutOfProcBase.RunReadLoop(Stream localReadPipe, Stream localWritePipe, ConcurrentQueue`1 localPacketQueue, AutoResetEvent localPacketAvailable, AutoResetEvent localTerminatePacketPump)\r\n\u003e 2024-02-19T21:13:25.8773480Z MSBUILD : error MSB4166: ===================\r\n\u003e ```\r\n\r\nthis one I don\u0027t recognize, but I haven\u0027t seen it in the current links.",
                                           "updatedAt":  "2024-08-13T20:11:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6IUp3q",
                                           "createdAt":  "2024-08-13T20:50:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rainersigwald",
                                           "body":  "Is it possible to have multiple issues with known problems that match a signature with prioritization? I\u0027d like to create one like `at Microsoft.Build.BackEnd.Logging.LoggingContext.LogBuildEvent` to bucket the https://github.com/dotnet/msbuild/issues/10342 hits so we can use this one for \"everything else that causes an MSBuild worker node crash\".",
                                           "updatedAt":  "2024-08-13T20:50:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6IUrlG",
                                           "createdAt":  "2024-08-13T20:55:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "You can have multiple known issues I think, but I don\u0027t think there\u0027s a prioritization mechanism.\r\n\r\nI\u0027d recommend having a separate issue to bucket the dotnet/msbuild#10342 hits and leave this one as a catch-all to trigger build retries when a node dies (and we can triage specific failure classes into different known issues if they happen with enough frequency).",
                                           "updatedAt":  "2024-08-13T20:55:48Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "MSBuild crashing in the build",
        "labels":  [
                       "blocking-clean-ci",
                       "area-Infrastructure",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/92843",
        "createdAt":  "2023-09-30T00:23:42Z",
        "number":  92843,
        "author":  "jtschuster",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-08-22T15:42:19Z",
        "body":  "",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOadfAJw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5n5ycL",
                                           "createdAt":  "2023-10-02T15:10:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @agocke, @sbomer, @vitek-karas\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nnull\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ejtschuster\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`untriaged`, `in-pr`, `area-Tools-ILLink`, `needs-area-label`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-10-02T15:10:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5n7-5k",
                                           "createdAt":  "2023-10-02T21:15:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nnull\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ejtschuster\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `in-pr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-10-02T21:15:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5p18An",
                                           "createdAt":  "2023-10-23T18:10:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "The fix was reverted in #92844",
                                           "updatedAt":  "2023-10-23T18:10:23Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Remove the `add_linker_flag` function and instead use `target_link_options`",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/92911",
        "createdAt":  "2023-10-02T22:22:44Z",
        "number":  92911,
        "author":  "agocke",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC8DueQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "filipnavara",
                                            "createdAt":  "2023-10-03T10:41:37Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "lambdageek",
                                            "createdAt":  "2023-10-04T16:42:17Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "dacheng-gao",
                                            "createdAt":  "2024-10-23T04:08:27Z"
                                        }
                                    ],
                          "totalCount":  3
                      },
        "updatedAt":  "2025-06-18T16:38:59Z",
        "body":  "We currently use .dwarf files, which are unsupported.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOsernvQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5n8RV1",
                                           "createdAt":  "2023-10-02T22:22:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nWe currently use .dwarf files, which are unsupported.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eagocke\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e8.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-10-02T22:22:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc51Aqm9",
                                           "createdAt":  "2024-02-25T23:59:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "Some notes on this issue:\r\n\r\nApple\u0027s supported symbol file format is the `.dSYM` bundle. A `.dSYM` bundle is a directory tree in a specific format that contains various files, including the DWARF format symbols for the executable, as well as various meta-data. In the macOS Finder it appears to be a single file (but can be explored using the \"Show Package Contents\" command). Confusingly, much documentation uses the term \".dSYM file\", which is used essentially interchangeably with \".dSYM bundle\". Note, however, that the `.dSYM` is always a bundle (directory tree), never a single file.\r\n\r\nThe .NET build process currently creates a single file for each executable file\u0027s symbols, with the file extension `.dwarf`. This is not the standard way that symbol files are created and used on macOS. There is some concern that this might not be supported long-term. There may also be developer experience improvements to using `.dSYM` format symbols, such as automatic Spotlight integration for symbol finding.\r\n\r\nCreating a .dwarf file is done by running the `dsymutil --flat` command on an executable. Simply removing the `--flat` argument during the build process allows creating `.dSYM` bundles. However, there are lots of parts of the .NET build and packaging process that need to be updated to deal with the fact that symbols are now directory trees and not just single files.\r\n\r\nIt is best to consider a `.dSYM` bundle as opaque: do not make assumptions about the structure and contents of the bundle. There may be reasons to break this rule. For instance, one file inside the `.dSYM` bundle is the DWARF symbol file. We might want to read that file directly in order to index the symbols. However, even that might be better done by addressing the `.dSYM` bundle as a whole, e.g., using the following commands to get the build UUID for the contained symbols:\r\n```\r\n% dwarfdump --uuid createdump.dSYM \r\nUUID: D5BFA2CC-C73B-3E6F-8B2C-E96246EE2EAD (arm64) createdump.dSYM/Contents/Resources/DWARF/createdump\r\n```\r\n\r\nA description of some of the challenges in converting the .NET build to using `.dSYM` bundles follows.\r\n\r\n## MSBuild files versus directories\r\n\r\nThe .NET build uses msbuild for most activities. MSBuild has a strong bias towards files and not directories, at least when it comes to [item glob expressions](https://learn.microsoft.com/en-us/visualstudio/msbuild/msbuild-items?view=vs-2022#use-wildcards-to-specify-items). For example, using:\r\n```\r\n\u003cFiles Include=\"*.pdb;*.dSYM\"/\u003e\r\n```\r\nWill include all the `*.pdb` files in the directory, but will ignore any `*.dSYM` bundles.\r\n\r\nUsing:\r\n```\r\n\u003cFiles Include=\"*.dSYM/**\"/\u003e\r\n```\r\nWill include all the files in the `.dSYM` bundle in the `Files` item, individually. This can be useful sometimes, but often it is useful to treat the `.dSYM` bundle as a \"single\", \"whole\" thing, and not as a set of pieces.\r\n\r\n## MSBuild item transform globbing\r\n\r\nA lot of MSBuild code does transforms on items to form new items. One example is to transform a list of generated executables to a list of the related symbol files (or bundles):\r\n```\r\n\u003cNonWindowsSymbolFile Include=\"@(NonWindowsNativeFile -\u003e \u0027%(Identity).dSYM\u0027)\u003c/NonWindowsSymbolFile\u003e\r\n```\r\n\r\nThis is a 1-to-1 mapping. However, if we need to expand this to the full list of files in the bundle (instead of just the bundle itself), we might do:\r\n```\r\n\u003cNonWindowsSymbolFile Include=\"@(NonWindowsNativeFile -\u003e \u0027%(Identity).dSYM/**\u0027)\u003c/NonWindowsSymbolFile\u003e\r\n```\r\n\r\n(Note the `/**` wildcard.)\r\n\r\nThis doesn\u0027t work, however, as the \"globbing\" does not get expanded by MSBuild during the transform. A workaround is to \"go through\" a property:\r\n```\r\n        \u003cPropertyGroup\u003e\r\n            \u003cSymFilesReplace\u003e@(Files -\u003e \u0027%(Identity).dSYM/**\u0027)\u003c/SymFilesReplace\u003e\r\n        \u003c/PropertyGroup\u003e\r\n        \u003cItemGroup\u003e\r\n            \u003cSymFiles Include=\"$(SymFilesReplace)\" /\u003e\r\n        \u003c/ItemGroup\u003e\r\n```\r\n\r\nNote: if using the \"expand all files\" option in MSBuild, it seems to be very difficult to then associate a per-.dSYM attribute to each of the expanded files, such as the target directory each should be copied to in the NuGet package.\r\n\r\n## MSBuild copy directories\r\n\r\nMSBuild has a built-in [`Copy`](https://learn.microsoft.com/en-us/visualstudio/msbuild/copy-task?view=vs-2022) task to copy files. However, to copy directories, preserving directory structure, requires a bit of a [hack](https://learn.microsoft.com/en-us/visualstudio/msbuild/copy-task?view=vs-2022#example-2). A [December 2023 change](https://github.com/dotnet/msbuild/pull/8843) to the `Copy` task did add folder tree copying that might be helpful, but it isn\u0027t available in our build tools yet, and it requires distinguishing files and directories to be copied.\r\n\r\nIf we want to treat `.dSYM` bundles as an atomic unit, we might need to implement a `CopyFileOrFolder` custom MSBuild task that can handle either files (e.g., `*.pdb`) or folders (e.g. `*.dSYM`) and copy them appropriately.\r\n\r\n## NuGet packing\r\n\r\n.NET packs native builds and symbols into NuGet \"legacy\" symbols packages. For example, the `Microsoft.NETCore.App.Runtime.osx-arm64.9.0.0-dev.symbols.nupkg` package contains (this is a small subset):\r\n```\r\n./runtimes/osx-arm64/native/createdump\r\n./runtimes/osx-arm64/native/createdump.dwarf\r\n./runtimes/osx-arm64/native/libclrjit.dylib\r\n./runtimes/osx-arm64/native/libclrjit.dylib.dwarf\r\n```\r\n\r\nTo support `.dSYM`, these `.dwarf` files would need to be replaced with their full `.dSYM` bundle replacements.\r\n\r\nIt appears that NuGet itself has assumptions about symbol files being single files with a distinguished file extension. Neither of these things are true for `.dSYM` bundles: they are directories, and the files they contain both have common file extensions not specific to debug information (e.g., \".plist\", \".yml\") and have no file extension at all (for the DWARF info file).\r\n\r\nThe MSBuild Shared Framework SDK file in the [arcade repo](https://github.com/dotnet/arcade), in src/Microsoft.DotNet.SharedFramework.Sdk/targets/sharedfx.targets, defines an MSBuild property that determines how NuGet packages symbols. Specifically:\r\n```\r\n\u003cAllowedOutputExtensionsInSymbolsPackageBuildOutputFolder\u003e$(AllowedOutputExtensionsInSymbolsPackageBuildOutputFolder);.map;.r2rmap;.dbg;.debug;.dwarf\u003c/AllowedOutputExtensionsInSymbolsPackageBuildOutputFolder\u003e\r\n```\r\n\r\nThis is passed through many layers before ending up being used in the NuGet client packing code to determine how to pack symbols packages, [here](https://github.com/NuGet/NuGet.Client/blob/5502baa16a294bb1290b6fd2a135694ed2884a59/src/NuGet.Core/NuGet.Commands/MSBuildProjectFactory.cs#L117-L152).\r\n\r\nIt needs more investigation to determine if NuGet needs to learn about `.dSYM` bundles as directories with multiple files, or whether all the packing changs that are needed can be accomplished without touching NuGet.\r\n\r\n## Symbol server uploading\r\n\r\nOne use for the generated symbols packages is apparently to give to the symbol server indexer. It cracks the NuGet package, looks for symbol files, and index and uploads the files. It is presumed that if the symbol package contains a `.dSYM` bundle, including the DWARF debug info file, that the symbol indexer will be able to understand that the debug info file actually is a debug info file (despite having no file extension), and handle it properly. This might need to be verified.\r\n\r\nQuestion: where is the symbol server uploading code?\r\n\r\nIt is a separate issue about whether the symbol indexer should be augmented such that (1) the entire `.dSYM` bundle is indexed, (2) Mac native debuggers (lldb) can use the symbol server to automatically find and download the archived `.dSYM` bundle.\r\n\r\n## dSYM-in-a-file\r\n\r\nIt\u0027s easy to get the build to produce `.dSYM` bundles for native code symbols. The biggest problems seem to be in how to package the bundles in NuGet. It has been suggested that perhaps a halfway point would be to (1) produce the `.dSYM` bundle, then (2) immediately compress the bundle into a single file using zip or tar, e.g., create a `.dSYMzip` file. This could be packaged like we currently package .dwarf files. Since it\u0027s a single file, it might be easier to deal with than teaching all layers of the build system about folders. It would almost certainly require changes to the symbol server indexer.\r\n\r\n## MSBuild complexity\r\n\r\nGeneral comment on working in MSBuild in the .NET build system: the rules that affect the build are spread out widely, between the `eng` tree, the `src/installer` tree, the arcade repo (both MSBuild files and custom MSBuild targets), and the NuGet source tree. It is extremely difficult to find documentation on many MSBuild properties and items, determine where they are defined and used, and generally understand the order of operations. There is no IDE support nor any debugger.\r\n",
                                           "updatedAt":  "2024-02-25T23:59:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc51Aqx7",
                                           "createdAt":  "2024-02-26T00:01:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "A partial implementation, or, a set of attempts: https://github.com/dotnet/runtime/pull/96456",
                                           "updatedAt":  "2024-02-26T00:01:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6x6ue9",
                                           "createdAt":  "2025-06-18T16:38:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rolfbjarne",
                                           "body":  "\u003e ## dSYM-in-a-file\n\u003e It\u0027s easy to get the build to produce `.dSYM` bundles for native code symbols. The biggest problems seem to be in how to package the bundles in NuGet. It has been suggested that perhaps a halfway point would be to (1) produce the `.dSYM` bundle, then (2) immediately compress the bundle into a single file using zip or tar, e.g., create a `.dSYMzip` file. This could be packaged like we currently package .dwarf files. Since it\u0027s a single file, it might be easier to deal with than teaching all layers of the build system about folders. It would almost certainly require changes to the symbol server indexer.\n\nI\u0027m not sure if dSYM bundles can have symlinks, but if they can, then they can\u0027t be stored as-is in nupkgs (for at least two reasons: they\u0027re not preserved correctly when expanded and end up being the target file instead of the symlink, and it wouldn\u0027t work on Windows anyway).\n\nThe solution here is to store the .dSYM as a zip file as you\u0027ve suggested. This also works around all the other problems where .dSYM bundles are directories.",
                                           "updatedAt":  "2025-06-18T16:38:59Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Support Apple .dSYM bundles in symbol packages/indexing",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/94183",
        "createdAt":  "2023-10-30T17:42:25Z",
        "number":  94183,
        "author":  "ericstj",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-04T18:07:03Z",
        "body":  "### Description\n\nWhen running `dotnet test` on a test project in dotnet/runtime that targets .NETFramework I expect tests to run, but they do not.  Seems like we have lots of other issues mentioning this, but I couldn\u0027t find an active one.\n\n### Reproduction Steps\n\nbuild clr+libs -rc Release\r\ncd src\\libraries\\System.Collections.Immutable\\tests\r\ndotnet test -f:net462\n\n### Expected behavior\n\nTests run.\r\n```\r\n    Discovering: System.Collections.Immutable.Tests (app domain = on [no shadow copy], method display = ClassAndMethod,\r\n   method display options = None)\r\n    Discovered:  System.Collections.Immutable.Tests (found 4008 of 4123 test cases)\r\n    Starting:    System.Collections.Immutable.Tests (parallel test collections = on, max threads = 16)\r\n```\n\n### Actual behavior\n\nNo tests run:\r\n```\r\nTest run for c:\\src\\dotnet\\runtime\\artifacts\\bin\\System.Collections.Immutable.Tests\\Debug\\net462\\System.Collections.Immutable.Tests.dll (.NETFramework,Version=v4.6.2)\r\nStarting test execution, please wait...\r\nA total of 1 test files matched the specified pattern.\r\nNo test is available in c:\\src\\dotnet\\runtime\\artifacts\\bin\\System.Collections.Immutable.Tests\\Debug\\net462\\System.Collections.Immutable.Tests.dll. Make sure that test discoverer \u0026 executors are registered and platform \u0026 framework version settings are appropriate and try again.\r\n```\n\n### Regression?\n\nI think this is a recent regression.  I believe this used to work as I remember seeing test failures on framework when running with dotnet test.\n\n### Known Workarounds\n\nDirectly invoke the `test` target.\r\n\r\n\u003e \\src\\dotnet\\runtime\\.dotnet\\dotnet build /t:test -f:net462\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOwgI43g==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5qcEBp",
                                           "createdAt":  "2023-10-30T17:42:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-collections\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\n\nWhen running `dotnet test` on a test project in dotnet/runtime that targets .NETFramework I expect tests to run, but they do not.  Seems like we have lots of other issues mentioning this, but I couldn\u0027t find an active one.\n\n### Reproduction Steps\n\nbuild clr+libs -rc Release\r\ncd src\\libraries\\System.Collections.Immutable\\tests\r\ndotnet test -f:net462\n\n### Expected behavior\n\nTests run.\r\n```\r\n    Discovering: System.Collections.Immutable.Tests (app domain = on [no shadow copy], method display = ClassAndMethod,\r\n   method display options = None)\r\n    Discovered:  System.Collections.Immutable.Tests (found 4008 of 4123 test cases)\r\n    Starting:    System.Collections.Immutable.Tests (parallel test collections = on, max threads = 16)\r\n```\n\n### Actual behavior\n\nNo tests run:\r\n```\r\nTest run for c:\\src\\dotnet\\runtime\\artifacts\\bin\\System.Collections.Immutable.Tests\\Debug\\net462\\System.Collections.Immutable.Tests.dll (.NETFramework,Version=v4.6.2)\r\nStarting test execution, please wait...\r\nA total of 1 test files matched the specified pattern.\r\nNo test is available in c:\\src\\dotnet\\runtime\\artifacts\\bin\\System.Collections.Immutable.Tests\\Debug\\net462\\System.Collections.Immutable.Tests.dll. Make sure that test discoverer \u0026 executors are registered and platform \u0026 framework version settings are appropriate and try again.\r\n```\n\n### Regression?\n\nI think this is a recent regression.  I believe this used to work as I remember seeing test failures on framework when running with dotnet test.\n\n### Known Workarounds\n\nDirectly invoke the `test` target.\r\n\r\n\u003e \\src\\dotnet\\runtime\\.dotnet\\dotnet build /t:test -f:net462\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eericstj\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-System.Collections`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-10-30T17:42:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5qcEKh",
                                           "createdAt":  "2023-10-30T17:42:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Description\n\nWhen running `dotnet test` on a test project in dotnet/runtime that targets .NETFramework I expect tests to run, but they do not.  Seems like we have lots of other issues mentioning this, but I couldn\u0027t find an active one.\n\n### Reproduction Steps\n\nbuild clr+libs -rc Release\r\ncd src\\libraries\\System.Collections.Immutable\\tests\r\ndotnet test -f:net462\n\n### Expected behavior\n\nTests run.\r\n```\r\n    Discovering: System.Collections.Immutable.Tests (app domain = on [no shadow copy], method display = ClassAndMethod,\r\n   method display options = None)\r\n    Discovered:  System.Collections.Immutable.Tests (found 4008 of 4123 test cases)\r\n    Starting:    System.Collections.Immutable.Tests (parallel test collections = on, max threads = 16)\r\n```\n\n### Actual behavior\n\nNo tests run:\r\n```\r\nTest run for c:\\src\\dotnet\\runtime\\artifacts\\bin\\System.Collections.Immutable.Tests\\Debug\\net462\\System.Collections.Immutable.Tests.dll (.NETFramework,Version=v4.6.2)\r\nStarting test execution, please wait...\r\nA total of 1 test files matched the specified pattern.\r\nNo test is available in c:\\src\\dotnet\\runtime\\artifacts\\bin\\System.Collections.Immutable.Tests\\Debug\\net462\\System.Collections.Immutable.Tests.dll. Make sure that test discoverer \u0026 executors are registered and platform \u0026 framework version settings are appropriate and try again.\r\n```\n\n### Regression?\n\nI think this is a recent regression.  I believe this used to work as I remember seeing test failures on framework when running with dotnet test.\n\n### Known Workarounds\n\nDirectly invoke the `test` target.\r\n\r\n\u003e \\src\\dotnet\\runtime\\.dotnet\\dotnet build /t:test -f:net462\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eericstj\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-10-30T17:42:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5qcWWf",
                                           "createdAt":  "2023-10-30T18:31:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Someone needs to debug this. This likely also impacts VS Text Explorer which uses the VSTest runner underneath. There are settings to get more verbose logs returned by VSTest.",
                                           "updatedAt":  "2023-10-30T18:31:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5qcW-c",
                                           "createdAt":  "2023-10-30T18:32:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "One more thought, that could be related to the recent xunit 2.5.x upgrade.",
                                           "updatedAt":  "2023-10-30T18:32:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5qcaD2",
                                           "createdAt":  "2023-10-30T18:41:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "```\r\n\r\nTpTrace Verbose: 0 : 25352, 1, 2023/10/30, 19:39:45.757, 3877444491007, vstest.console.dll, MetadataReaderExtensionsHelper: Discovering extensions inside assembly \u0027Microsoft.Diagnostics.NETCore.Client, Version=0.2.8.21101, Culture=neutral, PublicKeyToken=31bf3856ad364e35\u0027 file path \u0027C:\\git\\runtime2\\.dotnet\\sdk\\8.0.100-rtm.23506.1\\Extensions\\Microsoft.Diagnostics.NETCore.Client.dll\u0027\r\nTpTrace Information: 0 : 25352, 1, 2023/10/30, 19:39:45.766, 3877444578798, vstest.console.dll, AssemblyResolver.OnResolve: Microsoft.Bcl.AsyncInterfaces: Resolving assembly.\r\nTpTrace Information: 0 : 25352, 1, 2023/10/30, 19:39:45.766, 3877444580691, vstest.console.dll, AssemblyResolver.OnResolve: Microsoft.Bcl.AsyncInterfaces: Searching in: \u0027C:\\git\\runtime2\\.dotnet\\sdk\\8.0.100-rtm.23506.1\\Extensions\u0027.\r\nTpTrace Information: 0 : 25352, 1, 2023/10/30, 19:39:45.766, 3877444582066, vstest.console.dll, AssemblyResolver.OnResolve: Microsoft.Bcl.AsyncInterfaces: Assembly path does not exist: \u0027C:\\git\\runtime2\\.dotnet\\sdk\\8.0.100-rtm.23506.1\\Extensions\\Microsoft.Bcl.AsyncInterfaces.dll\u0027, returning.\r\nTpTrace Information: 0 : 25352, 1, 2023/10/30, 19:39:45.767, 3877444583023, vstest.console.dll, AssemblyResolver.OnResolve: Microsoft.Bcl.AsyncInterfaces: Assembly path does not exist: \u0027C:\\git\\runtime2\\.dotnet\\sdk\\8.0.100-rtm.23506.1\\Extensions\\Microsoft.Bcl.AsyncInterfaces.exe\u0027, returning.\r\nTpTrace Information: 0 : 25352, 1, 2023/10/30, 19:39:45.767, 3877444583316, vstest.console.dll, AssemblyResolver.OnResolve: Microsoft.Bcl.AsyncInterfaces: Searching in: \u0027C:\\git\\runtime2\\.dotnet\\sdk\\8.0.100-rtm.23506.1\u0027.\r\nTpTrace Information: 0 : 25352, 1, 2023/10/30, 19:39:45.767, 3877444583907, vstest.console.dll, AssemblyResolver.OnResolve: Microsoft.Bcl.AsyncInterfaces: Assembly path does not exist: \u0027C:\\git\\runtime2\\.dotnet\\sdk\\8.0.100-rtm.23506.1\\Microsoft.Bcl.AsyncInterfaces.dll\u0027, returning.\r\nTpTrace Information: 0 : 25352, 1, 2023/10/30, 19:39:45.767, 3877444584450, vstest.console.dll, AssemblyResolver.OnResolve: Microsoft.Bcl.AsyncInterfaces: Assembly path does not exist: \u0027C:\\git\\runtime2\\.dotnet\\sdk\\8.0.100-rtm.23506.1\\Microsoft.Bcl.AsyncInterfaces.exe\u0027, returning.\r\nTpTrace Information: 0 : 25352, 1, 2023/10/30, 19:39:45.767, 3877444584752, vstest.console.dll, AssemblyResolver.OnResolve: Microsoft.Bcl.AsyncInterfaces: Failed to load assembly.\r\nTpTrace Verbose: 0 : 25352, 1, 2023/10/30, 19:39:45.767, 3877444585113, vstest.console.dll, CurrentDomainAssemblyResolve: Resolving assembly \u0027Microsoft.Bcl.AsyncInterfaces\u0027.\r\nTpTrace Information: 0 : 25352, 1, 2023/10/30, 19:39:45.767, 3877444585764, vstest.console.dll, AssemblyResolver.OnResolve: Microsoft.Bcl.AsyncInterfaces: Resolving assembly.\r\nTpTrace Information: 0 : 25352, 1, 2023/10/30, 19:39:45.767, 3877444586390, vstest.console.dll, AssemblyResolver.OnResolve: Microsoft.Bcl.AsyncInterfaces: Resolved from cache.\r\nTpTrace Verbose: 0 : 25352, 1, 2023/10/30, 19:39:45.767, 3877444586674, vstest.console.dll, CurrentDomainAssemblyResolve: Resolving assembly \u0027Microsoft.Bcl.AsyncInterfaces\u0027.\r\nTpTrace Verbose: 0 : 25352, 1, 2023/10/30, 19:39:45.767, 3877444586988, vstest.console.dll, CurrentDomainAssemblyResolve: Failed to resolve assembly \u0027Microsoft.Bcl.AsyncInterfaces\u0027.\r\nTpTrace Verbose: 0 : 25352, 1, 2023/10/30, 19:39:45.768, 3877444596875, vstest.console.dll, CurrentDomainAssemblyResolve: Failed to resolve assembly \u0027Microsoft.Bcl.AsyncInterfaces\u0027.\r\nTpTrace Warning: 0 : 25352, 1, 2023/10/30, 19:39:45.783, 3877444748536, vstest.console.dll, TestPluginDiscoverer: Failed to get types from assembly \u0027Microsoft.Diagnostics.NETCore.Client, Version=0.2.8.21101, Culture=neutral, PublicKeyToken=31bf3856ad364e35\u0027. Error: System.Reflection.ReflectionTypeLoadException: Unable to load one or more of the requested types.\r\nCould not load file or assembly \u0027Microsoft.Bcl.AsyncInterfaces, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\u0027. The system cannot find the file specified.\r\n   at System.Reflection.RuntimeModule.GetTypes(RuntimeModule module)\r\n   at System.Reflection.RuntimeModule.GetTypes()\r\n   at Microsoft.VisualStudio.TestPlatform.Common.ExtensionFramework.TestPluginDiscoverer.GetTestExtensionsFromAssembly[TPluginInfo,TExtension](Assembly assembly, Dictionary`2 pluginInfos, String filePath) in /_/src/Microsoft.TestPlatform.Common/ExtensionFramework/TestPluginDiscoverer.cs:line 158\r\nSystem.IO.FileNotFoundException: Could not load file or assembly \u0027Microsoft.Bcl.AsyncInterfaces, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\u0027. The system cannot find the file specified.\r\nFile name: \u0027Microsoft.Bcl.AsyncInterfaces, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\u0027\r\n---\u003e System.IO.FileNotFoundException: Could not load file or assembly \u0027Microsoft.Bcl.AsyncInterfaces, Culture=neutral, PublicKeyToken=null\u0027. The system cannot find the file specified.\r\nFile name: \u0027Microsoft.Bcl.AsyncInterfaces, Culture=neutral, PublicKeyToken=null\u0027\r\n   at System.Reflection.RuntimeAssembly.InternalLoad(AssemblyName assemblyName, StackCrawlMark\u0026 stackMark, AssemblyLoadContext assemblyLoadContext, RuntimeAssembly requestingAssembly, Boolean throwOnFileNotFound)\r\n   at System.Reflection.Assembly.Load(AssemblyName assemblyRef)\r\n   at Microsoft.VisualStudio.TestPlatform.Common.ExtensionFramework.TestPluginCache.CurrentDomainAssemblyResolve(Object sender, AssemblyResolveEventArgs args) in /_/src/Microsoft.TestPlatform.Common/ExtensionFramework/TestPluginCache.cs:line 513\r\n   at System.Runtime.Loader.AssemblyLoadContext.GetFirstResolvedAssemblyFromResolvingEvent(AssemblyName assemblyName)\r\n   at System.Runtime.Loader.AssemblyLoadContext.ResolveUsingEvent(AssemblyName assemblyName)\r\n   at System.Runtime.Loader.AssemblyLoadContext.ResolveUsingResolvingEvent(IntPtr gchManagedAssemblyLoadContext, AssemblyName assemblyName)\r\n```\r\n\r\n`--diag:log.txt`",
                                           "updatedAt":  "2023-10-30T18:44:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5qclkR",
                                           "createdAt":  "2023-10-30T19:13:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Filed https://github.com/xunit/visualstudio.xunit/issues/390",
                                           "updatedAt":  "2023-10-30T19:13:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5qcw11",
                                           "createdAt":  "2023-10-30T19:45:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bradwilson",
                                           "body":  "This is not what you think it is.\r\n\r\n![image](https://github.com/dotnet/runtime/assets/16944/ecec907b-d6d0-47a6-85b3-8a9d8ea5c445)\r\n",
                                           "updatedAt":  "2023-10-30T19:45:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5qcxOu",
                                           "createdAt":  "2023-10-30T19:46:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bradwilson",
                                           "body":  "Are you\u0027re linking against xunit.runner.utility for some reason? If so, then you\u0027re frozen to using whatever version of xunit.runner.utility the VS adapter uses (because VSTest demands all dependencies be copied into the output folder). 99%+ of users don\u0027t do this so this isn\u0027t a general problem.",
                                           "updatedAt":  "2023-10-30T19:46:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5qcyTK",
                                           "createdAt":  "2023-10-30T19:49:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bradwilson",
                                           "body":  "The only reason to link against xunit.runner.utility is because you\u0027re creating your own runner. Tests should never link against this unless they\u0027re forced to because they\u0027re testing the runner you\u0027re writing.",
                                           "updatedAt":  "2023-10-30T19:49:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5qc30L",
                                           "createdAt":  "2023-10-30T20:06:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODTMiOQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2023-10-30T20:30:54Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "carlossanlop",
                                                                               "createdAt":  "2024-01-18T22:09:10Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "bradwilson",
                                           "body":  "For a bit of architectural background...\r\n\r\nxUnit.net splits what it does into two separate sections which do not directly interact except via very strict contracts. There are \"runner\" and \"execution\" halves of the system. In v1/v2 when using .NET Framework, these two halves can be optionally separated by an app domain boundary (and in v2 .NET Core, they live in the same process). In v3 against all target platforms, they\u0027re separated by a process boundary.\r\n\r\n- Tests lives in the \"execution\" half, and are linked against `xunit.core` and `xunit.execution.*` (and usually `xunit.assert`, though that\u0027s optional).\r\n- Runners live in the \"runner\" half, and are linked against `xunit.runner.utility.*` (and maybe other runner related things).\r\n- The only common assembly that lives in both halves, and comprises the communication contract, is `xunit.abstractions`. It has been frozen since we shipped 2.0 (we have shipped newer versions of the NuGet assembly just to add extra targets as 2.0 was back in PCL259 days, but the DLL itself remains unchanged since we shipped it).\r\n\r\nBy keeping this strong separation and frozen contracts, we have both backward compatibility (newer runners can run older tests) and major forward compatibility (older v2 runners can run newer v2 tests). In point of fact, I just was able to successfully run tests linked against core framework 2.5.3 with the VSTest adapter 2.0.0, which is 8.5 years old and targeted `net20`, `wpa81`, and `win8`. Obviously .NET Core didn\u0027t even exist back then, so it wouldn\u0027t be able to run a platform it doesn\u0027t know about, but .NET Framework is not a problem.\r\n\r\nIf your tests link against `xunit.runner.utility.*`, you\u0027re bringing the runner half of things where it normally doesn\u0027t live or belong. This is unavoidable if you\u0027re writing your own runner, and want to test that runner (we obviously do this, but it should be very very rare). Normally this wouldn\u0027t be a problem _except_ when you\u0027re using VSTest, because there is a requirement placed by VSTest that we copy the VSTest adapter into your output folder, which of course means we also have to copy the runner utility libraries (`xunit.runner.utility.*` and `xunit.runner.reporters.*`). This is the only scenario where we end up with potential collisions between versions of the runner utility libraries, so when you\u0027re in this scenario, you must very explicitly remain frozen to use the same version of the runner utility libraries as the VSTest adapter is that you\u0027re using.\r\n\r\nIn addition, there is no guarantee that any particular version of `xunit.runner.visualstudio` will use any particular version of `xunit.runner.utility`. We shipped 2.5.3 of the former at the same time as 2.5.2 of the latter, but even simultaneous shipment isn\u0027t guaranteed (and in fact they lived _very_ separate lives back when @clairernovotny owned the VSTest adapter).\r\n\r\nWhen I shipped core framework 2.5.3, it had no runner utility changes that would\u0027ve necessitated bringing in a new version for the VSTest adapter, so I didn\u0027t bother to ship a new one. It appears that when I ship the next core framework drop (which I\u0027m planning to number 2.6.0), this will still be true, so again I\u0027m not likely to ship another VSTest adapter version.",
                                           "updatedAt":  "2023-10-30T20:12:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5qdCKO",
                                           "createdAt":  "2023-10-30T20:35:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Wow, that\u0027s quite a detailed comment. Thank you for spending your time on writing this up. I just reproduced this locally and I don\u0027t see our test assemblies or test helper assemblies linking against any of the `xunit.runner.*` assemblies.\r\n\r\nWhat I see is that because of us wanting to support both xunit.console and VSTest, we bring in `xunit.runner.utility.net452.dll` from the xunit.console and  [explicitly exclude the one from xunit.runner.visualstudio](https://github.com/dotnet/runtime/blob/bec0756aa8cdf9daa0920ab5e75dead8a568083d/eng/testing/xunit/xunit.console.targets#L91) which results in that version collision.\r\n\r\n\u003e This is the only scenario where we end up with potential collisions between versions of the runner utility libraries, so when you\u0027re in this scenario, you must very explicitly remain frozen to use the same version of the runner utility libraries as the VSTest adapter is that you\u0027re using.\r\n\r\nExactly that.\r\n\r\nThis begs the question why we ever chose a design that made us copy the xunit.console runner into the test app\u0027s output directory. While VSTest requires that, xunit.console shouldn\u0027t.",
                                           "updatedAt":  "2023-10-30T20:36:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5qdDNg",
                                           "createdAt":  "2023-10-30T20:38:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODLYx0g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2023-10-30T20:41:09Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "bradwilson",
                                           "body":  "Yeah, that operation makes no sense to me. You were basically just waiting to explode. 😁 \r\n\r\nEach runner has to bring along their own copy of `xunit.runner.utility.*` that they\u0027re linked against. It\u0027s just the VSTest adapter which insists on copying it into _your_ output folder; all the other runners just live elsewhere and are invoked by hand, so the assemblies are never mixed together.",
                                           "updatedAt":  "2023-10-30T20:38:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5qdEYf",
                                           "createdAt":  "2023-10-30T20:41:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bradwilson",
                                           "body":  "To be even more explicit: xunit.console would never use `xunit.runner.utility.*` from the test\u0027s folder. It would need to live along side `xunit.console.exe` so that .NET Framework could do the appropriate implicit loading. If you\u0027re copying the contents of xunit.console\u0027s NuGet package into your test output folder, you should stop doing that. It\u0027s unnecessary and counterproductive. Just run it from wherever it lives (in `~/.nuget/packages` or some equivalent).",
                                           "updatedAt":  "2023-10-30T20:41:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5qdGZn",
                                           "createdAt":  "2023-10-30T20:47:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODLke6Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "bradwilson",
                                                                               "createdAt":  "2023-10-30T20:55:54Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ericstj",
                                                                               "createdAt":  "2023-11-01T15:11:41Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e you should stop doing that. It\u0027s unnecessary and counterproductive. Just run it from wherever it lives (in ~/.nuget/packages or some equivalent).\r\n\r\nJust to share some context. We invoke our tests in CI on different machines than the build agents. We use `Helix` for that, which is a distributed machine testing orchestration infrastructure. Because of that, we can\u0027t rely on the package cache. Instead we should have just sent that dependency as an additional \"payload\" (dependency) to that helix test agent.\r\n\r\nUnfortunately our infrastructure here has become quite complex with so many different app models and ways of testing that this change will probably require some time.\r\n\r\nBut for what is worth, this is indeed our own fault. Thanks for help diagnosing the issue :)",
                                           "updatedAt":  "2023-10-30T20:47:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5qdJjx",
                                           "createdAt":  "2023-10-30T20:56:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bradwilson",
                                           "body":  "Good luck! 😄 ",
                                           "updatedAt":  "2023-10-30T20:56:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5wKC91",
                                           "createdAt":  "2024-01-08T19:17:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "@ViktorHofer did you have a suggestion for what needs to happen to fix this?\r\n\r\nI gather that by copying xunit runner binaries over to the output directory this is somehow causing the test-discoverer to fail before it gets a chance to examine our test assembly, is that correct?\r\n",
                                           "updatedAt":  "2024-01-08T19:17:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5wKTHS",
                                           "createdAt":  "2024-01-08T20:08:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "The gist (IIRC) is to not copy xunit.console\u0027s assemblies into the output directory and just invoke it from the package cache (as intended). Only copy it into the output directory when archiving the test assemblies for helix submissions (property: `/p:ArchiveTests=true`).\r\n\r\nxunit.runner.visualstudio is designed to be copied into the app output directory but xunit.console isn\u0027t. So avoiding the latter makes sense on a local machine.",
                                           "updatedAt":  "2024-01-08T20:08:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5wKXnn",
                                           "createdAt":  "2024-01-08T20:23:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bradwilson",
                                           "body":  "\u003e xunit.runner.visualstudio is designed to be copied into the app output directory\r\n\r\nThat makes it sound like we do something special here. We don\u0027t. The copy is an unfortunate requirement from the VSTest team; if we don\u0027t copy the DLLs into the output directory, then whoever runs `dotnet test` (or equivalent) needs to specify the location of the test adapter path on disk via an additional command line argument.",
                                           "updatedAt":  "2024-01-08T20:23:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5wKbrD",
                                           "createdAt":  "2024-01-08T20:36:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "bradwilson",
                                           "body":  "If it helps, we could add an MSBuild property that we look for to prevent the file copies. They would need to stay on by default but if you know what you\u0027re doing, skipping the copies could make sense.",
                                           "updatedAt":  "2024-01-08T20:36:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5wKgmo",
                                           "createdAt":  "2024-01-08T20:52:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "I think this really is an issue on our side and needs a fix in our test infrastructure. The xunit.console copying is just wrong and also in-efficient. I should have done this differently in the past.",
                                           "updatedAt":  "2024-01-08T20:52:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5wXhWN",
                                           "createdAt":  "2024-01-10T16:43:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "Yeah, other repos don\u0027t copy and bundle the runner package as a correlation payload.  It\u0027s not so hard to make that work, but it does require changes in a few places.\r\n\r\nOne thing that was odd to me is that we\u0027re saying that our binaries are self-consistent and would work if we merely delete files that aren\u0027t needed.  That tells me we might also have a bug / design-change ask for the `dotnet test` scenario to not halt when it encounters binding problems in other assemblies in the output directory.",
                                           "updatedAt":  "2024-01-10T16:45:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5wXw2p",
                                           "createdAt":  "2024-01-10T17:20:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODR7s9A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ericstj",
                                                                               "createdAt":  "2024-01-10T17:40:18Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e It\u0027s not so hard to make that work, but it does require changes in a few places.\r\n\r\nI was suggesting something simpler for a quick fix. Keep the xunit.console in the app output directory but only when `ArchiveTests=true`. Otherwise (locally) use the xunit.console from the nuget cache.",
                                           "updatedAt":  "2024-01-10T17:20:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5xwj-4",
                                           "createdAt":  "2024-01-24T17:02:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "@akoeplinger found other places that still rely on xunit.console in the output directory.\r\n\r\n\u003e it looks like https://github.com/dotnet/runtime/pull/96826 is breaking a couple things \r\n\u003e - A couple wasm projects set BundleXunitRunner but now they don\u0027t get the xunit.console.dll locally unless they set ArchiveTests=true\r\n\u003e - It also breaks the enterprise-linux pipeline since it uses dotnet build /t:Test instead of dotnet test: https://dev.azure.com/dnceng-public/public/_build/results?buildId=537464\u0026view=logs\u0026j=03b95830-93c2-599b-7e4d-1efb940adc28\u0026t=deab5cac-2f83-5667-2973-63a6919b97de\r\n\u003e\r\n\u003e The latter seems more problematic since we document /t:Test in a couple places and I know many people are still in the habit of using it vs dotnet test and in some cases you don\u0027t want the vstest runner\r\n\r\nIt seems we have some more places to root out where we expect the runner in the output directory - those need to either be updated to pick up the runner from the package, or opt-in to copying.\r\n",
                                           "updatedAt":  "2024-01-24T17:04:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5xwuCP",
                                           "createdAt":  "2024-01-24T17:26:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e The latter seems more problematic since we document /t:Test in a couple places and I know many people are still in the habit of using it vs dotnet test and in some cases you don\u0027t want the vstest runner\r\n\r\n`dotnet build /t:Test` should still work with https://github.com/dotnet/runtime/pull/96826. What are we missing here?",
                                           "updatedAt":  "2024-01-24T17:26:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Fy8xB",
                                           "createdAt":  "2024-07-23T09:35:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Moving this back into 9.0.0 as this makes debugging .NET Framework tests with `dotnet test` harder. We can move it back to 10.0.0 if we don\u0027t get to it though.",
                                           "updatedAt":  "2024-07-23T09:35:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6_mpVp",
                                           "createdAt":  "2025-08-22T14:29:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "Here\u0027s the current output from `dotnet test` on a project with a netfx targetframework.\n\n```\nC:\\src\\dotnet\\runtime\\src\\libraries\\System.Data.Odbc\\tests\u003e\\src\\dotnet\\runtime\\.dotnet\\dotnet.exe test /bl\n\n  Determining projects to restore...\n  All projects are up-to-date for restore.\n  TestUtilities -\u003e C:\\src\\dotnet\\runtime\\artifacts\\bin\\TestUtilities\\Debug\\net8.0\\TestUtilities.dll\n  ILLink.RoslynAnalyzer -\u003e C:\\src\\dotnet\\runtime\\artifacts\\bin\\ILLink.RoslynAnalyzer\\Debug\\netstandard2.0\\ILLink.RoslynAn\n  alyzer.dll\n  ILLink.CodeFixProvider -\u003e C:\\src\\dotnet\\runtime\\artifacts\\bin\\ILLink.CodeFixProvider\\Debug\\netstandard2.0\\ILLink.CodeFi\n  xProvider.dll\n  Mono.Linker -\u003e C:\\src\\dotnet\\runtime\\artifacts\\bin\\Mono.Linker\\ref\\Debug\\net10.0\\illink.dll\n  Mono.Linker -\u003e C:\\src\\dotnet\\runtime\\artifacts\\bin\\Mono.Linker\\Debug\\net10.0\\illink.dll\n  ILLink.Tasks -\u003e C:\\src\\dotnet\\runtime\\artifacts\\bin\\ILLink.Tasks\\Debug\\net\\ILLink.Tasks.dll\n  System.Data.Odbc -\u003e C:\\src\\dotnet\\runtime\\artifacts\\bin\\System.Data.Odbc\\ref\\Debug\\net10.0\\System.Data.Odbc.dll\n  System.Data.Odbc -\u003e C:\\src\\dotnet\\runtime\\artifacts\\bin\\System.Data.Odbc\\Debug\\net10.0-windows\\System.Data.Odbc.dll\n  System.Data.Odbc.Tests -\u003e C:\\src\\dotnet\\runtime\\artifacts\\bin\\System.Data.Odbc.Tests\\Debug\\net10.0-windows\\System.Data.\n  Odbc.Tests.dll\nTest run for C:\\src\\dotnet\\runtime\\artifacts\\bin\\System.Data.Odbc.Tests\\Debug\\net10.0-windows\\System.Data.Odbc.Tests.dll (.NETCoreApp,Version=v10.0)\nA total of 1 test files matched the specified pattern.\n[xUnit.net 00:00:01.31]     System.Data.Odbc.Tests.DependencyCheckTest.OdbcConnection_OpenWhenOdbcNotInstalled_ThrowsException [SKIP]\n[xUnit.net 00:00:01.31]     System.Data.Odbc.Tests.OdbcConnectionSchemaTests.TestConnectionSchemaOnOpenConnection [SKIP]\n  Skipped System.Data.Odbc.Tests.DependencyCheckTest.OdbcConnection_OpenWhenOdbcNotInstalled_ThrowsException [1 ms]\n  Skipped System.Data.Odbc.Tests.OdbcConnectionSchemaTests.TestConnectionSchemaOnOpenConnection [1 ms]\n[xUnit.net 00:00:01.42]     System.Data.Odbc.Tests.OdbcParameterTests.RunTest [SKIP]\n[xUnit.net 00:00:01.60]     System.Data.Odbc.Tests.ReaderTests.GetDataTypeName [SKIP]\n[xUnit.net 00:00:01.60]     System.Data.Odbc.Tests.CommandBuilderTests.QuoteIdentifier_UseConnection [SKIP]\n[xUnit.net 00:00:01.60]     System.Data.Odbc.Tests.ConnectionTests.DbConnectionFactories_GetFactory_from_connection [SKIP]\n[xUnit.net 00:00:01.60]     System.Data.Odbc.Tests.SmokeTest.CreateInsertSelectTest [SKIP]\n[xUnit.net 00:00:01.61]     System.Data.Odbc.Tests.ReaderTests.GetFieldTypeIsNotSupportedInSqlite [SKIP]\n[xUnit.net 00:00:01.61]     System.Data.Odbc.Tests.CommandBuilderTests.QuoteIdentifier_CustomPrefixSuffix [SKIP]\n[xUnit.net 00:00:01.61]     System.Data.Odbc.Tests.ReaderTests.IsDbNullIsNotSupportedInSqlite [SKIP]\n[xUnit.net 00:00:01.61]     System.Data.Odbc.Tests.ReaderTests.InvalidRowName [SKIP]\n  Skipped System.Data.Odbc.Tests.OdbcParameterTests.RunTest [1 ms]\n  Skipped System.Data.Odbc.Tests.CommandBuilderTests.QuoteIdentifier_UseConnection [1 ms]\n  Skipped System.Data.Odbc.Tests.ReaderTests.GetDataTypeName [1 ms]\n  Skipped System.Data.Odbc.Tests.ConnectionTests.DbConnectionFactories_GetFactory_from_connection [1 ms]\n  Skipped System.Data.Odbc.Tests.SmokeTest.CreateInsertSelectTest [1 ms]\n  Skipped System.Data.Odbc.Tests.ReaderTests.GetFieldTypeIsNotSupportedInSqlite [1 ms]\n  Skipped System.Data.Odbc.Tests.CommandBuilderTests.QuoteIdentifier_CustomPrefixSuffix [1 ms]\n  Skipped System.Data.Odbc.Tests.ReaderTests.IsDbNullIsNotSupportedInSqlite [1 ms]\n  Skipped System.Data.Odbc.Tests.ReaderTests.InvalidRowName [1 ms]\n[xUnit.net 00:00:01.62]     System.Data.Odbc.Tests.ReaderTests.GetValueFailsWithBigIntWithBackwardsCompatibility [SKIP]\n[xUnit.net 00:00:01.62]     System.Data.Odbc.Tests.ReaderTests.EmptyReader [SKIP]\n[xUnit.net 00:00:01.62]     System.Data.Odbc.Tests.ReaderTests.InvalidRowIndex [SKIP]\n[xUnit.net 00:00:01.62]     System.Data.Odbc.Tests.ReaderTests.GetValues [SKIP]\n  Skipped System.Data.Odbc.Tests.ReaderTests.GetValueFailsWithBigIntWithBackwardsCompatibility [1 ms]\n  Skipped System.Data.Odbc.Tests.ReaderTests.EmptyReader [1 ms]\n  Skipped System.Data.Odbc.Tests.ReaderTests.InvalidRowIndex [1 ms]\n  Skipped System.Data.Odbc.Tests.ReaderTests.GetValues [1 ms]\nResults File: C:\\src\\dotnet\\runtime\\artifacts\\bin\\System.Data.Odbc.Tests\\Debug\\net10.0-windows\\TestResults\\ericstj_CPC-erics-1RABK_2025-08-22_07_25_06.trx\nHtml test results file : C:\\src\\dotnet\\runtime\\artifacts\\bin\\System.Data.Odbc.Tests\\Debug\\net10.0-windows\\TestResults\\TestResult_ericstj_CPC-erics-1RABK_20250822_072507.html\n\nPassed!  - Failed:     0, Passed:     3, Skipped:    15, Total:    18, Duration: 372 ms - System.Data.Odbc.Tests.dll (net10.0)\n  Microsoft.Interop.SourceGeneration -\u003e C:\\src\\dotnet\\runtime\\artifacts\\bin\\Microsoft.Interop.SourceGeneration\\Debug\\nets\n  tandard2.0\\Microsoft.Interop.SourceGeneration.dll\n  DownlevelLibraryImportGenerator -\u003e C:\\src\\dotnet\\runtime\\artifacts\\bin\\DownlevelLibraryImportGenerator\\Debug\\netstandar\n  d2.0\\Microsoft.Interop.LibraryImportGenerator.Downlevel.dll\n  TestUtilities -\u003e C:\\src\\dotnet\\runtime\\artifacts\\bin\\TestUtilities\\Debug\\net481\\TestUtilities.dll\n  System.Data.Odbc.Tests -\u003e C:\\src\\dotnet\\runtime\\artifacts\\bin\\System.Data.Odbc.Tests\\Debug\\net481\\System.Data.Odbc.Test\n  s.dll\n\nC:\\src\\dotnet\\runtime\\src\\libraries\\System.Data.Odbc\\tests\u003e\n```\n\nThe console logging is missing for test execution of the `net481` target, however the binlog shows that it ran, and the testresults exist in the output directory.",
                                           "updatedAt":  "2025-08-22T14:29:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6_mtmZ",
                                           "createdAt":  "2025-08-22T14:34:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "As suggested by @akoeplinger, specifying ` /tl:off` gives correct behavior:\n```\n  System.Data.Odbc.Tests -\u003e C:\\src\\dotnet\\runtime\\artifacts\\bin\\System.Data.Odbc.Tests\\Debug\\net481\\System.Data.Odbc.Test\n  s.dll\nTest run for C:\\src\\dotnet\\runtime\\artifacts\\bin\\System.Data.Odbc.Tests\\Debug\\net481\\System.Data.Odbc.Tests.dll (.NETFramework,Version=v4.8.1)\nA total of 1 test files matched the specified pattern.\n[xUnit.net 00:00:01.52]     System.Data.Odbc.Tests.OdbcConnectionSchemaTests.TestConnectionSchemaOnOpenConnection [SKIP]\n[xUnit.net 00:00:01.56]     System.Data.Odbc.Tests.DependencyCheckTest.OdbcConnection_OpenWhenOdbcNotInstalled_ThrowsException [SKIP]\n[xUnit.net 00:00:01.59]     System.Data.Odbc.Tests.OdbcParameterTests.RunTest [SKIP]\n[xUnit.net 00:00:01.59]     System.Data.Odbc.Tests.CommandBuilderTests.QuoteIdentifier_UseConnection [SKIP]\n  Skipped System.Data.Odbc.Tests.OdbcConnectionSchemaTests.TestConnectionSchemaOnOpenConnection [1 ms]\n  Skipped System.Data.Odbc.Tests.DependencyCheckTest.OdbcConnection_OpenWhenOdbcNotInstalled_ThrowsException [1 ms]\n  Skipped System.Data.Odbc.Tests.OdbcParameterTests.RunTest [1 ms]\n  Skipped System.Data.Odbc.Tests.CommandBuilderTests.QuoteIdentifier_UseConnection [1 ms]\n[xUnit.net 00:00:01.61]     System.Data.Odbc.Tests.CommandBuilderTests.QuoteIdentifier_CustomPrefixSuffix [SKIP]\n[xUnit.net 00:00:01.61]     System.Data.Odbc.Tests.ReaderTests.GetDataTypeName [SKIP]\n[xUnit.net 00:00:01.61]     System.Data.Odbc.Tests.SmokeTest.CreateInsertSelectTest [SKIP]\n[xUnit.net 00:00:01.62]     System.Data.Odbc.Tests.ReaderTests.GetFieldTypeIsNotSupportedInSqlite [SKIP]\n[xUnit.net 00:00:01.62]     System.Data.Odbc.Tests.ReaderTests.IsDbNullIsNotSupportedInSqlite [SKIP]\n[xUnit.net 00:00:01.63]     System.Data.Odbc.Tests.ReaderTests.InvalidRowName [SKIP]\n[xUnit.net 00:00:01.63]     System.Data.Odbc.Tests.ReaderTests.GetValueFailsWithBigIntWithBackwardsCompatibility [SKIP]\n[xUnit.net 00:00:01.64]     System.Data.Odbc.Tests.ReaderTests.EmptyReader [SKIP]\n[xUnit.net 00:00:01.64]     System.Data.Odbc.Tests.ReaderTests.InvalidRowIndex [SKIP]\n  Skipped System.Data.Odbc.Tests.CommandBuilderTests.QuoteIdentifier_CustomPrefixSuffix [1 ms]\n  Skipped System.Data.Odbc.Tests.ReaderTests.GetDataTypeName [1 ms]\n  Skipped System.Data.Odbc.Tests.SmokeTest.CreateInsertSelectTest [1 ms]\n  Skipped System.Data.Odbc.Tests.ReaderTests.GetFieldTypeIsNotSupportedInSqlite [1 ms]\n  Skipped System.Data.Odbc.Tests.ReaderTests.IsDbNullIsNotSupportedInSqlite [1 ms]\n  Skipped System.Data.Odbc.Tests.ReaderTests.InvalidRowName [1 ms]\n  Skipped System.Data.Odbc.Tests.ReaderTests.GetValueFailsWithBigIntWithBackwardsCompatibility [1 ms]\n  Skipped System.Data.Odbc.Tests.ReaderTests.EmptyReader [1 ms]\n  Skipped System.Data.Odbc.Tests.ReaderTests.InvalidRowIndex [1 ms]\n[xUnit.net 00:00:01.65]     System.Data.Odbc.Tests.ReaderTests.GetValues [SKIP]\n  Skipped System.Data.Odbc.Tests.ReaderTests.GetValues [1 ms]\nResults File: C:\\src\\dotnet\\runtime\\artifacts\\bin\\System.Data.Odbc.Tests\\Debug\\net481\\TestResults\\ericstj_CPC-erics-1RABK_2025-08-22_07_33_27.trx\nHtml test results file : C:\\src\\dotnet\\runtime\\artifacts\\bin\\System.Data.Odbc.Tests\\Debug\\net481\\TestResults\\TestResult_ericstj_CPC-erics-1RABK_20250822_073327.html\n\nPassed!  - Failed:     0, Passed:     3, Skipped:    14, Total:    17, Duration: 139 ms - System.Data.Odbc.Tests.dll (net481)\n\nC:\\src\\dotnet\\runtime\\src\\libraries\\System.Data.Odbc\\tests\u003e\n```",
                                           "updatedAt":  "2025-08-22T14:34:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6_oY0t",
                                           "createdAt":  "2025-08-22T17:05:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "Bizarrely, this is caused by https://github.com/dotnet/runtime/blob/674d359c926ca590a62d588a786bc7e4eb88c51f/Directory.Build.rsp#L2\n\nWhen `-tl:off|false` is specified in the RSP, the `_VSTestConsole` target is used, just like when specifying `-tl:off` from the commandline, but the build only logs one of the test runs.  So something about setting the -tl:off in the rsp is different than passing in from the commandline.\n\nI can reproduce this with a normal test project outside the dotnet/runtime infra.\n[xunitTest.zip](https://github.com/user-attachments/files/21941036/xunitTest.zip)\n\nWe could remove our disabling of the terminal logger entirely -- https://github.com/dotnet/runtime/issues/119012\n\nOr we could just remove the .rsp, since that\u0027s really only used when folks are manually invoking `dotnet build` or `dotnet test`.  I\u0027m inclined to do the latter.\n\nI\u0027d still like to understand why using the rsp is different than a commandline parameter @rainersigwald in case he has an idea.",
                                           "updatedAt":  "2025-08-22T17:05:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6_piCg",
                                           "createdAt":  "2025-08-22T19:05:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "So it looks like the difference in these two scenarios is that when `/tl:off` isn\u0027t passed in on the commandline, `dotnet test` itself is passing `VsTestUseMSBuildOutput`\n\n\u003cimg width=\"666\" height=\"228\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3ac6535f-542d-466b-8e46-1d1810bb2bfb\" /\u003e\n\nThis is coming from here https://github.com/dotnet/sdk/blob/55044e9a14e10600c07dcb22ea669b5faad890fc/src/Cli/dotnet/Commands/Test/TestCommand.cs#L102\n\nSo it\u0027s \"by design\" in a way.  Test isn\u0027t aware of our RSP file.  I\u0027ll still file the issue and see what SDK folks say.",
                                           "updatedAt":  "2025-08-22T19:05:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7ByF3u",
                                           "createdAt":  "2025-09-03T23:37:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-09-03T23:37:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7ByJHZ",
                                           "createdAt":  "2025-09-03T23:47:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "Adjusting area-path here.  This is caused by the rsp file in the root.  It breaks all test output, not just libraries.\n\nWe either need a fix for https://github.com/dotnet/sdk/issues/50441 or just remove `-tl:off` from the RSP.\n\nI\u0027m inclined to just remove from rsp.  The root build scripts already disable the terminal logger for `build` from the root.  This RSP is just being used when folks run dotnet commands on individual projects.  IMO we can let folks get the terminal logger there since that\u0027s what our customers get.\n\nWhat do you think @akoeplinger @ViktorHofer @ManickaP @jkoritzinsky @jkotas \n\nAlso cc @SingleAccretion @agocke who just changed https://github.com/dotnet/runtime/pull/119282 so probably have other workflows to use `dotnet build|test`.",
                                           "updatedAt":  "2025-09-03T23:47:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7BzBon",
                                           "createdAt":  "2025-09-04T01:36:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEg39Cg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ericstj",
                                                                               "createdAt":  "2025-09-04T15:21:42Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "baronfel",
                                                                               "createdAt":  "2025-09-04T15:55:12Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e just remove from rsp\n\u003e What do you think\n\nI do not have an opinion. I have the terminal logger force disabled using `MSBUILDTERMINALLOGGER=off` on my machines as I have mentioned in https://github.com/dotnet/runtime/issues/119012#issuecomment-3215164539 . I assume that this env variable is still going to be respected with this change.",
                                           "updatedAt":  "2025-09-04T01:36:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7B26IO",
                                           "createdAt":  "2025-09-04T07:59:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ManickaP",
                                           "body":  "@ericstj does that mean that none of the problems I mentioned in https://github.com/dotnet/runtime/issues/119012#issuecomment-3219848478 are solved yet we\u0027re still doing #119012?",
                                           "updatedAt":  "2025-09-04T07:59:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7B7cGo",
                                           "createdAt":  "2025-09-04T12:57:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "SingleAccretion",
                                           "body":  "\u003e Also cc SingleAccretion ...\n\nMy opinion is that it does not makes sense to make the build experience different between the root build script and `dotnet build`. There are projects that I interact with through the root script (e. g. `runtime.proj` / `build-native.proj`). There are projects that I never use the root build script for (individual libraries, libraries tests, runtime tests). Some \"native\" projects have documented targets for building them manually ([example](https://github.com/dotnet/runtime/blob/655ec8aae923a79d49d2d4b504c1411c71810628/src/mono/browser/browser.proj#L374)).\n\nI also strongly agree with what has been written in #119012, that enabling the terminal logger would be a net regression for the default `/runtime` development experience. Which is not necessarily the case for many non-`/runtime` projects, since they have much simpler build setups.",
                                           "updatedAt":  "2025-09-04T12:58:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7B-gtn",
                                           "createdAt":  "2025-09-04T15:54:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEg4EkA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "baronfel",
                                                                               "createdAt":  "2025-09-04T15:55:39Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2025-09-04T16:06:19Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "ericstj",
                                           "body":  "\u003e does that mean that none of the problems I mentioned\n\nI *think* that those are all side-effects of using `build /t:Test` instead of `test`.  The build behavior does not do the same thing as test so you end up running tests differently and not getting the runner behavior that\u0027s optimized for the terminal logger.  I think you\u0027ll get a better experience (and one that matches what customers see) by using `test`.  It still may have some issues, but those are good for us to find and report against the product.\n\nIf we keep disabling this it this means we\u0027re building an experience for our customers that doesn\u0027t work well enough for ourselves.  Doesn\u0027t that strike you as busted?  @baronfel\n\nBy disabling default experiences like this it makes us operate in the fringe - where our problems end up being our own and time spent by our developers to improve things doesn\u0027t improve the product itself.  Part of working on this product is that we need to use the product in the form that we ship and suffer through some of the user-experience issues so that we make things better.\n\nI think there is work planned to improve the terminal logger in the CI scenario - https://github.com/dotnet/msbuild/issues/12486 -that could help us to use it for root builds.",
                                           "updatedAt":  "2025-09-04T15:54:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7CAjje",
                                           "createdAt":  "2025-09-04T18:07:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e If we keep disabling this it this means we\u0027re building an experience for our customers that doesn\u0027t work well enough for ourselves. Doesn\u0027t that strike you as busted?\n\nOur default experiences are optimized for small ordinary .NET projects. This repo is not anything like that. It does not strike me as busted when we need to diverge from the default experience. I agree that it would be nice to do that as little as possible and understand the reasoning. I expect that every large project of similar complexity needs to override number of defaults for good reasons and that\u0027s by design.",
                                           "updatedAt":  "2025-09-04T18:07:03Z"
                                       }
                                   ],
                         "totalCount":  36
                     },
        "title":  "`dotnet test` does not show the output / results for all TargetFrameworks",
        "labels":  [
                       "area-Infrastructure",
                       "dev-innerloop"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/94313",
        "createdAt":  "2023-11-02T19:28:46Z",
        "number":  94313,
        "author":  "jtschuster",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-02-25T21:28:14Z",
        "body":  "Using the IsNativeAot property in the `baseservices/exceptions/stackoverflow` test brings in about 4mb of code into the final executable compared to checking `Assembly.Location == \"\"`. It looks like this is coming from the Mono check that uses `Type.GetType(\"Mono.RuntimeStructs\") != null`. This also makes building the test take about 15% longer when building a single test with `src/tests/build.sh -test:...`\r\n\r\nIs there another way to check for NativeAOT that brings in less of the reflection stack?",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOn_B2Ig==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5qxvZ3",
                                           "createdAt":  "2023-11-02T19:28:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nUsing the IsNativeAot property in the `baseservices/exceptions/stackoverflow` test brings in about 4mb of code into the final executable compared to checking `Assembly.Location == \"\"`. It looks like this is coming from the Mono check that uses `Type.GetType(\"Mono.RuntimeStructs\") != null`. This also makes building the test take about 15% longer when building a single test with `src/tests/build.sh -test:...`\r\n\r\nIs there another way to check for NativeAOT that brings in less of the reflection stack?\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ejtschuster\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`test-enhancement`, `area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-11-02T19:28:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5sCzv_",
                                           "createdAt":  "2023-11-15T14:48:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODMud_w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2023-11-15T22:17:33Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "~~https://github.com/dotnet/runtime/commit/261668fef9cb3c61c9b809b0a715ee873358a9d9 added an `IsSingleFile` to that check, did that fix the issue?~~ actually scratch that, it\u0027s still checking `IsNotMonoRuntime`.\r\n\r\nOne solution might be setting a define when `Condition=\"\u0027$(TestBuildMode)\u0027 == \u0027nativeaot\u0027\"` and use that define to hardcode the property.",
                                           "updatedAt":  "2023-11-15T14:54:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5skSgo",
                                           "createdAt":  "2023-11-21T18:35:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "@jtschuster what if we change the check from `Type.GetType(\"Mono.RuntimeStructs\") != null` to `Type.GetType(\"Mono.RuntimeStructs\") is not null`. That avoids bringing in the type equality operator and instead does a reference comparison, which might pull in less of the reflection stack (at least I think so).",
                                           "updatedAt":  "2023-11-21T18:35:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5sklBm",
                                           "createdAt":  "2023-11-21T19:13:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jtschuster",
                                           "body":  "@jkoritzinsky Looks like that only saves about 50 bytes, everything must be coming from the Type.GetType.",
                                           "updatedAt":  "2023-11-21T19:13:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5skuuB",
                                           "createdAt":  "2023-11-21T19:39:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "I was thinking that NativeAOT might try to resolve Type.GetType calls with constant strings at compile time given that it has full knowledge of the type universe. I guess it doesn\u0027t, and it would need a feature like that to reduce the cost here easily.",
                                           "updatedAt":  "2023-11-21T19:39:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5sk2ig",
                                           "createdAt":  "2023-11-21T20:03:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e ~4mb to the NativeAOT exe\r\n\r\nThis is cost of the reflection stack. Majority of the tests are going to bring in the reflection stack one way or the other. Is this optimization worth spending time on?",
                                           "updatedAt":  "2023-11-21T20:03:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5splCG",
                                           "createdAt":  "2023-11-22T14:06:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "An alternative might be having a private `bool IsMonoRuntime` on some type and use `UnsafeAccessorAttribute` to read it, afaik that shouldn\u0027t bring in the reflection stack right?\r\n\r\nUnfortunately we can\u0027t use `RuntimeInformation` since that is static (https://github.com/dotnet/runtime/issues/90081) but I tried it on `System.Runtime.Versioning.FrameworkName` and it seemed to work.\r\n\r\nOr maybe it\u0027s finally time to expose an `RuntimeInformation.RuntimeType` enum for CoreCLR/Mono/NativeAOT :)",
                                           "updatedAt":  "2023-11-23T16:38:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5srEBI",
                                           "createdAt":  "2023-11-22T17:52:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichalPetryka",
                                           "body":  "\u003e use `UnsafeAccessorAttribute` to read it,\r\n\r\nWouldn\u0027t InternalsVisibleTo be okay for this too?\r\n\r\n\u003e CoreCLR/Mono/NativeAOT\r\n\r\nThe issue would be with 3rd party runtimes like IL2CPP.",
                                           "updatedAt":  "2023-11-22T17:53:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5srnwy",
                                           "createdAt":  "2023-11-22T19:22:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "We try to avoid using `InternalsVisibleTo` when possible.\r\n\r\nInstead of InternalsVisibleTo, we could a \"public\" API in corelib that isn\u0027t exposed through any public ref assemblies. Then we could have a fake corelib shim that allows us to access the type. We already have a track record of using this trick in the `src/tests/` tree for some hosting/interop scenarios as well as a few other places.",
                                           "updatedAt":  "2023-11-22T19:22:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6f8HYi",
                                           "createdAt":  "2025-02-25T21:28:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "\u003cdetails\u003e\n  \u003csummary\u003eOne introspection trick, which works across platforms, is to check for some unchanged redhawk API names in self process.\u003c/summary\u003e\n\n```c#\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\n\nConsole.WriteLine(RuntimeInformationEx.IsNativeAot);\n\npublic static class RuntimeInformationEx\n{\n    private static bool? _isNativeAot;\n    public static bool IsNativeAot { get =\u003e _isNativeAot ??= IsNativeAotImpl(); }\n    \n    static bool IsNativeAotImpl()\n    {\n        HashSet\u003cstring\u003e requiredStrings =\n        [\n            \"RhBoxAny\",\n            \"RhUnboxAny\",\n            \"RhThrowHwEx\",\n            \"RhThrowEx\",\n            \"RhRethrow\"\n        ];\n\n        foreach (string line in File.ReadLines(Environment.ProcessPath!))\n        {\n            requiredStrings.RemoveWhere(line.Contains);\n\n            if (requiredStrings.Count == 0)\n                return true;\n        }\n\n        return false;\n    }\n}\n```\n\u003c/details\u003e\n\nWould be nice to have proper form-factor info in source-link type of APIs.",
                                           "updatedAt":  "2025-02-25T21:28:12Z"
                                       }
                                   ],
                         "totalCount":  10
                     },
        "title":  "CoreCLRTestLibrary `TestLibrary.Utilities.IsNativeAot` adds ~4mb to the NativeAOT exe on Linux",
        "labels":  [
                       "test-enhancement",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/94802",
        "createdAt":  "2023-11-15T19:24:24Z",
        "number":  94802,
        "author":  "carlossanlop",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-28T16:55:27Z",
        "body":  "There are various property values that could be placed in a central location and only defined once. For example:\r\n\r\nA) This property that determines if XUnitLogChecker is supported, is already in a central location:\r\nhttps://github.com/dotnet/runtime/blob/c643fedf020bfdcd53afee5d4debb57ded5419a6/Directory.Build.props#L336-L337\r\n\r\nIt is a very similar condition to the one used in the coreclr specific code:\r\nhttps://github.com/dotnet/runtime/blob/c643fedf020bfdcd53afee5d4debb57ded5419a6/src/tests/Common/helixpublishwitharcade.proj#L782\r\n\r\nB) The coreclr paths:\r\nhttps://github.com/dotnet/runtime/blob/c643fedf020bfdcd53afee5d4debb57ded5419a6/src/tests/Common/helixpublishwitharcade.proj#L68-L75\r\n\r\nCould also be merged into the same paths used by libraries:\r\nhttps://github.com/dotnet/runtime/blob/c643fedf020bfdcd53afee5d4debb57ded5419a6/Directory.Build.props#L338\r\n\r\nC) The build task in Libraries does this:\r\nhttps://github.com/dotnet/runtime/blob/c643fedf020bfdcd53afee5d4debb57ded5419a6/src/libraries/tests.proj#L709\r\n\r\nand the collection of the built artifacts is done here:\r\nhttps://github.com/dotnet/runtime/blob/c643fedf020bfdcd53afee5d4debb57ded5419a6/eng/pipelines/libraries/prepare-for-bin-publish.yml#L17\r\n\r\nWhile coreclr restores/builds it in this file:\r\nhttps://github.com/dotnet/runtime/blob/c643fedf020bfdcd53afee5d4debb57ded5419a6/src/tests/build.proj#L31\r\n\r\nSo there\u0027s also an opportunity to merge these two into a single centralized one.\r\n\r\n\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOc1u7yQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5sEheG",
                                           "createdAt":  "2023-11-15T19:24:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @hoyosjs\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThere are various property values that could be placed in a central location and only defined once. For example:\r\n\r\nA) This property that determines if XUnitLogChecker is supported, is already in a central location:\r\nhttps://github.com/dotnet/runtime/blob/c643fedf020bfdcd53afee5d4debb57ded5419a6/Directory.Build.props#L336-L337\r\n\r\nIt is a very similar condition to the one used in the coreclr specific code:\r\nhttps://github.com/dotnet/runtime/blob/c643fedf020bfdcd53afee5d4debb57ded5419a6/src/tests/Common/helixpublishwitharcade.proj#L782\r\n\r\nB) The coreclr paths:\r\nhttps://github.com/dotnet/runtime/blob/c643fedf020bfdcd53afee5d4debb57ded5419a6/src/tests/Common/helixpublishwitharcade.proj#L68-L75\r\n\r\nCould also be merged into the same paths used by libraries:\r\nhttps://github.com/dotnet/runtime/blob/c643fedf020bfdcd53afee5d4debb57ded5419a6/Directory.Build.props#L338\r\n\r\nC) The build task in Libraries does this:\r\nhttps://github.com/dotnet/runtime/blob/c643fedf020bfdcd53afee5d4debb57ded5419a6/src/libraries/tests.proj#L709\r\n\r\nand the collection of the built artifacts is done here:\r\nhttps://github.com/dotnet/runtime/blob/c643fedf020bfdcd53afee5d4debb57ded5419a6/eng/pipelines/libraries/prepare-for-bin-publish.yml#L17\r\n\r\nWhile coreclr restores/builds it in this file:\r\nhttps://github.com/dotnet/runtime/blob/c643fedf020bfdcd53afee5d4debb57ded5419a6/src/tests/build.proj#L31\r\n\r\nSo there\u0027s also an opportunity to merge these two into a single centralized one.\r\n\r\n\r\n\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ecarlossanlop\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-coreclr`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-11-15T19:24:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5xCyPA",
                                           "createdAt":  "2024-01-17T19:46:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThere are various property values that could be placed in a central location and only defined once. For example:\r\n\r\nA) This property that determines if XUnitLogChecker is supported, is already in a central location:\r\nhttps://github.com/dotnet/runtime/blob/c643fedf020bfdcd53afee5d4debb57ded5419a6/Directory.Build.props#L336-L337\r\n\r\nIt is a very similar condition to the one used in the coreclr specific code:\r\nhttps://github.com/dotnet/runtime/blob/c643fedf020bfdcd53afee5d4debb57ded5419a6/src/tests/Common/helixpublishwitharcade.proj#L782\r\n\r\nB) The coreclr paths:\r\nhttps://github.com/dotnet/runtime/blob/c643fedf020bfdcd53afee5d4debb57ded5419a6/src/tests/Common/helixpublishwitharcade.proj#L68-L75\r\n\r\nCould also be merged into the same paths used by libraries:\r\nhttps://github.com/dotnet/runtime/blob/c643fedf020bfdcd53afee5d4debb57ded5419a6/Directory.Build.props#L338\r\n\r\nC) The build task in Libraries does this:\r\nhttps://github.com/dotnet/runtime/blob/c643fedf020bfdcd53afee5d4debb57ded5419a6/src/libraries/tests.proj#L709\r\n\r\nand the collection of the built artifacts is done here:\r\nhttps://github.com/dotnet/runtime/blob/c643fedf020bfdcd53afee5d4debb57ded5419a6/eng/pipelines/libraries/prepare-for-bin-publish.yml#L17\r\n\r\nWhile coreclr restores/builds it in this file:\r\nhttps://github.com/dotnet/runtime/blob/c643fedf020bfdcd53afee5d4debb57ded5419a6/src/tests/build.proj#L31\r\n\r\nSo there\u0027s also an opportunity to merge these two into a single centralized one.\r\n\r\n\r\n\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ecarlossanlop\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`, `Priority:3`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2024-01-17T19:46:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5zW7vJ",
                                           "createdAt":  "2024-02-09T06:17:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "cc @akoeplinger ",
                                           "updatedAt":  "2024-02-09T06:17:44Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "XUnitLogChecker: Consolidate duplicated properties in coreclr and libraries into one place",
        "labels":  [
                       "area-Infrastructure",
                       "Priority:3"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/95122",
        "createdAt":  "2023-11-22T14:06:25Z",
        "number":  95122,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-08T17:05:24Z",
        "body":  "```\r\n  CMake Error at CMakeLists.txt:1 (cmake_minimum_required):\r\n    CMake 3.20 or higher is required.  You are running version 3.16.3\r\n```\r\n\r\nDo we need to update the codespaces container? https://github.com/dotnet/runtime/blob/7f818485a669eef2271034cb1aee3b01bdeeaef6/.devcontainer/Dockerfile#L11\r\n\r\ncc @akoeplinger ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHObPE5UQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5spnDn",
                                           "createdAt":  "2023-11-22T14:11:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "The codespaces prebuild is green, did you make sure to use one of our configurations rather than the default GitHub codespace?\r\n\r\n\u003cimg width=\"564\" alt=\"image\" src=\"https://github.com/dotnet/runtime/assets/1376924/67801d7e-c68e-4ae9-b933-770a867255b6\"\u003e\r\n\r\nfollowed by\r\n\r\n\u003cimg width=\"779\" alt=\"image\" src=\"https://github.com/dotnet/runtime/assets/1376924/f2ac0b74-d987-40e7-ae0d-323f2bbf2b2e\"\u003e\r\n\r\n\r\n",
                                           "updatedAt":  "2023-11-22T14:11:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5spn0r",
                                           "createdAt":  "2023-11-22T14:13:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "No I didn\u0027t know about these configurations. I just always build with the standard configuration as in other repositories. Is there a way to make such a configuration the default?",
                                           "updatedAt":  "2023-11-22T14:13:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5spteF",
                                           "createdAt":  "2023-11-22T14:25:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "We talked offline and turned out that using the normal plus symbol does indeed use our default configuration which comes with a new enough cmake version. Viktor tried this on release/8.0 however which is missing https://github.com/dotnet/runtime/commit/b2eb4cd88e28932b5c77e399a42334e3198731be\r\n\r\nOne thing I wonder though is if we should make one of the prebuilt configurations the default, the only downside is that you\u0027ll not get latest main but the repo state from the last (nightly) prebuild time when you create a codespace which might be unexpected.\r\n\r\nThoughts?",
                                           "updatedAt":  "2023-11-22T14:26:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5s5Pgk",
                                           "createdAt":  "2023-11-26T23:57:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n```\r\n  CMake Error at CMakeLists.txt:1 (cmake_minimum_required):\r\n    CMake 3.20 or higher is required.  You are running version 3.16.3\r\n```\r\n\r\nDo we need to update the codespaces container? https://github.com/dotnet/runtime/blob/7f818485a669eef2271034cb1aee3b01bdeeaef6/.devcontainer/Dockerfile#L11\r\n\r\ncc @akoeplinger \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`, `needs-area-label`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-11-26T23:57:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5s8TlR",
                                           "createdAt":  "2023-11-27T12:32:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODNsAJA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "akoeplinger",
                                                                               "createdAt":  "2023-11-27T13:54:43Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e One thing I wonder though is if we should make one of the prebuilt configurations the default, the only downside is that you\u0027ll not get latest main but the repo state from the last (nightly) prebuild time when you create a codespace which might be unexpected.\r\n\r\nThis should be fine 99% of the time so I think it\u0027s a good default. We considered doing the same locally with caching solutions.",
                                           "updatedAt":  "2023-11-27T12:32:06Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Building from codespace is failing  because of cmake version",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/95160",
        "createdAt":  "2023-11-23T02:32:33Z",
        "number":  95160,
        "author":  "carlossanlop",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T23:00:46Z",
        "body":  "### Error Blob\n\n```json\r\n{\r\n  \"ErrorMessage\": \"HTTP Error 500.30 - ASP.NET Core app failed to start\",\r\n  \"BuildRetry\": false,\r\n  \"ErrorPattern\": \"\",\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\n\n\n### Reproduction Steps\n\n- PR: https://github.com/dotnet/runtime/pull/95148\r\n- Build: https://dev.azure.com/dnceng-public/public/_build/results?buildId=478676\r\n- Queue: `browser-wasm windows Release LibraryTests_HighResource_AOT` from runtime-extra-platforms\r\n- Step: `Build product` (Why is it showing up green, but still being reported as a failure?)\r\n- Job: https://dev.azure.com/dnceng-public/public/_build/results?buildId=478676\u0026view=logs\u0026j=13711b3e-fe09-5ef6-c164-4a62d0e4a813\u0026t=42061139-9f72-519c-4326-1ecb451c2758\u0026l=15\r\n- Output:\r\n```\r\n========================== Starting Command Output ===========================\r\n\"C:\\Windows\\system32\\cmd.exe\" /D /E:ON /V:OFF /S /C \"CALL \"D:\\a\\_work\\_temp\\38893e30-51a0-46bf-9ec9-0825eb0fc60d.cmd\"\"\r\nGET https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.ps1\r\n##[error](NETCORE_ENGINEERING_TELEMETRY=InitializeToolset) HTTP Error 500.30 - ASP.NET Core app failed to start \r\nCommon solutions to this issue: \r\nThe app failed to start\r\nThe app started but then stopped\r\nThe app started but threw an exception during startup\r\nTroubleshooting steps: \r\nCheck the system event log for error messages \r\nEnable logging the application process\u0027 stdout messages \r\nAttach a debugger to the application process and inspect \r\nFor more guidance on diagnosing and handling these errors, visit Troubleshoot ASP.NET Core on Azure App Service and IIS. \r\nRetrying. Waiting for 3 seconds before next attempt (2 of 5).\r\nGET https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.ps1\r\n##[error](NETCORE_ENGINEERING_TELEMETRY=InitializeToolset) HTTP Error 500.30 - ASP.NET Core app failed to start \r\nCommon solutions to this issue: \r\nThe app failed to start\r\nThe app started but then stopped\r\nThe app started but threw an exception during startup\r\nTroubleshooting steps: \r\nCheck the system event log for error messages \r\nEnable logging the application process\u0027 stdout messages \r\nAttach a debugger to the application process and inspect \r\nFor more guidance on diagnosing and handling these errors, visit Troubleshoot ASP.NET Core on Azure App Service and IIS. \r\nRetrying. Waiting for 7 seconds before next attempt (3 of 5).\r\nGET https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.ps1\r\n##[error](NETCORE_ENGINEERING_TELEMETRY=InitializeToolset) HTTP Error 500.30 - ASP.NET Core app failed to start \r\n```\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=478676\r\n**Error message validated:** `HTTP Error 500.30 - ASP.NET Core app failed to start`\r\n**Result validation: :white_check_mark:** Known issue matched with the provided build.\r\n**Validation performed at:** 11/23/2023 2:40:17 AM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|0|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOdBRi8w==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5stEO6",
                                           "createdAt":  "2023-11-23T02:32:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in area-owners.md if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Error Blob\n\n```json\r\n{\r\n  \"ErrorMessage\": \"HTTP Error 500.30 - ASP.NET Core app failed to start\",\r\n  \"BuildRetry\": false,\r\n  \"ErrorPattern\": \"\",\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\n\n\n### Reproduction Steps\n\n- PR: https://github.com/dotnet/runtime/pull/95148\r\n- Build: https://dev.azure.com/dnceng-public/public/_build/results?buildId=478676\r\n- Queue: `browser-wasm windows Release LibraryTests_HighResource_AOT` from runtime-extra-platforms\r\n- Step: `Build product` (Why is it showing up green, but still being reported as a failure?)\r\n- Job: https://dev.azure.com/dnceng-public/public/_build/results?buildId=478676\u0026view=logs\u0026j=13711b3e-fe09-5ef6-c164-4a62d0e4a813\u0026t=42061139-9f72-519c-4326-1ecb451c2758\u0026l=15\r\n- Output:\r\n```\r\n========================== Starting Command Output ===========================\r\n\"C:\\Windows\\system32\\cmd.exe\" /D /E:ON /V:OFF /S /C \"CALL \"D:\\a\\_work\\_temp\\38893e30-51a0-46bf-9ec9-0825eb0fc60d.cmd\"\"\r\nGET https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.ps1\r\n##[error](NETCORE_ENGINEERING_TELEMETRY=InitializeToolset) HTTP Error 500.30 - ASP.NET Core app failed to start \r\nCommon solutions to this issue: \r\nThe app failed to start\r\nThe app started but then stopped\r\nThe app started but threw an exception during startup\r\nTroubleshooting steps: \r\nCheck the system event log for error messages \r\nEnable logging the application process\u0027 stdout messages \r\nAttach a debugger to the application process and inspect \r\nFor more guidance on diagnosing and handling these errors, visit Troubleshoot ASP.NET Core on Azure App Service and IIS. \r\nRetrying. Waiting for 3 seconds before next attempt (2 of 5).\r\nGET https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.ps1\r\n##[error](NETCORE_ENGINEERING_TELEMETRY=InitializeToolset) HTTP Error 500.30 - ASP.NET Core app failed to start \r\nCommon solutions to this issue: \r\nThe app failed to start\r\nThe app started but then stopped\r\nThe app started but threw an exception during startup\r\nTroubleshooting steps: \r\nCheck the system event log for error messages \r\nEnable logging the application process\u0027 stdout messages \r\nAttach a debugger to the application process and inspect \r\nFor more guidance on diagnosing and handling these errors, visit Troubleshoot ASP.NET Core on Azure App Service and IIS. \r\nRetrying. Waiting for 7 seconds before next attempt (3 of 5).\r\nGET https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.ps1\r\n##[error](NETCORE_ENGINEERING_TELEMETRY=InitializeToolset) HTTP Error 500.30 - ASP.NET Core app failed to start \r\n```\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ecarlossanlop\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-wasm`, `os-windows`, `blocking-clean-ci`, `wasm-aot-test`, `Known Build Error`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-11-23T02:32:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5s5Pfn",
                                           "createdAt":  "2023-11-26T23:57:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Error Blob\n\n```json\r\n{\r\n  \"ErrorMessage\": \"HTTP Error 500.30 - ASP.NET Core app failed to start\",\r\n  \"BuildRetry\": false,\r\n  \"ErrorPattern\": \"\",\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\n\n\n### Reproduction Steps\n\n- PR: https://github.com/dotnet/runtime/pull/95148\r\n- Build: https://dev.azure.com/dnceng-public/public/_build/results?buildId=478676\r\n- Queue: `browser-wasm windows Release LibraryTests_HighResource_AOT` from runtime-extra-platforms\r\n- Step: `Build product` (Why is it showing up green, but still being reported as a failure?)\r\n- Job: https://dev.azure.com/dnceng-public/public/_build/results?buildId=478676\u0026view=logs\u0026j=13711b3e-fe09-5ef6-c164-4a62d0e4a813\u0026t=42061139-9f72-519c-4326-1ecb451c2758\u0026l=15\r\n- Output:\r\n```\r\n========================== Starting Command Output ===========================\r\n\"C:\\Windows\\system32\\cmd.exe\" /D /E:ON /V:OFF /S /C \"CALL \"D:\\a\\_work\\_temp\\38893e30-51a0-46bf-9ec9-0825eb0fc60d.cmd\"\"\r\nGET https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.ps1\r\n##[error](NETCORE_ENGINEERING_TELEMETRY=InitializeToolset) HTTP Error 500.30 - ASP.NET Core app failed to start \r\nCommon solutions to this issue: \r\nThe app failed to start\r\nThe app started but then stopped\r\nThe app started but threw an exception during startup\r\nTroubleshooting steps: \r\nCheck the system event log for error messages \r\nEnable logging the application process\u0027 stdout messages \r\nAttach a debugger to the application process and inspect \r\nFor more guidance on diagnosing and handling these errors, visit Troubleshoot ASP.NET Core on Azure App Service and IIS. \r\nRetrying. Waiting for 3 seconds before next attempt (2 of 5).\r\nGET https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.ps1\r\n##[error](NETCORE_ENGINEERING_TELEMETRY=InitializeToolset) HTTP Error 500.30 - ASP.NET Core app failed to start \r\nCommon solutions to this issue: \r\nThe app failed to start\r\nThe app started but then stopped\r\nThe app started but threw an exception during startup\r\nTroubleshooting steps: \r\nCheck the system event log for error messages \r\nEnable logging the application process\u0027 stdout messages \r\nAttach a debugger to the application process and inspect \r\nFor more guidance on diagnosing and handling these errors, visit Troubleshoot ASP.NET Core on Azure App Service and IIS. \r\nRetrying. Waiting for 7 seconds before next attempt (3 of 5).\r\nGET https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.ps1\r\n##[error](NETCORE_ENGINEERING_TELEMETRY=InitializeToolset) HTTP Error 500.30 - ASP.NET Core app failed to start \r\n```\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=478676\r\n**Error message validated:** `HTTP Error 500.30 - ASP.NET Core app failed to start`\r\n**Result validation: :white_check_mark:** Known issue matched with the provided build.\r\n**Validation performed at:** 11/23/2023 2:40:17 AM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n### Report\r\n|Build|Definition|Step Name|Console log|Pull Request|\r\n|---|---|---|---|---|\r\n|[478676](https://dev.azure.com/dnceng-public/public/_build/results?buildId=478676)|dotnet/runtime|windows-x64 Release NativeAOT_Checked_Libs_SpeedOpt |[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/478676/logs/1220)||\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|1|1|\r\n\u003c!--Known issue error report end --\u003e\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ecarlossanlop\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-wasm`, `area-Infrastructure-libraries`, `os-windows`, `blocking-clean-ci`, `untriaged`, `wasm-aot-test`, `Known Build Error`, `needs-area-label`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-11-26T23:57:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5s8Z5h",
                                           "createdAt":  "2023-11-27T12:50:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Error Blob\n\n```json\r\n{\r\n  \"ErrorMessage\": \"HTTP Error 500.30 - ASP.NET Core app failed to start\",\r\n  \"BuildRetry\": false,\r\n  \"ErrorPattern\": \"\",\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\n\n\n### Reproduction Steps\n\n- PR: https://github.com/dotnet/runtime/pull/95148\r\n- Build: https://dev.azure.com/dnceng-public/public/_build/results?buildId=478676\r\n- Queue: `browser-wasm windows Release LibraryTests_HighResource_AOT` from runtime-extra-platforms\r\n- Step: `Build product` (Why is it showing up green, but still being reported as a failure?)\r\n- Job: https://dev.azure.com/dnceng-public/public/_build/results?buildId=478676\u0026view=logs\u0026j=13711b3e-fe09-5ef6-c164-4a62d0e4a813\u0026t=42061139-9f72-519c-4326-1ecb451c2758\u0026l=15\r\n- Output:\r\n```\r\n========================== Starting Command Output ===========================\r\n\"C:\\Windows\\system32\\cmd.exe\" /D /E:ON /V:OFF /S /C \"CALL \"D:\\a\\_work\\_temp\\38893e30-51a0-46bf-9ec9-0825eb0fc60d.cmd\"\"\r\nGET https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.ps1\r\n##[error](NETCORE_ENGINEERING_TELEMETRY=InitializeToolset) HTTP Error 500.30 - ASP.NET Core app failed to start \r\nCommon solutions to this issue: \r\nThe app failed to start\r\nThe app started but then stopped\r\nThe app started but threw an exception during startup\r\nTroubleshooting steps: \r\nCheck the system event log for error messages \r\nEnable logging the application process\u0027 stdout messages \r\nAttach a debugger to the application process and inspect \r\nFor more guidance on diagnosing and handling these errors, visit Troubleshoot ASP.NET Core on Azure App Service and IIS. \r\nRetrying. Waiting for 3 seconds before next attempt (2 of 5).\r\nGET https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.ps1\r\n##[error](NETCORE_ENGINEERING_TELEMETRY=InitializeToolset) HTTP Error 500.30 - ASP.NET Core app failed to start \r\nCommon solutions to this issue: \r\nThe app failed to start\r\nThe app started but then stopped\r\nThe app started but threw an exception during startup\r\nTroubleshooting steps: \r\nCheck the system event log for error messages \r\nEnable logging the application process\u0027 stdout messages \r\nAttach a debugger to the application process and inspect \r\nFor more guidance on diagnosing and handling these errors, visit Troubleshoot ASP.NET Core on Azure App Service and IIS. \r\nRetrying. Waiting for 7 seconds before next attempt (3 of 5).\r\nGET https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.ps1\r\n##[error](NETCORE_ENGINEERING_TELEMETRY=InitializeToolset) HTTP Error 500.30 - ASP.NET Core app failed to start \r\n```\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=478676\r\n**Error message validated:** `HTTP Error 500.30 - ASP.NET Core app failed to start`\r\n**Result validation: :white_check_mark:** Known issue matched with the provided build.\r\n**Validation performed at:** 11/23/2023 2:40:17 AM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n### Report\r\n|Build|Definition|Step Name|Console log|Pull Request|\r\n|---|---|---|---|---|\r\n|[478676](https://dev.azure.com/dnceng-public/public/_build/results?buildId=478676)|dotnet/runtime|windows-x64 Release NativeAOT_Checked_Libs_SpeedOpt |[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/478676/logs/1220)||\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|1|1|\r\n\u003c!--Known issue error report end --\u003e\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ecarlossanlop\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-wasm`, `os-windows`, `blocking-clean-ci`, `area-Infrastructure`, `untriaged`, `wasm-aot-test`, `Known Build Error`, `needs-area-label`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-11-27T12:50:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc50FGLz",
                                           "createdAt":  "2024-02-15T23:15:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeffschwMSFT",
                                           "body":  "was not seen recently... dropping blocking-clean-ci\r\n\r\n24-Hour Hit Count | 7-Day Hit Count | 1-Month Count\r\n-- | -- | --\r\n0 | 0 | 0",
                                           "updatedAt":  "2024-02-15T23:15:04Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "[8.0] [wasm] [AOT] HTTP Error 500.30 - ASP.NET Core app failed to start",
        "labels":  [
                       "os-windows",
                       "area-Infrastructure",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/95474",
        "createdAt":  "2023-11-30T18:39:29Z",
        "number":  95474,
        "author":  "ivdiazsa",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-02T12:00:58Z",
        "body":  "Example pipeline run with the error: https://dev.azure.com/dnceng-public/public/_build/results?buildId=484361\u0026view=logs\u0026jobId=a3afc042-504d-5914-10aa-806e778b39dd\u0026j=a3afc042-504d-5914-10aa-806e778b39dd\u0026t=6bb3abb3-e298-5c87-7809-e536a76b86e3\r\n\r\nWhen trying to run the libraries tests with `-p:TestReadyToRun=true`, the _System.Runtime.Loader_ tests will fail to begin running claiming there is no .NET found. Here\u0027s a snippet of the log showing the failure:\r\n\r\n```text\r\n+ /root/helix/work/correlation/scripts/38c2ae70f12144759c9ae5dcbf2e5ac7/execute.sh\r\n+ ./RunTests.sh --runtime-path /root/helix/work/correlation\r\n========================= Begin custom configuration settings ==============================\r\n========================== End custom configuration settings ===============================\r\n----- start Thu Nov 30 02:00:11 UTC 2023 =============== To repro directly: =====================================================\r\npushd .\r\nchmod +rwx System.Runtime.Loader.DefaultContext.Tests ^\u0026^\u0026 ./System.Runtime.Loader.DefaultContext.Tests -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing -xml testResults.xml \r\npopd\r\n===========================================================================================================\r\n/root/helix/work/workitem/e /root/helix/work/workitem/e\r\nThe command could not be loaded, possibly because:\r\n  * You intended to execute a .NET application:\r\n      The application \u0027-notrait\u0027 does not exist.\r\n  * You intended to execute a .NET SDK command:\r\n      No .NET SDKs were found.\r\n\r\nDownload a .NET SDK:\r\nhttps://aka.ms/dotnet/download\r\n\r\nLearn about SDK resolution:\r\nhttps://aka.ms/dotnet/sdk-not-found\r\n/root/helix/work/workitem/e\r\n----- end Thu Nov 30 02:00:11 UTC 2023 ----- exit code 145 ----------------------------------------------------------\r\n```\r\n\r\nTo repro locally in a clone of the repo, first build the *clr* and *libs* subsets in Release mode, making sure to specify that the _TestReadyToRun_ pretest setup will be required:\r\n\r\n```bash\r\ngit clone https://github.com/dotnet/runtime\r\ncd runtime\r\n./build.sh --subset clr+libs --configuration Release -p:TestReadyToRun=true\r\n```\r\n\r\nOnce that\u0027s done, look for the following snippet in `src/libraries/tests.proj` and comment it out:\r\n\r\n```xml\r\n  \u003cItemGroup Condition=\"\u0027$(TestReadyToRun)\u0027 == \u0027true\u0027\"\u003e\r\n    \u003c!-- These tests don\u0027t run with TestReadyToRun. They fail before starting saying they can\u0027t find .NET --\u003e\r\n    \u003cProjectExclusions Include=\"$(MSBuildThisFileDirectory)System.Runtime.Loader/tests/System.Runtime.Loader.Tests.csproj\" /\u003e\r\n    \u003cProjectExclusions Include=\"$(MSBuildThisFileDirectory)System.Runtime.Loader/tests/DefaultContext/System.Runtime.Loader.DefaultContext.Tests.csproj\" /\u003e\r\n  \u003c/ItemGroup\u003e\r\n```\r\n\r\nThis snippet is responsible of disabling these tests to keep the CI clean, hence the need to remove it to reproduce this problem.\r\n\r\nThen, try building and running the libraries tests with TestReadyToRun. It is highly recommended to adapt `src/libraries/tests.proj` further, so that only the faulty tests are attempted in order to make testing much faster.\r\n\r\n```bash\r\n./build.sh --subset libs.tests --configuration Release -p:TestReadyToRun=true -p:ArchiveTests=true\r\n```\r\n\r\n**Important Note:** At the time of filing this issue, PR #91229 has not been merged. So grab the commit from said PR to be able to reproduce this problem. If it\u0027s already merged by the time this issue is looked at, then just proceed normally.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHObd9iuw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5tVf7V",
                                           "createdAt":  "2023-11-30T18:39:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nExample pipeline run with the error: https://dev.azure.com/dnceng-public/public/_build/results?buildId=484361\u0026view=logs\u0026jobId=a3afc042-504d-5914-10aa-806e778b39dd\u0026j=a3afc042-504d-5914-10aa-806e778b39dd\u0026t=6bb3abb3-e298-5c87-7809-e536a76b86e3\r\n\r\nWhen trying to run the libraries tests with `-p:TestReadyToRun=true`, the _System.Runtime.Loader_ tests will fail to begin running claiming there is no .NET found. Here\u0027s a snippet of the log showing the failure:\r\n\r\n```text\r\n+ /root/helix/work/correlation/scripts/38c2ae70f12144759c9ae5dcbf2e5ac7/execute.sh\r\n+ ./RunTests.sh --runtime-path /root/helix/work/correlation\r\n========================= Begin custom configuration settings ==============================\r\n========================== End custom configuration settings ===============================\r\n----- start Thu Nov 30 02:00:11 UTC 2023 =============== To repro directly: =====================================================\r\npushd .\r\nchmod +rwx System.Runtime.Loader.DefaultContext.Tests ^\u0026^\u0026 ./System.Runtime.Loader.DefaultContext.Tests -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing -xml testResults.xml \r\npopd\r\n===========================================================================================================\r\n/root/helix/work/workitem/e /root/helix/work/workitem/e\r\nThe command could not be loaded, possibly because:\r\n  * You intended to execute a .NET application:\r\n      The application \u0027-notrait\u0027 does not exist.\r\n  * You intended to execute a .NET SDK command:\r\n      No .NET SDKs were found.\r\n\r\nDownload a .NET SDK:\r\nhttps://aka.ms/dotnet/download\r\n\r\nLearn about SDK resolution:\r\nhttps://aka.ms/dotnet/sdk-not-found\r\n/root/helix/work/workitem/e\r\n----- end Thu Nov 30 02:00:11 UTC 2023 ----- exit code 145 ----------------------------------------------------------\r\n```\r\n\r\nTo repro locally in a clone of the repo, first build the *clr* and *libs* subsets in Release mode, making sure to specify that the _TestReadyToRun_ pretest setup will be required:\r\n\r\n```bash\r\ngit clone https://github.com/dotnet/runtime\r\ncd runtime\r\n./build.sh --subset clr+libs --configuration Release -p:TestReadyToRun=true\r\n```\r\n\r\nOnce that\u0027s done, look for the following snippet in `src/libraries/tests.proj` and comment it out:\r\n\r\n```xml\r\n  \u003cItemGroup Condition=\"\u0027$(TestReadyToRun)\u0027 == \u0027true\u0027\"\u003e\r\n    \u003c!-- These tests don\u0027t run with TestReadyToRun. They fail before starting saying they can\u0027t find .NET --\u003e\r\n    \u003cProjectExclusions Include=\"$(MSBuildThisFileDirectory)System.Runtime.Loader/tests/System.Runtime.Loader.Tests.csproj\" /\u003e\r\n    \u003cProjectExclusions Include=\"$(MSBuildThisFileDirectory)System.Runtime.Loader/tests/DefaultContext/System.Runtime.Loader.DefaultContext.Tests.csproj\" /\u003e\r\n  \u003c/ItemGroup\u003e\r\n```\r\n\r\nThis snippet is responsible of disabling these tests to keep the CI clean, hence the need to remove it to reproduce this problem.\r\n\r\nThen, try building and running the libraries tests with TestReadyToRun. It is highly recommended to adapt `src/libraries/tests.proj` further, so that only the faulty tests are attempted in order to make testing much faster.\r\n\r\n```bash\r\n./build.sh --subset libs.tests --configuration Release -p:TestReadyToRun=true -p:ArchiveTests=true\r\n```\r\n\r\n**Important Note:** At the time of filing this issue, PR #91229 has not been merged. So grab the commit from said PR to be able to reproduce this problem. If it\u0027s already merged by the time this issue is looked at, then just proceed normally.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eivdiazsa\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure-libraries`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-11-30T18:39:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5t32K7",
                                           "createdAt":  "2023-12-06T17:34:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nExample pipeline run with the error: https://dev.azure.com/dnceng-public/public/_build/results?buildId=484361\u0026view=logs\u0026jobId=a3afc042-504d-5914-10aa-806e778b39dd\u0026j=a3afc042-504d-5914-10aa-806e778b39dd\u0026t=6bb3abb3-e298-5c87-7809-e536a76b86e3\r\n\r\nWhen trying to run the libraries tests with `-p:TestReadyToRun=true`, the _System.Runtime.Loader_ tests will fail to begin running claiming there is no .NET found. Here\u0027s a snippet of the log showing the failure:\r\n\r\n```text\r\n+ /root/helix/work/correlation/scripts/38c2ae70f12144759c9ae5dcbf2e5ac7/execute.sh\r\n+ ./RunTests.sh --runtime-path /root/helix/work/correlation\r\n========================= Begin custom configuration settings ==============================\r\n========================== End custom configuration settings ===============================\r\n----- start Thu Nov 30 02:00:11 UTC 2023 =============== To repro directly: =====================================================\r\npushd .\r\nchmod +rwx System.Runtime.Loader.DefaultContext.Tests ^\u0026^\u0026 ./System.Runtime.Loader.DefaultContext.Tests -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing -xml testResults.xml \r\npopd\r\n===========================================================================================================\r\n/root/helix/work/workitem/e /root/helix/work/workitem/e\r\nThe command could not be loaded, possibly because:\r\n  * You intended to execute a .NET application:\r\n      The application \u0027-notrait\u0027 does not exist.\r\n  * You intended to execute a .NET SDK command:\r\n      No .NET SDKs were found.\r\n\r\nDownload a .NET SDK:\r\nhttps://aka.ms/dotnet/download\r\n\r\nLearn about SDK resolution:\r\nhttps://aka.ms/dotnet/sdk-not-found\r\n/root/helix/work/workitem/e\r\n----- end Thu Nov 30 02:00:11 UTC 2023 ----- exit code 145 ----------------------------------------------------------\r\n```\r\n\r\nTo repro locally in a clone of the repo, first build the *clr* and *libs* subsets in Release mode, making sure to specify that the _TestReadyToRun_ pretest setup will be required:\r\n\r\n```bash\r\ngit clone https://github.com/dotnet/runtime\r\ncd runtime\r\n./build.sh --subset clr+libs --configuration Release -p:TestReadyToRun=true\r\n```\r\n\r\nOnce that\u0027s done, look for the following snippet in `src/libraries/tests.proj` and comment it out:\r\n\r\n```xml\r\n  \u003cItemGroup Condition=\"\u0027$(TestReadyToRun)\u0027 == \u0027true\u0027\"\u003e\r\n    \u003c!-- These tests don\u0027t run with TestReadyToRun. They fail before starting saying they can\u0027t find .NET --\u003e\r\n    \u003cProjectExclusions Include=\"$(MSBuildThisFileDirectory)System.Runtime.Loader/tests/System.Runtime.Loader.Tests.csproj\" /\u003e\r\n    \u003cProjectExclusions Include=\"$(MSBuildThisFileDirectory)System.Runtime.Loader/tests/DefaultContext/System.Runtime.Loader.DefaultContext.Tests.csproj\" /\u003e\r\n  \u003c/ItemGroup\u003e\r\n```\r\n\r\nThis snippet is responsible of disabling these tests to keep the CI clean, hence the need to remove it to reproduce this problem.\r\n\r\nThen, try building and running the libraries tests with TestReadyToRun. It is highly recommended to adapt `src/libraries/tests.proj` further, so that only the faulty tests are attempted in order to make testing much faster.\r\n\r\n```bash\r\n./build.sh --subset libs.tests --configuration Release -p:TestReadyToRun=true -p:ArchiveTests=true\r\n```\r\n\r\n**Important Note:** At the time of filing this issue, PR #91229 has not been merged. So grab the commit from said PR to be able to reproduce this problem. If it\u0027s already merged by the time this issue is looked at, then just proceed normally.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eivdiazsa\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-12-06T17:34:53Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "System.Runtime.Loader.*.Tests Fail Saying There is no .NET Found when TestReadyToRun is Enabled",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/95537",
        "createdAt":  "2023-12-02T03:12:50Z",
        "number":  95537,
        "author":  "jkotas",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-04T21:50:17Z",
        "body":  "The native PGO optimization is enabled for coreclr.dll and clrjit.dll only today. We should consider enabling it for other shipping native libraries. In particular:\r\n\r\n- dotnet.exe and hostpolicy.dll: PGO is likely going to improve code locality that indirectly improves startup time and working set. It won\u0027t be a huge improvement, but every bit that helps startup is goodness.\r\n- clrcompression.dll: PGO is likely going to improve compression throughput.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHObYbMfQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5tfrLT",
                                           "createdAt":  "2023-12-02T03:13:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nThe native PGO optimization is enabled for coreclr.dll and clrjit.dll only today. We should consider enabling for other shipping native .dlls. In particular:\r\n\r\n- dotnet.exe and hostpolicy.dll: PGO is likely going to improve code locality that indirectly improves startup time and working set. It won\u0027t be a huge improvement, but every bit that helps startup is goodness.\r\n- clrcompression.dll: PGO is likely going to improve compression throughput.\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ejkotas\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`tenet-performance`, `area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2023-12-02T03:13:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5tfrlL",
                                           "createdAt":  "2023-12-02T03:20:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "cc @trylek @mangod9 ",
                                           "updatedAt":  "2023-12-02T03:20:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5tf0gA",
                                           "createdAt":  "2023-12-02T06:22:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mangod9",
                                           "body":  "Adding @davidwrighton as well. Not sure whether we collect any PGO data for these binaries? ",
                                           "updatedAt":  "2023-12-02T06:22:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5tf1CW",
                                           "createdAt":  "2023-12-02T06:32:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e Not sure whether we collect any PGO data for these binaries?\r\n\r\nWe do not today. The PGO data collection and consumption is enabled in the build for coreclr.dll and clrjit.dll only.",
                                           "updatedAt":  "2023-12-02T06:32:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5thsx9",
                                           "createdAt":  "2023-12-03T17:50:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "EgorBo",
                                           "body":  "https://github.com/dotnet/runtime/issues/67671",
                                           "updatedAt":  "2023-12-03T17:50:32Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Enable native PGO optimization for more native libraries",
        "labels":  [
                       "tenet-performance",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/96716",
        "createdAt":  "2024-01-09T21:47:59Z",
        "number":  96716,
        "author":  "trylek",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-08-23T20:28:24Z",
        "body":  "As we have already switched over the vast majority of runtime tests to the merged test model, the merged infrastructure gets exercised by developers on a daily basis. This uncovered a few issues / open problems that need resolving / addressing:\r\n\r\n* In the legacy infrastructure, ```xunit.console``` used to display stderr output from the individual test cases on the console. The merged wrapper implementation apparently doesn\u0027t do that. There seems to be a bit of controversy where some internal developers prefer it one way and some the other - for local runs, ideally we should be able to control this via an environment variable or command-line option to ```src\\tests\\run```.\r\n\r\n* Originally the plan was that, once all tests have been converted to the merged model, we should be able to delete parts of the scripts pertaining to the legacy infrastructure along with the ```BuildAsStandalone``` property that internally uses the legacy infrastructure. I keep being told that we should keep the property as debugging of the individual test cases is crucial especially for low-level runtime changes and for new platform bring-up scenarios. I think it shouldn\u0027t be hard to keep ```BuildAsStandalone``` under the new model by basically forcing all tests to require process isolation so that they generate their individual execution scripts.\r\n\r\n* Writing an md doc describing the merged test infrastructure, how to use it and troubleshoot it. I plan to do that as my next step as I promised to Maoni to do that before merging in the PR converting the GC tests to the merged test model.\r\n\r\nThanks\r\n\r\nTomas\r\n\r\n/cc @dotnet/runtime-infrastructure @jkoritzinsky @janvorli @BruceForstall ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOiY24ng==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5wSUn_",
                                           "createdAt":  "2024-01-09T21:48:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nAs we have already switched over the vast majority of runtime tests to the merged test model, the merged infrastructure gets exercised by developers on a daily basis. This uncovered a few issues / open problems that need resolving / addressing:\r\n\r\n* In the legacy infrastructure, ```xunit.console``` used to display stderr output from the individual test cases on the console. The merged wrapper implementation apparently doesn\u0027t do that. There seems to be a bit of controversy where some internal developers prefer it one way and some the other - for local runs, ideally we should be able to control this via an environment variable or command-line option to ```src\\tests\\run```.\r\n\r\n* Originally the plan was that, once all tests have been converted to the merged model, we should be able to delete parts of the scripts pertaining to the legacy infrastructure along with the ```BuildAsStandalone``` property that internally uses the legacy infrastructure. I keep being told that we should keep the property as debugging of the individual test cases is crucial especially for low-level runtime changes and for new platform bring-up scenarios. I think it shouldn\u0027t be hard to keep ```BuildAsStandalone``` under the new model by basically forcing all tests to require process isolation so that they generate their individual execution scripts.\r\n\r\n* Writing an md doc describing the merged test infrastructure, how to use it and troubleshoot it. I plan to do that as my next step as I promised to Maoni to do that before merging in the PR converting the GC tests to the merged test model.\r\n\r\nThanks\r\n\r\nTomas\r\n\r\n/cc @dotnet/runtime-infrastructure @jkoritzinsky @janvorli @BruceForstall \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003etrylek\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003etrylek\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e9.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2024-01-09T21:48:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5wScfd",
                                           "createdAt":  "2024-01-09T22:10:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "One case I want to make sure we consider:\r\n\r\nIt should be possible to treat a merged runner assembly as \"Build as Standalone\". For merged projects (like the Interop tree), we can\u0027t just \"BuildAsStandalone=true\" for a subset of tests. Right now, this scenario is blocked (as the merged runner assemblies disable builds when BuildAsStandalone=true). This scenario is important for locally debugging tests in configurations like GCStress to remove filtering logic (and using a build-time filter to get only the test you want).\r\n\r\nI would still like to get to a point where we can remove the legacy test wrapper infrastructure in all cases and just run each test assembly as-if it was a merged runner assembly even if it\u0027s marked BuildAsStandalone.\r\n\r\nI don\u0027t think we should ever get rid of BuildAsStandalone as a feature as it\u0027s useful for local scenarios (in particular the one I mentioned above).",
                                           "updatedAt":  "2024-01-09T22:10:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5wSu_Q",
                                           "createdAt":  "2024-01-09T23:31:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "I have also found an issue in parsing the test results xml. One of the tests (I think it was crossgen2determinism, but I am not sure) outputs a character that is invalid in xml. The python script crashed on it when the test failed, so it didn\u0027t show the results of any of the tests. I had to delete the respective test results xml to make the script pass and get the results of the other tests. ",
                                           "updatedAt":  "2024-01-09T23:31:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5wSxCG",
                                           "createdAt":  "2024-01-09T23:43:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "I have also just found that when I build the tests with `BuildAsStandalone=true`, few tests don\u0027t find a native dll/.so that they pinvoke into. For example `Interop\\StringMarshalling\\LPSTR\\LPSTRTest`. I believe this started to happen relatively recently.",
                                           "updatedAt":  "2024-01-09T23:43:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5wS5os",
                                           "createdAt":  "2024-01-10T00:26:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "Possibly somewhat related: https://github.com/dotnet/runtime/issues/90682, https://github.com/dotnet/runtime/issues/95032\r\n\r\nIn particular, using \"run.cmd\" to run a single or multiple tests should work well for both merged and `BuildAsStandalone=true` cases.",
                                           "updatedAt":  "2024-01-10T00:26:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5wW_vg",
                                           "createdAt":  "2024-01-10T15:30:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "One thing I noticed while looking at https://github.com/dotnet/runtime/pull/93012 but forgot to file an issue for is that we have a couple .il projects that generate the same assembly name which can cause issues with the merged test runners.\r\n\r\nA quick grep shows the following duplicate .assembly entries:\r\n```\r\n.assembly \u0027fault\u0027\r\n.assembly \u0027Test\u0027\r\n.assembly \u0027zeroinit01_large\u0027\r\n.assembly Bob\r\n.assembly GitHub_21061\r\n.assembly HelloWorld\r\n.assembly InvalidCSharp\r\n.assembly methodimpl\r\n.assembly override_override1\r\n.assembly provider\r\n.assembly Runtime_40607\r\n.assembly self_override1\r\n.assembly self_override3\r\n.assembly simple\r\n.assembly tailcall\r\n.assembly test\r\n.assembly test3\r\n.assembly TestCase0\r\n.assembly TestCase1\r\n.assembly TestCase2\r\n.assembly TestCase3\r\n.assembly TestCase4\r\n.assembly TestCase5\r\n.assembly TestCase6\r\n.assembly UnitTest\r\n```",
                                           "updatedAt":  "2024-01-10T15:30:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5waO1I",
                                           "createdAt":  "2024-01-10T23:34:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trylek",
                                           "body":  "/cc @ivdiazsa ",
                                           "updatedAt":  "2024-01-10T23:34:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5waQRP",
                                           "createdAt":  "2024-01-10T23:41:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODSNcjQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "akoeplinger",
                                                                               "createdAt":  "2024-01-12T09:15:43Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "trylek",
                                           "body":  "@akoeplinger - IIRC there are actually two problems with il projects - one is mismatched module vs. assembly name and the other is two tests with the same assembly name in different parts of the test tree. For the former I believe we should bulk fix them as they cause problems in Crossgen2 runs, for the latter I\u0027ve so far been kind of opportunistic - I didn\u0027t care much if an assembly under ```baseservices\\exceptions``` was named the same as a test under ```JIT\\Intrinsics```, in other words I wasn\u0027t sure whether we need to enforce complete uniqueness of test assembly names - with over 20K tests that seems to be quite a bit of cleanup and something that can easily break in the future when someone copy \u0026 pastes a new test so we\u0027d likely need to add some automated validation of the uniqueness; but if it turns out to be beneficial, so be it.",
                                           "updatedAt":  "2024-01-10T23:41:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5wgo37",
                                           "createdAt":  "2024-01-11T17:12:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivdiazsa",
                                           "body":  "\u003e I have also found an issue in parsing the test results xml. One of the tests (I think it was crossgen2determinism, but I am not sure) outputs a character that is invalid in xml. The python script crashed on it when the test failed, so it didn\u0027t show the results of any of the tests. I had to delete the respective test results xml to make the script pass and get the results of the other tests.\r\n\r\nAt some point, there was a change that introduced an encoding XML function that basically rendered the test outputs useless because all non-alphanumeric characters were replaced by a hex notation value. This was fixed in #92286. I remember I had to go through plenty of crashes like the one you\u0027re describing here while making the fix work. So, this might be an edge case I did not consider in my PR. Let me try to reproduce it on my machine and I can follow up with a fix.",
                                           "updatedAt":  "2024-01-11T17:12:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5wgrKD",
                                           "createdAt":  "2024-01-11T17:18:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivdiazsa",
                                           "body":  "\u003e In the legacy infrastructure, xunit.console used to display stderr output from the individual test cases on the console. The merged wrapper implementation apparently doesn\u0027t do that. There seems to be a bit of controversy where some internal developers prefer it one way and some the other - for local runs, ideally we should be able to control this via an environment variable or command-line option to src\\tests\\run.\r\n\r\nHow bulky would it be, if say we add a switch to toggle this behavior, and when it\u0027s on, we prefix each line of the test output with the stream it came from? Like for example:\r\n\r\n```text\r\nSTDOUT: Here\u0027s some test output.\r\nSTDOUT: Here\u0027s some more output.\r\nSTDERR: Here\u0027s some error output.\r\nSTDOUT: Here\u0027s even more output.\r\n```\r\n\r\nOr, less verbose like:\r\n\r\n```text\r\nHere\u0027s some test output.\r\nHere\u0027s some more output.\r\nSTDERR: Here\u0027s some error output.\r\nHere\u0027s even more output.\r\n```\r\n\r\nAnd if it\u0027s disabled, we just print the output as is, like we do today.",
                                           "updatedAt":  "2024-01-11T17:18:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5whA7C",
                                           "createdAt":  "2024-01-11T18:10:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "I would not prefix it, I don\u0027t care about seeing what is coming from stderr and what is coming from stdout. The point was that before, the stdout stuff was captured and not printed to console while the stderr stuff went to the console (maybe it was captured in addition to that too, I\u0027m not sure).\r\nIn the current state, it captures both stdout and stderr and never shows any of these. So if there are tests failing, I don\u0027t see that during the test run in the console. \r\nSo I\u0027d like a command line switch to re-enable the old behavior - showing stderr to the console.",
                                           "updatedAt":  "2024-01-11T18:10:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5whGUg",
                                           "createdAt":  "2024-01-11T18:24:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "@janvorli Maybe you are referring to the change https://github.com/dotnet/runtime/pull/94986. I believe there were multiple problems: (1) stderr output didn\u0027t get logged, (2) stderr output does *not* indicate test failure, (3) stderr output creates undesired verbosity in the test run.\r\n\r\nIt sounds like what you want is a mode where, during a test run (not just at the end, in summary), the fact that a test failed gets printed, and not only that, you want to see to output of that test failure on the console.\r\n\r\nIsn\u0027t the fact that a test failed already printed? Couldn\u0027t you just poll the log file for the test failure output?",
                                           "updatedAt":  "2024-01-11T18:24:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5whTxD",
                                           "createdAt":  "2024-01-11T19:00:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "\u003e stderr output does _not_ indicate test failure,\r\n\r\nPrinting to stderr was always caused by test failures only before except for a single test that started to print to stderr relatively recently.\r\n\r\n\u003e stderr output creates undesired verbosity in the test run.\r\n\r\nI need this verbosity for my workflow. When running tests, I do other work and from time to time I peek at the console output to see if there are no problems. Once I spot a problem, based on the output I leave it running or cancel the run and debug the problem. There are only a few tests that generate a lot of stderr output, most of them display just a couple of lines, usually an assert that is often directly actionable. I can usually see all the failures of a run in a scrollback buffer of the console.\r\n\r\n\u003e Isn\u0027t the fact that a test failed already printed?\r\n\r\nNo, there is no such indication. All I can see is a list of .sh scripts that got executed. Each of these scripts represents hundreds or thousands of tests. \r\n\r\nBasically, all I want is a command line option that makes it behave as before. I am fine with the default being the current behavior if people like it better.",
                                           "updatedAt":  "2024-01-11T19:00:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Jjbie",
                                           "createdAt":  "2024-08-23T20:28:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "I\u0027ve added more md docs in https://github.com/dotnet/runtime/pull/106899 for how to do some basic troubleshooting with the system and how to add tests to address the 3rd bullet point.",
                                           "updatedAt":  "2024-08-23T20:28:23Z"
                                       }
                                   ],
                         "totalCount":  14
                     },
        "title":  "Reported issues / open problems related to the merged test infrastructure",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/96798",
        "createdAt":  "2024-01-10T18:50:53Z",
        "number":  96798,
        "author":  "carlossanlop",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T23:00:48Z",
        "body":  "### Error Blob\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": \"nodename nor servname provided, or not known\",\r\n  \"BuildRetry\": true,\r\n  \"ErrorPattern\": \"\",\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\n\r\n\r\n### Reproduction Steps\r\n\r\n- PR: https://github.com/dotnet/runtime/pull/96767\r\n- Build: https://dev.azure.com/dnceng-public/public/_build/results?buildId=521880\u0026view=logs\u0026j=d69d97fe-d5be-517f-4ef6-fd1eef0215b1\u0026t=78465c68-a15b-560b-2cb9-0481cc23db72\u0026l=37\r\n- Affected step: `Build and generate native prerequisites`\r\n- Affected queue: `CoreCLR Product Build osx arm64 release`\r\n- Output:\r\n```\r\nError while retrieving client Settings for PipelineArtifact. Exception: System.Net.Http.HttpRequestException: nodename nor servname provided, or not known (vsblobprodcus3.vsblob.visualstudio.com:443)\r\n ---\u003e System.Net.Sockets.SocketException (0xFFFDFFFF): nodename nor servname provided, or not known\r\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)\r\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)\r\n   at System.Net.Sockets.Socket.\u003cConnectAsync\u003eg__WaitForConnectWithCancellation|277_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.VisualStudio.Services.Common.VssHttpRetryMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.\u003cSendAsync\u003eg__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\r\n   at Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.SendAsync(HttpRequestMessage message, HttpCompletionOption completionOption, Object userState, CancellationToken cancellationToken)\r\n   at Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.SendAsync[T](HttpRequestMessage message, Object userState, CancellationToken cancellationToken)\r\n   at Microsoft.VisualStudio.Services.Location.Client.LocationHttpClient.GetConnectionDataAsync(ConnectOptions connectOptions, Int64 lastChangeId, CancellationToken cancellationToken, Object userState)\r\n   at Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.GetConnectionDataAsync(ConnectOptions connectOptions, Int32 lastChangeId, CancellationToken cancellationToken)\r\n   at Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.ConnectAsync(ConnectOptions connectOptions, CancellationToken cancellationToken)\r\n   at Microsoft.VisualStudio.Services.WebApi.Location.LocationService.CreateDataProviderAsync(String location, CancellationToken cancellationToken)\r\n   at Microsoft.VisualStudio.Services.WebApi.Location.LocationService.ResolveLocationDataAsync(Guid locationAreaIdentifier, CancellationToken cancellationToken)\r\n   at Microsoft.VisualStudio.Services.WebApi.Location.LocationService.GetLocationDataAsync(Guid locationAreaIdentifier, CancellationToken cancellationToken)\r\n   at Microsoft.VisualStudio.Services.WebApi.VssConnection.GetClientInstanceAsync(Type managedType, Guid serviceIdentifier, CancellationToken cancellationToken, VssHttpRequestSettings settings, DelegatingHandler[] handlers)\r\n   at Microsoft.VisualStudio.Services.WebApi.VssConnection.GetClientServiceImplAsync(Type requestedType, Guid serviceIdentifier, Func`4 getInstanceAsync, CancellationToken cancellationToken)\r\n   at Microsoft.VisualStudio.Services.WebApi.VssConnection.GetClientAsync[T](CancellationToken cancellationToken)\r\n   at Microsoft.VisualStudio.Services.WebApi.TaskExtensions.SyncResult[T](Task`1 task)\r\n   at Microsoft.VisualStudio.Services.WebApi.VssConnection.GetClient[T]()\r\n   at Microsoft.VisualStudio.Services.Agent.Blob.DedupManifestArtifactClientFactory.GetClientSettingsAsync(VssConnection connection, Client client, IAppTraceSource tracer, CancellationToken cancellationToken) in /Users/runner/work/1/s/src/Microsoft.VisualStudio.Services.Agent/Blob/DedupManifestArtifactClientFactory.cs:line 323.  Falling back to defaults.\r\nUsing default max parallelism.\r\nMax dedup parallelism: 192\r\nDomainId: 0\r\n##[error]nodename nor servname provided, or not known (vsblobprodcus3.vsblob.visualstudio.com:443)\r\n```\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|0|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOpJ-Sjg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5wYWaV",
                                           "createdAt":  "2024-01-10T18:51:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n### Error Blob\n\n```json\r\n{\r\n  \"ErrorMessage\": \"nodename nor servname provided, or not known\",\r\n  \"BuildRetry\": true,\r\n  \"ErrorPattern\": \"\",\r\n  \"ExcludeConsoleLog\": true\r\n}\r\n```\r\n\n\n### Reproduction Steps\n\n- PR: https://github.com/dotnet/runtime/pull/96767\r\n- Build: https://dev.azure.com/dnceng-public/public/_build/results?buildId=521880\u0026view=logs\u0026j=d69d97fe-d5be-517f-4ef6-fd1eef0215b1\u0026t=78465c68-a15b-560b-2cb9-0481cc23db72\u0026l=37\r\n- Affected step: `Build and generate native prerequisites`\r\n- Affected queue: `CoreCLR Product Build osx arm64 release`\r\n- Output:\r\n```\r\nError while retrieving client Settings for PipelineArtifact. Exception: System.Net.Http.HttpRequestException: nodename nor servname provided, or not known (vsblobprodcus3.vsblob.visualstudio.com:443)\r\n ---\u003e System.Net.Sockets.SocketException (0xFFFDFFFF): nodename nor servname provided, or not known\r\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)\r\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)\r\n   at System.Net.Sockets.Socket.\u003cConnectAsync\u003eg__WaitForConnectWithCancellation|277_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.VisualStudio.Services.Common.VssHttpRetryMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.\u003cSendAsync\u003eg__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\r\n   at Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.SendAsync(HttpRequestMessage message, HttpCompletionOption completionOption, Object userState, CancellationToken cancellationToken)\r\n   at Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase.SendAsync[T](HttpRequestMessage message, Object userState, CancellationToken cancellationToken)\r\n   at Microsoft.VisualStudio.Services.Location.Client.LocationHttpClient.GetConnectionDataAsync(ConnectOptions connectOptions, Int64 lastChangeId, CancellationToken cancellationToken, Object userState)\r\n   at Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.GetConnectionDataAsync(ConnectOptions connectOptions, Int32 lastChangeId, CancellationToken cancellationToken)\r\n   at Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider.ConnectAsync(ConnectOptions connectOptions, CancellationToken cancellationToken)\r\n   at Microsoft.VisualStudio.Services.WebApi.Location.LocationService.CreateDataProviderAsync(String location, CancellationToken cancellationToken)\r\n   at Microsoft.VisualStudio.Services.WebApi.Location.LocationService.ResolveLocationDataAsync(Guid locationAreaIdentifier, CancellationToken cancellationToken)\r\n   at Microsoft.VisualStudio.Services.WebApi.Location.LocationService.GetLocationDataAsync(Guid locationAreaIdentifier, CancellationToken cancellationToken)\r\n   at Microsoft.VisualStudio.Services.WebApi.VssConnection.GetClientInstanceAsync(Type managedType, Guid serviceIdentifier, CancellationToken cancellationToken, VssHttpRequestSettings settings, DelegatingHandler[] handlers)\r\n   at Microsoft.VisualStudio.Services.WebApi.VssConnection.GetClientServiceImplAsync(Type requestedType, Guid serviceIdentifier, Func`4 getInstanceAsync, CancellationToken cancellationToken)\r\n   at Microsoft.VisualStudio.Services.WebApi.VssConnection.GetClientAsync[T](CancellationToken cancellationToken)\r\n   at Microsoft.VisualStudio.Services.WebApi.TaskExtensions.SyncResult[T](Task`1 task)\r\n   at Microsoft.VisualStudio.Services.WebApi.VssConnection.GetClient[T]()\r\n   at Microsoft.VisualStudio.Services.Agent.Blob.DedupManifestArtifactClientFactory.GetClientSettingsAsync(VssConnection connection, Client client, IAppTraceSource tracer, CancellationToken cancellationToken) in /Users/runner/work/1/s/src/Microsoft.VisualStudio.Services.Agent/Blob/DedupManifestArtifactClientFactory.cs:line 323.  Falling back to defaults.\r\nUsing default max parallelism.\r\nMax dedup parallelism: 192\r\nDomainId: 0\r\n##[error]nodename nor servname provided, or not known (vsblobprodcus3.vsblob.visualstudio.com:443)\r\n```\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003ecarlossanlop\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`arch-arm64`, `os-mac-os-x`, `blocking-clean-ci`, `area-Infrastructure`, `runtime-coreclr`, `Known Build Error`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2024-01-10T18:51:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6kn5KO",
                                           "createdAt":  "2025-03-28T16:55:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jeffschwMSFT",
                                           "body":  "removing blocking-clean-ci as it has not failed in 30 days\n\n24-Hour Hit Count | 7-Day Hit Count | 1-Month Count\n-- | -- | --\n0 | 0 | 0\n",
                                           "updatedAt":  "2025-03-28T16:55:26Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Error while retrieving client Settings for PipelineArtifact. HttpRequestException: nodename nor servname provided, or not known (vsblobprodcus3.vsblob.visualstudio.com:443)",
        "labels":  [
                       "arch-arm64",
                       "os-mac-os-x",
                       "area-Infrastructure",
                       "runtime-coreclr",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/97653",
        "createdAt":  "2024-01-29T16:45:21Z",
        "number":  97653,
        "author":  "ericstj",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-08T17:05:26Z",
        "body":  "Merging PRs with stale results can introduce build breaks or test failures because the code might have been validated on an old codebase.\r\n\r\nWe should make it obvious when we have build results that are older than a couple weeks - or maybe older by a number of commits.  That way we avoid folks accidentally merging with stale results.\r\n\r\nI know AzDo has a policy setting for this - maybe github does as well?",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOcj5sjg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5yJpZQ",
                                           "createdAt":  "2024-01-29T16:45:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nMerging PRs with stale results can introduce build breaks or test failures because the code might have been validated on an old codebase.\r\n\r\nWe should make it obvious when we have build results that are older than a couple weeks - or maybe older by a number of commits.  That way we avoid folks accidentally merging with stale results.\r\n\r\nI know AzDo has a policy setting for this - maybe github does as well?\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eericstj\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2024-01-29T16:45:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5yJyUm",
                                           "createdAt":  "2024-01-29T16:59:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "![image](https://github.com/dotnet/runtime/assets/7412651/e3130c08-ecc1-42fc-8abf-e3a2da67dfc8)\r\n\r\nGH offers the branch must be \"up-to-date\" setting but that doesn\u0027t work well in high traffic repositories. You would constantly need to sync to latest and wait for CI to finish. By that time, your HEAD likely isn\u0027t in sync with runtime\u0027s HEAD anymore.\r\n\r\nIn addition to that, this feature is coupled with the \"require status check to pass before merge\" feature which we don\u0027t have enabled in runtime.",
                                           "updatedAt":  "2024-01-29T16:59:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5yKUeQ",
                                           "createdAt":  "2024-01-29T18:18:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODUh-xQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2024-01-29T18:47:17Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "vcsjones",
                                           "body":  "This could be solved with a GitHub action. Have the action run on commits to `main` (A PR was merged) and have the action enumerate all open pull requests and their reviews, and dismiss the review if its older than whatever you configure it to be.\r\n\r\nIf this sounds interesting I can help develop the action.",
                                           "updatedAt":  "2024-01-29T18:18:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5yLMYT",
                                           "createdAt":  "2024-01-29T20:48:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "It might be worthwhile looking into the GitHub Merge Queue feature to support us here once we finish the Merge-on-Green initiative.",
                                           "updatedAt":  "2024-01-29T20:48:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5yPmyO",
                                           "createdAt":  "2024-01-30T12:02:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "Instead of a policy a quick reminder comment by @msftbot would probably help too and I think we have all the infrastructure in place for this since we already post the \"no recent activity\" comment and close PRs after a while.",
                                           "updatedAt":  "2024-01-30T12:03:01Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Flag stale PR validation builds",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/97791",
        "createdAt":  "2024-01-31T21:47:57Z",
        "number":  97791,
        "author":  "ashaurtaev",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC14Y5Q==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "tomeksowi",
                                            "createdAt":  "2024-02-05T12:10:48Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "sirntar",
                                            "createdAt":  "2024-02-05T13:54:02Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Bajtazar",
                                            "createdAt":  "2024-02-05T14:21:23Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "dkurt",
                                            "createdAt":  "2024-02-13T12:49:54Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "yurai007",
                                            "createdAt":  "2024-02-15T09:22:16Z"
                                        }
                                    ],
                          "totalCount":  5
                      },
        "updatedAt":  "2024-08-09T09:08:28Z",
        "body":  "After https://github.com/dotnet/runtime/pull/95980 we get next output during build of CoreCLR\r\n```\r\n  Determining projects to restore...\r\n  Tool \u0027coverlet.console\u0027 (version \u00276.0.0\u0027) was restored. Available commands: coverlet\r\n  Tool \u0027dotnet-reportgenerator-globaltool\u0027 (version \u00275.0.2\u0027) was restored. Available commands: reportgenerator\r\n  Tool \u0027microsoft.dotnet.xharness.cli\u0027 (version \u00279.0.0-prerelease.24077.1\u0027) was restored. Available commands: xharness\r\n  Tool \u0027microsoft.visualstudio.slngen.tool\u0027 (version \u002711.1.0\u0027) was restored. Available commands: slngen\r\n  \r\n  Restore was successful.\r\n  All projects are up-to-date for restore.\r\n  Determining projects to restore...\r\n/home/runtime/.dotnet/sdk/9.0.100-alpha.1.23615.4/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(157,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier \u0027linux-riscv64\u0027. [/home/runtime/Build.proj]\r\n/home/runtime/.dotnet/sdk/9.0.100-alpha.1.23615.4/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(157,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier \u0027linux-riscv64\u0027. [/home/runtime/Build.proj]\r\n/home/runtime/.dotnet/sdk/9.0.100-alpha.1.23615.4/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(157,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier \u0027linux-riscv64\u0027. [/home/runtime/Build.proj]\r\n/home/runtime/.dotnet/sdk/9.0.100-alpha.1.23615.4/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(157,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier \u0027linux-riscv64\u0027. [/home/runtime/Build.proj]\r\n  Nothing to do. None of the projects specified contain packages to restore.\r\n\r\nBuild FAILED.\r\n```\r\nBuild commands:\r\n```\r\nROOTFS_DIR=/home/runtime/.tools/rootfs/riscv64 ./build.sh --cross --clang --arch riscv64 --runtimeConfiguration Release --librariesConfiguration Release --hostConfiguration Release --subset host.native+clr.native+clr.corelib+clr.tools+clr.nativecorelib+clr.packages+clr.nativeaotlibs+clr.crossarchtools+libs.native+libs.sfx+libs.oob /p:EnableSourceLink=false\r\n```\r\nAfter the first command the build completes successfully.\r\nThe error occurs in the following command:\r\n```\r\nROOTFS_DIR=/home/runtime/.tools/rootfs/riscv64 ./build.sh --cross --clang --arch riscv64 --runtimeConfiguration Release --librariesConfiguration Release --hostConfiguration Release --subset libs.pretest+libs.tests --testscope all /p:EnableSourceLink=false /p:UseLocalAppHostPack=true\r\n```\r\nPlease help to fix it.\r\n\r\ncc @gbalykov ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOh7_yOw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5ycZXf",
                                           "createdAt":  "2024-01-31T21:59:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\nAfter https://github.com/dotnet/runtime/pull/95980 we get next output during build of CoreCLR\r\n```\r\n  Determining projects to restore...\r\n  Tool \u0027coverlet.console\u0027 (version \u00276.0.0\u0027) was restored. Available commands: coverlet\r\n  Tool \u0027dotnet-reportgenerator-globaltool\u0027 (version \u00275.0.2\u0027) was restored. Available commands: reportgenerator\r\n  Tool \u0027microsoft.dotnet.xharness.cli\u0027 (version \u00279.0.0-prerelease.24077.1\u0027) was restored. Available commands: xharness\r\n  Tool \u0027microsoft.visualstudio.slngen.tool\u0027 (version \u002711.1.0\u0027) was restored. Available commands: slngen\r\n  \r\n  Restore was successful.\r\n  All projects are up-to-date for restore.\r\n  Determining projects to restore...\r\n/home/runtime/.dotnet/sdk/9.0.100-alpha.1.23615.4/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(157,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier \u0027linux-riscv64\u0027. [/home/runtime/Build.proj]\r\n/home/runtime/.dotnet/sdk/9.0.100-alpha.1.23615.4/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(157,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier \u0027linux-riscv64\u0027. [/home/runtime/Build.proj]\r\n/home/runtime/.dotnet/sdk/9.0.100-alpha.1.23615.4/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(157,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier \u0027linux-riscv64\u0027. [/home/runtime/Build.proj]\r\n/home/runtime/.dotnet/sdk/9.0.100-alpha.1.23615.4/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(157,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier \u0027linux-riscv64\u0027. [/home/runtime/Build.proj]\r\n  Nothing to do. None of the projects specified contain packages to restore.\r\n\r\nBuild FAILED.\r\n```\r\nBuild commands:\r\n```\r\nROOTFS_DIR=/home/runtime/.tools/rootfs/riscv64 ./build.sh --cross --clang --arch riscv64 --runtimeConfiguration Release --librariesConfiguration Release --hostConfiguration Release --subset host.native+clr.native+clr.corelib+clr.tools+clr.nativecorelib+clr.packages+clr.nativeaotlibs+clr.crossarchtools+libs.native+libs.sfx+libs.oob /p:EnableSourceLink=false\r\n```\r\nAfter the first command the build completes successfully.\r\nThe error occurs in the following command:\r\n```\r\nROOTFS_DIR=/home/runtime/.tools/rootfs/riscv64 ./build.sh --cross --clang --arch riscv64 --runtimeConfiguration Release --librariesConfiguration Release --hostConfiguration Release --subset libs.pretest+libs.tests --testscope all /p:EnableSourceLink=false /p:UseLocalAppHostPack=true\r\n```\r\nPlease help to fix it.\r\n\r\ncc @gbalykov \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eashaurtaev\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Infrastructure`, `untriaged`, `arch-riscv`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2024-01-31T21:59:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5yrND3",
                                           "createdAt":  "2024-02-02T14:07:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ashaurtaev",
                                           "body":  "@ViktorHofer please help, what should I do?",
                                           "updatedAt":  "2024-02-02T14:07:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5yrrzR",
                                           "createdAt":  "2024-02-02T15:00:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODYvd-g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "yurai007",
                                                                               "createdAt":  "2024-02-29T09:40:12Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "@dotnet/runtime-infrastructure can you please help? Seems to be host and prebuilt related. Possibly a component that tries to use a live built host?",
                                           "updatedAt":  "2024-02-02T15:00:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5y2mpb",
                                           "createdAt":  "2024-02-05T12:43:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tomeksowi",
                                           "body":  "\u003e Possibly a component that tries to use a live built host?\r\n\r\nThe one that I know of is src/libraries/System.Runtime.InteropServices/tests/TestAssets/NativeExports/NativeExports.csproj, at least that\u0027s what the /p:UseLocalAppHostPack=true was meant to override; not doing so resulted in ComInterfaceGenerator.Tests and LibraryImportGenerator.Tests try to use .so\u0027s for x64.\r\n\r\nBut I don\u0027t see it anywhere in [build log with --verbosity diag](https://github.com/dotnet/runtime/files/14165800/no-application-host-riscv64.log) and it also fails without /p:UseLocalAppHostPack=true, so not sure if it\u0027s related to this failure.\r\n\r\n",
                                           "updatedAt":  "2024-02-05T14:09:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5zAVDE",
                                           "createdAt":  "2024-02-06T12:53:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ashaurtaev",
                                           "body":  "If option `/p:UseLocalAppHostPack=true`  is not added, then the error still occurs\r\n\r\n`ROOTFS_DIR=/home/runtime/.tools/rootfs/riscv64 ./build.sh --cross --clang --arch riscv64 --runtimeConfiguration Release --librariesConfiguration Release --hostConfiguration Release --subset libs.pretest+libs.tests --testscope all /p:EnableSourceLink=false`\r\n```\r\n  Determining projects to restore...\r\n  Tool \u0027coverlet.console\u0027 (version \u00276.0.0\u0027) was restored. Available commands: coverlet\r\n  Tool \u0027dotnet-reportgenerator-globaltool\u0027 (version \u00275.0.2\u0027) was restored. Available commands: reportgenerator\r\n  Tool \u0027microsoft.dotnet.xharness.cli\u0027 (version \u00279.0.0-prerelease.24077.1\u0027) was restored. Available commands: xharness\r\n  Tool \u0027microsoft.visualstudio.slngen.tool\u0027 (version \u002711.1.0\u0027) was restored. Available commands: slngen\r\n  \r\n  Restore was successful.\r\n  All projects are up-to-date for restore.\r\n  Determining projects to restore...\r\n/home/runtime/.dotnet/sdk/9.0.100-alpha.1.23615.4/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(157,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier \u0027linux-riscv64\u0027. [/home/runtime/Build.proj]\r\n/home/runtime/.dotnet/sdk/9.0.100-alpha.1.23615.4/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(157,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier \u0027linux-riscv64\u0027. [/home/runtime/Build.proj]\r\n/home/runtime/.dotnet/sdk/9.0.100-alpha.1.23615.4/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(157,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier \u0027linux-riscv64\u0027. [/home/runtime/Build.proj]\r\n/home/runtime/.dotnet/sdk/9.0.100-alpha.1.23615.4/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(157,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier \u0027linux-riscv64\u0027. [/home/runtime/Build.proj]\r\n  Nothing to do. None of the projects specified contain packages to restore.\r\n\r\nBuild FAILED.\r\n```",
                                           "updatedAt":  "2024-02-06T12:53:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5zYvWK",
                                           "createdAt":  "2024-02-09T12:43:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODW2gRA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "yurai007",
                                                                               "createdAt":  "2024-02-15T09:21:50Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ashaurtaev",
                                           "body":  "@dotnet/area-infrastructure-libraries Could you take a look, please?",
                                           "updatedAt":  "2024-02-09T12:43:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc512bkB",
                                           "createdAt":  "2024-03-04T18:27:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "@ViktorHofer, this is an variant of https://github.com/dotnet/runtime/issues/58109. The build flow is twisted, and we need to build it like this:\r\n\r\n```sh\r\n# using mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-22.04-cross-riscv64\r\n\r\n$ export ROOTFS_DIR=/crossrootfs/riscv64\r\n\r\n# clr cross tools depend on live apphsot and host managed depends on something from sfxproj..\r\n# so we build host.native first\r\n$ ./build.sh host.native --cross --arch riscv64 -c Release\r\n\r\n# now build clr+libs+tests\r\n$ ./build.sh clr+libs --cross --arch riscv64 --runtimeConfiguration Release \\\r\n    --librariesConfiguration Release --hostConfiguration Release \\\r\n    --subset libs.pretest+libs.tests --testscope all -p:UseLocalAppHostPack=true\r\n\r\n# now build packs \r\n$ ./build.sh packs --cross --arch riscv64 -c Release\r\n\r\n# finally the host\r\n$ ./build.sh host --cross --arch riscv64 -c Release\r\n```\r\n\r\nI think linux-riscv64 at this point (while it\u0027s still a community-supported platform) provides a good opportunity to streamline the subset dependencies, because on other archs apphost gets pulled from SDK (accidentally?) in places where we don\u0027t expect.",
                                           "updatedAt":  "2024-03-04T18:27:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc516sHS",
                                           "createdAt":  "2024-03-05T09:31:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "clamp03",
                                           "body":  "cc @dotnet/samsung ",
                                           "updatedAt":  "2024-03-05T09:31:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc517Z1_",
                                           "createdAt":  "2024-03-05T11:05:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODZXY3Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "clamp03",
                                                                               "createdAt":  "2024-03-05T11:11:24Z"
                                                                           },
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "yurai007",
                                                                               "createdAt":  "2024-03-05T11:42:26Z"
                                                                           },
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "sirntar",
                                                                               "createdAt":  "2024-03-05T11:42:30Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "gbalykov",
                                           "body":  "Original issue with libs tests build was fixed at some point (not sure about exact commit), but before that similar problem with coreclr tests started to happen as I mentioned in https://github.com/dotnet/runtime/pull/96941#discussion_r1507143464.\r\n\r\nNow clr, libs and libs tests build works with next commands without any issues:\r\n```sh\r\nROOTFS_DIR=`pwd`/.tools/rootfs/riscv64 ./build.sh --cross --clang --arch riscv64 --runtimeConfiguration Release --librariesConfiguration Release --hostConfiguration Release --subset host.native+clr.native+clr.corelib+clr.tools+clr.nativecorelib+clr.packages+clr.nativeaotlibs+clr.crossarchtools+libs.native+libs.sfx+libs.oob /p:EnableSourceLink=false\r\n\r\nROOTFS_DIR=`pwd`/.tools/rootfs/riscv64 ./build.sh --cross --clang --arch riscv64 --runtimeConfiguration Release --librariesConfiguration Release --hostConfiguration Release --subset libs.pretest+libs.tests --testscope all /p:EnableSourceLink=false /p:UseLocalAppHostPack=true\r\n```\r\n\r\nHowever, trying to build clr tests with next command fails:\r\n```sh\r\nROOTFS_DIR=`pwd`/.tools/rootfs/riscv64 BuildAsStandalone=true ./src/tests/build.sh -Release -cross -riscv64 -clang -priority1\r\n```\r\n\r\nerror (same as @clamp03 mentioned in https://github.com/dotnet/runtime/pull/98476#issuecomment-1978047139):\r\n```\r\n    Determining projects to restore...\r\n/home/runtime/src/tests/Common/test_dependencies_fs/test_dependencies.fsproj : error NU1101: Unable to find package Microsoft.NETCore.App.Runtime.linux-riscv64. No packages exist with this id in source(s): /home/runtime/.dotnet/sdk/9.0.100-preview.1.24101.2/FSharp/library-packs, dotnet-eng, dotnet-libraries, dotnet-libraries-transport, dotnet-public, dotnet-tools, dotnet9, dotnet9-transport [/home/runtime/src/tests/build.proj]\r\n/home/runtime/src/tests/Common/test_dependencies_fs/test_dependencies.fsproj : error NU1101: Unable to find package Microsoft.NETCore.App.Host.linux-riscv64. No packages exist with this id in source(s): /home/runtime/.dotnet/sdk/9.0.100-preview.1.24101.2/FSharp/library-packs, dotnet-eng, dotnet-libraries, dotnet-libraries-transport, dotnet-public, dotnet-tools, dotnet9, dotnet9-transport [/home/runtime/src/tests/build.proj]\r\n    Failed to restore /home/runtime/src/tests/Common/test_dependencies_fs/test_dependencies.fsproj (in 19.4 sec).\r\n/home/runtime/src/tests/build.proj(548,5): error MSB3073: The command \"\"/home/runtime/.dotnet/dotnet\" restore Common/test_dependencies_fs/test_dependencies.fsproj  /p:SetTFMForRestore=true /p:TargetOS=linux /p:TargetArchitecture=riscv64 /p:Configuration=Release /p:CrossBuild=true\" exited with code 1.\r\n```\r\n\r\n@am11 do you know what can help with this one?",
                                           "updatedAt":  "2024-03-05T11:05:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc517qnO",
                                           "createdAt":  "2024-03-05T11:45:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "\u003e @am11 do you know what can help with this one?\r\n\r\n@jkoritzinsky @hoyosjs @trylek might be able to help",
                                           "updatedAt":  "2024-03-05T11:45:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc51_oVd",
                                           "createdAt":  "2024-03-05T20:50:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODZjKZQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "gbalykov",
                                                                               "createdAt":  "2024-03-06T10:35:17Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "tomeksowi",
                                                                               "createdAt":  "2024-03-06T10:41:50Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "yurai007",
                                                                               "createdAt":  "2024-03-06T11:07:38Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Bajtazar",
                                                                               "createdAt":  "2024-03-06T11:24:40Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "clamp03",
                                                                               "createdAt":  "2024-03-06T12:55:34Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "am11",
                                           "body":  "@gbalykov, please try applying:\r\n\r\n```diff\r\n--- a/src/tests/build.proj\r\n+++ b/src/tests/build.proj\r\n@@ -543,6 +543,7 @@\r\n   \u003cTarget Name=\"RestorePackage\"\u003e\r\n     \u003cPropertyGroup\u003e\r\n       \u003c_ConfigurationProperties\u003e/p:TargetOS=$(TargetOS) /p:TargetArchitecture=$(TargetArchitecture) /p:Configuration=$(Configuration) /p:CrossBuild=$(CrossBuild)\u003c/_ConfigurationProperties\u003e\r\n+      \u003c_ConfigurationProperties Condition=\"\u0027$(UseLocalAppHostPack)\u0027 == \u0027true\u0027\"\u003e$(_ConfigurationProperties) -p:EnableAppHostPackDownload=false -p:EnableTargetingPackDownload=false -p:EnableRuntimePackDownload=false\u003c/_ConfigurationProperties\u003e\r\n       \u003cDotnetRestoreCommand\u003e\"$(DotNetTool)\" restore $(RestoreProj) $(PackageVersionArg) /p:SetTFMForRestore=true $(_ConfigurationProperties)\u003c/DotnetRestoreCommand\u003e\r\n     \u003c/PropertyGroup\u003e\r\n     \u003cExec Command=\"$(DotnetRestoreCommand)\"/\u003e\r\n```\r\n\r\nand add `-p:UseLocalAppHostPack=true` at the end of your call:\r\n\r\n\u003e ROOTFS_DIR=`pwd`/.tools/rootfs/riscv64 BuildAsStandalone=true ./src/tests/build.sh -Release -cross -riscv64 -clang -priority1\r\n\r\n",
                                           "updatedAt":  "2024-03-05T20:50:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc52DTG4",
                                           "createdAt":  "2024-03-06T10:41:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODZtJmw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "tomeksowi",
                                                                               "createdAt":  "2024-03-06T10:42:01Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "yurai007",
                                                                               "createdAt":  "2024-03-06T11:07:56Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2024-03-06T12:17:46Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "clamp03",
                                                                               "createdAt":  "2024-03-06T12:55:27Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "sirntar",
                                                                               "createdAt":  "2024-03-07T10:39:12Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "gbalykov",
                                           "body":  "@am11 Thanks for quick response, your fix did the trick! Now clr and libs tests can be built for riscv64 without any issues (I checked on f84d33c7b8313d36f31f686920c7e5e9f038b60e). Will you open PR for your patch?\r\n\r\nFor reference, he\u0027s a set of commands to build coreclr, libs, coreclr tests and libs tests for riscv64:\r\n```sh\r\n# Build coreclr + libs\r\nROOTFS_DIR=`pwd`/.tools/rootfs/riscv64 ./build.sh --cross --clang --arch riscv64 --runtimeConfiguration Release --librariesConfiguration Release --hostConfiguration Release --subset host.native+clr.native+clr.corelib+clr.tools+clr.nativecorelib+clr.packages+clr.nativeaotlibs+clr.crossarchtools+libs.native+libs.sfx+libs.oob /p:EnableSourceLink=false\r\n\r\n# Build libs tests\r\nROOTFS_DIR=`pwd`/.tools/rootfs/riscv64 ./build.sh --cross --clang --arch riscv64 --runtimeConfiguration Release --librariesConfiguration Release --hostConfiguration Release --subset libs.pretest+libs.tests --testscope all /p:EnableSourceLink=false /p:UseLocalAppHostPack=true\r\n\r\n# Build coreclr tests\r\nROOTFS_DIR=`pwd`/.tools/rootfs/riscv64 BuildAsStandalone=true ./src/tests/build.sh -Release -cross -riscv64 -clang -priority1 -p:UseLocalAppHostPack=true\r\n``` ",
                                           "updatedAt":  "2024-03-06T10:41:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc52DrvV",
                                           "createdAt":  "2024-03-06T11:36:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODZi2Pg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2024-03-06T12:18:02Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "I wonder if this simpler command also works. Would you mind trying?\r\n\r\n```\r\n# Build coreclr + libs\r\nROOTFS_DIR=`pwd`/.tools/rootfs/riscv64 ./build.sh --cross --clang --arch riscv64 --configuration Release --subset host.native+clr.native+clr.corelib+clr.tools+clr.nativecorelib+clr.packages+clr.nativeaotlibs+clr.crossarchtools+libs /p:EnableSourceLink=false\r\n\r\n# Build libs tests\r\nROOTFS_DIR=`pwd`/.tools/rootfs/riscv64 ./build.sh --cross --clang --arch riscv64 --configuration Release --subset libs.tests --testscope all /p:EnableSourceLink=false /p:UseLocalAppHostPack=true\r\n\r\n# Build coreclr tests\r\nROOTFS_DIR=`pwd`/.tools/rootfs/riscv64 BuildAsStandalone=true ./src/tests/build.sh -Release -cross -riscv64 -clang -priority1 -p:UseLocalAppHostPack=true\r\n```",
                                           "updatedAt":  "2024-03-06T11:36:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc52D8Qh",
                                           "createdAt":  "2024-03-06T12:17:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODZjKLg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "clamp03",
                                                                               "createdAt":  "2024-03-06T12:55:19Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "am11",
                                           "body":  "Great! Yes, I will send a PR shortly. This seems like a stopgap solution.\r\nI think the proper solution would be to integrate `eng/targetingpacks.targets` in src/tests and adjust the subset dependencies, so we can utilize apphost live built in various subsets without going through the sdk overhead. Also that `\"$(DotNetTool)\" restore` part can probably be replaced by `\u003cMSBuild Targets=\"Restore\"` to avoid shelling out the restore task.",
                                           "updatedAt":  "2024-03-06T12:17:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc52EEpp",
                                           "createdAt":  "2024-03-06T12:37:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODZjC3Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2024-03-06T12:43:00Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "gbalykov",
                                           "body":  "\u003e I wonder if this simpler command also works. Would you mind trying?\r\n\r\nThis also works",
                                           "updatedAt":  "2024-03-06T12:37:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Hsg8d",
                                           "createdAt":  "2024-08-08T20:24:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "@gbalykov side question, on riscv64 machine, looks like we need the SDK to execute tests using `src/tests/run.sh` script. Is there any way to skip SDK requirement to run all tests? I can individually run e.g. MathRoundDouble_ro.sh described here https://github.com/dotnet/runtime/blob/c723f067fddf39528384d65cd79e8a86197555e2/docs/workflow/testing/coreclr/testing.md#running-individual-tests.\r\n\r\nI downloaded the three artifacts_part.. files from today\u0027s build: https://github.com/am11/CrossRepoCITesting/releases/tag/linux-riscv64_10307028129, joined them `cat ~/Downloads/artifacts_part* \u003e artifacts.tar.gz`, extracted it in runtime git repo directory.",
                                           "updatedAt":  "2024-08-08T20:24:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6HspmP",
                                           "createdAt":  "2024-08-08T20:49:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODtU9bw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2024-08-08T21:10:33Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "tomeksowi",
                                           "body":  "\u003e on riscv64 machine, looks like we need the SDK to execute tests using `src/tests/run.sh` script.\r\n\r\nYes. However, @SzpejnaDawid recently made some progress with RISC-V SDK (and even a successful build).\r\n\r\n\u003e Is there any way to skip SDK requirement to run all tests? \r\n\r\nWe used src/tests/Common/scripts/bringup_runtest.sh during early development, it\u0027s pure bash, no SDK necessary. However, it doesn\u0027t respect exclusions in src/tests/issues.targets so the runs have false positives. For CI we rolled out our own runner scripts at least until RISC-V SDK is in good enough shape to use src/tests/run.sh.",
                                           "updatedAt":  "2024-08-08T20:49:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6HsxHp",
                                           "createdAt":  "2024-08-08T21:12:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "Thanks! I was thinking about doing a full source build (dotnet/dotnet) but wanted to get early results on the device with runtime build only. Running it with find -exec command atm, will grep the stats and share the logs once it’s done.",
                                           "updatedAt":  "2024-08-08T21:12:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6HvqeN",
                                           "createdAt":  "2024-08-09T08:20:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gbalykov",
                                           "body":  "@am11 as @tomeksowi mentioned you can use `corerun` host to run clr tests using src/tests/Common/scripts/bringup_runtest.sh. We also use custom version of this script for coreclr testing, but approach is same using `.sh` files for each test. Same for libraries tests, we use custom version of testing script, but on lower level it either uses `corerun` or `dotnet` host (you can manually pack artifacts of `host.native`, `clr` and `libs`) with xunit.\r\n\r\nBy the way, this issue is resolved, I think it can be closed.",
                                           "updatedAt":  "2024-08-09T08:20:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Hv_I7",
                                           "createdAt":  "2024-08-09T09:08:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "Yup, I added https://github.com/am11/CrossRepoCITesting/blob/2d01552673ca8f3f2fe8699076e85d441fb8c437/.github/workflows/linux-riscv64-runtime-build.yml#L31, lets see if that satisfies all the requirements for bringup script. GHA has size cap, so it requires us to be a bit mindful to not let obj dir grow too large.\r\n\r\nI used a rudimentary `find artifacts/tests -name \u0027*.sh\u0027 -exec bash -c \u0027pushd $(dirname {}); ./$(basename {}) -coreroot=$HOME/projects/runtime/artifacts/tests/coreclr/linux.riscv64.Release/Tests/Core_Root; popd\u0027 \\; | tee results.txt` but it got stuck when running a large array test (which is excluded in issues.targets). I\u0027ll try to run with bringup script and see if I can figure out a way to ignore tests for this scenario. Maybe the issues.targets can create a pre-rendered issues.txt flat list in `artifacts/tests` on build, which this .sh could parse? I will see if I can figure out something to help other community platforms.\r\n\r\n\u003e By the way, this issue is resolved, I think it can be closed.\r\n\r\nI was actually investigating the TODO: integrate eng/targetingpacks.targets in src/tests/build.proj, but it\u0027s more involved than I thought. That TODO is related to this issue. I will get back to it once I get some things off my table. Meanwhile if someone else want to give it a go, here is the wip branch: https://github.com/dotnet/runtime/compare/main...am11:runtime:feature/cleanups/targetingpacks (will update tonight when I am on my computer; alpine build fixes were merged upstream).",
                                           "updatedAt":  "2024-08-09T09:08:20Z"
                                       }
                                   ],
                         "totalCount":  20
                     },
        "title":  "Failed to build tests for libs on Riscv64",
        "labels":  [
                       "area-Infrastructure",
                       "arch-riscv"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/99937",
        "createdAt":  "2024-03-18T23:01:10Z",
        "number":  99937,
        "author":  "BruceForstall",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-02T12:00:54Z",
        "body":  "It appears that `build.sh` when passed a `-test:`, `-dir:`, or `-tree:` argument, will not build tests that are Pri-1 unless `priority` is also passed. This is counter-intuitive: if I specifically ask for a test or set of tests to be built (especially using `-test:`), I expect it to be built, regardless of the priority in its project file.\r\n\r\nIf we for some reason choose to keep the current behavior, it would be valuable for the build system to tell you that no tests are going to be built.\r\n\r\nActually, with any of these arguments, it would be useful for the build system to tell you which tests will be built (and, if any are filtered out, such as due to Pri-1, then print that list as well).\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOd4VVjQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc53hVWN",
                                           "createdAt":  "2024-03-18T23:01:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-03-18T23:01:33Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Individual test building usability",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/100611",
        "createdAt":  "2024-04-03T21:29:49Z",
        "number":  100611,
        "author":  "jkoritzinsky",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-08T17:05:26Z",
        "body":  "Ever since we moved crossgen2 to use a single-file-host or NativeAOT, we haven\u0027t been shipping the PDB files for the native assets, such as the various JIT builds and the `jitinterface` shim library.\r\n\r\nAdditionally, we haven\u0027t been packaging a PDB for the NativeAOT\u0027d library on platforms that support NativeAOT.\r\n\r\nThis is the case since .NET 7.0 (6.0 and earlier produced a self-contained crossgen2 using a significantly different infrastructure model).",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOeVU-jw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc55VT6P",
                                           "createdAt":  "2024-04-03T21:30:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-04-03T21:30:14Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "PDBs for Crossgen2 Native Assets missing in the symbol package",
        "labels":  [
                       "bug",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/101395",
        "createdAt":  "2024-04-22T18:57:46Z",
        "number":  101395,
        "author":  "NikolaMilosavljevic",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-08T17:05:27Z",
        "body":  "Related to: https://github.com/dotnet/source-build/issues/4344\r\n\r\nWith https://github.com/dotnet/runtime/pull/100595, source-build got broken in release/8.0.1xx, due to package downgrade issue. Source-build consumes MSBuild 17.8.5, while runtime is on 17.8.3. Source-build will update MSBuild package references to live ones (17.8.5), but two runtime projects had direct package references, on S.C.I and S.R.M which caused package downgrade warning (prompted to error in source-build).\r\n\r\nThe fix would be to remove these direct package references as they will be transitively resolved from MSBuild package reference. This will allow both source-build and repo build to get the correct sets of references.\r\n\r\nThe change was implemented in source-build as a patch, with https://github.com/dotnet/installer/pull/19554",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOe6zDSQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc57a8VX",
                                           "createdAt":  "2024-04-22T18:58:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-04-22T18:58:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc57fA1s",
                                           "createdAt":  "2024-04-23T08:31:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "cc @ericstj",
                                           "updatedAt":  "2024-04-23T08:31:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc57kqQX",
                                           "createdAt":  "2024-04-23T19:00:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-04-23T19:00:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc57kq_G",
                                           "createdAt":  "2024-04-23T19:02:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "Yes, I discussed this with @NikolaMilosavljevic and supported this change as the least breaking.  Probably someone should have a look at what dependencies build tools like `WasmAppBuilder` `Microsoft.NET.Sdk.WebAssembly.Pack.Tasks` and `MonoAOTCompiler` take and how those behave in both servicing and source build.  @lewing @agocke since these are things your team delivers can you help drive the *right* fix here?\r\n",
                                           "updatedAt":  "2024-04-23T19:02:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc57ksoB",
                                           "createdAt":  "2024-04-23T19:06:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "NikolaMilosavljevic",
                                           "body":  "I have a slightly better change in https://dev.azure.com/dnceng/internal/_git/dotnet-installer/pullrequest/39154. Two instances are resolved by removing direct package references. Third one is solved by adding missing MSBuild dependencies.\r\n\r\nThat PR has the following two instances resolved by removing package references:\r\n```\r\n2024-04-20T01:46:27.0232624Z     /vmr/src/runtime/artifacts/source-build/self/src/src/tasks/WasmAppBuilder/WasmAppBuilder.csproj : error NU1605: Warning As Error: Detected package downgrade: System.Collections.Immutable from 8.0.0 to 7.0.0. Reference the package directly from the project to select a different version.  [/vmr/src/runtime/artifacts/source-build/self/src/Build.proj]\r\n2024-04-20T01:46:27.0233175Z     /vmr/src/runtime/artifacts/source-build/self/src/src/tasks/WasmAppBuilder/WasmAppBuilder.csproj : error NU1605:  WasmAppBuilder -\u003e Microsoft.Build 17.8.5 -\u003e System.Collections.Immutable (\u003e= 8.0.0)  [/vmr/src/runtime/artifacts/source-build/self/src/Build.proj]\r\n2024-04-20T01:46:27.0233652Z     /vmr/src/runtime/artifacts/source-build/self/src/src/tasks/WasmAppBuilder/WasmAppBuilder.csproj : error NU1605:  WasmAppBuilder -\u003e System.Collections.Immutable (\u003e= 7.0.0) [/vmr/src/runtime/artifacts/source-build/self/src/Build.proj]\r\n2024-04-20T01:46:27.0234237Z     /vmr/src/runtime/artifacts/source-build/self/src/src/tasks/WasmAppBuilder/WasmAppBuilder.csproj : error NU1605: Warning As Error: Detected package downgrade: System.Reflection.Metadata from 8.0.0 to 7.0.0. Reference the package directly from the project to select a different version.  [/vmr/src/runtime/artifacts/source-build/self/src/Build.proj]\r\n2024-04-20T01:46:27.0234771Z     /vmr/src/runtime/artifacts/source-build/self/src/src/tasks/WasmAppBuilder/WasmAppBuilder.csproj : error NU1605:  WasmAppBuilder -\u003e Microsoft.Build 17.8.5 -\u003e System.Reflection.Metadata (\u003e= 8.0.0)  [/vmr/src/runtime/artifacts/source-build/self/src/Build.proj]\r\n2024-04-20T01:46:27.0235232Z     /vmr/src/runtime/artifacts/source-build/self/src/src/tasks/WasmAppBuilder/WasmAppBuilder.csproj : error NU1605:  WasmAppBuilder -\u003e System.Reflection.Metadata (\u003e= 7.0.0) [/vmr/src/runtime/artifacts/source-build/self/src/Build.proj]\r\n2024-04-20T01:46:27.0237719Z     /vmr/src/runtime/artifacts/source-build/self/src/src/tasks/AotCompilerTask/MonoAOTCompiler.csproj : error NU1605: Warning As Error: Detected package downgrade: System.Reflection.Metadata from 8.0.0 to 7.0.0. Reference the package directly from the project to select a different version.  [/vmr/src/runtime/artifacts/source-build/self/src/Build.proj]\r\n2024-04-20T01:46:27.0238330Z     /vmr/src/runtime/artifacts/source-build/self/src/src/tasks/AotCompilerTask/MonoAOTCompiler.csproj : error NU1605:  MonoAOTCompiler -\u003e Microsoft.Build 17.8.5 -\u003e System.Reflection.Metadata (\u003e= 8.0.0)  [/vmr/src/runtime/artifacts/source-build/self/src/Build.proj]\r\n2024-04-20T01:46:27.0238868Z     /vmr/src/runtime/artifacts/source-build/self/src/src/tasks/AotCompilerTask/MonoAOTCompiler.csproj : error NU1605:  MonoAOTCompiler -\u003e System.Reflection.Metadata (\u003e= 7.0.0) [/vmr/src/runtime/artifacts/source-build/self/src/Build.proj]\r\n```\r\n\r\nThe following was solved by adding the missing 3 MSBuild package dependencies in `Version.Details.xml`, and corresponding change in `Versions.props`:\r\n```\r\n2024-04-20T01:46:27.0235861Z     /vmr/src/runtime/artifacts/source-build/self/src/src/tasks/Microsoft.NET.Sdk.WebAssembly.Pack.Tasks/Microsoft.NET.Sdk.WebAssembly.Pack.Tasks.csproj : error NU1605: Warning As Error: Detected package downgrade: Microsoft.Build.Framework from 17.8.5 to 17.8.3. Reference the package directly from the project to select a different version.  [/vmr/src/runtime/artifacts/source-build/self/src/Build.proj]\r\n2024-04-20T01:46:27.0236512Z     /vmr/src/runtime/artifacts/source-build/self/src/src/tasks/Microsoft.NET.Sdk.WebAssembly.Pack.Tasks/Microsoft.NET.Sdk.WebAssembly.Pack.Tasks.csproj : error NU1605:  Microsoft.NET.Sdk.WebAssembly.Pack.Tasks -\u003e Microsoft.Build 17.8.5 -\u003e Microsoft.Build.Framework (\u003e= 17.8.5)  [/vmr/src/runtime/artifacts/source-build/self/src/Build.proj]\r\n2024-04-20T01:46:27.0237107Z     /vmr/src/runtime/artifacts/source-build/self/src/src/tasks/Microsoft.NET.Sdk.WebAssembly.Pack.Tasks/Microsoft.NET.Sdk.WebAssembly.Pack.Tasks.csproj : error NU1605:  Microsoft.NET.Sdk.WebAssembly.Pack.Tasks -\u003e Microsoft.Build.Framework (\u003e= 17.8.3) [/vmr/src/runtime/artifacts/source-build/self/src/Build.proj]\r\n```\r\n",
                                           "updatedAt":  "2024-04-23T19:06:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc57mjS3",
                                           "createdAt":  "2024-04-24T00:25:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "@akoeplinger can you take a look",
                                           "updatedAt":  "2024-04-24T00:25:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc57rMNJ",
                                           "createdAt":  "2024-04-24T13:13:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "We did some improvements around these msbuild tasks in main with https://github.com/dotnet/runtime/commit/994e272cf12907dcc019063e13c36c681983e324 and https://github.com/dotnet/runtime/commit/4f099091aa1dbcc3db0043241f3a4e81ef5abfdd, but @ViktorHofer has a lot more context on these package version dependencies :)\r\n\r\nThe change from https://github.com/dotnet/runtime/issues/101395#issuecomment-2073217537 does make sense to me.",
                                           "updatedAt":  "2024-04-24T13:13:14Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "Direct package references on System.Collections.Immutable and System.Reflection.Metadata are causing build issues in source-build",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/102851",
        "createdAt":  "2024-05-29T22:55:29Z",
        "number":  102851,
        "author":  "jkoritzinsky",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-18T13:44:50Z",
        "body":  "We hack around issues trying to reference OpenSSL from our Linux-Bionic builds here:\r\n\r\nhttps://github.com/dotnet/runtime/blob/8669b7456e517c209c633355e6dd3b619ea2c987/src/native/libs/System.Security.Cryptography.Native/extra_libs.cmake#L10-L24\r\n\r\nThis hack works with OpenSSL 1.1 headers, but breaks with OpenSSL 3.x headers, which check the target architecture. This breaks for our linux-bionic builds, which try to build for architectures that the multilib-compatible headers aren\u0027t set up to support.\r\n\r\nThis is the cause of the break requiring https://github.com/dotnet/runtime/pull/102849 and makes our linux-bionic builds incompatible with Azure Linux 3.0.\r\n\r\ncc: @directhex @richlander @sbomer ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOmrzWpg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5_dSt3",
                                           "createdAt":  "2024-05-29T22:55:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-05-29T22:55:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6ati2S",
                                           "createdAt":  "2025-01-16T13:15:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "@jkoritzinsky was this fixed completely with https://github.com/dotnet/runtime/pull/102928 or do we still need to do something here?",
                                           "updatedAt":  "2025-01-16T13:15:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6avNam",
                                           "createdAt":  "2025-01-16T15:43:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "Our docker images are fixed enough to work, but we\u0027re still using a terrible hack here.",
                                           "updatedAt":  "2025-01-16T15:43:32Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Linux-Bionic OpenSSL headers hack incompatible with OpenSSL 3.x",
        "labels":  [
                       "os-android",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/103526",
        "createdAt":  "2024-06-15T19:13:41Z",
        "number":  103526,
        "author":  "jkotas",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T23:01:42Z",
        "body":  "Log https://dev.azure.com/dnceng-public/public/_build/results?buildId=709057\u0026view=logs\u0026j=bdec34cc-8c67-558e-657b-d36a4105119f\u0026t=a678ac1d-afa2-555a-c9f2-128b541774a9\u0026l=605:\r\n```\r\n...\r\nRestored D:\\a\\_work\\1\\s\\src\\libraries\\shims\\stubs\\System.IO.Packaging.csproj (in 0.8 ms).\r\nFailed to restore D:\\a\\_work\\1\\s\\src\\libraries\\System.Collections.Immutable\\ref\\System.Collections.Immutable.csproj (in 271 ms).\r\nRestored D:\\a\\_work\\1\\s\\src\\libraries\\shims\\stubs\\System.Diagnostics.PerformanceCounter.csproj (in 0.8 ms).\r\n...\r\nRestored D:\\a\\_work\\1\\s\\src\\libraries\\sfx-gen.proj (in 0.6 ms).\r\n2D:\\a\\_work\\1\\s\\.dotnet\\sdk\\9.0.100-preview.5.24307.3\\NuGet.RestoreEx.targets(19,5): error : Static graph-based restore failed with exit code \u00271\u0027 but did not log an error. Please file an issue at https://github.com/NuGet/Home. [D:\\a\\_work\\1\\s\\Build.proj]\r\n```\r\n\r\n## Build Information\r\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=709057\r\nBuild error leg or test failing: System.Numerics.Tensors.Tests.TensorSpanTests.TensorExtensionsSpanInSpanOut\u003cSingle\u003e\r\nPull request: https://github.com/dotnet/runtime/pull/103519\r\n\u003c!-- Error message template  --\u003e\r\n## Error Message\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssueJsonStepByStep.md).\r\n\r\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": \"\",\r\n  \"ErrorPattern\": \"Static graph-based restore failed with exit code .* but did not log an error.\",\r\n  \"BuildRetry\": false,\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\n\r\n\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=709057\r\n**Error message validated:** `[Static graph-based restore failed with exit code .* but did not log an error.`]\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 6/15/2024 7:13:58 PM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n|Build|Definition|Step Name|Console log|Pull Request|\r\n|---|---|---|---|---|\r\n|[1149953](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149953)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1149953/logs/234)|dotnet/runtime#119777|\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|1|1|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOxMJQog==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6BX9TY",
                                           "createdAt":  "2024-06-15T19:14:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-06-15T19:14:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6BX-Y0",
                                           "createdAt":  "2024-06-15T19:22:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "Also opened https://github.com/NuGet/Home/issues/13551 according to the error message.",
                                           "updatedAt":  "2024-06-15T19:22:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Bmz1R",
                                           "createdAt":  "2024-06-17T21:13:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "https://github.com/dotnet/dnceng/issues/3100 also appears related",
                                           "updatedAt":  "2024-06-17T21:13:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6BnjxD",
                                           "createdAt":  "2024-06-17T23:41:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-06-17T23:41:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6BnmyZ",
                                           "createdAt":  "2024-06-17T23:52:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "Also https://github.com/dotnet/runtime/issues/103114",
                                           "updatedAt":  "2024-06-17T23:52:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6CCsvb",
                                           "createdAt":  "2024-06-20T23:58:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "I opened https://github.com/dotnet/dnceng/issues/3139 to track this outside of runtime too",
                                           "updatedAt":  "2024-06-20T23:58:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7EwlCi",
                                           "createdAt":  "2025-09-17T03:02:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kg",
                                           "body":  "Note that this KBE is a little broader than it should be. In the past this was for an exit code \u00271\u0027, but today i saw \u0027138\u0027 which is apparently SIGBUS and could indicate a crash in the runtime, or incorrect use of unsafe code in nuget, or bad hardware.\n\nAnyone seeing this on their PRs with a 138 exit code, please update https://github.com/NuGet/Home/issues/14542 .",
                                           "updatedAt":  "2025-09-18T16:33:14Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "Build failure: Static graph-based restore failed with exit code .* but did not log an error.",
        "labels":  [
                       "tracking-external-issue",
                       "blocking-clean-ci",
                       "area-Infrastructure",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/103776",
        "createdAt":  "2024-06-20T18:20:21Z",
        "number":  103776,
        "author":  "SingleAccretion",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-08T17:04:44Z",
        "body":  "Here the download of a local SDK is skipped if the version specified in `global.json` already exists in the global installation:\r\n\r\nhttps://github.com/dotnet/runtime/blob/b0f3c193a995298ce8f23c0e18171c8bb75d6704/eng/common/tools.ps1#L185-L202\r\n\r\nHowever, this logic does not take into account the possibility that a user may have two preview SDKs installed at the same time, wherein the older one matches for this check, while the newer one is actually used for building, which can cause mysterious build breaks.\r\n\r\n@dicej ran into one of those. See this Discord discussion: https://discord.com/channels/143867839282020352/1141126727028985877/1253392081238626315.\r\n\r\nHe had both P3 from `global.json` and P4 installed on his machine, which skipped downloading the local SDK, but then actually using the P4 SDK didn\u0027t work.\r\n\r\nNow, runtime\u0027s `global.json` permits unrestricted roll-forward, so perhaps this is by design. But it definitely took us some time to get to the root cause of this. And it doesn\u0027t look intended that having an _older_ SDK installed makes the build use a _newer_ one.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOgjm7tg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6CA_Kg",
                                           "createdAt":  "2024-06-20T18:31:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-06-20T18:31:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6CObu2",
                                           "createdAt":  "2024-06-23T07:36:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "Usually we update the SDK version in global.json at the same time preview was publicly released, but if someone has daily build installed system-wide, or they are building older branch with newer preview installed on the system, rollforward can break things.\r\n\r\nBTW, for the manual installation, I personally install daily/preview builds at different location and create [version-suffixed alias](https://gist.github.com/am11/afc2787bdecb9592663f4eae405d9116) to dotnet binary, in order to avoid cluttering the system-wide installation until the GA release.",
                                           "updatedAt":  "2024-06-23T07:36:50Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "The logic for skipping the download of a local SDK (`/.dotnet`) can lead to build breaks",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/104333",
        "createdAt":  "2024-07-02T22:27:46Z",
        "number":  104333,
        "author":  "carlossanlop",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T23:01:51Z",
        "body":  "## Build Information\r\n\r\nBuild: https://dev.azure.com/dnceng-public/public/_build/results?buildId=728088\r\nBuild error leg or test failing: `runtime-community` - `linux-armv6 Release AllSubsets_Mono`\r\n\r\n## Error Message\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\" : [\r\n    \"overflow in expression; result is -2147483648 with type \u0027long\u0027 [-Werror,-Winteger-overflow]\",\r\n    \"time_t timeVal = (time_t)INT_MAX + 1\"\r\n  ],\r\n  \"BuildRetry\" : false,\r\n  \"ExcludeConsoleLog\" : false\r\n}\r\n```\r\n\r\n- PR: Official rolling build of runtime-community in `main`: https://dev.azure.com/dnceng-public/public/_build/results?buildId=728088\u0026view=results\r\n- Queue: `linux-armv6 Release AllSubsets_Mono`\r\n- Job result: https://dev.azure.com/dnceng-public/public/_build/results?buildId=728088\u0026view=logs\u0026j=db8e93a1-262e-5037-1aaf-a14621311ed2\u0026t=df0c0844-666d-543b-d576-d26fca1aab72\u0026l=3504\r\n- Output:\r\n```\r\n[ 88%] Building C object System.IO.Compression.Native/CMakeFiles/System.IO.Compression.Native.dir/__w/1/s/src/native/external/brotli/enc/bit_cost.c.o\r\n/__w/1/s/src/native/libs/System.Security.Cryptography.Native/opensslshim.c(238,38): error G7D1C1CEA: overflow in expression; result is -2147483648 with type \u0027long\u0027 [-Werror,-Winteger-overflow] [/__w/1/s/src/native/libs/build-native.proj]\r\n##[error]src/native/libs/System.Security.Cryptography.Native/opensslshim.c(238,38): error G7D1C1CEA: (NETCORE_ENGINEERING_TELEMETRY=Build) overflow in expression; result is -2147483648 with type \u0027long\u0027 [-Werror,-Winteger-overflow]\r\n      time_t timeVal = (time_t)INT_MAX + 1;\r\n                                       ^\r\n  1 error generated\r\n```\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=728088\r\n**Error message validated:** `[overflow in expression; result is -2147483648 with type \u0027long\u0027 [-Werror,-Winteger-overflow] time_t timeVal = (time_t)INT_MAX + 1`]\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 7/2/2024 10:30:44 PM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|0|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhOmUTA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6DZwS6",
                                           "createdAt":  "2024-07-02T22:28:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-07-02T22:28:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6DZxCI",
                                           "createdAt":  "2024-07-02T22:30:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-security, @bartonjs, @vcsjones\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-07-02T22:30:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6DaHxt",
                                           "createdAt":  "2024-07-02T23:19:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vcsjones",
                                           "body":  "cc @sbomer, looks related to the changes for ARM32 64-bit time_t support.",
                                           "updatedAt":  "2024-07-02T23:19:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Da0wa",
                                           "createdAt":  "2024-07-03T01:26:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "carlossanlop",
                                           "body":  "I found it in the official rolling build but I noticed it first in my PR where I was fixing a build failure in armv6: https://github.com/dotnet/runtime/pull/102403\r\n\r\nHere\u0027s the failing CI leg: https://dev.azure.com/dnceng-public/public/_build/results?buildId=728642\u0026view=logs\u0026j=db8e93a1-262e-5037-1aaf-a14621311ed2\u0026t=df0c0844-666d-543b-d576-d26fca1aab72\u0026l=3498\r\n\r\n",
                                           "updatedAt":  "2024-07-03T01:26:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6DheQ_",
                                           "createdAt":  "2024-07-03T15:36:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "buyaa-n",
                                           "body":  "Same failure in https://github.com/dotnet/runtime/pull/104332/checks?check_run_id=26975682345",
                                           "updatedAt":  "2024-07-03T15:36:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Dr4vM",
                                           "createdAt":  "2024-07-04T16:29:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vcsjones",
                                           "body":  "I think we should move this back to Infrastructure.\n\nBased on a conversation in #104368, the runtime now _requires_ systems that have a 64-bit `time_t`. This also aligns with the [Y2038 announcement](https://github.com/dotnet/core/discussions/9285). The armv6 community pipeline is using a 32-bit `time_t`, which is what should be fixed.",
                                           "updatedAt":  "2024-07-04T16:29:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Dr44a",
                                           "createdAt":  "2024-07-04T16:29:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-07-04T16:29:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6E6SyJ",
                                           "createdAt":  "2024-07-16T02:18:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "carlossanlop",
                                           "body":  "I\u0027m seeing the same failure but happening [in the `static_assert` check from two lines above](https://github.com/dotnet/runtime/blob/31733b9a35185785427bac69ef80a4eb56b727c2/src/native/libs/System.Security.Cryptography.Native/opensslshim.c#L236), so the error message is different:\r\n\r\n- PR: https://github.com/dotnet/runtime/pull/104904\r\n- Queue: `linux-armv6 Release AllSubsets_Mono`\r\n- Job: https://dev.azure.com/dnceng-public/public/_build/results?buildId=741967\u0026view=logs\u0026j=db8e93a1-262e-5037-1aaf-a14621311ed2\u0026t=df0c0844-666d-543b-d576-d26fca1aab72\r\n- Output:\r\n```\r\n/__w/1/s/src/native/libs/System.Security.Cryptography.Native/opensslshim.c(236,5): error G0D02855E: static_assert failed due to requirement \u0027sizeof(long) == 8\u0027 \"Build requires 64-bit time_t.\" [/__w/1/s/src/native/libs/build-native.proj]\r\n##[error]src/native/libs/System.Security.Cryptography.Native/opensslshim.c(236,5): error G0D02855E: (NETCORE_ENGINEERING_TELEMETRY=Build) static_assert failed due to requirement \u0027sizeof(long) == 8\u0027 \"Build requires 64-bit time_t.\"\r\n      c_static_assert_msg(sizeof(time_t) == 8, \"Build requires 64-bit time_t.\");\r\n      ^                   ~~~~~~~~~~~~~~~~~~~\r\n  /__w/1/s/src/native/libs/Common/pal_compiler.h:20:37: note: expanded from macro \u0027c_static_assert_msg\u0027\r\n  #define c_static_assert_msg(e, msg) static_assert((e), msg)\r\n                                      ^              ~\r\n  /crossrootfs/armv6/usr/include/assert.h:143:24: note: expanded from macro \u0027static_assert\u0027\r\n  # define static_assert _Static_assert\r\n                         ^\r\n  1 error generated.\r\n```",
                                           "updatedAt":  "2024-07-16T02:18:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6E6ZRM",
                                           "createdAt":  "2024-07-16T02:51:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vcsjones",
                                           "body":  "@carlossanlop I think you can change the `ErrorMessage` for the know build error to `Build requires 64-bit time_t`.\n\nThe best I could do is improve the error message, but the issue remains that the image used in CI is not a supported configuration anymore.",
                                           "updatedAt":  "2024-07-16T02:51:57Z"
                                       }
                                   ],
                         "totalCount":  9
                     },
        "title":  "runtime-community: Failure to build System.Security.Cryptography.Native/opensslshim.c due to overflow in expression with type long",
        "labels":  [
                       "os-linux",
                       "area-Infrastructure",
                       "runtime-mono",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/105146",
        "createdAt":  "2024-07-19T13:56:57Z",
        "number":  105146,
        "author":  "richlander",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-15T13:41:31Z",
        "body":  "I am seeing this. Either our tests are doing something wrong, our infra isn\u0027t cleaning things up, or someone downloaded too many shows.\r\n\r\nLeg: Build tvOSSimulator x64 Release AllSubsets_Mono\r\n\r\n```bash\r\n\r\n   at Microsoft.VisualStudio.Services.Agent.Worker.Program.MainAsync(IHostContext context, String[] args) in /Users/runner/work/1/s/src/Agent.Worker/Program.cs:line 52\r\nSystem.IO.IOException: No space left on device : \u0027/Users/runner/runners/3.241.0/_diag/Worker_20240718-051117-utc.log\u0027\r\n   at System.IO.RandomAccess.WriteAtOffset(SafeFileHandle handle, ReadOnlySpan`1 buffer, Int64 fileOffset)\r\n   at System.IO.Strategies.BufferedFileStreamStrategy.FlushWrite()\r\n   at System.IO.StreamWriter.Flush(Boolean flushStream, Boolean flushEncoder)\r\n   at System.Diagnostics.TextWriterTraceListener.Flush()\r\n   at Microsoft.VisualStudio.Services.Agent.HostTraceListener.TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, String message) in /Users/runner/work/1/s/src/Microsoft.VisualStudio.Services.Agent/HostTraceListener.cs:line 81\r\n   at System.Diagnostics.TraceSource.TraceEvent(TraceEventType eventType, Int32 id, String message)\r\n   at Microsoft.VisualStudio.Services.Agent.Tracing.Error(Exception exception) in /Users/runner/work/1/s/src/Microsoft.VisualStudio.Services.Agent/Tracing.cs:line 56\r\n   at Microsoft.VisualStudio.Services.Agent.Worker.Program.MainAsync(IHostContext context, String[] args) in /Users/runner/work/1/s/src/Agent.Worker/Program.cs:line 66\r\nUnhandled exception. System.IO.IOException: No space left on device : \u0027/Users/runner/runners/3.241.0/_diag/Worker_20240718-051117-utc.log\u0027\r\n   at System.IO.RandomAccess.WriteAtOffset(SafeFileHandle handle, ReadOnlySpan`1 buffer, Int64 fileOffset)\r\n   at System.IO.Strategies.BufferedFileStreamStrategy.FlushWrite()\r\n   at System.IO.StreamWriter.Flush(Boolean flushStream, Boolean flushEncoder)\r\n   at System.Diagnostics.TextWriterTraceListener.Flush()\r\n   at System.Diagnostics.TraceSource.Flush()\r\n   at Microsoft.VisualStudio.Services.Agent.TraceManager.Dispose(Boolean disposing) in /Users/runner/work/1/s/src/Microsoft.VisualStudio.Services.Agent/TraceManager.cs:line 66\r\n   at Microsoft.VisualStudio.Services.Agent.TraceManager.Dispose() in /Users/runner/work/1/s/src/Microsoft.VisualStudio.Services.Agent/TraceManager.cs:line 58\r\n   at Microsoft.VisualStudio.Services.Agent.HostContext.Dispose(Boolean disposing) in /Users/runner/work/1/s/src/Microsoft.VisualStudio.Services.Agent/HostContext.cs:line 589\r\n   at Microsoft.VisualStudio.Services.Agent.HostContext.Dispose() in /Users/runner/work/1/s/src/Microsoft.VisualStudio.Services.Agent/HostContext.cs:line 531\r\n   at Microsoft.VisualStudio.Services.Agent.Worker.Program.Main(String[] args) in /Users/runner/work/1/s/src/Agent.Worker/Program.cs:line 24\r\n,##[error]We stopped hearing from agent Azure Pipelines 13. Verify the agent machine is running and has a healthy network connection. Anything that terminates an agent process, starves it for CPU, or blocks its network access can cause this error. For more information, see: https://go.microsoft.com/fwlink/?linkid=846610\r\nAgent: Azure Pipelines 13\r\nStarted: Wed at 10:11 PM\r\nDuration: 1h 54m 35s\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhbeOyg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6FluUx",
                                           "createdAt":  "2024-07-20T18:44:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-07-20T18:44:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6FpsSG",
                                           "createdAt":  "2024-07-22T07:42:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivanpovazan",
                                           "body":  "/cc: @matouskozak ",
                                           "updatedAt":  "2024-07-22T07:42:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6FqbOi",
                                           "createdAt":  "2024-07-22T09:22:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "matouskozak",
                                           "body":  "I took a look at the current state and I\u0027m not seeing this failure anywhere (last 3 rolling builds).\r\n\r\nI see a dip in executed tests between 18-19 of July which could be related to the Azure outage. @richlander do you happen to have a link to the build with this error so I can take a look what happened?",
                                           "updatedAt":  "2024-07-22T09:22:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6FslXZ",
                                           "createdAt":  "2024-07-22T14:07:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODrDkKQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "matouskozak",
                                                                               "createdAt":  "2024-07-22T14:50:18Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "richlander",
                                           "body":  "https://github.com/dotnet/runtime/pull/105063\r\n\r\nhttps://dev.azure.com/dnceng-public/public/_build/results?buildId=745877\u0026view=logs\u0026jobId=cd385208-11d3-5d70-fa38-1c21a65d17f1",
                                           "updatedAt":  "2024-07-22T14:08:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Ft32o",
                                           "createdAt":  "2024-07-22T16:47:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "matouskozak",
                                           "body":  "\u003e #105063\r\n\u003e \r\n\u003e https://dev.azure.com/dnceng-public/public/_build/results?buildId=745877\u0026view=logs\u0026jobId=cd385208-11d3-5d70-fa38-1c21a65d17f1\r\n\r\nAh, sorry. I was looking at `runtime` pipeline and not `runtime-staging`. Looks like this is a recurring issue on this pipeline. This is a range of commits when the failure started occurring https://github.com/dotnet/runtime/compare/fe40750d...4b5fdbce. I wonder if it could be related to the pipeline changes introduced in https://github.com/dotnet/runtime/commit/ac83237808c117098e5f79ad4ef36ea07fdbb42a.",
                                           "updatedAt":  "2024-07-22T16:47:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Ft47K",
                                           "createdAt":  "2024-07-22T16:50:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODrEmtQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "matouskozak",
                                                                               "createdAt":  "2024-07-22T16:53:43Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "richlander",
                                           "body":  "Sorry for not including the branch name in the title. Will definitely do that next time.",
                                           "updatedAt":  "2024-07-22T16:50:15Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "[Apple][TVOS][release/6.0-staging] Unhandled exception. System.IO.IOException: No space left on device",
        "labels":  [
                       "test-failure",
                       "area-Infrastructure",
                       "os-tvos"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/106331",
        "createdAt":  "2024-08-13T14:34:21Z",
        "number":  106331,
        "author":  "richlander",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-08-22T16:56:13Z",
        "body":  "We are missing Azure Linux in a few spots. This issue is intended to track that.\r\n\r\n- #106170\r\n- #106330 \r\n- Add helix test for 8.0 (after 9.0 PR merges)\r\n- Add helix test to dotnet/aspnetcore\r\n- https://github.com/dotnet/dotnet-buildtools-prereqs-docker/issues/1173\r\n- Create list of missing 9.0 helix images\r\n\r\n@sbomer ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOiHiiwA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6IZcTy",
                                           "createdAt":  "2024-08-14T10:14:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODuCvFg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "richlander",
                                                                               "createdAt":  "2024-08-14T13:43:56Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "am11",
                                           "body":  "For FreeBSD, I think we can drop 13 and switch pipeline to use 14; since it\u0027s only used for build validation and having one version should be enough for community-platform. 14 is the version dotnet package maintainers are using downstream. cc @Thefrank",
                                           "updatedAt":  "2024-08-14T10:14:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6IZcnO",
                                           "createdAt":  "2024-08-14T10:14:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-08-14T10:14:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6IeKLA",
                                           "createdAt":  "2024-08-14T18:56:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODuIS2g==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2024-08-14T19:52:11Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "Thefrank",
                                           "body":  "@am11 14.x should be fine. There was a patch submitted a few months ago to fix build errors on 14. Since then I have not encountered compile issues with dotNET and FreeBSD 14",
                                           "updatedAt":  "2024-08-14T18:56:59Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Tracking: Add Azure Linux for build and test",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/106883",
        "createdAt":  "2024-08-23T15:56:52Z",
        "number":  106883,
        "author":  "MichaelSimons",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-25T22:01:18Z",
        "body":  "Currently the runtime builds are producing CentOS Stream 8 artifacts e.g. [dotnet-runtime-deps-8.0.9-centos.8-x64.rpm](https://dev.azure.com/dnceng/_apis/resources/Containers/18581688/BlobArtifacts?itemPath=BlobArtifacts%2Fdotnet-runtime-deps-8.0.9-centos.8-x64.rpm) from this [build](https://dev.azure.com/dnceng/internal/_build/results?buildId=2516592\u0026view=artifacts\u0026pathAsName=false\u0026type=publishedArtifacts).  CentOS Stream 8 reached EOL 5/31/2024.  The CI should be upgraded to product CentOS Stream 9 artifacts.\r\n\r\nThis is blocking other dotnet repos from migrating off of CentOS Stream 8 - [example](https://github.com/dotnet/installer/pull/19999)\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOiYxN_Q==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6Jh9wv",
                                           "createdAt":  "2024-08-23T16:04:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-08-23T16:04:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6JiRNV",
                                           "createdAt":  "2024-08-23T16:53:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "@agocke @jkoritzinsky  is this as straight forward as updating https://github.com/search?q=repo%3Adotnet%2Fruntime+centos+path%3A*yml\u0026type=code\r\nOr do you typically need to make runtime or container changes too?",
                                           "updatedAt":  "2024-08-23T16:53:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Jir5B",
                                           "createdAt":  "2024-08-23T18:07:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "We basically need to backport this PR: https://github.com/dotnet/runtime/pull/103708\r\n\r\nWe need to decide what to do about the Centos Stream 8 assets though as this technically is a breaking change.",
                                           "updatedAt":  "2024-08-23T18:07:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Ji2P-",
                                           "createdAt":  "2024-08-23T18:37:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "Oh, I missed that this was an net8.0 specific issue.  Could we *add* Centos 9 in net8.0?  Would that unblock @MichaelSimons without breaking anything?",
                                           "updatedAt":  "2024-08-23T18:37:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Ji34t",
                                           "createdAt":  "2024-08-23T18:41:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "We can backport to add the new assets, but we\u0027d still be producing the Centos Stream 8 ones. @MichaelSimons is that okay or do we need to stop building the Centos Stream 8 assets as well.",
                                           "updatedAt":  "2024-08-23T18:41:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6JjEqV",
                                           "createdAt":  "2024-08-23T19:15:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "richlander",
                                           "body":  "Given that we are still in the first half of 8.0 lifetime, we really should try to trim assets that are not needed.",
                                           "updatedAt":  "2024-08-23T19:15:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6JjE39",
                                           "createdAt":  "2024-08-23T19:16:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODvhTaw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "richlander",
                                                                               "createdAt":  "2024-08-23T19:45:54Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "MichaelSimons",
                                           "body":  "\u003e @MichaelSimons is that okay or do we need to stop building the Centos Stream 8 assets as well.\r\n\r\nAdding Centos Stream 9 is all that is needed to unblock the SDK/installer testing.\r\n\r\nRegarding Centos Stream8 artifacts.  What is our policy around this?  If we don\u0027t have one, we should create one.  I can see producing them for a grace period but after that they should be dropped IMO.  We can\u0027t test them so it feels strange/wrong to continue to produce them for the lifetime of a .NET release.",
                                           "updatedAt":  "2024-08-23T19:16:36Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "[release/8.0] Upgrade CI from producing CentOS Stream 8 artifacts to CentOS Stream 9",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/107031",
        "createdAt":  "2024-08-27T13:23:25Z",
        "number":  107031,
        "author":  "omajid",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC907HQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "dkurt",
                                            "createdAt":  "2025-01-02T11:29:40Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-07-28T16:52:16Z",
        "body":  "The [build.sh](https://github.com/dotnet/dotnet/blob/927ad5b54ec13615dfcb1e30f76f6708b617387f/build.sh#L17C1-L17C139) from the VMR accepts this option:\r\n\r\n```\r\n  echo \"  --with-system-libs \u003clibs\u003e       Use system versions of these libraries. Combine with a plus. eg brotli+libunwind+rapidjson+zlib\"\r\n```\r\n\r\nWe can do the same thing with the runtime\u0027s build.sh using a very different syntax:\r\n\r\n```\r\n--cmakeargs -DCLR_CMAKE_USE_SYSTEM_BROTLI=true \r\n--cmakeargs -DCLR_CMAKE_USE_SYSTEM_LIBUNWIND=true\r\n--cmakeargs -DCLR_CMAKE_USE_SYSTEM_RAPIDJSON=true\r\n--cmakeargs -DCLR_CMAKE_USE_SYSTEM_ZLIB=true \r\n```\r\n\r\nIt would be great if runtime\u0027s build.sh could be consistent and accept the same syntax as the VMR build.sh.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOid1rxQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6J3WvF",
                                           "createdAt":  "2024-08-27T16:12:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-08-27T16:12:59Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "build.sh should support a --with-system-libs flag like the VMR",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/108821",
        "createdAt":  "2024-10-13T14:24:17Z",
        "number":  108821,
        "author":  "am11",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-25T22:02:59Z",
        "body":  "## Build Information\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=841122\nBuild error leg or test failing: Build / linux-x64 debug Libraries_AllConfigurations\nPull request: https://github.com/dotnet/runtime/pull/103375\n\u003c!-- Error message template  --\u003e\n## Error Message\n\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssueJsonStepByStep.md).\n\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\n\n```json\n{\n  \"ErrorMessage\": \"Verify the agent machine is running and has a healthy network connection.\",\n  \"BuildRetry\": false,\n  \"ExcludeConsoleLog\": false\n}\n```\n\n\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=841122\r\n**Error message validated:** `[Verify the agent machine is running and has a healthy network connection.`]\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 10/13/2024 2:24:36 PM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n|Build|Definition|Step Name|Console log|Pull Request|\r\n|---|---|---|---|---|\r\n|[841122](https://dev.azure.com/dnceng-public/public/_build/results?buildId=841122)|dotnet/runtime|linux-x64 debug Libraries_AllConfigurations ||dotnet/runtime#103375|\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|1|1|1|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOj716Pg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6Plmzv",
                                           "createdAt":  "2024-10-13T14:24:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-infrastructure-libraries\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-10-13T14:24:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6PlxaQ",
                                           "createdAt":  "2024-10-13T16:36:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "See discussion at https://github.com/dotnet/runtime/pull/108581#issuecomment-2405655853 for more context",
                                           "updatedAt":  "2024-10-13T16:36:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6Plxml",
                                           "createdAt":  "2024-10-13T16:39:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "The failing build leg disabled by #108581",
                                           "updatedAt":  "2024-10-13T16:39:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6PvXo-",
                                           "createdAt":  "2024-10-14T15:13:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-10-14T15:13:11Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "linux-x64 debug Libraries_AllConfigurations fails to complete the build",
        "labels":  [
                       "disabled-test",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/109329",
        "createdAt":  "2024-10-29T09:11:53Z",
        "number":  109329,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-28T16:52:41Z",
        "body":  "The `NetCoreAppToolCurrentVersion` is hardcoded to 9.0 which causes issues when building with a newer SDK that doesn\u0027t have a shared framework for that given TFM (i.e. inside the VMR). As we already enforce a minimum required SDK version in global.json, it would be better to automatically calculate the `NetCoreAppToolCurrentVersion` value based on the SDK being used.\n\nThe SDK exposes the `NETCoreAppMaximumVersion` property but unfortunately a little bit too late, after the repo\u0027s Directory.Build.props file is imported.\n\nWe could avoid the `NetCoreAppToolCurrent*` properties altogether when the SDK implements https://github.com/dotnet/sdk/issues/29949. That would the ideal path forward.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOkacnQw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6RpydD",
                                           "createdAt":  "2024-10-29T09:12:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-10-29T09:12:28Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Avoid hardcoded NetCoreAppToolCurrent* properties",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/109369",
        "createdAt":  "2024-10-30T15:16:22Z",
        "number":  109369,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-10-30T15:17:04Z",
        "body":  "",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOkeHqGA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6R4eoY",
                                           "createdAt":  "2024-10-30T15:17:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-10-30T15:17:03Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Re-enable sdk -\u003e runtime (main) subscription when source-build starts again publishing a source-build transport package for sdk",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/110204",
        "createdAt":  "2024-11-26T22:26:11Z",
        "number":  110204,
        "author":  "mthalman",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-25T22:06:15Z",
        "body":  "The following container images are unsupported due to the distro being EOL and should be updated to supported versions:\n\n### main branch\n\nhttps://github.com/dotnet/runtime/blob/201b1b1ec2b9a7747ddc2f211e5abdda45915918/eng/pipelines/libraries/helix-queues-setup.yml#L33\n\nhttps://github.com/dotnet/runtime/blob/201b1b1ec2b9a7747ddc2f211e5abdda45915918/eng/pipelines/libraries/helix-queues-setup.yml#L39\n\nhttps://github.com/dotnet/runtime/blob/201b1b1ec2b9a7747ddc2f211e5abdda45915918/eng/pipelines/libraries/helix-queues-setup.yml#L60\n\nhttps://github.com/dotnet/runtime/blob/201b1b1ec2b9a7747ddc2f211e5abdda45915918/eng/pipelines/libraries/helix-queues-setup.yml#L61\n\nhttps://github.com/dotnet/runtime/blob/201b1b1ec2b9a7747ddc2f211e5abdda45915918/eng/pipelines/libraries/helix-queues-setup.yml#L63\n\nhttps://github.com/dotnet/runtime/blob/201b1b1ec2b9a7747ddc2f211e5abdda45915918/eng/pipelines/libraries/helix-queues-setup.yml#L67\n\nhttps://github.com/dotnet/runtime/blob/201b1b1ec2b9a7747ddc2f211e5abdda45915918/eng/pipelines/libraries/helix-queues-setup.yml#L69\n\nhttps://github.com/dotnet/runtime/blob/201b1b1ec2b9a7747ddc2f211e5abdda45915918/eng/pipelines/libraries/helix-queues-setup.yml#L72\n\nhttps://github.com/dotnet/runtime/blob/201b1b1ec2b9a7747ddc2f211e5abdda45915918/eng/pipelines/libraries/helix-queues-setup.yml#L79\n\n### release/9.0 branch\n\nhttps://github.com/dotnet/runtime/blob/756e62050722c168cd3b753be73b7cbcd93f06d6/eng/pipelines/libraries/helix-queues-setup.yml#L44\n\nhttps://github.com/dotnet/runtime/blob/756e62050722c168cd3b753be73b7cbcd93f06d6/eng/pipelines/libraries/helix-queues-setup.yml#L53\n\nPlease backport to older release branches as necessary.\n\nRelated:\nDebian 11: https://github.com/dotnet/core/issues/9625\nFedora 38: https://github.com/dotnet/core/issues/9291\nAlpine 3.17: https://github.com/dotnet/core/issues/9571",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOmYGDRg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6VJxN5",
                                           "createdAt":  "2024-11-27T00:54:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-11-27T00:54:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6ZgYNG",
                                           "createdAt":  "2025-01-07T14:18:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mthalman",
                                           "body":  "I\u0027ve added Alpine 3.17 to the list above, which is referenced in the release/9.0 branch.",
                                           "updatedAt":  "2025-01-07T14:18:20Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Migrate off of EOL container images",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/113439",
        "createdAt":  "2025-03-12T20:07:48Z",
        "number":  113439,
        "author":  "richlander",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-04T21:23:51Z",
        "body":  "We just merged: https://github.com/dotnet/runtime/pull/112024. This is the start of the switch for testing. We\u0027ll complete that over this month. We should start the same process for the build.\n\nThis file only contains the container images: https://github.com/dotnet/runtime/blob/main/eng/pipelines/common/templates/pipeline-with-resources.yml. The relevant VM image is defined elsewhere.\n\n@ilyas1974 @agocke ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOok8vbQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6iFRiP",
                                           "createdAt":  "2025-03-12T22:47:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-03-12T22:47:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6iMXJe",
                                           "createdAt":  "2025-03-13T12:50:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "This depends on dnceng providing an AL3.0 build image: https://github.com/dotnet/dnceng/issues/4929",
                                           "updatedAt":  "2025-03-13T12:50:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6iOGJ9",
                                           "createdAt":  "2025-03-13T15:08:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "richlander",
                                           "body":  "@dougbu ",
                                           "updatedAt":  "2025-03-13T15:08:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6iTy9t",
                                           "createdAt":  "2025-03-14T01:27:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEJ5joQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "richlander",
                                                                               "createdAt":  "2025-03-14T04:07:29Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "dougbu",
                                           "body":  "work on dotnet/dnceng#4929 is now 💯% doable. it\u0027s primarily a prioritization question for @markwilkie and @ilyas1974 though we\u0027re definitely aware of the end-of-month request @lbussell made",
                                           "updatedAt":  "2025-03-14T01:27:35Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Change build pipeline to use Azure Linux VM",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/113455",
        "createdAt":  "2025-03-12T23:39:11Z",
        "number":  113455,
        "author":  "richlander",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODADRrg==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "mthalman",
                                            "createdAt":  "2025-03-13T15:39:03Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "sbomer",
                                            "createdAt":  "2025-03-13T16:47:45Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2025-07-25T22:06:35Z",
        "body":  "The dotnet/runtime repo CI is tough to maintain on a good day. We try to use a config-as-code approach wherever possible so that repo change is controlled via merged PRs. There are some systems that do not play nicely with that, including prereqs container images. Container images are a system we control and can adopt a different plan.\n\nI want to use this issue as a formal request to invest in an automated code-flow style pinning system. It\u0027s another team that will implement this, but I wanted to create the issue here since the need is here. The work has [already started](https://github.com/dotnet/arcade/pull/15594) (yeahh!) but I wanted to do this properly with a well-described request.\n\nWe had a conversation on this topic last year. [@jkotas shared some good context](https://github.com/dotnet/dotnet-buildtools-prereqs-docker/issues/1279#issuecomment-2549763337) on which this is needed. It stands on its own, so I\u0027ll not explain that further.\n\nMore recently, we wanted to move to clang 20 in an existing container image which was already in active use in our `main` branch. We knew that there was a [prior break in clang 20 that required a runtime change](https://github.com/dotnet/runtime/pull/112777). That was a sort of \"fire where smoke\" signal. We decided to [proactively manually pin the container images](https://github.com/dotnet/runtime/pull/113185) in runtime to avoid any more risk. This required writing a tool to make that practical. We were then able to [safely upgrade to clang 20](https://github.com/dotnet/dotnet-buildtools-prereqs-docker/pull/1369) in the existing image. That proved smart since there was [significant breakage](https://github.com/dotnet/runtime/pull/113248). We discovered that on a Friday afternoon and were able to not care about it over the weekend since all of the breakage was contained within a PR.\n\nWe could continue to use this manual pattern if we believe that we could reliable precog and act on all of the prereqs images where there will be breakage. That\u0027s not a good bet. Instead, we believe that a code-flow model would be best. I propose a nightly digest model where all stale digests are updated in a single PR with an outler-loop run. That\u0027s intended as a starting-point proposal.\n\nThis idea can be extended to other modalities. We had significant challenge deploying [Azure Linux VMs in runtime](https://github.com/dotnet/runtime/pull/112024). This also resulted in ~ 1 day break of runtime CI as part of the process. That wasn\u0027t fun. It would be great if we (as an org) could no-fear-deploy VMs at any time via a similar config-as-code codeflow process.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOok2eNg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6iOe12",
                                           "createdAt":  "2025-03-13T15:41:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEJ0-Jw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "richlander",
                                                                               "createdAt":  "2025-03-13T16:56:26Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "mthalman",
                                           "body":  "This is essentially a request for this feature: https://github.com/dotnet/dotnet-buildtools-prereqs-docker/issues/1321\n\nAlso related: https://github.com/dotnet/arcade/pull/15594",
                                           "updatedAt":  "2025-03-13T15:41:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6iR_cR",
                                           "createdAt":  "2025-03-13T20:32:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-03-13T20:32:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6iSlWi",
                                           "createdAt":  "2025-03-13T21:59:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "We should also follow the same strategy in the VMR as it uses the same images to build the runtime repo\u0027s code.",
                                           "updatedAt":  "2025-03-13T21:59:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6iSugR",
                                           "createdAt":  "2025-03-13T22:26:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "steveisok",
                                           "body":  "Why can\u0027t we use / expand darc for something like this? I guess that\u0027s along the same lines of https://github.com/dotnet/dotnet-buildtools-prereqs-docker/issues/1321\n\nCould be an AI opportunity ;-)",
                                           "updatedAt":  "2025-03-13T22:26:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6iSxEp",
                                           "createdAt":  "2025-03-13T22:33:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mthalman",
                                           "body":  "\u003e Why can\u0027t we use / expand darc for something like this? I guess that\u0027s along the same lines of [dotnet/dotnet-buildtools-prereqs-docker#1321](https://github.com/dotnet/dotnet-buildtools-prereqs-docker/issues/1321)\n\u003e \n\u003e Could be an AI opportunity ;-)\n\nRead through https://github.com/dotnet/arcade/pull/15594 if you haven\u0027t already. Renovate already supports these scenarios. I don\u0027t think anyone\u0027s interested in reimplementing Renovate and stuffing it into darc.",
                                           "updatedAt":  "2025-03-13T22:33:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6iTZ42",
                                           "createdAt":  "2025-03-14T00:25:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "richlander",
                                           "body":  "Put a different way, we should be biasing to off the shelf tools and reducing our reliance on custom ones.",
                                           "updatedAt":  "2025-03-14T00:25:54Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "Implement pinning for container images consumed in dotnet/runtime",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/113612",
        "createdAt":  "2025-03-17T13:10:48Z",
        "number":  113612,
        "author":  "Vishwanatha-HD",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-03-18T11:05:36Z",
        "body":  "### Description\n\nI am seeing a hang issues while executing a \"build.sh\" command manually on runtime repo backed to mainline branch on s390x machines.. The below command hangs indefinitely and when I do a \"ctrl+c\", I get back the prompt..\n\n./build.sh /p:UsingToolMicrosoftNetCompilers=false /p:NoPgoOptimize=true --portablebuild false /p:DotNetBuildFromSource=true /p:DotNetBuildSourceOnly=true /p:DotNetBuildTests=true --cmakeargs -DCLR_CMAKE_USE_SYSTEM_BROTLI=true --cmakeargs -DCLR_CMAKE_USE_SYSTEM_ZLIB=true --runtimeconfiguration Release --librariesConfiguration Debug /p:PrimaryRuntimeFlavor=Mono --warnAsError false --subset clr+mono+libs+host+packs+libs.tests\nDetermining projects to restore...\nRestored /home/redhat/.nuget/packages/microsoft.dotnet.arcade.sdk/10.0.0-beta.25058.4/tools/Tools.proj (in 2.09 sec).\nDetermining projects to restore...\nI also tried backing the runtime repo to \"v10.0.0-preview.1.25080.5\" tag.. Even then it hangs..\n\nI manually untarred the dotnet sdks on s390x machine and did a \"dotnet new console --name \"Hello\" --no-restore\".. This is working fine and it confirms that the SDKs that are built for s390x are functional..\n\nI haven\u0027t validated this issue on other archs..\n\n### Reproduction Steps\n\nThe below command should work and start building the runtime repo..\n./build.sh /p:UsingToolMicrosoftNetCompilers=false /p:NoPgoOptimize=true --portablebuild false /p:DotNetBuildFromSource=true /p:DotNetBuildSourceOnly=true /p:DotNetBuildTests=true --cmakeargs -DCLR_CMAKE_USE_SYSTEM_BROTLI=true --cmakeargs -DCLR_CMAKE_USE_SYSTEM_ZLIB=true --runtimeconfiguration Release --librariesConfiguration Debug /p:PrimaryRuntimeFlavor=Mono --warnAsError false --subset clr+mono+libs+host+packs+libs.tests \n\n### Expected behavior\n\nThe command should not hang indefinitely and it should start building the runtime repo.\n\n### Actual behavior\n\nThe build.sh command hangs indefinitely\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOouJcqQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6isKcn",
                                           "createdAt":  "2025-03-17T13:20:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Vishwanatha-HD",
                                           "body":  "cc: @omajid @tmds @uweigand @saitama951 @giritrivedi @medhatiwari ",
                                           "updatedAt":  "2025-03-17T13:20:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6isPeR",
                                           "createdAt":  "2025-03-17T13:27:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "giritrivedi",
                                           "body":  "Hello @Vishwanatha-HD \nI will take a look to see if it gets reproduced on my machine. ",
                                           "updatedAt":  "2025-03-17T13:27:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6isWoV",
                                           "createdAt":  "2025-03-17T13:35:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "uweigand",
                                           "body":  "Hi @Vishwanatha-HD is this once again the mono_loader_lock deadlock described here? https://github.com/dotnet/runtime/issues/93686\n\nThe symptom there was also a hang during the restore phase.   But it would be good to verify by creating backtraces of the hanging processes and checking whether they hand in mono_loader_lock ..",
                                           "updatedAt":  "2025-03-17T13:35:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6isXqk",
                                           "createdAt":  "2025-03-17T13:36:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-03-17T13:36:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6is-qt",
                                           "createdAt":  "2025-03-17T14:21:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Vishwanatha-HD",
                                           "body":  "Sure @uweigand.. I will try to get more info on the reason why it\u0027s hanging and update you here.. Thanks.. ",
                                           "updatedAt":  "2025-03-17T14:21:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6i4lyp",
                                           "createdAt":  "2025-03-18T11:05:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "giritrivedi",
                                           "body":  "@Vishwanatha-HD The issue is not reproducible on local machines. Tried both on RHEL and Ubuntu distros with mainline branch. \nPlease let us know if it hangs again on your machine . ",
                                           "updatedAt":  "2025-03-18T11:05:35Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "build.sh command on the runtime repo backed to mainline is hanging",
        "labels":  [
                       "area-Infrastructure",
                       "untriaged",
                       "arch-s390x"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/113909",
        "createdAt":  "2025-03-26T01:25:37Z",
        "number":  113909,
        "author":  "steveisok",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-28T16:50:50Z",
        "body":  "https://github.com/dotnet/runtime/pull/113257 was the first pass at getting a manually triggered pipeline up that allows you to build the runtime off your PR and use it to run tests against dotnet/diagnostics main.\n\nThis issue is a follow up tracking the yml work that needs to happen in dotnet/diagnostics to make it better. The goal is to separate https://github.com/dotnet/diagnostics/blob/main/eng/pipelines/build.yml into a separate job template that can take a list of pre-build steps. We would then be able to integrate that template into the runtime-diagnostics pipeline.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOpBdbFg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6kF1sW",
                                           "createdAt":  "2025-03-26T01:26:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-03-26T01:26:18Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "runtime-diagnostics pipeline follow up work",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/114069",
        "createdAt":  "2025-03-31T15:20:37Z",
        "number":  114069,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODBkqmQ==",
                          "nodes":  [
                                        {
                                            "content":  "EYES",
                                            "user":  "am11",
                                            "createdAt":  "2025-04-23T08:19:24Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-07-25T22:06:54Z",
        "body":  "![Image](https://github.com/user-attachments/assets/615ae54e-6159-48d4-b93f-1aa0efe7151f)\n\nThe properties set [here] only impact the non-portable RID graph: https://github.com/dotnet/runtime/blob/be6d8d01a848a1de0674e51c6d243b65404f2e0f/Directory.Build.props#L368-L372",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOpOaW4w==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6k5pbj",
                                           "createdAt":  "2025-03-31T15:21:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-03-31T15:21:03Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Runtime projects aren\u0027t using the live portable RID graph in the build",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/115397",
        "createdAt":  "2025-05-08T11:19:47Z",
        "number":  115397,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-25T20:08:15Z",
        "body":  "https://github.com/dotnet/runtime/pull/115395 showed new CA2025 errors but only in the non-source-only jobs. That\u0027s because analyzers are disabled globally when building source-only: https://github.com/dotnet/runtime/blob/08cb954444914798a1a7e41737447c26b134169e/eng/Analyzers.targets#L11\n\nThis setting dates back to https://github.com/dotnet/corefx/commit/7732d6b2569f5ffa44ecca1755d0135d300e8569 which disabled analyzers for source-only builds.\n\nThis is problematic for various reasons:\n- Creates an artificial difference between source-only and non-source-only builds\n- Diverging behavior form other repositories which don\u0027t disable analyzers when building source-only\n- Doesn\u0027t get caught in SB\u0027s stage2 validation that runs as part of VMR PRs. For the above PR that meant it only get caught in the VMR -\u003e runtime backflow PR and not in the roslyn-analyzers -\u003e VMR forward flow PR.\n\nI propose that we change this setting to only apply to \"online\" analyzers that don\u0027t exist in the source-build graph.\n\ncc @dotnet/source-build @ericstj (as you made the original commit) for opinions",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOqq9eVA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6qqfPs",
                                           "createdAt":  "2025-05-08T14:26:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichaelSimons",
                                           "body":  "Analyzers have historically been problematic in the past for source-build for projects targeting older TFMs because the targeting packs from SBRP exclude the analyzers.  The targeting pack analyzers can\u0027t reasonable be built from source.  We are in a much better place today with the introduction of NetCurrent.  Ideally differences like this wouldn\u0027t exist.  It should be easy to validate what the impact is of enabling this within the VMR.",
                                           "updatedAt":  "2025-05-08T14:26:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6qrUag",
                                           "createdAt":  "2025-05-08T15:35:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-05-08T15:35:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6qrfSr",
                                           "createdAt":  "2025-05-08T15:46:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "At the time of the commit you linked we were fixing prebuilts -- https://github.com/dotnet/source-build/issues/884\n\nNot sure I agree that change was from then - I see https://github.com/dotnet/runtime/commit/e0e1919aef7176fb7cabd8a85cad26d80e62728f renamed the property to apply to all analyzers.\nBefore that https://github.com/dotnet/runtime/commit/42183b1b86656a348e0b6af7fa7c75072865f759#diff-489b1e12d93a4928641f4e40fc9d33fe0490b257176f4f055c901dbfc8b751e5R5 added it as `EnableAnalyzers` which might have been our own property that controlled some package references to things that were likely not \"below runtime\" in the source build graph.\n\nSeems like https://github.com/dotnet/runtime/pull/42272#discussion_r488899546 might cover this. \n\n",
                                           "updatedAt":  "2025-05-08T15:47:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6qr15U",
                                           "createdAt":  "2025-05-08T16:21:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOERXJyg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MichaelSimons",
                                                                               "createdAt":  "2025-05-08T17:06:05Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "Thanks Eric and Michael for sharing context.\n\nThe  analyzer that made me open this issue is `Microsoft.CodeAnalysis.NetAnalyzers` which got disabled by that commit. That triggered an analyzer error in today\u0027s [dotnet -\u003e runtime backflow PR](https://github.com/dotnet/runtime/pull/115395) instead of at insertion time in the [roslyn-analyzers -\u003e VMR forward flow PR](https://github.com/dotnet/dotnet/pull/272) in the source-build stage2 job.\n\nIf I don\u0027t hear any objections to re-enabling the analyzers when building source-only, I will send a PR re-enabling them (maybe first in the VMR as Michael suggested).",
                                           "updatedAt":  "2025-05-08T16:21:05Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Enable Analyzers when building source-only",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/115526",
        "createdAt":  "2025-05-13T18:10:47Z",
        "number":  115526,
        "author":  "jkoritzinsky",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODCVqcQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "hoyosjs",
                                            "createdAt":  "2025-05-13T18:43:59Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "steveisok",
                                            "createdAt":  "2025-05-13T19:30:40Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2025-07-25T22:15:02Z",
        "body":  "We recently moved our compliance tooling runs from the runtime official build to the runtime-codeql pipeline.\n\nAs part of this work, we discovered that tools like binskim aren\u0027t running on much of our outputs. We should adjust that pipeline as needed to ensure that we\u0027re getting full coverage of our compliance tooling in the runtime repo.\n\ncc: @ericstj @jeffschwMSFT ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOq4Nahg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6rg1qG",
                                           "createdAt":  "2025-05-13T18:11:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-05-13T18:11:10Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Improve runtime-codeql pipeline to run more compliance tooling",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/115786",
        "createdAt":  "2025-05-20T14:42:35Z",
        "number":  115786,
        "author":  "richlander",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-25T22:04:49Z",
        "body":  "We have a few images in our build pipeline that don\u0027t match our regular pattern. We should validate that creating a new image per the existing pattern with a new OS is the desired approach.\n\nIf we stick with the existing pattern, it would be good to switch the referenced Debian image to Ubuntu to allow for a longer release cycle. The referenced CentOS Stream image might also be switched to Ubuntu unless we\u0027re specifically wanting to validate RHEL ecosystem. We already have tests for that for source-build. I don\u0027t know what the specific requirements are for `aot`.\n\nAs you may recall, my goal with `main` is to move it to bleeding edge versions before we snap for servicing (RC1).\n\nFile: https://github.com/dotnet/runtime/blob/main/eng/pipelines/common/templates/pipeline-with-resources.yml\n\nImages:\n\nhttps://github.com/dotnet/runtime/blob/7f076024a9cdb3cbebfa9061d84344a064a5ff51/eng/pipelines/common/templates/pipeline-with-resources.yml#L105-L109\n\nhttps://github.com/dotnet/runtime/blob/7f076024a9cdb3cbebfa9061d84344a064a5ff51/eng/pipelines/common/templates/pipeline-with-resources.yml#L126-L129",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOrJJYQg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6siZTj",
                                           "createdAt":  "2025-05-20T14:44:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "richlander",
                                           "body":  "@jkoritzinsky @sbomer @agocke @jkotas ",
                                           "updatedAt":  "2025-05-20T14:44:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6sjq5o",
                                           "createdAt":  "2025-05-20T16:00:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOES2bdQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "richlander",
                                                                               "createdAt":  "2025-05-20T16:03:02Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "`linux_x64_llvmaot` can be removed (and usages replaced with our other CentOS Stream image).\n\nThe debian image is primarily for GCC and Debian inner-loop validation (we have team members who work on Debian primarily and community members who build with GCC), so I want to keep that generally as-is (bleeding edge of both Debian and GCC).\n\nThe tizen image we can move forward to Ubuntu 24.04.",
                                           "updatedAt":  "2025-05-20T16:00:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6skCzl",
                                           "createdAt":  "2025-05-20T16:32:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-05-20T16:32:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6skhyp",
                                           "createdAt":  "2025-05-20T17:19:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "richlander",
                                           "body":  "Looks like the Debian-GCC image is the latest: https://hub.docker.com/_/gcc/. We can wait on that one.",
                                           "updatedAt":  "2025-05-20T17:19:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6sklhC",
                                           "createdAt":  "2025-05-20T17:26:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOES3ZJg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkoritzinsky",
                                                                               "createdAt":  "2025-05-20T17:45:34Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "richlander",
                                           "body":  "@sbomer -- It looks like this one is a bigger lift than I can handle: `mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-22.04-cross-armel-tizen`\n\nWe have two main options (assuming we still need this build leg):\n\n- Update to 24.04 now\n- Wait until 26.04 ships\n\nI\u0027m actually wondering if we go with the second option to get a better bang for the buck for our efforts.",
                                           "updatedAt":  "2025-05-20T17:26:21Z"
                                       }
                                   ],
                         "totalCount":  5
                     },
        "title":  "Validate plan for updating build pipeline container images",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/115796",
        "createdAt":  "2025-05-20T17:22:22Z",
        "number":  115796,
        "author":  "richlander",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-25T22:04:40Z",
        "body":  "We have a variety of duplicate definitions across pipelines. It will make maintenance easier and force consistency.\n\nRelevant pipelines: https://github.com/dotnet/runtime/blob/main/docs/project/os-onboarding.md#containers",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOrJMQ5A==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6skmc-",
                                           "createdAt":  "2025-05-20T17:28:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-05-20T17:28:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6skmld",
                                           "createdAt":  "2025-05-20T17:28:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "agocke",
                                           "body":  "What should we aim to deduplicate here?\n\nFor instance, should we always be on the same version of Ubuntu for all pipelines? For some pipelines? Which version of Ubuntu? Latest, or LTS?",
                                           "updatedAt":  "2025-05-20T17:28:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6skxDk",
                                           "createdAt":  "2025-05-20T17:45:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "richlander",
                                           "body":  "It\u0027s a different plan per distro because each one versions differently. I can write that down as part of this effort.",
                                           "updatedAt":  "2025-05-20T17:45:11Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "Consolidate container definitions across pipelines",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/115946",
        "createdAt":  "2025-05-23T17:10:44Z",
        "number":  115946,
        "author":  "ericstj",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-14T16:36:39Z",
        "body":  "This issue tracks follow-up work to improve the Copilot agent setup steps as discussed in PRs https://github.com/dotnet/runtime/pull/115912, https://github.com/dotnet/runtime/pull/115917.\n\n@CarnaViire @ellismg\n\n---\n\n## Follow-up Items\n\n- [ ] 1. Script for installing dependencies\n- [ ] 2. Simplify restore step\n- [ ] 3. Upload binlog from build step\n\n---\n\n### 1. Script for installing dependencies\n\nWe can improve the developer documentation by making a single installation script be sufficient for setting up the repo.\n\nThis script can be linked by our public docs.  It can represent the superset of all the steps we have in our codespaces configuration containers - so long as none are mutually exclusive or excessively costly.  If any are omitted, then we should make sure to discuss them in the copilot instructions doc so that the agent knows how to manually run them when facing work of that type.\n\n### 2. Simplify restore step\n\nWe should add a flag for `build.sh` subsets that means \"everything\". That should save us specifying the custom properties like `/p:DotNetBuildTests=true` and reacting to any potential subset additions.\n\nThe flag itself is tracked in https://github.com/dotnet/runtime/issues/116016. This item tracks updating the restore step afterwards.\n\n### 3. Upload binlog from build step\n\nWhile the `clr+libs` build step is present in the setup, we could consider uploading the binlog from the build. That might be useful for diagnosing failures. https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/storing-and-sharing-data-from-a-workflow\n\n---\n\n_2025-05-26: UPD by @CarnaViire to include more items_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOrTR1HA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6tNHUc",
                                           "createdAt":  "2025-05-23T21:52:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-05-23T21:52:43Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Track follow-up improvements to Copilot agent setup steps",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/116599",
        "createdAt":  "2025-06-12T19:35:20Z",
        "number":  116599,
        "author":  "39otsu",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-21T17:45:05Z",
        "body":  "### Description\n\nTest failure after building with -fsanitize address\n\n### Reproduction Steps\n\n-Open x86 VS Dev Command Prompt 17.14.4 preview 1.0\n-Clone the repo\n-Checkout b21c93c\n-cd to project root directory\n-`.\\build clr+libs -rc Debug -lc Release -fsanitize address -arch x86`\n-`src/tests/build.cmd debug x86 -fsanitize address /p:LibrariesConfiguration=Release`\n-`src/tests/run.cmd debug x86`\n\n### Expected behavior\n\nTests pass\n\n### Actual behavior\n\nFailed test: OutOfProcessTest::baseservices\\TieredCompilation\\BasicTestWithMcj\\BasicTestWithMcj.cmd (baseservices\\TieredCompilation\\BasicTestWithMcj\\BasicTestWithMcj.cmd) (baseservices.baseservices)\nA subdirectory or file r2r already exists.\n==11900==Shadow memory range interleaves with an existing memory mapping. ASan cannot proceed correctly. ABORTING.\nThis can happen for multiple possible reasons:\n   1. There is a module in the range of the shadow memory\n   2. Some binaries are compiled with the Static CRT /MT(d) and some are built\n      with the Dynamic CRT /MD(d)\n       - this needs to be consistent across all binaries in a process, or ASan may\n         try to initialize the runtime twice\n   3. The function stack may be in the range of the shadow memory. This can\n      sometimes be worked around by restarting the computer and trying again\n==11900==ASan shadow was supposed to be located in the [0x2fff0000-0x3fffffff] range.\n==11900==Dumping process modules:\n        0x00a90000-0x01d1c000 C:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\Tests\\Core_Root\\crossgen2\\crossgen2.exe\n        0x60350000-0x60d6e000 C:\\Program Files\\Microsoft Visual Studio\\2022\\Preview\\VC\\Tools\\MSVC\\14.44.35207\\bin\\HostX86\\x86\\clang_rt.asan_dynamic-i386.dll\n        0x615e0000-0x616c1000 C:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\Tests\\Core_Root\\crossgen2\\jitinterface_x86.DLL\n        0x6b6b0000-0x6b7d7000 C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\diasymreader.dll\n        0x6ee50000-0x6ee65000 C:\\Windows\\SYSTEM32\\VCRUNTIME140.dll\n        0x72ed0000-0x72f83000 C:\\Windows\\SYSTEM32\\ucrtbase_clr0400.dll\n        0x72f90000-0x72fa5000 C:\\Windows\\SYSTEM32\\VCRUNTIME140_CLR0400.dll\n        0x72fb0000-0x7376c000 C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\clr.dll\n        0x73770000-0x73778000 C:\\Windows\\SYSTEM32\\VERSION.dll\n        0x73780000-0x73794000 C:\\Windows\\SYSTEM32\\kernel.appcore.dll\n        0x73820000-0x738a8000 C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\mscoreei.dll\n        0x746e0000-0x748c0000 C:\\Windows\\SYSTEM32\\dbghelp.dll\n        0x748d0000-0x748ea000 C:\\Windows\\SYSTEM32\\bcrypt.dll\n        0x74930000-0x74985000 C:\\Windows\\SYSTEM32\\mscoree.dll\n        0x75130000-0x75240000 C:\\Windows\\System32\\ucrtbase.dll\n        0x75310000-0x753db000 C:\\Windows\\System32\\shcore.dll\n        0x75450000-0x755a8000 C:\\Windows\\System32\\ole32.dll\n        0x755e0000-0x755fa000 C:\\Windows\\System32\\win32u.dll\n        0x756e0000-0x75761000 C:\\Windows\\System32\\clbcatq.dll\n        0x75810000-0x75900000 C:\\Windows\\System32\\KERNEL32.DLL\n        0x75910000-0x75adb000 C:\\Windows\\System32\\USER32.dll\n        0x75ae0000-0x75b84000 C:\\Windows\\System32\\OLEAUT32.dll\n        0x75cd0000-0x75d53000 C:\\Windows\\System32\\sechost.dll\n        0x75d60000-0x75de5000 C:\\Windows\\System32\\msvcp_win.dll\n        0x76250000-0x76273000 C:\\Windows\\System32\\GDI32.dll\n        0x76280000-0x76347000 C:\\Windows\\System32\\msvcrt.dll\n        0x76350000-0x7643d000 C:\\Windows\\System32\\gdi32full.dll\n        0x76660000-0x766b4000 C:\\Windows\\System32\\SHLWAPI.dll\n        0x766c0000-0x7696e000 C:\\Windows\\System32\\KERNELBASE.dll\n        0x76980000-0x76c06000 C:\\Windows\\System32\\combase.dll\n        0x76c80000-0x76d39000 C:\\Windows\\System32\\RPCRT4.dll\n        0x76da0000-0x76e1e000 C:\\Windows\\System32\\ADVAPI32.dll\n        0x76e30000-0x76e55000 C:\\Windows\\System32\\IMM32.DLL\n        0x76e60000-0x76ec9000 C:\\Windows\\System32\\bcryptPrimitives.dll\n        0x76ee0000-0x7709b000 C:\\Windows\\SYSTEM32\\ntdll.dll\nActivation Context creation failed. Error: 0x00000002\nUnhandled exception. System.IO.FileNotFoundException: Could not load file or assembly \u0027C:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\baseservices\\TieredCompilation\\BasicTestWithMcj\\r2r\\BasicTestWithMcj.dll\u0027. The system cannot find the file specified.\n\nFile name: \u0027C:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\baseservices\\TieredCompilation\\BasicTestWithMcj\\r2r\\BasicTestWithMcj.dll\u0027\n\nReturn code:      1\nRaw output file:      C:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\baseservices\\TieredCompilation\\BasicTestWithMcj\\output.txt\nRaw output:\nBEGIN EXECUTION\n\nC:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\baseservices\\TieredCompilation\\BasicTestWithMcj\u003eset DOTNETCLI=C:\\gitP\\dotnet\\runtime\\dotnet.cmd\n\nC:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\baseservices\\TieredCompilation\\BasicTestWithMcj\u003eset __DOTNET_ADD_32BIT=1\n\nC:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\baseservices\\TieredCompilation\\BasicTestWithMcj\u003eset __DOTNET_PREFERRED_BITNESS=32\ncall RunBasicTestWithMcj.cmd --runCustomTest C:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\baseservices\\TieredCompilation\\BasicTestWithMcj\\ BasicTestWithMcj.dll\nCollect profile without R2R, use profile without R2R\nCollect profile with R2R, use profile with R2R\nExpected: 100\nActual: -532462766\nEND EXECUTION - FAILED\nFAILED\nTest Harness Exitcode is : 1\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\nWindows x64 running x86 native tools developer command prompt 17.14.4 preview 1\n\n### Other information\n\nThis was built with the sanitizer instrumentation fix for Windows from https://github.com/dotnet/runtime/pull/116166",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOsXkwWA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6xeTBY",
                                           "createdAt":  "2025-06-16T17:51:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-06-16T17:51:35Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Failed test: OutOfProcessTest::baseservices\\TieredCompilation\\BasicTestWithMcj\\BasicTestWithMcj.cmd Windows x86 -fsanitize address",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/116600",
        "createdAt":  "2025-06-12T19:43:24Z",
        "number":  116600,
        "author":  "39otsu",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-17T18:21:38Z",
        "body":  "### Description\n\nTest failure accompanied with ASAN Report\n\n### Reproduction Steps\n\n-Open x86 VS Dev Command Prompt 17.14.4 preview 1.0\n-Clone the repo\n-Checkout b21c93c\n-cd to project root directory\n-`.\\build clr+libs -rc Debug -lc Release -fsanitize address -arch x86`\n-`src/tests/build.cmd debug x86 /p:LibrariesConfiguration=Release`\n-`src/tests/run.cmd debug x86`\n\n### Expected behavior\n\nTest pass\n\n### Actual behavior\n\nFailed test: OutOfProcessTest::profiler\\unittest\\releaseondetach\\releaseondetach.cmd (profiler\\unittest\\releaseondetach\\releaseondetach.cmd) (profiler.profiler)\n==71772==ERROR: AddressSanitizer failed to allocate aligned 0x100000 (1048576) bytes of SizeClassAllocator (error code: 487)\n==71772==Dumping process modules:\n        0x00f10000-0x010ed000 C:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\Tests\\Core_Root\\CoreRun.exe\n        0x65e50000-0x68f04000 C:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\Tests\\Core_Root\\coreclr.dll\n        0x68f10000-0x6992e000 C:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\Tests\\Core_Root\\clang_rt.asan_dynamic-i386.dll\n        0x6ee50000-0x6ee65000 C:\\Windows\\SYSTEM32\\VCRUNTIME140.dll\n        0x73780000-0x73794000 C:\\Windows\\SYSTEM32\\kernel.appcore.dll\n        0x746e0000-0x748c0000 C:\\Windows\\SYSTEM32\\dbghelp.dll\n        0x75130000-0x75240000 C:\\Windows\\System32\\ucrtbase.dll\n        0x75310000-0x753db000 C:\\Windows\\System32\\shcore.dll\n        0x75450000-0x755a8000 C:\\Windows\\System32\\ole32.dll\n        0x755e0000-0x755fa000 C:\\Windows\\System32\\win32u.dll\n        0x75810000-0x75900000 C:\\Windows\\System32\\KERNEL32.DLL\n        0x75910000-0x75adb000 C:\\Windows\\System32\\USER32.dll\n        0x75ae0000-0x75b84000 C:\\Windows\\System32\\OLEAUT32.dll\n        0x75cd0000-0x75d53000 C:\\Windows\\System32\\sechost.dll\n        0x75d60000-0x75de5000 C:\\Windows\\System32\\msvcp_win.dll\n        0x76250000-0x76273000 C:\\Windows\\System32\\GDI32.dll\n        0x76280000-0x76347000 C:\\Windows\\System32\\msvcrt.dll\n        0x76350000-0x7643d000 C:\\Windows\\System32\\gdi32full.dll\n        0x766c0000-0x7696e000 C:\\Windows\\System32\\KERNELBASE.dll\n        0x76980000-0x76c06000 C:\\Windows\\System32\\combase.dll\n        0x76c80000-0x76d39000 C:\\Windows\\System32\\RPCRT4.dll\n        0x76da0000-0x76e1e000 C:\\Windows\\System32\\ADVAPI32.dll\n        0x76e30000-0x76e55000 C:\\Windows\\System32\\IMM32.DLL\n        0x76e60000-0x76ec9000 C:\\Windows\\System32\\bcryptPrimitives.dll\n        0x76ee0000-0x7709b000 C:\\Windows\\SYSTEM32\\ntdll.dll\nAddressSanitizer: CHECK failed: sanitizer_common.cpp:72 \"((0 \u0026\u0026 \"unable to mmap\")) != (0)\" (0x0, 0x0) (tid=52532)\n    #0 0x68f571d9  (C:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\Tests\\Core_Root\\clang_rt.asan_dynamic-i386.dll+0x100471d9)\n    #1 0x68f1cc6e  (C:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\Tests\\Core_Root\\clang_rt.asan_dynamic-i386.dll+0x1000cc6e)\n    #2 0x68f14000  (C:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\Tests\\Core_Root\\clang_rt.asan_dynamic-i386.dll+0x10004000)\n    #3 0x68f1b02e  (C:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\Tests\\Core_Root\\clang_rt.asan_dynamic-i386.dll+0x1000b02e)\n    #4 0x68f1a81e  (C:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\Tests\\Core_Root\\clang_rt.asan_dynamic-i386.dll+0x1000a81e)\n    #5 0x68f2c8bf  (C:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\Tests\\Core_Root\\clang_rt.asan_dynamic-i386.dll+0x1001c8bf)\n    #6 0x68f2a91f  (C:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\Tests\\Core_Root\\clang_rt.asan_dynamic-i386.dll+0x1001a91f)\n    #7 0x68f2d733  (C:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\Tests\\Core_Root\\clang_rt.asan_dynamic-i386.dll+0x1001d733)\n    #8 0x68f2a17d  (C:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\Tests\\Core_Root\\clang_rt.asan_dynamic-i386.dll+0x1001a17d)\n    #9 0x68f29e23  (C:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\Tests\\Core_Root\\clang_rt.asan_dynamic-i386.dll+0x10019e23)\n    #10 0x68f2a447  (C:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\Tests\\Core_Root\\clang_rt.asan_dynamic-i386.dll+0x1001a447)\n    #11 0x68f2dc5b  (C:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\Tests\\Core_Root\\clang_rt.asan_dynamic-i386.dll+0x1001dc5b)\n    #12 0x68f4cafa  (C:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\Tests\\Core_Root\\clang_rt.asan_dynamic-i386.dll+0x1003cafa)\n    #13 0x76a70a94  (C:\\Windows\\System32\\combase.dll+0x100f0a94)\n    #14 0x76a04a02  (C:\\Windows\\System32\\combase.dll+0x10084a02)\n    #15 0x76a047ce  (C:\\Windows\\System32\\combase.dll+0x100847ce)\n    #16 0x76a040fe  (C:\\Windows\\System32\\combase.dll+0x100840fe)\n    #17 0x76a03bd9  (C:\\Windows\\System32\\combase.dll+0x10083bd9)\n    #18 0x6678c12d in FinalizerThread::FinalizerThreadStart(void *) C:\\gitP\\dotnet\\runtime\\src\\coreclr\\vm\\finalizerthread.cpp:387\n    #19 0x68f5bbe5  (C:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\Tests\\Core_Root\\clang_rt.asan_dynamic-i386.dll+0x1004bbe5)\n    #20 0x75825d48  (C:\\Windows\\System32\\KERNEL32.DLL+0x6b815d48)\n    #21 0x76f4d03a  (C:\\Windows\\SYSTEM32\\ntdll.dll+0x4b2ed03a)\n    #22 0x76f4cfc0  (C:\\Windows\\SYSTEM32\\ntdll.dll+0x4b2ecfc0)\n\nUnhandled exception. System.Exception: Profiler tests are expected to contain the text \u0027PROFILER TEST PASSES\u0027 in the console output of the profilee app to indicate a passing test. Usually it is printed from the Shutdown() method of the profiler implementation. This text was not found in the output above. Profilee returned exit code 1.\n\n   at Profiler.Tests.ProfilerTestRunner.FailFastWithMessage(String error) in C:\\gitP\\dotnet\\runtime\\src\\tests\\profiler\\common\\ProfilerTestRunner.cs:line 185\n\n   at Profiler.Tests.ProfilerTestRunner.Run(String profileePath, String testName, Guid profilerClsid, String profileeArguments, ProfileeOptions profileeOptions, Dictionary`2 envVars, String reverseServerName, Boolean loadAsNotification, Int32 notificationCopies) in C:\\gitP\\dotnet\\runtime\\src\\tests\\profiler\\common\\ProfilerTestRunner.cs:line 131\n\n   at Profiler.Tests.ReleaseOnShutdown.Main(String[] args) in C:\\gitP\\dotnet\\runtime\\src\\tests\\profiler\\unittest\\releaseondetach.cs:line 60\n\nReturn code:      1\nRaw output file:      C:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\profiler\\unittest\\releaseondetach\\output.txt\nRaw output:\nBEGIN EXECUTION\n\nC:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\profiler\\unittest\\releaseondetach\u003eset DOTNETCLI=C:\\gitP\\dotnet\\runtime\\dotnet.cmd\n\nC:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\profiler\\unittest\\releaseondetach\u003eset __DOTNET_ADD_32BIT=1\n\nC:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\profiler\\unittest\\releaseondetach\u003eset __DOTNET_PREFERRED_BITNESS=32\n \"C:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\Tests\\Core_Root\\corerun.exe\" -p \"System.Runtime.Serialization.EnableUnsafeBinaryFormatterSerialization=true\"  releaseondetach.dll\nProfiler path: C:\\gitP\\dotnet\\runtime\\artifacts\\tests\\coreclr\\windows.x86.Debug\\profiler\\unittest\\releaseondetach\\Profiler.dll\nTest failed: Profiler tests are expected to contain the text \u0027PROFILER TEST PASSES\u0027 in the console output of the profilee app to indicate a passing test. Usually it is printed from the Shutdown() method of the profiler implementation. This text was not found in the output above. Profilee returned exit code 1.\nExpected: 100\nActual: -532462766\nEND EXECUTION - FAILED\nFAILED\nTest Harness Exitcode is : 1\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\nWindows x64 running x86 native tools developer command prompt 17.14.4 preview 1\n\n\n### Other information\n\nThis was built with the sanitizer instrumentation fix for Windows from https://github.com/dotnet/runtime/pull/116166",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOsXkvzA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6xeS_M",
                                           "createdAt":  "2025-06-16T17:51:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-06-16T17:51:32Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Failed test: OutOfProcessTest::profiler\\unittest\\releaseondetach\\releaseondetach.cmd Windows x86",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/116929",
        "createdAt":  "2025-06-23T19:23:15Z",
        "number":  116929,
        "author":  "am11",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-11T12:05:10Z",
        "body":  "On platforms where AOT is not supported, `--use-bootstrap` fails with error like: https://github.com/dotnet/runtime/pull/105403#issuecomment-2994802484.\n\nThis is because PublishSingleFile is not respecting bootstrapped singlefile:\n\n```sh\n$ ls artifacts/bootstrap/illumos-x64/host/\napphost  singlefilehost\n```\n\nRepro:\n\n```sh\n$ git clone https://github.com/gwr/dotnet-runtime runtime --branch illumos5 --single-branch --depth 1\n$ docker run --rm -v$(pwd)/runtime:/runtime -e ROOTFS_DIR=/crossrootfs/x64 \\\n    -it mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-22.04-cross-illumos\n\n$ /runtime/build.sh clr+libs+packs -c Debug -os illumos -cross -gcc --bootstrap\n...\nCleaning up artifacts from bootstrap build...\n  Determining projects to restore...\n  Tool \u0027coverlet.console\u0027 (version \u00276.0.4\u0027) was restored. Available commands: coverlet\n  Tool \u0027dotnet-reportgenerator-globaltool\u0027 (version \u00275.4.3\u0027) was restored. Available commands: reportgenerator\n  Tool \u0027microsoft.dotnet.xharness.cli\u0027 (version \u002710.0.0-prerelease.25255.1\u0027) was restored. Available commands: xharness\n  Tool \u0027microsoft.visualstudio.slngen.tool\u0027 (version \u002712.0.15\u0027) was restored. Available commands: slngen\n  \n  Restore was successful.\n  All projects are up-to-date for restore.\n  Determining projects to restore...\n/runtime/.dotnet/sdk/10.0.100-preview.6.25302.104/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(188,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier \u0027illumos-x64\u0027. [/runtime/Build.proj]\n/runtime/.dotnet/sdk/10.0.100-preview.6.25302.104/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(188,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier \u0027illumos-x64\u0027. [/runtime/Build.proj]\n/runtime/.dotnet/sdk/10.0.100-preview.6.25302.104/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(188,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier \u0027illumos-x64\u0027. [/runtime/Build.proj]\n/runtime/.dotnet/sdk/10.0.100-preview.6.25302.104/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(188,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier \u0027illumos-x64\u0027. [/runtime/Build.proj]\n/runtime/.dotnet/sdk/10.0.100-preview.6.25302.104/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(188,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier \u0027illumos-x64\u0027. [/runtime/Build.proj]\n/runtime/.dotnet/sdk/10.0.100-preview.6.25302.104/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(188,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier \u0027illumos-x64\u0027. [/runtime/Build.proj]\n/runtime/.dotnet/sdk/10.0.100-preview.6.25302.104/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(188,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier \u0027illumos-x64\u0027. [/runtime/Build.proj]\n/runtime/.dotnet/sdk/10.0.100-preview.6.25302.104/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(188,5): error NETSDK1084: There is no application host available for the specified RuntimeIdentifier \u0027illumos-x64\u0027. [/runtime/Build.proj]\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOw4OLIg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6yrSNo",
                                           "createdAt":  "2025-06-23T19:23:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-06-23T19:23:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6yrU2V",
                                           "createdAt":  "2025-06-23T19:27:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEXrTXA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "gwr",
                                                                               "createdAt":  "2025-06-24T06:11:58Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "am11",
                                           "body":  "cc @jkoritzinsky \n\n@gwr here is a workaround https://github.com/am11/runtime/commit/427f6797246c675e60618ac07af7bb5d024b7cb1. It fixes the restore issue but fails later in C++ code:\n\n```\n  [ 63%] Building CXX object jit/CMakeFiles/clrjit_win_x64_x64.dir/gcencode.cpp.o\n  /runtime/src/coreclr/tools/superpmi/mcs/verbmerge.cpp: In static member function \u0027static bool verbMerge::DirectoryFilterDirectories(FilterArgType*)\u0027:\n  /runtime/src/coreclr/tools/superpmi/mcs/verbmerge.cpp:188:19: error: \u0027verbMerge::FilterArgType\u0027 {aka \u0027struct dirent\u0027} has no member named \u0027d_type\u0027\n    188 |     if (findData-\u003ed_type == DT_DIR)\n        |                   ^~~~~~\n\n```\n\nso you can continue your work.",
                                           "updatedAt":  "2025-06-23T19:27:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6yrbAk",
                                           "createdAt":  "2025-06-23T19:38:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEXoM9A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2025-06-23T19:41:28Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "gwr",
                                           "body":  "Thanks!",
                                           "updatedAt":  "2025-06-23T19:38:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6yrtjL",
                                           "createdAt":  "2025-06-23T20:08:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gwr",
                                           "body":  "Looks like the code in verbmerge.cpp (or similar) will need some sort of configuration define conditional like DIRENT_HAS_D_TYPE set on Linux but not other Unix?\nIf dirent does not have d_type, the code could use stat(2) to get the type...\nOr in this particular case, just remove the `d_type == DT_DIR` check.  It\u0027s unnecessary.",
                                           "updatedAt":  "2025-06-23T20:15:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6yr-NG",
                                           "createdAt":  "2025-06-23T20:36:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "It was changed in https://github.com/dotnet/runtime/pull/110797.\n\n\n\n\u003e DIRENT_HAS_D_TYPE\n\nWe can deduplicate and use these checks:\n\n```sh\n$ git grep _D_TYPE                                \nsrc/coreclr/hosts/corerun/config.h.in:#cmakedefine01 HAVE_DIRENT_D_TYPE\nsrc/coreclr/hosts/corerun/configure.cmake:check_struct_has_member (\"struct dirent\" d_type dirent.h HAVE_DIRENT_D_TYPE)\nsrc/coreclr/hosts/corerun/corerun.hpp:#if !HAVE_DIRENT_D_TYPE\nsrc/coreclr/hosts/corerun/corerun.hpp:#if HAVE_DIRENT_D_TYPE\nsrc/native/corehost/hostmisc/config.h.in:#cmakedefine01 HAVE_DIRENT_D_TYPE\nsrc/native/corehost/hostmisc/configure.cmake:check_struct_has_member(\"struct dirent\" d_type dirent.h HAVE_DIRENT_D_TYPE)\nsrc/native/corehost/hostmisc/pal.unix.cpp:#if !HAVE_DIRENT_D_TYPE\nsrc/native/corehost/hostmisc/pal.unix.cpp:#if HAVE_DIRENT_D_TYPE\n```",
                                           "updatedAt":  "2025-06-23T20:36:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6ytRp7",
                                           "createdAt":  "2025-06-23T23:01:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gwr",
                                           "body":  "Is there a quicker way to rebuild just this file?\n/runtime/src/coreclr/tools/superpmi/mcs/verbmerge.cpp\n",
                                           "updatedAt":  "2025-06-23T23:01:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6yzEy8",
                                           "createdAt":  "2025-06-24T10:32:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEhgJrA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "gwr",
                                                                               "createdAt":  "2025-09-09T14:35:48Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "am11",
                                           "body":  "\u003e Is there a quicker way to rebuild just this file?\n\n`grep -R \u0027g++.*verbmerge.cpp\u0027 artifacts/obj/coreclr/illumos.x64.Debug/` shows the raw command with relative paths, which you can execute from that location.\n\nGenerally, for quick build validation, we can use internal script `src/coreclr/build-runtime.sh -cross -os illumos`, completes in 2-3 mins on mac. It also takes `-component \u003cname\u003e` arg to limit the scope; what to build.",
                                           "updatedAt":  "2025-06-24T10:32:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7Dg4si",
                                           "createdAt":  "2025-09-11T11:48:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gwr",
                                           "body":  "Hi @am11 and others.  Thanks for this work-around.  I\u0027ve been using it.\nWhat\u0027s next for this?  Do I just wait for #116929 to be fixed?\nShould the work-around get a PR to un-break things in the interim?\n([Workaround](https://github.com/am11/runtime/commit/427f6797246c675e60618ac07af7bb5d024b7cb1))\n",
                                           "updatedAt":  "2025-09-11T12:05:10Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "Bootstrap is failing on platform without AOT support",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/117164",
        "createdAt":  "2025-06-30T17:44:06Z",
        "number":  117164,
        "author":  "jozkee",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T23:04:06Z",
        "body":  "## Build Information\nBuild: https://dev.azure.com/dnceng-public/public/_build/results?buildId=1108670\nBuild error leg or test failing: \n\u003c!-- Error message template  --\u003e\n## Error Message\n\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssueJsonStepByStep.md).\n\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\n\n```json\n{\n  \"ErrorMessage\": \"Unable to pull image mcr.microsoft.com/dotnet-buildtools/prereqs\",\n  \"BuildRetry\": true,\n  \"ExcludeConsoleLog\": false\n}\n```\n\n\n\u003c!-- Known issue validation start --\u003e\n ### Known issue validation\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=1108670\n**Result validation:** :warning: Validation could not be done without an Azure DevOps build URL on the issue. Please add it to the \"**Build:** :mag_right:\" line.\n**Validation performed at:** 8/1/2025 8:10:46 AM UTC\n\u003c!-- Known issue validation end --\u003e\n\u003c!--Known issue error report start --\u003e\n\n### Report\n\n|Build|Definition|Test|Pull Request|\n|---|---|---|---|\n|[1148791](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148791)|dotnet/runtime|[Workloads-ST-Wasm.Build.NativeRebuild.Tests.OptimizationFlagChangeTests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148791\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31745552\u0026resultId=100169)|dotnet/runtime#119722|\n|[1149222](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149222)|dotnet/runtime|[LibraryImportGenerator.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149222\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31743878\u0026resultId=228106)|dotnet/runtime#119229|\n|[1149050](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149050)|dotnet/runtime|[Microsoft.Bcl.Numerics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149050\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31737460\u0026resultId=205779)|dotnet/runtime#119740|\n|[1149008](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149008)|dotnet/runtime|[LibraryImportGenerator.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149008\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31735180\u0026resultId=207930)|dotnet/runtime#119599|\n|[1148882](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148882)|dotnet/runtime|[Microsoft.Extensions.Options.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148882\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31731076\u0026resultId=168866)||\n|[1148920](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148920)|dotnet/runtime|[Microsoft.Extensions.Logging.Console.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148920\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31730126\u0026resultId=100099)||\n|[1148163](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148163)|dotnet/runtime|[Workloads-Wasm.Build.Tests.TestAppScenarios.WasmAppBuilderDebugLevelTests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148163\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31712626\u0026resultId=100156)||\n|[1148423](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148423)|dotnet/runtime|[System.Net.NameResolution.Functional.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148423\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31712964\u0026resultId=205717)|dotnet/runtime#119627|\n|[1148266](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148266)|dotnet/runtime|[Invariant.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148266\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31708120\u0026resultId=219073)|dotnet/runtime#119711|\n|[1148286](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148286)|dotnet/runtime|[System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148286\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31707356\u0026resultId=104555)||\n|[1148176](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148176)|dotnet/runtime|[MetricOuterLoop1.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148176\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31704726\u0026resultId=228249)||\n|[1148139](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148139)|dotnet/runtime|[ComInterfaceGenerator.Unit.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148139\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31703914\u0026resultId=219071)|dotnet/runtime#117996|\n|[1148073](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148073)|dotnet/runtime|[Workloads-ST-Wasm.Build.Tests.IcuShardingTests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148073\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31699870\u0026resultId=100168)|dotnet/runtime#119052|\n|[1147860](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147860)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Intrinsics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147860\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31690998\u0026resultId=100002)|dotnet/runtime#119662|\n|[1147782](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147782)|dotnet/runtime|[Microsoft.Extensions.Caching.Memory.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147782\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31687186\u0026resultId=167951)||\n|[1147762](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147762)|dotnet/runtime|[Microsoft.Bcl.Memory.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147762\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31685698\u0026resultId=175039)|dotnet/runtime#118371|\n|[1147702](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147702)|dotnet/runtime|[System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147702\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31682784\u0026resultId=104548)||\n|[1147690](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147690)|dotnet/runtime|[Microsoft.Extensions.Logging.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147690\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31682744\u0026resultId=104562)||\n|[1147676](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147676)|dotnet/runtime|[IcuAppLocal.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147676\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31682764\u0026resultId=170018)||\n|[1147677](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147677)|dotnet/runtime|[Microsoft.Extensions.Caching.Memory.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147677\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31682196\u0026resultId=228141)||\n|[1147665](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147665)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147665\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31681830\u0026resultId=102445)||\n|[1147591](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147591)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Intrinsics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147591\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31678988\u0026resultId=109493)|dotnet/runtime#119679|\n|[1147540](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147540)|dotnet/runtime|[Microsoft.Extensions.FileSystemGlobbing.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147540\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31676030\u0026resultId=205689)||\n|[1147517](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147517)|dotnet/runtime|[NoWebcil-ST-Wasm.Build.Tests.WasmTemplateTests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147517\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31674958\u0026resultId=100162)||\n|[1147468](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147468)|dotnet/runtime|[System.IO.FileSystem.Manual.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147468\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31672010\u0026resultId=100100)||\n|[1147410](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147410)|dotnet/runtime|[NoWebcil-ST-Wasm.Build.NativeRebuild.Tests.OptimizationFlagChangeTests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147410\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31671210\u0026resultId=100170)|dotnet/runtime#119673|\n|[1147345](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147345)|dotnet/runtime|[System.Runtime.Numerics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147345\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31670058\u0026resultId=104547)||\n|[1147319](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147319)|dotnet/runtime|[jit64_1.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147319\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31669362\u0026resultId=118916)|dotnet/runtime#119681|\n|[1147306](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147306)|dotnet/runtime|[Workloads-ST-Wasm.Build.Tests.NativeLibraryTests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147306\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31668546\u0026resultId=100158)|dotnet/runtime#119409|\n|[1147115](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147115)|dotnet/runtime|[Workloads-ST-Wasm.Build.Tests.SatelliteLoadingTests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147115\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31660538\u0026resultId=100168)||\n|[1147118](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147118)|dotnet/runtime|[WasmTestOnChrome-ST-System.Text.RegularExpressions.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147118\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31660656\u0026resultId=100002)||\n|[1146531](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146531)|dotnet/runtime|[Common.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146531\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31639772\u0026resultId=227835)|dotnet/runtime#119560|\n|[1146444](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146444)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146444\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31636562\u0026resultId=102445)|dotnet/runtime#119637|\n|[1146210](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146210)|dotnet/runtime|[System.Net.WebProxy.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146210\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31629328\u0026resultId=219062)|dotnet/runtime#119577|\n|[1146200](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146200)|dotnet/runtime|[Microsoft.Bcl.AsyncInterfaces.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146200\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31629104\u0026resultId=228212)|dotnet/runtime#119255|\n|[1146185](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146185)|dotnet/runtime|[System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146185\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31628152\u0026resultId=104548)|dotnet/runtime#119523|\n|[1146134](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146134)|dotnet/runtime|[ComInterfaceGenerator.Unit.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146134\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31627186\u0026resultId=219071)|dotnet/runtime#119625|\n|[1146119](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146119)|dotnet/runtime|[WasmTestOnChrome-ST-System.Text.RegularExpressions.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146119\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31626728\u0026resultId=100002)||\n|[1146027](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146027)|dotnet/runtime|[IntrinsicsInSystemPrivateCoreLib.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146027\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31624350\u0026resultId=210117)|dotnet/runtime#119618|\n|[1145990](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145990)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145990\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31620258\u0026resultId=102445)|dotnet/runtime#119599|\n|[1145959](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145959)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145959\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31619252\u0026resultId=102357)|dotnet/runtime#119608|\n|[1145589](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145589)|dotnet/runtime|[Microsoft.Extensions.Configuration.Binder.SourceGeneration.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145589\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31607042\u0026resultId=227420)|dotnet/runtime#119077|\n|[1145535](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145535)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.Compression.ZipFile.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145535\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31606338\u0026resultId=186285)|dotnet/runtime#119589|\n|[1145468](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145468)|dotnet/runtime|[System.Threading.Overlapped.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145468\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31603514\u0026resultId=219165)|dotnet/runtime#119584|\n|[1145282](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145282)|dotnet/runtime|[tracing/eventpipe/config/name_config_with_pid/name_config_with_pid.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145282\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31601340\u0026resultId=113293)|dotnet/runtime#119385|\n|[1145262](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145262)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Intrinsics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145262\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31596078\u0026resultId=109493)|dotnet/runtime#119265|\n|[1145258](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145258)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145258\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31595880\u0026resultId=100002)|dotnet/runtime#119574|\n|[1145220](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145220)|dotnet/runtime|[System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145220\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31594818\u0026resultId=104548)||\n|[1145235](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145235)|dotnet/runtime|[System.Net.Http.Functional.Tests.HttpClientHandlerTest_Http3.Public_Interop_ExactVersion_BufferContent_Success](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145235\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31594774\u0026resultId=104247)||\n|[1145178](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145178)|dotnet/runtime|[System.ComponentModel.Tests.TypeDescriptorTests.TypeDescriptor_WithDefaultProvider_UnloadsUnloadableTypes](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145178\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31594834\u0026resultId=116753)||\n|[1145187](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145187)|dotnet/runtime|[IcuAppLocal.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145187\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31593784\u0026resultId=228262)|dotnet/runtime#119459|\n|[1145074](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145074)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Intrinsics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145074\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31588944\u0026resultId=109493)|dotnet/runtime#119255|\n|[1144732](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144732)|dotnet/runtime|[System.Runtime.Loader.RefEmitLoadContext.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144732\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31581758\u0026resultId=210129)||\n|[1144671](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144671)|dotnet/runtime|[Workloads-ST-Wasm.Build.Tests.IcuShardingTests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144671\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31573918\u0026resultId=100147)|dotnet/runtime#119409|\n|[1144610](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144610)|dotnet/runtime|[WasmTestOnChrome-ST-System.Text.Json.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144610\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31571816\u0026resultId=100001)||\n|[1144441](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144441)|dotnet/runtime|[NoWebcil-ST-Wasm.Build.Tests.DebugLevelTests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144441\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31566540\u0026resultId=100164)|dotnet/runtime#119543|\n|[1144366](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144366)|dotnet/runtime|[NoWebcil-ST-Wasm.Build.Tests.HttpTests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144366\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31562874\u0026resultId=100169)|dotnet/runtime#119385|\n|[1144140](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144140)|dotnet/runtime|[System.Net.Http.Functional.Tests.HttpClientHandler_RemoteServerTest.GetAsync_SetAutomaticDecompression_ContentDecompressed_Deflate](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144140\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31555520\u0026resultId=104152)||\n|[1144143](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144143)|dotnet/runtime|[System.Runtime.Numerics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144143\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31555468\u0026resultId=104547)||\n|[1143936](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143936)|dotnet/runtime|[Invariant.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143936\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31550144\u0026resultId=228268)|dotnet/runtime#119255|\n|[1143743](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143743)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Intrinsics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143743\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31541450\u0026resultId=109493)|dotnet/runtime#119515|\n|[1143685](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143685)|dotnet/runtime|[Workloads-ST-Wasm.Build.Tests.BuildPublishTests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143685\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31538912\u0026resultId=100176)|dotnet/runtime#118492|\n|[1143398](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143398)|dotnet/runtime|[Microsoft.Extensions.FileProviders.Composite.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143398\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31529722\u0026resultId=228135)|dotnet/runtime#119493|\n|[1143304](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143304)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Intrinsics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143304\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31524910\u0026resultId=109493)|dotnet/runtime#119497|\n|[1143115](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143115)|dotnet/runtime|[System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143115\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31518316\u0026resultId=104548)||\n|[1143117](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143117)|dotnet/runtime|[System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143117\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31518324\u0026resultId=104548)||\n|[1143053](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143053)|dotnet/runtime|[System.Net.WebClient.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143053\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31518232\u0026resultId=164313)||\n|[1142935](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142935)|dotnet/runtime|[System.Security.Cryptography.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142935\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31511354\u0026resultId=210987)|dotnet/runtime#119255|\n|[1142816](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142816)|dotnet/runtime|[Workloads-ST-Wasm.Build.Tests.DownloadThenInitTests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142816\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31508616\u0026resultId=100169)|dotnet/runtime#119477|\n|[1142474](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142474)|dotnet/runtime|[ComInterfaceGenerator.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142474\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31496892\u0026resultId=175765)||\n|[1142430](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142430)|dotnet/runtime|[System.Xml.Linq.Streaming.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142430\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31494164\u0026resultId=228348)||\n|[1142353](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142353)|dotnet/runtime|[ComInterfaceGenerator.Unit.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142353\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31489992\u0026resultId=228146)|dotnet/runtime#119265|\n|[1142373](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142373)|dotnet/runtime|[NoWebcil-ST-Wasm.Build.Tests.InvariantGlobalizationTests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142373\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31489950\u0026resultId=100150)|dotnet/runtime#119409|\n|[1142364](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142364)|dotnet/runtime|[WasmTestOnChrome-ST-System.Text.RegularExpressions.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1142364\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31489850\u0026resultId=100002)||\n|[1141970](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141970)|dotnet/runtime|[System.Net.Http.Functional.Tests.HttpClientHandlerTest_Http3.Public_Interop_ExactVersion_BufferContent_Success](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141970\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31476714\u0026resultId=105011)||\n|[1141887](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141887)|dotnet/runtime|[System.ComponentModel.Tests.TypeDescriptorTests.TypeDescriptor_WithDefaultProvider_UnloadsUnloadableTypes](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141887\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31476682\u0026resultId=121761)||\n|[1141808](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141808)|dotnet/runtime|[ComInterfaceGenerator.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141808\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31472750\u0026resultId=227731)|dotnet/runtime#119265|\n|[1141761](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141761)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Intrinsics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141761\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31469368\u0026resultId=109493)|dotnet/runtime#119052|\n|[1141661](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141661)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141661\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31467430\u0026resultId=102357)|dotnet/runtime#119450|\n|[1141481](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141481)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141481\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31457084\u0026resultId=102445)|dotnet/runtime#119438|\n|[1141458](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141458)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Intrinsics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141458\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31456714\u0026resultId=109493)|dotnet/runtime#119438|\n|[1141437](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141437)|dotnet/runtime|[System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141437\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31456118\u0026resultId=104548)||\n|[1141410](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141410)|dotnet/runtime|[System.ComponentModel.Tests.TypeDescriptorTests.TypeDescriptor_WithCustomProvider_UnloadsUnloadableTypes](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141410\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31456148\u0026resultId=124519)||\n|[1141386](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141386)|dotnet/runtime|[Microsoft.Extensions.Logging.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141386\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31454920\u0026resultId=227334)|dotnet/runtime#119427|\n|[1141245](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141245)|dotnet/runtime|[Common.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141245\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31449624\u0026resultId=228000)||\n|[1141218](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141218)|dotnet/runtime|[JSImportGenerator.Unit.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141218\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31448172\u0026resultId=228256)|dotnet/runtime#119427|\n|[1141182](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141182)|dotnet/runtime|[NoWebcil-ST-Wasm.Build.NativeRebuild.Tests.NoopNativeRebuildTest.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141182\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31447026\u0026resultId=100168)|dotnet/runtime#119426|\n|[1141149](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141149)|dotnet/runtime|[System.Net.Http.Functional.Tests.HttpClientHandlerTest_Http3.Public_Interop_ExactVersion_BufferContent_Success](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141149\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31445860\u0026resultId=104314)||\n|[1141152](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141152)|dotnet/runtime|[System.Net.Http.Functional.Tests.HttpClientHandlerTest_Http3.Public_Interop_ExactVersion_BufferContent_Success](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141152\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31445862\u0026resultId=104314)||\n|[1141107](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141107)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Intrinsics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1141107\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31444058\u0026resultId=109493)||\n|[1140954](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140954)|dotnet/runtime|[async.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140954\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31442798\u0026resultId=105909)|dotnet/runtime#119420|\n|[1140614](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140614)|dotnet/runtime|[WasmTestOnChrome-ST-System.Text.RegularExpressions.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140614\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31426460\u0026resultId=100002)||\n|[1140512](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140512)|dotnet/runtime|[Microsoft.Extensions.Configuration.UserSecrets.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140512\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31424952\u0026resultId=227785)|dotnet/runtime#119397|\n|[1140295](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140295)|dotnet/runtime|[System.Runtime.Numerics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140295\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31418396\u0026resultId=104547)||\n|[1140287](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140287)|dotnet/runtime|[System.Text.Json.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140287\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31418390\u0026resultId=104521)||\n|[1140241](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140241)|dotnet/runtime|[System.ComponentModel.Tests.TypeDescriptorTests.TypeDescriptor_WithCustomProvider_UnloadsUnloadableTypes](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140241\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31418362\u0026resultId=106553)||\n|[1140243](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140243)|dotnet/runtime|[Methodical_d1.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140243\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31417770\u0026resultId=123599)||\n|[1140122](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140122)|dotnet/runtime|[Microsoft.Extensions.Options.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140122\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31414580\u0026resultId=228168)|dotnet/runtime#119374|\n|[1140114](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140114)|dotnet/runtime|[System.ServiceModel.Syndication.Tests.Rfc822DateParsingTests.Rss20ItemFormatter_Read_SingleDigitDay_NormalizedTimeZones](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140114\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31414004\u0026resultId=196050)|dotnet/runtime#119384|\n|[1139145](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139145)|dotnet/runtime|[Wasm.Build.Tests.WasmTemplateTests.RunWithDifferentAppBundleLocations](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139145\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31396338\u0026resultId=100108)|dotnet/runtime#118810|\nDisplaying 100 of 227 results\n#### Summary\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\n|---|---|---|\n|10|67|227|\n\u003c!--Known issue error report end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n\r\n|Build|Definition|Test|Pull Request|\r\n|---|---|---|---|\r\n|[1153978](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153978)|dotnet/runtime|[Microsoft.Extensions.Configuration.Functional.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153978\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31878454\u0026resultId=100015)||\r\n|[1153754](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153754)|dotnet/runtime|[NoWebcil-ST-Wasm.Build.Tests.Blazor.SimpleRunTests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153754\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31878262\u0026resultId=100141)|dotnet/runtime#119923|\r\n|[1153927](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153927)|dotnet/runtime|[IcuAppLocal.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153927\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31877338\u0026resultId=232791)|dotnet/runtime#119930|\r\n|[1153872](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153872)|dotnet/runtime|[System.Net.Http.Functional.Tests.HttpClientHandlerTest_Http3.Public_Interop_ExactVersion_BufferContent_Success](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153872\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31875032\u0026resultId=104278)||\r\n|[1153812](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153812)|dotnet/runtime|[Common.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153812\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31871930\u0026resultId=228239)|dotnet/runtime#119683|\r\n|[1153486](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153486)|dotnet/runtime|[NoWebcil-ST-Wasm.Build.Tests.Blazor.NoopNativeRebuildTest.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153486\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31862754\u0026resultId=100168)||\r\n|[1152976](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152976)|dotnet/runtime|[GC/API/GC/GetTotalAllocatedBytes/GetTotalAllocatedBytes.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152976\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31855020\u0026resultId=112560)||\r\n|[1153100](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153100)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Intrinsics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153100\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31853024\u0026resultId=109493)|dotnet/runtime#119896|\r\n|[1152903](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152903)|dotnet/runtime|[System.Runtime.Numerics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152903\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31848248\u0026resultId=104519)||\r\n|[1152904](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152904)|dotnet/runtime|[System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152904\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31848246\u0026resultId=104548)||\r\n|[1152891](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152891)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Intrinsics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152891\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31848114\u0026resultId=109493)|dotnet/runtime#119885|\r\n|[1152831](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152831)|dotnet/runtime|[MetricOuterLoop1.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152831\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31847762\u0026resultId=171406)||\r\n|[1152766](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152766)|dotnet/runtime|[Invariant.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152766\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31845120\u0026resultId=228466)|dotnet/runtime#98643|\r\n|[1152498](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152498)|dotnet/runtime|[MetricOuterLoop.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152498\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31834400\u0026resultId=228427)|dotnet/runtime#119197|\r\n|[1152425](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152425)|dotnet/runtime|[Microsoft.CSharp.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152425\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31833240\u0026resultId=228800)|dotnet/runtime#119324|\r\n|[1152345](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152345)|dotnet/runtime|[Regression_2.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152345\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31832102\u0026resultId=124688)||\r\n|[1152281](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152281)|dotnet/runtime|[System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152281\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31830350\u0026resultId=210104)|dotnet/runtime#119820|\r\n|[1152247](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152247)|dotnet/runtime|[ComInterfaceGenerator.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152247\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31830382\u0026resultId=174947)||\r\n|[1152154](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152154)|dotnet/runtime|[chrome-DebuggerTests.SteppingTests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152154\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31827170\u0026resultId=100269)||\r\n|[1151922](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151922)|dotnet/runtime|[NoWebcil-ST-Wasm.Build.Tests.WasmTemplateTests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151922\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31821316\u0026resultId=100170)|dotnet/runtime#98643|\r\n|[1151788](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151788)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151788\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31818562\u0026resultId=100002)|dotnet/runtime#119845|\r\n|[1151702](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151702)|dotnet/runtime|[System.Net.Http.Functional.Tests.HttpClientHandlerTest_Http3.Public_Interop_ExactVersion_BufferContent_Success](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151702\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31816262\u0026resultId=104278)||\r\n|[1151691](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151691)|dotnet/runtime|[System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151691\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31816174\u0026resultId=104548)||\r\n|[1151629](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151629)|dotnet/runtime|[TypeGeneratorTests1200-1299.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151629\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31814882\u0026resultId=123791)||\r\n|[1151570](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151570)|dotnet/runtime|[System.Security.Cryptography.Xml.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151570\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31813564\u0026resultId=228083)|dotnet/runtime#119801|\r\n|[1151410](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151410)|dotnet/runtime|[Wasi.Build.Tests.WasiTemplateTests.ConsoleBuildAndRunForDifferentOutputPaths](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1151410\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31806202\u0026resultId=100001)|dotnet/runtime#119829|\r\n|[1149050](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149050)|dotnet/runtime|[Wasm.Build.Tests.Blazor.NativeTests.BlazorWasm_CanRunMonoAOTCross_WithNoTrimming](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149050\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31796406\u0026resultId=100085)|dotnet/runtime#119740|\r\n|[1150720](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150720)|dotnet/runtime|[Wasm.Build.Tests.Blazor.AppsettingsTests.FileInVfs](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150720\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31796454\u0026resultId=100084)|dotnet/runtime#119751|\r\n|[1150230](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150230)|dotnet/runtime|[Wasi.Build.Tests.WasiTemplateTests.ConsoleBuildAndRunForDifferentOutputPaths](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150230\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31796686\u0026resultId=100001)|dotnet/runtime#119791|\r\n|[1150095](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150095)|dotnet/runtime|[NoWebcil-ST-Wasm.Build.NativeRebuild.Tests.SimpleSourceChangeRebuildTest.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150095\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31791218\u0026resultId=100168)|dotnet/runtime#118371|\r\n|[1150815](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150815)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150815\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31790400\u0026resultId=102445)|dotnet/runtime#115766|\r\n|[1150528](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150528)|dotnet/runtime|[System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150528\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31783280\u0026resultId=104548)||\r\n|[1150529](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150529)|dotnet/runtime|[System.Net.Http.Functional.Tests.HttpClientHandlerTest_Http3.Public_Interop_ExactVersion_BufferContent_Success](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150529\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31783302\u0026resultId=104278)||\r\n|[1150449](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150449)|dotnet/runtime|[IcuAppLocal.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150449\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31782694\u0026resultId=177499)||\r\n|[1150335](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150335)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.Compression.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150335\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31776488\u0026resultId=186093)|dotnet/runtime#119798|\r\n|[1150013](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150013)|dotnet/runtime|[System.Globalization.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150013\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31768710\u0026resultId=168370)||\r\n|[1150037](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150037)|dotnet/runtime|[ComInterfaceGenerator.Unit.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150037\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31766652\u0026resultId=228082)|dotnet/runtime#105570|\r\n|[1149873](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149873)|dotnet/runtime|[Microsoft.Extensions.Http.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149873\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31761886\u0026resultId=205563)|dotnet/runtime#119751|\r\n|[1149431](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149431)|dotnet/runtime|[System.Runtime.Numerics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149431\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31751494\u0026resultId=104547)||\r\n|[1148791](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148791)|dotnet/runtime|[Workloads-ST-Wasm.Build.NativeRebuild.Tests.OptimizationFlagChangeTests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148791\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31745552\u0026resultId=100169)|dotnet/runtime#119722|\r\n|[1149222](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149222)|dotnet/runtime|[LibraryImportGenerator.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149222\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31743878\u0026resultId=228106)|dotnet/runtime#119229|\r\n|[1149008](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149008)|dotnet/runtime|[LibraryImportGenerator.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149008\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31735180\u0026resultId=207930)|dotnet/runtime#119599|\r\n|[1148882](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148882)|dotnet/runtime|[Microsoft.Extensions.Options.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148882\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31731076\u0026resultId=168866)||\r\n|[1148920](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148920)|dotnet/runtime|[Microsoft.Extensions.Logging.Console.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148920\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31730126\u0026resultId=100099)||\r\n|[1148163](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148163)|dotnet/runtime|[Workloads-Wasm.Build.Tests.TestAppScenarios.WasmAppBuilderDebugLevelTests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148163\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31712626\u0026resultId=100156)||\r\n|[1148423](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148423)|dotnet/runtime|[System.Net.NameResolution.Functional.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148423\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31712964\u0026resultId=205717)|dotnet/runtime#119627|\r\n|[1148266](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148266)|dotnet/runtime|[Invariant.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148266\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31708120\u0026resultId=219073)|dotnet/runtime#119711|\r\n|[1148286](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148286)|dotnet/runtime|[System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148286\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31707356\u0026resultId=104555)||\r\n|[1148176](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148176)|dotnet/runtime|[MetricOuterLoop1.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148176\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31704726\u0026resultId=228249)||\r\n|[1148139](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148139)|dotnet/runtime|[ComInterfaceGenerator.Unit.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148139\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31703914\u0026resultId=219071)|dotnet/runtime#117996|\r\n|[1148073](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148073)|dotnet/runtime|[Workloads-ST-Wasm.Build.Tests.IcuShardingTests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148073\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31699870\u0026resultId=100168)|dotnet/runtime#119052|\r\n|[1147860](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147860)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Intrinsics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147860\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31690998\u0026resultId=100002)|dotnet/runtime#119662|\r\n|[1147782](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147782)|dotnet/runtime|[Microsoft.Extensions.Caching.Memory.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147782\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31687186\u0026resultId=167951)||\r\n|[1147762](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147762)|dotnet/runtime|[Microsoft.Bcl.Memory.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147762\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31685698\u0026resultId=175039)|dotnet/runtime#118371|\r\n|[1147702](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147702)|dotnet/runtime|[System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147702\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31682784\u0026resultId=104548)||\r\n|[1147690](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147690)|dotnet/runtime|[Microsoft.Extensions.Logging.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147690\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31682744\u0026resultId=104562)||\r\n|[1147676](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147676)|dotnet/runtime|[IcuAppLocal.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147676\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31682764\u0026resultId=170018)||\r\n|[1147677](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147677)|dotnet/runtime|[Microsoft.Extensions.Caching.Memory.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147677\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31682196\u0026resultId=228141)||\r\n|[1147665](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147665)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147665\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31681830\u0026resultId=102445)||\r\n|[1147591](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147591)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Intrinsics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147591\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31678988\u0026resultId=109493)|dotnet/runtime#119679|\r\n|[1147540](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147540)|dotnet/runtime|[Microsoft.Extensions.FileSystemGlobbing.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147540\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31676030\u0026resultId=205689)||\r\n|[1147517](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147517)|dotnet/runtime|[NoWebcil-ST-Wasm.Build.Tests.WasmTemplateTests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147517\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31674958\u0026resultId=100162)||\r\n|[1147468](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147468)|dotnet/runtime|[System.IO.FileSystem.Manual.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147468\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31672010\u0026resultId=100100)||\r\n|[1147410](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147410)|dotnet/runtime|[NoWebcil-ST-Wasm.Build.NativeRebuild.Tests.OptimizationFlagChangeTests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147410\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31671210\u0026resultId=100170)|dotnet/runtime#119673|\r\n|[1147345](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147345)|dotnet/runtime|[System.Runtime.Numerics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147345\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31670058\u0026resultId=104547)||\r\n|[1147319](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147319)|dotnet/runtime|[jit64_1.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147319\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31669362\u0026resultId=118916)|dotnet/runtime#119681|\r\n|[1147306](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147306)|dotnet/runtime|[Workloads-ST-Wasm.Build.Tests.NativeLibraryTests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147306\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31668546\u0026resultId=100158)|dotnet/runtime#119409|\r\n|[1147115](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147115)|dotnet/runtime|[Workloads-ST-Wasm.Build.Tests.SatelliteLoadingTests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147115\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31660538\u0026resultId=100168)||\r\n|[1147118](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147118)|dotnet/runtime|[WasmTestOnChrome-ST-System.Text.RegularExpressions.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147118\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31660656\u0026resultId=100002)||\r\n|[1146531](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146531)|dotnet/runtime|[Common.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146531\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31639772\u0026resultId=227835)|dotnet/runtime#119560|\r\n|[1146444](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146444)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146444\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31636562\u0026resultId=102445)|dotnet/runtime#119637|\r\n|[1146210](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146210)|dotnet/runtime|[System.Net.WebProxy.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146210\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31629328\u0026resultId=219062)|dotnet/runtime#119577|\r\n|[1146200](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146200)|dotnet/runtime|[Microsoft.Bcl.AsyncInterfaces.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146200\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31629104\u0026resultId=228212)|dotnet/runtime#119255|\r\n|[1146185](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146185)|dotnet/runtime|[System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146185\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31628152\u0026resultId=104548)|dotnet/runtime#119523|\r\n|[1146134](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146134)|dotnet/runtime|[ComInterfaceGenerator.Unit.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146134\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31627186\u0026resultId=219071)|dotnet/runtime#119625|\r\n|[1146119](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146119)|dotnet/runtime|[WasmTestOnChrome-ST-System.Text.RegularExpressions.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146119\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31626728\u0026resultId=100002)||\r\n|[1146027](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146027)|dotnet/runtime|[IntrinsicsInSystemPrivateCoreLib.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146027\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31624350\u0026resultId=210117)|dotnet/runtime#119618|\r\n|[1145990](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145990)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145990\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31620258\u0026resultId=102445)|dotnet/runtime#119599|\r\n|[1145959](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145959)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145959\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31619252\u0026resultId=102357)|dotnet/runtime#119608|\r\n|[1145589](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145589)|dotnet/runtime|[Microsoft.Extensions.Configuration.Binder.SourceGeneration.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145589\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31607042\u0026resultId=227420)|dotnet/runtime#119077|\r\n|[1145535](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145535)|dotnet/runtime|[WasmTestOnChrome-ST-System.IO.Compression.ZipFile.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145535\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31606338\u0026resultId=186285)|dotnet/runtime#119589|\r\n|[1145468](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145468)|dotnet/runtime|[System.Threading.Overlapped.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145468\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31603514\u0026resultId=219165)|dotnet/runtime#119584|\r\n|[1145282](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145282)|dotnet/runtime|[tracing/eventpipe/config/name_config_with_pid/name_config_with_pid.cmd](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145282\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31601340\u0026resultId=113293)|dotnet/runtime#119385|\r\n|[1145262](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145262)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Intrinsics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145262\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31596078\u0026resultId=109493)|dotnet/runtime#119265|\r\n|[1145258](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145258)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145258\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31595880\u0026resultId=100002)|dotnet/runtime#119574|\r\n|[1145220](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145220)|dotnet/runtime|[System.Runtime.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145220\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31594818\u0026resultId=104548)||\r\n|[1145235](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145235)|dotnet/runtime|[System.Net.Http.Functional.Tests.HttpClientHandlerTest_Http3.Public_Interop_ExactVersion_BufferContent_Success](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145235\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31594774\u0026resultId=104247)||\r\n|[1145178](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145178)|dotnet/runtime|[System.ComponentModel.Tests.TypeDescriptorTests.TypeDescriptor_WithDefaultProvider_UnloadsUnloadableTypes](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145178\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31594834\u0026resultId=116753)||\r\n|[1145187](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145187)|dotnet/runtime|[IcuAppLocal.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145187\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31593784\u0026resultId=228262)|dotnet/runtime#119459|\r\n|[1145074](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145074)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Intrinsics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1145074\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31588944\u0026resultId=109493)|dotnet/runtime#119255|\r\n|[1144732](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144732)|dotnet/runtime|[System.Runtime.Loader.RefEmitLoadContext.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144732\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31581758\u0026resultId=210129)||\r\n|[1144671](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144671)|dotnet/runtime|[Workloads-ST-Wasm.Build.Tests.IcuShardingTests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144671\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31573918\u0026resultId=100147)|dotnet/runtime#119409|\r\n|[1144610](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144610)|dotnet/runtime|[WasmTestOnChrome-ST-System.Text.Json.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144610\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31571816\u0026resultId=100001)||\r\n|[1144441](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144441)|dotnet/runtime|[NoWebcil-ST-Wasm.Build.Tests.DebugLevelTests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144441\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31566540\u0026resultId=100164)|dotnet/runtime#119543|\r\n|[1144366](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144366)|dotnet/runtime|[NoWebcil-ST-Wasm.Build.Tests.HttpTests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144366\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31562874\u0026resultId=100169)|dotnet/runtime#119385|\r\n|[1144140](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144140)|dotnet/runtime|[System.Net.Http.Functional.Tests.HttpClientHandler_RemoteServerTest.GetAsync_SetAutomaticDecompression_ContentDecompressed_Deflate](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144140\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31555520\u0026resultId=104152)||\r\n|[1144143](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144143)|dotnet/runtime|[System.Runtime.Numerics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1144143\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31555468\u0026resultId=104547)||\r\n|[1143936](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143936)|dotnet/runtime|[Invariant.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143936\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31550144\u0026resultId=228268)|dotnet/runtime#119255|\r\n|[1143743](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143743)|dotnet/runtime|[WasmTestOnChrome-ST-System.Runtime.Intrinsics.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143743\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31541450\u0026resultId=109493)|dotnet/runtime#119515|\r\n|[1143685](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143685)|dotnet/runtime|[Workloads-ST-Wasm.Build.Tests.BuildPublishTests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1143685\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31538912\u0026resultId=100176)|dotnet/runtime#118492|\r\nDisplaying 100 of 230 results\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|6|61|230|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOu0RofQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc60A-4Q",
                                           "createdAt":  "2025-06-30T17:44:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-wasm\u0027: @lewing\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-06-30T17:44:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc60A_B7",
                                           "createdAt":  "2025-06-30T17:44:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-06-30T17:44:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc60Cpx0",
                                           "createdAt":  "2025-06-30T20:30:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jozkee",
                                           "body":  "This is from a preview6 run from Jun 20th, it might\u0027ve been fixed in main already.",
                                           "updatedAt":  "2025-06-30T20:30:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc60TL75",
                                           "createdAt":  "2025-07-01T17:28:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "@akoeplinger do we know what is causing these in general?",
                                           "updatedAt":  "2025-07-01T17:28:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc60waSd",
                                           "createdAt":  "2025-07-03T14:59:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "hm no, this looks like an infrastructure/dnceng issue to me",
                                           "updatedAt":  "2025-07-03T14:59:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc66k91f",
                                           "createdAt":  "2025-07-29T01:12:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AndriySvyryd",
                                           "body":  "We are hitting a similar one: `Unable to pull image mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-22.04-helix-sqlserver-amd64` in efcore\nhttps://dev.azure.com/dnceng-public/public/_build/results?buildId=1106421\u0026view=logs\u0026j=f95328f7-07f5-5106-5c2a-5dc7069f305c\u0026t=e2f3026d-346a-509b-3549-57236476a9cb\nhttps://dev.azure.com/dnceng-public/public/_build/results?buildId=1108065\u0026view=logs\u0026j=f95328f7-07f5-5106-5c2a-5dc7069f305c\u0026t=e2f3026d-346a-509b-3549-57236476a9cb",
                                           "updatedAt":  "2025-07-29T01:12:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc67A9dR",
                                           "createdAt":  "2025-07-30T19:35:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "cc @ericstj",
                                           "updatedAt":  "2025-07-30T19:35:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc67Jj_U",
                                           "createdAt":  "2025-07-31T12:49:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "If you look at the run_client.py log for the workitem you see this:\n\n```\n2025-07-30T19:06:18.967Z\tINFO   \texecutor(114)\trun\tSuccessfully downloaded work item payload\n2025-07-30T19:06:18.967Z\tINFO   \tinterval(67)\tset_abort_after_timer\tSet the timer\u0027s abort_after to 5460 seconds from now: abort_after = 2025-07-30 20:37:18.967591\n2025-07-30T19:06:19.045Z\tINFO   \tdockerhelper(70)\tensure_docker_running\tEnsuring docker is running: Current status=0\n2025-07-30T19:06:19.045Z\tINFO   \tdockerhelper(76)\tensure_docker_running\tDone.\n2025-07-30T19:06:19.046Z\tINFO   \tdockerhelper(22)\tcleanup\tCleaning up Docker on the machine\n2025-07-30T19:06:19.049Z\tINFO   \tdockerhelper(39)\tpull\tPulling image dotnet-buildtools/prereqs:ubuntu-22.04-helix-webassembly from registry mcr.microsoft.com...\n2025-07-30T19:06:20.457Z\tWARNING\tdockerhelper(47)\tpull\tHit exception trying to pull: 404 Client Error: Not Found (\"no such image: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-22.04-helix-webassembly: No such image: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-22.04-helix-webassembly\") Retrying up to 5 times\n2025-07-30T19:06:30.663Z\tWARNING\tdockerhelper(47)\tpull\tHit exception trying to pull: 404 Client Error: Not Found (\"no such image: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-22.04-helix-webassembly: No such image: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-22.04-helix-webassembly\") Retrying up to 5 times\n2025-07-30T19:06:40.876Z\tWARNING\tdockerhelper(47)\tpull\tHit exception trying to pull: 404 Client Error: Not Found (\"no such image: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-22.04-helix-webassembly: No such image: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-22.04-helix-webassembly\") Retrying up to 5 times\n2025-07-30T19:06:51.129Z\tWARNING\tdockerhelper(47)\tpull\tHit exception trying to pull: 404 Client Error: Not Found (\"no such image: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-22.04-helix-webassembly: No such image: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-22.04-helix-webassembly\") Retrying up to 5 times\n2025-07-30T19:07:02.076Z\tWARNING\tdockerhelper(47)\tpull\tHit exception trying to pull: 404 Client Error: Not Found (\"no such image: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-22.04-helix-webassembly: No such image: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-22.04-helix-webassembly\") Retrying up to 5 times\n2025-07-30T19:07:12.086Z\tERROR  \tdockerhelper(54)\tpull\tPull unsuccessful after 5 tries!\n2025-07-30T19:07:12.087Z\tINFO   \tinterval(70)\tcancel_abort_after\tCancel abort_after for timer\n2025-07-30T19:07:12.087Z\tINFO   \texecutor(729)\t_execute_command_in_container\tThe return code was not 0. Sleeping for 30 seconds in case it\u0027s still writing to disk.\n```\n\nSo for some reason it\u0027s getting 404 but this doesn\u0027t make much sense.\n\nI see the same thing for the mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-22.04-helix-sqlserver-amd64 image that @AndriySvyryd mentioned.",
                                           "updatedAt":  "2025-07-31T12:51:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc67OdHw",
                                           "createdAt":  "2025-07-31T19:35:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "@mthalman do you have any idea what would cause these docker pull errors?  The images seem to still be present in https://github.com/dotnet/dotnet-buildtools-prereqs-docker.  I would expect the tags to always exist.",
                                           "updatedAt":  "2025-07-31T19:35:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc67Oms2",
                                           "createdAt":  "2025-07-31T19:53:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEcuspQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "akoeplinger",
                                                                               "createdAt":  "2025-07-31T23:49:57Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "mthalman",
                                           "body":  "Since the tag is correct and the image does exist, it would seem this is a service-level issue. You can write up an issue at https://github.com/microsoft/containerregistry.",
                                           "updatedAt":  "2025-07-31T19:53:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc67RGh9",
                                           "createdAt":  "2025-08-01T01:16:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEcxN5A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "akoeplinger",
                                                                               "createdAt":  "2025-08-01T08:10:13Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkotas",
                                           "body":  "This hits many different images. For example, I just saw `Unable to pull image mcr.microsoft.com/dotnet-buildtools/prereqs:debian-13-helix-amd64`. I have generalized the error message to include all prereq image. Also, I have set retry to true.",
                                           "updatedAt":  "2025-08-01T01:16:45Z"
                                       }
                                   ],
                         "totalCount":  11
                     },
        "title":  "Unable to pull image from mcr.microsoft.com",
        "labels":  [
                       "blocking-clean-ci",
                       "area-Infrastructure",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/117863",
        "createdAt":  "2025-07-20T16:56:20Z",
        "number":  117863,
        "author":  "erikw343",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-28T12:32:10Z",
        "body":  "Hi, in C# I’m trying to load a custom modified System.Private.CoreLib, I modified the Dictionary.cs generic class.\n\nWhen I run my console application, I get:\n\nA fatal error was encountered. The library \u0027hostpolicy.dll\u0027 required to execute the application was not found in \u0027C:\\Program Files\\dotnet\u0027. Failed to run as a self-contained app.\n\nThe application was run as a self-contained app because \u0027C:\\Users\\erikw\\source\\repos\\MainDict2\\MainDict2\\bin\\x64\\Debug\\net9.0\\MainDict2.runtimeconfig.json\u0027 did not specify a framework.\nIf this should be a framework-dependent app, specify the appropriate framework in \u0027C:\\Users\\erikw\\source\\repos\\MainDict2\\MainDict2\\bin\\x64\\Debug\\net9.0\\MainDict2.runtimeconfig.json\u0027.\nThis is my main project file:\n\n\n```\n\u003cProject Sdk=\"Microsoft.NET.Sdk\"\u003e\n\n  \u003cPropertyGroup\u003e\n    \u003cOutputType\u003eExe\u003c/OutputType\u003e\n    \u003cTargetFramework\u003enet9.0\u003c/TargetFramework\u003e\n    \u003cImplicitUsings\u003eenable\u003c/ImplicitUsings\u003e\n    \u003cNullable\u003eenable\u003c/Nullable\u003e\n      \u003cDisableImplicitFrameworkReferences\u003etrue\u003c/DisableImplicitFrameworkReferences\u003e\n      \u003cPlatforms\u003eAnyCPU;x64\u003c/Platforms\u003e\n  \u003c/PropertyGroup\u003e\n\n  \u003cItemGroup\u003e\n    \u003cReference Include=\"Microsoft.Extensions.DotNetDeltaApplier\"\u003e\n      \u003cHintPath\u003e..\\..\\..\\..\\..\\..\\Program Files\\dotnet\\sdk\\9.0.302\\DotnetTools\\dotnet-watch\\9.0.302-servicing.25319.7\\tools\\net9.0\\any\\hotreload\\Microsoft.Extensions.DotNetDeltaApplier.dll\u003c/HintPath\u003e\n    \u003c/Reference\u003e\n    \u003cReference Include=\"System.Collections\"\u003e\n      \u003cHintPath\u003e..\\..\\..\\..\\..\\..\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\9.0.7\\System.Collections.dll\u003c/HintPath\u003e\n    \u003c/Reference\u003e\n    \u003cReference Include=\"System.Collections.Concurrent\"\u003e\n      \u003cHintPath\u003e..\\..\\..\\..\\..\\..\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\9.0.7\\System.Collections.Concurrent.dll\u003c/HintPath\u003e\n    \u003c/Reference\u003e\n    \u003cReference Include=\"System.Console\"\u003e\n      \u003cHintPath\u003e..\\..\\..\\..\\..\\..\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\9.0.7\\System.Console.dll\u003c/HintPath\u003e\n    \u003c/Reference\u003e\n    \u003cReference Include=\"System.IO.Pipes\"\u003e\n      \u003cHintPath\u003e..\\..\\..\\..\\..\\..\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\9.0.7\\System.IO.Pipes.dll\u003c/HintPath\u003e\n    \u003c/Reference\u003e\n    \u003cReference Include=\"System.Linq\"\u003e\n      \u003cHintPath\u003e..\\..\\..\\..\\..\\..\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\9.0.7\\System.Linq.dll\u003c/HintPath\u003e\n    \u003c/Reference\u003e\n    \u003cReference Include=\"System.Net.Http\"\u003e\n      \u003cHintPath\u003e..\\..\\..\\..\\..\\..\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\9.0.7\\System.Net.Http.dll\u003c/HintPath\u003e\n    \u003c/Reference\u003e\n    \u003cReference Include=\"System.Private.CoreLib\"\u003e\n      \u003cHintPath\u003e..\\..\\..\\..\\..\\..\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\9.0.7\\System.Private.CoreLib.dll\u003c/HintPath\u003e\n    \u003c/Reference\u003e\n    \u003cReference Include=\"System.Runtime\"\u003e\n      \u003cHintPath\u003e..\\..\\..\\..\\..\\..\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\9.0.7\\System.Runtime.dll\u003c/HintPath\u003e\n    \u003c/Reference\u003e\n    \u003cReference Include=\"System.Runtime.InteropServices\"\u003e\n      \u003cHintPath\u003e..\\..\\..\\..\\..\\..\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\9.0.7\\System.Runtime.InteropServices.dll\u003c/HintPath\u003e\n    \u003c/Reference\u003e\n    \u003cReference Include=\"System.Text.Encoding.Extensions\"\u003e\n      \u003cHintPath\u003e..\\..\\..\\..\\..\\..\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\9.0.7\\System.Text.Encoding.Extensions.dll\u003c/HintPath\u003e\n    \u003c/Reference\u003e\n    \u003cReference Include=\"System.Threading\"\u003e\n      \u003cHintPath\u003e..\\..\\..\\..\\..\\..\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\9.0.7\\System.Threading.dll\u003c/HintPath\u003e\n    \u003c/Reference\u003e\n  \u003c/ItemGroup\u003e\n\n\u003c/Project\u003e\n```\n\n\nNotice that I loaded all of the required assemblies to make the code compile… such as System.Runtime.dll\n\nNote that I disabled the Implicit Framework References/Assemblies... I did so because I have a custom System.Private.CoreLib with a modified Dictionary.cs generic class. This is all for messing around with an example in my O\u0027Reilly Programming C# 10.0 book. I am just playing around with the code in order to learn...\n\nI tried to import hostpolicy.dll, but it gave me an error:\n\nThe reference is invalid or unsupported.\nAny suggestions? Thanks!",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOumKDyg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc64dvCA",
                                           "createdAt":  "2025-07-20T21:23:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "You should use instructions at https://github.com/dotnet/runtime/blob/main/docs/workflow/testing/using-dev-shipping-packages.md#creating-and-running-the-app-with-your-build to test your app with your private build of the runtime.\n\nThere is no other reliable way to do that. (If there was one, we would have mentioned it in the repo docs.)",
                                           "updatedAt":  "2025-07-20T21:23:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc64dvJd",
                                           "createdAt":  "2025-07-20T21:24:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "Duplicate of https://github.com/dotnet/runtime/issues/117575",
                                           "updatedAt":  "2025-07-20T21:24:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc64d1Zm",
                                           "createdAt":  "2025-07-20T22:22:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "erikw343",
                                           "body":  "Thanks man :)",
                                           "updatedAt":  "2025-07-20T22:22:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc64exU5",
                                           "createdAt":  "2025-07-21T02:49:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "erikw343",
                                           "body":  "Did I follow the instructions correctly, sorry?\n\n```\nC:\\Users\\erikw\\OneDrive\\Documents\\HelloWorld\\bin\\Release\\net9.0\\win-x64\\publish\u003edir\n Volume in drive C is Windows-SSD\n Volume Serial Number is 745E-1B48\n\n Directory of C:\\Users\\erikw\\OneDrive\\Documents\\HelloWorld\\bin\\Release\\net9.0\\win-x64\\publish\n\n07/20/2025  07:52 PM    \u003cDIR\u003e          .\n07/20/2025  07:52 PM    \u003cDIR\u003e          ..\n07/20/2025  07:52 PM               475 HelloWorld.deps.json\n07/20/2025  07:52 PM             4,608 HelloWorld.dll\n07/20/2025  07:52 PM           155,136 HelloWorld.exe\n07/20/2025  07:52 PM            10,680 HelloWorld.pdb\n07/20/2025  07:52 PM               340 HelloWorld.runtimeconfig.json\n               5 File(s)        171,239 bytes\n               2 Dir(s)  3,790,656,286,720 bytes free\n\nC:\\Users\\erikw\\OneDrive\\Documents\\HelloWorld\\bin\\Release\\net9.0\\win-x64\\publish\u003eHelloWorld.exe\nHello World from .NET 9.0.7+3c298d9f00936d651cc47d221762474e25277672.\nThe location of System.Private.CoreLib.dll is \u0027C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\9.0.7\\System.Private.CoreLib.dll\u0027\nHello, World!\n```\n\nThis is my Hello, World console app directory:\n```\nC:\\Users\\erikw\\OneDrive\\Documents\\HelloWorld\u003edir\n Volume in drive C is Windows-SSD\n Volume Serial Number is 745E-1B48\n\n Directory of C:\\Users\\erikw\\OneDrive\\Documents\\HelloWorld\n\n07/20/2025  07:34 PM    \u003cDIR\u003e          .\n07/20/2025  07:16 PM    \u003cDIR\u003e          ..\n07/20/2025  07:35 PM    \u003cDIR\u003e          bin\n07/20/2025  07:32 PM               475 HelloWorld.csproj\n07/20/2025  07:18 PM    \u003cDIR\u003e          LocalNugetCache\n07/20/2025  07:25 PM             1,013 nuget.config\n07/20/2025  07:35 PM    \u003cDIR\u003e          obj\n07/20/2025  07:34 PM               420 Program.cs\n               3 File(s)          1,908 bytes\n               5 Dir(s)  3,790,664,192,000 bytes free\n\nC:\\Users\\erikw\\OneDrive\\Documents\\HelloWorld\u003e\n```\n\nProgram.cs:\n```\n// See https://aka.ms/new-console-template for more information\n\nusing System.Diagnostics;\n\nvar coreAssemblyInfo = FileVersionInfo.GetVersionInfo(typeof(object).Assembly.Location);\nConsole.WriteLine($\"Hello World from .NET {coreAssemblyInfo.ProductVersion}.\");\nConsole.WriteLine($\"The location of System.Private.CoreLib.dll is \u0027{typeof(object).Assembly.Location}\u0027\");\n\nConsole.WriteLine(\"Hello, World!\");\n```\n\nMy runtime release I downloaded from github is from C:\\rt2:\n```\nC:\\rt2\u003edir\n Volume in drive C is Windows-SSD\n Volume Serial Number is 745E-1B48\n\n Directory of C:\\rt2\n\n07/20/2025  06:26 PM    \u003cDIR\u003e          .\n07/20/2025  05:47 PM                20 .clang-format\n07/20/2025  05:47 PM                38 .clang-tidy\n07/20/2025  05:47 PM               576 .CodeQL.yml\n07/20/2025  05:47 PM    \u003cDIR\u003e          .config\n07/20/2025  05:47 PM    \u003cDIR\u003e          .devcontainer\n07/20/2025  05:47 PM             5,041 .dockerignore\n07/20/2025  06:27 PM    \u003cDIR\u003e          .dotnet\n07/20/2025  05:47 PM             7,800 .editorconfig\n07/20/2025  05:47 PM             2,067 .gitattributes\n07/20/2025  05:47 PM    \u003cDIR\u003e          .github\n07/20/2025  05:47 PM             5,556 .gitignore\n07/20/2025  05:47 PM                71 .markdownlint.json\n07/20/2025  05:47 PM             2,525 .vsconfig\n07/20/2025  06:57 PM    \u003cDIR\u003e          artifacts\n07/20/2025  05:47 PM               214 build.cmd\n07/20/2025  05:47 PM               784 Build.proj\n07/20/2025  05:47 PM               853 build.sh\n07/20/2025  05:47 PM               258 CODE-OF-CONDUCT.md\n07/20/2025  05:47 PM            14,787 CONTRIBUTING.md\n07/20/2025  05:47 PM            40,122 Directory.Build.props\n07/20/2025  05:47 PM                92 Directory.Build.rsp\n07/20/2025  05:47 PM            15,065 Directory.Build.targets\n07/20/2025  05:47 PM               234 Directory.Solution.props\n07/20/2025  05:47 PM    \u003cDIR\u003e          docs\n07/20/2025  05:47 PM               800 dotnet.cmd\n07/20/2025  05:47 PM               867 dotnet.sh\n07/20/2025  05:47 PM    \u003cDIR\u003e          eng\n07/20/2025  05:47 PM             1,168 github-merge-flow.jsonc\n07/20/2025  05:47 PM               480 global.json\n07/20/2025  05:47 PM             1,116 LICENSE.TXT\n07/20/2025  05:47 PM             2,455 NuGet.config\n07/20/2025  05:47 PM             2,584 PATENTS.TXT\n07/20/2025  05:47 PM             4,969 README.md\n07/20/2025  05:47 PM             1,042 SECURITY.md\n07/20/2025  05:59 PM    \u003cDIR\u003e          src\n07/20/2025  05:47 PM            74,244 THIRD-PARTY-NOTICES.TXT\n              28 File(s)        185,828 bytes\n               9 Dir(s)  3,790,652,395,520 bytes free\n\nC:\\rt2\u003e\n```\n\nThis is my nuget.config file:\n```\n\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\n\u003cconfiguration\u003e\n\n  \u003cconfig\u003e\n    \u003c!-- Set the \"value\" here to the folder you will be using for your local Nuget cache. --\u003e\n    \u003cadd key=\"globalPackagesFolder\" value=\"C:/Users/erikw/OneDrive/Documents/HelloWorld/LocalNugetCache\" /\u003e\n  \u003c/config\u003e\n\n  \u003cpackageSources\u003e\n    \u003c!--To inherit the global NuGet package sources remove the \u003cclear/\u003e line below --\u003e\n    \u003cclear /\u003e\n\n    \u003c!-- Any packages that might be required, but not present in your build, will have to be taken from the latest NuGet feed. --\u003e\n    \u003c!-- More info on: https://github.com/dotnet/sdk#installing-the-sdk --\u003e\n    \u003cadd key=\"dotnet9\" value=\"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet9/nuget/v3/index.json\" /\u003e\n\n    \u003c!-- Set this path to where your Shipping Artifacts are located. Note that we are assuming a \u0027Debug\u0027 build in this example. --\u003e\n    \u003cadd key=\"local runtime\" value=\"C:/rt2/artifacts/packages/Debug/Shipping\" /\u003e\n  \u003c/packageSources\u003e\n\n\u003c/configuration\u003e\n```\n\nThe LocalNugetCache folder is empty...\n```\nC:\\Users\\erikw\\OneDrive\\Documents\\HelloWorld\\LocalNugetCache\u003edir\n Volume in drive C is Windows-SSD\n Volume Serial Number is 745E-1B48\n\n Directory of C:\\Users\\erikw\\OneDrive\\Documents\\HelloWorld\\LocalNugetCache\n\n07/20/2025  07:18 PM    \u003cDIR\u003e          .\n07/20/2025  07:34 PM    \u003cDIR\u003e          ..\n               0 File(s)              0 bytes\n               2 Dir(s)  3,790,651,191,296 bytes free\n```\n\n\n\nThis is my HelloWorld.csproj file:\n\n```\n\u003cProject Sdk=\"Microsoft.NET.Sdk\"\u003e\n\n  \u003cPropertyGroup\u003e\n    \u003cOutputType\u003eExe\u003c/OutputType\u003e\n    \u003cTargetFramework\u003enet9.0\u003c/TargetFramework\u003e\n    \u003cImplicitUsings\u003eenable\u003c/ImplicitUsings\u003e\n    \u003cNullable\u003eenable\u003c/Nullable\u003e\n  \u003c/PropertyGroup\u003e\n\n\u003cItemGroup\u003e\n  \u003c!-- At the time of writing, \u002710.0.0-dev\u0027 is the version of the runtime repo\u0027s shipping packages. --\u003e\n  \u003cFrameworkReference Update=\"Microsoft.NETCore.App\" RuntimeFrameworkVersion=\"9.0.7\" /\u003e\n\u003c/ItemGroup\u003e\n\n\u003c/Project\u003e\n```\n\nI don\u0027t know if I am using the newly compiled dotnet runtime (from github), or just the one that is installed by default with VS 2022?\nCan you guys tell me if I setup all this stuff correctly or not?\nI want to have the runtime from C:\\rt2 to be installed!\n\nThanks,\nErik W.\n",
                                           "updatedAt":  "2025-07-21T03:00:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc64fXuB",
                                           "createdAt":  "2025-07-21T05:11:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e Directory of C:\\Users\\erikw\\OneDrive\\Documents\\HelloWorld\\bin\\Release\\net9.0\\win-x64\\publish\n\nThere should be a lot more files in this directory, including System.Private.CoreLib.dll with your changes.\n\nThe instructions have a bug. I have submitted a fix https://github.com/dotnet/runtime/pull/117874 . Could you please re-run `dotnet publish --self-contained` to see whether it is going to fix the problem?",
                                           "updatedAt":  "2025-07-21T05:11:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc64focS",
                                           "createdAt":  "2025-07-21T05:52:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "erikw343",
                                           "body":  "Yes, I tried that, and I got some error messages!\n\n```\nC:\\Users\\erikw\\OneDrive\\Documents\\HelloWorld\u003edotnet publish --self-contained\n    C:\\Users\\erikw\\OneDrive\\Documents\\HelloWorld\\HelloWorld.csproj : error NU1102:\n      Unable to find package Microsoft.WindowsDesktop.App.Runtime.win-x64 with version (= 9.0.7)\n        - Found 597 version(s) in dotnet9 [ Nearest version: 10.0.0-alpha.1.24414.4 ]\n        - Found 0 version(s) in C:\\Program Files\\dotnet\\library-packs\n        - Found 0 version(s) in local runtime\n    C:\\Users\\erikw\\OneDrive\\Documents\\HelloWorld\\HelloWorld.csproj : error NU1102:\n      Unable to find package Microsoft.AspNetCore.App.Runtime.win-x64 with version (= 9.0.7)\n        - Found 1149 version(s) in dotnet9 [ Nearest version: 10.0.0-alpha.1.24416.1 ]\n        - Found 0 version(s) in C:\\Program Files\\dotnet\\library-packs\n        - Found 0 version(s) in local runtime\n\nRestore failed with 2 error(s) in 3.3s\n```\n\nThis is my publish directory also:\n```\nC:\\Users\\erikw\\OneDrive\\Documents\\HelloWorld\\bin\\Release\\net9.0\\win-x64\\publish\u003edir\n Volume in drive C is Windows-SSD\n Volume Serial Number is 745E-1B48\n\n Directory of C:\\Users\\erikw\\OneDrive\\Documents\\HelloWorld\\bin\\Release\\net9.0\\win-x64\\publish\n\n07/20/2025  07:52 PM    \u003cDIR\u003e          .\n07/20/2025  07:52 PM    \u003cDIR\u003e          ..\n07/20/2025  07:52 PM               475 HelloWorld.deps.json\n07/20/2025  07:52 PM             4,608 HelloWorld.dll\n07/20/2025  07:52 PM           155,136 HelloWorld.exe\n07/20/2025  07:52 PM            10,680 HelloWorld.pdb\n07/20/2025  07:52 PM               340 HelloWorld.runtimeconfig.json\n               5 File(s)        171,239 bytes\n               2 Dir(s)  3,761,493,147,648 bytes free\n```",
                                           "updatedAt":  "2025-07-21T05:55:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc64mBc5",
                                           "createdAt":  "2025-07-21T14:15:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "Hmm, looks like these instructions are completely broken. There is a link to alternative instructions listed at the top of the doc:\n\nhttps://github.com/dotnet/runtime/blob/main/docs/workflow/testing/using-your-build-with-installed-sdk.md#create-a-sample-self-contained-application\n\nCould you please try those?",
                                           "updatedAt":  "2025-07-21T14:15:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc64nwMr",
                                           "createdAt":  "2025-07-21T16:24:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "erikw343",
                                           "body":  "Ok thanks I will try that :)",
                                           "updatedAt":  "2025-07-21T16:24:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc64zgdL",
                                           "createdAt":  "2025-07-22T02:24:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "erikw343",
                                           "body":  "I ran HelloWorld2.exe in the publish directory (C:\\Users\\erikw\\OneDrive\\Documents\\HelloWorld2\\bin\\Release\\net9.0\\win-x64\\publish) after copying over the System.Private.CoreLib.dll from the dotnet runtime compilation folder (C:\\rt3\\artifacts\\bin\\coreclr\\windows.x64.Debug\\) to that previous publish directory. I then got this error message:\n\nWhat is the cause of this error message? Do I have to copy over other assemblies as well? Thanks! :)\n\n```\nC:\\Users\\erikw\\OneDrive\\Documents\\HelloWorld2\\bin\\Release\\net9.0\\win-x64\\publish\u003eHelloWorld2.exe\nFatal error. Internal CLR error. (0x80131506)\n   at System.Runtime.CompilerServices.CastHelpers.StelemRef_Helper_NoCacheLookup(System.Object ByRef, Void*, System.Object)\n   at System.Runtime.CompilerServices.CastHelpers.StelemRef_Helper(System.Object ByRef, Void*, System.Object)\n   at System.Runtime.CompilerServices.CastHelpers.StelemRef(System.Object[], IntPtr, System.Object)\n   at System.RuntimeType+ListBuilder`1[[System.__Canon, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].ToArray()\n   at System.RuntimeType+RuntimeTypeCache+MemberInfoCache`1[[System.__Canon, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].PopulateConstructors(Filter)\n   at System.RuntimeType+RuntimeTypeCache+MemberInfoCache`1[[System.__Canon, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].GetListByName(Char*, Int32, Byte*, Int32, MemberListType, CacheType)\n   at System.RuntimeType+RuntimeTypeCache+MemberInfoCache`1[[System.__Canon, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Populate(System.String, MemberListType, CacheType)\n   at System.RuntimeType+RuntimeTypeCache+MemberInfoCache`1[[System.__Canon, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].GetMemberList(MemberListType, System.String, CacheType)\n   at System.RuntimeType+RuntimeTypeCache.GetMemberList[[System.__Canon, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](MemberInfoCache`1\u003cSystem.__Canon\u003e ByRef, MemberListType, System.String, CacheType)\n   at System.RuntimeType+RuntimeTypeCache.GetConstructorList(MemberListType, System.String)\n   at System.RuntimeType.GetConstructorCandidates(System.String, System.Reflection.BindingFlags, System.Reflection.CallingConventions, System.Type[], Boolean)\n   at System.RuntimeType.GetConstructorImpl(System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])\n   at System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])\n   at System.RuntimeTypeHandle.CreateInstanceForAnotherGenericParameter(System.RuntimeType, System.RuntimeType)\n   at System.Collections.Generic.ComparerHelpers.CreateDefaultEqualityComparer(System.Type)\n   at System.Collections.Generic.EqualityComparer`1[[System.__Canon, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]..cctor()\n   at System.Collections.Generic.EqualityComparer`1[[System.__Canon, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].get_Default()\n   at System.Collections.Generic.Dictionary`2[[System.__Canon, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]..ctor(Int32, System.Collections.Generic.IEqualityComparer`1\u003cSystem.__Canon\u003e)\n   at System.Diagnostics.Tracing.EventListener.Validate()\n   at System.Diagnostics.Tracing.EventListener.AddEventSource(System.Diagnostics.Tracing.EventSource)\n   at System.Diagnostics.Tracing.EventSource.Initialize(System.Guid, System.String, System.String[])\n   at System.Diagnostics.Tracing.EventSource..ctor(System.Guid, System.String, System.Diagnostics.Tracing.EventSourceSettings, System.String[])\n   at System.Diagnostics.Tracing.NativeRuntimeEventSource..ctor()\n   at System.Diagnostics.Tracing.NativeRuntimeEventSource..cctor()\n   at System.Diagnostics.Tracing.EventSource.InitializeDefaultEventSources()\n\nC:\\Users\\erikw\\OneDrive\\Documents\\HelloWorld2\\bin\\Release\\net9.0\\win-x64\\publish\u003e\n```\n\nThis is my program.cs file:\n\n```\nusing System.Diagnostics;\n\nvar coreAssemblyInfo = FileVersionInfo.GetVersionInfo(typeof(object).Assembly.Location);\nConsole.WriteLine($\"Hello World from .NET {coreAssemblyInfo.ProductVersion}.\");\nConsole.WriteLine($\"The location of System.Private.CoreLib.dll is \u0027{typeof(object).Assembly.Location}\u0027\");\n```",
                                           "updatedAt":  "2025-07-22T03:08:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc640AE0",
                                           "createdAt":  "2025-07-22T03:11:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e after copying over the System.Private.CoreLib.dll from the dotnet runtime compilation folder\n\nYou have to copy over System.Private.CoreLib.dll, coreclr.dll and clrjit.dll. These .dlls are tightly coupled and all of them need to come from the same build.",
                                           "updatedAt":  "2025-07-22T03:11:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc640I0u",
                                           "createdAt":  "2025-07-22T03:27:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "erikw343",
                                           "body":  "Ok I tried that and it worked.",
                                           "updatedAt":  "2025-07-22T03:27:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc65Azq7",
                                           "createdAt":  "2025-07-22T17:30:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "erikw343",
                                           "body":  "I am trying to print to the console in my Dictionary.cs class.  In TryGetValue(...), I added Debug.WriteLine(\"test123\"); I then published this way:\n```\npublish -c debug --self-contained\n```\n\nI copied over the required assemblies next...\n\nI then ran HelloWorld.exe and had the program pause at the beginning, then I attached the debugger. I did not see any debug outputs in my debug window, there was no test123 in this console debug window.\n\nI also tried Console.WriteLine(\"test123\"), but that did not work either.\n\nI tried writing to a file, like:\n```\nFile.AppendAllText(\"C:\\\\test.txt\", \"test123\");\n```\n... and it was complaining that you cannot output to a file with serialization...\n\nI was thinking about writing to a database...?\n\nCan you guys help me with this issue?\n\nThis is my source code program.cs:\n```\n// See https://aka.ms/new-console-template for more information\n\nusing System;\nusing System.Collections.Generic;\nusing System.Diagnostics;\n\nConsole.WriteLine(\"Press any key to continue...\");\nConsole.ReadKey();\n\nvar coreAssemblyInfo = FileVersionInfo.GetVersionInfo(typeof(object).Assembly.Location);\nConsole.WriteLine($\"Hello World from .NET {coreAssemblyInfo.ProductVersion}.\");\nConsole.WriteLine($\"The location of System.Private.CoreLib.dll is \u0027{typeof(object).Assembly.Location}\u0027\");\n\nConsole.WriteLine(\"Hello, World!\");\n\nDictionary\u003cstring, int\u003e myDict = new Dictionary\u003cstring, int\u003e();\nmyDict.Add(\"erik\", 123);\n\nint testInt = 0;\nmyDict.TryGetValue(\"erik\", out testInt);\nConsole.WriteLine(\"testInt: \" + testInt);\n```\n\nThanks,\nErik W.",
                                           "updatedAt":  "2025-07-22T17:33:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc65A5JG",
                                           "createdAt":  "2025-07-22T17:35:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e I added Debug.WriteLine(\"test123\");\n\nTry `Internal.Console.WriteLine(\"test123\");\". Regular Console with all its features is not available in CoreLib.",
                                           "updatedAt":  "2025-07-22T17:35:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc65CH8t",
                                           "createdAt":  "2025-07-22T18:50:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "erikw343",
                                           "body":  "I put that in all of the Dictionary.cs constructors, and that didn\u0027t work or show up. I noticed when I built the dotnet runtime, that it printed out a bunch of test123 lines although. Is there any other way to test this?",
                                           "updatedAt":  "2025-07-22T18:50:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc65CMnO",
                                           "createdAt":  "2025-07-22T18:53:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "You may have stale System.Private.Corelib.dll without your changes. Try deleting System.Private.Corelib.dll in your build output, rebuilding again, and copying the file over to your app again.",
                                           "updatedAt":  "2025-07-22T18:53:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc65CWzt",
                                           "createdAt":  "2025-07-22T18:59:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "erikw343",
                                           "body":  "OK thanks a million man! it worked:\n```\nC:\\Users\\erikw\\OneDrive\\Documents\\HelloWorld2\\bin\\Debug\\net9.0\\win-x64\\publish\u003eHelloWorld2.exe\nDEBUG4\nDEBUG2\nABC 123...\nABC 123...\nABC 123...\nDEBUG4\nDEBUG1\nDEBUG4\nDEBUG1\nDEBUG4\nDEBUG1\nDEBUG4\nDEBUG1\nABC 123...\nABC 123...\nABC 123...\nABC 123...\nABC 123...\nPress any key to continue...\n Hello World from .NET 9.0.7.\nThe location of System.Private.CoreLib.dll is \u0027C:\\Users\\erikw\\OneDrive\\Documents\\HelloWorld2\\bin\\Debug\\net9.0\\win-x64\\publish\\System.Private.CoreLib.dll\u0027\nHello, World!\nDEBUG4\nDEBUG1\nABC 123...\ntestInt: 123\n\nC:\\Users\\erikw\\OneDrive\\Documents\\HelloWorld2\\bin\\Debug\\net9.0\\win-x64\\publish\u003e\n```\n",
                                           "updatedAt":  "2025-07-22T19:29:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc65Dj-f",
                                           "createdAt":  "2025-07-22T20:23:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "erikw343",
                                           "body":  "Is there any reason why I am getting these debug statements before my Main method executes? (before Press any key to continue...)?\nDo you know what C# file is causing this or how to remove those statements?\nThanks,\nErik W.",
                                           "updatedAt":  "2025-07-22T20:23:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc65Dvrz",
                                           "createdAt":  "2025-07-22T20:40:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "Dictionary is used by the runtime implementation itself that runs before your Main method.\n\nYou would have to create two copies of the Dictionary code - one that has no modifications and second that has your changes - and then make sure that the runtime implementation itself uses the unmodified copy. It is along the lines of what was suggested in https://github.com/dotnet/runtime/issues/117575#issuecomment-3067079250",
                                           "updatedAt":  "2025-07-22T20:41:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc65D1Bw",
                                           "createdAt":  "2025-07-22T20:49:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "erikw343",
                                           "body":  "Cool thanks!\n\nJust wondering can you explain how \n \ndotnet publish —self-contained \n\n… works?\n\nWhat’s the difference between that and  normally compiled app?\n\nCan you instead build a self contained app instead of publishing?",
                                           "updatedAt":  "2025-07-22T21:20:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc65KLTI",
                                           "createdAt":  "2025-07-23T08:21:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "huoyaoyuan",
                                           "body":  "An application needs to be executed with the runtime. When you build an application, you are only building itself. Then IDE or `dotnet run` command will follow the \"standard\" process to load the runtime and execute the application. The CoreLib, coreclr.dll etc and other standard libraries are parts of the runtime.\n\n\"Publishing\" refers to the action to make a complete copy of files that executes the application. There are two major flavors for publishing. [Framework-dependent](https://learn.microsoft.com/dotnet/core/deploying/#publish-framework-dependent) (the default) means the published executable will locate the runtime from machine-wide installation. [Self-contained](https://learn.microsoft.com/dotnet/core/deploying/#publish-self-contained) means the runtime will be copied locally, which you can modify.\n\n\u003e What’s the difference between that and normally compiled app?\n\nIn short, a \"compiled\" app can\u0027t run itself. It needs to be executed by some tool. A published app is executable itself.\n\n\u003e Can you instead build a self contained app instead of publishing?\n\nSelf-contained is concept at the publishing step.\n\nModifying the standard library or runtime is not a recommended task without these basic knowledges. It needs advanced and specific knowledge about how the runtime works.",
                                           "updatedAt":  "2025-07-23T08:21:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc658KRN",
                                           "createdAt":  "2025-07-25T17:11:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "erikw343",
                                           "body":  "I ended up cloning Dictionary. The new Dictionary class is now called Dictionary2.  The only problem that I have is when I compile or build, I get compiler errors:\ndotnet build -c debug --self-contained\n\n```\nC:\\Users\\erikw\\OneDrive\\Documents\\HelloWorld2\u003edotnet build -c debug --self-contained\nRestore complete (0.4s)\n  HelloWorld2 failed with 6 error(s) (0.6s)\n    C:\\Users\\erikw\\OneDrive\\Documents\\HelloWorld2\\Program.cs(34,9): error CS0246: The type or namespace name \u0027Dictionary2\u003c,\u003e\u0027 could not be found (are you missing a using directive or an assembly reference?)\n    C:\\Users\\erikw\\OneDrive\\Documents\\HelloWorld2\\Program.cs(34,47): error CS0246: The type or namespace name \u0027Dictionary2\u003c,\u003e\u0027 could not be found (are you missing a using directive or an assembly reference?)\n    C:\\Users\\erikw\\OneDrive\\Documents\\HelloWorld2\\Program.cs(37,9): error CS0246: The type or namespace name \u0027Dictionary2\u003c,\u003e\u0027 could not be found (are you missing a using directive or an assembly reference?)\n    C:\\Users\\erikw\\OneDrive\\Documents\\HelloWorld2\\Program.cs(37,53): error CS0246: The type or namespace name \u0027Dictionary2\u003c,\u003e\u0027 could not be found (are you missing a using directive or an assembly reference?)\n    C:\\Users\\erikw\\OneDrive\\Documents\\HelloWorld2\\Program.cs(40,9): error CS0246: The type or namespace name \u0027Dictionary2\u003c,\u003e\u0027 could not be found (are you missing a using directive or an assembly reference?)\n    C:\\Users\\erikw\\OneDrive\\Documents\\HelloWorld2\\Program.cs(40,64): error CS0246: The type or namespace name \u0027Dictionary2\u003c,\u003e\u0027 could not be found (are you missing a using directive or an assembly reference?)\n\nBuild failed with 6 error(s) in 1.2s\n```\n\nThis is my source code for Program.cs:\n```\n// See https://aka.ms/new-console-template for more information\n\nusing System;\nusing System.Collections.Generic;\nusing System.Diagnostics;\n\npublic class MyTestClass\n{\n    int myValue;\n\n    public MyTestClass()\n    {\n        myValue = 456;\n    }\n\n    public int MyValue\n    {\n        get { return myValue; }\n    }\n}\npublic class HelloWorld2\n{\n    public static void Main(string[] args)\n    {\n        Console.WriteLine(\"Press any key to continue...\");\n        Console.ReadKey();\n\n        var coreAssemblyInfo = FileVersionInfo.GetVersionInfo(typeof(object).Assembly.Location);\n        Console.WriteLine($\"Hello World from .NET {coreAssemblyInfo.ProductVersion}.\");\n        Console.WriteLine($\"The location of System.Private.CoreLib.dll is \u0027{typeof(object).Assembly.Location}\u0027\");\n\n        Console.WriteLine(\"Hello, World!\");\n\n        Dictionary2\u003cstring, int\u003e myDict = new Dictionary2\u003cstring, int\u003e();\n        myDict.Add(\"erik\", 123);\n\n        Dictionary2\u003cstring, string\u003e myStrDict = new Dictionary2\u003cstring, string\u003e();\n        myStrDict.Add(\"tom\", \"testvalue\");\n\n        Dictionary2\u003cstring, MyTestClass\u003e myTestClassDict = new Dictionary2\u003cstring, MyTestClass\u003e();\n        myTestClassDict.Add(\"kona\", new MyTestClass());\n\n        int testInt = -1;\n        Console.WriteLine(\"erik result: \" + myDict.TryGetValue(\"erik\", out testInt));\n        Console.WriteLine(\"testInt: \" + testInt);\n\n        Console.WriteLine(\"blank result: \" + myDict.TryGetValue(\"blank\", out testInt));\n        Console.WriteLine(\"testInt: \" + testInt);\n\n        string testStr = String.Empty;\n        Console.WriteLine(\"blank result str dict: \" + myStrDict.TryGetValue(\"blank\", out testStr));\n        Console.WriteLine(\"testStr:\");\n        Console.WriteLine(testStr);\n\n        Console.WriteLine(\"is testStr null?:\");\n        Console.WriteLine(testStr == null);\n\n        MyTestClass myTestClassObj = new MyTestClass();\n        Console.WriteLine(\"blank result test class: \" + myTestClassDict.TryGetValue(\"blank\", out myTestClassObj));\n\n        Console.WriteLine(\"is my test class obj null?:\");\n        Console.WriteLine(myTestClassObj == null);\n    }\n}\n```\n\nThe issue is that when I build self contained, it is pulling down the actual standard Dictionary.cs library that does not include Dictionary2.\nSo, when I build, it is missing Dictionary2.  I tried copying over the dlls from:\n\nC:\\rt4\\artifacts\\bin\\coreclr\\windows.x64.Debug\n\n... but, then when I rebuilt the project, it overwrote the custom dlls with the standard ones.\n\nThis is a catch 22 issue...\n\nDo you understand?\nIs there a way to fix this?\n\nThanks,\nErik W.",
                                           "updatedAt":  "2025-07-25T17:35:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc658zsu",
                                           "createdAt":  "2025-07-25T17:44:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "The public types and methods of the core libraries are compiled into reference assemblies that are separate from the implementation. (Reference assemblies are like header files in C - if you are familiar with C.) The source for System.Collections reference assembly that includes Dictionary is here: https://github.com/dotnet/runtime/blob/main/src/libraries/System.Collections/ref/System.Collections.cs#L613\n\nWhen you are compiling your HelloWorld2 app, it uses the unmodified reference assemblies that do not include your Dictionary2. So in order to let your app to use Dictionary2, you would have to add Dictionary2 to the System.Collections reference assembly, compile it, and then overwrite the reference assembly in the SDK with your modified copy. The reference assembly is at path like `packs\\Microsoft.NETCore.App.Ref\\9.0.7\\ref\\net9.0\\System.Collections.dll`.",
                                           "updatedAt":  "2025-07-25T17:44:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc659Hs6",
                                           "createdAt":  "2025-07-25T17:56:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "erikw343",
                                           "body":  "Thanks!",
                                           "updatedAt":  "2025-07-25T17:56:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc66Btwk",
                                           "createdAt":  "2025-07-26T02:21:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "erikw343",
                                           "body":  "I am having trouble doing what you said…\n\nI tried adding project references to my custom compiled library dlls, but I got error messages!\n\nIs there any way to create a nugget.config file that downloads all my custom library assemblies into the project as it builds or publishes?\n\nI want to do that instead of having all the standard dlls to be downloaded. Because my custom dlls have Dictionary2, but the default standard ones do not.",
                                           "updatedAt":  "2025-07-26T02:28:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc66B1K_",
                                           "createdAt":  "2025-07-26T02:44:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e Is there any way to create a nugget.config file that downloads all my custom library assemblies into the project as it builds or publishes?\n\nThere is no easy way to do this. It is the approach that we have started with (https://github.com/dotnet/runtime/issues/117863#issuecomment-3094802560). It is more complicated than just copying files around. It requires you to build multiple packages and combine them officially release package from ASP.NET and other repos.",
                                           "updatedAt":  "2025-07-26T02:44:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc66Cik4",
                                           "createdAt":  "2025-07-26T04:25:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "huoyaoyuan",
                                           "body":  "It\u0027s suggested to copy `Dictionary` (and its dependency) into your project, not duplicating it in standard library. Adding a new type in standard library is much more complex than modifying existing one.",
                                           "updatedAt":  "2025-07-26T04:25:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc66DBaA",
                                           "createdAt":  "2025-07-26T06:14:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "erikw343",
                                           "body":  "Ok thanks I will try that now",
                                           "updatedAt":  "2025-07-26T06:14:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc66MSVF",
                                           "createdAt":  "2025-07-27T02:27:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "erikw343",
                                           "body":  "I’m going in circles trying to compile my Dictionary class. \n\nI tried coping Dictionary into my local project, but it was a nightmare of dependency errors.\nI added Dictionary2 class to the custom runtime now instead.  The build.cmd -s clr+libs+packs+host compiles without errors.  I am just trying to get my HelloWorld program to pick up Dictionary2...\n\n\u003e When you are compiling your HelloWorld2 app, it uses the unmodified reference assemblies that do not include your Dictionary2. So in order to let your app to use Dictionary2, you would have to add Dictionary2 to the System.Collections reference assembly, compile it, and then overwrite the reference assembly in the SDK with your modified copy. The reference assembly is at path like packs\\Microsoft.NETCore.App.Ref\\9.0.7\\ref\\net9.0\\System.Collections.dll.\n\nWhere in my custom runtime directory is the System.Collections.dll located? I want to copy from this location to my HelloWorld project to where my assemblies are. I did a search in my \\rt5 directory for System.Collections.dll, and I had multiple locations come up. And, where do I copy this custom dll to?\n\nDo I have to compile the system.collections.generic project individually? I don’t see Dictionary or Dictionary2 in dot net peek?\n\nDo any of you guys know where the project or solution that contains the Dictionary.cs source code file?",
                                           "updatedAt":  "2025-07-27T03:48:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc66MmZ_",
                                           "createdAt":  "2025-07-27T04:14:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "huoyaoyuan",
                                           "body":  "\u003e I tried coping Dictionary into my local project, but it was a nightmare of dependency errors.\n\nAs mentioned in https://github.com/dotnet/runtime/issues/117575#issuecomment-3067079250 , you should cut parts you don\u0027t need, instead of trying to copy all the dependencies. This is the only approach that fits the knowledge of beginners.\n\n\u003e \u003e When you are compiling your HelloWorld2 app, it uses the unmodified reference assemblies that do not include your Dictionary2. So in order to let your app to use Dictionary2, you would have to add Dictionary2 to the System.Collections reference assembly, compile it, and then overwrite the reference assembly in the SDK with your modified copy. The reference assembly is at path like packs\\Microsoft.NETCore.App.Ref\\9.0.7\\ref\\net9.0\\System.Collections.dll.\n\nI really think this is out of the knowledge set of beginners. They have to first know how the SDK works with reference assemblies, etc. This process is even a headache for experienced users.\n\n\u003e Where in my custom runtime directory is the System.Collections.dll located? I want to copy from this location to my HelloWorld project to where my assemblies are. I did a search in my \\rt5 directory for System.Collections.dll, and I had multiple locations come up. And, where do I copy this custom dll to?\n\nThe reference assembly is at `artifacts\\bin\\ref\\net10.0`. The installed equivalent is at `C:\\Program Files\\dotnet\\packs\\Microsoft.NETCore.App.Ref\\9.0.7\\ref\\net9.0`. It\u0027s not recommended to modify your installation.\n\n\u003e Do I have to compile the system.collections.generic project individually? I don’t see Dictionary or Dictionary2 in dot net peek?\n\nNo. In runtime repository you won\u0027t often build individual projects. The build script takes care of additional tasks.\n\n\u003e Do any of you guys know where the project or solution that contains the Dictionary.cs source code file?\n\nThe CoreLib is the only project containing implementation of Dictionary. To get things worked, the implementation is not sufficient.\n\nOut of curiosity, what task are you trying to achieve by modifying the source code of Dictionary?",
                                           "updatedAt":  "2025-07-27T04:14:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc66Mu0w",
                                           "createdAt":  "2025-07-27T04:38:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "erikw343",
                                           "body":  "With .net Peek, I noticed that the Sysyem.Collections.all has Dictionary2 and Dictionary also… \nFor some reason my main method does not pick up Dictionary2\n\nI have an example in my Programming C# Book, and I need to modify Dictionary class to understand the example better…. This is on the topic of nullables…\n",
                                           "updatedAt":  "2025-07-27T04:38:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc66M-fa",
                                           "createdAt":  "2025-07-27T05:19:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "huoyaoyuan",
                                           "body":  "\u003e For some reason my main method does not pick up Dictionary2\n\nYou need to setup both reference and implementation assembly.\n\n\u003e I have an example in my Programming C# Book, and I need to modify Dictionary class to understand the example better\n\nThis is not a good approach. Modifying standard library is very advanced topic. To understand the behavior of dictionary, consider to debug over the source code (https://learn.microsoft.com/aspnet/core/test/debug-aspnetcore-source).\n\nEven this is not a simple task for beginners. Dictionary is optimized with a lot of tricks.",
                                           "updatedAt":  "2025-07-27T05:19:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc66M_Zj",
                                           "createdAt":  "2025-07-27T05:23:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "erikw343",
                                           "body":  "I’m thinking that if I cannot figure this out that I just create a basic dictionary wrapper class…\n\nCan you elaborate on the reference vs implementation assemblies? I want to know about this \n\nIs there any resources available to learn about this topic?\n\n I found this:\nhttps://www.youtube.com/watch?v=jK8jYQ3ZKiI\n\nI looked up this on github:\nhttps://github.com/search?q=repo%3Adotnet%2Fruntime+PTR_Dictionary\u0026type=code\n\nDo you guys know what this path is for?:\n\\rt5\\src\\coreclr\\vm\\\n\nI’m going to read this too:\nhttps://ecma-international.org/wp-content/uploads/ECMA-335_6th_edition_june_2012.pdf\n\nI noticed that public class Dictionary had these decorators on it:\n```\n[DebuggerTypeProxy(typeof(IDictionaryDebugView\u003c,\u003e))]\n    [DebuggerDisplay(\"Count = {Count}\")]\n    [Serializable]\n    [TypeForwardedFrom(\"mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\")]\n    public class Dictionary\u003cTKey, TValue\u003e : IDictionary\u003cTKey, TValue\u003e, IDictionary, IReadOnlyDictionary\u003cTKey, TValue\u003e, ISerializable, IDeserializationCallback where TKey : notnull\n    {\n```\n\nWhat decorators belong on Dictionary2 then?\n\nIs there anywhere in the docs that describes how to do what I want?\nI’m reading the docs now, maybe I can find some info",
                                           "updatedAt":  "2025-07-28T04:33:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc66YoPK",
                                           "createdAt":  "2025-07-28T12:31:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "huoyaoyuan",
                                           "body":  "\u003e Can you elaborate on the reference vs implementation assemblies? I want to know about this\n\u003e \n\u003e Is there any resources available to learn about this topic?\n\nBasically https://github.com/dotnet/runtime/issues/117863#issuecomment-3119725358 and https://learn.microsoft.com/dotnet/standard/assembly/reference-assemblies . Again, this is never a topic for beginner.\n\n\u003e I found this:\n\u003e https://www.youtube.com/watch?v=jK8jYQ3ZKiI\n\nIt\u0027s totally unrelated. It\u0027s about the runtime that executes managed code. Dictionary is purely managed code.\n\n\u003e I looked up this on github: https://github.com/search?q=repo%3Adotnet%2Fruntime+PTR_Dictionary\u0026type=code\n\u003e \n\u003e Do you guys know what this path is for?: \\rt5\\src\\coreclr\\vm\\\n\nIt\u0027s for unmanaged runtime to *use* dictionary. It\u0027s unrelated to how to *implement* dictionary either.\n\n\u003e I’m going to read this too:\n\u003e https://ecma-international.org/wp-content/uploads/ECMA-335_6th_edition_june_2012.pdf\n\nIt\u0027s unrelated either. ECMA-335 doesn\u0027t specify how assemblies are shipped in SDK.\n\n\u003e I noticed that public class Dictionary had these decorators on it:\n\nIt\u0027s called *attribute* in C#. It should be a medium-tier concept in textbooks.\n\n\u003e Is there anywhere in the docs that describes how to do what I want?\n\nThere\u0027s no single documentation for this. Adding new API is expert level task and requires very detailed background knowledge. The referenced documentation (https://github.com/dotnet/runtime/blob/main/docs/workflow/testing/using-dev-shipping-packages.md#creating-and-running-the-app-with-your-build) also requires full knowledge about how the SDK works. It gets outdated because practically very few people follow the process.\n\n\u003e I’m reading the docs now, maybe I can find some info\n\nYou need to learn all the related concepts, otherwise you aren\u0027t able to understand how things are working. The documentations have quite a lot implications.",
                                           "updatedAt":  "2025-07-28T12:32:10Z"
                                       }
                                   ],
                         "totalCount":  33
                     },
        "title":  "C# hostpolicy.dll Fatal Error",
        "labels":  [
                       "question",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/118182",
        "createdAt":  "2025-07-29T19:17:16Z",
        "number":  118182,
        "author":  "ericstj",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-29T19:17:42Z",
        "body":  "We no longer have an internal official build for runtime to validate changes / ensure the repo stays healthy.\n\nWe do have an internal validation build - a CI build that runs test and does PR validation.\n\nCurrently this build is pretty broken, not even able to launch some jobs, many other failures and timeouts.\nhttps://dev.azure.com/dnceng/internal/_build?definitionId=1104\n\nThis build should be fixed so that it runs without build errors and at most has just \"known build errors\" for failing tests  -- which Ideally can be minimized as well.\n\nThis work is critical to do before we ship since this build is necessary for servicing validation.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOuskfsQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc66yR-x",
                                           "createdAt":  "2025-07-29T19:17:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-07-29T19:17:42Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Ensure internal runtime build pipeline satisifies product servicing requirements",
        "labels":  [
                       "blocking-release",
                       "area-Infrastructure",
                       "untriaged"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/118278",
        "createdAt":  "2025-08-01T16:12:40Z",
        "number":  118278,
        "author":  "ericstj",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T23:04:30Z",
        "body":  "## Build Information\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=1103973\u0026view=logs\u0026j=269f5d52-982b-5966-fca9-1b2b0a5feb6e\nBuild error leg or test failing: Build / wasi-wasm linux Release WasmBuildTests / Build product\nPull request: https://github.com/dotnet/runtime/pull/117949\n\u003c!-- Error message template  --\u003e\n## Error Message\n\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssueJsonStepByStep.md).\n\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\n\n```json\n{\n  \"ErrorMessage\": [\"http_code: unbound variable\", \"workloads-testing.targets\"],\n  \"ErrorPattern\": \"\",\n  \"BuildRetry\": false,\n  \"ExcludeConsoleLog\": false\n}\n```\n\n\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=1103973\r\n**Error message validated:** `[http_code: unbound variable workloads-testing.targets`]\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 8/1/2025 4:13:03 PM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|0|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOvMTjYQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc670PsI",
                                           "createdAt":  "2025-08-04T14:37:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-08-04T14:37:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc670PwS",
                                           "createdAt":  "2025-08-04T14:37:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "lewing",
                                           "body":  "This looks like an issue in dotnet-install.sh ",
                                           "updatedAt":  "2025-08-04T14:37:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc68xNu9",
                                           "createdAt":  "2025-08-08T08:33:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "Filed https://github.com/dotnet/install-scripts/issues/626",
                                           "updatedAt":  "2025-08-08T08:33:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc68xONh",
                                           "createdAt":  "2025-08-08T08:34:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "Removing blocking-clean-ci since it only happened once according to Build Analysis",
                                           "updatedAt":  "2025-08-08T08:34:32Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "dotnet-install.sh fail with `http_code: unbound variable` when trying to install dotnet",
        "labels":  [
                       "area-Infrastructure",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/118583",
        "createdAt":  "2025-08-11T14:25:13Z",
        "number":  118583,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODKsi1g==",
                          "nodes":  [
                                        {
                                            "content":  "CONFUSED",
                                            "user":  "karb0f0s",
                                            "createdAt":  "2025-08-11T14:36:38Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-08-11T14:57:46Z",
        "body":  "This issue tracks the infrastructure work that is required to target net11.0 for producing .NET 11 builds. The work tracked here starts being worked on when runtime branches off main for .NET 10 RC2 in mid August.\n\n### Phase 1 - Branding\n\nThe branding work needs to happen in a separate PR from the re-targeting work and **must not** update the assembly version. This means that the `AssemblyVersion` property needs to be hardcoded to 10.0.0.0 here: https://github.com/dotnet/runtime/blob/d8a642fb46a6a047ef7c6c9c0e16b09674570c33/eng/Versions.props#L22\n\n- [ ] Status box. Tick to mark phase 1 as completed.\n\n### Phase 2 - Re-targeting\n\nAfter the branding work is done, the TFM re-targeting work can happen. There\u0027s a long list of things to do. For reference, [here\u0027s the PR from last year for net10.0](https://github.com/dotnet/runtime/commit/c4b3d81df13b843ae7bbd8c4b156bd12ccb908f7).\n\n- [ ] Add dotnet11 \u0026 dotnet11-transport NuGet feeds.\n- [ ] Update [TFM properties](https://github.com/dotnet/runtime/blob/d8a642fb46a6a047ef7c6c9c0e16b09674570c33/Directory.Build.props#L89-L104) so that `NetCoreAppCurrent=net11.0`, `NetCoreAppPrevious=net10.0` and `NetCoreAppMinimum=net10.0`.\n- [ ] Update [the globally set AssemblyVersion](https://github.com/dotnet/runtime/blob/d8a642fb46a6a047ef7c6c9c0e16b09674570c33/eng/Versions.props#L22) back to `$(MajorVersion).$(MinorVersion).0.0`.\n- [ ] [Update the ApiCompat baseline versions](https://github.com/dotnet/runtime/blob/d8a642fb46a6a047ef7c6c9c0e16b09674570c33/Directory.Build.props#L125-L126) to the latest officially released package version (should be P7 if this is worked on in August). Add a TODO marker and file an issue to track updating this version to 10.0.0 GA in November.\n- [ ] Update hardcoded 10.0.0.0 assembly versions in CompatibilitySuppressions.xml files (APICompat config).\n- [ ] [Remove the `DisablePackageBaselineValidation` property](https://github.com/search?q=repo%3Adotnet%2Fruntime%20DisablePackageBaselineValidation\u0026type=code) and its comment so that we have APICompat validation for new packages during re-targeting.\n\nWIP - Add more to this list\n\n### Phase 3 - Clean-up\n\n- [ ] Eventually remove net10.0 NuGet feeds when all moving dependencies are on the dotnet11 feeds\n- [ ] Change `set(PRERELEASE 1)` to 0 in eng/native/configureplatform.cmake in the `release/10.0` branch so new compiler warnings don\u0027t fail the servicing build.\n\n---\n\nLeverage AI here as much as possible for the mechanical change. Might be a good opportunity for Copilot.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOvUFqmQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc69QWqZ",
                                           "createdAt":  "2025-08-11T14:42:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-08-11T14:42:55Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Target .NET 11 / net11.0",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/118631",
        "createdAt":  "2025-08-12T09:42:25Z",
        "number":  118631,
        "author":  "kotlarmilos",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODK2owQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "vitek-karas",
                                            "createdAt":  "2025-08-12T12:44:56Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-08-12T09:43:06Z",
        "body":  "## Problem\n\nOn second and all subsequent attempts to run Apple mobile job on Helix, the trimmer or ilstrip output the assemblies to the same directory as the input. As a result, on the second and all subsequent runs, the input assemblies are already stripped, causing the `Invalid IL code in SimpleTestRunner:Main (string[]): IL_0000: ret`.\n\nOutput assemblies should be emitted to a different directory to ensure subsequent runs can execute without errors.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOvXVj5A==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc69dVzP",
                                           "createdAt":  "2025-08-12T09:42:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027os-ios\u0027: @vitek-karas, @kotlarmilos, @steveisok, @akoeplinger\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-08-12T09:42:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc69dWPk",
                                           "createdAt":  "2025-08-12T09:43:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-08-12T09:43:06Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "[Apple] Fix job re-runs by emitting stripped assemblies to separate directory",
        "labels":  [
                       "area-Infrastructure",
                       "os-ios"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/118737",
        "createdAt":  "2025-08-13T09:15:48Z",
        "number":  118737,
        "author":  "Winniexu01",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-29T15:21:35Z",
        "body":  "[Failing build](https://dev.azure.com/dnceng/internal/_build/results?buildId=2770582\u0026view=logs\u0026j=1916fc01-fcc9-55da-7cf8-18423bf70f38\u0026t=ffa0cdac-c671-5d95-d27a-8f9b6c3fe2dd) (internal Microsoft link)\n\n\n    Failed Microsoft.DotNet.SourceBuild.Tests.BasicScenarioTests.VerifyScenario(scenario: TestScenario { Commands = Build | Run | PublishComplex, Language = CSharp, NoHttps = False, ScenarioName = \"BasicScenarioTests\", Template = Console, ··· }) [36 s]\n      Error Message:\n       System.InvalidOperationException : Failed to execute /__w/1/s/artifacts/obj/extracted-dotnet-sdk/dotnet BasicScenarioTests_Console_CSharp.dll\n    Exit code: 134\n    Runtime critical type System.Diagnostics.MonoStackFrame not found\n    \n    Failed Microsoft.DotNet.SourceBuild.Tests.WebScenarioTests.VerifyScenario(scenario: TestScenario { Commands = Build | Run | PublishComplex, Language = CSharp, NoHttps = False, ScenarioName = \"WebScenarioTests\", Template = Web, ··· }) [41 s]\n      Error Message:\n       System.InvalidOperationException : Failed to execute /__w/1/s/artifacts/obj/extracted-dotnet-sdk/dotnet WebScenarioTests_Web_CSharp.dll\n    Exit code: 134\n    Runtime critical type System.Diagnostics.MonoStackFrame not found\n    \n    Failed Microsoft.DotNet.SourceBuild.Tests.BasicScenarioTests.VerifyScenario(scenario: TestScenario { Commands = Build | Run | PublishComplex, Language = FSharp, NoHttps = False, ScenarioName = \"BasicScenarioTests\", Template = Console, ··· }) [33 s]\n      Error Message:\n       System.InvalidOperationException : Failed to execute /__w/1/s/artifacts/obj/extracted-dotnet-sdk/dotnet BasicScenarioTests_Console_FSharp.dll\n    Exit code: 134\n    Runtime critical type System.Diagnostics.MonoStackFrame not found\n    \n    Failed Microsoft.DotNet.SourceBuild.Tests.WebScenarioTests.VerifyScenario(scenario: TestScenario { Commands = Build | Run | PublishComplex, Language = FSharp, NoHttps = False, ScenarioName = \"WebScenarioTests\", Template = Web, ··· }) [40 s]\n      Error Message:\n       System.InvalidOperationException : Failed to execute /__w/1/s/artifacts/obj/extracted-dotnet-sdk/dotnet WebScenarioTests_Web_FSharp.dll\n    Exit code: 134\n    Runtime critical type System.Diagnostics.MonoStackFrame not found\n    \n    Failed Microsoft.DotNet.SourceBuild.Tests.BasicScenarioTests.VerifyScenario(scenario: TestScenario { Commands = Build | Run | PublishComplex, Language = VB, NoHttps = False, ScenarioName = \"BasicScenarioTests\", Template = Console, ··· }) [24 s]\n      Error Message:\n       System.InvalidOperationException : Failed to execute /__w/1/s/artifacts/obj/extracted-dotnet-sdk/dotnet BasicScenarioTests_Console_VB.dll\n    Exit code: 134\n    Runtime critical type System.Diagnostics.MonoStackFrame not found\n\n\n\n\n\n\n\n\n\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOvkLpjw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6-FJt-",
                                           "createdAt":  "2025-08-13T16:32:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ellahathaway",
                                           "body":  "Some things of note:\n- The failures seem to be intermittent because subsequent runs of the validation tests pass.\n- The failing tests specify \"PublishComplex\"\n- The tests fail when invoking the project after doing self-contained publishing with portable rids\n\n```\n\u003cOutput\u003e\n  \u003cStdOut\u003e\n    Executing: /__w/1/s/artifacts/obj/extracted-dotnet-sdk/dotnet new console --name BasicScenarioTests_Console_FSharp --output /__w/1/s/artifacts/bin/Microsoft.DotNet.SourceBuild.Tests/Release/projects-202508130036291645/BasicScenarioTests_Console_FSharp --language \"F#\" \n    Executing: /__w/1/s/artifacts/obj/extracted-dotnet-sdk/dotnet build /p:RestoreAdditionalProjectSources=/__w/1/msft-pkgs /bl:/__w/1/s/artifacts/TestResults/Release/BasicScenarioTests_Console_FSharp-build.binlog\n    Executing: /__w/1/s/artifacts/obj/extracted-dotnet-sdk/dotnet run /bl:/__w/1/s/artifacts/TestResults/Release/BasicScenarioTests_Console_FSharp-run.binlog\n    Executing: /__w/1/s/artifacts/obj/extracted-dotnet-sdk/dotnet publish /p:RestoreAdditionalProjectSources=/__w/1/msft-pkgs --self-contained false /bl:/__w/1/s/artifacts/TestResults/Release/BasicScenarioTests_Console_FSharp-publish.binlog -o /__w/1/s/artifacts/bin/Microsoft.DotNet.SourceBuild.Tests/Release/projects-202508130036291645/BasicScenarioTests_Console_FSharp/bin/publish\n    Executing: /__w/1/s/artifacts/obj/extracted-dotnet-sdk/dotnet BasicScenarioTests_Console_FSharp.dll\n    Executing: /__w/1/s/artifacts/obj/extracted-dotnet-sdk/dotnet publish /p:RestoreAdditionalProjectSources=/__w/1/msft-pkgs --self-contained true -r centos.10-x64 /bl:/__w/1/s/artifacts/TestResults/Release/BasicScenarioTests_Console_FSharp-publish-self-contained-centos.10-x64.binlog -o /__w/1/s/artifacts/bin/Microsoft.DotNet.SourceBuild.Tests/Release/projects-202508130036291645/BasicScenarioTests_Console_FSharp/bin/publish\n    Executing: /__w/1/s/artifacts/obj/extracted-dotnet-sdk/dotnet BasicScenarioTests_Console_FSharp.dll\n    Executing: /__w/1/s/artifacts/obj/extracted-dotnet-sdk/dotnet publish /p:RestoreAdditionalProjectSources=/__w/1/msft-pkgs --self-contained true -r linux-x64 /bl:/__w/1/s/artifacts/TestResults/Release/BasicScenarioTests_Console_FSharp-publish-self-contained-linux-x64.binlog -o /__w/1/s/artifacts/bin/Microsoft.DotNet.SourceBuild.Tests/Release/projects-202508130036291645/BasicScenarioTests_Console_FSharp/bin/publish\n    Executing: /__w/1/s/artifacts/obj/extracted-dotnet-sdk/dotnet BasicScenarioTests_Console_FSharp.dll\n  \u003c/StdOut\u003e\n  \u003cErrorInfo\u003e\n    \u003cMessage\u003eSystem.InvalidOperationException : Failed to execute /__w/1/s/artifacts/obj/extracted-dotnet-sdk/dotnet BasicScenarioTests_Console_FSharp.dll\nExit code: 134\nRuntime critical type System.Diagnostics.MonoStackFrame not found\n\n=================================================================\n\tNative Crash Reporting\n=================================================================\nGot a SIGABRT while executing native code. This usually indicates\na fatal error in the mono runtime or one of the native libraries \nused by your application.\n=================================================================\n\n=================================================================\n\tNative stacktrace:\n=================================================================\n\t0x780d5cdfe93f - /__w/1/s/artifacts/bin/Microsoft.DotNet.SourceBuild.Tests/Release/projects-202508130036291645/BasicScenarioTests_Console_FSharp/bin/publish/libcoreclr.so : \n\t0x780d5cda452e - /__w/1/s/artifacts/bin/Microsoft.DotNet.SourceBuild.Tests/Release/projects-202508130036291645/BasicScenarioTests_Console_FSharp/bin/publish/libcoreclr.so : \n\t0x780d5cdfe1c1 - /__w/1/s/artifacts/bin/Microsoft.DotNet.SourceBuild.Tests/Release/projects-202508130036291645/BasicScenarioTests_Console_FSharp/bin/publish/libcoreclr.so : \n\t0x780d5d1dd000 - /lib64/libc.so.6 : \n\t0x780d5d232f8c - /lib64/libc.so.6 : \n\t0x780d5d1dcf56 - /lib64/libc.so.6 : gsignal\n\t0x780d5d1c48fa - /lib64/libc.so.6 : abort\n\t0x780d5cea5314 - /__w/1/s/artifacts/bin/Microsoft.DotNet.SourceBuild.Tests/Release/projects-202508130036291645/BasicScenarioTests_Console_FSharp/bin/publish/libcoreclr.so : \n\t0x780d5ceb2f26 - /__w/1/s/artifacts/bin/Microsoft.DotNet.SourceBuild.Tests/Release/projects-202508130036291645/BasicScenarioTests_Console_FSharp/bin/publish/libcoreclr.so : \n\t0x780d5cea56c6 - /__w/1/s/artifacts/bin/Microsoft.DotNet.SourceBuild.Tests/Release/projects-202508130036291645/BasicScenarioTests_Console_FSharp/bin/publish/libcoreclr.so : \n\t0x780d5cea57fe - /__w/1/s/artifacts/bin/Microsoft.DotNet.SourceBuild.Tests/Release/projects-202508130036291645/BasicScenarioTests_Console_FSharp/bin/publish/libcoreclr.so : \n\t0x780d5cece260 - /__w/1/s/artifacts/bin/Microsoft.DotNet.SourceBuild.Tests/Release/projects-202508130036291645/BasicScenarioTests_Console_FSharp/bin/publish/libcoreclr.so : mono_class_load_from_name\n\t0x780d5cec71a2 - /__w/1/s/artifacts/bin/Microsoft.DotNet.SourceBuild.Tests/Release/projects-202508130036291645/BasicScenarioTests_Console_FSharp/bin/publish/libcoreclr.so : mono_init\n\t0x780d5cd09d11 - /__w/1/s/artifacts/bin/Microsoft.DotNet.SourceBuild.Tests/Release/projects-202508130036291645/BasicScenarioTests_Console_FSharp/bin/publish/libcoreclr.so : \n\t0x780d5cd65395 - /__w/1/s/artifacts/bin/Microsoft.DotNet.SourceBuild.Tests/Release/projects-202508130036291645/BasicScenarioTests_Console_FSharp/bin/publish/libcoreclr.so : mono_main\n\t0x780d5cddbc57 - /__w/1/s/artifacts/bin/Microsoft.DotNet.SourceBuild.Tests/Release/projects-202508130036291645/BasicScenarioTests_Console_FSharp/bin/publish/libcoreclr.so : monovm_execute_assembly\n\t0x780d5d12a0bc - /__w/1/s/artifacts/bin/Microsoft.DotNet.SourceBuild.Tests/Release/projects-202508130036291645/BasicScenarioTests_Console_FSharp/bin/publish/libhostpolicy.so : \n\t0x780d5d12b4f9 - /__w/1/s/artifacts/bin/Microsoft.DotNet.SourceBuild.Tests/Release/projects-202508130036291645/BasicScenarioTests_Console_FSharp/bin/publish/libhostpolicy.so : corehost_main\n\t0x780d5d1695eb - /__w/1/s/artifacts/obj/extracted-dotnet-sdk/host/fxr/10.0.0-rc.1.25412.107/libhostfxr.so : \n\t0x780d5d168258 - /__w/1/s/artifacts/obj/extracted-dotnet-sdk/host/fxr/10.0.0-rc.1.25412.107/libhostfxr.so : \n\t0x780d5d162de7 - /__w/1/s/artifacts/obj/extracted-dotnet-sdk/host/fxr/10.0.0-rc.1.25412.107/libhostfxr.so : hostfxr_main_startupinfo\n\t0x5cf83b7cd540 - /__w/1/s/artifacts/obj/extracted-dotnet-sdk/dotnet : \n\t0x5cf83b7cd81f - /__w/1/s/artifacts/obj/extracted-dotnet-sdk/dotnet : \n\t0x780d5d1c658e - /lib64/libc.so.6 : \n\t0x780d5d1c6649 - /lib64/libc.so.6 : __libc_start_main\n\t0x5cf83b7cc825 - /__w/1/s/artifacts/obj/extracted-dotnet-sdk/dotnet : \n\n=================================================================\n\tBasic Fault Address Reporting\n=================================================================\nMemory around native instruction pointer (0x780d5d232f8c):0x780d5d232f7c  04 00 44 89 ea 89 de 89 c7 b8 ea 00 00 00 0f 05  ..D.............\n0x780d5d232f8c  89 c3 f7 db 3d 00 f0 ff ff b8 00 00 00 00 0f 47  ....=..........G\n0x780d5d232f9c  c3 e9 76 ff ff ff 66 0f 1f 44 00 00 4c 89 e7 e8  ..v...f..D..L...\n0x780d5d232fac  60 b3 ff ff e9 4a ff ff ff 0f 1f 00 4c 89 e7 e8  `....J......L...\n=================================================================\n\tExternal Debugger Dump:\n=================================================================\n[New LWP 9382]\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib64/libthread_db.so.1\".\n0x0000780d5d28b407 in wait4 () from /lib64/libc.so.6\n  Id   Target Id                                      Frame \n* 1    Thread 0x780d5d19b500 (LWP 9381) \"dotnet\"      0x0000780d5d28b407 in wait4 () from /lib64/libc.so.6\n  2    Thread 0x780d5c3ff6c0 (LWP 9382) \"SGen worker\" 0x0000780d5d22e08e in __futex_abstimed_wait_common () from /lib64/libc.so.6\n\nThread 2 (Thread 0x780d5c3ff6c0 (LWP 9382) \"SGen worker\"):\n#0  0x0000780d5d22e08e in __futex_abstimed_wait_common () from /lib64/libc.so.6\ndotnet/source-build#1  0x0000780d5d2306d8 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libc.so.6\ndotnet/source-build#2  0x0000780d5cfe6883 in mono_os_cond_wait (cond=\u0026lt;optimized out\u0026gt;, mutex=\u0026lt;optimized out\u0026gt;) at /__w/_temp/dotnet-sources/src/runtime/src/mono/mono/sgen/../../mono/utils/mono-os-mutex.h:219\ndotnet/source-build#3  get_work (worker_index=0, work_context=\u0026lt;optimized out\u0026gt;, do_idle=\u0026lt;optimized out\u0026gt;, job=\u0026lt;optimized out\u0026gt;) at /__w/_temp/dotnet-sources/src/runtime/src/mono/mono/sgen/sgen-thread-pool.c:164\ndotnet/source-build#4  thread_func (data=0x0) at /__w/_temp/dotnet-sources/src/runtime/src/mono/mono/sgen/sgen-thread-pool.c:195\ndotnet/source-build#5  0x0000780d5d231128 in start_thread () from /lib64/libc.so.6\ndotnet/source-build#6  0x0000780d5d2a1afc in clone3 () from /lib64/libc.so.6\n\nThread 1 (Thread 0x780d5d19b500 (LWP 9381) \"dotnet\"):\n#0  0x0000780d5d28b407 in wait4 () from /lib64/libc.so.6\ndotnet/source-build#1  0x0000780d5cdfea70 in dump_native_stacktrace (signal=\u0026lt;optimized out\u0026gt;, mctx=\u0026lt;optimized out\u0026gt;) at /__w/_temp/dotnet-sources/src/runtime/src/mono/mono/mini/mini-posix.c:877\ndotnet/source-build#2  mono_dump_native_crash_info (signal=\u0026lt;optimized out\u0026gt;, mctx=mctx@entry=0x7ffee0357010, info=\u0026lt;optimized out\u0026gt;) at /__w/_temp/dotnet-sources/src/runtime/src/mono/mono/mini/mini-posix.c:899\ndotnet/source-build#3  0x0000780d5cda452e in mono_handle_native_crash (signal=0x780d5cc64075 \"SIGABRT\", mctx=mctx@entry=0x7ffee0357010, info=info@entry=0x7ffee03572f0) at /__w/_temp/dotnet-sources/src/runtime/src/mono/mono/mini/mini-exceptions.c:2999\ndotnet/source-build#4  0x0000780d5cdfe1c1 in sigabrt_signal_handler (_dummy=6, _info=0x7ffee03572f0, context=0x7ffee03571c0) at /__w/_temp/dotnet-sources/src/runtime/src/mono/mono/mini/mini-posix.c:247\ndotnet/source-build#5  \u0026lt;signal handler called\u0026gt;\ndotnet/source-build#6  0x0000780d5d232f8c in __pthread_kill_implementation () from /lib64/libc.so.6\ndotnet/source-build#7  0x0000780d5d1dcf56 in raise () from /lib64/libc.so.6\ndotnet/source-build#8  0x0000780d5d1c48fa in abort () from /lib64/libc.so.6\ndotnet/source-build#9  0x0000780d5cea5314 in monoeg_assert_abort () at /__w/_temp/dotnet-sources/src/runtime/src/mono/mono/eglib/goutput.c:57\ndotnet/source-build#10 0x0000780d5ceb2f26 in mono_log_write_logfile (log_domain=\u0026lt;optimized out\u0026gt;, level=\u0026lt;optimized out\u0026gt;, hdr=\u0026lt;optimized out\u0026gt;, message=0x5cf86d486690 \"Runtime critical type System.Diagnostics.MonoStackFrame not found\") at /__w/_temp/dotnet-sources/src/runtime/src/mono/mono/utils/mono-log-common.c:146\ndotnet/source-build#11 0x0000780d5cea56c6 in monoeg_g_logstr (log_domain=0x0, log_level=G_LOG_LEVEL_ERROR, msg=0x6 \u0026lt;error: Cannot access memory at address 0x6\u0026gt;) at /__w/_temp/dotnet-sources/src/runtime/src/mono/mono/eglib/goutput.c:151\ndotnet/source-build#12 monoeg_g_logv_nofree (log_domain=\u0026lt;optimized out\u0026gt;, log_level=\u0026lt;optimized out\u0026gt;, format=\u0026lt;optimized out\u0026gt;, args=\u0026lt;optimized out\u0026gt;) at /__w/_temp/dotnet-sources/src/runtime/src/mono/mono/eglib/goutput.c:166\ndotnet/source-build#13 monoeg_g_logv (log_domain=0x0, log_level=G_LOG_LEVEL_ERROR, format=\u0026lt;optimized out\u0026gt;, args=args@entry=0x7ffee0357d60) at /__w/_temp/dotnet-sources/src/runtime/src/mono/mono/eglib/goutput.c:173\ndotnet/source-build#14 0x0000780d5cea57fe in monoeg_g_log (log_domain=0x24a5 \u0026lt;error: Cannot access memory at address 0x24a5\u0026gt;, log_domain@entry=0x0, log_level=9381, log_level@entry=G_LOG_LEVEL_ERROR, format=0x6 \u0026lt;error: Cannot access memory at address 0x6\u0026gt;) at /__w/_temp/dotnet-sources/src/runtime/src/mono/mono/eglib/goutput.c:182\ndotnet/source-build#15 0x0000780d5cece260 in mono_class_load_from_name (image=\u0026lt;optimized out\u0026gt;, name_space=0x780d5cc3ca20 \"System.Diagnostics\", name=0x780d5cc39e48 \"MonoStackFrame\") at /__w/_temp/dotnet-sources/src/runtime/src/mono/mono/metadata/class.c:3586\ndotnet/source-build#16 0x0000780d5cec71a2 in mono_init_internal (root_domain_name=\u0026lt;optimized out\u0026gt;) at /__w/_temp/dotnet-sources/src/runtime/src/mono/mono/metadata/domain.c:254\ndotnet/source-build#17 mono_init (root_domain_name=root_domain_name@entry=0x5cf86d4875c0 \"/__w/1/s/artifacts/bin/Microsoft.DotNet.SourceBuild.Tests/Release/projects-202508130036291645/BasicScenarioTests_Console_FSharp/bin/publish/BasicScenarioTests_Console_FSharp.dll\") at /__w/_temp/dotnet-sources/src/runtime/src/mono/mono/metadata/domain.c:314\ndotnet/source-build#18 0x0000780d5cd09d11 in mini_init (filename=0x5cf86d4875c0 \"/__w/1/s/artifacts/bin/Microsoft.DotNet.SourceBuild.Tests/Release/projects-202508130036291645/BasicScenarioTests_Console_FSharp/bin/publish/BasicScenarioTests_Console_FSharp.dll\") at /__w/_temp/dotnet-sources/src/runtime/src/mono/mono/mini/mini-runtime.c:4841\ndotnet/source-build#19 0x0000780d5cd65395 in mono_main (argc=2, argv=0x5cf86d48ebe0) at /__w/_temp/dotnet-sources/src/runtime/src/mono/mono/mini/driver.c:2486\ndotnet/source-build#20 0x0000780d5cddbc57 in monovm_execute_assembly (argc=\u0026lt;optimized out\u0026gt;, argv=0x0, managedAssemblyPath=0x5cf86d4875c0 \"/__w/1/s/artifacts/bin/Microsoft.DotNet.SourceBuild.Tests/Release/projects-202508130036291645/BasicScenarioTests_Console_FSharp/bin/publish/BasicScenarioTests_Console_FSharp.dll\", exitCode=0x7ffee03582e0) at /__w/_temp/dotnet-sources/src/runtime/src/mono/mono/mini/monovm.c:313\ndotnet/source-build#21 0x0000780d5d12a0bc in ?? () from /__w/1/s/artifacts/bin/Microsoft.DotNet.SourceBuild.Tests/Release/projects-202508130036291645/BasicScenarioTests_Console_FSharp/bin/publish/libhostpolicy.so\ndotnet/source-build#22 0x0000780d5d12b4f9 in corehost_main () from /__w/1/s/artifacts/bin/Microsoft.DotNet.SourceBuild.Tests/Release/projects-202508130036291645/BasicScenarioTests_Console_FSharp/bin/publish/libhostpolicy.so\ndotnet/source-build#23 0x0000780d5d1695eb in execute_app (impl_dll_dir=\"/__w/1/s/artifacts/bin/Microsoft.DotNet.SourceBuild.Tests/Release/projects-202508130036291645/BasicScenarioTests_Console_FSharp/bin/publish/\", init=0x5cf86d47ee00, argc=2, argv=0x7ffee0358a38) at /__w/_temp/dotnet-sources/src/runtime/src/native/corehost/fxr/fx_muxer.cpp:146\ndotnet/source-build#24 (anonymous namespace)::read_config_and_execute (host_command=..., host_info=..., app_candidate=..., opts=..., new_argc=2, new_argv=0x7ffee0358a38, mode=\u0026lt;optimized out\u0026gt;, is_sdk_command=\u0026lt;optimized out\u0026gt;, out_buffer=\u0026lt;optimized out\u0026gt;, buffer_size=\u0026lt;optimized out\u0026gt;, required_buffer_size=\u0026lt;optimized out\u0026gt;) at /__w/_temp/dotnet-sources/src/runtime/src/native/corehost/fxr/fx_muxer.cpp:533\ndotnet/source-build#25 fx_muxer_t::handle_exec_host_command (host_command=\"\", host_info=..., app_candidate=\"/__w/1/s/artifacts/bin/Microsoft.DotNet.SourceBuild.Tests/Release/projects-202508130036291645/BasicScenarioTests_Console_FSharp/bin/publish/BasicScenarioTests_Console_FSharp.dll\", opts=std::unordered_map with 0 elements, argc=argc@entry=2, argv=argv@entry=0x7ffee0358a38, argoff=1, mode=muxer, is_sdk_command=\u0026lt;optimized out\u0026gt;, result_buffer=0x0, buffer_size=0, required_buffer_size=0x0) at /__w/_temp/dotnet-sources/src/runtime/src/native/corehost/fxr/fx_muxer.cpp:1008\ndotnet/source-build#26 0x0000780d5d168258 in fx_muxer_t::execute (host_command=\"\", argc=2, argv=0x7ffee0358a38, host_info=..., result_buffer=0x0, buffer_size=0, required_buffer_size=0x0) at /__w/_temp/dotnet-sources/src/runtime/src/native/corehost/fxr/fx_muxer.cpp:579\ndotnet/source-build#27 0x0000780d5d162de7 in hostfxr_main_startupinfo (argc=argc@entry=2, argv=argv@entry=0x7ffee0358a38, host_path=host_path@entry=0x5cf86d47c2f0 \"/__w/1/s/artifacts/obj/extracted-dotnet-sdk/dotnet\", dotnet_root=dotnet_root@entry=0x5cf86d47c330 \"/__w/1/s/artifacts/obj/extracted-dotnet-sdk/\", app_path=app_path@entry=0x5cf86d47c3b0 \"/__w/1/s/artifacts/obj/extracted-dotnet-sdk/dotnet.dll\") at /__w/_temp/dotnet-sources/src/runtime/src/native/corehost/fxr/hostfxr.cpp:63\ndotnet/source-build#28 0x00005cf83b7cd540 in exe_start (argc=argc@entry=2, argv=argv@entry=0x7ffee0358a38) at /__w/_temp/dotnet-sources/src/runtime/src/native/corehost/corehost.cpp:264\ndotnet/source-build#29 0x00005cf83b7cd81f in main (argc=2, argv=0x7ffee0358a38) at /__w/_temp/dotnet-sources/src/runtime/src/native/corehost/corehost.cpp:332\n[Inferior 1 (process 9381) detached]\u003c/Message\u003e\n          \u003cStackTrace\u003e   at TestUtilities.ExecuteHelper.ValidateExitCode(ValueTuple`3 result, Int32 expectedExitCode, String additionalOutput) in /_/test/TestUtilities/ExecuteHelper.cs:line 130\n   at Microsoft.DotNet.SourceBuild.Tests.DotNetHelper.ExecuteCmd(String args, String workingDirectory, Action`1 processConfigCallback, Nullable`1 expectedExitCode, Int32 millisecondTimeout) in /_/test/Microsoft.DotNet.SourceBuild.Tests/DotNetHelper.cs:line 84\n   at Microsoft.DotNet.SourceBuild.Tests.DotNetHelper.ExecutePublish(String projectName, DotNetTemplate template, Nullable`1 selfContained, String rid, Boolean trimmed, Boolean readyToRun) in /_/test/Microsoft.DotNet.SourceBuild.Tests/DotNetHelper.cs:line 178\n   at Microsoft.DotNet.SourceBuild.Tests.TestScenario.Execute(DotNetHelper dotNetHelper) in /_/test/Microsoft.DotNet.SourceBuild.Tests/TestScenario.cs:line 61\n   at Microsoft.DotNet.SourceBuild.Tests.BasicScenarioTests.VerifyScenario(TestScenario scenario) in /_/test/Microsoft.DotNet.SourceBuild.Tests/BasicScenarioTests.cs:line 23\n   at InvokeStub_BasicScenarioTests.VerifyScenario(Object, Span`1)\n   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\u003c/StackTrace\u003e\n        \u003c/ErrorInfo\u003e\n````\n\n@steveisok - could you please take a look? Thanks in advance!",
                                           "updatedAt":  "2025-08-13T16:32:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6-QumP",
                                           "createdAt":  "2025-08-15T16:13:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-08-15T16:13:59Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "[main] BasicScenarioTests, WebScenarioTests smoke tests failed in `CentOSStream10_Mono_Offline_CurrentSourceBuiltSdk`",
        "labels":  [
                       "area-Infrastructure",
                       "untriaged"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/118840",
        "createdAt":  "2025-08-18T13:04:45Z",
        "number":  118840,
        "author":  "kotlarmilos",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODLmvqA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "davidnguyen-tech",
                                            "createdAt":  "2025-08-18T14:51:21Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-08-18T13:05:23Z",
        "body":  "## Description\r\n\r\nCreate IsLowMemoryDevice in PlatformDetection to track OOM issues.\r\n\r\n_Originally posted by @akoeplinger in https://github.com/dotnet/runtime/pull/118733#discussion_r2282277517_\r\n            ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOvop74g==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6-inH9",
                                           "createdAt":  "2025-08-18T13:05:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-android\u0027: @vitek-karas, @simonrozsival, @steveisok, @akoeplinger\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-08-18T13:05:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6-invi",
                                           "createdAt":  "2025-08-18T13:05:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-08-18T13:05:23Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "[Android] Create IsLowMemoryDevice in PlatformDetection to track OOM issues",
        "labels":  [
                       "os-android",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/119012",
        "createdAt":  "2025-08-22T17:04:01Z",
        "number":  119012,
        "author":  "ericstj",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-05T18:57:51Z",
        "body":  "We turn off the terminal logger in a few places - the outer build scripts (build.sh/build.ps1) and in Directory.Build.rsp.\n\nBefore,  we did this because the terminal logger wasn\u0027t showing output from native build, nor was it showing test failure results.\n\nThe test results issue seems to be fixed, and the native build output can be enabled if we pass in `/v:detailed` due to https://github.com/dotnet/msbuild/pull/9810.\n\nThe largest difference is that logging for a project is not emitted until that project completes, however progress is still shown for the project.\n\nI\u0027d like for a couple folks to try it out and see what they think, if we\u0027re happy with it, we can make the change in 11.0.\nhttps://github.com/dotnet/runtime/tree/reenableTerminalLogger\n@jkotas @akoeplinger @ViktorHofer @ManickaP \n\nRelated https://github.com/dotnet/runtime/issues/94183 https://github.com/dotnet/runtime/issues/97211\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOwkb1Sw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6_o4R7",
                                           "createdAt":  "2025-08-22T17:54:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEfWdjw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "vcsjones",
                                                                               "createdAt":  "2025-08-22T22:18:15Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "SingleAccretion",
                                                                               "createdAt":  "2025-08-22T23:56:27Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MichalStrehovsky",
                                                                               "createdAt":  "2025-08-23T02:32:25Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "jkotas",
                                           "body":  "I prefer console log with reasonable verbosity (like between 1 and 10 lines per second on average) that keeps scrolling as the build progresses. I have the terminal logger disabled on my machines globally via `MSBUILDTERMINALLOGGER=off` for that. The terminal logger hides too much to my taste for what I am typically doing.\n\nI tried your branch and cleared `MSBUILDTERMINALLOGGER=off` and I run `build -s clr+libs -c release`. I am staring at `BuildRuntime (330.9s)` message right now. Is the build making progress, is it stuck or is it taking too long to fail? I am not able to tell.\n\nAlso, I tried your branch with `MSBUILDTERMINALLOGGER=off` set and run `build -s clr+libs -c release`. It prints the detailed log on the console. That\u0027s way too verbose for console output.\n\nBTW: I have noticed that the default verbosity log for building the libraries partition (`MSBUILDTERMINALLOGGER=off`) has a lot of messages like the following:\n\u003e Could not resolve reference \u0027System.Collections.NonGeneric.dll\u0027 directly or transitively referenced by \u0027C:\\runtime\\artifacts\\obj\\System.ComponentModel.EventBasedAsync\\Release\\net10.0\\System.ComponentModel.EventBasedAsync.dll\u0027 in any of the provided search directories.\n\nThese look like errors, but they do not cause the build to fail and they are eaten by the msbuildlogger so folks probably have not noticed that this is happening. Is that known issue?",
                                           "updatedAt":  "2025-08-22T17:55:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6_pKzz",
                                           "createdAt":  "2025-08-22T18:23:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-08-22T18:23:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6_piyc",
                                           "createdAt":  "2025-08-22T19:06:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "Personally, I don\u0027t like the terminal logger as it doesn\u0027t surface up any failures from native builds. If we could fix that and get enough context to solve native build failures, I\u0027d consider having it enabled.\n\nReally what I want is https://github.com/dotnet/msbuild/issues/8773 (tracked by https://github.com/dotnet/msbuild/issues/8875) to forward the nice Ninja output during the native build so we can have a good indication of progress (and avoid the `BuildRuntime (330.9s)` problem).",
                                           "updatedAt":  "2025-08-22T19:06:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6_rbKv",
                                           "createdAt":  "2025-08-22T22:21:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "vcsjones",
                                           "body":  "\u003e These look like errors, but they do not cause the build to fail and they are eaten by the msbuildlogger so folks probably have not noticed that this is happening. Is that known issue?\n\nI had reported that here https://github.com/dotnet/runtime/issues/113083 which I closed because it is \"known\" and tracked at https://github.com/dotnet/sdk/issues/46236",
                                           "updatedAt":  "2025-08-22T22:21:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6_6hgf",
                                           "createdAt":  "2025-08-25T10:57:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "I tried the same in https://github.com/dotnet/runtime/pull/116623 and then noticed that the native\u0027s build output (triggered via an `MSBuild` Exec task) is still insufficient.",
                                           "updatedAt":  "2025-08-25T10:57:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6_6v0e",
                                           "createdAt":  "2025-08-25T11:13:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEg02NA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkotas",
                                                                               "createdAt":  "2025-08-25T12:33:38Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "agocke",
                                                                               "createdAt":  "2025-08-28T16:27:21Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "rzikm",
                                                                               "createdAt":  "2025-09-04T08:40:03Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "CarnaViire",
                                                                               "createdAt":  "2025-09-04T10:50:09Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "ManickaP",
                                           "body":  "So I just spent few hours playing with this and testing multiple scenarios from my daily workflows. My impression is that the change somewhat slightly mitigated the worst problem we had, but that\u0027s about it.\nI personally consider 2 things crucial to get fixed before this is put in runtime in order to NOT to hinder library developers\u0027 inner loop:\n- Making `v:detailed` default for running tests.\n- Print / Show console output as it\u0027s being written (no batching at the end).\n\n---\n**Details from my experiments**\n\nSo the first issue is with success test run:\n```\ndotnet build -t:test tests/FunctionalTests/\nRestore complete (3.9s)\n  TestUtilities net8.0 succeeded (0.5s) → /home/manicka/repositories/runtime.2/artifacts/bin/TestUtilities/Debug/net8.0/TestUtilities.dll\n  StreamConformanceTests succeeded (0.4s) → /home/manicka/repositories/runtime.2/artifacts/bin/StreamConformanceTests/Debug/net10.0/StreamConformanceTests.dll\n  System.Net.Quic.Functional.Tests net10.0-linux succeeded (97.6s) → /home/manicka/repositories/runtime.2/artifacts/bin/System.Net.Quic.Functional.Tests/Debug/net10.0-linux/System.Net.Quic.Functional.Tests.dll\n\nBuild succeeded in 103.6s\n```\nThere\u0027s **no console output**, there\u0027s no info about **how many tests were skipped or passed**. This is crucial for conditional tests like S.N.Quic which auto-turn off with missing or invalid msquic lib, i.e. passed != OK.\n\nSecondly, I don\u0027t know what\u0027s happening during the run, just seeing the timer like this:\n```\n  System.Net.Quic.Functional.Tests net10.0-linux                                                       RunTests (88.4s)\n```\n\nFailed test run still doesn\u0027t give me enough info:\n```\ndotnet build -t:test tests/FunctionalTests/\nRestore complete (0.9s)\n  TestUtilities net8.0 succeeded (0.1s) → /home/manicka/repositories/runtime.2/artifacts/bin/TestUtilities/Debug/net8.0/TestUtilities.dll\n  StreamConformanceTests succeeded (0.2s) → /home/manicka/repositories/runtime.2/artifacts/bin/StreamConformanceTests/Debug/net10.0/StreamConformanceTests.dll\n  System.Net.Quic.Functional.Tests net10.0-linux failed with 1 error(s) (99.9s) → /home/manicka/repositories/runtime.2/artifacts/bin/System.Net.Quic.Functional.Tests/Debug/net10.0-linux/System.Net.Quic.Functional.Tests.dll\n    /home/manicka/repositories/runtime.2/eng/testing/tests.targets(195,5): error One or more tests failed while running tests from \u0027System.Net.Quic.Functional.Tests\u0027. Please check /home/manicka/repositories/runtime.2/artifacts/bin/System.Net.Quic.Functional.Tests/Debug/net10.0-linux/testResults.xml for details!\n\nBuild failed with 1 error(s) in 102.3s\n```\n\nTest run with `v:detailed` gives me the info but only as a **big dump at the end**. That\u0027s not ideal as I have to wait the whole test run to see that I made a basic mistake. In the \"old\" state, **I can see it as it happens and kill the tests**. For example, if the error causes the tests to timeout, I want to kill the run with the first timeout. Instead, I\u0027ll have to wait for all the tests to run and timeout to learn about it at the end. This might be a difference of 1-2 minute to 20-30 minutes. This includes info about **long running tests**.\n\nSmaller issues:\n- I prefer the human readable time info: `Build succeeded in 806.1s` vs `Time Elapsed 00:11:48.62`\n- File paths are generated with `file://` URI scheme which makes them clickable. Given that most of the file names in the output are dlls that normally users don\u0027t want to \"open\", makes the accidental mis-clicks pretty annoying.",
                                           "updatedAt":  "2025-08-25T11:13:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7ByFne",
                                           "createdAt":  "2025-09-03T23:36:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "If we don\u0027t reenable the terminal logger we need to fix our hack that tries to disable it because it breaks `dotnet test` output for tests.  https://github.com/dotnet/sdk/issues/50441,  https://github.com/dotnet/runtime/issues/94183",
                                           "updatedAt":  "2025-09-04T15:55:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7B975u",
                                           "createdAt":  "2025-09-04T15:28:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "\u003e dotnet build -t:test \n\nThis one is not actually the workflow that\u0027s recommended for end users.  It\u0027s something that came about as a workaround because `dotnet test` didn\u0027t work for folks in this repo.  Agreed that real time feedback for long-running *build* actions is not great in the terminal logger.  That\u0027s what I mentioned above:\n\n\u003e The largest difference is that logging for a project is not emitted until that project completes, however progress is still shown for the project.\n\nDid you try running `dotnet test` on these projects without disabling terminal logger to see what the experience was?  That\u0027s what we tell our customers to do and will need to train our contributors to do again.  I think this *should* have a much better experience.\n\nLet\u0027s let this issue track the proposal of using the terminal logger everywhere (root build, CI, and commands) and let https://github.com/dotnet/runtime/issues/94183 track re-enabling for developer initiated commands.\n",
                                           "updatedAt":  "2025-09-04T15:56:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7B_kMr",
                                           "createdAt":  "2025-09-04T17:12:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e \u003e dotnet build -t:test\n\n\u003e This one is not actually the workflow that\u0027s recommended for end users. \n\nOur default workflows tend to be optimized for small ordinary .NET projects. This repo is not anything like that. I think it is fine for us to deviate from the workflows recommended for end users when they do not work well for us. \n\n`dotnet test` is poor experience for folks who work on the runtimes itself in this repo. It is pain to figure out how to get the test under low-level debugger with `dotnet test`.\n\nHere is the experience with `dotnet build /t:Test`. It tells me the exact command to run the test that makes it very straightforward to get it under debugger:\n```\nC:\\runtime\\src\\libraries\\System.Runtime\\tests\\System.Runtime.Tests\u003ec:\\idw\\timer \\runtime\\dotnet build /t:Test -c release --no-dependencies\n\\runtime\\dotnet build /t:Test -c release --no-dependencies\nC:\\runtime\\.dotnet\n\n  Determining projects to restore...\n  All projects are up-to-date for restore.\n  System.Runtime.Tests -\u003e C:\\runtime\\artifacts\\bin\\System.Runtime.Tests\\release\\net10.0-windows\\System.Runtime.Tests.dll\n  ========================= Begin custom configuration settings ==============================\n  set __IsXUnitLogCheckerSupported=1\n  set XUNIT_HIDE_PASSING_OUTPUT_DIAGNOSTICS=1\n  ========================== End custom configuration settings ===============================\n  ----- start Thu 09/04/2025 10:06:52.85 ===============  To repro directly: =====================================================\n  pushd C:\\runtime\\artifacts\\bin\\System.Runtime.Tests\\release\\net10.0-windows\\\n  \"C:\\runtime\\artifacts\\bin\\testhost\\net10.0-windows-release-x64\\dotnet.exe\" exec --runtimeconfig System.Runtime.Tests.runtimeconfig.json --depsfile System.Runtime.Tests.deps.json C:\\Users\\jkotas\\.nuget\\packages\\microsoft.dotnet.xunitconsolerunner\\2.9.3-beta.25420.121\\build\\..\\tools\\net\\xunit.console.dll System.Runtime.Tests.dll -xml testResults.xml -nologo -notrait category=AdditionalTimezoneChecks -notrait category=OuterLoop -notrait category=failing\n  popd\n  ===========================================================================================================\n    Discovering: System.Runtime.Tests (method display = ClassAndMethod, method display options = None)\n    Discovered:  System.Runtime.Tests (found 9410 of 9457 test cases)\n    Starting:    System.Runtime.Tests (parallel test collections = on [16 threads], stop on fail = off)\n...\n  === TEST EXECUTION SUMMARY ===\n     System.Runtime.Tests  Total: 66808, Errors: 0, Failed: 0, Skipped: 16, Time: 10.272s\n  ----- end Thu 09/04/2025 10:07:05.20 ----- exit code 0 ----------------------------------------------------------\n\nBuild succeeded.\n    0 Warning(s)\n    0 Error(s)\n\nTime Elapsed 00:00:20.09\nResults of execution:\n\n    Exit code 0\n    Time of execution 21.677\n```\n\nCompare this with the vanilla `dotnet test` experience. Good luck figuring out how to attach the low-level debugger to the test process. Also, notice that it takes more than 2x longer to run than the command above.\n```\nC:\\runtime\\src\\libraries\\System.Runtime\\tests\\System.Runtime.Tests\u003ec:\\idw\\timer \\runtime\\dotnet test -c release\n\\runtime\\dotnet test -c release\nC:\\runtime\\.dotnet\n\n  Determining projects to restore...\n  All projects are up-to-date for restore.\n  TestUtilities -\u003e C:\\runtime\\artifacts\\bin\\TestUtilities\\release\\net8.0\\TestUtilities.dll\n  ILLink.RoslynAnalyzer -\u003e C:\\runtime\\artifacts\\bin\\ILLink.RoslynAnalyzer\\release\\netstandard2.0\\ILLink.RoslynAnalyzer.dll\n  ILLink.CodeFixProvider -\u003e C:\\runtime\\artifacts\\bin\\ILLink.CodeFixProvider\\release\\netstandard2.0\\ILLink.CodeFixProvider.dll\n  Mono.Linker -\u003e C:\\runtime\\artifacts\\bin\\Mono.Linker\\ref\\release\\net10.0\\illink.dll\n  Mono.Linker -\u003e C:\\runtime\\artifacts\\bin\\Mono.Linker\\release\\net10.0\\illink.dll\n  ILLink.Tasks -\u003e C:\\runtime\\artifacts\\bin\\ILLink.Tasks\\release\\net\\ILLink.Tasks.dll\n  System.Runtime.Serialization.Formatters -\u003e C:\\runtime\\artifacts\\bin\\System.Runtime.Serialization.Formatters\\ref\\release\\net8.0\\System.Runtime.Serialization.Formatters.dll\n  System.Runtime.Serialization.Formatters -\u003e C:\\runtime\\artifacts\\bin\\System.Runtime.Serialization.Formatters\\release\\net8.0\\System.Runtime.Serialization.Formatters.dll\n  TestILAssembly -\u003e C:\\runtime\\artifacts\\bin\\TestILAssembly\\release\\netstandard2.0\\TestILAssembly.dll\n  System.Reflection.TestModule -\u003e C:\\runtime\\artifacts\\bin\\System.Reflection.TestModule\\release\\netstandard2.0\\System.Reflection.TestModule.dll\n  TestUtilities.Unicode -\u003e C:\\runtime\\artifacts\\bin\\TestUtilities.Unicode\\release\\net10.0\\TestUtilities.Unicode.dll\n  System.TestStructs -\u003e C:\\runtime\\artifacts\\bin\\System.TestStructs\\release\\netstandard2.0\\System.TestStructs.dll\n  Microsoft.Interop.SourceGeneration -\u003e C:\\runtime\\artifacts\\bin\\Microsoft.Interop.SourceGeneration\\release\\netstandard2.0\\Microsoft.Interop.SourceGeneration.dll\n  DownlevelLibraryImportGenerator -\u003e C:\\runtime\\artifacts\\bin\\DownlevelLibraryImportGenerator\\release\\netstandard2.0\\Microsoft.Interop.LibraryImportGenerator.Downlevel.dll\n  TestLoadAssembly -\u003e C:\\runtime\\artifacts\\bin\\TestLoadAssembly\\release\\netstandard2.0\\TestLoadAssembly.dll\n  TestCollectibleAssembly -\u003e C:\\runtime\\artifacts\\bin\\TestCollectibleAssembly\\release\\netstandard2.0\\TestCollectibleAssembly.dll\n  System.Private.CoreLib.Generators -\u003e C:\\runtime\\artifacts\\bin\\System.Private.CoreLib.Generators\\release\\netstandard2.0\\System.Private.CoreLib.Generators.dll\n  System.Private.CoreLib -\u003e C:\\runtime\\artifacts\\bin\\System.Private.CoreLib\\ref\\release\\net10.0\\System.Private.CoreLib.dll\n  LibraryImportGenerator -\u003e C:\\runtime\\artifacts\\bin\\LibraryImportGenerator\\release\\netstandard2.0\\Microsoft.Interop.LibraryImportGenerator.dll\n  System.Private.CoreLib -\u003e C:\\runtime\\artifacts\\bin\\coreclr\\windows.x64.release\\IL\\System.Private.CoreLib.dll\n  System.Private.Uri -\u003e C:\\runtime\\artifacts\\bin\\System.Private.Uri\\release\\net10.0\\System.Private.Uri.dll\n  System.Runtime -\u003e C:\\runtime\\artifacts\\bin\\System.Runtime\\ref\\release\\net10.0\\System.Runtime.dll\n  System.Runtime -\u003e C:\\runtime\\artifacts\\bin\\System.Runtime\\release\\net10.0\\System.Runtime.dll\n  System.Drawing.Common -\u003e C:\\runtime\\artifacts\\bin\\System.Drawing.Common\\stub\\release\\net10.0\\System.Drawing.Common.dll\n  System.Windows.Extensions -\u003e C:\\runtime\\artifacts\\bin\\System.Windows.Extensions\\ref\\release\\net10.0\\System.Windows.Extensions.dll\n  System.Windows.Extensions -\u003e C:\\runtime\\artifacts\\bin\\System.Windows.Extensions\\release\\net10.0\\System.Windows.Extensions.dll\n  System.Security.Permissions -\u003e C:\\runtime\\artifacts\\bin\\System.Security.Permissions\\ref\\release\\net10.0\\System.Security.Permissions.dll\n  System.Security.Permissions -\u003e C:\\runtime\\artifacts\\bin\\System.Security.Permissions\\release\\net10.0\\System.Security.Permissions.dll\n  System.Windows.Extensions -\u003e C:\\runtime\\artifacts\\bin\\System.Windows.Extensions\\release\\net10.0-windows\\System.Windows.Extensions.dll\n  System.Runtime.Tests -\u003e C:\\runtime\\artifacts\\bin\\System.Runtime.Tests\\release\\net10.0-windows\\System.Runtime.Tests.dll\nTest run for C:\\runtime\\artifacts\\bin\\System.Runtime.Tests\\release\\net10.0-windows\\System.Runtime.Tests.dll (.NETCoreApp,Version=v10.0)\nA total of 1 test files matched the specified pattern.\n...\nResults File: C:\\runtime\\artifacts\\bin\\System.Runtime.Tests\\release\\net10.0-windows\\TestResults\\jkotas_CPC-jkota-TG7X5_2025-09-04_10_02_54.trx\nHtml Logger Error : \u0027￿\u0027, hexadecimal value 0xFFFF, is an invalid character.\n\nPassed!  - Failed:     0, Passed: 66792, Skipped:    16, Total: 66808, Duration: 20 s - System.Runtime.Tests.dll (net10.0)\nResults of execution:\n\n    Exit code 0\n    Time of execution 46.032\n```",
                                           "updatedAt":  "2025-09-04T17:14:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7B_7VE",
                                           "createdAt":  "2025-09-04T17:31:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "I agree with all the sentiment shared so far. I have mixed feeling to stay the least. Just a few quick thoughts:\n1. The above comparison is apples vs bananas because the first (`dotnet build /t:Test`) passes `--no-dependencies` in vs the second one (`dotnet test`) doesn\u0027t. This is because `dotnet test` doesn\u0027t have such an option. @baronfel @nohwnd any idea why this option isn\u0027t present?\n2. @agocke and I discussed numerous times that runtime would immensely benefit from upgrading to xunit v3 (and potentially also MTP). That will simplify the test execution and will make it easier to debug tests. I still think we probably want an additional logging that prints the full command (as you still need to run with the correct dotnet host and live shared framework). Our thinking was that when that happens, we can converge everything and everyone onto the `dotnet test` entrypoint.",
                                           "updatedAt":  "2025-09-05T17:04:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7B_-hO",
                                           "createdAt":  "2025-09-04T17:33:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "baronfel",
                                           "body":  "I have literally never heard of or used `--no-dependencies`, and I own the product. I wonder how broadly used this option actually is? re: the `test` command not having it, it\u0027s probably \u0027just\u0027 a gap that we can easily fill. ",
                                           "updatedAt":  "2025-09-04T17:33:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7CAEVc",
                                           "createdAt":  "2025-09-04T17:38:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEg4-nw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "baronfel",
                                                                               "createdAt":  "2025-09-04T17:45:43Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e I have literally never heard of or used --no-dependencies, and I own the product. I wonder how broadly used this option actually is?\n\nI use it all the time when working with dotnet/runtime libraries since the time spent on dependency checks in incremental builds is atrocious, and these dependency checks do not cover the unmanaged runtime where my changes typically are so I need to be carefully about rebuilding dependencies manually anyway.",
                                           "updatedAt":  "2025-09-04T17:38:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7CAOts",
                                           "createdAt":  "2025-09-04T17:47:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ViktorHofer",
                                           "body":  "That flag behind the scenes just means `/p:BuildProjectReferences=false` which tells MSBuild to only build the entry point project without any of its dependencies. Its quite useful, actually especially for tests when you only want to rebuilt the test app.",
                                           "updatedAt":  "2025-09-04T17:47:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7CAQuv",
                                           "createdAt":  "2025-09-04T17:49:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEg5Cmg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ViktorHofer",
                                                                               "createdAt":  "2025-09-04T17:51:40Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "baronfel",
                                           "body":  "it totally makes sense as a thing, don\u0027t get me wrong. I\u0027ve just never seen it used in practice. In any case, it should be trivial to get it added to `test` for 10.",
                                           "updatedAt":  "2025-09-04T17:49:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7CJM1y",
                                           "createdAt":  "2025-09-05T06:13:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Youssef1313",
                                           "body":  "@jkotas To comment on the part about attaching debugger, I don\u0027t think you really need the full command used for running to be able to attach debugger. Just set `VSTEST_HOST_DEBUG` env variable to 1, it should tell you the PID to attach to, and the process will be waiting until the debugger is attached (or a key is pressed). https://github.com/microsoft/vstest/blob/f7325aaca89a8391520519f97cd749a8be281544/src/Microsoft.TestPlatform.Execution.Shared/DebuggerBreakpoint.cs#L153-L165\n\n",
                                           "updatedAt":  "2025-09-05T06:13:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7CLC87",
                                           "createdAt":  "2025-09-05T09:21:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "\u003e Just set VSTEST_HOST_DEBUG env variable to 1\n\nfwiw everytime I need this I need to google and find some random github issue that explains this env var (and convince myself it is the right one and not `VSTEST_RUNNER_DEBUG`).\n\nCan we get this documented somewhere officially? or even better, just add a --debug flag to `test`?",
                                           "updatedAt":  "2025-09-05T09:21:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7CLHE9",
                                           "createdAt":  "2025-09-05T09:26:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Youssef1313",
                                           "body":  "It\u0027s documented [here](https://github.com/microsoft/vstest/blob/main/docs/environment-variables.md).\n\nAlso note that, in xunit.v3, tests don\u0027t run in testhost.exe, while VSTEST_HOST_DEBUG attaches debugger to the testhost. So depending on what you want to debug, I *think* it may not be the right process. I\u0027m not sure if xunit.v3 has some other env variable, or if it should also respect `VSTEST_HOST_DEBUG`.\n\nFor adding `--debug` to `test`, it will be a question for @nohwnd. But at least for Microsoft.Testing.Platform, we added already `--debug` very recently. Eventually, I would love to see dotnet/runtime moving to xunit.v3 and Microsoft.Testing.Platform.",
                                           "updatedAt":  "2025-09-05T09:29:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7CQgUp",
                                           "createdAt":  "2025-09-05T16:53:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEhF0vw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "vcsjones",
                                                                               "createdAt":  "2025-09-05T17:02:21Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e @jkotas To comment on the part about attaching debugger, I don\u0027t think you really need the full command used for running to be able to attach debugger. Just set VSTEST_HOST_DEBUG env variable to 1, \n\nThis does not solve the problem for me.\n\nEngineers working on the runtime itself often need to set custom environment variable settings to help them diagnose the problem. These environment variables come with side effects - it is important that these environment variables are set just for the single process being debugged. Also, it is not uncommon to debug with time travel tracing. It requires launching the process as admin via ttd.exe. If I have the exact command line to launch, I can do all this in very straightforward way without needing to consult any documentation.",
                                           "updatedAt":  "2025-09-05T16:53:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7CRvVL",
                                           "createdAt":  "2025-09-05T18:57:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Youssef1313",
                                           "body":  "\u003e It requires launching the process as admin via ttd.exe. If I have the exact command line to launch, I can do all this in very straightforward way without needing to consult any documentation.\n\nThis kind of thing will be really much easier with Microsoft.Testing.Platform. There are no complex commands involved in running MTP apps. The test projects are simply standalone console apps, so you can build them and just run the produced apphost (or run dotnet exec path/to/dll).\n\nBut whether or not some adjustments/enhancements can be made to VSTest is a question for @nohwnd.",
                                           "updatedAt":  "2025-09-05T18:57:51Z"
                                       }
                                   ],
                         "totalCount":  19
                     },
        "title":  "Reenable MSBuild Terminal Logger",
        "labels":  [
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/119146",
        "createdAt":  "2025-08-27T16:05:40Z",
        "number":  119146,
        "author":  "m-celikba",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-08-29T13:48:07Z",
        "body":  "From the build table pages:\n[sdk](https://github.com/dotnet/dotnet/blob/main/docs/builds-table.md)\n[runtime](https://github.com/dotnet/runtime/blob/main/docs/project/dogfooding.md)\n\nCan I safely assume that eg for winx64:\ndaily sdk is at https://ci.dot.net/public/Sdk/%version%/dotnet-sdk-%version%-win-x64.exe\ndaily runtime is at https://ci.dot.net/public/Runtime/%version%/dotnet-runtime-%version%-win-x64.exe\nand the runtime is the one in the sdk ?",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOwPILOw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc7Aeo9M",
                                           "createdAt":  "2025-08-27T18:19:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-08-27T18:19:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7AgIiJ",
                                           "createdAt":  "2025-08-27T20:28:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEf8jcQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "m-celikba",
                                                                               "createdAt":  "2025-08-28T06:12:10Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "Yes, for .NET 10 and newer that rule will work.",
                                           "updatedAt":  "2025-08-27T20:28:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7A8gs7",
                                           "createdAt":  "2025-08-29T13:41:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akoeplinger",
                                           "body":  "I see that the dogfood builds table is outdated on runtime and still refers to 9.0, I\u0027ll fix it.",
                                           "updatedAt":  "2025-08-29T13:48:07Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "how do I match a nightly runtime build to a nightly sdk builds ?",
        "labels":  [
                       "question",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/119402",
        "createdAt":  "2025-09-05T17:46:43Z",
        "number":  119402,
        "author":  "xtqqczze",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-11T23:46:12Z",
        "body":  "Currently, some GitHub Actions workflows in this repository reference actions by tags, e.g.:\n\nhttps://github.com/dotnet/runtime/blob/541ac3eae8dc32c76211fed52ab501de038fcdca/.github/workflows/bump-chrome-version.yml#L19\n\nReferencing actions by tags or unpinned versions poses a security and stability risk, since the action’s code may change without notice. The recommended best practice is to pin actions to a full-length commit SHA1, ensuring workflows always use the exact intended version.\n\n**Suggested solution:**\n\n* Update all GitHub Actions in this repo to use full-length commit SHAs instead of version tags or shortened SHAs.\n* Add a lint/check to enforce this in CI.\n\ncc:@jeffhandley",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOw65_3A==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc7CR3su",
                                           "createdAt":  "2025-09-05T19:12:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "xtqqczze",
                                           "body":  "```log\nScanning .github/workflows for unpinned or short-pinned actions...\n.github/workflows/backport.yml:18: uses: dotnet/arcade/.github/workflows/backport-base.yml@main\n.github/workflows/locker.yml:26: uses: actions/checkout@v5\n.github/workflows/bump-chrome-version.yml:19: uses: actions/checkout@v5\n.github/workflows/bump-chrome-version.yml:50: uses: actions/github-script@v7\n.github/workflows/inter-branch-merge-flow.yml:13: uses: dotnet/arcade/.github/workflows/inter-branch-merge-base.yml@main\n.github/workflows/jit-format.yml:32: uses: actions/setup-dotnet@v4\n.github/workflows/jit-format.yml:36: uses: actions/checkout@v5\n.github/workflows/jit-format.yml:40: uses: actions/setup-python@v5\n.github/workflows/jit-format.yml:49: uses: actions/upload-artifact@v4\n.github/workflows/markdownlint.yml:22: uses: actions/setup-node@v4\n.github/workflows/aspnetcore-sync.yml:19: uses: actions/checkout@v5\n.github/workflows/aspnetcore-sync.yml:26: uses: actions/checkout@v5\n.github/workflows/aspnetcore-sync.yml:60: uses: dotnet/actions-create-pull-request@v4\n❌ Found unpinned / short-pinned actions (listed above).\n```",
                                           "updatedAt":  "2025-09-05T19:12:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7CSBFa",
                                           "createdAt":  "2025-09-05T19:28:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "teo-tsirpanis",
                                           "body":  "All these actions are from trusted organizations; I don\u0027t think pinning to the commit it\u0027s worth the increased noise from Dependabot PRs.",
                                           "updatedAt":  "2025-09-05T19:28:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7CSBdU",
                                           "createdAt":  "2025-09-05T19:29:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-09-05T19:29:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7CSVrj",
                                           "createdAt":  "2025-09-05T19:56:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tannergooding",
                                           "body":  "These workflows are also notably only used for GitHub CI, where we already run and test user PRs.\n\nThe official builds that produce shipping binaries run against an internal mirror where all the enterprise requirements are being met; such as having dependency flow and other considerations fully locked down.",
                                           "updatedAt":  "2025-09-05T19:56:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7CSZG-",
                                           "createdAt":  "2025-09-05T20:02:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "xtqqczze",
                                           "body":  "\u003e All these actions are from trusted organizations; I don\u0027t think pinning to the commit it\u0027s worth the increased noise from Dependabot PRs.\n\nIf none of the actions are rewriting tags, I don’t think there would be any increased noise.\n\n\u003e ofc, since you\u0027ve shown Dependabot is happy to update SHA\u0027s, there\u0027s no downside as far as I see.\n\n_Originally posted by @danmoseley in https://github.com/dotnet/runtime/issues/101406#issuecomment-2075290765_\n",
                                           "updatedAt":  "2025-09-05T20:02:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7Drn_c",
                                           "createdAt":  "2025-09-11T23:46:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "xtqqczze",
                                           "body":  "Will be addressed by https://github.com/dotnet/runtime/pull/119606.",
                                           "updatedAt":  "2025-09-11T23:46:12Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "Require GitHub Actions to be pinned to a commit",
        "labels":  [
                       "area-Infrastructure",
                       "untriaged"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/119468",
        "createdAt":  "2025-09-08T17:25:28Z",
        "number":  119468,
        "author":  "xtqqczze",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-10T23:23:06Z",
        "body":  "Some files have an indentation size of 4 when it should be 2, e.g.:\n\nhttps://github.com/dotnet/runtime/blob/5d98ad82efb25c1489c6d8f8e8e3daac56f404ec/.config/CredScanSuppressions.json#L1-L3",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOw0635Q==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc7DTrfl",
                                           "createdAt":  "2025-09-10T22:16:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-09-10T22:16:51Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Fix indentation in `.json` files",
        "labels":  [
                       "help wanted",
                       "area-Infrastructure"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/119586",
        "createdAt":  "2025-09-11T15:39:15Z",
        "number":  119586,
        "author":  "xtqqczze",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-12T16:41:52Z",
        "body":  "`stylecop.json` is used for Roslyn-based `StyleCop.Analyzers`, while `Settings.StyleCop` is legacy.\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOw9sfeQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc7D2x95",
                                           "createdAt":  "2025-09-12T16:17:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-09-12T16:17:33Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Replace `Settings.StyleCop` file with `stylecop.json`",
        "labels":  [
                       "area-Infrastructure",
                       "untriaged"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/119592",
        "createdAt":  "2025-09-11T17:27:20Z",
        "number":  119592,
        "author":  "xtqqczze",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-12T16:41:29Z",
        "body":  "Enforce UTF-8 without byte-order mark in the following files:\n\nhttps://github.com/dotnet/runtime/blob/f12390d9e0c655c2f7e97ab970a7806010d95801/.editorconfig#L15-L17",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOw9seCA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc7DqDO6",
                                           "createdAt":  "2025-09-11T20:46:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "xtqqczze",
                                           "body":  "Something like:\n\n```sh\nnpm install -g eclint\neclint check $(git ls-files \u0027*.resx\u0027)\n```",
                                           "updatedAt":  "2025-09-11T20:46:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7D2x4I",
                                           "createdAt":  "2025-09-12T16:17:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-09-12T16:17:28Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Enforce `.editorconfig` charset setting in CI",
        "labels":  [
                       "area-Infrastructure",
                       "untriaged"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/119612",
        "createdAt":  "2025-09-12T01:17:54Z",
        "number":  119612,
        "author":  "ericstj",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-12T01:24:41Z",
        "body":  "\u003cimg width=\"2340\" height=\"625\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/15b0b8e4-7594-4b0f-865a-309cabd77747\" /\u003e\n\n```\n{System.MissingMethodException: Constructor on type \u0027Microsoft.DotNet.XUnitExtensions.ConditionalClassDiscoverer\u0027 not found.\n   at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture) in /workspaces/runtime/src/coreclr/System.Private.CoreLib/src/System/RuntimeType.CoreCLR.cs:line 3866\n   at System.Activator.CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes) in /workspaces/runtime/src/libraries/System.Private.CoreLib/src/System/Activator.RuntimeType.cs:line 39\n   at System.Activator.CreateInstance(Type type, Object[] args) in /workspaces/runtime/src/libraries/System.Private.CoreLib/src/System/Activator.cs:line 31\n   at Xunit.Sdk.ExtensibilityPointFactory.CreateInstance(IMessageSink diagnosticMessageSink, Type type, Object[] ctorArgs) in /_/src/xunit.execution/Sdk/ExtensibilityPointFactory.cs:line 25}\n```\n\nThis is annoying, but apparently expected https://github.com/xunit/xunit/issues/556.\nhttps://github.com/xunit/xunit/blob/474a71a57e842469fb05c970d5f64165eaea0b23/src/xunit.execution/Sdk/ExtensibilityPointFactory.cs#L22-L38",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOw7MbdA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc7Dsxt0",
                                           "createdAt":  "2025-09-12T01:24:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-09-12T01:24:41Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "[Codespaces] Debugging from VSCode hits an exception when running tests",
        "labels":  [
                       "area-Infrastructure",
                       "untriaged"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/119665",
        "createdAt":  "2025-09-12T20:02:46Z",
        "number":  119665,
        "author":  "mdh1418",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T23:04:48Z",
        "body":  "## Build Information\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=1146594\nBuild error leg or test failing: iOS.Device.Aot.Test.WorkItemExecution\nPull request: https://github.com/dotnet/runtime/pull/119651\n\u003c!-- Error message template  --\u003e\n## Error Message\n\n`App run has failed. mlaunch exited with 1`\n`mlaunch[2654:24122] Requested but did not find extension point with identifier Xcode.*`\n`XHarness exit code: 83 (APP_LAUNCH_FAILURE)`\n\n```json\n{\n  \"ErrorMessage\": \"APP_LAUNCH_FAILURE\",\n  \"ErrorPattern\": \"\",\n  \"BuildRetry\": false,\n  \"ExcludeConsoleLog\": false\n}\n```\n\n\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146594\r\n**Error message validated:** `[APP_LAUNCH_FAILURE`]\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 9/12/2025 8:03:03 PM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n\r\n|Build|Definition|Test|Pull Request|\r\n|---|---|---|---|\r\n|[1153980](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153980)|dotnet/runtime|[reflection_DefaultInterfaceMethods.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153980\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31879278\u0026resultId=100044)||\r\n|[1153985](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153985)|dotnet/runtime|[reflection_StaticInterfaceMembers.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153985\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31878986\u0026resultId=100041)||\r\n|[1153780](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153780)|dotnet/runtime|[tracing_eventpipe.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153780\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31870494\u0026resultId=100048)||\r\n|[1153029](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153029)|dotnet/runtime|[JIT_opt.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1153029\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31852450\u0026resultId=100047)||\r\n|[1152778](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152778)|dotnet/runtime|[reflection_regression.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152778\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31845476\u0026resultId=100043)||\r\n|[1149107](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149107)|dotnet/runtime|[JIT_Intrinsics.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149107\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31739928\u0026resultId=100044)||\r\n|[1148921](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148921)|dotnet/runtime|[JIT_Regression.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148921\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31730766\u0026resultId=100046)||\r\n|[1148795](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148795)|dotnet/runtime|[iOS.Device.ParallelForEachAsync.Test.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148795\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31729114\u0026resultId=100005)|dotnet/runtime#119663|\r\n|[1148726](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148726)|dotnet/runtime|[tracing_eventpipe.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148726\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31724564\u0026resultId=100038)||\r\n|[1148535](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148535)|dotnet/runtime|[baseservices_exceptions.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148535\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31718060\u0026resultId=100041)||\r\n|[1148550](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148550)|dotnet/runtime|[nativeaot.SmokeTests.DynamicGenerics.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148550\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31717850\u0026resultId=100012)||\r\n|[1148304](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148304)|dotnet/runtime|[tracing_eventlistener.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148304\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31709144\u0026resultId=100044)||\r\n|[1148169](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148169)|dotnet/runtime|[tracing_eventlistener.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148169\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31705200\u0026resultId=100043)||\r\n|[1147525](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147525)|dotnet/runtime|[reflection_StaticInterfaceMembers.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147525\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31675428\u0026resultId=100045)||\r\n|[1147469](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147469)|dotnet/runtime|[reflection_StaticInterfaceMembers.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147469\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31672606\u0026resultId=100043)||\r\n|[1146616](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146616)|dotnet/runtime|[reflection_regression.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146616\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31642634\u0026resultId=100044)||\r\n|[1146594](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146594)|dotnet/runtime|[iOS.Device.Aot.Test.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1146594\u0026view=ms.vss-test-web.build-test-results-tab\u0026runId=31641234\u0026resultId=100005)|dotnet/runtime#119651|\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|3|13|17|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOxKrxBg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc7EquqL",
                                           "createdAt":  "2025-09-16T16:34:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027os-ios\u0027: @vitek-karas, @kotlarmilos, @steveisok, @akoeplinger\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-09-16T16:34:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7EqvEG",
                                           "createdAt":  "2025-09-16T16:35:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-09-16T16:35:23Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "[Test][iOS] iOS.Device.Aot.Test fails with APP_LAUNCH_FAILURE",
        "labels":  [
                       "blocking-clean-ci",
                       "area-Infrastructure",
                       "untriaged",
                       "os-ios",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/119808",
        "createdAt":  "2025-09-17T14:08:03Z",
        "number":  119808,
        "author":  "vcsjones",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-17T14:09:39Z",
        "body":  "Apple released their Apple 26 SDK (macOS, tvOS, iOS). Changing the build to use the new SDK will allow us to light up some new features that are available in CryptoKit starting in Apple 26, in particular support for Post Quantum primitives (ML-DSA, ML-KEM) as well as SHA-3.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOxOKvLg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc7E4q8u",
                                           "createdAt":  "2025-09-17T14:09:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/runtime-infrastructure\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-09-17T14:09:39Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Update build to use the Apple 26 SDK",
        "labels":  [
                       "os-mac-os-x",
                       "area-Infrastructure",
                       "untriaged"
                   ]
    }
]
