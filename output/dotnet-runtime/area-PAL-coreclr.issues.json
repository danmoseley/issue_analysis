[
    {
        "url":  "https://github.com/dotnet/runtime/issues/4173",
        "createdAt":  "2015-04-24T20:07:51Z",
        "number":  4173,
        "author":  "tracker1",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-02-10T15:48:49Z",
        "body":  "Just curious, given the support given towards FreeBSD in addition to Linux how difficult it would be to getting CoreCLR working with Solaris and derivatives?  Also, it may be worth testing out Linux distros that use core libraries that aren\u0027t glibc (such as Alpine, etc).\r\n\r\nOS Specific Labels:\r\n\r\n* [Alpine Linux](https://github.com/dotnet/runtime/labels/os-alpine)\r\n* [Android](https://github.com/dotnet/runtime/labels/os-android)\r\n* [FreeBSD OS](https://github.com/dotnet/runtime/labels/os-freebsd)\r\n* [Apple iOS](https://github.com/dotnet/runtime/labels/os-ios)\r\n* [Linux OS (any supported distro)\t](https://github.com/dotnet/runtime/labels/os-linux)\r\n* [macOS aka OSX](https://github.com/dotnet/runtime/labels/os-mac-os-x)\r\n* [NetBSD OS, currently not officially supported](https://github.com/dotnet/runtime/labels/os-netbsd)\r\n* [SunOS, currently not officially supported](https://github.com/dotnet/runtime/labels/os-SunOS) #34944\r\n* [Tizen OS](https://github.com/dotnet/runtime/labels/os-tizen)\r\n* [Apple tvOS](https://github.com/dotnet/runtime/labels/os-tvos)\r\n* [Windows IoT](https://github.com/dotnet/runtime/labels/os-windows-iot)\r\n* [Nano Windows SKU](https://github.com/dotnet/runtime/labels/os-windows-nano)\r\n* [WSL - Windows Subsystem for Linux](https://github.com/dotnet/runtime/labels/os-windows-wsl)\r\n* [Windows](https://github.com/dotnet/runtime/labels/os-windows)\r\n* [Unsupported OSes](https://github.com/dotnet/runtime/labels/os-unsupported)\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOndxNYw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDk2MDU2MzQ4",
                                           "createdAt":  "2015-04-24T20:35:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAb0mGw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "stackh34p",
                                                                               "createdAt":  "2018-09-10T10:49:36Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "richlander",
                                           "body":  "Hi @tracker1. Thanks for the interest in the project.\n\nYou can look at the closed PRs for FreeBSD to see what the \"FreeBSD Port Team\" had to do get to this point. I\u0027m sure that the port team members would be happy to comment as well.\n\nhttps://github.com/dotnet/coreclr/pulls?q=is%3Apr+is%3Aclosed+label%3AFreeBSD\n\nWe\u0027re happy for other folks to bring up other OSes. The model that we used for FreeBSD worked really nicely. A team of enthusiasts formed a \"Port Team\" to bring up the port together. A larger community, including MSFT folks helped them a bit, too. See the formation of the FreeBSD Port Team: dotnet/runtime#4039.\n\n/cc @janhenke, @josteink\n",
                                           "updatedAt":  "2015-04-24T20:35:14Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDk2MDkwODYy",
                                           "createdAt":  "2015-04-24T23:01:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ghuntley",
                                           "body":  "Thanks to @phillipkent from Interroute who has comped vmware based infrastructure for the developers it is totally possible to spin up environments for Solaris/OpenIndiana/SmartOS. The real crux/pain in getting those operating systems working is the CICD infrastructure and doing builds on environments that don\u0027t work on the platform yet that the CICD runs on.  /cc @mmitche anyway around this hurdle?\n\nSee issue dotnet/runtime#4098\n",
                                           "updatedAt":  "2015-04-24T23:31:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDk2MTU3Mzkw",
                                           "createdAt":  "2015-04-25T08:24:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "josteink",
                                           "body":  "@tracker1 Basically porting something like .NET isn\u0027t going to be easy, and you\u0027re bound to hit at least one issue you wont be able to solve yourself. If you\u0027re the only guy working on your port, that will be it. That\u0027s the death-sentence. You\u0027re done.\n\nI would take @richlander\u0027s advice and try to get a team/group going. You can try to create an issue, like @janhenke did and gather interested parties to it through any means you find reasonable (reddit, irc, whatever).\n\nWhen you see that you have sufficient people interested and momentum to get going, that\u0027s when I would make the decision to go, or if it doesn\u0027t bode well, create a prive fork where you see how far you can get on your own.\n\nCreating \"good\" pull-requests for mainline coreclr does involve quite a bit of extra work as opposed to just getting the build going yourself, so if you\u0027re not sure you have a team which can pull through, I don\u0027t think it would be wise to spend your limited energy on matters like that _yet_.\n\nThis is what @ajensenwaud and others did for FreeBSD, before @janhenke summoned us to try to do it \"for real\". I think it worked out well.\n\nWith that said: Best of luck to you!\n",
                                           "updatedAt":  "2015-04-25T08:24:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDk2MTU3NTc1",
                                           "createdAt":  "2015-04-25T08:32:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ajensenwaud",
                                           "body":  "I am currently setting up an OpenIndiana instance on Interoute where we can do a couple of initial tests. I am not a Solaris expert so might not be able to support the port effort, but I will do my best.\n",
                                           "updatedAt":  "2015-04-25T08:32:10Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDk2NDQ4OTI3",
                                           "createdAt":  "2015-04-26T23:48:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ghuntley",
                                           "body":  "@ajensenwaud solaris/aix/hpux sysadmin (and potentially physical hardware) is something I can aide with when/if needed.\n",
                                           "updatedAt":  "2015-04-26T23:54:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDk4NDQ5MjEx",
                                           "createdAt":  "2015-05-03T07:47:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEelL6A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "todthomson",
                                                                               "createdAt":  "2016-06-21T23:58:33Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "dschilling",
                                                                               "createdAt":  "2017-09-26T19:32:46Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "RenderMichael",
                                                                               "createdAt":  "2025-08-18T05:34:52Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  null,
                                           "body":  "While I agree with @josteink\u0027s idea of DIY and acknowledge the inherent complexity of this project, I have slightly different opinion. :bulb: \n\nIMO, the more OS coverage is assured at this early stage and coreclr source encounter many many environments and low-level runtimes, the better it is for xplat and robust base. Otherwise the bugs will grow and the *nix support will be impartial; focused more on one variant than the other. \n\nHaving said that, please also consider targeting Alpine Linux and Lilblue Linux. The older version of former and the current version of latter make use of `µclibc`, while the latest version of Apline uses `musl libc`. I particularly mentioned those as they do not use `glibc` (https://github.com/andikleen/glibc) but a light-weight performance-conscious C runtimes. If someone has enough experience, I would suggest to test coreclr against `dietlibc` as well.\n\nSecondly, can you please visit these distributions/flavors once, _which might already be supported_, and add any differencing steps for { building, installing, consuming } into the docs (or mention them in docs anyway, to declare that you acknowledge those distributions here):\n- Arch\n- Suse\n- Gentoo\n- Fedora\n- Alpine\n- Mint\n\n\u003e .. is something I can aide with when/if needed.\n\n@ghuntley, I think it\u0027s now or never! :sunglasses:  if you have access to Solaris, and the initial try failed, could you please open a separate issue so we know it is being tackled somewhere and the current stopper is such and such. Maybe someone else run into it propose a solution and things move forward rather swiftly. :zap: \n",
                                           "updatedAt":  "2015-05-03T14:44:37Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDk4NDYwODQ4",
                                           "createdAt":  "2015-05-03T09:46:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "josteink",
                                           "body":  "@jasonwilliams200OK You have some good feedback there. My advice was just meant as that, and not as some general \"law\" which must be followed. Not that I\u0027m in any position to suggest or enforce such anyway :)\n\nI think the [coreclr contribution-guidelines](https://github.com/dotnet/coreclr/wiki/Contributing#contributing-ports) are _very clear_ about the point that ports are welcome, and I\u0027m sure whatever route you chose, your commits will be welcomed.\n\nAs for Linux-support across distros, I think that\u0027s a _very_ good point and very good idea. IMO too many projects are somewhat Ubuntu-centric these days, and it probably wouldn\u0027t take much work mapping out and documenting what other distros are supported, and what work is required.\n\nI\u0027d limit my initial efforts to the \"main\" distros, and not derivatives (like Mint), but this is obviously stuff which can be discussed.\n\nSo for this part, I think the best would be to go and make a separate issue for it. That way it can be tracked properly, and closed when completed. Since it was your idea, you deserve the credits for it, so I think you should go and make it :) \n\nWith that said: Sorry for hijacking the thread with Linux-stuff. Back to Solaris/OpenIndiana-related matters!\n",
                                           "updatedAt":  "2015-05-03T09:46:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDk5MjA2NjMx",
                                           "createdAt":  "2015-05-05T20:10:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tracker1",
                                           "body":  "@josteink Agreed on many projects being Ubuntu centric... especially in the light of how widespread docker use is becomming.  I\u0027ve been more aware of how big some of the base images for projects are getting, and as @jasonwilliams200OK mentioned Alpine, I\u0027ve been doing some testing of a few projects under it (specifically for docker use).\n\n@richlander I appreciate your feedback, and I\u0027m not myself actually running OpenIndianna/Solaris, I just want to support making this effort as portable as possible, because it makes things closer to anti-lockin.  I tend to run my deploys to Linux lately (still supporting some Windows), but would like the option to target other platforms in the future if they are a good fit.  Given how much of a baseline this project is for future .Net development, keeping it very broad is imho a good idea.\n\nIn light of how much MS has supported making sure that libuv/ev work in windows, it\u0027s easy to see a similar effort here in making this work in as many places as possible.\n",
                                           "updatedAt":  "2015-05-05T20:10:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDk5NTE0NDMx",
                                           "createdAt":  "2015-05-06T15:29:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "richlander",
                                           "body":  "@tracker1 It\u0027s a good sentiment, and we\u0027re happy for people to help us to that end. We\u0027ve got our hands full with our current priorities, which as @josteink points up, we\u0027ve documented. We\u0027ve got a tight schedule to meet, and a lot of customers who want .NET Core on Linux ASAP, so we don\u0027t have the luxury of going super broad at this point. \n\nI really like the approach that has been taken with FreeBSD. If folks want to go that route, we\u0027ll support you.\n",
                                           "updatedAt":  "2015-05-06T15:29:05Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDEwMDA1NDUwNA==",
                                           "createdAt":  "2015-05-08T00:29:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ajensenwaud",
                                           "body":  "Hi all, \nI have set up a SmartOS instance. Please let me know if you are keen to get an account on the box so we can start porting the code to illumos/Solaris. \n\nCheers\n\nAnders\n",
                                           "updatedAt":  "2015-05-08T00:29:26Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDE2NDExNjk2MQ==",
                                           "createdAt":  "2015-12-12T07:18:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "taylorjonl",
                                           "body":  "I am trying to get this to build in a SmartOS zone, I am documenting the journey here:\n\nhttps://gist.github.com/taylorjonl/df65cea78beaa7e6b16e\n\nI have it to a point where cmake tries to test the compilers but it fails with:\n\n```\n/opt/local/gcc48/lib/gcc/x86_64-sun-solaris2.11/4.8.4/amd64/crtend.o: open failed: No such file or directory\n```\n\nThis path does not exist...  The file in question is located at this path:\n\n```\n# find / -name crtend.o\n/opt/local/gcc47/x86_64-sun-solaris2.11/lib/32/crtend.o\n/opt/local/gcc47/x86_64-sun-solaris2.11/lib/crtend.o\n```\n\nI am not a cmake expert, how do I influence the directory it looks at?\n",
                                           "updatedAt":  "2015-12-12T07:18:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDE2NDEyMzk1MA==",
                                           "createdAt":  "2015-12-12T07:58:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "@taylorjonl, since you are building with clang, it should be looking in `/lib/clang/3.5/crtend.o` assuming 3.5 is the version of clang you are building with (?)\nAdditionally, you will need to install lldb lldb-dev and libunwind. See the related issue: http://stackoverflow.com/q/29619399.\n\n\u003e how do I influence the directory it looks at?\n\nIt shouldn\u0027t be required if you have packages installed. But for testing purpose, you can do something like this: https://github.com/dotnet/coreclr/pull/1666/files:\n\n``` cmake\ninclude_directories(/opt/local/gcc47/x86_64-sun-solaris2.11/lib) # without SYSTEM\n```\n\nNote that this shouldn\u0027t be the fix because coreclr is building with Clang not GCC and pretty soon you will get some other error. The real solution is to make sure you have all the dependencies installed before moving on to build step.\n",
                                           "updatedAt":  "2015-12-12T07:58:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDE2NDE3MDQwMA==",
                                           "createdAt":  "2015-12-12T17:32:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "taylorjonl",
                                           "body":  "@jasonwilliams200OK I checked /opt/local/lib/clang/3.6.2 but it only includes an include folder, not those object files.  I also couldn\u0027t find an lldb-dev or libunwind package in the ports library that SmartOS uses for packages, I was going to deal with that issue when I got further in the process.\n\nFor now I may just build my own version of llvm/clang, see what files it installs but when I installed llvm/clang it pulled in those object files to that gcc directory through a gcc library package.  I think this is by design but I will have to work with the maintainer of that package to find out why and how to get around this issue.\n",
                                           "updatedAt":  "2015-12-12T17:32:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDE2NDg4MDU3OA==",
                                           "createdAt":  "2015-12-15T20:06:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAQ8AgQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "sjorge",
                                                                               "createdAt":  "2017-12-30T22:01:27Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "bcantrill",
                                           "body":  "@taylorjonl, @jperkin and/or @mamash from Joyent might be able to give you a hand.  We\u0027ve been running CoreCLR on Ubuntu on SmartOS via LX, but we\u0027d like to see a native port as well.\n",
                                           "updatedAt":  "2015-12-15T20:06:11Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDE2NDkzNjg5Mw==",
                                           "createdAt":  "2015-12-15T23:40:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ghuntley",
                                           "body":  "Here\u0027s some snippets from a conversation on `irc.freenode.net #smartos`.\n\n```\n10:16 AM \u003cghuntley\u003e good morning, who here would like to the .NET Virtual Machine (CoreCLR) running on SmartOS/Solaris/Illumos? \n10:16 AM \u003crmustacc\u003e There are probably a bunch of folks who like to see it running natively.\n10:17 AM \u003crmustacc\u003e There are some who are getting it going via lx right now.\n10:17 AM \u003crmustacc\u003e richardkiene1 might know some folks.\n10:17 AM \u003crichardkiene1\u003e ghuntley: Aye\n10:18 AM \u003crichardkiene1\u003e In fact I\u0027ve already done a bit of work there :)\n10:18 AM \u003crmustacc\u003e richardkiene1: On running natively?\n10:18 AM \u003crichardkiene1\u003e If you\u0027re willing to use an LX branded zone, it already works great\n10:18 AM \u003crichardkiene1\u003e rmustacc: Yeah I started building it the other day, but got distracted with the LX stuff\n\n10:18 AM \u003cghuntley\u003e @richardkiene1 have you seen the following github issue? https://github.com/dotnet/coreclr/issues/803\n10:19 AM \u003crichardkiene1\u003e ghuntley: Indeed, I\u0027m one of the people currently working on that with Bryan\n10:19 AM \u003crmustacc\u003e ghuntley: Looks like Bryan did.\n10:19 AM \u003crichardkiene1\u003e taylorjonl\u0027s gist works great actually, but Clang is busted in the current pkgsrc\n10:20 AM \u003crichardkiene1\u003e You can hack up your directory structure until the cows come home and it\u0027ll start building\n10:20 AM \u003crichardkiene1\u003e No clue if it finishes yet, but I don\u0027t think we\u0027re really that far from making it work on native SmartOS\n\n10:20 AM \u003cghuntley\u003e alright sweet, I was dropping in here to find support from people with domain knowledge of smartos and was going to funnel them to help out Bryan. :-)\n10:20 AM \u003crmustacc\u003e ghuntley: Haha, well, Bryan has more domain knowledge than most of us. ;)\n10:21 AM \u003crmustacc\u003e ghuntley: But if you are working on it with folks, I\u0027d just say that if you ever hit a technical question with this, just come up here and ask.\n\n10:21 AM \u003crichardkiene1\u003e It needs some updating, but the blocker right now for SmartOS is Clang\n10:21 AM \u003cnahamu\u003e jperkin said that 2015Q4 pkgsrc will have a working clang.\n\n10:22 AM \u003crichardkiene1\u003e ghuntley: We\u0027re actually in contact with the CoreCLR team :)\n10:22 AM \u003crichardkiene1\u003e Everyone is quite open to working together, so the dream is alive ;)\n\n10:26 AM \u003crmustacc\u003e So, is libunwind a requirement?\n10:26 AM \u003crmustacc\u003e And what exactly are they trying to get from libunwind?\n10:27 AM \u003crmustacc\u003e Because there is no illumos port of libunwind.\n10:27 AM \u003crmustacc\u003e Though they\u0027re not the first to want it.\n10:27 AM \u003crmustacc\u003e We\u0027ll have to work through the details though.\n\n10:29 AM \u003cghuntley\u003e Rich Lander is the guy you want to be directly speaking with at MSFT, he\u0027s super interested in seeing how this progresses -\u003e https://twitter.com/runfaster2000/status/676899041670729728\n10:29 AM \u003crichardkiene1\u003e ghuntley: I already am, actually :)\n\n10:58 AM \u003crzezeski\u003e rmustacc: I’m fairly certain Abel Mathew ported libunwind to illumos. I believe for use with Backtrace (http://backtrace.io/).\n11:14 AM \u003crzezeski\u003e rmustacc: Ya know, I’m not sure what the deal is with the source. I just remember meeting him at illumos day and him mentioning a port of libunwind to illumos.\n```\n- CLANG is currently broken on SmartOS but 2015Q4 pkgsrc will potentially have a working clang.\n- libunwind may not exist(?) on SmartOS and will potentially need to be ported.\n",
                                           "updatedAt":  "2015-12-16T01:36:10Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDE2NDk5NTEyNQ==",
                                           "createdAt":  "2015-12-16T04:51:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Official -\u003e https://github.com/joyent/libunwind :smile: \n",
                                           "updatedAt":  "2015-12-16T04:51:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDE2NTIyMTM5MA==",
                                           "createdAt":  "2015-12-16T19:29:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "richardkiene",
                                           "body":  "@jasonwilliams200OK The original repo was setup and blown away, sorry if anyone was already watching it. Until it is ready, the work will be done on the [OS-5039](https://github.com/joyent/libunwind/tree/OS-5039) branch. You can also track the ticket for the libunwind port at https://smartos.org/bugview/OS-5039\n",
                                           "updatedAt":  "2015-12-16T19:29:37Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDE2NjM2Mzg5Ng==",
                                           "createdAt":  "2015-12-21T17:18:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "taylorjonl",
                                           "body":  "I created a pull request to get the build to a point where we need libunwind to go further.\n\nhttps://github.com/dotnet/coreclr/pull/2428\n\n4 of the CI builds failed but they were for reason like failing to clone the repo and a such, not related to my changes which were pretty small.  Do the CI builds have to succeed for a pull request to be merged?\n",
                                           "updatedAt":  "2015-12-21T17:18:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDIxNTM4Njk0Mw==",
                                           "createdAt":  "2016-04-28T10:53:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "krytarowski",
                                           "body":  "I can help with SmartOS port - I\u0027m doing right now the NetBSD support. Initial prerequisites are libunwind and LLDB.  I ported base support of LLDB and pushed libunwind to pkgsrc both for NetBSD.\n\nFor doing SmartOS port now, I would need to do it during business hours.. so unless it can happen I can only focus on evening hours for NetBSD.\n\nOn the other hand I will be helping to @jperkin and @bcantrill  with mono.\n",
                                           "updatedAt":  "2016-04-28T10:53:32Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI5NjcxODIwOQ==",
                                           "createdAt":  "2017-04-24T15:58:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BenjiZombie",
                                           "body":  "Is there any updates on this, especially porting to SmartOS native zones? What are the stoppers? I\u0027d like to help.",
                                           "updatedAt":  "2017-04-24T15:58:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI5Njc3Mzk3Mg==",
                                           "createdAt":  "2017-04-24T18:06:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "josteink",
                                           "body":  "@BenjiZombie I think the main thing lacking is a concentrated effort, and preferably a team effort.\r\n\r\nWhile getting CoreCLR building probably won\u0027t be too hard (it\u0027s mostly native stuff and thus no circular dependencies).\r\n\r\nWhere you\u0027re bound to hit a few tough learning-curves is with getting CoreFX built for your platform of choice. Since .NET Core transitioned over to being self-bootstrapped, getting a bare minimum self-hosting SDK to build is required before you can build the rest of the framework.\r\n\r\nEven as someone who tried to follow this repo since it was pretty new, I find that pretty daunting (and I eventually gave up on it, when trying to get the FreeBSD momentum back together).\r\n\r\nThe good news is that last time I checked (6 months or more ago) someone were looking into ways to try to ease that pain (in that case with regard to Fedora 25 iirc), but I\u0027m not sure if anything has actually happened.\r\n\r\n@richlander Any news on that?\r\n\r\nNote you may also to meet issues with some external (libunwind, mono, llvm, whatever) and might need to get those resolved before you can move on. In that case, having some strings to pull with the relevant maintainers can also be beneficial.\r\n\r\nBest of luck :)",
                                           "updatedAt":  "2017-04-24T18:06:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI5Njk5NTYzMg==",
                                           "createdAt":  "2017-04-25T11:02:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "krytarowski",
                                           "body":  "Porting .NET to platforms without LLDB is questionable. No easy way to debug build failures in managed code runtime.\r\n\r\nI might try to port Illumos style core(5) files to LLDB to workaround it.. and then on other system like NetBSD we could read it. But first things first, I still have TODO tasks on my native platform (NetBSD) in this debugger.",
                                           "updatedAt":  "2017-04-25T11:02:55Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0OTAwNjg4OQ==",
                                           "createdAt":  "2019-11-02T03:39:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOA0JAiQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "josteink",
                                                                               "createdAt":  "2019-11-02T12:53:11Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2019-11-02T15:29:59Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "franksinankaya",
                                           "body":  "Just an FYI. I have been working with @jkotas , @janvorli  and @am11 over a year now.\r\n\r\nWe have recently completed GCC support on master branch. The hope is to reach out to other platforms where GCC is the only supported compiler.\r\n",
                                           "updatedAt":  "2019-11-02T03:39:56Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0OTA1Nzg0Ng==",
                                           "createdAt":  "2019-11-02T16:14:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "krytarowski",
                                           "body":  "This is great news!",
                                           "updatedAt":  "2019-11-02T16:14:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0OTA2NjY4OQ==",
                                           "createdAt":  "2019-11-02T17:56:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOA0JLfQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "josteink",
                                                                               "createdAt":  "2019-11-02T18:00:44Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "am11",
                                           "body":  "Also CoreFX builds with `-gcc`.\r\n\r\nFor Solaris-likes, arch: x86-64:\r\n\r\n* we have added initial support in libunwind.\r\n  * the failing test stats are present here: https://github.com/libunwind/libunwind#expected-results-on-solaris-x86-64 (was using SmartOS in Azure for this work in nested virtualization, so your test results may vary).\r\n  * if someone can investigate the failing tests it would help improve that product. Might also get some help from: https://github.com/joyent/pkgsrc/issues/224.\r\n* i am/was waiting for the next release of libunwind, so we can rev to official released version in CoreCLR: https://github.com/dotnet/coreclr/blob/3d7e3d2/src/pal/src/libunwind/. Last release (1.3.1) was made in January 2019. It would be a smooth sail if it happens, otherwise I have a wip branch with tons of libunwind-related changes.\r\n\r\nIn another news, LLVM 6 toolchain (with still missing LLDB) is now present in pkgsrc for SmartOS.\r\n\r\nHowever, I have used gcc so far in that system `coreclr/build.sh -gcc`. will revisit SmartOS build few days from now, once CoreCLR, CoreFX and CoreSetup repos are merged as unified runtime repo. Hoping that CoreSetup will get gcc-love as a byproduct of that (otherwise we will need to gcc-bootstrap it separately).",
                                           "updatedAt":  "2019-11-02T17:56:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0OTA3MjQzMg==",
                                           "createdAt":  "2019-11-02T19:13:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "krytarowski",
                                           "body":  "Are there plans to add support for SmartOS in LLDB? .NET was my original intention to start working on LLDB for NetBSD.. it takes now like 4 years, but we are getting now pretty close.",
                                           "updatedAt":  "2019-11-02T19:13:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0OTI3MDI0Nw==",
                                           "createdAt":  "2019-11-04T09:12:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "\u003e Are there plans to add support for SmartOS in LLDB?\r\n\r\nFrom Joyent\u0027s side, I am following this issue: https://github.com/joyent/pkgsrc-joyent/issues/35. I am not sure if someone from SmartOS community has been contributing to LLDB code base; but generally Solaris platform is listed in LLDB sources at various places \u003csup\u003e[[1](https://github.com/llvm/llvm-project/blob/faf6b2543e4789061cbced2557f6bc7d1bd0d71d/lldb/include/lldb/Utility/ArchSpec.h#L380-L391)]\u003c/sup\u003e.\r\n\r\nNote that GDB can also be used for retrospective core dump analysis for native and managed parts of .NET application. GDB, in general, does not provide a high-level extensibility model [like LLDB](https://github.com/llvm/llvm-project/tree/faf6b2543e4789061cbced2557f6bc7d1bd0d71d/lldb/include/lldb/API). A low\u0027ish-level MI interface is available, which is a major feat to support as per: https://github.com/dotnet/diagnostics/issues/272. Haven\u0027t tried (yet). :)",
                                           "updatedAt":  "2019-11-04T09:12:52Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxMzM1MDM4MQ==",
                                           "createdAt":  "2020-04-14T10:10:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "@tracker1, @jkotas, since the remaining work here is about Solaris (Alpine and FreeBSD work was done separately) and the thread is heavily invested on Solaris related discussion, I am using this one as tracking issue. Can we reword the title with Solaris and add `os-solaris` label?",
                                           "updatedAt":  "2020-04-14T10:10:47Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxMzM5NTE5Mw==",
                                           "createdAt":  "2020-04-14T11:50:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "krytarowski",
                                           "body":  "I object. I\u0027m working actively on the NetBSD port, but currently on the Operating System layer. We have just finished LLDB to the point of importing it to the basesystem. There is ongoing work on reworking of synchronization primitives that will help in .NET as well.\r\n\r\nMeanwhile, keep your good work on Solaris.",
                                           "updatedAt":  "2020-04-14T11:50:08Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxMzQwMjQzOA==",
                                           "createdAt":  "2020-04-14T12:03:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "@krytarowski, I only meant that the title of this issue is too broad to tackle something meaningfully. We have had specific issues for FreeBSD, NetBSD and other operating systems. I am proposing this one can be repurposed for Solaris, one particular operating system or simply closed.",
                                           "updatedAt":  "2020-04-14T12:03:46Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxMzQzODUyMQ==",
                                           "createdAt":  "2020-04-14T13:20:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODoH3VQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "gwr",
                                                                               "createdAt":  "2024-07-02T21:36:24Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "am11",
                                           "body":  "I have opened #34944 to track Solaris port work.",
                                           "updatedAt":  "2020-04-14T13:20:50Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxMzQ2NzU3Ng==",
                                           "createdAt":  "2020-04-14T14:13:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCHcHfw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "cocowalla",
                                                                               "createdAt":  "2021-12-21T10:17:30Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "krytarowski",
                                           "body":  "I propose to just open a dedicated issue for Solaris and be done.",
                                           "updatedAt":  "2020-04-14T14:13:27Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxMzcxMzY1Mw==",
                                           "createdAt":  "2020-04-14T22:32:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tracker1",
                                           "body":  "@am11 thank you... I do agree, that if you want to track a specific OS, then a specific issue should be in place...",
                                           "updatedAt":  "2020-04-14T22:32:52Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYxMzcyMTY1NA==",
                                           "createdAt":  "2020-04-14T22:58:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tracker1",
                                           "body":  "I added a link to all the `os-` prefixed labels to the main description above.",
                                           "updatedAt":  "2020-04-14T22:58:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6PzFPC",
                                           "createdAt":  "2024-10-14T23:46:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Due to lack of recent activity, this issue has been marked as a candidate for backlog cleanup.  It will be closed if no further activity occurs within 14 more days. Any new comment (by anyone, not necessarily the author) will undo this process.\n\nThis process is part of our [issue cleanup automation](https://github.com/dotnet/runtime/blob/main/docs/issue-cleanup.md).\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-10-14T23:46:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6P47hO",
                                           "createdAt":  "2024-10-15T14:21:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gwr",
                                           "body":  "Uh, I\u0027ve done everyting I can. Waiting for reviews and integration.\n(Oh, nevermind.  I thought this was a different issue.  This can close.)",
                                           "updatedAt":  "2024-10-16T15:38:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6d3E1j",
                                           "createdAt":  "2025-02-10T15:48:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Due to lack of recent activity, this issue has been marked as a candidate for backlog cleanup.  It will be closed if no further activity occurs within 14 more days. Any new comment (by anyone, not necessarily the author) will undo this process.\n\nThis process is part of our [issue cleanup automation](https://github.com/dotnet/runtime/blob/main/docs/issue-cleanup.md).\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-02-10T15:48:47Z"
                                       }
                                   ],
                         "totalCount":  37
                     },
        "title":  "Supporting a broader base of platflorms.",
        "labels":  [
                       "area-PAL-coreclr",
                       "port"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/4234",
        "createdAt":  "2015-05-09T15:03:17Z",
        "number":  4234,
        "author":  "ghost",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBbAvKA==",
                          "nodes":  [
                                        {
                                            "content":  "HEART",
                                            "user":  "xied75",
                                            "createdAt":  "2016-08-18T23:03:48Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "shmuelie",
                                            "createdAt":  "2017-09-24T03:01:58Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "happyaron",
                                            "createdAt":  "2018-01-25T11:45:42Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "shahid-pk",
                                            "createdAt":  "2018-03-24T11:48:11Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "VladimirAkopyan",
                                            "createdAt":  "2018-04-01T13:56:28Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "VladimirAkopyan",
                                            "createdAt":  "2018-04-01T13:56:30Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "markusschaber",
                                            "createdAt":  "2018-04-17T10:57:39Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "egmkang",
                                            "createdAt":  "2018-05-31T08:31:56Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "pengan1987",
                                            "createdAt":  "2018-06-25T08:12:47Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "phorcys",
                                            "createdAt":  "2018-07-17T08:25:13Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "doggy8088",
                                            "createdAt":  "2018-08-17T11:22:16Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "vabka",
                                            "createdAt":  "2018-09-28T17:21:39Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "xiexin36",
                                            "createdAt":  "2018-12-19T09:33:03Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "xiexin36",
                                            "createdAt":  "2018-12-19T09:33:03Z"
                                        },
                                        {
                                            "content":  "HOORAY",
                                            "user":  "xiexin36",
                                            "createdAt":  "2018-12-19T09:33:06Z"
                                        },
                                        {
                                            "content":  "LAUGH",
                                            "user":  "xiexin36",
                                            "createdAt":  "2018-12-19T09:33:12Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "crushonme",
                                            "createdAt":  "2018-12-20T09:38:58Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "crushonme",
                                            "createdAt":  "2018-12-20T09:39:01Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "hzexe",
                                            "createdAt":  "2019-01-17T16:07:01Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "myFirstway",
                                            "createdAt":  "2019-04-08T13:42:27Z"
                                        },
                                        {
                                            "content":  "HOORAY",
                                            "user":  "myFirstway",
                                            "createdAt":  "2019-04-08T15:14:14Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "myFirstway",
                                            "createdAt":  "2019-04-08T15:14:15Z"
                                        },
                                        {
                                            "content":  "LAUGH",
                                            "user":  "myFirstway",
                                            "createdAt":  "2019-04-08T15:14:16Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "kchanlee",
                                            "createdAt":  "2019-04-13T17:50:58Z"
                                        },
                                        {
                                            "content":  "LAUGH",
                                            "user":  "mms-",
                                            "createdAt":  "2019-05-01T20:04:29Z"
                                        },
                                        {
                                            "content":  "HOORAY",
                                            "user":  "mms-",
                                            "createdAt":  "2019-05-01T20:04:36Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "mms-",
                                            "createdAt":  "2019-05-01T20:04:37Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "pengweiqhca",
                                            "createdAt":  "2019-05-05T03:28:32Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "NisseMain",
                                            "createdAt":  "2019-05-25T04:38:01Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "intx82",
                                            "createdAt":  "2019-06-05T12:37:01Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ibbcall",
                                            "createdAt":  "2019-06-16T22:27:20Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "chenxuuu",
                                            "createdAt":  "2019-06-21T12:46:03Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "chenxuuu",
                                            "createdAt":  "2019-06-21T12:46:07Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "mms-",
                                            "createdAt":  "2019-09-18T06:51:15Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "LGinC",
                                            "createdAt":  "2019-11-08T09:59:31Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "mfjiang",
                                            "createdAt":  "2019-11-08T10:00:11Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "hez2010",
                                            "createdAt":  "2019-11-16T06:49:26Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "yoli799480165",
                                            "createdAt":  "2020-01-20T08:27:12Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "tonyqus",
                                            "createdAt":  "2020-04-07T10:35:38Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "MetSystem",
                                            "createdAt":  "2020-04-28T00:37:18Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "gxrsprite",
                                            "createdAt":  "2020-05-01T04:51:49Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "HurricanKai",
                                            "createdAt":  "2020-05-17T10:15:53Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "suijingfeng",
                                            "createdAt":  "2020-05-28T02:18:51Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "roczj",
                                            "createdAt":  "2020-06-10T15:12:23Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jiangxinshang-loongson",
                                            "createdAt":  "2020-06-18T06:17:15Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "thicktao",
                                            "createdAt":  "2020-07-30T01:17:13Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "hlizard",
                                            "createdAt":  "2020-08-21T00:46:08Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "shouhuanxiaoji",
                                            "createdAt":  "2020-10-09T09:44:54Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "happyNBB",
                                            "createdAt":  "2020-12-01T01:38:30Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Daniel-Svensson",
                                            "createdAt":  "2020-12-28T10:13:18Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "HMBSbige",
                                            "createdAt":  "2021-01-13T06:39:08Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "nidbCN",
                                            "createdAt":  "2021-04-14T13:00:47Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "GiaNTizmO",
                                            "createdAt":  "2021-08-28T16:45:55Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "GiaNTizmO",
                                            "createdAt":  "2021-08-28T16:45:56Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "heartacker",
                                            "createdAt":  "2022-01-04T05:58:37Z"
                                        },
                                        {
                                            "content":  "HEART",
                                            "user":  "JohnKiller",
                                            "createdAt":  "2022-08-20T19:45:25Z"
                                        }
                                    ],
                          "totalCount":  56
                      },
        "updatedAt":  "2025-06-23T01:13:48Z",
        "body":  "Apple brought 64-bit support to ARM in 2011. Other vendors (Nvidia, Qualcomm) are bringing 64-bit ARM architecture in 2015. \n\nHowever, MIPS has 64-bit support since \u003cdel\u003e1999\u003c/del\u003e 1992. Linux and old Windows Mobile and Windows CE operating systems support MIPS for long time. But Windows 10 for _everything_ doesn\u0027t support MIPS! We definitely live in the world of monopoly..\n\nWould be really handy if CoreCLR and CoreFX folks along with microframework (https://github.com/NETMF/netmf-interpreter) continue to support for MIPS32 and 64 architectures for the love of technology widespread in open world.\n\nLove for MIPS\n\nThank you.\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOJgr7yA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDEwMDUyOTgzNg==",
                                           "createdAt":  "2015-05-09T18:53:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBC1DqA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "GeirGrusom",
                                                                               "createdAt":  "2018-03-23T10:54:16Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "markusschaber",
                                                                               "createdAt":  "2018-04-17T10:57:52Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "fawdlstty",
                                                                               "createdAt":  "2020-04-21T09:36:00Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "MetSystem",
                                                                               "createdAt":  "2020-04-28T00:37:38Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_DOWN",
                                                                               "user":  "gxrsprite",
                                                                               "createdAt":  "2020-05-01T04:52:15Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "OtherCrashOverride",
                                           "body":  "I don\u0027t believe its an issue of ideology that MIPS is excluded, rather, its an issue of pragmatism: there are no customers targeting MIPS hardware.\n\nCoreCLR is open source.  There is nothing preventing Imagination Technologies (the owners of MIPS) from adding support for their processors to it.  Imagination Tech is a large company with plenty of financial resources. There is no need for them to depend on \"technological welfare\" for support of their products.\n",
                                           "updatedAt":  "2015-05-09T18:53:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDEwMDU2NDE4Mw==",
                                           "createdAt":  "2015-05-10T00:03:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEACpKA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "tonyqus",
                                                                               "createdAt":  "2024-12-23T19:52:29Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  null,
                                           "body":  "\u003e there are no customers targeting MIPS hardware.\n\nI suspect that you missed (not really) the news (anymore) that Android is supported on MIPS and there are MIPS based tablets running Android and the development is still ongoing of such devices.\n",
                                           "updatedAt":  "2015-05-10T00:03:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDEwMDU2NDU1Mw==",
                                           "createdAt":  "2015-05-10T00:15:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "OtherCrashOverride",
                                           "body":  "Let me expand that a bit:\nthere are no [Microsoft] customers targeting MIPS hardware.\n\nI am all for MIPS support. I am simply pointing out that current lack of support is not due to any evil agenda.  Further more, MIPS support is not dependent on Microsoft. Anyone, including Imagination Tech, can add it.  You should email or post to their forums your interest in using CoreCLR on devices containing their product.\n",
                                           "updatedAt":  "2015-05-10T00:15:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDEwMDU2NDgxNQ==",
                                           "createdAt":  "2015-05-10T00:24:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "\u003e there are no [Microsoft] customers targeting MIPS hardware.\n\nHow can you be so sure about that? I am a Microsoft customer and I own a MIPS-based tablet and would love to run .NET apps on my device.\n\n\u003e You should email or post to their forums your interest in using CoreCLR on devices containing their product.\n\nYou are mistaken. This is not how it works.\n",
                                           "updatedAt":  "2015-05-10T00:24:06Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDEwMDU2OTYyNw==",
                                           "createdAt":  "2015-05-10T01:38:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jakesays-old",
                                           "body":  "@jasonwilliams200OK I\u0027m guessing a Microsoft customer in this context means a product group within Microsoft. Also, can you explain how \u0027it\u0027 works?\n",
                                           "updatedAt":  "2015-05-10T01:38:23Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDEwMDU4NTYxNw==",
                                           "createdAt":  "2015-05-10T05:11:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kangaroo",
                                           "body":  "@jasonwilliams200OK is 100% correct.  Thats not how it works.  How it works is if people are particularly passionate about a new platform or architecutre, they should submit pull requests.  I\u0027m happy to review any and all PRs for MIPS support.  I have a MIPS box in the garage that I can validate on.\n",
                                           "updatedAt":  "2015-05-10T05:11:31Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDEyMjYwNDU3OQ==",
                                           "createdAt":  "2015-07-18T23:31:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "benpye",
                                           "body":  "I\u0027m guessing there isn\u0027t really any documentation on the process of doing JIT bringup on a new platform? MIPS would certainly be interesting, but I\u0027m guessing not something MS would want to invest time in since it\u0027s not really targeted by any of their products. I\u0027m not too sure what would have to be done to get the JIT working on a new architecture, from the current code base, though it would be impressive if done as a community project.\n",
                                           "updatedAt":  "2015-07-18T23:31:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDEyMjc1NTI3OA==",
                                           "createdAt":  "2015-07-20T04:09:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAVWCAg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "markusschaber",
                                                                               "createdAt":  "2018-04-17T10:59:39Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "terrajobst",
                                           "body":  "@kangaroo and @jasonwilliams200OK are correct. This is an open source project. It\u0027s by definition a collaboration with various individuals as well as companies. The code base you currently see is the actual product code that the CLR group at Microsoft produced over last 15 years. It\u0027s obviously based on the business interests that Microsoft had in the past.\n\nAs far as our future interest and thus investment goes: we already announced that we\u0027re going to support this runtime on non-Microsoft platforms. But pragmatically speaking, we (even though that may be hard to believe for some folks) don\u0027t have infinite resources to \"simply\" support CoreCLR everywhere. We do, however, want to work with others to port the code to more platforms. Our level of commitment will certainly vary based on roadmap, priorities, and overlap with other projects we\u0027re already working on.\n\nThat being said, it doesn\u0027t mean that we wouldn\u0027t accept PRs for platforms that Microsoft currently isn\u0027t interested in. It simply means that the community has to provide folks that are willing to maintain the architecture to a degree that it makes sense to be part of this repository. Not only is this pattern an option -- [it\u0027s highly desired](http://blogs.msdn.com/b/dotnet/archive/2015/07/14/first-net-port-award.aspx)!\n\nWe know for a fact that .NET is much bigger than just Microsoft. So please keep the suggestions for ports coming. There are many highly skilled and passionate people that care and are willing to collaborate -- as @kangaroo just proved by offering code reviews as well as validation.\n",
                                           "updatedAt":  "2015-07-20T04:09:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDEyNTc4NjMxOQ==",
                                           "createdAt":  "2015-07-29T00:09:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAgnHTA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "xiexin36",
                                                                               "createdAt":  "2018-12-19T09:35:05Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "xiexin36",
                                                                               "createdAt":  "2018-12-19T09:35:05Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "xiexin36",
                                                                               "createdAt":  "2018-12-19T09:35:05Z"
                                                                           },
                                                                           {
                                                                               "content":  "LAUGH",
                                                                               "user":  "xiexin36",
                                                                               "createdAt":  "2018-12-19T09:35:05Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "zezba9000",
                                           "body":  "I posted a suggestion in the .NET Foundation forums about Open Sourcing key parts of .NET Compact that has already has run on MIPS, PPC, ect for years: http://forums.dotnetfoundation.org/t/open-source-net-compact-runtime/1190\n\nI think being able to use it as references source would greatly help the efforts of this topic.  If i\u0027m right you might consider voicing this suggestion as well :)\n\nEven if it ended up not helping much couldn\u0027t hurt anything to have it available.\n",
                                           "updatedAt":  "2015-07-29T00:22:17Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDEyNTgwNTg0Ng==",
                                           "createdAt":  "2015-07-29T02:04:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "OtherCrashOverride",
                                           "body":  "\u003e @kangaroo and @jasonwilliams200OK are correct.\n\u003e \n\u003e Not only is this pattern an option -- it\u0027s highly desired! [http://blogs.msdn.com/b/dotnet/archive/2015/07/14/first-net-port-award.aspx]\n\u003e \n\u003e There are many highly skilled and passionate people that care and are willing to collaborate -- as @kangaroo just proved by offering code reviews as well as validation.\n\nMarcia, Marcia, Marcia! \n\n(Sorry, @kangaroo , couldn\u0027t resist. :wink: )\n(For those not familiar with the reference: https://www.youtube.com/watch?v=w2fXs3bf-p0 \"The Brady Bunch: Marcia, Marcia, Marcia! \")\n",
                                           "updatedAt":  "2015-07-29T02:04:35Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI0MDg4NzkwNw==",
                                           "createdAt":  "2016-08-18T23:32:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAye8dA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kchanlee",
                                                                               "createdAt":  "2019-04-13T17:54:52Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "NisseMain",
                                                                               "createdAt":  "2019-05-25T04:37:27Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "vabka",
                                                                               "createdAt":  "2019-10-10T23:38:35Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "xied75",
                                           "body":  "For the record: https://en.wikipedia.org/wiki/Loongson\nThe 3A2000 model CPU is on sell on a mini-itx motherboard http://www.lemote.com/html/product/miniitx/2015/1230/28.html\nThe performance is on par of Intel Ivy-Bridge generation.\n\nAnd it runs **Java**, **Go**, **Ruby**...\n",
                                           "updatedAt":  "2016-08-18T23:32:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI0MDk2NjkzMw==",
                                           "createdAt":  "2016-08-19T09:04:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "@xied75, I started with Debian Jesse (MIPS) running on qemu-mips and converted AT\u0026T `.S` assembly code in CoreCLR repo to its MIPS counterpart. There are couple of SIMD instructions which are different in (and some inherently not required by) MIPS which need some serious MIPS assembly darkarts which i lack.. If you have affluent knowledge about MIPS assembly, do contribute! :)\n\nMore on the devices; there are many interesting devices posted on their blog https://imgtec.com/blog/, most of them are SOC board, arduinos, and internet of things kinda solutions. And now there is even an All-in-one PC: http://www.pcworld.com/article/3040528/computers/this-russian-all-in-one-desktop-is-just-weird-enough-to-be-interesting.html --happened just around the 25th anniversary of 64-bit MIPS architecture and 35th year overall. :wink:\n",
                                           "updatedAt":  "2016-08-19T09:04:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI0MDk3NTc0Ng==",
                                           "createdAt":  "2016-08-19T09:46:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "benpye",
                                           "body":  "First step would be to get PAL working on MIPS, that should be fairly easy. Getting the JIT on MIPS would be quite a bit of work, I guess there is the interpreter fallback, which would be useful during bring up, but it would probably make sense to wait for RyuJIT to work well on x86 or ARM before trying to get another 32-bit platform working. I know there is MIPS64 but I\u0027m pretty sure it\u0027d a strict superset so a MIPS32 port seems to make more sense.\n",
                                           "updatedAt":  "2016-08-19T09:46:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI0MTA2MzYxNA==",
                                           "createdAt":  "2016-08-19T16:19:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "@benpye, thanks! :)\n\nFor the first step:\n- should we only configure cmake under PAL?\n- can we run [PAL tests](https://github.com/dotnet/coreclr/blob/555cf28/Documentation/building/unix-test-instructions.md) as well without building JIT?\n- any further advice on getting the JIT interpreter fallback up and running? \n",
                                           "updatedAt":  "2016-08-19T16:19:03Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI0MTA5NzUyNw==",
                                           "createdAt":  "2016-08-19T18:28:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "benpye",
                                           "body":  "PAL and the PAL tests are pretty much standalone, they will work without the rest of coreclr. You will have to modify the top level CMakefile somewhat, I\u0027d look through for the ARM defines and add suitable ones for MIPS. You could make it so that for MIPS only PAL was built.\n\nTo get the JIT up and running you\u0027d have to ask @dotnet/jit-contrib , there is https://github.com/dotnet/coreclr/blob/master/Documentation/botr/porting-ryujit.md but it\u0027s a pretty high level overview. A community JIT port would certainly be very impressive. \n",
                                           "updatedAt":  "2016-08-19T18:28:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI0MTc3OTUwMQ==",
                                           "createdAt":  "2016-08-23T15:49:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "xied75",
                                           "body":  "@jasonwilliams200OK I did a search on source:\n\n```\nroot@da1f6193b184:~/github/coreclr# find . -name \"*.s\"\n```\n\nOnly managed to find two .s files?\n\n```\n./src/pal/tests/palsuite/composite/synchronization/nativecs_interlocked/sparcinterloc.s\n./src/pal/tests/palsuite/composite/synchronization/nativecs_interlocked/hpitinterlock.s\n```\n\nDo we still somehow need to convert this first?\n\n@benpye Something I can do as a small enough task?\n",
                                           "updatedAt":  "2016-08-23T15:49:10Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI0MTc4MzA4Nw==",
                                           "createdAt":  "2016-08-23T15:59:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "@xied75, try with capital `.S`. Building PAL on MIPS is the first step, which shouldn\u0027t require this conversion.\n",
                                           "updatedAt":  "2016-08-23T15:59:34Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI0MTc4MzUyNA==",
                                           "createdAt":  "2016-08-23T16:01:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "benpye",
                                           "body":  "Porting PAL is reasonably straight forward, most of the architecture\nspecific files are in\nhttps://github.com/dotnet/coreclr/tree/master/src/pal/src/arch though there\nare various defines and ifdefs that may need updating.\nhttps://github.com/dotnet/coreclr/blob/master/src/pal/src/exception/seh-unwind.cpp\nhas a lot of architecture specific code too. If you have more specific\nquestions I can try and give pointers from what I remember with porting PAL\nto ARM.\n\nOn Tue, 23 Aug 2016, 16:50 Dong Xie, notifications@github.com wrote:\n\n\u003e @jasonwilliams200OK https://github.com/jasonwilliams200OK I did a\n\u003e search on source:\n\u003e \n\u003e root@da1f6193b184:~/github/coreclr# find . -name \"*.s\"\n\u003e \n\u003e Only managed to find two .s files?\n\u003e \n\u003e ./src/pal/tests/palsuite/composite/synchronization/nativecs_interlocked/sparcinterloc.s\n\u003e ./src/pal/tests/palsuite/composite/synchronization/nativecs_interlocked/hpitinterlock.s\n\u003e \n\u003e Do we still somehow need to convert this first?\n\u003e \n\u003e @benpye https://github.com/benpye Something I can do as a small enough\n\u003e task?\n\u003e \n\u003e —\n\u003e You are receiving this because you were mentioned.\n\u003e Reply to this email directly, view it on GitHub\n\u003e https://github.com/dotnet/coreclr/issues/969#issuecomment-241779501, or mute\n\u003e the thread\n\u003e https://github.com/notifications/unsubscribe-auth/AAbA_-1MBcwd8ghAilgBbOqE78y-mgieks5qixacgaJpZM4EU3NU\n\u003e .\n",
                                           "updatedAt":  "2016-08-23T16:01:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI0MTc4OTE3Mg==",
                                           "createdAt":  "2016-08-23T16:19:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAmgfYA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "zhengwb",
                                                                               "createdAt":  "2018-07-27T15:58:37Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "myFirstway",
                                                                               "createdAt":  "2019-04-08T15:03:49Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  null,
                                           "body":  "Oh I was just converting the vm layer, there is also assembly code in PAL! Good luck to me.. :(\n",
                                           "updatedAt":  "2016-08-23T16:19:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI3NTg1MTEyNA==",
                                           "createdAt":  "2017-01-28T14:28:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "d0apga",
                                           "body":  "do you have some good news about MIPS support?",
                                           "updatedAt":  "2017-01-28T14:29:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDM3NTYxOTYyOA==",
                                           "createdAt":  "2018-03-23T10:43:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAmggTA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "Hokutosei",
                                                                               "createdAt":  "2018-05-16T03:49:23Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MiguelLattuada",
                                                                               "createdAt":  "2018-05-30T17:21:51Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "xiexin36",
                                                                               "createdAt":  "2018-10-15T07:40:07Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "myFirstway",
                                                                               "createdAt":  "2019-04-08T15:06:35Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "geffzhang",
                                           "body":  "Any new developments?",
                                           "updatedAt":  "2018-03-23T10:43:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ1NDIwOTY2OQ==",
                                           "createdAt":  "2019-01-14T23:57:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBIAbIA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "myFirstway",
                                                                               "createdAt":  "2019-04-08T15:07:53Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "russelljahn",
                                                                               "createdAt":  "2020-06-19T22:31:17Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "ievdokdm",
                                           "body":  "any updates on MIPS support?\r\nI need it to run on MIPS 24Kc processor",
                                           "updatedAt":  "2019-01-14T23:57:55Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4MDg3Mzc2Mw==",
                                           "createdAt":  "2019-04-08T15:11:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "myFirstway",
                                           "body":  "any updates on MIPS support?",
                                           "updatedAt":  "2019-04-08T15:11:50Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4MDkwOTAxMg==",
                                           "createdAt":  "2019-04-08T16:42:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAn43jg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kchanlee",
                                                                               "createdAt":  "2019-04-13T17:57:47Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "mms-",
                                                                               "createdAt":  "2019-05-01T20:07:33Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "zezba9000",
                                           "body":  "@myFirstway @ievdokdm  I\u0027m working on a project (in early stages) to solve issues like this more quickly: https://github.com/reignstudios/IL2X\r\n\r\nI can compile on MIPS right now but the runtime needs a lot more work done before its ready for general use.",
                                           "updatedAt":  "2019-04-08T16:42:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4ODM4ODEzMQ==",
                                           "createdAt":  "2019-05-01T19:27:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mms-",
                                           "body":  "Was about to use .Net Core for our embedded app, but this is a show stopper. On top of ARM32 and soon ARM64 we need MIPS support and that requirement doesn\u0027t seem to be changing anytime soon. Go and Rust do support MIPS.",
                                           "updatedAt":  "2019-05-01T19:27:46Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5NzI4NTIzMg==",
                                           "createdAt":  "2019-05-30T10:32:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "liujianm",
                                           "body":  "any updates on MIPS support?",
                                           "updatedAt":  "2019-05-30T10:32:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwMTk3NzE1OA==",
                                           "createdAt":  "2019-06-14T05:49:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ibbcall",
                                           "body":  "any updates on MIPS support?",
                                           "updatedAt":  "2019-06-14T05:49:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwMTk4MDMxMg==",
                                           "createdAt":  "2019-06-14T06:03:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "Microsoft currently has no plans or work in progress to support MIPS. Of course, we would be willing to accept external contributions towards that goal as appropriate. Note that it is, certainly, a significant amount of work to port .NET Core to a new platform.",
                                           "updatedAt":  "2019-06-14T06:03:53Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwMjAxNjU2MA==",
                                           "createdAt":  "2019-06-14T08:20:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBjjZ5w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2019-06-14T08:37:11Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "xiangzhai",
                                                                               "createdAt":  "2019-06-14T09:39:46Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kchanlee",
                                                                               "createdAt":  "2019-06-14T10:15:55Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MetSystem",
                                                                               "createdAt":  "2019-06-20T10:51:33Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "MetSystem",
                                                                               "createdAt":  "2019-06-20T10:51:34Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "zhengwb",
                                                                               "createdAt":  "2019-06-21T08:57:05Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "liujianm",
                                                                               "createdAt":  "2019-06-21T12:14:53Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "chenxuuu",
                                                                               "createdAt":  "2019-06-21T12:43:45Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "chenxuuu",
                                                                               "createdAt":  "2019-06-21T12:43:46Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "zezba9000",
                                                                               "createdAt":  "2019-06-21T18:09:39Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "shahid-pk",
                                                                               "createdAt":  "2019-06-21T18:57:01Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "huaryliu",
                                                                               "createdAt":  "2019-06-27T01:10:59Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "yihango",
                                                                               "createdAt":  "2019-08-06T02:42:09Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "yihango",
                                                                               "createdAt":  "2019-08-06T02:42:13Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "driver1998",
                                                                               "createdAt":  "2019-09-02T03:46:43Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "driver1998",
                                                                               "createdAt":  "2019-09-02T03:46:44Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "hueidou",
                                                                               "createdAt":  "2019-09-11T08:40:24Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "hueidou",
                                                                               "createdAt":  "2019-09-11T08:40:25Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "vabka",
                                                                               "createdAt":  "2019-10-10T23:40:01Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "vabka",
                                                                               "createdAt":  "2019-10-10T23:40:04Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "kchanlee",
                                                                               "createdAt":  "2019-10-26T15:50:12Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "kchanlee",
                                                                               "createdAt":  "2019-10-26T15:50:21Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "myFirstway",
                                                                               "createdAt":  "2019-11-06T08:33:00Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "myFirstway",
                                                                               "createdAt":  "2019-11-06T08:33:03Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "myFirstway",
                                                                               "createdAt":  "2019-11-06T08:33:05Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "yoli799480165",
                                                                               "createdAt":  "2020-01-20T08:34:16Z"
                                                                           },
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "yoli799480165",
                                                                               "createdAt":  "2020-01-20T08:34:21Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "pengweiqhca",
                                                                               "createdAt":  "2020-04-17T01:27:25Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "russelljahn",
                                                                               "createdAt":  "2020-06-19T22:15:41Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "russelljahn",
                                                                               "createdAt":  "2020-06-19T22:15:41Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "russelljahn",
                                                                               "createdAt":  "2020-06-19T22:15:46Z"
                                                                           },
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "russelljahn",
                                                                               "createdAt":  "2020-06-19T22:15:47Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "yinyue200",
                                                                               "createdAt":  "2020-06-21T10:27:43Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "l1x",
                                                                               "createdAt":  "2020-11-12T16:46:47Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "iron2han",
                                                                               "createdAt":  "2020-11-25T15:00:20Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "iron2han",
                                                                               "createdAt":  "2020-11-25T15:00:21Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "happyNBB",
                                                                               "createdAt":  "2020-12-01T01:40:13Z"
                                                                           },
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "happyNBB",
                                                                               "createdAt":  "2020-12-01T01:40:14Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "zonowry",
                                                                               "createdAt":  "2021-03-16T03:00:38Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  39
                                                         },
                                           "author":  "theaoqi",
                                           "body":  "We (Loongson) are trying to port .NET Core (2.1 now, then will update to master) to MIPS64 and have just started this work recently. @liujianm @ibbcall ",
                                           "updatedAt":  "2019-06-14T08:20:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwMjAyMzA4OA==",
                                           "createdAt":  "2019-06-14T08:39:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOA0Dg4w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "theaoqi",
                                                                               "createdAt":  "2019-06-14T08:59:52Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "xiangzhai",
                                                                               "createdAt":  "2019-06-14T09:30:14Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "zhengwb",
                                                                               "createdAt":  "2019-06-21T09:11:18Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "zwcloud",
                                                                               "createdAt":  "2019-11-01T02:28:23Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "am11",
                                           "body":  "@theaoqi, just FYI, the master branch builds with GCC as well as Clang, while \u003ckbd\u003erelease/2.1\u003c/kbd\u003e only builds with Clang. I am using master for SmartOS (Solaris) amd64 port work. :)",
                                           "updatedAt":  "2019-06-14T08:39:13Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwMjAyMzM0OQ==",
                                           "createdAt":  "2019-06-14T08:39:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "redfox105",
                                           "body":  "\u003e We (Loongson) are trying to port .NET Core (2.1 now, then will update to master) to MIPS64 and have just started this work recently. @liujianm @ibbcall\r\n\r\nIs there a release plan?",
                                           "updatedAt":  "2019-06-14T08:39:55Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwMjAyNTc4MA==",
                                           "createdAt":  "2019-06-14T08:46:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "theaoqi",
                                           "body":  "\u003e @theaoqi, just FYI, the master branch builds with GCC as well as Clang, while release/2.1 only builds with Clang. I am using master for SmartOS (Solaris) amd64 port work. :)\r\n\r\nThanks! I didn\u0027t know that and will consider this:)",
                                           "updatedAt":  "2019-06-14T08:46:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwMjAyNjgxMQ==",
                                           "createdAt":  "2019-06-14T08:49:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "theaoqi",
                                           "body":  "\u003e \u003e We (Loongson) are trying to port .NET Core (2.1 now, then will update to master) to MIPS64 and have just started this work recently. @liujianm @ibbcall\r\n\u003e \r\n\u003e Is there a release plan?\r\n\r\nNot yet. Although we have some experience with porting OpenJDK to MIPS64, but we are not familiar with .NET. This is huge work, I cannot give a plan now.",
                                           "updatedAt":  "2019-06-14T08:49:54Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwNDM1NzIxOQ==",
                                           "createdAt":  "2019-06-21T09:21:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBWetOg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "MeiChin-Tsai",
                                                                               "createdAt":  "2019-08-01T23:10:50Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "trivalik",
                                                                               "createdAt":  "2020-11-11T20:11:54Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "zhengwb",
                                           "body":  "\u003e We (Loongson) are trying to port .NET Core (2.1 now, then will update to master) to MIPS64 and have just started this work recently. @liujianm @ibbcall\r\n\r\nIt is recommended to do this based on the latest version.",
                                           "updatedAt":  "2019-06-21T09:21:26Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwNDQwNDAwOA==",
                                           "createdAt":  "2019-06-21T12:14:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "liujianm",
                                           "body":  "\u003e We (Loongson) are trying to port .NET Core (2.1 now, then will update to master) to MIPS64 and have just started this work recently. @liujianm @ibbcall\r\n\r\nThank you for the good news.\r\nWe want to run .netcore application on MIPS64(Loongson).\r\nHope to support in the latest version(3.0 will be released in September).\r\nLooking forward to your good news.\r\n",
                                           "updatedAt":  "2019-06-21T12:14:06Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUxOTM5NDY2Ng==",
                                           "createdAt":  "2019-08-08T07:02:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "myFirstway",
                                           "body":  "\u003e \u003e \u003e We (Loongson) are trying to port .NET Core (2.1 now, then will update to master) to MIPS64 and have just started this work recently. @liujianm @ibbcall\r\n\u003e \u003e \r\n\u003e \u003e \r\n\u003e \u003e Is there a release plan?\r\n\u003e \r\n\u003e Not yet. Although we have some experience with porting OpenJDK to MIPS64, but we are not familiar with .NET. This is huge work, I cannot give a plan now.\r\n\r\nWhat\u0027s the progress now?",
                                           "updatedAt":  "2019-08-08T07:02:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0NjYxMzc4OA==",
                                           "createdAt":  "2019-10-26T15:41:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kchanlee",
                                           "body":  "Looking forward to seeing .Net Core running on Loongson! @theaoqi Could you share the progress?",
                                           "updatedAt":  "2019-10-26T15:41:47Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1MDEyOTA4NQ==",
                                           "createdAt":  "2019-11-06T03:41:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBIC_2A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2019-11-06T07:12:31Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "myFirstway",
                                                                               "createdAt":  "2019-11-06T08:27:23Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "myFirstway",
                                                                               "createdAt":  "2019-11-06T08:27:29Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "markusschaber",
                                                                               "createdAt":  "2019-11-06T14:16:49Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "markusschaber",
                                                                               "createdAt":  "2019-11-06T14:16:50Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "xiangzhai",
                                                                               "createdAt":  "2019-11-07T03:06:58Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "yueshen005",
                                                                               "createdAt":  "2019-11-07T07:41:47Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "LGinC",
                                                                               "createdAt":  "2019-11-08T10:04:12Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "LGinC",
                                                                               "createdAt":  "2019-11-08T10:04:12Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "hueidou",
                                                                               "createdAt":  "2019-11-08T13:24:48Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "sdhzth",
                                                                               "createdAt":  "2019-11-16T17:40:38Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "sdhzth",
                                                                               "createdAt":  "2019-11-16T17:40:41Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "whuanle",
                                                                               "createdAt":  "2019-12-29T06:11:08Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "gxrsprite",
                                                                               "createdAt":  "2020-03-10T11:58:29Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "mfjiang",
                                                                               "createdAt":  "2020-03-20T03:13:23Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jinyuttt",
                                                                               "createdAt":  "2020-05-17T10:22:03Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "NMSAzulX",
                                                                               "createdAt":  "2020-05-17T11:19:43Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "Artur2",
                                                                               "createdAt":  "2020-05-27T12:30:25Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "yinyue200",
                                                                               "createdAt":  "2020-06-21T10:28:43Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  19
                                                         },
                                           "author":  "theaoqi",
                                           "body":  "The code base was upgraded to 3.0. Hello World and serveral tests in coreclr can run on MIPS64 now. @kchanlee @myFirstway @liujianm ",
                                           "updatedAt":  "2019-11-06T03:41:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1MDEzNTk2Mw==",
                                           "createdAt":  "2019-11-06T04:17:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOA14gRw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "markusschaber",
                                                                               "createdAt":  "2019-11-06T14:17:06Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "shaofing",
                                                                               "createdAt":  "2019-11-26T05:07:00Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "@theaoqi It appears you are not pushing MIPS-related changes back to GitHub (or at least, not back to master)?\r\n\r\nAre you using the interpreter, or are you porting RyuJIT?\r\n\r\nIs there an overall MIPS porting plan documented here, in the coreclr repo?\r\n\r\nPlease be aware of the repository consolidation plan described here: https://github.com/dotnet/coreclr/issues/27549\r\n",
                                           "updatedAt":  "2019-11-06T04:17:52Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1MDU4ODI0Ng==",
                                           "createdAt":  "2019-11-07T02:13:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "theaoqi",
                                           "body":  "\u003e @theaoqi It appears you are not pushing MIPS-related changes back to GitHub (or at least, not back to master)?\r\n\u003e \r\n\r\nNot open souce yet :(\r\n\r\n\u003e Are you using the interpreter, or are you porting RyuJIT?\r\n\r\nWe skipped the interpreter and are porting JIT now. We found that interpreter doesn\u0027t work very well even on x86.\r\n\r\n\u003e \r\n\u003e Is there an overall MIPS porting plan documented here, in the coreclr repo?\r\n\r\nNo.\r\n\r\n\u003e \r\n\u003e Please be aware of the repository consolidation plan described here: dotnet/coreclr#27549\r\n\r\nThank you very much for the information. I will be continuing concern over this issue. We plan to release 3.x (maybe 3.1) then catch up master. For 3.x, the repository consolidation doesn\u0027t affect us, right?",
                                           "updatedAt":  "2019-11-07T02:13:40Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1MDU5MTU3NQ==",
                                           "createdAt":  "2019-11-07T02:27:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "\u003e For 3.x, the repository consolidation doesn\u0027t affect us, right?\r\n\r\nThat\u0027s correct. The released product and servicing branches will remain as-is.\r\n\r\n\u003e We skipped the interpreter and are porting JIT now. We found that interpreter doesn\u0027t work very well even on x86.\r\n\r\nInteresting. We\u0027ve found in the past that using the interpreter allows us to bring up an architecture faster, or at least allows people to work in parallel, so everyone is not waiting on the JIT port to make progress. It\u0027s true that we haven\u0027t kept the interpreter building and being tested recently, so it has probably degraded. At one point it would successfully run well over 95% of our outerloop tests.",
                                           "updatedAt":  "2019-11-07T02:27:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1MDU5NTI4Mg==",
                                           "createdAt":  "2019-11-07T02:43:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOA0gY8w==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "markusschaber",
                                                                               "createdAt":  "2019-11-07T12:52:29Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "theaoqi",
                                           "body":  "\u003e \u003e We skipped the interpreter and are porting JIT now. We found that interpreter doesn\u0027t work very well even on x86.\r\n\u003e \r\n\u003e Interesting. We\u0027ve found in the past that using the interpreter allows us to bring up an architecture faster, or at least allows people to work in parallel, so everyone is not waiting on the JIT port to make progress. It\u0027s true that we haven\u0027t kept the interpreter building and being tested recently, so it has probably degraded. At one point it would successfully run well over 95% of our outerloop tests.\r\n\r\nMaybe we should do some research and test about interpreter again as our knowledge about coreclr and code quality are growing. Is pure interpreter supposed to work? Or dose it have to be interpreter and jit mixed? @xiangzhai may give more details.",
                                           "updatedAt":  "2019-11-07T02:43:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1MDU5ODA3Nw==",
                                           "createdAt":  "2019-11-07T02:56:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOA0eWFA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "theaoqi",
                                                                               "createdAt":  "2019-11-07T04:48:06Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "BruceForstall",
                                           "body":  "\u003e Is pure interpreter supposed to work?\r\n\r\nIt should. However, it is not being actively tested right now, so I don\u0027t know how much \"bit rot\" needs to be repaired.\r\n\r\nDuring bring-up, you do need to set a few variables, e.g.:\r\n```\r\nCOMPlus_InterpreterDoLoopMethods=1   // allow the interpreter to run on functions with loops\r\nCOMPlus_GCgen0size=9999999 // prevent the GC from running very often; useful for bring-up\r\n```\r\n\r\nCheck the other `COMPlus_Interpret*` variables in src\\inc\\clrconfigvalues.h -- some others might be necessary or useful.",
                                           "updatedAt":  "2019-11-07T02:56:08Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1MDYwNTM2Ng==",
                                           "createdAt":  "2019-11-07T03:05:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "xiangzhai",
                                           "body":  "Hi @BruceForstall \r\n\r\nPlease look at this issue  https://github.com/dotnet/coreclr/issues/24824 about **TOTALLY** disable JIT.\r\n\r\nThanks,\r\nLeslie Zhai",
                                           "updatedAt":  "2019-11-07T03:33:35Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1MDk4NjQ1MQ==",
                                           "createdAt":  "2019-11-07T09:00:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "xiangzhai",
                                           "body":  "\\cc @QiaoVanke",
                                           "updatedAt":  "2019-11-07T09:00:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1MzE4MjAzNQ==",
                                           "createdAt":  "2019-11-13T00:33:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "whuanle",
                                           "body":  "What is the current progress?I will soon have a MIPS server ,I need to run .NET Core programs.",
                                           "updatedAt":  "2019-11-13T00:33:55Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU1MzE5MDU0NQ==",
                                           "createdAt":  "2019-11-13T01:09:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "theaoqi",
                                           "body":  "\u003e What is the current progress?I will soon have a MIPS server ,I need to run .NET Core programs.\r\n\r\nplease see https://github.com/dotnet/coreclr/issues/969#issuecomment-550129085",
                                           "updatedAt":  "2019-11-13T01:09:11Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyOTc3NTk3OQ==",
                                           "createdAt":  "2020-05-17T10:32:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBEd4yQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "NMSAzulX",
                                                                               "createdAt":  "2020-05-17T11:28:24Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jinyuttt",
                                           "body":  "@theaoqi  How is the situation? Is it possible to develop and deploy the project? Is there any progress and plan? Can you also provide your email? My account information has my email",
                                           "updatedAt":  "2020-05-17T10:33:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYyOTkzMDkyNA==",
                                           "createdAt":  "2020-05-18T03:52:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBHWxXQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2020-05-18T04:12:02Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "gxrsprite",
                                                                               "createdAt":  "2020-05-18T04:56:26Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "xiangzhai",
                                                                               "createdAt":  "2020-05-18T10:08:58Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "kztao",
                                                                               "createdAt":  "2020-05-21T06:55:13Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "alanthinker",
                                                                               "createdAt":  "2020-06-15T04:41:39Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "theaoqi",
                                           "body":  "\u003e @theaoqi How is the situation?\r\n\r\nWe are still working on the MIPS port. More than 9000 tests in coreclr has passed on MIPS (near 9700 in total). Our current main problems are GC and some others. We will use various COMPlus_* parameters to do more tests next, and will try some other tests such as the ones in corefx. Our codebase is 3.0 at present. We plan to release 3.1 first (3.0 may be skipped), and then catch up master in dotnet/runtime.\r\n\r\n\u003eIs it possible to develop and deploy the project?\r\n\r\nDo you mean .NET Core applications? I think yes. We wish to release .NET Core MIPS port this year, but I can\u0027t promise. Before the GA version, we may release some EA builds or RCs for test.\r\n\r\n\u003eIs there any progress and plan?\r\n\r\nAs mentioned above. However, we hope to hear opinions and suggestions, and the plan is subject to change.\r\n\r\n\u003eCan you also provide your email? My account information has my email\r\n\r\naoqi@loongson.cn\r\n\r\nThanks.\r\n\r\n",
                                           "updatedAt":  "2020-05-18T03:52:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYzODI1NDAyNA==",
                                           "createdAt":  "2020-06-03T14:58:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBOByXg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "expcat",
                                                                               "createdAt":  "2020-06-03T15:00:28Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2020-06-03T15:04:16Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "chenxuuu",
                                                                               "createdAt":  "2020-06-03T16:33:30Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "nathan-moore",
                                                                               "createdAt":  "2020-06-03T16:58:48Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "BruceForstall",
                                                                               "createdAt":  "2020-06-03T17:46:16Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "reflectronic",
                                                                               "createdAt":  "2020-06-03T18:38:59Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "HurricanKai",
                                                                               "createdAt":  "2020-06-03T20:18:09Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "zezba9000",
                                                                               "createdAt":  "2020-06-03T23:01:12Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "PopeyeZhong",
                                                                               "createdAt":  "2020-06-04T00:46:22Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "PopeyeZhong",
                                                                               "createdAt":  "2020-06-04T00:46:27Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "maoxian-1",
                                                                               "createdAt":  "2020-06-04T01:19:11Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "maoxian-1",
                                                                               "createdAt":  "2020-06-04T01:19:13Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "myFirstway",
                                                                               "createdAt":  "2020-06-04T02:13:58Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "myFirstway",
                                                                               "createdAt":  "2020-06-04T02:13:59Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "gxrsprite",
                                                                               "createdAt":  "2020-06-04T03:49:19Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "inosik",
                                                                               "createdAt":  "2020-06-04T09:44:16Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "cfqdream",
                                                                               "createdAt":  "2020-06-06T02:34:18Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "gavinfang-fi",
                                                                               "createdAt":  "2020-06-09T23:27:33Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "w158rk",
                                                                               "createdAt":  "2020-06-11T00:47:49Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "EntityFX",
                                                                               "createdAt":  "2020-06-16T09:38:24Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "8ggmaker",
                                                                               "createdAt":  "2020-06-18T13:16:12Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "8ggmaker",
                                                                               "createdAt":  "2020-06-18T13:16:13Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "wangyanjun",
                                                                               "createdAt":  "2020-06-20T12:03:29Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "vgxl",
                                                                               "createdAt":  "2020-06-29T07:32:35Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "mienfong",
                                                                               "createdAt":  "2020-07-09T10:46:19Z"
                                                                           },
                                                                           {
                                                                               "content":  "HOORAY",
                                                                               "user":  "mienfong",
                                                                               "createdAt":  "2020-07-09T10:46:22Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "hlizard",
                                                                               "createdAt":  "2020-08-21T00:46:46Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  27
                                                         },
                                           "author":  "xiangzhai",
                                           "body":  "Hi,\r\n\r\n[FlightFinder](https://github.com/aspnet/samples/tree/master/samples/aspnetcore/blazor/FlightFinder/FlightFinder.Server) sample is just able to work for MIPS64 now :)\r\n\r\n```\r\n# CoreFX \u0026\u0026 AspNetCore ALLIN1\r\nexport CORE_LIBRARIES=/home/loongson/corefx-3.1-Linux.mips64.Debug\r\n# Optimization Disabled\r\nexport COMPlus_JITMinOpts=1\r\n./bin/Product/Linux.mips64.Release/corerun /home/loongson/aspnet-samples/samples/aspnetcore/blazor/FlightFinder/FlightFinder.Server/bin/Debug/netcoreapp3.1/FlightFinder.Server.dll --urls http://10.2.5.91:5000\r\n```\r\n\r\n![FlightFinder-sample-screenshot](https://user-images.githubusercontent.com/851100/83702309-e944ba00-a63e-11ea-90a9-d70dd83aa096.png)\r\n\r\nCheers!  🍷  @theaoqi @QiaoVanke @jkotas @BruceForstall @janvorli \r\n\r\nWe need some open source aspnet projects or samples much more complex than [FlightFinder](https://github.com/aspnet/samples/tree/master/samples/aspnetcore/blazor/FlightFinder/FlightFinder.Server) to test CoreCLR for MIPS64.\r\n\r\nThanks,\r\nLeslie Zhai",
                                           "updatedAt":  "2020-06-04T00:40:13Z"
                                       }
                                   ],
                         "totalCount":  88
                     },
        "title":  "MIPS32 and MIPS64 support",
        "labels":  [
                       "area-PAL-coreclr",
                       "port",
                       "arch-mips64"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/13625",
        "createdAt":  "2015-11-30T22:16:41Z",
        "number":  13625,
        "author":  "wtgodbe",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2021-07-21T00:07:04Z",
        "body":  "(From https://github.com/dotnet/coreclr/pull/1671)\n\nQueryThreadCycleTime and GetThreadTimes return inconsistent results on non-windows platforms when run in CI, causing their tests to fail intermittently, but I haven\u0027t been able to reproduce this locally. I\u0027ve tried setting processor affinity in the tests to fix this, but the issue persists.\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOIJPFVA==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDMzODk1ODMzMg==",
                                           "createdAt":  "2017-10-24T11:22:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dlandi",
                                           "body":  "Any progress on this?",
                                           "updatedAt":  "2017-10-24T11:22:47Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0NjU1NTIyMA==",
                                           "createdAt":  "2019-10-26T01:14:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AaronRobinsonMSFT",
                                           "body":  "/cc @janvorli ",
                                           "updatedAt":  "2019-10-26T01:14:20Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "QueryThreadCycleTime \u0026 GetThreadTimes inconsistent on non-Windows platforms",
        "labels":  [
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/2534",
        "createdAt":  "2016-11-12T13:52:30Z",
        "number":  2534,
        "author":  "gkhanna79",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-11-07T18:16:22Z",
        "body":  "Moved from github.com/dotnet/cli/issues/4111 on behalf of @pgrm\r\n\r\n## Steps to reproduce\r\n- [Install vagrant-spk](https://docs.sandstorm.io/en/latest/vagrant-spk/installation/)\r\n- clone the sample repository [pgrm/sandstorm-asp-net-core-test](https://github.com/pgrm/sandstorm-asp-net-core-test)\r\n- inside the repository run\r\n  \r\n  ```\r\n  vagrant-spk vm up\r\n  vagrant-spk dev\r\n  ```\r\n- open the browser and go to http://local.sandstorm.io:6080/\r\n- sign in with sample developer account (I always use alice)\r\n- go to http://local.sandstorm.io:6080/apps and click on example app\r\n- create a new instance\r\n- open the debug log (in the top an icon which looks like a terminal - it\u0027s located between the trash bin and download arrow icons)\r\n## Expected  behavior\r\n\r\nAt least it would be great if I could see the current dotnet version. Actually the yeoman generator default website should show up, but at least in the debug log, I should be able to see the dotnet version\r\n## Actual behavior\r\n\r\n```\r\n...** SANDSTORM SUPERVISOR: Starting up grain.\r\ndotnet --version\r\nFailed to initialize CoreCLR, HRESULT: 0x80004005\r\n```\r\n## Environment data\r\n\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Command Line Tools (1.0.0-preview2-003121)\r\n\r\nProduct Information:\r\n Version:            1.0.0-preview2-003121\r\n Commit SHA-1 hash:  1e9d529bc5\r\n\r\nRuntime Environment:\r\n OS Name:     debian\r\n OS Version:  8\r\n OS Platform: Linux\r\n RID:         debian.8-x64\r\n```\r\n\r\nHowever, this `dotnet --info` was executed inside the `.sandstorm/build.sh` script where dotnet works just fine, and not inside `.sandstorm/launcher.sh` script where the problems show up.\r\n\r\nI think the problem is, because sandstorm containers don\u0027t have access to `/proc/self/exe` which was introduced with https://github.com/dotnet/coreclr/issues/1774. I tried to fake that file as discussed in https://github.com/sandstorm-io/sandstorm/issues/1582. I\u0027ve set the link to point to `/usr/local/bin/dotnet` as well as `/opt/dotnet/dotnet` but in both cases I\u0027m getting the same error.\r\n\r\nMaybe I\u0027m pointing it to the wrong file, or there is something more missing to make it work. Unfortunately the error message is hard to understand so some help would really be appreciated. Thx\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOTdgUVQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI2MDEyMzM0Mw==",
                                           "createdAt":  "2016-11-12T13:53:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gkhanna79",
                                           "body":  "CC @schellap \n",
                                           "updatedAt":  "2016-11-12T13:53:08Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI4NzUwMjkyNg==",
                                           "createdAt":  "2017-03-18T00:37:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ramarag",
                                           "body":  " @pgrm can you please provide the trace generated when run with export COREHOST_TRACE=1.",
                                           "updatedAt":  "2017-03-18T00:37:13Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI5NjMwNDQ3Nw==",
                                           "createdAt":  "2017-04-21T21:00:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ramarag",
                                           "body":  "@pgrm can you check if https://github.com/dotnet/coreclr/issues/9014#issuecomment-290677198 solves your issue",
                                           "updatedAt":  "2017-04-21T21:00:09Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI5OTk5NDg1NQ==",
                                           "createdAt":  "2017-05-08T21:22:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gkhanna79",
                                           "body":  "Closing the issue due to lack of details. Please reopen if the issue persists with the latest runtime.",
                                           "updatedAt":  "2017-05-08T21:22:41Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMjMwNDAxNA==",
                                           "createdAt":  "2020-03-23T00:16:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ocdtrekkie",
                                           "body":  "I have gotten back to this issue on modern .NET Core 3.1, and would love some help troubleshooting. Creating a hack for /dev similar to as @ramarag mentioned did not help me.\r\n\r\n```\r\nFailed to create CoreCLR, HRESULT: 0x80004005\r\n\r\nHost (useful for support):\r\n  Version: 3.1.2\r\n  Commit:  916b5cba26\r\n\r\n.NET Core SDKs installed:\r\n  3.1.200 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.2 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.2 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n** HTTP-BRIDGE: App server exited with status code: 137\r\n```",
                                           "updatedAt":  "2020-03-23T00:16:30Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMjMwNDE1Mg==",
                                           "createdAt":  "2020-03-23T00:17:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ocdtrekkie",
                                           "body":  "@gkhanna79 Can we reopen this for troubleshooting? I\u0027ve  got a .NET developer who would be interested in being able to play with .NET Core inside a Sandstorm sandbox.",
                                           "updatedAt":  "2020-03-23T00:17:31Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMjMwNjM1OQ==",
                                           "createdAt":  "2020-03-23T00:33:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ocdtrekkie",
                                           "body":  "This is the log with COREHOST_TRACE=1:\r\n[log.txt](https://github.com/dotnet/runtime/files/4366673/log.txt)\r\n",
                                           "updatedAt":  "2020-03-23T00:33:22Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMjMwNzUxNw==",
                                           "createdAt":  "2020-03-23T00:40:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ocdtrekkie",
                                           "body":  "New test repo is here: https://github.com/ocdtrekkie/vagrant-spk-dotnet-test1",
                                           "updatedAt":  "2020-03-23T00:40:52Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMjU0NzA0NA==",
                                           "createdAt":  "2020-03-23T11:54:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@ocdtrekkie neither @gkhanna79 nor @ramarag are on the .NET Core team anymore.\r\nWould you be able to get me a strace output (ideally via a gist, as it is going to be very large)? That might show us what\u0027s failing during the initialization.",
                                           "updatedAt":  "2020-03-23T11:54:56Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMjU0ODc0MA==",
                                           "createdAt":  "2020-03-23T11:58:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ocdtrekkie",
                                           "body":  "How would be the best way to generate that for you? (I\u0027m a bit if a beginner in the Linux space as much as I am new to .NET Core.)\n\nI was wondering if they were still around as I did notice a sparse GitHub contribution history, and it\u0027s been a few years.",
                                           "updatedAt":  "2020-03-23T11:58:55Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMjczNzAyMA==",
                                           "createdAt":  "2020-03-23T17:14:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "To get the strace log, you can execute it as follows:\r\n\r\n```\r\nstrace -o strace.log dotnet --version\r\n```\r\nThe log will get generated into the strace.log file.",
                                           "updatedAt":  "2020-03-23T17:14:31Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMjkwMTkyOA==",
                                           "createdAt":  "2020-03-23T22:57:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ocdtrekkie",
                                           "body":  "As a Gist: https://gist.github.com/ocdtrekkie/324b26993aa20479de6b967b9e522cd1\r\n\r\nAlso attached:\r\n[strace.log](https://github.com/dotnet/runtime/files/4372275/strace.log)\r\n",
                                           "updatedAt":  "2020-03-23T22:57:27Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMjk0NDA0MQ==",
                                           "createdAt":  "2020-03-24T01:08:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@ocdtrekkie I can see the code is looking for several proc file system files that do not exist exist based on the log close to the failure:\r\n* /proc/self/maps\r\n* /proc/mounts\r\n* /dev/shm/\r\n* /proc/{PID}/stat\r\n\r\nOnly the /proc/self/maps and /proc/{PID}/stat is something that our runtime explicitly tries to open and we fail if we don\u0027t find it.\r\n\r\n",
                                           "updatedAt":  "2020-03-24T01:08:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMjk0ODg1NA==",
                                           "createdAt":  "2020-03-24T01:19:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ocdtrekkie",
                                           "body":  "I basically have to figure out how to fake things in /proc, so let me see what I can manage there. I think we have an open issue to add /dev/shm too.\n\nThanks! This lets me know what I need to accomplish.",
                                           "updatedAt":  "2020-03-24T01:19:59Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMzQxNTgzOA==",
                                           "createdAt":  "2020-03-24T18:05:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "zenhack",
                                           "body":  "Spoofing `/proc/self/maps` and `/proc/{PID}/stat` is going to be a lot harder than `/proc/self/exe`. It would be helpful to know what these are actually being used for; ideally we\u0027d find a way for .NET to still work if `/proc` isn\u0027t available.",
                                           "updatedAt":  "2020-03-24T18:05:32Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwMzk5NDU1Mw==",
                                           "createdAt":  "2020-03-25T18:00:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "the /proc/{PID}/stat is used to get a start time of a process and the /proc/self/maps to get a list of shared libraries and executable in the current process. ",
                                           "updatedAt":  "2020-03-25T18:00:13Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDYwNTIwOTE2OA==",
                                           "createdAt":  "2020-03-27T18:47:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "zenhack",
                                           "body":  "Does .NET care about the address ranges in `/proc/self/maps`? I\u0027m wondering if it would be possible to generate the information statically, but if it does care about the addresses that won\u0027t work because of ASLR.\r\n\r\nI think with `/proc/{PID}/stat` the only non-obvious part is working out which pid we need to supply.\r\n\r\nIdeally .NET would just not have hard dependencies on stuff in proc though. Unfortunately just providing procfs in sandstorm isn\u0027t something I\u0027m open to; its absence has protected us from LPE vulnerabilities in the past, and I don\u0027t think any other runtime has given us much trouble. We bind mount specifically `/proc/cpuinfo`, which many things want, but most apps are able to get by without much else that lives in `/proc`.\r\n\r\nI wonder how much of .NET\u0027s use of `/proc` is actually necessary; the issue with `/proc/self/exe` suggests that at least some of these have easy alternatives (in that particular case the program name can be fetched from `argv[0]`). @janvorli, how open would you be to migrating .NET functionality that uses /proc to more portable alternatives?",
                                           "updatedAt":  "2020-03-27T18:47:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY0NzczNTM4NA==",
                                           "createdAt":  "2020-06-22T19:48:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@zenhack I am sorry, I\u0027ve missed your last question and discovered it today. Wherever we can use non- /proc based approach, I\u0027d be more than happy to use it. However, I am not aware of ones that we could easily replace. \r\nBut in .NET 5.0, we now primarily use getauxval(AT_EXECFN) to get the current exe and only fall back to /proc/self/exe if that doesn\u0027t work.\r\n",
                                           "updatedAt":  "2020-06-22T19:48:20Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4MDE1MTM0OA==",
                                           "createdAt":  "2020-08-25T17:02:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBOaVlw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ocdtrekkie",
                                                                               "createdAt":  "2020-08-25T17:05:05Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "pfeigl",
                                           "body":  "Getting rid of `/proc/` would actually allow to run .NET self-contained executables to work within most of the shared hostings out there which provide SSH access.\r\n\r\nThose are mostly running in some kind of chroot or similar reduced environments where access to `/proc/` is not available.",
                                           "updatedAt":  "2020-08-25T17:02:54Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4NzQwODExOA==",
                                           "createdAt":  "2020-09-04T21:50:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "zenhack",
                                           "body":  "I tried updating @ocdtrekkie\u0027s scripts to use the latest .NET 5 preview:\r\n\r\nhttps://github.com/ocdtrekkie/vagrant-spk-dotnet-test1/pull/1/files\r\n\r\nIt doesn\u0027t appear to have fixed the `/proc/self/exe` issue; if I remove the symlink\r\nfrom those scripts I get:\r\n\r\n```\r\nTracing enabled @ Fri Sep  4 21:35:54 2020 GMT\r\n--- Invoked dotnet [version: 5.0.0-preview.8.20407.11, commit hash: bf456654f9a4f9a86c15d9d50095ff29cde5f0a4] main = {\r\ndotnet\r\n--info\r\n}\r\nrealpath(/proc/self/exe) failed: Input/output error\r\nFailed to resolve full path of the current executable [/proc/self/exe]\r\n```\r\n\r\nBut if I keep the workaround for that, then I get the same error as before; full log:\r\n\r\n[log.txt](https://github.com/dotnet/runtime/files/5177064/log.txt)\r\n\r\nSo the situation seems unchanged with .NET 5.\r\n\r\n---\r\n\r\nA couple thoughts:\r\n\r\n- Re: `/proc/{PID}/stat`, does the runtime use this to get the status of its *own* start time, or of other processes? If the former, reading `/proc/self/stat` would make it easier to work around. \r\n- I\u0027m also curious to know what the information in these files is being used for -- what does the runtime actually do with the startup time and the list of shared libs?",
                                           "updatedAt":  "2020-09-04T21:50:47Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4NzQyMTYzNg==",
                                           "createdAt":  "2020-09-04T22:11:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "We are using /proc/self/exe only if getauxval(AT_EXECFN) returns NULL. Is it possible that it happens in your environment?\r\n\r\nRegarding the proc/{PID}/stat, we use it for other processes too for diagnostics interprocess communication. We use the time obtained from it for process id disambiguation (see GetProcessIdDisambiguationKey). The point is that a process id can get recycled during the lifetime of a .NET app.\r\n\r\n",
                                           "updatedAt":  "2020-09-04T22:11:47Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4NzQzNjg0Mg==",
                                           "createdAt":  "2020-09-04T22:34:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "zenhack",
                                           "body":  "And `/proc/self/maps`?\r\n\r\n(getauxval returning null seems plausible, and it\u0027s a secondary concern anyway).",
                                           "updatedAt":  "2020-09-04T22:34:46Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4NzQ1ODg2NQ==",
                                           "createdAt":  "2020-09-04T23:15:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "/proc/{PID}/maps is used to get a list of currently loaded shared libraries for a given process for debugger interface purposes and to create a crash dump when .NET app crashes and creating crashdump is enabled. I don\u0027t see /proc/self/maps being used in our sources now.",
                                           "updatedAt":  "2020-09-04T23:15:36Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4NzQ2NDUzMg==",
                                           "createdAt":  "2020-09-04T23:26:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "zenhack",
                                           "body":  "Hm, both of those things seem like they could be non-fatal errors; how invasive a change would it be to just disable the relevant functionality if /proc isn\u0027t available, rather that aborting? Not being able to launch a debugger doesn\u0027t seem like it should prevent an app from running at all.",
                                           "updatedAt":  "2020-09-04T23:26:26Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4NzUwMjE1OQ==",
                                           "createdAt":  "2020-09-05T01:03:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "The /proc/{PID}/maps is actually not opened at startup, only the /proc/{PID}/stat is. But that one can be disabled by setting env var `COMPlus_EnableDiagnostics=0`. This disables all the diagnostics stuff. Maybe that would actually get you going.",
                                           "updatedAt":  "2020-09-05T01:03:37Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4NzUwNjM1MQ==",
                                           "createdAt":  "2020-09-05T01:16:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "zenhack",
                                           "body":  "No dice. Did an `strace`, it appears that it *is* trying to open `/proc/self/maps` on startup; here\u0027s the end of that log:\r\n\r\n```\r\nopen(\"/proc/self/maps\", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)\r\nopen(\"/proc/self/maps\", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)\r\nfutex(0x7fc9ad7341a0, FUTEX_WAKE_PRIVATE, 2147483647) = 0\r\nwrite(2, \"Failed to create CoreCLR, HRESUL\"..., 45Failed to create CoreCLR, HRESULT: 0x80004005) = 45\r\nwrite(2, \"\\n\", 1\r\n)                       = 1\r\nmunmap(0x7fc9acf1c000, 2499424)         = 0\r\nexit_group(-2147450743)                 = ?\r\n```\r\n\r\nAdding the full log as an attachment. (I think this is the same as what we observed with @ocdtrekkie\u0027s earlier attempt)\r\n\r\n[log-strace.txt](https://github.com/dotnet/runtime/files/5177400/log-strace.txt)\r\n",
                                           "updatedAt":  "2020-09-05T01:16:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4NzU3NTM1Nw==",
                                           "createdAt":  "2020-09-05T09:04:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Ah, I have realized that I was not testing it with the dotnet host, but rather the corerun that is a simple host that predates dotnet and we use it for running coreclr tests. With that one, executing a dotnet app didn\u0027t touch anything in the /proc file system, according to my strace log.\r\n\r\nLooking at the dotnet host, it really uses /proc/self/maps and /proc/self/exe (it doesn\u0027t try to use getauxval(AT_EXECFN)). We can easily fix the /proc/self/exe. The /proc/self/maps is used to find whether a library is already loaded or not if dlopen fails with just the library name. The comment says that it was found that on some systems, dlopen finds that a library was loaded only if given absolute path. I\u0027m not sure how dlopen behaves on your system.\r\n",
                                           "updatedAt":  "2020-09-05T09:04:14Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4NzU4MzY1MQ==",
                                           "createdAt":  "2020-09-05T10:06:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "zenhack",
                                           "body":  "The exact rules for resolution on linux are documented in the man page: https://linux.die.net/man/3/dlopen\r\n\r\nIt looks like it was previously failing to find libnuma and libttng-ust. Through a combination of adding a couple directories to `LD_LIBRARY_PATH` and installing some packages, I got it to find those, but it\u0027s still trying to open `/proc/self/maps`. Full strace log is attached, I scanned through it and it doesn\u0027t look like it\u0027s failing to find any of the libraries it looks for.\r\n\r\n[log-strace2.txt](https://github.com/dotnet/runtime/files/5177899/log-strace2.txt)\r\n",
                                           "updatedAt":  "2020-09-05T10:06:59Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4ODIzNTc1OQ==",
                                           "createdAt":  "2020-09-07T10:35:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@zenhack so it turned out the code that opens `/self/proc/maps` in the `dotnet` host that I was referring to is used only when a 3rd party library is trying to use .NET hosting API, so it is definitely not your case.\r\nSo I\u0027ve ran strace with `-k` option to see where the call to open that file comes from and surprisingly, it was not from our code. Our code just calls pthread_getattr_np and that function from libpthread internally opens `/self/proc/maps`:\r\n```\r\nopen(\"/proc/self/maps\", O_RDONLY|O_CLOEXEC) = 10\r\n \u003e /lib/x86_64-linux-gnu/libc-2.23.so(_IO_file_open+0x1f) [0x79a5f]\r\n \u003e /lib/x86_64-linux-gnu/libc-2.23.so(_IO_file_fopen+0x205) [0x79d35]\r\n \u003e /lib/x86_64-linux-gnu/libc-2.23.so(fgets+0x264) [0x6dd34]\r\n \u003e /lib/x86_64-linux-gnu/libpthread-2.23.so(pthread_getattr_np+0x17a) [0x93ba]\r\n \u003e /home/janvorli/dotnet50latest/shared/Microsoft.NETCore.App/5.0.0-rc.1.20430.6/libcoreclr.so() [0x4e8cc9]\r\n \u003e /home/janvorli/dotnet50latest/shared/Microsoft.NETCore.App/5.0.0-rc.1.20430.6/libcoreclr.so(_ZN6Thread10InitThreadEi+0x12c) [0x17a91c]\r\n \u003e /home/janvorli/dotnet50latest/shared/Microsoft.NETCore.App/5.0.0-rc.1.20430.6/libcoreclr.so(_Z11SetupThreadi+0x18b) [0x17997b]\r\n \u003e /home/janvorli/dotnet50latest/shared/Microsoft.NETCore.App/5.0.0-rc.1.20430.6/libcoreclr.so() [0x4a37f9]\r\n \u003e /home/janvorli/dotnet50latest/shared/Microsoft.NETCore.App/5.0.0-rc.1.20430.6/libcoreclr.so() [0x4a2cd9]\r\n \u003e /home/janvorli/dotnet50latest/shared/Microsoft.NETCore.App/5.0.0-rc.1.20430.6/libcoreclr.so() [0x4a2b3d]\r\n \u003e /home/janvorli/dotnet50latest/shared/Microsoft.NETCore.App/5.0.0-rc.1.20430.6/libcoreclr.so(_ZN8CorHost25StartEv+0x6e) [0xca33e]\r\n \u003e /home/janvorli/dotnet50latest/shared/Microsoft.NETCore.App/5.0.0-rc.1.20430.6/libcoreclr.so(coreclr_initialize+0x3c0) [0x74d10]\r\n \u003e /home/janvorli/dotnet50latest/shared/Microsoft.NETCore.App/5.0.0-rc.1.20430.6/libhostpolicy.so(_ZN9coreclr_t6createERKSsPKcS3_RK22coreclr_property_bag_tRSt10unique_ptrIS_St14default_deleteIS_EE+0x320) [0x8ee0]\r\n \u003e /home/janvorli/dotnet50latest/shared/Microsoft.NETCore.App/5.0.0-rc.1.20430.6/libhostpolicy.so(_ZN12_GLOBAL__N_114create_coreclrEv+0x135) [0x18b15]\r\n \u003e /home/janvorli/dotnet50latest/shared/Microsoft.NETCore.App/5.0.0-rc.1.20430.6/libhostpolicy.so(corehost_main+0xe1) [0x18531]\r\n \u003e /home/janvorli/dotnet50latest/host/fxr/5.0.0-rc.1.20430.6/libhostfxr.so(_ZN10fx_muxer_t24handle_exec_host_commandERKSsRK19host_startup_info_tS1_RKSt13unordered_mapI13known_optionsSt6vectorISsSaISsEE18known_options_hashSt8equal_toIS6_ESaISt4pairIKS6_S9_EEEiPPKci11host_mode_tPciPi+0x6d2) [0x1d422]\r\n \u003e /home/janvorli/dotnet50latest/host/fxr/5.0.0-rc.1.20430.6/libhostfxr.so(_ZN10fx_muxer_t10handle_cliERK19host_startup_info_tiPPKcRKSs+0x6d5) [0x1c6f5]\r\n \u003e /home/janvorli/dotnet50latest/host/fxr/5.0.0-rc.1.20430.6/libhostfxr.so(_ZN10fx_muxer_t7executeESsiPPKcRK19host_startup_info_tPciPi+0x260) [0x1bb40]\r\n \u003e /home/janvorli/dotnet50latest/host/fxr/5.0.0-rc.1.20430.6/libhostfxr.so(hostfxr_main_startupinfo+0x94) [0x18434]\r\n \u003e /home/janvorli/dotnet50latest/dotnet(_Z9exe_startiPPKc+0x3aa) [0x109aa]\r\n \u003e /home/janvorli/dotnet50latest/dotnet(main+0x90) [0x10e90]\r\n \u003e /lib/x86_64-linux-gnu/libc-2.23.so(__libc_start_main+0xf0) [0x20830]\r\n \u003e /home/janvorli/dotnet50latest/dotnet(_start+0x29) [0x4eca]\r\n\r\n```",
                                           "updatedAt":  "2020-09-07T10:35:03Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4ODQ2NjcxMg==",
                                           "createdAt":  "2020-09-07T18:29:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "zenhack",
                                           "body":  "The man page suggests that this can happen if you call it on the main thread:\r\n\r\n```\r\nIn addition, if thread refers to the main thread, then pthread_getattr_np() can fail because  of\r\nerrors  from  various  underlying calls: fopen(3), if /proc/self/maps can\u0027t be opened; and getr‐\r\nlimit(2), if the RLIMIT_STACK resource limit is not supported.\r\n```\r\n\r\nPeeking at the implementation confirms this:\r\n\r\nhttps://sourceware.org/git/?p=glibc.git;a=blob;f=nptl/pthread_getattr_np.c;h=ce437205e41dc05653e435f6188768cccdd91c99;hb=HEAD#l76\r\n\r\nSo I guess that gets us back to: what is this information needed for, and can we work around it?",
                                           "updatedAt":  "2020-09-07T18:29:51Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4ODQ3MjIzNQ==",
                                           "createdAt":  "2020-09-07T18:47:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "zenhack",
                                           "body":  "(I had a look at the musl libc implementation and it looks like it doesn\u0027t have this problem -- so maybe I\u0027ll try it out on alpine)",
                                           "updatedAt":  "2020-09-07T18:47:15Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4ODQ4NzYyNg==",
                                           "createdAt":  "2020-09-07T19:41:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "We use the `pthread_getattr_np` to get stack ranges for each thread. This is used for several purposes:\r\n* Sanity checks that specific addresses are on stack, but these happen only in debug builds of the runtime, not the release ones.\r\n* Verifying that there is a sufficient amount of stack left for executing some runtime functions. We use that at various places, one place for example determines whether it can use stackalloc or whether it needs to fall back to malloc. Another place is in Microsoft.Extensions.DependencyInjection.\r\n* Internal diagnostics purposes\r\n* Debugger interface purposes",
                                           "updatedAt":  "2020-09-07T19:41:19Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4ODU0MTI2MQ==",
                                           "createdAt":  "2020-09-07T23:36:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "zenhack",
                                           "body":  "I tried getting this working with the alpine/musl build (using docker-spk, since vagrant-spk is tied to debian) and can confirm that we don\u0027t hit the `/proc/self/maps` issue with the musl build. However, it appears musl\u0027s implementation of realpath() works by opening the path you pass to it, and then calling readlink(/proc/self/fd/\u003cfd\u003e), which obviously doesn\u0027t work without /proc mounted. So it trips up doing this for `/proc/self/exe` even with the symlink workaround, since `/proc/self/fd` isn\u0027t there either -- and we can\u0027t just add it, since if the fd gets reused (and it does) future results will be wrong.\r\n\r\nI asked in `#musl` on freenode, and I guess realpath() is difficult to implement without race conditions if you want to avoid `/proc`. But it works on glibc.\r\n\r\nAvoiding `/proc/self/exe` is a no-brainer. Beyond that, I can see a couple possible ways to proceed:\r\n\r\n1. Avoid `pthread_getattr_np` on the main thread (it looks like other threads should be ok).\r\n2. Try to convince the glibc devs to get `pthread_getattr_np` working on the main thread without `/proc`.\r\n\r\nI don\u0027t know how hard (1) would be. you can get the total size of the stack with `getrlimit(RSTACK_SIZE)`, but that doesn\u0027t help without knowing the stack\u0027s base address, and I\u0027m not sure how to get that.",
                                           "updatedAt":  "2020-09-07T23:36:00Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4ODk1ODcxNQ==",
                                           "createdAt":  "2020-09-08T15:34:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "zenhack",
                                           "body":  "A small update: the musl maintainer expressed interest in getting realpath() working without /proc, so that\u0027s another possible way forward.",
                                           "updatedAt":  "2020-09-08T15:34:04Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4ODk2MzU0MA==",
                                           "createdAt":  "2020-09-08T15:41:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "zenhack",
                                           "body":  "Ok, I swapped in a working realpath() implementation and got a bit further, but it\u0027s getting a NullReferenceException on startup. s\r\ntrace log attached.\r\n\r\n[log.txt](https://github.com/dotnet/runtime/files/5189344/log.txt)",
                                           "updatedAt":  "2020-09-08T15:41:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4ODk5NzkxOQ==",
                                           "createdAt":  "2020-09-08T16:36:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Unfortunately this NullReferenceException is in an area I know nothing about. Dumping the exception here from the log for better visibility for others:\r\n```\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Microsoft.DotNet.Cli.Utils.Muxer..ctor()\r\n   at Microsoft.DotNet.Cli.Utils.MSBuildForwardingAppWithoutLogging..ctor(IEnumerable`1 argsToForward, String msbuildPath)\r\n   at Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingApp..ctor(IEnumerable`1 argsToForward, String msbuildPath)\r\n   at Microsoft.DotNet.Tools.Run.RunCommand.EnsureProjectIsBuilt()\r\n   at Microsoft.DotNet.Tools.Run.RunCommand.Execute()\r\n   at Microsoft.DotNet.Tools.Run.RunCommand.Run(String[] args)\r\n   at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args, ITelemetry telemetryClient)\r\n   at Microsoft.DotNet.Cli.Program.Main(String[] args)\r\n```\r\n\r\nHowever, I\u0027ve just found a github issue in the sdk repo that mentions exactly the same exception:\r\nhttps://github.com/dotnet/sdk/issues/4165 and there is a reference to a comment in another issue that fixed the problem for the reporter of the issue.",
                                           "updatedAt":  "2020-09-08T16:36:06Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4OTAyMzE4Mg==",
                                           "createdAt":  "2020-09-08T17:21:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "It is likely that `Process.GetCurrentProcess().MainModule.FileName` at https://github.com/dotnet/sdk/blob/b1223209644d900702287faea8e9b71f95ec49f8/src/Cli/Microsoft.DotNet.Cli.Utils/Muxer.cs#L39 uses proc file system.\r\n\r\nIt is an example of situation where https://github.com/dotnet/runtime/issues/40862 would help.",
                                           "updatedAt":  "2020-09-08T17:21:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4OTAyNDU5Ng==",
                                           "createdAt":  "2020-09-08T17:24:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "zenhack",
                                           "body":  "Hm, it looks like the issue in that case was that `libproc` was not being found, but that\u0027s a MacOS thing with no equivalent on Linux, so an analogous solution seems unlikely. Per the issue description, the function that is throwing the exception is:\r\n\r\n```csharp\r\n        public Muxer()\r\n        {\r\n            _muxerPath = Process.GetCurrentProcess().MainModule.FileName;\r\n        }\r\n```\r\n\r\n`GetCurrentProcess()` is a one-liner which is a direct call to `new Process(...)`, so I don\u0027t think that can return null (I don\u0027t actually know C#, so am just working off of the hopefully-not-too-wrong assumption that most stuff works like Java...). I don\u0027t see anything called `MainModule` in `Process.cs` though.\r\n\r\nIt seems reasonable to believe that this is due to procfs being absent, though I\u0027m not exactly sure what part of procfs it\u0027s trying to access.",
                                           "updatedAt":  "2020-09-08T17:24:08Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4OTAyNjYxMg==",
                                           "createdAt":  "2020-09-08T17:28:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "`Process.GetCurrentProcess().MainModule.FileName` will end up calling https://github.com/dotnet/runtime/blob/master/src/libraries/System.Diagnostics.Process/src/System/Diagnostics/ProcessManager.Linux.cs that has heavy dependency on procfs.",
                                           "updatedAt":  "2020-09-08T17:28:00Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4OTA2NTU3OQ==",
                                           "createdAt":  "2020-09-08T18:44:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "zenhack",
                                           "body":  "So I realized I\u0027m probably making this harder than I need to by doing `dotnet run` in the sandbox; instead I built a self-contained publish and ran that in the sandbox, and that actually seems to work, modulo the `/proc/self/exe` hackery and swapping out the realpath() implementation. So hopefully at some point alpine will ship a version of musl with the the realpath() fix, and if you guys can fix the `/proc/self/exe` thing, I think we\u0027re good to go...",
                                           "updatedAt":  "2020-09-08T18:44:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY4OTA4MTk1OQ==",
                                           "createdAt":  "2020-09-08T19:15:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "I was just about to suggest trying self contained publish, so I am glad it worked.",
                                           "updatedAt":  "2020-09-08T19:15:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5N2BRV",
                                           "createdAt":  "2022-11-07T18:16:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCvKWyg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ocdtrekkie",
                                                                               "createdAt":  "2022-11-07T18:44:00Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "janvorli",
                                           "body":  "I was going to close this issue, but I have found that `/proc/self/exe` is also explicitly used by libunwind to get the current executable path. The `dl_iterate_phdr` returns empty string in the `dlpi_name` and the libunwind needs to locate the executable then in order to read exception handling data from it.\r\nSo we could update libunwind to try to use the `getauxval(AT_EXECFN)` and only fall back to the `/proc/self/exe` if it didn\u0027t work. ",
                                           "updatedAt":  "2022-11-07T18:16:22Z"
                                       }
                                   ],
                         "totalCount":  42
                     },
        "title":  "Failed to initialize CoreCLR, HRESULT: 0x80004005 when deploying on sandstorm",
        "labels":  [
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/7740",
        "createdAt":  "2017-03-28T10:00:36Z",
        "number":  7740,
        "author":  "ipinak",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC4oF0Q==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "JinShil",
                                            "createdAt":  "2024-06-14T08:08:47Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2024-11-03T11:07:41Z",
        "body":  "I have an ASP.NET app running on Docker (image: `microsoft/dotnet:1.1.1-sdk`). When we start the application it allocates ~11G of virtual memory. I have run the application directly on the host, i.e. without Docker, both on Windows and Ubuntu. I have noticed that in Windows is consumes 30MB of \r\n`Memory (private working set)` and about the same for `Memory (shared working set)`, but on Ubuntu it still consumes 11G.\r\n\r\nSo, I have the following questions:\r\n\r\n1. What\u0027s the cause for this?\r\n2. Do we need to do something to avoid this?\r\n\r\nHere are some data from running `ps aux` from Ubuntu.\r\n\r\n```\r\nUSER      PID    %CPU   %MEM     VSZ   RSS   TTY      STAT START   TIME COMMAND\r\nroot      8832   0.4    1.3   11896404 66396 ?        SLl  11:41   0:01 dotnet ...\r\n```\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOPiJRlg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI4OTc1MjAyNQ==",
                                           "createdAt":  "2017-03-28T12:21:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODXvxFg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "abberdeen",
                                                                               "createdAt":  "2024-02-22T02:10:50Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@ipinak Please note that this is just a reservation of virtual address space, not a physical memory. Since each process (on x64) has 128TB of virtual address space for its private use, this should not be a problem. This virtual memory is mostly an address space reserved for GC heaps and executable code.",
                                           "updatedAt":  "2017-03-28T12:21:06Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI4OTc1NTkwMA==",
                                           "createdAt":  "2017-03-28T12:37:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mikedn",
                                           "body":  "Also note that on Windows \"working set\" means something like the amount of committed memory that the OS thinks the application needs. It\u0027s not all the memory that the application has committed and it\u0027s certainly not reserved virtual address space which is very large on Windows too. For example, I have a running .NET application where VMMap shows 17GB of reserved virtual address space, 400MB of commited memory and a 185MB working set.",
                                           "updatedAt":  "2017-03-28T12:37:26Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI4OTgzMjcyMQ==",
                                           "createdAt":  "2017-03-28T16:48:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ipinak",
                                           "body":  "Thank you both @janvorli and @mikedn for the explanation. Is there any way to reduce that? Since I\u0027m running on Docker, I\u0027m thinking of using cgroups, do you have any opinion on that?",
                                           "updatedAt":  "2017-03-28T16:48:59Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI4OTgzMzQ0Ng==",
                                           "createdAt":  "2017-03-28T16:51:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@ipinak why would you want to reduce that? Are you hitting some problem related to that?",
                                           "updatedAt":  "2017-03-28T16:51:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDI5MDAwMjcyOA==",
                                           "createdAt":  "2017-03-29T07:08:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ipinak",
                                           "body":  "I haven\u0027t faced any issue, it\u0027s for provisioning planning reasons.",
                                           "updatedAt":  "2017-03-29T07:08:15Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3MjcxODI1Mg==",
                                           "createdAt":  "2019-03-14T06:15:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBos0Qw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "victor-yarema",
                                                                               "createdAt":  "2021-04-27T11:42:01Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "6opuc",
                                           "body":  "@janvorli  The real problem related to huge vm usage is that the coredumps created from dotnet processes are too huge too. Real example: I\u0027m running console app which uses less than 100MB of memory, but virtual memory usage is always near 10GB. When I create coredump of this app under Linux, the size of this coredump is 10GB too. When I create process dump of the same app under Windows, the size of this dump is near 100MB. ",
                                           "updatedAt":  "2019-03-14T06:15:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3Mjc3ODE4Mg==",
                                           "createdAt":  "2019-03-14T09:49:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "I wonder what is your setting in `/proc/self/coredump_filter`. \r\n",
                                           "updatedAt":  "2019-03-14T09:49:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3Mjc4OTkyNg==",
                                           "createdAt":  "2019-03-14T10:22:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "6opuc",
                                           "body":  "cat /proc/self/coredump_filter\r\n00000033",
                                           "updatedAt":  "2019-03-14T10:22:04Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3Mjc5MjkzMA==",
                                           "createdAt":  "2019-03-14T10:30:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Ok, that\u0027s the default. Hmm, I wonder if we can do anything with the size of the core dump so that it doesn\u0027t include pages that were just reserved (allocated by mmap with PROT_NONE option). I can see that madvise can be used with MADV_DONTDUMP to prevent a range of memory from being included in the core dump, so maybe it could be used in some way. ",
                                           "updatedAt":  "2019-03-14T10:30:35Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3MjgwMDI2MA==",
                                           "createdAt":  "2019-03-14T10:50:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "6opuc",
                                           "body":  "How can I help to implement/test this modification? Maybe some directions in source code so I can test it on my side?",
                                           "updatedAt":  "2019-03-14T10:50:42Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3MjgxOTc3OQ==",
                                           "createdAt":  "2019-03-14T11:49:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBos1ag==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "victor-yarema",
                                                                               "createdAt":  "2021-04-27T11:44:15Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@6opuc that would be awesome! I think that we could add call to madvise MADV_DONTDUMP in this function for the range we\u0027ve reserved: \r\nhttps://github.com/dotnet/coreclr/blob/6958ede8e835048b9d1ee9843d7587cacf527101/src/pal/src/map/virtual.cpp#L958\r\nThen add call to madvise with MADV_DODUMP for the commited range in \r\nhttps://github.com/dotnet/coreclr/blob/6958ede8e835048b9d1ee9843d7587cacf527101/src/pal/src/map/virtual.cpp#L1041\r\nAnd it seems we would need to add madvise with MADV_DONTDUMP / MADV_DODUMP (based on the protection) in \r\nhttps://github.com/dotnet/coreclr/blob/6958ede8e835048b9d1ee9843d7587cacf527101/src/pal/src/map/virtual.cpp#L1621\r\nI think that should be sufficient.\r\n\r\nTo test your changes, the simplest way that I often use is to publish your testing application for `linux-x64` rid (`dotnet publish -r linux-x64`). After the publishing, it shows you the path to the publish folder that contains all the runtime files. Then I get the commit number from which the libcoreclr.so in that folder was built (`strings libcoreclr.so | grep \"@(#)\"`). Then I check out the coreclr repo at that commit, make my changes there, build it (just run the build.sh script in the root, that will get you the debug build with symbols and no optimizations so that you can easily debug your change). After the build completes, it will tell you where it put the resulting binaries (`bin/Product/Linux.x64.Debug`). Just copy all the files from there into the publish folder, overwriting the existing ones. Then you can debug and test your changes.\r\n",
                                           "updatedAt":  "2019-03-14T11:49:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3MjgyMTUwNw==",
                                           "createdAt":  "2019-03-14T11:55:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "6opuc",
                                           "body":  "Thanks a lot! I\u0027ll try that today and let you know about the results",
                                           "updatedAt":  "2019-03-14T11:55:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3MzIwMzc0Mw==",
                                           "createdAt":  "2019-03-15T08:43:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "6opuc",
                                           "body":  "I\u0027ve made the changes you described to test if core dump will be smaller, but size of core dump is the same :(\r\nI\u0027m not sure if I understand you correctly. This is what I did:\r\n```diff\r\ndiff --git a/src/pal/src/map/virtual.cpp b/src/pal/src/map/virtual.cpp\r\nindex a5610ef..55c210d 100644\r\n--- a/src/pal/src/map/virtual.cpp\r\n+++ b/src/pal/src/map/virtual.cpp\r\n@@ -1016,6 +1016,20 @@ static LPVOID ReserveVirtualMemory(\r\n         return nullptr;\r\n     }\r\n\r\n+       // Do not include reserved virtual memory in core dumps\r\n+       // TODO: only on linux, because MADV_DONTDUMP is Linux-specific\r\n+       int madviseResult = madvise(pRetVal,\r\n+                                        MemSize,\r\n+                                        MADV_DONTDUMP);\r\n+       if (madviseResult != 0)\r\n+       {\r\n+               //TODO: should we fail and exit here?\r\n+               ERROR(\"madvise failed!\\n\");\r\n+               pthrCurrent-\u003eSetLastError(ERROR_INVALID_ADDRESS);\r\n+               munmap(pRetVal, MemSize);\r\n+               return nullptr;\r\n+       }\r\n+\r\n #if MMAP_ANON_IGNORES_PROTECTION\r\n     if (mprotect(pRetVal, MemSize, PROT_NONE) != 0)\r\n     {\r\n@@ -1169,6 +1183,15 @@ VIRTUALCommitMemory(\r\n                 goto error;\r\n             }\r\n\r\n+                       // Include committed memory in core dump\r\n+                       // TODO: Linux-specific?\r\n+                       if (madvise((void *) StartBoundary, MemSize, MADV_DODUMP) != 0)\r\n+                       {\r\n+                               //TODO: is it safe to continue here?\r\n+                               ERROR(\"madvise() failed! Error(%d)=%s\\n\", errno, strerror(errno));\r\n+                               goto error;\r\n+                       }\r\n+\r\n             VIRTUALSetAllocState(MEM_COMMIT, runStart, runLength, pInformation);\r\n\r\n             if (nProtect == (PROT_WRITE | PROT_READ))\r\n@@ -1706,6 +1729,17 @@ VirtualProtect(\r\n         {\r\n             *lpflOldProtect = PAGE_EXECUTE_READWRITE;\r\n         }\r\n+\r\n+               //TODO: Linux-specific?\r\n+               //TODO: Is protection check correct?\r\n+               int advise = flNewProtect == PAGE_NOACCESS ? MADV_DONTDUMP : MADV_DODUMP;\r\n+               if (madvise((LPVOID)StartBoundary, MemSize, advise) != 0)\r\n+               {\r\n+                       //TODO: Is it safe to continue here?\r\n+                       SetLastError( ERROR_INVALID_ADDRESS );\r\n+                       goto ExitVirtualProtect;\r\n+               }\r\n+\r\n         bRetVal = TRUE;\r\n     }\r\n     else\r\n```",
                                           "updatedAt":  "2019-03-15T08:43:52Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3MzIxOTg3Mg==",
                                           "createdAt":  "2019-03-15T09:39:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "You\u0027ve made the changes I would expect. So maybe the memory is committed but not mapped to physical memory yet. \r\nIs it possible to share your testing app so that I can debug it locally?",
                                           "updatedAt":  "2019-03-15T09:39:03Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3MzIzNjA1OQ==",
                                           "createdAt":  "2019-03-15T10:31:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "6opuc",
                                           "body":  "I\u0027ve created simple app for this test:\r\nhttps://github.com/6opuc/MemoryTest/blob/master/MemoryTest/Program.cs\r\n\r\nVM utilization in that app is not that much as in original app, but problem is reproduced:\r\nmem usage: ~150MB\r\nvm usage: ~3GB\r\ncreatedump -u produces ~3GB core dump\r\ncreatedump (minidump with heap) produces ~200MB",
                                           "updatedAt":  "2019-03-15T10:31:46Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3MzI0MDAzNw==",
                                           "createdAt":  "2019-03-15T10:45:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "I\u0027ve actually found two more places where the madvise madvise with MADV_DONTDUMP should be added. Here, when the VIRTUALMemReset succeeds:\r\nhttps://github.com/dotnet/coreclr/blob/68fad02f41707a5333992cd7701e75aefb4e51c8/src/pal/src/map/virtual.cpp#L1382\r\n\r\nAnd here:\r\nhttps://github.com/dotnet/coreclr/blob/68fad02f41707a5333992cd7701e75aefb4e51c8/src/pal/src/map/virtual.cpp#L1528",
                                           "updatedAt":  "2019-03-15T10:45:22Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3MzI0MDMyMA==",
                                           "createdAt":  "2019-03-15T10:46:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "If that doesn\u0027t help, I\u0027ll look into it on Monday. ",
                                           "updatedAt":  "2019-03-15T10:46:16Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3MzI1Njg2OA==",
                                           "createdAt":  "2019-03-15T11:50:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "6opuc",
                                           "body":  "Core dump size is the same after these changes:\r\n\r\n```diff\r\ndiff --git a/src/pal/src/map/virtual.cpp b/src/pal/src/map/virtual.cpp\r\nindex a5610ef..e812cda 100644\r\n--- a/src/pal/src/map/virtual.cpp\r\n+++ b/src/pal/src/map/virtual.cpp\r\n@@ -1016,6 +1016,20 @@ static LPVOID ReserveVirtualMemory(\r\n         return nullptr;\r\n     }\r\n\r\n+   // Do not include reserved virtual memory in core dumps\r\n+   // TODO: only on linux, because MADV_DONTDUMP is Linux-specific\r\n+   int madviseResult = madvise(pRetVal,\r\n+                    MemSize,\r\n+                    MADV_DONTDUMP);\r\n+   if (madviseResult != 0)\r\n+   {\r\n+       //TODO: should we fail and exit here?\r\n+       ERROR(\"madvise failed!\\n\");\r\n+       pthrCurrent-\u003eSetLastError(ERROR_INVALID_ADDRESS);\r\n+       munmap(pRetVal, MemSize);\r\n+       return nullptr;\r\n+   }\r\n+\r\n #if MMAP_ANON_IGNORES_PROTECTION\r\n     if (mprotect(pRetVal, MemSize, PROT_NONE) != 0)\r\n     {\r\n@@ -1169,6 +1183,15 @@ VIRTUALCommitMemory(\r\n                 goto error;\r\n             }\r\n\r\n+           // Include committed memory in core dump\r\n+           // TODO: Linux-specific?\r\n+           if (madvise((void *) StartBoundary, MemSize, MADV_DODUMP) != 0)\r\n+           {\r\n+               //TODO: is it safe to continue here?\r\n+               ERROR(\"madvise() failed! Error(%d)=%s\\n\", errno, strerror(errno));\r\n+               goto error;\r\n+           }\r\n+\r\n             VIRTUALSetAllocState(MEM_COMMIT, runStart, runLength, pInformation);\r\n\r\n             if (nProtect == (PROT_WRITE | PROT_READ))\r\n@@ -1385,6 +1408,18 @@ VirtualAlloc(\r\n             /* Error messages are already displayed, just leave. */\r\n             goto done;\r\n         }\r\n+\r\n+       // Do not include committed memory in core dump\r\n+       // TODO: Linux-specific?\r\n+       // TODO: do we need to align lpAddress and dwSize?\r\n+       UINT_PTR StartBoundary = (UINT_PTR) ALIGN_DOWN(lpAddress, GetVirtualPageSize());\r\n+       SIZE_T MemSize = ALIGN_UP((UINT_PTR)lpAddress + dwSize, GetVirtualPageSize()) - StartBoundary;\r\n+       if (madvise((void *) StartBoundary, MemSize, MADV_DONTDUMP) != 0)\r\n+       {\r\n+           //TODO: is it safe to continue here?\r\n+           ERROR(\"madvise() failed! Error(%d)=%s\\n\", errno, strerror(errno));\r\n+           goto done;\r\n+       }\r\n     }\r\n\r\n     if ( flAllocationType \u0026 MEM_RESERVE )\r\n@@ -1525,6 +1560,16 @@ VirtualFree(\r\n                 goto VirtualFreeExit;\r\n             }\r\n #endif  // MMAP_ANON_IGNORES_PROTECTION\r\n+\r\n+           // Do not include committed memory in core dump\r\n+           // TODO: Linux-specific?\r\n+           if (madvise((void *) StartBoundary, MemSize, MADV_DONTDUMP) != 0)\r\n+           {\r\n+               //TODO: is it safe to continue here?\r\n+               ERROR(\"madvise() failed! Error(%d)=%s\\n\", errno, strerror(errno));\r\n+               goto VirtualFreeExit;\r\n+           }\r\n+\r\n\r\n             SIZE_T index = 0;\r\n             SIZE_T nNumOfPagesToChange = 0;\r\n@@ -1706,6 +1751,17 @@ VirtualProtect(\r\n         {\r\n             *lpflOldProtect = PAGE_EXECUTE_READWRITE;\r\n         }\r\n+\r\n+\r\n+       //TODO: Linux-specific?\r\n+       //TODO: Is protection check correct?\r\n+       int advise = flNewProtect == PAGE_NOACCESS ? MADV_DONTDUMP : MADV_DODUMP;\r\n+       if (madvise((LPVOID)StartBoundary, MemSize, advise) != 0)\r\n+       {\r\n+           //TODO: Is it safe to continue here?\r\n+           SetLastError( ERROR_INVALID_ADDRESS );\r\n+           goto ExitVirtualProtect;\r\n+       }\r\n+\r\n         bRetVal = TRUE;\r\n     }\r\n     else\r\n```",
                                           "updatedAt":  "2019-03-15T12:12:07Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3NDg1Mzc4OQ==",
                                           "createdAt":  "2019-03-20T14:26:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@6opuc thank you for trying to make these changes. I am going to look into it. I am sorry I haven\u0027t done it on Monday as promised, I was sick and then got distracted by an urgent issue.",
                                           "updatedAt":  "2019-03-20T14:26:13Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3NDkwMDg3OA==",
                                           "createdAt":  "2019-03-20T15:59:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "I\u0027ve just tried to apply your changes (not exactly the diff as git somehow complained about it), but making them by hand at the same places. And I got a significant reduction of the core size. Before applying your changes, the core was 2906587496 bytes large, with your changes only 656034600 bytes (about 4.5 times smaller). Still far from the resident set size (~138MB), but it seems promising.\r\nAre you sure in your case the dump size was not reduced? ",
                                           "updatedAt":  "2019-03-20T15:59:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3NjA3NDk3Ng==",
                                           "createdAt":  "2019-03-25T06:48:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "6opuc",
                                           "body":  "I\u0027ve just rechecked that and core dump file size is the same.\r\nHere are files I\u0027ve copied over(maybe something is missing?):\r\n```\r\n[root@kd Linux.x64.Debug]# tree .\r\n.\r\n├── bin\r\n│   ├── hfa_nested_f32_native_cpp.so\r\n│   ├── hfa_nested_f64_native_cpp.so\r\n│   ├── hfa_simple_f32_native_cpp.so\r\n│   ├── hfa_simple_f64_native_cpp.so\r\n│   ├── jitstructtests_lib.so\r\n│   ├── libBestFitMappingNative.so\r\n│   ├── libBoolNative.so\r\n│   ├── libClassicCOMNative.so\r\n│   ├── libForeignThreadExceptionsNative.so\r\n│   ├── libFuncPtrAsDelegateParamNative.so\r\n│   ├── libFunctionPointerNative.so\r\n│   ├── libIUnknownNative.so\r\n│   ├── libLPSTRTestNative.so\r\n│   ├── libLPTSTRTestNative.so\r\n│   ├── libMarshalArrayByValNative.so\r\n│   ├── libMarshalBoolArrayNative.so\r\n│   ├── libMarshalEnumNative.so\r\n│   ├── libMarshalStructAsParam.so\r\n│   ├── libNativeCallableDll.so\r\n│   ├── libRefCharArrayNative.so\r\n│   ├── libRefIntNative.so\r\n│   ├── libSimpleStructNative.so\r\n│   ├── libSizeConstNative.so\r\n│   ├── libStructABILib.so\r\n│   ├── libUIntPtrNative.so\r\n│   ├── libUTF8TestNative.so\r\n│   ├── libVector3TestNative.so\r\n│   ├── mirror.so\r\n│   ├── native_i0c.so\r\n│   ├── native_i0s.so\r\n│   ├── native_i1c.so\r\n│   ├── native_i1s.so\r\n│   ├── native_i3c.so\r\n│   ├── native_i3s.so\r\n│   ├── native_i5c.so\r\n│   ├── native_i5s.so\r\n│   ├── native_i6c.so\r\n│   ├── native_i6s.so\r\n│   ├── native_i7c.so\r\n│   ├── native_i7s.so\r\n│   ├── native_i8c.so\r\n│   ├── native_i8s.so\r\n│   └── test2.so\r\n├── coreconsole\r\n├── corerun\r\n├── createdump\r\n├── crossgen\r\n├── gcinfo\r\n│   └── gcinfoencoder.cpp\r\n├── IL\r\n│   └── System.Private.CoreLib.dll\r\n├── ilasm\r\n├── ildasm\r\n├── inc\r\n│   ├── cfi.h\r\n│   ├── cordebuginfo.h\r\n│   ├── coredistools.h\r\n│   ├── corerror.h\r\n│   ├── cor.h\r\n│   ├── corhdr.h\r\n│   ├── corinfo.h\r\n│   ├── corjit.h\r\n│   ├── corjithost.h\r\n│   ├── corprof.h\r\n│   ├── gcinfoencoder.h\r\n│   ├── gcinfotypes.h\r\n│   ├── opcode.def\r\n│   └── openum.h\r\n├── lib\r\n│   ├── libcoreclrpal.a\r\n│   ├── libcorguids.a\r\n│   ├── libeventpipe.a\r\n│   ├── libeventprovider.a\r\n│   └── libpalrt.a\r\n├── libclrgc.so\r\n├── libclrjit.so\r\n├── libcoreclr.so\r\n├── libcoreclrtraceptprovider.so\r\n├── libdbgshim.so\r\n├── libmscordaccore.so\r\n├── libmscordbi.so\r\n├── libprotononjit.so\r\n├── libsosplugin.so\r\n├── libsos.so\r\n├── libsuperpmi-shim-collector.so\r\n├── libsuperpmi-shim-counter.so\r\n├── libsuperpmi-shim-simple.so\r\n├── Loader\r\n│   └── NativeLibs\r\n│       └── FromNativePaths_lib.so\r\n├── mcs\r\n├── PDB\r\n│   ├── SOS.NETCore.pdb\r\n│   └── System.Private.CoreLib.pdb\r\n├── sosdocsunix.txt\r\n├── SOS.NETCore.dll\r\n├── SOS.NETCore.pdb\r\n├── superpmi\r\n├── System.Globalization.Native.a\r\n├── System.Globalization.Native.so\r\n├── System.Private.CoreLib.dll\r\n└── System.Private.CoreLib.ni.{5ffab924-2d16-404d-9a84-e24716144db1}.map\r\n```",
                                           "updatedAt":  "2019-03-25T06:48:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3NjE2NjY3NA==",
                                           "createdAt":  "2019-03-25T12:01:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Looking at your diff and comparing it to my one, it seems your change is missing the VirtualReset case. I\u0027ve mentioned the following location above:\r\nhttps://github.com/dotnet/coreclr/blob/68fad02f41707a5333992cd7701e75aefb4e51c8/src/pal/src/map/virtual.cpp#L1382\r\n\r\nHowever, I\u0027ve ended up making it here instead:\r\nhttps://github.com/dotnet/coreclr/blob/68fad02f41707a5333992cd7701e75aefb4e51c8/src/pal/src/map/virtual.cpp#L854\r\n\r\nby adding int madviseResult = madvise((void*)StartBoundary, MemSize, MADV_DONTDUMP);\r\n",
                                           "updatedAt":  "2019-03-25T12:01:52Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3NzUwMjM0MA==",
                                           "createdAt":  "2019-03-28T08:44:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "6opuc",
                                           "body":  "I\u0027ve just moved madvise(..., MADV_DONTDUMP) from VirtualAlloc(VirtualReset case) to VIRTUALResetMemory(as in your last comment) and rechecked core dump size: still the same 3GB :(\r\nI\u0027ve added asserts to check if my changes in coreclr were used in my test app and asserts work as expected.\r\nAnyway, if you\u0027ve got such core size reduction after those changes, i hope that the problem is only in my build environment(I\u0027m using ubuntu:14.04 docker image for coreclr build with llvm-3.9, and host machine is oracle linux).\r\nI\u0027ll try to build from recommended docker images: https://github.com/dotnet/coreclr/blob/68fad02f41707a5333992cd7701e75aefb4e51c8/Documentation/building/linux-instructions.md\r\n\r\n\r\n",
                                           "updatedAt":  "2019-03-28T08:44:52Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3Nzk1NDk4OQ==",
                                           "createdAt":  "2019-03-29T10:51:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "6opuc",
                                           "body":  "Still no luck with core dump size.\r\nI\u0027ve added logging for all madvise(...) calls with WARN(MADV_DODUMP|MADV_DONTDUMP), enabled logging with `export PAL_DBG_CHANNELS=-all.all:+VIRTUAL.ENTRY:+VIRTUAL.WARN:+VIRTUAL.ERROR` and ran test app again.\r\nThere is huge amount of VirtualAlloc(...) calls with flAllocationType=MEM_COMMIT:\r\n[log.txt](https://github.com/dotnet/coreclr/files/3022238/log.txt)\r\n\r\nHere are my changes for https://github.com/dotnet/coreclr/tree/73484d4664d75aafaaccbbd86f8204bd4f106ae8 :\r\n[virtual.cpp.diff.txt](https://github.com/dotnet/coreclr/files/3022321/virtual.cpp.diff.txt)\r\n\r\n\r\n\r\n",
                                           "updatedAt":  "2019-03-29T11:04:13Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3Nzk2MDkwOQ==",
                                           "createdAt":  "2019-03-29T11:12:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@6opuc to make sure we are making the same changes in the same source code version, the ideal way would be if you\u0027ve forked coreclr, cloned coreclr repo, made a branch with the changes and pushed it. Then I could fetch it from your fork. It would be much easier than sharing diffs.\r\nOr, I can share my branch with my quick and dirty changes the same way with you if you prefer.",
                                           "updatedAt":  "2019-03-29T11:12:53Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3Nzk2MTQwOA==",
                                           "createdAt":  "2019-03-29T11:14:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Actually, I was making the changes in the master, not in the 2.2 branch, so maybe there were some changes that cause the difference.",
                                           "updatedAt":  "2019-03-29T11:14:54Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3Nzk3NjcxMA==",
                                           "createdAt":  "2019-03-29T12:15:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "6opuc",
                                           "body":  "I\u0027ve pushed my changes into https://github.com/6opuc/coreclr/tree/release/2.2-MADV_DONTDUMP.\r\nNew logs(almost the same as previous): [log.txt](https://github.com/dotnet/coreclr/files/3022555/log.txt).\r\n\r\nAlso i\u0027ve noticed in the logs that first call to ReserveVirtualMemory always fail with:\r\nERROR [VIRTUAL] at ReserveVirtualMemory.1017: We did not get the region we asked for from mmap!\r\n",
                                           "updatedAt":  "2019-03-29T12:15:26Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3Nzk5NDk5MA==",
                                           "createdAt":  "2019-03-29T13:20:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Thank you for sharing your branch. \r\nI have compiled coreclr directly from your branch without any additional changes, made it go through 99 iterations and then attached gdb and captured the core. My core size was 803787600 (785MB). I\u0027ve rebuilt it again from your branch, but using the previous commit (effectively removing your change). And the core size was 3215852168 (3140 MB). So I am seeing a substantial reduction with your change.",
                                           "updatedAt":  "2019-03-29T13:20:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3ODA2NTY5MQ==",
                                           "createdAt":  "2019-03-29T16:36:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "6opuc",
                                           "body":  "I used `createdump -u` to create core dumps. I captured core dump just after first iteration.\r\nIs it expected behavior when all reserved virtual memory is included in \"full\" core dump? As I remember, in windows full dumps are not so huge.\r\nIf it is expected, then how should I create core dump with all metadata(https://github.com/dotnet/diagnostics/issues/56) and full managed heap without reserved vm?",
                                           "updatedAt":  "2019-03-29T16:50:57Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3ODA3NTAyNA==",
                                           "createdAt":  "2019-03-29T17:03:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Ah, I didn\u0027t know you have used the createdump. That explains it. It need to teach the tool to not to save memory that\u0027s only reserved and ideally also honor the madvise hints.\r\n\r\nAfter we get in your changes, you can use `gcore` tool to create smaller core dumps on linux until we fix the createdump. The size of core you get using `gcore` matches what I was getting using gdb and also to what would the OS dump when it generates core.",
                                           "updatedAt":  "2019-03-29T17:03:21Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3ODA5NDkyNQ==",
                                           "createdAt":  "2019-03-29T18:02:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOAmCgQA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "patricksuo",
                                                                               "createdAt":  "2019-04-01T06:10:12Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Alternatively, you can get your own createdump built out of coreclr repo with a little fix that I\u0027ve just tried and that reduces the dump size 10 times and it seems to be debuggable under lldb.\r\n\r\nYou can patch the code here:\r\nhttps://github.com/dotnet/coreclr/blob/master/src/debug/createdump/crashinfo.cpp#L192-L196 as follows:\r\n```diff\r\n         for (const MemoryRegion\u0026 region : m_otherMappings)\r\n         {\r\n-            InsertMemoryBackedRegion(region);\r\n+            if ((region.Permissions() \u0026 (PF_R | PF_W | PF_X)) != 0)\r\n+            {\r\n+                InsertMemoryBackedRegion(region);\r\n+            }\r\n         }\r\n```\r\n\r\n",
                                           "updatedAt":  "2019-03-29T18:02:56Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3ODEwMjQxNg==",
                                           "createdAt":  "2019-03-29T18:25:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "6opuc",
                                           "body":  "Ok, it\u0027s all clear for me now, thanks!\r\n\r\nCore dump, captured by gcore, is ~200MB with ~150MB resident size for my app. If we can \"teach\" createdump to make such small dumps, then everybody will be happy.\r\nBut:\r\n1. coredump, created by gcore, is useless for me because of dotnet/diagnostics#56\r\n2. coredump, created by gcore, was also small without MADV_DONTDUMP(as i remember, size was the same as for \"minidump with heap\", created by createdump utility. I\u0027ll check that tomorrow)\r\n3. when i try to create dump with gcore i get warnings: \r\n```\r\nroot@kd:/projects/coreclr# gcore -o /projects/core 128011\r\n\r\nProgram received signal SIGTSTP, Stopped (user).\r\n[New LWP 128105]\r\n[New LWP 128020]\r\n[New LWP 128019]\r\n[New LWP 128018]\r\n[New LWP 128017]\r\n[New LWP 128016]\r\n[New LWP 128015]\r\n[New LWP 128014]\r\n[New LWP 128013]\r\n[New LWP 128012]\r\n[Thread debugging using libthread_db enabled]\r\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\r\n0x00007f08ae67e3ad in read () at ../sysdeps/unix/syscall-template.S:81\r\n81      ../sysdeps/unix/syscall-template.S: No such file or directory.\r\nwarning: Memory read failed for corefile section, 12288 bytes at 0x7ffd81956000.\r\nSaved corefile /projects/core.128011\r\n```\r\n4. when i try to open coredump, created by gcore, i get errors(maybe because of different version of sos, i\u0027ll check that tomorrow too):\r\n```\r\n[root@kd coreclr]# docker run --rm -it -v /projects/MemoryTest/MemoryTest/output:/projects/MemoryTest/MemoryTest/output -e COREDUMP_PATH=/projects/MemoryTest/MemoryTest/output/coredump 6opuc/lldb-netcore:2.2.3\r\n(lldb) target create \"/usr/bin/dotnet\" --core \"/projects/MemoryTest/MemoryTest/output/coredump\"\r\nCore file \u0027/projects/MemoryTest/MemoryTest/output/coredump\u0027 (x86_64) was loaded.\r\n(lldb) plugin load /coreclr/libsosplugin.so\r\n(lldb) sos PrintException -lines\r\nThe libcoreclr.so module is not loaded yet in the target process\r\n```\r\n5. i\u0027m not a [real expert in linux/windows/dotnet_internals](http://lurkmore.to/%D0%AF_%D0%BD%D0%B5_%D0%BD%D0%B0%D1%81%D1%82%D0%BE%D1%8F%D1%89%D0%B8%D0%B9_%D1%81%D0%B2%D0%B0%D1%80%D1%89%D0%B8%D0%BA), but as an avarage user of dotnet framework on windows platform i\u0027m used to trust the standard tools for OS: windows error reporting, task managers\u0027s \"create process dump\". And it is very unusual for me to use custom tools to create process dumps(i mean createdump utility). \r\n\r\nI think, that if it is not possible to create \"usable\" core dumps with standard tools on Linux, then these changes(MADV_DONTDUMP) are useless without changing createdump utility. I\u0027ll look into createdump sources tomorrow and will try to fix it.\r\n\r\nShould I create pull request for all these changes?\r\n",
                                           "updatedAt":  "2019-03-29T18:25:55Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3ODEwMzQ0OA==",
                                           "createdAt":  "2019-03-29T18:29:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "6opuc",
                                           "body":  "\r\n\r\n\r\n\r\n\u003e You can patch the code here:\r\n\r\nThanks! I\u0027ll try that tomorrow",
                                           "updatedAt":  "2019-03-29T18:29:04Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3ODEwNTI2MA==",
                                           "createdAt":  "2019-03-29T18:34:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "I actually never use coredump and always debug core files generated by the OS. So it is strange that you have issues with that. I\u0027ll try what you\u0027ve done locally to see.",
                                           "updatedAt":  "2019-03-29T18:34:29Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3ODQ0NjkxNg==",
                                           "createdAt":  "2019-04-01T06:03:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "6opuc",
                                           "body":  "@janvorli, thanks a lot! After that change in crashinfo.cpp, coredump size is almost as small as process RSS.\r\nIs it possible to make these changes(virtual.cpp and crashinfo.cpp) in release 2.2 branch and rebuild dotnet docker images(runtime and sdk)?",
                                           "updatedAt":  "2019-04-01T06:03:16Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3ODQ0OTg3Mg==",
                                           "createdAt":  "2019-04-01T06:17:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "6opuc",
                                           "body":  "And as for gcore core dumps(just FYI): \r\n1. gcore prints warnings while writing core dump, but\r\n2. core dump is debuggable in lldb\r\n3. core dump size is small even without MADV_DONTDUMP fixes in virtual.cpp",
                                           "updatedAt":  "2019-04-01T06:17:44Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3ODQ5MTQ4Mw==",
                                           "createdAt":  "2019-04-01T08:47:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "\u003e Is it possible to make these changes(virtual.cpp and crashinfo.cpp) in release 2.2 branch and rebuild dotnet docker images(runtime and sdk)?\r\n\r\nIf you are asking if Microsoft can publish updated images, then the answer is that it will need to wait for the next update release. This change also needs to be verified more extensively to make sure that the dump is not missig something. I did only a couple of tests (disass of managed code, disass of native code, dumping objects in the managed heap) which I believe should be sufficient, but I am not sure.\r\n\r\n\r\n\r\n\u003e core dump size is small even without MADV_DONTDUMP fixes in virtual.cpp\r\n\r\nThis is strange, on my machine, it was not that way - without your change, I was getting 4x larger dumps with the gcore or gdb. Is your /proc/self/coredump_filter still set to 33?\r\n\r\nI was also not getting any warnings while writing the dump except for the benign `../sysdeps/unix/syscall-template.S: No such file or directory.`:\r\n```\r\n sudo gcore 23929\r\n[New LWP 23930]\r\n[New LWP 23931]\r\n[New LWP 23932]\r\n[New LWP 23933]\r\n[New LWP 23934]\r\n[New LWP 23935]\r\n[New LWP 23936]\r\n[New LWP 23938]\r\n[New LWP 26068]\r\n[New LWP 26127]\r\n[New LWP 26128]\r\n[Thread debugging using libthread_db enabled]\r\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\r\n0x00007fdcbc0d451d in read () at ../sysdeps/unix/syscall-template.S:84\r\n84      ../sysdeps/unix/syscall-template.S: No such file or directory.\r\nSaved corefile core.23929\r\n\r\n```",
                                           "updatedAt":  "2019-04-01T08:47:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3ODUwNTU4NA==",
                                           "createdAt":  "2019-04-01T09:28:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "6opuc",
                                           "body":  "Yes,  /proc/self/coredump_filter is still set to 33.\r\nAs for warning  `../sysdeps/unix/syscall-template.S: No such file or directory`  from gcore - i think, that it is bacause of my environment(https://sourceware.org/ml/gdb/2016-01/msg00021.html)",
                                           "updatedAt":  "2019-04-01T09:28:38Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3ODUwNzkxMg==",
                                           "createdAt":  "2019-04-01T09:35:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "That warning is completely benign, the gdb (that the gcore executes to do its work) just says that you don\u0027t have source code for the current location in the code where the process was stopped for the dump.",
                                           "updatedAt":  "2019-04-01T09:35:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3ODUwODM0MA==",
                                           "createdAt":  "2019-04-01T09:36:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "\u003e Yes, /proc/self/coredump_filter is still set to 33.\r\n\r\nHmm, strange. I was getting about 3GB large dumps without your change and about 800MB large ones with it. Can you please try to take the dump after 100 iterations of your test? That\u0027s what I was doing.",
                                           "updatedAt":  "2019-04-01T09:36:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ3ODU0NjgyOQ==",
                                           "createdAt":  "2019-04-01T11:47:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "6opuc",
                                           "body":  "Thanks for clarification about that warning.\r\n\r\nI\u0027ve run my test app+gcore inside docker container and on my host machine and result were different:\r\n1. Without MADV_DONTDUMP:\r\n1.1. host machine: 2.6GB\r\n1.2. docker container(ubuntu:14.04): 156MB \r\n2. With MADV_DONTDUMP:\r\n2.1. host machine: 670MB\r\n2.2. docker container(ubuntu:14.04): 200MB\r\n\r\nSo it turns out that we have similar results in core sizes.\r\n\r\nAnd gcore produces warnings only inside docker container(maybe it is the reason of diffrence in core sizes)",
                                           "updatedAt":  "2019-04-01T11:47:36Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzNjQwNjkxNA==",
                                           "createdAt":  "2019-09-30T05:29:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "6opuc",
                                           "body":  "Is there any plans to include those changes with MADV_DONTDUMP in next releases/updates?",
                                           "updatedAt":  "2019-09-30T05:29:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzNjQ3NTA3Ng==",
                                           "createdAt":  "2019-09-30T09:12:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@6opuc - I think it would be great. Do you want to create a PR for the change or would you prefer me doing that?",
                                           "updatedAt":  "2019-09-30T09:12:12Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUzOTkwNDY4MA==",
                                           "createdAt":  "2019-10-09T08:49:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "6opuc",
                                           "body":  "@janvorli - Sorry for delay. Here it is: dotnet/coreclr#27089 \r\nIt seems, that changes for createdump utility(createdump/crashinfo.cpp) are already in master. So this PR is only for src/pal/src/map/virtual.cpp ",
                                           "updatedAt":  "2019-10-09T08:49:59Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0MjYzNzA1MA==",
                                           "createdAt":  "2019-10-16T10:30:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@6opuc great, thank you! I am sorry for a delayed response, I was on vacation for the last 7 days.",
                                           "updatedAt":  "2019-10-16T10:30:15Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU0NDI0MzY4NQ==",
                                           "createdAt":  "2019-10-20T11:27:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "6opuc",
                                           "body":  "@janvorli Thanks!",
                                           "updatedAt":  "2019-10-20T11:27:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40qJ0r",
                                           "createdAt":  "2021-07-20T15:02:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "seriouz",
                                           "body":  "Any news on this?\r\n![image](https://user-images.githubusercontent.com/4722613/126347579-3892e1b4-c4f9-4cc9-bd30-d1b3b6bd0d4d.png)\r\n",
                                           "updatedAt":  "2021-07-20T15:02:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40qMDb",
                                           "createdAt":  "2021-07-20T15:13:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@seriouz what is the problem you are having? The previous issue with too large core dump should have been in Oct 2019 and they are in .NET since 5.0. In general, there should be nothing wrong with large virtual address space usage.",
                                           "updatedAt":  "2021-07-20T15:13:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4-Ij3_",
                                           "createdAt":  "2022-02-17T00:11:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "michaelkarlcoleman",
                                           "body":  "@janvorli One continuing problem with the huge virtual address space is that some systems come with a \"modest\" `ulimit -H -v`, and the user in question might not be able to increase this.  I encountered this today, discovering that 50G virtual was insufficient to run a (small) program.  (I vaguely recall that some JVMs had this behavior as well, but were changed to avoid it, since it causes problems in practice.)\r\n\r\nIt\u0027s kind of like files with holes.  Yes, it\u0027s proper POSIX.  But at the same time, a piece of software that gratuitously created such files would not be popular.",
                                           "updatedAt":  "2022-02-17T00:11:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4-IlGW",
                                           "createdAt":  "2022-02-17T00:20:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@michaelkarlcoleman thank you for the details. Do you happen to know what is the motivation for limiting the virtual address space? I have hard time coming up with a reason for that. It is a per process thing and the cost of that is just the size of the page tables. ",
                                           "updatedAt":  "2022-02-17T00:20:12Z"
                                       }
                                   ],
                         "totalCount":  88
                     },
        "title":  "Excessive VM memory consumption on Linux",
        "labels":  [
                       "design-discussion",
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/9781",
        "createdAt":  "2018-02-22T13:42:06Z",
        "number":  9781,
        "author":  "janvorli",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-10-27T04:25:09Z",
        "body":  "A the moment, we crash with an assert, since the `coreclr_shutdown` ends up calling `PALCommonCleanup` that sets the `init_count` to zero. The following call to coreclr_initialize then thinks that the runtime was not initialized yet and tries to initialize it. But some data structures still hold stuff from before the `coreclr_shutdown` call.\r\n\r\nSince we don\u0027t support reinitialization of PAL or coreclr, we should ensure that after the  `coreclr_shutdown` is called, the `coreclr_initialize` always fails gracefully. We can achieve it e.g. by adding a flag to PAL that we would set during the shutdown and check in the `Initialize` function in PAL.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOTRDkLQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5NDmsy",
                                           "createdAt":  "2022-10-27T00:03:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Due to lack of recent activity, this issue has been marked as a candidate for backlog cleanup.  It will be closed if no further activity occurs within 14 more days. Any new comment (by anyone, not necessarily the author) will undo this process.\n\nThis process is part of our [issue cleanup automation](https://github.com/dotnet/runtime/blob/main/docs/issue-cleanup.md).",
                                           "updatedAt":  "2022-10-27T00:03:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5NEOQt",
                                           "createdAt":  "2022-10-27T04:25:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "filmor",
                                           "body":  "Ping.",
                                           "updatedAt":  "2022-10-27T04:25:05Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Calls to coreclr_initialize after the coreclr_shutdown was called should fail gracefully",
        "labels":  [
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/9971",
        "createdAt":  "2018-03-19T20:36:57Z",
        "number":  9971,
        "author":  "steveharter",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-11-06T00:30:50Z",
        "body":  "@livarcocc commented on [Tue Jan 09 2018](https://github.com/dotnet/core-setup/issues/3579)\n\n_From @grbd on December 29, 2017 20:39_\n\nHi,\r\nI\u0027ve recently been trying to setup some ebuild scripts for gentoo\r\nfor the purposes of installing dotnet core 2.0 onto gentoo\r\n\r\nNormally the ebuild system within gentoo uses a **sandbox** system while compiling / installing\r\nNormally during the install phase the build is set to install it\u0027s content into a directory under /var/tmp/portage/\r\nthen on a follow up stage is copied across to the live system.\r\nhttps://wiki.gentoo.org/wiki/Project:Sandbox\r\n\r\nHowever it looks as if the sandboxing system and dotnet restore (or even running dotnet --version inside it)\r\ncauses the dotnet exe to hang.\r\n\r\n## Steps to reproduce\r\n\r\nunder gentoo\r\n```\r\nwget https://github.com/dotnet/corefx/archive/v2.0.4.tar.gz\r\ntar -xvzf v2.0.4.tar.gz\r\ncd corefx-2.0.4\r\nsandbox\r\n./init-tools.sh\r\n```\r\n\r\n## Expected  behavior\r\n\r\ndotnet should restore the packages based on BuildToolsVersion.txt\r\n\r\n## Actual behavior\r\n\r\n```\r\nInstalling dotnet cli...\r\nRestoring BuildTools version 2.0.0-servicing-02217-01...\r\n```\r\nThe dotnet cli tool hangs and requires a kill -9 to stop inside the sandbox\r\nI also tried upping the DotnetCLIVersion.txt to 2.1.3 but this had the same result\r\nI also tried calling dotnet --version directly within the sandbox using -v detailed but there was no returned output just another hang\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     gentoo\r\n OS Version:\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /root/test1/dotnet-runtime-test/corefx-2.0.4/Tools/dotnetcli/sdk/2.0.0/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n```\r\n\r\nkernel version 4.14.8\r\n\r\n\r\n## workaround\r\n\r\nThere\u0027s a way to disable sandbox features per package under portage which I\u0027ll have to explore next.\r\nBut considering this affects **dotnet restore** this also impacts any future app creatd via dotnet (not just the install of dotnet core) installed under gentoo\r\n\r\nhttps://wiki.gentoo.org/wiki/Knowledge_Base:Overriding_environment_variables_per_package\r\n\r\n\n\n_Copied from original issue: dotnet/cli#8305_\n\n---\n\n@livarcocc commented on [Tue Jan 09 2018](https://github.com/dotnet/core-setup/issues/3579#issuecomment-356344304)\n\n_From @dasMulli on December 30, 2017 9:58_\n\nFrom where (geographically) are you running this? Here in Europe, depending on the provider and contracts, restore can take quite some time.. I\u0027ve had times where it took 20 minutes to complete..\n\n---\n\n@livarcocc commented on [Tue Jan 09 2018](https://github.com/dotnet/core-setup/issues/3579#issuecomment-356344313)\n\n_From @grbd on December 30, 2017 11:31_\n\nI\u0027m running it from the UK\r\nhowever the location isn\u0027t the problem\r\n1. I\u0027ve been running it inside and outside of the sandbox multiple times for comparison, outside the sandbox it works fine (about 3 or 4mins or so)\r\n2. simply running dotnet --version inside the sandbox also causes it to hang\r\n\r\nI\u0027m assuming it\u0027s trying to access something outside of the filepath of the source code but then instead of generating a fail message just waiting on something.\r\nthe sandbox app itself doesn\u0027t show anything in it\u0027s logs to indicate that any access outside of the source code directory / where it\u0027s located was attempted though which is odd.\n\n---\n\n@livarcocc commented on [Tue Jan 09 2018](https://github.com/dotnet/core-setup/issues/3579#issuecomment-356344318)\n\nDo other core applications run inside the sandbox without hanging? Basically, trying to determine if this is an issue with the CLI or a runtime problem.\n\n---\n\n@livarcocc commented on [Tue Jan 09 2018](https://github.com/dotnet/core-setup/issues/3579#issuecomment-356344327)\n\n_From @grbd on January 8, 2018 18:49_\n\nI\u0027ve just tried a Hello World basic console app this also causes a lockup inside sandbox\r\n```\r\ndotnet ./ConsoleApp1.dll\r\n```\r\n\r\nBoth of these also cause a lockup under sandbox\r\n```\r\ndotnet --version\r\ndotnet --info\r\n```\r\n\r\nI tried running createdump against the dotnet process while it was locked, but just got\r\n```\r\nWriting minidump with heap to file /tmp/coredump.32363\r\nCLRDataCreateInstance(ICLRDataEnumMemoryRegions) FAILED 80131c4e\r\n```\r\n\r\nI also tried compiling under the gentoo / linux-x64 environment using a runtime id\r\n```\r\ndotnet build --runtime=linux-x64\r\n```\r\n\r\nThen running the test app directly instead of using the dotnet cli tool\r\n```\r\n./bin/Debug/netcoreapp2.0/linux-x64/ConsoleApp1\r\n```\r\nThis still resulted in a lockup under sandbox, so maybe this is a runtime issue.\r\n\n\n---\n\n@livarcocc commented on [Tue Jan 09 2018](https://github.com/dotnet/core-setup/issues/3579#issuecomment-356344329)\n\nSeems like that. Let me move this issue to core-setup for further investigation.\n\n---\n\n@livarcocc commented on [Mon Feb 05 2018](https://github.com/dotnet/core-setup/issues/3579#issuecomment-363165343)\n\nThis is the runtime hanging. Note that this reproes when executing an app through `dotnet consoleapp1.dll`.\n\n---\n\n@steveharter commented on [Thu Feb 22 2018](https://github.com/dotnet/core-setup/issues/3579#issuecomment-367723980)\n\n@livarcocc should we move this to coreclr repo?\n\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOauzNjw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4OTQ1MjQzNg==",
                                           "createdAt":  "2019-05-05T18:44:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ostroffjh",
                                           "body":  "What about doing \"strace dotnet --version \u003e log 2\u003eerror\" (inside sandbox) to see what dotnet is hanging on, and whether there is a command line parameter to make it instead use a \"local\" version of that, within the sandbox?\r\nEDIT: the last visible call is a futex.  It probably needs running in a debugger to get enough details to know exactly what it\u0027s waiting for.",
                                           "updatedAt":  "2019-05-05T19:01:13Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4OTc0Mjc5Nw==",
                                           "createdAt":  "2019-05-06T19:22:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ostroffjh",
                                           "body":  "Someone in gitter.im/dotnet/source-build suggested \"might want to browse markdown files in CoreCLR/CoreFX/... repos for help debugging.\"\r\nLooking more at the futex calls, they are all _PRIVATE, so they are just coordinating between threads in the same process, which should hopefully simplify debugging.",
                                           "updatedAt":  "2019-05-06T19:22:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5q7JaU",
                                           "createdAt":  "2023-11-06T00:01:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Due to lack of recent activity, this issue has been marked as a candidate for backlog cleanup.  It will be closed if no further activity occurs within 14 more days. Any new comment (by anyone, not necessarily the author) will undo this process.\n\nThis process is part of our [issue cleanup automation](https://github.com/dotnet/runtime/blob/main/docs/issue-cleanup.md).",
                                           "updatedAt":  "2023-11-06T00:01:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5q7M2P",
                                           "createdAt":  "2023-11-06T00:30:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "genterminl",
                                           "body":  "I have no idea whether this is still a problem, but I\u0027ve long given up attempting any dotnet use under Gentoo.  I have no objection to cleaning, although I\u0027m not the OP.",
                                           "updatedAt":  "2023-11-06T00:30:45Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "issue with running dotnet cli within gentoo sandbox",
        "labels":  [
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/12510",
        "createdAt":  "2019-04-17T01:13:21Z",
        "number":  12510,
        "author":  "VincentBu",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-03T21:08:55Z",
        "body":  "**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/job/arm_cross_checked_ubuntu_tst/329/\r\n\r\n**Failed tests:**\r\nJIT/Methodical/eh/finallyexec/nonlocalexittobeginningoftry_r/nonlocalexittobeginningoftry_r.sh\r\n\r\n**Log:**\r\n```\r\nJIT/Methodical/eh/finallyexec/nonlocalexittobeginningoftry_r/nonlocalexittobeginningoftry_r.sh [FAIL]\r\n        \r\n        Assert failure(PID 14398 [0x0000383e], Thread: 14398 [0x383e]): g_currentProcessCpuCount == g_processAffinitySet.Count()\r\n            File: /mnt/j/workspace/dotnet_coreclr/master/arm_cross_checked_ubuntu/src/vm/gcenv.os.cpp Line: 117\r\n            Image: /ssd/j/workspace/dotnet_coreclr/master/arm_cross_checked_ubuntu_tst/bin/tests/Linux.arm.Checked/Tests/Core_Root/corerun\r\n        \r\n        /ssd/j/workspace/dotnet_coreclr/master/arm_cross_checked_ubuntu_tst/bin/tests/Linux.arm.Checked/JIT/Methodical/eh/finallyexec/nonlocalexittobeginningoftry_r/nonlocalexittobeginningoftry_r.sh: line 252: 14398 Aborted                 $LAUNCHER $ExePath \"${CLRTestExecutionArguments[@]}\"\r\n        \r\n        Return code:      1\r\n        Raw output file:      /ssd/j/workspace/dotnet_coreclr/master/arm_cross_checked_ubuntu_tst/bin/tests/Linux.arm.Checked/JIT/Methodical/Reports/JIT.Methodical/eh/finallyexec/nonlocalexittobeginningoftry_r/nonlocalexittobeginningoftry_r.output.txt\r\n        Raw output:\r\n        BEGIN EXECUTION\r\n        /ssd/j/workspace/dotnet_coreclr/master/arm_cross_checked_ubuntu_tst/bin/tests/Linux.arm.Checked/Tests/Core_Root/corerun nonlocalexittobeginningoftry_r.exe \u0027\u0027\r\n        Expected: 100\r\n        Actual: 134\r\n        END EXECUTION - FAILED\r\n        Test Harness Exitcode is : 1\r\n        To run the test:\r\n        \u003e set CORE_ROOT=/ssd/j/workspace/dotnet_coreclr/master/arm_cross_checked_ubuntu_tst/bin/tests/Linux.arm.Checked/Tests/Core_Root\r\n        \u003e /ssd/j/workspace/dotnet_coreclr/master/arm_cross_checked_ubuntu_tst/bin/tests/Linux.arm.Checked/JIT/Methodical/eh/finallyexec/nonlocalexittobeginningoftry_r/nonlocalexittobeginningoftry_r.sh\r\n        Expected: True\r\n        Actual:   False\r\n        Stack Trace:\r\n          /mnt/j/workspace/dotnet_coreclr/master/arm_cross_checked_ubuntu/bin/tests/Linux.arm.Checked/TestWrappers/JIT.Methodical/JIT.Methodical.XUnitWrapper.cs(54678,0): at JIT_Methodical._eh_finallyexec_nonlocalexittobeginningoftry_r_nonlocalexittobeginningoftry_r_._eh_finallyexec_nonlocalexittobeginningoftry_r_nonlocalexittobeginningoftry_r_sh()\r\n        Output:\r\n          \r\n          Assert failure(PID 14398 [0x0000383e], Thread: 14398 [0x383e]): g_currentProcessCpuCount == g_processAffinitySet.Count()\r\n              File: /mnt/j/workspace/dotnet_coreclr/master/arm_cross_checked_ubuntu/src/vm/gcenv.os.cpp Line: 117\r\n              Image: /ssd/j/workspace/dotnet_coreclr/master/arm_cross_checked_ubuntu_tst/bin/tests/Linux.arm.Checked/Tests/Core_Root/corerun\r\n          \r\n          /ssd/j/workspace/dotnet_coreclr/master/arm_cross_checked_ubuntu_tst/bin/tests/Linux.arm.Checked/JIT/Methodical/eh/finallyexec/nonlocalexittobeginningoftry_r/nonlocalexittobeginningoftry_r.sh: line 252: 14398 Aborted                 $LAUNCHER $ExePath \"${CLRTestExecutionArguments[@]}\"\r\n          \r\n          Return code:      1\r\n          Raw output file:      /ssd/j/workspace/dotnet_coreclr/master/arm_cross_checked_ubuntu_tst/bin/tests/Linux.arm.Checked/JIT/Methodical/Reports/JIT.Methodical/eh/finallyexec/nonlocalexittobeginningoftry_r/nonlocalexittobeginningoftry_r.output.txt\r\n          Raw output:\r\n          BEGIN EXECUTION\r\n          /ssd/j/workspace/dotnet_coreclr/master/arm_cross_checked_ubuntu_tst/bin/tests/Linux.arm.Checked/Tests/Core_Root/corerun nonlocalexittobeginningoftry_r.exe \u0027\u0027\r\n          Expected: 100\r\n          Actual: 134\r\n          END EXECUTION - FAILED\r\n          Test Harness Exitcode is : 1\r\n          To run the test:\r\n          \u003e set CORE_ROOT=/ssd/j/workspace/dotnet_coreclr/master/arm_cross_checked_ubuntu_tst/bin/tests/Linux.arm.Checked/Tests/Core_Root\r\n          \u003e /ssd/j/workspace/dotnet_coreclr/master/arm_cross_checked_ubuntu_tst/bin/tests/Linux.arm.Checked/JIT/Methodical/eh/finallyexec/nonlocalexittobeginningoftry_r/nonlocalexittobeginningoftry_r.sh\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSMz2iQ==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ4MzkyNzk4Nw==",
                                           "createdAt":  "2019-04-17T03:58:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "cc @janvorli ",
                                           "updatedAt":  "2019-04-17T03:58:48Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5OTIxNDg0OA==",
                                           "createdAt":  "2019-06-05T19:06:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "echesakov",
                                           "body":  "8 tests failed on Linux arm during the following build due to the assertion\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=213027\u0026view=ms.vss-test-web.build-test-results-tab",
                                           "updatedAt":  "2019-06-05T19:06:05Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5OTM2NzI4MQ==",
                                           "createdAt":  "2019-06-06T06:32:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "Another duplicate: https://github.com/dotnet/coreclr/issues/24994",
                                           "updatedAt":  "2019-06-06T06:32:05Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5OTM3ODA0OA==",
                                           "createdAt":  "2019-06-06T07:15:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "VincentBu",
                                           "body":  "Some tasks failed due to the assertion:\r\nhttps://mc.dot.net/#/user/coreclr-ci/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190605.35/workItem/JIT\r\n\r\n",
                                           "updatedAt":  "2019-06-06T07:47:16Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDQ5OTQ4MTExMw==",
                                           "createdAt":  "2019-06-06T12:54:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "I am going to investigate it.",
                                           "updatedAt":  "2019-06-06T12:54:15Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwMDAyOTAwMA==",
                                           "createdAt":  "2019-06-07T20:32:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "After getting access to the lab machine (NVidia Jetson TX1), I was quickly able to find out the culprit. The issue is specific to ARM devices that can dynamically bring cores on and off line based on the system load and where the Linux distro is configured to allow that. \r\nWhat happens is that the results returned by the pthread_getaffinity_np and sched_getaffinity change dynamically corresponding to how the cores are becoming on and offline. I have written a simple C test that calls the pthread_getaffinity_np and sched_getaffinity in a loop and prints the affinity set. When only this program was running, it was showing just one and occassionally two processors in the set. But when I started to load the machine using another CPU heavy process, all four CPUs became set in the set. After the load ended, then it returned to the original state of 1, sometimes two CPUs in the set.\r\n\r\nThis is unfortunate as the affinity is the only way to detect number of processors assigned to the process e.g. in a container or when limited via taskset. ",
                                           "updatedAt":  "2019-06-07T20:32:18Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDUwMDY0ODU1Ng==",
                                           "createdAt":  "2019-06-11T01:14:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "VincentBu",
                                           "body":  "Also seen in:\r\nhttps://mc.dot.net/#/user/coreclr-ci/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190610.14/workItem/Interop/analysis/xunit/Interop_PInvoke._SizeParamIndex_ReversePInvoke_PassingByRef_PassingByRefTest_PassingByRefTest_~2F_SizeParamIndex_ReversePInvoke_PassingByRef_PassingByRefTest_PassingByRefTest_sh\r\n\r\nhttps://mc.dot.net/#/user/coreclr-ci/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190610.14/workItem/JIT/analysis/xunit/JIT_opt._Inline_tests_size_size_~2F_Inline_tests_size_size_sh\r\n\r\nhttps://mc.dot.net/#/user/coreclr-ci/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190610.14/workItem/JIT.jit64.opt/analysis/xunit/JIT_jit64._opt_rngchk_RngchkStress2_o_RngchkStress2_o_~2F_opt_rngchk_RngchkStress2_o_RngchkStress2_o_sh\r\n\r\nhttps://mc.dot.net/#/user/coreclr-ci/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190610.14/workItem/PayloadGroup0/analysis/xunit/Regressions_coreclr._15650_interfacecctor_interfacecctor_~2F_15650_interfacecctor_interfacecctor_sh\r\n\r\nhttps://mc.dot.net/#/user/coreclr-ci/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190610.14/workItem/PayloadGroup0/analysis/xunit/Regressions_coreclr._0416_hello_hello_~2F_0416_hello_hello_sh",
                                           "updatedAt":  "2019-06-11T01:21:05Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5MzEyNDcxOA==",
                                           "createdAt":  "2020-03-01T17:51:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "This is getting hit in CI",
                                           "updatedAt":  "2020-03-01T17:51:16Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU5NjYzMjcxMg==",
                                           "createdAt":  "2020-03-09T16:25:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jaredpar",
                                           "body":  "Haven\u0027t seen this popup in last week. Removing blocking-clean-ci for now. Next time this impacts CI though we should consider disabling until we can get to the bottom of this. ",
                                           "updatedAt":  "2020-03-09T16:25:43Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg3NzUwNDAyMg==",
                                           "createdAt":  "2021-07-09T23:15:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mangod9",
                                           "body":  "Closing since this hasnt reproed for a whle. ",
                                           "updatedAt":  "2021-07-09T23:15:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40sIUn",
                                           "createdAt":  "2021-07-21T08:09:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gbalykov",
                                           "body":  "I can confirm that this still reproduces on armel with cpu hotplug on d25af09fba6f10701c62b641227dbe62c649a890 when tests are launched in debug, for example:\r\n```\r\n00:59:07 FAILED   - [   0s]JIT/CodeGenBringUpTests/DblSubConst_ro/DblSubConst_ro.sh\r\n00:59:07                \r\n00:59:07                BEGIN EXECUTION\r\n00:59:07                /opt/usr/coreclr-tc/coreroot/corerun DblSubConst_ro.dll \u0027\u0027\r\n00:59:07                \r\n00:59:07                Assert failure(PID 6728 [0x00001a48], Thread: 6728 [0x1a48]): currentProcessCpuCount == g_processAffinitySet.Count()\r\n00:59:07                    File: /home/runtime/src/coreclr/vm/gcenv.os.cpp Line: 122\r\n00:59:07                    Image: /opt/usr/coreclr-tc/coreroot/corerun\r\n00:59:07                \r\n00:59:07                ./DblSubConst_ro.sh: line 300:  6728 Aborted                 $LAUNCHER $ExePath \"${CLRTestExecutionArguments[@]}\"\r\n00:59:07                Expected: 100\r\n00:59:07                Actual: 134\r\n00:59:07                END EXECUTION - FAILE\r\n```",
                                           "updatedAt":  "2021-07-21T08:09:49Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4028_d",
                                           "createdAt":  "2021-07-26T15:51:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mangod9",
                                           "body":  "@gbalykov, assume this is not a blocker for 6? ",
                                           "updatedAt":  "2021-07-26T15:51:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc402_L3",
                                           "createdAt":  "2021-07-26T16:03:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBz4Rag==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "mangod9",
                                                                               "createdAt":  "2021-07-26T16:04:36Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "alpencolt",
                                           "body":  "@mangod9 it\u0027s not a blocker",
                                           "updatedAt":  "2021-07-26T16:03:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5IuRQo",
                                           "createdAt":  "2022-08-18T23:54:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kunalspathak",
                                           "body":  "I am seeing this failure if I am using docker on Ampere machines. I added logging to see what are the values:\r\n\r\n```\r\ncurrentProcessCpuCount= 80, g_processAffinitySet.Count()= 64\r\n\r\nAssert failure(PID 29 [0x0000001d], Thread: 29 [0x001d]): currentProcessCpuCount == g_processAffinitySet.Count()\r\n    File: /runtime/src/coreclr/vm/gcenv.os.cpp Line: 126\r\n    Image: /home/kpathak/helix/processorcount/Core_Root/corerun\r\n```",
                                           "updatedAt":  "2022-08-18T23:54:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5IuS-3",
                                           "createdAt":  "2022-08-19T00:07:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kunalspathak",
                                           "body":  "@janvorli pointed out that we have a limit of max cores for 32-bit host. @Maoni0 - what is your suggestion for next steps? Is it wise to rethink on the max limit or relax the assert for such cases?\r\n\r\nhttps://github.com/dotnet/runtime/blob/21041fa89f94ebbde36a07d2ffa34118036ec9a6/src/coreclr/gc/env/gcenv.os.h#L132-L140",
                                           "updatedAt":  "2022-08-19T00:07:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5IuXKT",
                                           "createdAt":  "2022-08-19T00:40:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Maoni0",
                                           "body":  "I haven\u0027t heard anyone who has 32-bit apps complain about the max # of heaps. 32-bit apps can only use at most 4gb memory, that means 64mb/heap at most. I think 64 is fine to keep as the max for 32-bit apps. ",
                                           "updatedAt":  "2022-08-19T00:40:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5IuXWx",
                                           "createdAt":  "2022-08-19T00:41:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kunalspathak",
                                           "body":  "Fair enough. How should we fix the assert then? Currently, we cannot use checked corerun under docker running on Ampere machine.",
                                           "updatedAt":  "2022-08-19T00:41:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5IuYld",
                                           "createdAt":  "2022-08-19T00:50:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Maoni0",
                                           "body":  "that would depend on why `g_processAffinitySet.Count()` is still returning 64. is it because it\u0027s limited by `MAX_SUPPORTED_CPUS` or something else?",
                                           "updatedAt":  "2022-08-19T00:50:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5IvMdL",
                                           "createdAt":  "2022-08-19T07:11:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Yes, the max size of the g_processAffinitySet is based on the `MAX_SUPPORTED_CPUS`. ",
                                           "updatedAt":  "2022-08-19T07:11:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Iw8EV",
                                           "createdAt":  "2022-08-19T15:07:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kunalspathak",
                                           "body":  "\r\nhttps://github.com/dotnet/runtime/blob/06350b7c6f73c81f8f44908bafc45042ee9c80ab/src/coreclr/gc/env/gcenv.os.h#L161 \r\n\r\nwhich is used here:\r\n\r\nhttps://github.com/dotnet/runtime/blob/06350b7c6f73c81f8f44908bafc45042ee9c80ab/src/coreclr/vm/gcenv.os.cpp#L120\r\n\r\nand \r\n\r\nhttps://github.com/dotnet/runtime/blob/06350b7c6f73c81f8f44908bafc45042ee9c80ab/src/coreclr/gc/env/gcenv.os.h#L206-L218\r\n\r\nwhich is used here: \r\n\r\nhttps://github.com/dotnet/runtime/blob/06350b7c6f73c81f8f44908bafc45042ee9c80ab/src/coreclr/vm/gcenv.os.cpp#L122 is defined in ",
                                           "updatedAt":  "2022-08-19T15:07:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5IzPaJ",
                                           "createdAt":  "2022-08-20T19:26:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Maoni0",
                                           "body":  "thanks for the info @janvorli and @kunalspathak. then I would cap `currentProcessCpuCount` at `MAX_SUPPORTED_CPU` as well for the assert.",
                                           "updatedAt":  "2022-08-20T19:26:17Z"
                                       }
                                   ],
                         "totalCount":  21
                     },
        "title":  "[arm] Assertion failure: g_currentProcessCpuCount == g_processAffinitySet.Count()",
        "labels":  [
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/31721",
        "createdAt":  "2020-02-04T16:59:02Z",
        "number":  31721,
        "author":  "sdmaclea",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-04-29T01:27:09Z",
        "body":  "Fix/investigate usage of Windows file in non-windows CoreCLR builds.\r\n\r\nhttps://github.com/dotnet/runtime/blob/ce925072739702ebf8f6a4c6131ca3b73b81a44f/src/libraries/System.Private.CoreLib/src/System.Private.CoreLib.Shared.projitems#L1449-L1501\r\n\r\nThis usage is suspicious.  It is also non-conventional.\r\n\r\nRecommend:\r\n\r\n+ Remove files from set which are not needed for non-windows builds.\r\n+ Rename file paths if possible to remove confusion.\r\n\r\n/cc @marek-safar @jkotas @danmosemsft @stephentoub @Anipik \r\n\r\nSee comments https://github.com/dotnet/runtime/pull/28819#discussion_r374680113",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOQlP7tg==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDU4MjAyNjY1Ng==",
                                           "createdAt":  "2020-02-04T17:35:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOA6tgKg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkoritzinsky",
                                                                               "createdAt":  "2020-02-04T18:07:39Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "strangeman375",
                                                                               "createdAt":  "2020-02-04T18:27:30Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "hoyosjs",
                                                                               "createdAt":  "2020-02-04T18:37:10Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "sdmaclea",
                                                                               "createdAt":  "2020-02-04T18:41:41Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  4
                                                         },
                                           "author":  "jkotas",
                                           "body":  "CoreCLR uses PAL layer that emulates Windows API on Unix. This is bridge for that PAL layer.\r\n\r\nIt would be nice to get rid of the CoreCLR Windows API emulating PAL layer and replace it something leaner (ideally written in C# as much as possible - we have some prior art for this in CoreRT).\r\n\r\nWe can use this issue to track elimination of the Windows PAL layer.",
                                           "updatedAt":  "2020-02-04T18:24:56Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0Nzg0MTAwMw==",
                                           "createdAt":  "2020-12-18T03:13:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "\u003eIt would be nice to get rid of the CoreCLR Windows API emulating PAL layer and replace it something leaner (ideally written in C# as much as possible - we have some prior art for this in CoreRT).\r\n\r\nIncluding the dependence the runtime itself has on it? Isn\u0027t that huge - CreateFile, etc - all those things would call into managed code which does pinvokes (possibly itself using the libraries PAL)? Or would this be just for managed dependencies on the CoreCLR PAL?\r\n\r\nJust trying to figure out what it would look like.",
                                           "updatedAt":  "2020-12-18T03:13:02Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc0Nzg5NTAwMw==",
                                           "createdAt":  "2020-12-18T06:22:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "We would not want to call back and forth between managed and unmanaged code.\r\n\r\nFor file I/O, the runtime itself does not have that many places that read/write files. I think we would end up with combination of the following strategies:\r\n- Rewrite the caller in managed code and switch it to use managed file I/O.\r\n- Use standard C file I/O APIs instead of OS specific ones.\r\n- Use a custom PAL that provides just the right abstraction. It is the strategy that we are using in the dotnet host: https://github.com/dotnet/runtime/blob/master/src/installer/corehost/cli/hostmisc/pal.h .\r\n\r\nFor WinNT synchronization that started this issue, the runtime itself uses only a small subset of it . We can have this subset implemented by a custom PAL in C/C++ that would be order of magnitude smaller that the current PAL. The full set of WinNT synchronization primitives that are exposed as managed APIs can be implemented in C#. We have done that in CoreRT and I see there is plan to pick up that implementation for Mono too: https://github.com/dotnet/runtime/issues/44795 .",
                                           "updatedAt":  "2020-12-18T06:22:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5CU_u2",
                                           "createdAt":  "2022-04-29T01:27:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "I was just confused by this, on CoreCLR on Unix, Mutex is implemented in Mutex.Windows.cs and does not use Mutex.Unix.cs.",
                                           "updatedAt":  "2022-04-29T01:27:09Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "Eliminate Windows PAL layer for non-Windows CoreCLR builds",
        "labels":  [
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/39462",
        "createdAt":  "2020-07-16T19:25:07Z",
        "number":  39462,
        "author":  "VSadov",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-06-23T20:29:47Z",
        "body":  "As was noticed in https://github.com/dotnet/runtime/pull/39454 code review, naming of page-rounding helpers in not intuitive. \r\nFor example `GetSizeFromPageStart` could be better than `RoundToPage`\r\n\r\nAnother observation is that relying on sections being sequentially laid out and thus not overlapping even when padded is a bit subtle. It would be nice if the code can be refactored to make that apparent.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "pal/src/map/map.cpp could use some clean up",
        "labels":  [
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/42291",
        "createdAt":  "2020-09-16T02:02:57Z",
        "number":  42291,
        "author":  "davidwrighton",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-08-16T19:07:19Z",
        "body":  "This test fails in CI on the Arm and Arm64 platforms with the following error:\r\n\r\n`/root/helix/work/workitem/eventprovider/eventprovidertest: error while loading shared libraries: liblttng-ust.so.0: cannot open shared object file: No such file or directory`\r\n\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOZDQWgw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDY5MzU3MzY5MQ==",
                                           "createdAt":  "2020-09-16T18:11:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "davidwrighton",
                                           "body":  "It does pass for Ubuntu 1604 machines.",
                                           "updatedAt":  "2020-09-16T18:11:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc403x9J",
                                           "createdAt":  "2021-07-26T21:24:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "This sounds like a missing package on the CI machines. @MattGal is there a list of packages we install on the arm and arm64 Linux devices in the CI lab so that I can check it?",
                                           "updatedAt":  "2021-07-26T21:24:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc404BGD",
                                           "createdAt":  "2021-07-26T23:39:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MattGal",
                                           "body":  "@janvorli there isn\u0027t complete data here and this comment is 314 days old so I can\u0027t speak definitively, but we can tell from the path logged (`/root/helix/work/workitem/`) that this is running inside a docker container on Linux, which means all you need is a compatible device and access to the Microsoft Container Registry to get your repro environment.\r\n\r\nThat narrows your search down greatly (as well as making it possible to get a local repro on any old ubuntu ARM64 machine). It\u0027s definitely one of these from https://github.com/dotnet/dotnet-buildtools-prereqs-docker/:\r\n``` \r\nsrc\\alpine\\3.10\\helix\\arm64v8\r\nsrc\\alpine\\3.11\\helix\\arm64v8\r\nsrc\\alpine\\3.12\\helix\\arm32v7\r\nsrc\\alpine\\3.12\\helix\\arm64v8\r\nsrc\\alpine\\3.13\\helix\\arm32v7\r\nsrc\\debian\\10\\docker-testrunner\\arm64v8\r\nsrc\\debian\\10\\helix\\arm32v7\r\nsrc\\debian\\10\\helix\\arm64v8\r\nsrc\\debian\\11\\helix\\arm32v7\r\nsrc\\debian\\11\\helix\\arm64v8\r\nsrc\\debian\\9\\helix\\arm32v7\r\nsrc\\debian\\9\\helix\\arm64v8\r\nsrc\\ubuntu\\16.04\\helix\\arm32v7\r\nsrc\\ubuntu\\16.04\\helix\\arm64v8\r\nsrc\\ubuntu\\18.04\\helix\\arm32v7\r\nsrc\\ubuntu\\18.04\\helix\\arm64v8\r\n```\r\n\r\nAs usual, if you do narrow it down and need to borrow an ARM64 device to try out some stuff in Docker with, just ping @ilyas1974  or stop by the DncEng First Responders Teams channel and we\u0027ll do our best to find you something.\r\n",
                                           "updatedAt":  "2021-07-26T23:39:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40_jav",
                                           "createdAt":  "2021-07-29T12:27:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Ok, great, that\u0027s simple to repro for me locally then. I have a couple of Linux ARM64 devices here.",
                                           "updatedAt":  "2021-07-29T12:27:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41TU4w",
                                           "createdAt":  "2021-08-06T13:24:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "The problem is that the helix Ubuntu / Debian arm/arm64 docker images are missing the `liblttng-ust0` package.",
                                           "updatedAt":  "2021-08-06T13:24:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41yJDE",
                                           "createdAt":  "2021-08-20T00:17:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mangod9",
                                           "body":  "Hi @MattGal, is this something which should be moved to infra path to get the missing package added? ",
                                           "updatedAt":  "2021-08-20T00:17:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc414JeG",
                                           "createdAt":  "2021-08-23T16:07:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MattGal",
                                           "body":  "@mangod9 I don\u0027t think so... we\u0027ve had good luck with folks like @wfurt self-serving here.  If you find yourself blocked, @dotnet/dnceng will happily join in but it\u0027s as simple as:\r\n\r\n- Find the matching dockerfile on https://github.com/dotnet/dotnet-buildtools-prereqs-docker/ \r\n- Add the dependencies you need, e.g. liblttng-ust0 would be added alphabetically here: https://github.com/dotnet/dotnet-buildtools-prereqs-docker/blob/main/src/ubuntu/18.04/helix/arm64v8/Dockerfile#L23  (the \u0027helix\u0027-named ones are the ones you use in tests)\r\n- Make this into a pull request and get it merged (I\u0027ll happily help review)\r\n- Once this pull request merges, wait a bit and check https://github.com/dotnet/versions/blob/main/build-info/docker/image-info.dotnet-dotnet-buildtools-prereqs-docker-main.json for the new docker tag\r\n- Use this docker tag\r\n\r\nPlease try this, and as noted before if you get stuck anywhere I\u0027m happy to help.\r\n\r\n",
                                           "updatedAt":  "2021-08-23T16:30:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5kNBaD",
                                           "createdAt":  "2023-08-16T19:07:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mangod9",
                                           "body":  "Moving out, not sure if this is still an issue. ",
                                           "updatedAt":  "2023-08-16T19:07:15Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "PAL test eventprovider/eventprovidertest does not pass on Arm/Arm64 machines in CI",
        "labels":  [
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/44417",
        "createdAt":  "2020-11-09T18:02:22Z",
        "number":  44417,
        "author":  "sfoslund",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOBeglnQ==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "TanayParikh",
                                            "createdAt":  "2020-11-09T20:26:42Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "lizzard-winner",
                                            "createdAt":  "2021-02-02T08:48:52Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2024-06-30T17:05:50Z",
        "body":  "---\r\n**Issue moved from dotnet/sdk#14351**\r\n- Please respond to @John0King.\r\n\r\n---\r\n\r\n_From @John0King on Wednesday, October 28, 2020 4:05:52 AM_\r\n\r\n## installed version :\r\n- .net core sdk 3.1\r\n- .net core sdk 5.0 rc2\r\n\r\n## platform and hardware\r\n\r\non  MacOs 10.15.3   with  Black Mac (Non Apple hardware)\r\n\r\n## command and result\r\n`dotnet`   -\u003e ok\r\n`dotnet --info` -\u003e ok\r\n`dotnet -h`   -\u003e Failed to create CoreCLR, HRESULT: 0x8007FF02\r\n`dotnet new` -\u003e Failed to create CoreCLR, HRESULT: 0x8007FF02\r\n\r\n##  additional info\r\n\r\nVs for Mac run ok,   \r\ncreate xamarin forms for mac  run ok,  \r\ncreate C# project  (Non .net core)  run ok \r\ncreate .net core console app  run fail (both build and clean not work)",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOgwxS9Q==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyNDIzNjgxNA==",
                                           "createdAt":  "2020-11-09T19:44:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCBdHSA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "brunck",
                                                                               "createdAt":  "2021-03-10T23:32:57Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "aijack",
                                                                               "createdAt":  "2021-07-26T15:53:14Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "bounav",
                                                                               "createdAt":  "2021-11-06T13:42:22Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  3
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@John0King this error means that there is not even a single page of wired memory available for our use. We use one such page. There is a system-wide limit to the amount of memory that can be allocated as wired (locked via mlock). The error means that some other application has consumed all the available wired memory. I\u0027ve seen several such cases reported in the past, one of such applications being parallels desktop.\r\nPlease see https://github.com/dotnet/runtime/issues/34793 and https://github.com/dotnet/runtime/issues/34708 for more details.\r\nThe error code mentioned in those issues is different - I have modified coreclr PAL after those to report more fine grained initialization errors, so the 0x8007FF02 is a new error code to indicate the issue described above.",
                                           "updatedAt":  "2020-11-09T19:44:32Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyNDQwMjE0MA==",
                                           "createdAt":  "2020-11-10T02:06:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "John0King",
                                           "body":  "but xamarin app  runs fine ,  and also the vs for Mac.   no matter what you try to ensure,  sacrifice the ability to run is not acceptable，so please learn from mono",
                                           "updatedAt":  "2020-11-10T02:06:11Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyNjk0ODM4MQ==",
                                           "createdAt":  "2020-11-13T18:29:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "TanayParikh",
                                           "body":  "\u003e I\u0027ve seen several such cases reported in the past, one of such applications being parallels desktop.\r\n\u003e Please see #34793 and #34708 for more details.\r\n\u003e The error code mentioned in those issues is different - I have modified coreclr PAL after those to report more fine grained initialization errors, so the 0x8007FF02 is a new error code to indicate the issue described above.\r\n\r\nCan confirm, I\u0027m getting `Failed to create CoreCLR, HRESULT: 0x8007FF02` when I run `dotnet new` while Parallels Desktop is also running. Possibly of note, other applications and commands can be started and run without issue.",
                                           "updatedAt":  "2020-11-13T18:29:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyNjk2NDUxNg==",
                                           "createdAt":  "2020-11-13T18:47:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "John0King",
                                           "body":  "@TanayParikh   In my case is different. I can confirm that the parallels desktop is not even install.",
                                           "updatedAt":  "2020-11-13T18:47:55Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyNjk2NjM4OQ==",
                                           "createdAt":  "2020-11-13T18:50:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOC_prKQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "TanayParikh",
                                                                               "createdAt":  "2020-11-13T19:09:28Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "John0King",
                                                                               "createdAt":  "2020-11-15T04:29:13Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "spygi",
                                                                               "createdAt":  "2021-05-17T21:21:53Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "arrowd",
                                                                               "createdAt":  "2021-09-27T18:10:40Z"
                                                                           },
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "rsafin-spotware-com",
                                                                               "createdAt":  "2023-07-03T06:40:55Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  5
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Currently, .NET Core relies on the ability to lock single memory page (4kB) for an essential function that is necessary for high performance synchronization of threads with garbage collector. It is used to emulate the FlushProcessWriteBuffers API that we use on Windows which creates a process wide memory barrier.  Unfortunately, macOS doesn\u0027t support any equivalent of the membarrier syscall that we use on Linux. We didn\u0027t know of any other way to implement that functionality on macOS until very recently where we have discovered an alternative method that could possibly be used as a fall back in case there was no wired memory left. We are planning to add the new method I\u0027ve mentioned as a fallback mechanism.",
                                           "updatedAt":  "2020-11-13T18:50:14Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDcyNjk3MTMyNg==",
                                           "createdAt":  "2020-11-13T18:55:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@John0King can you please share the output of the following commands?\r\n```\r\nvm_stat | grep \"wired\"\r\nulimit -a | grep \"locked\"\r\nkextstat | awk \u0027NR==1{ printf \"%10s %s\\n\", $5, $6; } NR!=1{ printf \"%10d %s\\n\", $5, $6; }\u0027 | sort -n\r\n```\r\nThese would show how many wired pages are there currently allocated on your machine, what is the per process limit imposed on them and what applications use them.",
                                           "updatedAt":  "2020-11-13T18:55:56Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDczMjgyMTc2Mg==",
                                           "createdAt":  "2020-11-24T10:55:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "John0King",
                                           "body":  "```bash\r\nmac521@mac521s-iMac ~ % dotnet -h\r\nFailed to create CoreCLR, HRESULT: 0x8007FF02\r\nmac521@mac521s-iMac ~ % vm_stat | grep \"wired\"\r\nPages wired down:                       2404175.\r\nmac521@mac521s-iMac ~ % ulimit -a | grep \"locked\"\r\n-l: locked-in-memory size (kbytes)  unlimited\r\nmac521@mac521s-iMac ~ % kextstat | awk \u0027NR==1{ printf \"%10s %s\\n\", $5, $6; } NR!=1{ printf \"%10d %s\\n\", $5, $6; }\u0027 | sort -n\r\n     Wired Name\r\n     12288 com.apple.security.TMSafetyNet\r\n     16384 com.apple.AGDCPluginDisplayMetrics\r\n     16384 com.apple.AppleFSCompression.AppleFSCompressionTypeDataless\r\n     16384 com.apple.driver.Apple16X50ACPI\r\n     16384 com.apple.driver.AppleIntelSlowAdaptiveClocking\r\n     16384 com.apple.driver.AppleUSBHostMergeProperties\r\n     16384 com.apple.iokit.IOSMBusFamily\r\n     20480 com.apple.driver.AppleAPIC\r\n     20480 com.apple.driver.AppleEFIRuntime\r\n     20480 com.apple.driver.AppleHPET\r\n     20480 com.apple.driver.AppleIntelCPUPowerManagementClient\r\n     20480 com.apple.driver.AppleLPC\r\n     20480 com.apple.filesystems.hfs.encodings.kext\r\n     20480 com.apple.kext.AppleMatch\r\n     20480 com.apple.kext.triggers\r\n     20480 com.rehabman.driver.USBInjectAll\r\n     20480 org.rehabman.voodoo.driver.PS2Mouse\r\n     22496 com.apple.kpi.kasan\r\n     23856 com.apple.kpi.dsep\r\n     24576 com.apple.Dont_Steal_Mac_OS_X\r\n     24576 com.apple.driver.AppleBacklightExpert\r\n     24576 com.apple.driver.AppleSMBIOS\r\n     24576 com.apple.driver.eficheck\r\n     24576 com.apple.driver.usb.AppleUSBHostPacketFilter\r\n     24576 com.apple.iokit.IOSlowAdaptiveClockingFamily\r\n     24576 com.apple.private.KextAudit\r\n     25312 com.apple.kpi.mach\r\n     28672 com.apple.driver.IOSlaveProcessor\r\n     28672 com.apple.iokit.IOEthernetAVBController\r\n     28672 com.apple.iokit.IOReportFamily\r\n     28672 org.rehabman.voodoo.driver.PS2Keyboard\r\n     32768 com.apple.driver.AppleACPIButtons\r\n     32768 com.apple.driver.AppleBacklight\r\n     32768 com.apple.driver.AppleBusPowerController\r\n     32768 com.apple.driver.AudioAUUC\r\n     33280 com.apple.kpi.unsupported\r\n     36864 com.apple.driver.AppleUpstreamUserClient\r\n     36864 com.apple.driver.watchdog\r\n     36864 com.apple.iokit.IOACPIFamily\r\n     40960 com.apple.AppleGraphicsDeviceControl\r\n     40960 com.apple.driver.IOPlatformPluginFamily\r\n     40960 com.apple.iokit.IOUserEthernet\r\n     40960 com.apple.kec.pthread\r\n     45056 com.apple.driver.AppleRTC\r\n     45056 com.apple.filesystems.autofs\r\n     45056 org.rehabman.voodoo.driver.PS2Controller\r\n     49152 com.apple.driver.AppleEffaceableStorage\r\n     49152 com.apple.driver.AppleFDEKeyStore\r\n     49152 com.apple.iokit.IOHDAFamily\r\n     49152 com.apple.kext.CoreTrust\r\n     49152 com.apple.nke.applicationfirewall\r\n     49152 com.apple.security.quarantine\r\n     50016 com.apple.kpi.bsd\r\n     53248 com.apple.AppleFSCompression.AppleFSCompressionTypeZlib\r\n     53248 com.apple.AppleGPUWrangler\r\n     53248 com.apple.driver.AppleSSE\r\n     57344 com.apple.driver.AppleSMBusController\r\n     57344 com.apple.driver.usb.AppleUSBCommon\r\n     57344 com.apple.iokit.IOBluetoothSerialManager\r\n     57344 com.apple.iokit.IOSerialFamily\r\n     61440 com.apple.driver.Apple16X50Serial\r\n     61440 com.apple.driver.AppleEFINVRAM\r\n     61440 com.apple.driver.AppleHV\r\n     61440 com.apple.driver.usb.AppleUSBEHCIPCI\r\n     61440 com.apple.iokit.IOBluetoothPacketLogger\r\n     65536 com.apple.BootCache\r\n     65536 com.apple.iokit.CoreAnalyticsFamily\r\n     65536 com.apple.iokit.IONDRVSupport\r\n     65536 com.apple.kec.Libm\r\n     65536 org.tw.CodecCommander\r\n     65712 com.apple.kpi.libkern\r\n     66928 com.apple.kpi.private\r\n     69632 org.netkas.driver.FakeSMC\r\n     73728 com.apple.driver.IOPlatformPluginLegacy\r\n     73728 com.apple.kext.OSvKernDSPLib\r\n     86016 com.apple.AppleSystemPolicy\r\n     86016 com.apple.driver.ACPI_SMC_PlatformPlugin\r\n     86016 com.apple.driver.AppleUSBTDM\r\n     94208 com.apple.driver.AppleAHCIPort\r\n     94208 com.apple.driver.AppleMCCSControl\r\n     98304 net.osx86.kexts.GenericUSBXHCI\r\n    102400 com.apple.driver.DiskImages\r\n    102400 com.apple.iokit.IOSCSIBlockCommandsDevice\r\n    102400 com.apple.security.AppleImage4\r\n    110592 com.apple.driver.AppleSEPManager\r\n    110592 com.apple.iokit.IOAHCIFamily\r\n    114688 com.apple.fileutil\r\n    118784 com.apple.driver.AppleHDAController\r\n    118784 com.apple.driver.KernelRelayHost\r\n    122880 com.apple.driver.AppleUSBLegacyHub\r\n    126976 com.apple.driver.AppleSMC\r\n    139264 com.apple.driver.pmtelemetry\r\n    143360 com.apple.iokit.IOAVBFamily\r\n    153600 com.apple.kpi.iokit\r\n    163840 com.apple.driver.AppleMobileFileIntegrity\r\n    163840 com.apple.driver.AppleVirtIO\r\n    163840 com.apple.iokit.IOAHCIBlockStorage\r\n    163840 com.apple.iokit.IOStorageFamily\r\n    176128 com.apple.iokit.IOSCSIArchitectureModelFamily\r\n    192512 com.apple.iokit.IOSurface\r\n    196608 com.apple.iokit.IONetworkingFamily\r\n    208896 com.apple.driver.AppleIntelCPUPowerManagement\r\n    212992 com.apple.iokit.IOUSBMassStorageDriver\r\n    221184 com.apple.driver.usb.AppleUSBHub\r\n    233472 com.apple.iokit.IOPCIFamily\r\n    258048 com.apple.iokit.IOAudioFamily\r\n    258048 com.apple.iokit.IOTimeSyncFamily\r\n    290816 com.apple.iokit.IOSkywalkFamily\r\n    294912 com.apple.driver.usb.AppleUSBEHCI\r\n    331776 com.apple.driver.AppleCredentialManager\r\n    331776 com.apple.iokit.IOGraphicsFamily\r\n    368640 com.apple.security.sandbox\r\n    409600 com.apple.iokit.EndpointSecurity\r\n    425984 com.apple.filesystems.ntfs\r\n    430080 com.insanelymac.RealtekRTL8111\r\n    438272 com.apple.filesystems.hfs.kext\r\n    450560 as.vit9696.WhateverGreen\r\n    516096 as.vit9696.Lilu\r\n    516096 com.apple.driver.AppleKeyStore\r\n    626688 com.apple.iokit.IOUSBFamily\r\n    634880 com.apple.driver.AppleACPIPlatform\r\n    659456 com.apple.iokit.IOHIDFamily\r\n    704512 com.apple.vecLib.kext\r\n    737280 com.apple.plugin.IOgPTPPlugin\r\n    806912 com.apple.iokit.IOAcceleratorFamily2\r\n    901120 com.apple.GeForce\r\n    901120 com.apple.kec.corecrypto\r\n    946176 com.apple.driver.AppleHDA\r\n   1024000 com.apple.iokit.IOUSBHostFamily\r\n   1036288 com.apple.iokit.IOBluetoothFamily\r\n   1294336 com.apple.driver.DspFuncLib\r\n   1294336 com.apple.filesystems.apfs\r\n   1314816 as.vit9696.AppleALC\r\n   1753088 com.apple.nvidia.driver.NVDAGK100Hal\r\n   2981888 com.apple.nvidia.driver.NVDAResman\r\nmac521@mac521s-iMac ~ % \r\nmac521@mac521s-iMac ~ % \r\nmac521@mac521s-iMac ~ %\r\n```",
                                           "updatedAt":  "2020-11-24T10:55:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDczMjkxMDMxMw==",
                                           "createdAt":  "2020-11-24T11:57:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Thank you @John0King. From these, I can see that the amount of allocated wired memory is currently 2404175 pages, which is 9847500800 bytes (9.17GB). From those, only ~30MB is allocated by the kernel extensions, so I assume the rest must be consumed by some application(s). However, I have not found a way to print or view wired memory usage per process.\r\nCan you please share what is the physical memory amount on your machine? ",
                                           "updatedAt":  "2020-11-24T11:57:36Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDczMjk4MzQ3OQ==",
                                           "createdAt":  "2020-11-24T13:48:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "John0King",
                                           "body":  "it\u0027s 12 GB RAM ",
                                           "updatedAt":  "2020-11-24T13:48:22Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDgwMjc1NjI3OQ==",
                                           "createdAt":  "2021-03-19T11:13:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBsugdQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jpisano",
                                                                               "createdAt":  "2021-03-19T19:43:58Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "robwhitehouse",
                                                                               "createdAt":  "2021-05-30T15:25:17Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "dustinmoris",
                                           "body":  "The same happens when running .NET in a VS Code devcontainer.\r\nNothing else is running.",
                                           "updatedAt":  "2021-03-19T11:13:52Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NTAyMzgzMQ==",
                                           "createdAt":  "2021-06-04T21:58:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "zaneclaes",
                                           "body":  "Also happens running [the dotnet5 arm32v7 Docker image](https://github.com/dotnet/dotnet-docker/blob/main/samples/dotnetapp/Dockerfile.debian-arm32) on a Raspberry Pi 4. Rebooting has no effect.",
                                           "updatedAt":  "2021-06-04T21:58:25Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NTI4ODQwNw==",
                                           "createdAt":  "2021-06-05T19:59:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@zaneclaes are you sure the HRESULT is exactly the same (0x8007FF02) on the RPI 4? We use different HRESULT codes for different failure locations and the problem specific to 0x8007FF02 was never observed on anything else than macOS.\r\n",
                                           "updatedAt":  "2021-06-05T19:59:06Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1NTI5OTA4MA==",
                                           "createdAt":  "2021-06-05T21:37:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "zaneclaes",
                                           "body":  "@janvorli ah, no, the HRESULT was `0x80004005`. Since this value is a dword, I assumed it was a pointer or memory offset of some kind (which would change with every build). I will open a new issue for this, in that case.",
                                           "updatedAt":  "2021-06-05T21:37:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc43UpOK",
                                           "createdAt":  "2021-09-27T18:24:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "arrowd",
                                           "body":  "Bumped into this problem when tried to run `dotnet new` under FreeBSD jail. Indeed, it fails due to `mlock(2)` returning `EPERM`, because jails aren\u0027t allowed to lock pages by default.",
                                           "updatedAt":  "2021-09-27T18:24:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc48i198",
                                           "createdAt":  "2022-01-18T19:33:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODoHi_A==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "cryptix",
                                                                               "createdAt":  "2022-01-27T08:06:39Z"
                                                                           },
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "andoriyu",
                                                                               "createdAt":  "2022-02-02T21:27:40Z"
                                                                           },
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "pjbates",
                                                                               "createdAt":  "2022-03-02T10:51:34Z"
                                                                           },
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "dekimsey",
                                                                               "createdAt":  "2022-03-09T01:36:03Z"
                                                                           },
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "zebrapurring",
                                                                               "createdAt":  "2022-04-19T19:23:51Z"
                                                                           },
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "yggdr",
                                                                               "createdAt":  "2022-05-16T07:26:38Z"
                                                                           },
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "egwynn",
                                                                               "createdAt":  "2022-07-01T21:10:44Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "amarshall",
                                                                               "createdAt":  "2022-07-11T13:28:04Z"
                                                                           },
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "feld",
                                                                               "createdAt":  "2022-09-18T01:54:33Z"
                                                                           },
                                                                           {
                                                                               "content":  "ROCKET",
                                                                               "user":  "akindle",
                                                                               "createdAt":  "2024-07-02T20:51:57Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  10
                                                         },
                                           "author":  "Zamana",
                                           "body":  "\u003e Bumped into this problem when tried to run `dotnet new` under FreeBSD jail. Indeed, it fails due to `mlock(2)` returning `EPERM`, because jails aren\u0027t allowed to lock pages by default.\r\n\r\nThis can be solved by setting allow_mlock in the jail:\r\n\r\n`iocage set allow_mlock=1 \u003cjail name\u003e`",
                                           "updatedAt":  "2022-01-18T19:33:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6DDFL1",
                                           "createdAt":  "2024-06-30T17:05:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gwr",
                                           "body":  "Looking at what Apple did for MacOS offers some interesting ideas.\r\nOn many OS implementations, it may be sufficient to walk all threads in the process (except the caller) and use some (yet to be determined) mechanism to force all those threads to flush state.\r\nI\u0027m not sure how to do that, but walking all threads happens some places in the private implementations already (eg. on fork).\r\n",
                                           "updatedAt":  "2024-06-30T17:05:50Z"
                                       }
                                   ],
                         "totalCount":  16
                     },
        "title":  "Failed to create CoreCLR, HRESULT: 0x8007FF02",
        "labels":  [
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/47256",
        "createdAt":  "2021-01-21T02:33:39Z",
        "number":  47256,
        "author":  "snikeguo",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-03T16:38:12Z",
        "body":  "How to port to a new CPU platform?\r\nI want to port coreclr to MCU platform, such as  NXP I.mx.rt  series /  ST  Stm32h7 series (arm cortex-m7, 600 + MHz, thumb2 instruction , chip contains 1MB SRAM, 4MB NOR Flash), MCU can access external SDRAM, nor flash. and it can run programs directly in NOR flash. (by the way, 64MB SDRAM is about $0.7.)\r\nSo I am reading the PAL source code of coreclr, and I have encountered many problems that API functions cannot be transplanted, such as:\r\n```\r\n1.PALAPI CreateThread(\r\nIN LPSECURITY_ ATTRIBUTES lpThreadAttributes,\r\nIN DWORD dwStackSize,\r\nIN LPTHREAD_ START_ ROUTINE lpStartAddress,\r\nIN LPVOID lpParameter,\r\nIN DWORD dwCreationFlags,\r\nOUT LPDWORD lpThreadId)；\r\n```\r\nI think you should have forked the CLR code of. Net framework to make the dotnet project development faster. Similar to these “  LPSECURITY_ ATTRIBUTES lpThreadAttributes” parameters bring great difficulties to porting. For FreeRTOS, the creation thread has the following parameters:\r\n```\r\nBaseType_ t xTaskCreate(\r\nTaskFunction_ tp vTaskCode,//entry\r\nconst char * constpcName,//thread name\r\nunsigned short usStackDepth,//stack size\r\nvoid *pvParameters,//thread arg\r\nUBaseType_ t uxPriority,//priority\r\nTaskHandle_ t *pvCreatedTask\r\n)；\r\n```\r\n2.\r\n```\r\nPALAPI\r\nMessageBoxW(\r\nIN LPVOID hWnd,  // NOTE: diff from winuser.h\r\nIN LPCWSTR lpText,\r\nIN LPCWSTR lpCaption,\r\nIN UINT uType);\r\n```\r\nBecause there is no GUI\r\n### I think you should make a migration Manual of minimum coreclr to support JIT, GC and thread.\r\n3. Why don\u0027t I choose nanoframework?\r\nBecause it\u0027s too slow. Nanoframework is interpreted and executed without JIT. But SDRAM is big enough, MCU can use JIT completely.\r\n4.ReadyToRun(R2R) For MCU?\r\ninput： ilcode、HelloWorld Image Offset\r\nout put:(HelloWorld NativeIamge+ILCode).hex\r\n```\r\nHelloWorld IL code--------------------\u003e |         |\t\r\n                                        |  R2R.exe | -------\u003e(HelloWorld NativeIamge+ILCode).hex\r\nHelloWorld Image Offset ---------------\u003e|          |\r\n```\r\nthen download to mcu:\r\n```\r\nnor flash:\r\n  8000000 -------------------------------80010000---------\r\n  NativeDriver+CoreClr   |\talign \t |   HelloWorld NativeIamge+ILCode\r\n  ```\r\nIn this way, MCU directly runs HelloWorld native image in NOR flash",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOLbKFFw==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NDE5MTgwOQ==",
                                           "createdAt":  "2021-01-21T02:33:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-01-21T02:33:42Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NDIxNTAzNA==",
                                           "createdAt":  "2021-01-21T03:43:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "@davidwrighton helped with writing a rough overview of what needs to be done to bring support https://github.com/dotnet/runtime/blob/master/docs/design/coreclr/botr/guide-for-porting.md We know to some extent the PAL was more of a \"make system API look like windows\" more than \"here is a base functionality needed to support different OS\u0027s\", and there\u0027s been conversations of what can be done around that. For example, what used to be CoreRT did more of a layer of functionality. The PAL in coreclr comes from a lot of history and different projects - and while not ideal and a bit organic in that sense - it works pretty well for most cases. A lot of these emulations can be made work pretty well, as seen with all the Linux distros that have been supported under it. As for Native AOT as you point out, it\u0027s something that has been investigated and continues to be - we consider it part of the form factors as described  in [.NET Runtime Form Factors](https://github.com/dotnet/designs/blob/main/accepted/2020/form-factors.md#ahead-of-time-aot-compilation), and there\u0027s still some active work in ways to provide better experiences in that area. Maybe @janvorli also has some tips for the PAL layer for such an OS?",
                                           "updatedAt":  "2021-01-21T03:43:58Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NDQxMTI4MA==",
                                           "createdAt":  "2021-01-21T06:24:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "snikeguo",
                                           "body":  "https://docs.microsoft.com/en-us/cpp/build/overview-of-arm-abi-conventions?view=msvc-160\r\n### The instruction set for Windows on ARM is strictly limited to Thumb-2 \r\nIt seems that coreclr has completed the JIT compiler of thumb-2 instruction set?\r\nIf so, does it mean that I only need to port PAL layer code?\r\n\r\n\r\nCan the coreclr team optimize the PAL layer code architecture to make coreclr more portable?\r\nsuch as:\r\n```\r\nHANDLE\r\nPALAPI\r\nCreateFileW(\r\n        IN LPCWSTR lpFileName,\r\n        IN DWORD dwDesiredAccess,\r\n        IN DWORD dwShareMode,\r\n        IN LPSECURITY_ATTRIBUTES lpSecurityAttributes,\r\n        IN DWORD dwCreationDisposition,\r\n        IN DWORD dwFlagsAndAttributes,\r\n        IN HANDLE hTemplateFile);\r\n```\r\nSome projects have no file system. only RTOS（only thread, queue, semaphore, mutex, task notification）\r\nSo I think PAL layer code architecture needs ：1. highly modular,2. portable 3.configurable .\r\n\r\n",
                                           "updatedAt":  "2021-01-21T06:25:53Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NDQxNjczNg==",
                                           "createdAt":  "2021-01-21T06:36:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "Yes, CoreCLR is thumb aware. A lot of the ARMv7 sfp support is mostly best try, and might have some hidden bugs. It\u0027s unlikely the PAL will change any time soon. That would be a pretty large undertaking. The PAL would still have file api\u0027s, other with things like System.File.IO would make no sense. What you are asking is a bit more extensive - basically for such OS\u0027s a lot  of API\u0027s in the .NET surface would need to be marked as disabled, given the platform wouldn\u0027t support them (or support them by creating an abstraction on top of memory or something). That\u0027s quite more than just a port.",
                                           "updatedAt":  "2021-01-21T06:36:28Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NDQyNDk0MA==",
                                           "createdAt":  "2021-01-21T06:52:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "snikeguo",
                                           "body":  "@hoyosjs  OK, I\u0027m looking forward to the new pal framework, otherwise I can only port the JVM to mcu, although I hate Java.\r\nAs for file operation, I think like rust language,the CORE only includes basic things, such as thread, collections, diagnostics, reflection... And STD includes file operation API.\r\nIn order to distinguish the API of core and STD, you can change the namespace of thread to Core.Threading.Thread , while the file operation is still in progress Std.Io (or System.Io )\r\nhahaha.I don\u0027t think Microsoft will do that...........\r\n\r\n\r\n",
                                           "updatedAt":  "2021-01-21T06:52:49Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NDQzMzIxNQ==",
                                           "createdAt":  "2021-01-21T07:09:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBdLBuQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "snikeguo",
                                                                               "createdAt":  "2021-01-21T07:24:44Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "Just to be clear, this PAL work is not planned for anytime soon as I am aware. And the \"core\"part that you say is a major rework of a lot of components. While it\u0027s great to hear there\u0027s interest for coreclr to be used in these scenarios, the team won\u0027t get to work on this in the foreseeable future in the current order of priorities. I was just trying to explain what it would entail to try to port to such architecture.",
                                           "updatedAt":  "2021-01-21T07:09:31Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NDQzOTI3MQ==",
                                           "createdAt":  "2021-01-21T07:24:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "snikeguo",
                                           "body":  "@hoyosjs  thank you very much for your answer",
                                           "updatedAt":  "2021-01-21T07:24:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDc2NjY3NDE5OQ==",
                                           "createdAt":  "2021-01-25T09:19:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "snikeguo",
                                           "body":  "I\u0027m going to try to read the PAL code... and try to port it.",
                                           "updatedAt":  "2021-01-25T09:20:46Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "How to port to a new CPU platform?",
        "labels":  [
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/53420",
        "createdAt":  "2021-05-28T10:57:31Z",
        "number":  53420,
        "author":  "ViktorHofer",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-20T22:00:32Z",
        "body":  "\u003c!-- Error message template  --\u003e\r\n## Error Message\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssues.md#how-to-fill-out-a-known-issue-error-section).\r\n\r\n\u003c!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. --\u003e\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": \"ReleaseMutex failed. WaitOne Id:\",\r\n  \"BuildRetry\": true,\r\n  \"ErrorPattern\": \"\",\r\n  \"ExcludeConsoleLog\": true\r\n}\r\n```\r\n\r\nExample error:\r\n```\r\n/__w/1/s/.packages/microsoft.net.compilers.toolset/3.10.0-4.21273.6/tasks/netcoreapp3.1/Microsoft.CSharp.Core.targets(71,5): error MSB3883: Unexpected exception:  [/__w/1/s/src/tasks/installer.tasks/installer.tasks.csproj]\r\n/__w/1/s/.packages/microsoft.net.compilers.toolset/3.10.0-4.21273.6/tasks/netcoreapp3.1/Microsoft.CSharp.Core.targets(71,5): error : One or more errors occurred. (ReleaseMutex failed. WaitOne Id: 14 Release Id: 14) [/__w/1/s/src/tasks/installer.tasks/installer.tasks.csproj]\r\n```\r\n\r\nBuild: https://dev.azure.com/dnceng/public/_build/results?buildId=1161146\u0026view=logs\u0026j=1a1e7658-955a-5bfe-8410-74fa4a1a1fbf\u0026t=9528cbd6-a8dd-5006-9c48-38938c12a3af\r\n\r\nConfiguration: `CoreCLR Product Build Linux arm64 release`\r\n\r\ncc @jkotas @jaredpar @stephentoub\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\u003c!-- Known issue validation start --\u003e\r\n ### Known issue validation\r\n**Build: :mag_right:** \r\n**Result validation: :warning:** Provided build not found. Provide a valid build in the \"**Build: :mag_right:**\" line.\r\n**Validation performed at:** 9/15/2023 5:21:46 PM UTC\r\n\u003c!-- Known issue validation end --\u003e\r\n\u003c!--Known issue error report start --\u003e\r\n\r\n### Report\r\n|Build|Definition|Step Name|Console log|Pull Request|\r\n|---|---|---|---|---|\r\n|[1152975](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1152975)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1152975/logs/286)||\r\n|[1150230](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1150230)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1150230/logs/2671)|dotnet/runtime#119791|\r\n|[1149986](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1149986)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1149986/logs/351)|dotnet/runtime#119778|\r\n|[1148476](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1148476)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1148476/logs/417)|dotnet/runtime#119717|\r\n|[1147783](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147783)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1147783/logs/518)||\r\n|[1147540](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147540)|dotnet/runtime|Build|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1147540/logs/2188)||\r\n|[1147467](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1147467)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1147467/logs/62)||\r\n|[1140530](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1140530)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1140530/logs/840)|dotnet/runtime#119376|\r\n|[1139191](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1139191)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1139191/logs/830)|dotnet/runtime#119322|\r\n|[1137429](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1137429)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1137429/logs/539)|dotnet/runtime#115268|\r\n|[1136635](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136635)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1136635/logs/778)|dotnet/runtime#119253|\r\n|[1136563](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1136563)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1136563/logs/1005)||\r\n|[1135302](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1135302)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1135302/logs/942)|dotnet/runtime#118371|\r\n|[1134399](https://dev.azure.com/dnceng-public/public/_build/results?buildId=1134399)|dotnet/runtime|Build product|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/1134399/logs/267)|dotnet/runtime#119189|\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|6|14|\r\n\u003c!--Known issue error report end --\u003e",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOxXoI4Q==",
                         "nodes":  [
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1MDMzNTYyNw==",
                                           "createdAt":  "2021-05-28T10:57:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-05-28T10:57:33Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1MDM5NjUxMA==",
                                           "createdAt":  "2021-05-28T12:50:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "Is the exception that it failed with written in some log?",
                                           "updatedAt":  "2021-05-28T12:50:55Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1MDQ5Nzg1Mg==",
                                           "createdAt":  "2021-05-28T15:27:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @cston\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n```\r\n/__w/1/s/.packages/microsoft.net.compilers.toolset/3.10.0-4.21273.6/tasks/netcoreapp3.1/Microsoft.CSharp.Core.targets(71,5): error MSB3883: Unexpected exception:  [/__w/1/s/src/tasks/installer.tasks/installer.tasks.csproj]\r\n/__w/1/s/.packages/microsoft.net.compilers.toolset/3.10.0-4.21273.6/tasks/netcoreapp3.1/Microsoft.CSharp.Core.targets(71,5): error : One or more errors occurred. (ReleaseMutex failed. WaitOne Id: 14 Release Id: 14) [/__w/1/s/src/tasks/installer.tasks/installer.tasks.csproj]\r\n```\r\n\r\nBuild: https://dev.azure.com/dnceng/public/_build/results?buildId=1161146\u0026view=logs\u0026j=1a1e7658-955a-5bfe-8410-74fa4a1a1fbf\u0026t=9528cbd6-a8dd-5006-9c48-38938c12a3af\r\n\r\nConfiguration: `CoreCLR Product Build Linux arm64 release`\r\n\r\ncc @jkotas @jaredpar @stephentoub \n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eViktorHofer\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-Microsoft.CSharp`, `bug`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e6.0.0\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2021-05-28T15:27:40Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1MDUxMDg2Ng==",
                                           "createdAt":  "2021-05-28T15:48:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "Doesn\u0027t appear to be, this is all we have in the binlog https://artprodcus3.artifacts.visualstudio.com/Ab55de4ed-4b5a-4215-a8e4-0a0a5f71e7d8/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_apis/artifact/cGlwZWxpbmVhcnRpZmFjdDovL2RuY2VuZy9wcm9qZWN0SWQvOWVlNmQ0NzgtZDI4OC00N2Y3LWFhY2MtZjZlNmQwODJhZTZkL2J1aWxkSWQvMTE2MTE0Ni9hcnRpZmFjdE5hbWUvQnVpbGRMb2dzX0NvcmVDTFJfTGludXhfYXJtNjRfcmVsZWFzZQ2/content?format=file\u0026subPath=%2FRelease%2FBuild.binlog\r\n\r\nEssentially the same two lines Viktor shared.",
                                           "updatedAt":  "2021-05-28T15:48:44Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1MDY1Mjc1Mg==",
                                           "createdAt":  "2021-05-28T20:24:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "hoyosjs",
                                           "body":  "So far I can only find that one instance: https://runfo.azurewebsites.net/search/timelines/?q=started%3A%7E7+definition%3Aruntime+message%3A%22%5EReleaseMutex+failed.%22",
                                           "updatedAt":  "2021-05-28T20:24:40Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1MTYzMTA5Mw==",
                                           "createdAt":  "2021-05-31T18:37:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jaredpar",
                                           "body":  "That crash is coming from this line\r\n\r\nhttps://sourceroslyn.io/#Microsoft.Build.Tasks.CodeAnalysis/BuildServerConnection.cs,239\r\n\r\nWhen communicating between MSBuild nodes and the Compiler server we use a `Mutex` as a part of the initial handshake. The code here is crashing because when we release the `Mutex` via `Dispose` we\u0027re getting an `ApplicationException`. \r\n\r\nOur code considers this fatal because the docs say that `ApplicationException` will only be thrown when the thread calling `Dispose` does not own the `Mutex`. Basically coding error on our part that is significant. That is also why we log the thread IDs in the message here. You\u0027ll notice though in this case that the thread IDs are the same though which means the same thread both opened and released the `Mutex` which should be safe (based on our understanding). \r\n\r\nWhat other circumstances can cause an `ApplicationException` to happen here? \r\n\r\n@RikkiGibson, @chsienki, @cston \r\n ",
                                           "updatedAt":  "2021-05-31T18:37:24Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1MTY0MzE1MA==",
                                           "createdAt":  "2021-05-31T19:16:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "cston",
                                           "body":  "\u003e in this case that the thread IDs are the same though which means the same thread both opened and released the `Mutex` which should be safe\r\n\r\nCould the `Mutex` have been disposed on another thread?",
                                           "updatedAt":  "2021-05-31T19:16:01Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1MTc4Mjk2Ng==",
                                           "createdAt":  "2021-06-01T03:44:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jaredpar",
                                           "body":  "In our case unlikely. This `Mutex` instance is created and managed on a per-thread basis. It\u0027s a local that isn\u0027t shared amongst threads and the message confirms that there isn\u0027t any tricky `await` code involved that causes us to inadvertently switch threads. \r\n\r\nThe one issue to keep in mind is that we have an abstraction over `Mutex` here to deal with the difference implementation between the server on the Mono and .NET runtime. Hence the `Dispose` call is really a wrapper over:\r\n\r\n```c#\r\n        public void Dispose()\r\n        {\r\n            if (IsDisposed)\r\n                return;\r\n            IsDisposed = true;\r\n \r\n            try\r\n            {\r\n                if (IsLocked)\r\n                    Mutex.ReleaseMutex();\r\n            }\r\n            finally\r\n            {\r\n                Mutex.Dispose();\r\n                IsLocked = false;\r\n            }\r\n        }\r\n```\r\n\r\nOne possibility is we are incorrectly setting `IsLocked` which would lead to this exception being thrown. ",
                                           "updatedAt":  "2021-06-01T03:44:39Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1MzIzMTY2Nw==",
                                           "createdAt":  "2021-06-02T17:13:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "Failed again in #53590 . I think it is most likely Linux arm64 specific bug in CoreCLR PAL.",
                                           "updatedAt":  "2021-06-02T17:13:45Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg1MzIzMzEzNg==",
                                           "createdAt":  "2021-06-02T17:15:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "Current runfo query shows a hit on x64 too, so it is not arm64 specific.",
                                           "updatedAt":  "2021-06-02T17:15:58Z"
                                       },
                                       {
                                           "id":  "MDEyOklzc3VlQ29tbWVudDg2ODc5NDIyMw==",
                                           "createdAt":  "2021-06-25T19:43:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "Again, but in Mono Android Arm64 release build, using 3.1.\r\n\r\n\r\n```\r\n2021-06-25T16:42:48.0342786Z  /__w/1/s/build.sh -ci -arch x64 -os Android -s mono+libs+host+packs+mono.mscordbi -c Release /p:OfficialBuildId=20210625.7 /p:CrossBuild=false  \r\n2021-06-25T16:42:48.0343494Z ========================== Starting Command Output ===========================\r\n2021-06-25T16:42:48.0364929Z [command]/bin/bash --noprofile --norc /__w/_temp/455af3b1-60d8-49d1-88ab-abbd6629e02b.sh\r\n2021-06-25T16:42:48.0702381Z __DistroRid: android-x64\r\n2021-06-25T16:42:48.2260529Z /__w/1/s/.dotnet/sdk/6.0.100-preview.4.21255.9/MSBuild.dll /nologo -logger:/__w/1/s/.packages/microsoft.dotnet.arcade.sdk/6.0.0-beta.21311.3/tools/netcoreapp3.1/Microsoft.DotNet.ArcadeLogging.dll -maxcpucount /m -verbosity:m /v:minimal /bl:/__w/1/s/artifacts/log/Release/Build.binlog /clp:Summary /nr:false /p:TreatWarningsAsErrors=true /p:ContinuousIntegrationBuild=true /p:Configuration=Release /p:RepoRoot=/__w/1/s/ /p:Restore=true /p:Build=true /p:Rebuild=false /p:Test=false /p:Pack=false /p:IntegrationTest=false /p:PerformanceTest=false /p:Sign=false /p:Publish=false /p:TargetOS=Android /p:Subset=mono+libs+host+packs+mono.mscordbi /p:TargetArchitecture=x64 /p:BuildArchitecture=x64 /p:CMakeArgs= /p:OfficialBuildId=20210625.7 /p:CrossBuild=false /warnaserror /__w/1/s/.packages/microsoft.dotnet.arcade.sdk/6.0.0-beta.21311.3/tools/Build.proj\r\n...\r\n2021-06-25T16:45:35.4955064Z /__w/1/s/.packages/microsoft.net.compilers.toolset/3.10.0-4.21273.6/tasks/netcoreapp3.1/Microsoft.CSharp.Core.targets(71,5): error MSB3883: Unexpected exception:  [/__w/1/s/src/tasks/Crossgen2Tasks/Crossgen2Tasks.csproj]\r\n2021-06-25T16:45:35.5037748Z ##[error].packages/microsoft.net.compilers.toolset/3.10.0-4.21273.6/tasks/netcoreapp3.1/Microsoft.CSharp.Core.targets(71,5): error MSB3883: (NETCORE_ENGINEERING_TELEMETRY=Build) Unexpected exception: \r\n2021-06-25T16:45:35.5051214Z /__w/1/s/.packages/microsoft.net.compilers.toolset/3.10.0-4.21273.6/tasks/netcoreapp3.1/Microsoft.CSharp.Core.targets(71,5): error : One or more errors occurred. (ReleaseMutex failed. WaitOne Id: 14 Release Id: 14) [/__w/1/s/src/tasks/Crossgen2Tasks/Crossgen2Tasks.csproj]\r\n2021-06-25T16:45:35.5056497Z ##[error].packages/microsoft.net.compilers.toolset/3.10.0-4.21273.6/tasks/netcoreapp3.1/Microsoft.CSharp.Core.targets(71,5): error : (NETCORE_ENGINEERING_TELEMETRY=Build) One or more errors occurred. (ReleaseMutex failed. WaitOne Id: 14 Release Id: 14)\r\n2021-06-25T16:45:35.5059398Z /__w/1/s/.packages/microsoft.net.compilers.toolset/3.10.0-4.21273.6/tasks/netcoreapp3.1/Microsoft.CSharp.Core.targets(71,5): error MSB3883: Unexpected exception:  [/__w/1/s/src/tasks/AotCompilerTask/MonoAOTCompiler.csproj]\r\n2021-06-25T16:45:35.5063602Z ##[error].packages/microsoft.net.compilers.toolset/3.10.0-4.21273.6/tasks/netcoreapp3.1/Microsoft.CSharp.Core.targets(71,5): error MSB3883: (NETCORE_ENGINEERING_TELEMETRY=Build) Unexpected exception: \r\n2021-06-25T16:45:35.5089855Z /__w/1/s/.packages/microsoft.net.compilers.toolset/3.10.0-4.21273.6/tasks/netcoreapp3.1/Microsoft.CSharp.Core.targets(71,5): error : One or more errors occurred. (ReleaseMutex failed. WaitOne Id: 14 Release Id: 14) [/__w/1/s/src/tasks/AotCompilerTask/MonoAOTCompiler.csproj]\r\n2021-06-25T16:45:35.5094289Z ##[error].packages/microsoft.net.compilers.toolset/3.10.0-4.21273.6/tasks/netcoreapp3.1/Microsoft.CSharp.Core.targets(71,5): error : (NETCORE_ENGINEERING_TELEMETRY=Build) One or more errors occurred. (ReleaseMutex failed. WaitOne Id: 14 Release Id: 14)\r\n```",
                                           "updatedAt":  "2021-06-25T19:43:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41AsEm",
                                           "createdAt":  "2021-07-29T18:40:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@jaredpar I would like to look into this issue - is there a reasonable way to repro it locally? ",
                                           "updatedAt":  "2021-07-29T18:40:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41FRR2",
                                           "createdAt":  "2021-08-01T19:31:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jaredpar",
                                           "body":  "I haven\u0027t been able to reproduce this locally. It only shows up sporadically in customer / CI reports. ",
                                           "updatedAt":  "2021-08-01T19:31:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc41yIio",
                                           "createdAt":  "2021-08-20T00:12:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mangod9",
                                           "body":  "I am moving this to 7 since its not actionable at the moment without a repro. We can move it back if there is one available ",
                                           "updatedAt":  "2021-08-20T00:12:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46Sy-l",
                                           "createdAt":  "2021-11-24T15:54:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Madajevas",
                                           "body":  "+1. This happens quite often when building multiple containers with docker compose (each using mcr.microsoft.com/dotnet/sdk:5.0.403-alpine3.14-amd64). Buildkit enabled.",
                                           "updatedAt":  "2021-11-24T15:54:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46S2iV",
                                           "createdAt":  "2021-11-24T16:10:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mangod9",
                                           "body":  "Hey @Madajevas, do you have any repro steps or a docker file you could share? ",
                                           "updatedAt":  "2021-11-24T16:10:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46S3aJ",
                                           "createdAt":  "2021-11-24T16:14:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Madajevas",
                                           "body":  "Unfortunately what I have cannot be shared. Will look which containers fails most often and maybe it will be possible to create some minimal repo without corporate code",
                                           "updatedAt":  "2021-11-24T16:14:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46S3v7",
                                           "createdAt":  "2021-11-24T16:16:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mangod9",
                                           "body":  "ok thanks, also would be curious to know if it repros with 6.0 as well?",
                                           "updatedAt":  "2021-11-24T16:16:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46TOrz",
                                           "createdAt":  "2021-11-24T18:18:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Madajevas",
                                           "body":  "Not using 6.0 right now. Not planning to switch until Q1.\r\nJust a wild idea, haven\u0027t analyzed code and I\u0027m probably wrong. Could this mutex be shared then docker builds multiple images in parallel and due to some race condition one build disposes mutex and then another one tries to do the same and fails?\r\nNot sure if we experienced this on windows but CentOS 7 build server crashes at leas once a day if build happens multiple times. Nothing of the sort if single image is being built.\r\nSince this happens in docker build no message of inner (actual) exception is visible.",
                                           "updatedAt":  "2021-11-24T18:18:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc46hToy",
                                           "createdAt":  "2021-11-29T16:39:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jaredpar",
                                           "body":  "\u003e  Could this mutex be shared then docker builds multiple images in parallel and due to some race condition one build disposes mutex and then another one tries to do the same and fails?\r\n\r\nFrom the perspective of the `Mutex` API that should not be a problem. The only issue there is that we make sure that we do the create / dispose from the same thread.  It\u0027s possible that this is rubbing up against an implementation detail of `Mutex` though. ",
                                           "updatedAt":  "2021-11-29T16:39:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc47HvMg",
                                           "createdAt":  "2021-12-12T11:53:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mikeymikeymikeymikey",
                                           "body":  "This happens to us every once in a while in our CI.\r\n.NET SDK 6.0.100",
                                           "updatedAt":  "2021-12-12T11:53:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc47IHT4",
                                           "createdAt":  "2021-12-12T22:30:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "danmoseley",
                                           "body":  "@kouvel may have thoughts",
                                           "updatedAt":  "2021-12-12T22:30:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc47ImpO",
                                           "createdAt":  "2021-12-13T04:58:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "Looks like this condition is failing: https://github.com/dotnet/runtime/blob/57bfe474518ab5b7cfe6bf7424a79ce3af9d6657/src/libraries/System.Private.CoreLib/src/System/Threading/WaitSubsystem.WaitableObject.Unix.cs#L713\r\nIf current thread was the owning thread, then the only other explanation is waitableobject was already signaled.",
                                           "updatedAt":  "2021-12-13T04:58:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc47M7_b",
                                           "createdAt":  "2021-12-14T07:47:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCGf4Ug==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2021-12-14T10:24:13Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "kouvel",
                                           "body":  "@am11 I don\u0027t think that would be it since that implementation does not support named mutexes.\r\n\r\nI didn\u0027t see anything obvious that would cause a `ReleaseMutex` to fail with `ApplicationException`. Another reason for throwing that exception is if the handle does not represent a mutex for some reason, though that would be unlikely.\r\n\r\nMaybe it would be useful to add some more info to the exception message, like maybe:\r\n- Whether the mutex was created, and whether the mutex was abandoned in `TryLock`\r\n- The handle value seen after creation and before release\r\n- Include the exception stack trace in the message\r\n\r\nNot sure it would help much but may at least rule something out.\r\n\r\nNoticed something else, though it probably wouldn\u0027t lead to this issue. [This line](https://sourceroslyn.io/#Microsoft.Build.Tasks.CodeAnalysis/BuildServerConnection.cs,774) should probably catch `AbandonedMutexException` and set `IsLocked` to true in that case, instead of catching it in the caller, otherwise `IsLocked` would remain false upon exception and the thread would abandon the mutex again.",
                                           "updatedAt":  "2021-12-14T07:49:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc47Nfhi",
                                           "createdAt":  "2021-12-14T10:23:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "\u003e to fail with `ApplicationException`\r\n\r\nDo we know where is this coming from? (if not WaitSubsystem.WaitableObject.Unix.cs#714)",
                                           "updatedAt":  "2021-12-14T10:23:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc47PWji",
                                           "createdAt":  "2021-12-14T18:53:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kouvel",
                                           "body":  "\u003e Do we know where is this coming from? (if not WaitSubsystem.WaitableObject.Unix.cs#714)\r\n\r\nIt\u0027s probably from here:\r\nhttps://github.com/dotnet/runtime/blob/dfbae37e91c4744822018dde10cbd414c661c0b8/src/libraries/System.Private.CoreLib/src/System/Threading/Mutex.Windows.cs#L92\r\n\r\nAfter getting an exception here:\r\nhttps://github.com/dotnet/runtime/blob/dfbae37e91c4744822018dde10cbd414c661c0b8/src/coreclr/pal/src/synchobj/mutex.cpp#L457",
                                           "updatedAt":  "2021-12-14T18:53:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc47Q3AT",
                                           "createdAt":  "2021-12-15T04:13:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "Hm, original report was for Linux arm64, so I was tracing Unix partials (which calls into the waitsubsystem).",
                                           "updatedAt":  "2021-12-15T04:14:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc47Q5bE",
                                           "createdAt":  "2021-12-15T04:37:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODBERxA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2023-07-18T17:38:43Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "kouvel",
                                           "body":  "`Mutex.Unix.cs` is only used with the `WaitSubsystem` implementation, on CoreCLR the Unix implementation (confusingly) uses `Mutex.Windows.cs`, the p/invoke goes into the PAL, which implements Windows-like APIs such as `ReleaseMutex`.",
                                           "updatedAt":  "2021-12-15T04:37:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5gfbmG",
                                           "createdAt":  "2023-07-03T16:34:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mangod9",
                                           "body":  "this is an old issue, is this something which needs to be looked at ?",
                                           "updatedAt":  "2023-07-03T16:34:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5hxyjq",
                                           "createdAt":  "2023-07-18T15:25:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kouvel",
                                           "body":  "Closing for now, as there haven\u0027t been recent reports and there isn\u0027t sufficient info available to diagnose the issue. Issue https://github.com/dotnet/runtime/issues/89090 covers adding more info about system call errors to named mutex exceptions.",
                                           "updatedAt":  "2023-07-18T15:25:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5mnZ79",
                                           "createdAt":  "2023-09-15T17:18:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ericstj",
                                           "body":  "I see that this was just hit on my validation build: https://dev.azure.com/dnceng-public/public/_build/results?buildId=407963\u0026view=logs\u0026j=1131d339-d842-59c0-dcc0-73e7a31acc11\u0026t=9c8d0f40-0c4c-53c5-f33c-9e8e40de8387\r\n\r\nAlso noticed that MSBuild is tracking this here: https://github.com/dotnet/msbuild/issues/7601",
                                           "updatedAt":  "2023-09-15T17:18:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ynOQf",
                                           "createdAt":  "2024-02-02T05:51:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Somfic",
                                           "body":  "Hey, this just hit on my ci/cd, (macos) https://github.com/Somfic/vla/actions/runs/7751958359/job/21140666679?pr=74",
                                           "updatedAt":  "2024-02-02T05:51:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ys0fp",
                                           "createdAt":  "2024-02-02T17:26:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jaredpar",
                                           "body":  "From @Somfic log\r\n\r\n\u003e  ReleaseMutex failed. WaitOne Id: 16 Release Id: 16 \r\n\r\nConfirms that the calls are indeed happening on the same thread id. \r\n",
                                           "updatedAt":  "2024-02-02T17:26:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc55WGb_",
                                           "createdAt":  "2024-04-04T00:12:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AaronRobinsonMSFT",
                                           "body":  "I\u0027m seeing this while building on my macOS M2.",
                                           "updatedAt":  "2024-04-04T00:12:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc55XWqI",
                                           "createdAt":  "2024-04-04T04:25:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kouvel",
                                           "body":  "\u003e I\u0027m seeing this while building on my macOS M2.\r\n\r\nThere should be better diagnostic info in .NET 9 including info from system call errors (https://github.com/dotnet/runtime/pull/92603). Can you share more details about the failure?",
                                           "updatedAt":  "2024-04-04T04:25:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc55d9U9",
                                           "createdAt":  "2024-04-04T18:24:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AaronRobinsonMSFT",
                                           "body":  "@kouvel Not really. The error message was basically the same as this issue. Let me see if I can reproduce it.",
                                           "updatedAt":  "2024-04-04T18:24:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc55fmJ7",
                                           "createdAt":  "2024-04-04T22:03:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kouvel",
                                           "body":  "Ah right I forgot the extra info is not tracked for ReleaseMutex. I\u0027ll also try to repro.",
                                           "updatedAt":  "2024-04-04T22:03:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6KD-Jt",
                                           "createdAt":  "2024-08-28T21:40:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODwHDBw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jaredpar",
                                                                               "createdAt":  "2024-08-28T22:23:12Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "mangod9",
                                           "body":  "Assume this is a long standing issue and not specific to 9. @kouvel, can we move to 10? ",
                                           "updatedAt":  "2024-08-28T21:40:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6-I1BS",
                                           "createdAt":  "2025-08-14T22:03:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "AaronRobinsonMSFT",
                                           "body":  "@jkoritzinsky Aren\u0027t you rewriting this code?\n\nDistilling this thead.\n\nThis occurs on various platforms so not arm64 specific.\n\nThis exception is being thrown from within Roslyn\u0027s client/server code [here](https://github.com/dotnet/roslyn/blob/cdc829e937047f803f7663d4339d24b0a8e7fc39/src/Compilers/Shared/BuildServerConnection.cs#L259-L268).\n\nRoslyn has this check because the assumption is the exception should only be thrown if the waiting thread is not the same as the release thread - see https://github.com/dotnet/runtime/issues/53420#issuecomment-851631093.\n\nSME offered details - https://github.com/dotnet/runtime/issues/53420#issuecomment-993247195",
                                           "updatedAt":  "2025-08-14T22:07:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6-JHnY",
                                           "createdAt":  "2025-08-14T22:39:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEeYTeA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "AaronRobinsonMSFT",
                                                                               "createdAt":  "2025-08-14T23:02:46Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "I\u0027m porting it to managed for .NET 11, yeah. I\u0027m not sure why this would be failing given the Roslyn code specifically ensures it stays on the same thread.\n\nThere were a few weird corner cases with mutex abandonment that I had to work out as the specific cleanup semantics differ between the CoreCLR PAL and the wait subsystem. It\u0027s possible that there\u0027s an extremely rare race where a mutex is considered abandoned, but another thread acquires it before the abandoning thread registers the abandonment.\n\nI hit that with the new implementation and had to add a new mitigation that didn\u0027t exist in the prior implementation.\n\nIn any case, we should have better diagnostics on exactly what failed once we have the new implementation if this starts happening again.",
                                           "updatedAt":  "2025-08-14T22:39:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6-JWg9",
                                           "createdAt":  "2025-08-14T23:04:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEeYV9Q==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jaredpar",
                                                                               "createdAt":  "2025-08-14T23:12:47Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "AaronRobinsonMSFT",
                                           "body":  "Sounds good @jkoritzinsky.\n\nLet\u0027s revisit this issue once we\u0027ve merged https://github.com/dotnet/runtime/pull/117635 in .NET 11.",
                                           "updatedAt":  "2025-08-14T23:04:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7Fegjh",
                                           "createdAt":  "2025-09-19T17:30:42Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "Once https://github.com/dotnet/runtime/pull/117788 is merged in, CoreCLR will use the new implementation (and then after the next bootstrap after that, we should be able to get some better diagnostics).",
                                           "updatedAt":  "2025-09-19T17:30:42Z"
                                       }
                                   ],
                         "totalCount":  42
                     },
        "title":  "Compiler crashes when failing to release Mutex",
        "labels":  [
                       "bug",
                       "os-linux",
                       "area-PAL-coreclr",
                       "Known Build Error"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/55803",
        "createdAt":  "2021-07-16T08:24:23Z",
        "number":  55803,
        "author":  "jessicah",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOCy4SEA==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "rjzak",
                                            "createdAt":  "2022-08-17T16:52:45Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "rogihee",
                                            "createdAt":  "2022-12-24T12:59:03Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ghishadow",
                                            "createdAt":  "2023-09-27T09:46:29Z"
                                        }
                                    ],
                          "totalCount":  3
                      },
        "updatedAt":  "2024-11-06T15:34:25Z",
        "body":  "Opening an issue to track work on adding platform support for Haiku: \u003chttps://www.haiku-os.org/\u003e.\r\n\r\nAny tips on how cross-compiling should work would be appreciated. Am currently starting with \u0027./build.sh mono+libs -arch x64 -os haiku -c debug -cross`, and slowly adding Haiku targets to build and about to start some work on adding platform support in `src/libraries/Common/src/Interop`.\r\n\r\nThus far it hasn\u0027t required a functioning cross-compiler yet, have only just started.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOQyu43Q==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc40hx3K",
                                           "createdAt":  "2021-07-16T08:24:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2021-07-16T08:24:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40iU0B",
                                           "createdAt":  "2021-07-16T12:33:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "En3Tho",
                                           "body":  "What are benefits of having Haiku as an os target vs other os\u0027es?",
                                           "updatedAt":  "2021-07-16T12:33:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40iXXN",
                                           "createdAt":  "2021-07-16T12:50:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "Here is a quick list without debugging shell or cmake scripts / how-to-get-there steps (if you need to know something specific, i can comment it separately):\r\n1. add crossbuild toolchain support in: eng/common/cross/build-rootfs.sh\r\nand eng/common/cross/toolchain.cmake\r\n2. update eng/native/configure*.cmake files for compiler options under eng/native/ directory\r\n3. update groups with Calculate* labels in Directory.Build.props file at the root of this repo\r\n4. for mono, update src/mono/mono.proj, src/mono/CMakeLists.txt and src/mono/Directory.Build.props files\r\n\r\nThen run `eng/common/cross/build-rootfs haiku x64` to build the rootfs enviornment and `ROOTFS_DIR=$(pwd)/.tools/x64 ./build.sh -cross -arch x64 -os haiku` to get started with code-only changes. From time to time, you may need to update local configurations of projects being ported, but the aforementioned central configuration take care of most of the wiring.\r\n\r\nLater on if you want to make a persistent environment, you can get a docker tag from https://github.com/dotnet/dotnet-buildtools-prereqs-docker, with rootfs at a fixed location: `/crossrootfs/x64`. We did this step for illumos/SmartOS very early to make development environment stateless and build recipe sharable with other community members.",
                                           "updatedAt":  "2021-07-16T12:50:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40j-zN",
                                           "createdAt":  "2021-07-17T07:15:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jessicah",
                                           "body":  "Thanks @am11, is `mono+libs` the right target to start with? Also, what\u0027s the difference between mono in this repo, and https://github.com/mono/mono?",
                                           "updatedAt":  "2021-07-17T07:15:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40kBOI",
                                           "createdAt":  "2021-07-17T08:33:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "\u003e is `mono+libs` the right target to start with? \r\n\r\nYes, imo, after the common configurations are done, focusing first on mono and then libraries would be the fastest way to get .NET 6 working on Haiku. Going by `git grep -i haiku`, you can already tell there is some related code from the initial mono port in dotnet/runtime repo.\r\n\r\nLater you can look into corehost (`dontet(1)`) to make the build binaries usable with .NET SDK etc. It would also make it much easier to then port coreclr runtime.\r\n\r\n\u003e  what\u0027s the difference between mono in this repo, and https://github.com/mono/mono?\r\n\r\nmono/mono (OSS) aims to be compatible with .NET Framework 4.7 (closed source).\r\nMono subset (src/mono) in this repository started off as a port of same mono runtime (minus the legacy components of .NET Framework 4.7, which are not supported in .NET 5) and implements common runtime interface as src/coreclr. The initial focus was to support various targets including, but not limited to, Xamrian, Mobile and WebAssembly that coreclr does not support today.\r\n\r\nThe core .NET libraries in this repo are tested against both (coreclr and mono) runtime flavors. The [goal](https://devblogs.microsoft.com/dotnet/introducing-net-5/) is to make both runtimes drop-in replacements of each other, and they can (and do) overlap when it comes to platform targets. Officially the focus for runtime/src/mono so far has been on mobile-like targets, but mono RT built from this repo runs desktop apps just fine (to do that it currently requires two manual `cp` steps which hopefully may no longer be needed in the future 😁).",
                                           "updatedAt":  "2021-07-17T08:33:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40mECS",
                                           "createdAt":  "2021-07-19T09:22:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jessicah",
                                           "body":  "@am11 Running into a weird issue with configuration in `src/libraries/Native`:\r\n\r\nhttps://github.com/jessicah/dotnet-runtime/blob/haiku/src/libraries/Native/Unix/System.Globalization.Native/CMakeLists.txt#L22\r\n\r\n```\r\n  CMake Error at System.Globalization.Native/CMakeLists.txt:24 (message):\r\n    Cannot find utypes.h, try installing libicu-dev (or the appropriate package\r\n    for your platform)\r\n```\r\n\r\nIt feels like it\u0027s not searching the configured sysroot. Invoking `build.sh` as follows: `ROOTFS_DIR=/home/jessica/build/haiku-sysroot ./build.sh mono+libs -arch x64 -os haiku -c debug -cross --ninja`.\r\n\r\n```\r\njessica@homecloud:~/build/haiku-sysroot/boot/system/develop/headers$ find -name utypes.h\r\n./unicode/utypes.h\r\n```\r\n\r\nNot really sure what I\u0027m doing wrong. All the checks being run in `configure.cmake` appear to be invoking the Haiku cross-compiler correctly. Unfortunately I can\u0027t find a log that mentions the `utype.h` search. It\u0027s definitely for cross-compiling, as libicu-dev is installed on host Linux.\r\n\r\nLogs in `artifacts/obj/native/net6.0-Haiku-Debug-x64/CMakeFiles`: https://gist.github.com/jessicah/7f8693f773d7ddec8c51f2df15da0221\r\n\r\nAdditionally, if I comment out the search and just hard code them as succeeding, then in `configure.cmake`, the checks for `HAVE_UDAT_STANDALONE_SHORTER_WEEKDAYS` and `HAVE_SET_MAX_VARIABLE` both compile and pass, so the sysroot is configured correctly for compile/link, just the builtin CMake functions are not working correctly.",
                                           "updatedAt":  "2021-07-19T10:10:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40mNFz",
                                           "createdAt":  "2021-07-19T10:19:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "Could you try adding:\r\n\r\n```diff\r\n+++ eng/common/cross/toolchain.cmake\r\n--- eng/common/cross/toolchain.cmake\r\n\r\nelseif(CMAKE_SYSTEM_NAME STREQUAL \"Haiku\")\r\n    set(CMAKE_SYSROOT \"${CROSS_ROOTFS}\")\r\n+    include_directories(SYSTEM ${CROSS_ROOTFS}/boot/system/develop/headers)\r\n+    set(CMAKE_SYSTEM_PREFIX_PATH \"${CROSS_ROOTFS}\")\r\nelse()\r\n```\r\nto see if it gives clean result. I remember having similar issue with ICU on illumos, and tweaking toolchain.cmake helped. Your observation is spot on, the flags and definitions used by cmake introspection are different than those used for the actual compilation. IIRC, that include_directories sets it for both.",
                                           "updatedAt":  "2021-07-19T10:19:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40mqtL",
                                           "createdAt":  "2021-07-19T13:33:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "NattyNarwhal",
                                           "body":  "I did the PAL port and (attempt at) Mono runtime stuff in mono/mono; ping me if you need me.",
                                           "updatedAt":  "2021-07-19T13:33:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40oBZB",
                                           "createdAt":  "2021-07-19T22:37:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jessicah",
                                           "body":  "@am11 no luck, unfortunately :-/",
                                           "updatedAt":  "2021-07-19T22:37:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40oxQx",
                                           "createdAt":  "2021-07-20T06:13:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "I think it is ok to continue with a workaround at least for now. :)\r\n\u003e Additionally, if I comment out the search and just hard code them as succeeding, then in `configure.cmake`, the checks for `HAVE_UDAT_STANDALONE_SHORTER_WEEKDAYS` and `HAVE_SET_MAX_VARIABLE` both compile and pass, so the sysroot is configured correctly for compile/link, just the builtin CMake functions are not working correctly.\r\n\r\nbest place to do this hardcoding is `eng/native/tryrun.cmake` and set cache value. In case cmake tryrun is new to you, cmake invokes it basically before anything else (even cmake\u0027s own modules), which is why the custom way of platform detection (like `/HaikuConfig.h` in your case) is needed.\r\n\r\n* if the cmake check is based on static condition or existance of symbol or header, then we use `set_cache_value($VAR_NAME 0)` or `set_cache_value($VAR_NAME 1)`\r\n  * as you notice in that file that this is normally not needed. usually it\u0027s misconfiguration if static analysis of header files or libraries is giving undesired results.\r\n* if the cmake check is based on try_compile, compiling and running a piece of code to identify something (which is not possible in cross-compilation), then we append `_EXITCODE` to $VAR_NAME.",
                                           "updatedAt":  "2021-07-20T06:13:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40pFwk",
                                           "createdAt":  "2021-07-20T08:03:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBzKJyQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2021-07-20T10:29:39Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jessicah",
                                           "body":  "Hacked my way further, but running into an issue with `src/libraries/shims` that I can\u0027t piece together from the project/build files:\r\n\r\n```\r\n/home/jessica/source/rt2/src/libraries/shims/manual/System.forwards.cs(8,88): error CS0234: The type or namespace name \u0027ZLibException\u0027 does not exist in the namespace \u0027System.IO.Compression\u0027 (are you missing an assembly reference?) [/home/jessica/source/rt2/src/libraries/shims/manual/System.csproj]\r\n/home/jessica/source/rt2/src/libraries/shims/manual/System.forwards.cs(9,77): error CS0234: The type or namespace name \u0027CookieVariant\u0027 does not exist in the namespace \u0027System.Net\u0027 (are you missing an assembly reference?) [/home/jessica/source/rt2/src/libraries/shims/manual/System.csproj]\r\n/home/jessica/source/rt2/src/libraries/shims/manual/System.forwards.cs(10,77): error CS0234: The type or namespace name \u0027PathList\u0027 does not exist in the namespace \u0027System.Net\u0027 (are you missing an assembly reference?) [/home/jessica/source/rt2/src/libraries/shims/manual/System.csproj]\r\n```",
                                           "updatedAt":  "2021-07-20T08:03:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40pnDy",
                                           "createdAt":  "2021-07-20T11:38:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jessicah",
                                           "body":  "@am11 With https://github.com/jessicah/dotnet-runtime/commit/10e4e8bf41e375c24b0086809f9046540d978e70 it \"finishes\", but I\u0027m not sure what I have :p\r\n\r\nIt seems like the mono build is targeted for Linux, although the .so files not related to mono are linked against the Haiku libraries. I\u0027m guessing mono isn\u0027t configured to build for Haiku, and probably some other parts are like this too :-/\r\n\r\nI\u0027ll have a deeper look into `tryrun.cmake`, perhaps this is the cause of CMake\u0027s `find_path` and friends failing...",
                                           "updatedAt":  "2021-07-20T11:38:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40pquq",
                                           "createdAt":  "2021-07-20T12:04:58Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "For mono, it would require a patch like https://github.com/dotnet/runtime/commit/a47b8dca77fe6b5f9514cfced139b00a8243e5a1 (it used to be autoconf based, now mono build in this repo has been moved to cmake).\r\n\r\n\u003e `tryrun.cmake`\r\n\r\nusually i run the configure-only step natively on platform (like OpenIndiana for illumos) to collect all the expected configure values then run the same with cross toolchain on linux, the diff is what goes in the tryrun.cmake (minus a things which are optional, but it doesn\u0027t hurt to have the entire diff in).",
                                           "updatedAt":  "2021-07-20T12:04:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40rJQh",
                                           "createdAt":  "2021-07-20T21:38:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jessicah",
                                           "body":  "A lot of that patch looks like fixes for building Illumos on Illumos, as most of these are `HOST` variables.\r\n\r\nAnyway, I\u0027ve just noticed this in the build output (the `CMAKE` variables it outpus), that I didn\u0027t see previously:\r\n```\r\njessi@unbuntu:~/source/dotnet-runtime$ cat ../run\r\n#!/bin/bash\r\n\r\nROOTFS_DIR=~/build/haiku-sysroot ./build.sh mono+libs -arch x64 -os haiku -c debug -cross --ninja\r\n\r\njessi@unbuntu:~/source/dotnet-runtime$ ../run\r\n__DistroRid: haiku.r1-x64\r\n  Determining projects to restore...\r\n  Tool \u0027coverlet.console\u0027 (version \u00271.7.2\u0027) was restored. Available commands: coverlet\r\n  Tool \u0027dotnet-reportgenerator-globaltool\u0027 (version \u00274.5.8\u0027) was restored. Available commands: reportgenerator\r\n  Tool \u0027microsoft.dotnet.xharness.cli\u0027 (version \u00271.0.0-prerelease.21357.4\u0027) was restored. Available commands: xharness\r\n  Tool \u0027microsoft.visualstudio.slngen.tool\u0027 (version \u00275.0.5\u0027) was restored. Available commands: slngen\r\n\r\n  Restore was successful.\r\n  All projects are up-to-date for restore.\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  RuntimeConfigParser -\u003e /home/jessi/source/dotnet-runtime/artifacts/bin/RuntimeConfigParser/Debug/net6.0/RuntimeConfigParser.dll\r\n  JsonToItemsTaskFactory -\u003e /home/jessi/source/dotnet-runtime/artifacts/bin/JsonToItemsTaskFactory/Debug/net472/JsonToItemsTaskFactory.dll\r\n  RuntimeConfigParser -\u003e /home/jessi/source/dotnet-runtime/artifacts/bin/RuntimeConfigParser/Debug/net472/RuntimeConfigParser.dll\r\n  JsonToItemsTaskFactory -\u003e /home/jessi/source/dotnet-runtime/artifacts/bin/JsonToItemsTaskFactory/Debug/net6.0/JsonToItemsTaskFactory.dll\r\n  Microsoft.NET.Runtime.MonoTargets.Sdk -\u003e /home/jessi/source/dotnet-runtime/artifacts/packages/Debug/Shipping/Microsoft.NET.Runtime.MonoTargets.Sdk.6.0.0-dev.nupkg\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  The CMake command line is the same as the last run. Skipping running CMake configure.\r\n  Running \u0027TARGET_BUILD_ARCH=x64 cmake --build . --target install --config Debug\u0027 in \u0027/home/jessi/source/dotnet-runtime/artifacts/obj/mono/Haiku.x64.Debug/\u0027\r\n  [0/1] Re-running CMake...\r\n  CMAKE_SYSTEM_NAME=Linux\r\n  CMAKE_SYSTEM_VARIANT=\r\n  CMAKE_SYSTEM_PROCESSOR=x86_64\r\n  TARGET_ARCH=x86_64\r\n  CMAKE_CROSSCOMPILING=FALSE\r\n  -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE)\r\n  -- Configuring done\r\n  -- Generating done\r\n  -- Build files have been written to: /home/jessi/source/dotnet-runtime/artifacts/obj/mono/Haiku.x64.Debug\r\n  [0/1] Install the project...\r\n  -- Install configuration: \"Debug\"\r\n  Stripping debug symbols from /home/jessi/source/dotnet-runtime/artifacts/obj/mono/Haiku.x64.Debug/out/lib/libcoreclr.so\r\n  System.Private.CoreLib.Generators -\u003e /home/jessi/source/dotnet-runtime/artifacts/bin/System.Private.CoreLib.Generators/netstandard2.0-Debug/System.Private.CoreLib.Generators.dll\r\n  System.Private.CoreLib -\u003e /home/jessi/source/dotnet-runtime/artifacts/bin/mono/Haiku.x64.Debug/IL/System.Private.CoreLib.dll\r\n  /home/jessi/source/dotnet-runtime/src/libraries/Native/build-native.sh x64 Debug outconfig net6.0-Haiku-Debug-x64 -os Haiku ninja -cross\r\n```\r\n\r\nThat looks like I\u0027m missing something crucial, surely this should be compiling for the target, not the host?",
                                           "updatedAt":  "2021-07-20T21:39:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40rKEg",
                                           "createdAt":  "2021-07-20T21:46:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "\u003e A lot of that patch looks like fixes for building Illumos on Illumos, as most of these are `HOST` variables.\r\n\r\nYes, haiku would need a \"similar\" patch, so it gets CMAKE_SYSTEM_NAME=Haiku. Also, when rebuilding after making changes, I delete artifacts directory so cmake runs the configure again.\r\n\r\n\u003e   -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE)\r\n\r\ne.g. equivalent of https://github.com/dotnet/runtime/blob/a47b8dca77fe6b5f9514cfced139b00a8243e5a1/src/mono/mono.proj#L236 (path to pkgconfig in sysroot dir) will fix this error.",
                                           "updatedAt":  "2021-07-20T21:46:02Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40rKL-",
                                           "createdAt":  "2021-07-20T21:47:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jessicah",
                                           "body":  "Ah right, I forgot that happens, had been running `--clean` earlier, whoops, thanks for the reminder :)",
                                           "updatedAt":  "2021-07-20T21:47:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40rL-D",
                                           "createdAt":  "2021-07-20T22:03:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "Admittedly, `Host`, `Target` and `Build` are three confusing concepts. In MSVC world (coreclr, libraries and corehost), Host  in cross compilation is the machine we are executing compiler on and Target is the architecture of target machine. However, in autoconf world, `Host` is what MSVC refers to as `Target` and `Build` is what MSVC refers to as `Host`. `Target` in autoconf is a special case, where compiler itself is built on a different architecture than Host and Build and we are pointing to its destination triplet:\r\n\r\n*  https://www.gnu.org/software/autoconf/manual/autoconf-2.65/html_node/Specifying-Target-Triplets.html\r\n* https://stackoverflow.com/a/15901574\r\n\r\nIn other words, when mono (which was and still is primarily autoconfig-like) is talking about host of cross-compiler, it means target by normal logic. Therefore, I just follow the nearby logic. :)\r\n\r\nillumos and FreeBSD are the closest matches to Haiku, as both of them cross compile on amd64 for amd64.",
                                           "updatedAt":  "2021-07-20T22:03:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40rMXz",
                                           "createdAt":  "2021-07-20T22:06:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jessicah",
                                           "body":  "Ah okay. Well, it looks like it may have built the cross mono stuff.\r\n\r\nLog: https://gist.github.com/jessicah/647f1e8e033c96eb2a47ed3f526e47dd\r\n\r\nI guess I can try copying some stuff over to a Haiku install, and seeing what happens.\r\n\r\nWhat will be the next steps, assuming I can get something to run on Haiku?",
                                           "updatedAt":  "2021-07-20T22:06:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40rPDy",
                                           "createdAt":  "2021-07-20T22:31:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jessicah",
                                           "body":  "Okay, copied `artifacts` to my Haiku, and the `mono-sgen` binaries under `artifacts/obj/mono/Haiku.x64.Debug` run :)",
                                           "updatedAt":  "2021-07-20T22:31:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40rQiK",
                                           "createdAt":  "2021-07-20T22:49:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBzQweQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jessicah",
                                                                               "createdAt":  "2021-07-20T22:52:30Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "am11",
                                           "body":  "That was fast. Great progress! It took me way longer to get this far. 🤣\r\n\r\nOn Linux box, where you have cross compiled, you can run:\r\n\r\n```\r\n# if pwd is your dotnet-runtime directory\r\ncd ..\r\ndotnet-runtime/.dotnet new console -n helloworldapp\r\ncd hellowwoldapp\r\n../dotnet-runtime/.dotnet publish -c Release -o mypublishdir\r\n```\r\n\r\nthen edit: `mypublishdir/helloworldapp.runtimeconfig.json` and change version line to `\"version\": \"6.0.0-dev\"`.\r\n\r\nCopy mypublishdir to Haiku system and run `mono-sgen mypublishdir/helloworldapp.dll`.\r\n\r\nIt may emit a huge diagnostics and fail, but that\u0027s not the product we are interested in. We want `dotnet(1)` to work. :) \r\n\r\n---\r\n\r\nA few notes about the setup:\r\n\r\n* if we extract `function(locate_toolchain_exec exec var)` out of this if/elseif block: https://github.com/dotnet/runtime/blob/38477909eeb6296664cc184d461035b1774ea2df/eng/common/cross/toolchain.cmake#L94\r\n  to share and use the same pattern for Haiku, that will make it selfcontained in a way that compiler detection would look something like:\r\n  `  -- Check for working C compiler: /runtime/.tools/x64/bin/x86_64-haiku-gcc -- works`\r\n  instead of:\r\n  `  -- Check for working C compiler: /usr/bin/clang-10 -- works`\r\n  the benefit of using toolchain from the sysroot is that cmake will be using all tools (linker, loader, objcopy etc.) from same original toolchain, rather than mix and match, which usually is best to avoid.\r\n* that will likely fix the ICU hack as well as krb5 lookup issue.\r\n\r\n---\r\n\r\nNext step would be to port src/native/corehost, i.e. `./build.sh -s host+packs -os haiku -cross -c Release` which produces package tarballs under `/artifacts/packages`. I have only tried it with clr+mono+libs+host+packs, but not just mono+libs+host+packs alone.\r\n\r\nThe method I followed to test mono on amd64 was to copy `artifacts/packages/Release/Shipping/dotnet-runtime-6.0.0-dev-illumos-x64.tar.gz` tarball file and `artifacts/bin/mono/illumos.x64.Release/`  directory on OpenIndiana machine, extract .tar in `~/.dotnet` directory and then overwrite `libcoreclr.so` and `System.Private.CoreLib.dll` from mono to `~/.dotnet/shared/Microsoft.NETCore.App/6.0.0-dev/libcoreclr.so` and `.dotnet/shared/Microsoft.NETCore.App/6.0.0-dev/System.Private.CoreLib.dll` respectively, and then ran the published application with `~/.dotnet/dotnet helloworld.dll`.",
                                           "updatedAt":  "2021-07-20T22:49:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40rVz0",
                                           "createdAt":  "2021-07-20T23:46:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jessicah",
                                           "body":  "Hmm, running `mono-sgen` gives:\r\n\r\n`* Assertion at /home/jessi/source/dotnet-runtime/src/mono/mono/metadata/assembly.c:3087, condition \u0027corlib\u0027 not met`\r\n\r\nSeems like it doesn\u0027t know where to look for the dlls. Tried setting MONO_PATH to various values, but no dice.\r\n\r\nI\u0027ll look into using the `location_toolchain_exec` next, might help avoid installing symlinks in `/usr/bin`, since clang doesn\u0027t really know to look in non-standard locations with the current compile switches.",
                                           "updatedAt":  "2021-07-20T23:46:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40sgEP",
                                           "createdAt":  "2021-07-21T10:29:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jessicah",
                                           "body":  "Well, making heaps more progress on coreclr/corehost, but now the c++ compiler has decided it doesn\u0027t know what `size_t` is. My CMake craft isn\u0027t that good, so if you have any ideas, would be great :)\r\n\r\nLog: https://gist.github.com/jessicah/b7f48ab99909f4aaf2a8e11579a5c3b3",
                                           "updatedAt":  "2021-07-21T10:29:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40tLjE",
                                           "createdAt":  "2021-07-21T15:00:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "Error is coming from system header. Looks like string.h is missing or some macro definition in cmake which controls including string.h in system headers.\r\n\r\nI tried build-rootfs from haiku branch, but it is failing with:\r\n\r\n```\r\nChmod1 bin.linuxx86/jam \r\n...updated 33 target(s)...\r\nBuilding cross tools with 2 parallel jobs\r\nInvalid argument: `--sysroot\u0027\r\n```\r\n\r\ndoes haiku/configure require some patch to support --sysroot option?",
                                           "updatedAt":  "2021-07-21T15:00:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40uCOf",
                                           "createdAt":  "2021-07-21T20:37:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jessicah",
                                           "body":  "The patch is here: https://gist.github.com/jessicah/046dca21d4c3e10e8e358cff0978c166\r\n\r\nAnd additional packages to extract are here: https://haiku.nz/files/\r\n\r\nAlso need to edit \u003csysroot\u003e/boot/system/develop/headers/posix/unistd.h, and change `{ c }` to `{ c, 0 }` for `ioctl` macro.",
                                           "updatedAt":  "2021-07-21T20:40:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40uHLm",
                                           "createdAt":  "2021-07-21T21:12:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "Thanks. I applied this patch http://sprunge.us/D9SwK4 to your branch and got error during sysroot compilation. I am using ubuntu 20.04 vagrant box:\r\n\r\n```sh\r\n# sudo apt install -y git build-essential nasm ninja-build clang liblldb-dev cmake liblttng-ust-dev libicu-dev libssl-dev libkrb5-dev libnuma-dev libcups2-dev libgmp-dev libmpfr-dev libmpc-dev\r\n\r\n$ eng/common/cross/build-rootfs.sh haiku x64\r\n\r\n...\r\ngcc: error: /home/vagrant/dotnet-runtime/.tools/rootfs/x64/tmp/buildtools/binutils/ld/deffilep.c: No such file or directory\r\ngcc: fatal error: no input files\r\ncompilation terminated.\r\nmake[4]: *** [Makefile:2179: deffilep.o] Error 1\r\nmake[4]: *** Waiting for unfinished jobs....\r\nmake[5]: Leaving directory \u0027/home/vagrant/dotnet-runtime/.tools/rootfs/x64/generated/cross-tools-x86_64-build/binutils/ld\u0027\r\nmake[4]: Leaving directory \u0027/home/vagrant/dotnet-runtime/.tools/rootfs/x64/generated/cross-tools-x86_64-build/binutils/ld\u0027\r\nmake[3]: *** [Makefile:1782: all-recursive] Error 1\r\nmake[3]: Leaving directory \u0027/home/vagrant/dotnet-runtime/.tools/rootfs/x64/generated/cross-tools-x86_64-build/binutils/ld\u0027\r\nmake[2]: *** [Makefile:1057: all] Error 2\r\nmake[2]: Leaving directory \u0027/home/vagrant/dotnet-runtime/.tools/rootfs/x64/generated/cross-tools-x86_64-build/binutils/ld\u0027\r\nmake[1]: *** [Makefile:7137: all-ld] Error 2\r\nmake[1]: Leaving directory \u0027/home/vagrant/dotnet-runtime/.tools/rootfs/x64/generated/cross-tools-x86_64-build/binutils\u0027\r\nmake: *** [Makefile:849: all] Error 2\r\n```",
                                           "updatedAt":  "2021-07-21T21:12:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40uNhT",
                                           "createdAt":  "2021-07-21T22:04:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jessicah",
                                           "body":  "Can\u0027t say I\u0027ve ever seen a build error like that. These are the build requirements from the Haiku website:\r\n`sudo apt install git nasm autoconf automake texinfo flex bison gawk build-essential unzip wget zip less zlib1g-dev xorriso libtool gcc-multilib python3`\r\n\r\nAlso, I\u0027ve tracked down where the issue is, just don\u0027t quite understand what it\u0027s doing:\r\n\r\n1. `size_t` redefined to `DUMMY_size_t` in palinternal.h\r\n2. `size_t` is defined in pal_mstypes.h\r\n3. `size_t` is undefined later in palinternal.h\r\n\r\nhttps://github.com/dotnet/runtime/blob/main/src/coreclr/pal/src/include/pal/palinternal.h#L207\r\nhttps://github.com/dotnet/runtime/blob/main/src/coreclr/pal/inc/pal_mstypes.h#L561-L575\r\nhttps://github.com/dotnet/runtime/blob/main/src/coreclr/pal/src/include/pal/palinternal.h#L428\r\n\r\nI\u0027ve added a conditional to not undefine `size_t` at 3, but that ends up with this sort of output:\r\n```\r\n  In file included from /home/jessi/source/dotnet-runtime/src/coreclr/pal/src/include/pal/malloc.hpp:27,\r\n                   from /home/jessi/source/dotnet-runtime/src/coreclr/pal/src/cruntime/malloc.cpp:24:\r\n  /home/jessi/build/haiku-sysroot/generated/cross-tools-x86_64/x86_64-unknown-haiku/include/c++/8.3.0/new:120:31: error: declaration of \u0027operator new\u0027 as non-function\r\n   void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)\r\n                                 ^\r\n  In file included from /home/jessi/source/dotnet-runtime/src/coreclr/pal/src/include/pal/corunix.hpp:23,\r\n                   from /home/jessi/source/dotnet-runtime/src/coreclr/pal/src/cruntime/malloc.cpp:22:\r\n  /home/jessi/source/dotnet-runtime/src/coreclr/pal/src/include/pal/palinternal.h:207:16: error: \u0027DUMMY_size_t\u0027 is not a member of \u0027std\u0027\r\n   #define size_t DUMMY_size_t\r\n                  ^~~~~~~~~~~~\r\n  /home/jessi/source/dotnet-runtime/src/coreclr/pal/src/include/pal/palinternal.h:207:16: note: suggested alternative: \u0027size_t\u0027\r\n\r\n```\r\n\r\nSo the undefine kind of seems correct, or the definition is leaking into standard headers incorrectly. I\u0027m definitely lost in the cycle of includes at this point! Heh.",
                                           "updatedAt":  "2021-07-21T22:27:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40ui6k",
                                           "createdAt":  "2021-07-22T02:28:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jessicah",
                                           "body":  "After more searching into the weeds, it looks like the issue is that Haiku doesn\u0027t use `_SIZE_T_DEFINED`, but instead `__size_t__`. So will push a commit for that soon :)",
                                           "updatedAt":  "2021-07-22T02:28:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40up27",
                                           "createdAt":  "2021-07-22T04:15:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jessicah",
                                           "body":  "EDIT: patched `mcontext_t` to provide `cs`, will look at whether can be merged to Haiku in the near future.\r\n\r\nI\u0027m about as far as I can go now, without patching Haiku. Haiku doesn\u0027t provide the CS register as part of `mcontext_t`, as found in https://github.com/haiku/haiku/blob/master/headers/posix/arch/x86_64/signal.h\r\n\r\nHowever, it is defined in kernel land at https://github.com/haiku/haiku/blob/master/headers/private/kernel/arch/x86/64/iframe.h#L31 so could probably add it to `mcontext_t` easily enough.\r\n\r\nAlso unsure if https://github.com/jessicah/dotnet-runtime/blob/haiku/src/coreclr/pal/src/include/pal/context.h#L509 is the right definition, the rest seem correct comparing to other platforms.",
                                           "updatedAt":  "2021-07-22T10:18:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40vQx2",
                                           "createdAt":  "2021-07-22T10:19:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "Porting CoreCLR to a new Unix-y platform typically entails porting the [HP libunwind](https://github.com/libunwind/libunwind) to the platform as a first step, then the coreclr PAL (src/coreclr/pal) and making sure [PAL tests](https://github.com/dotnet/runtime/blob/57bfe474518ab5b7cfe6bf7424a79ce3af9d6657/docs/workflow/testing/coreclr/unix-test-instructions.md#pal-tests) are passing. The rest of the coreclr components (VM, JIT, tools) usually don\u0027t require lots of code changes if the ISA is supported (in Haiku\u0027s case x86_64 which is supported). However, it will require certain amount of debugging to make coreclr_initialize succeed (but that will come later).",
                                           "updatedAt":  "2021-07-22T10:19:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40vRRv",
                                           "createdAt":  "2021-07-22T10:23:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jessicah",
                                           "body":  "Yes, I\u0027ve been adding code to libunwind, https://github.com/jessicah/dotnet-runtime/commit/520a875d44680955fc30c834f3acf34e2bb1eada\r\n\r\nAnd been slowly slogging through PAL... and working around stuff that\u0027s not in Haiku (yet). I think corehost is done, it gets to install and fails because it thinks coreclr is done :p",
                                           "updatedAt":  "2021-07-22T10:23:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40vSig",
                                           "createdAt":  "2021-07-22T10:33:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "Great, it will also require `src/os-haiku.c`. We can build that repo in isolation to make sure its `autoreconf -i \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make check` is good. Some regression tests (`make check`) might fail as they are failing for other platforms too  in v1.5 (including x86_64 linux, which coreclr has a copy of), but if it is working for most part (i.e. unw_step is working correctly), it\u0027s good enough for our need.\r\n\r\nIt would be best to issue a PR to libunwind/libunwind repo and once merged, cherry-pick the patch to coreclr/src/pal/libunwind and add a note: https://github.com/dotnet/runtime/blob/b937677e8f8601848d29bc072a93cc0c6e21576d/src/coreclr/pal/src/libunwind/libunwind-version.txt#L7. With the next update of libunwind, that list will be updated.",
                                           "updatedAt":  "2021-07-22T10:36:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40vUBA",
                                           "createdAt":  "2021-07-22T10:45:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jessicah",
                                           "body":  "Yep, I\u0027ll work on a haikuporter recipe for libunwind, and try to get patches upstreamed. \r\n\r\nAh, I see what you mean by needing an `os-haiku.c`, just tripped over the undefined references  at [980/1357] targets :)",
                                           "updatedAt":  "2021-07-22T10:45:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40x3n1",
                                           "createdAt":  "2021-07-23T08:35:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jessicah",
                                           "body":  "I\u0027ll come back to libunwind, the low level details are a bit beyond my grasp right now; so just hacked together some code that just returns errors.\r\n\r\nEDIT: the linker errors were because the `--start/--end-group` flags were missing.\r\n\r\nAnyway, I\u0027m running into an error with linking for `ilasm`, getting undefined references to `libmd` related stuff. I\u0027ve checked the `CMakeLists.txt` for any conditional compilation, but I couldn\u0027t find anything, so am genuinely baffled by this one.\r\n\r\nThe linking error: https://gist.github.com/jessicah/0503f8b6ae8e16b9f5e6236c931a39d0#file-output-log-L3801-L3812\r\n\r\nIt looks like the `libmd` is getting built: https://gist.github.com/jessicah/0503f8b6ae8e16b9f5e6236c931a39d0#file-output-log-L2222-L2491\r\n\r\nPerhaps it\u0027s the visibility of `HIDDEN` that\u0027s the problem? See `readelf` output below:\r\n\r\n```\r\njessi@unbuntu:~/source/dotnet-runtime$ for file in `find artifacts/ -name libmd*`; do echo $file; readelf -a -W $file | grep -e MetaDataDllGetClassObject; done\r\n\r\nartifacts/obj/coreclr/Haiku.x64.Debug/md/staticmd/libmdstaticapi_ppdb.a\r\n000000000000006a  000000a400000004 R_X86_64_PLT32         0000000000000000 MetaDataDllGetClassObject - 4\r\n   164: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND MetaDataDllGetClassObject\r\n\r\nartifacts/obj/coreclr/Haiku.x64.Debug/md/staticmd/libmdstaticapi.a\r\n000000000000006a  000000a400000004 R_X86_64_PLT32         0000000000000000 MetaDataDllGetClassObject - 4\r\n   164: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND MetaDataDllGetClassObject\r\n\r\nartifacts/obj/coreclr/Haiku.x64.Debug/md/compiler/libmdcompiler_crossgen.a\r\n   176: 0000000000000000   222 FUNC    GLOBAL HIDDEN    21 MetaDataDllGetClassObject\r\n\r\nartifacts/obj/coreclr/Haiku.x64.Debug/md/compiler/libmdcompiler_ppdb.a\r\n   174: 0000000000000000   222 FUNC    GLOBAL HIDDEN    21 MetaDataDllGetClassObject\r\n```",
                                           "updatedAt":  "2021-07-23T09:59:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40yGW-",
                                           "createdAt":  "2021-07-23T10:32:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jessicah",
                                           "body":  "Well, I have a few binaries I can run, working through fixes, slowly :)\r\n\r\nBut come across a weird one I\u0027m struggling to find any documentation on:\r\n\r\n`runtime_laoder: /Development/testing/mcd: Could not resolve symbol \u0027_ZTH12t_ThreadType\u0027`\r\n\r\nAnd passing through `c++filt` gives: `TLS init function for t_ThreadType`; and this is defined at https://github.com/jessicah/dotnet-runtime/blob/haiku/src/coreclr/vm/util.cpp#L33",
                                           "updatedAt":  "2021-07-23T10:32:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40yI5N",
                                           "createdAt":  "2021-07-23T10:54:13Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "If PAL is building without quirks and PAL tests are passing on Haiku, then these errors are interesting to investigate. Otherwise PAL is a prerequisite and tests are there to ensure that this very base layer is working as expected for rest of the stack.",
                                           "updatedAt":  "2021-07-23T10:54:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40yJuY",
                                           "createdAt":  "2021-07-23T11:01:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jessicah",
                                           "body":  "How do I run the PAL tests on Haiku? As the build script wants to download a dotnet SDK.",
                                           "updatedAt":  "2021-07-23T11:01:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40yLiG",
                                           "createdAt":  "2021-07-23T11:16:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "https://github.com/dotnet/runtime/blob/57bfe474518ab5b7cfe6bf7424a79ce3af9d6657/docs/workflow/testing/coreclr/unix-test-instructions.md#pal-tests\r\nthese are basic C/C++ tests.",
                                           "updatedAt":  "2021-07-23T11:16:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40yUDl",
                                           "createdAt":  "2021-07-23T12:29:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "PAL tests are meant to guarantee that underlying platform\u0027s C/C++ runtime is working as expected. PAL, in general, is an abstraction layer that wraps standard C/C++ functions and exposes them with Win32 API names. The rest of components under coreclr use Win32 API names (as they were originally written for .NET Framework, which is Windows only).\r\n\r\nIn my setup, I have OpenIndiana VM (vagrant + virtualbox) running on MBP. Repo is cloned on macOS, I crossbuilt clr+paltests using docker container, which in turned was built using build-rootfs.sh and published to Microsoft container repository (steup is done in [this git repo](https://github.com/dotnet/dotnet-buildtools-prereqs-docker/)):\r\n```sh\r\ndocker run -e ROOTFS_DIR=/crossrootfs/x64 -v ~/runtime:/runtime \\\r\n    mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-cross-illumos-20210714135645-f13d79e \\\r\n    /runtime/build.sh clr.paltests -cross -gcc -os illumos\r\n```\r\nThen with vagrant/virtualbox, I have  ~/runtime directory shared and mounted at /runtime (same as docker). To run all PAL tests:\r\n`/runtime/src/coreclr/pal/tests/palsuite/runpaltests.sh /runtime/artifacts/bin/coreclr/$(uname).x64.Debug/paltests`\r\n(takes a minute or two to run the tests and test results are stored in an xml file path to which will be shown on stdout)\r\n\r\nSo PAL test executable is an ELF binary which does not require .NET SDK to compile and has no runtime dependency on coreclr_initialize and friends. :)",
                                           "updatedAt":  "2021-07-24T07:57:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40zl2w",
                                           "createdAt":  "2021-07-23T22:13:06Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jessicah",
                                           "body":  "@am11 ah, this is very useful, thanks :) when I had tried to run any of the shell scripts, it had still wanted to download a dotnet sdk. Do the paths actually need to match between the two VMs, or is that just a nicety?\r\n\r\nOne other thing, would it be possible to use the stack unwinding from `libgcc_s` instead of `libunwind`? I\u0027m not sure having two unwinders in binaries is the right thing. And `libgcc_s` is automatically linked into all Haiku binaries.",
                                           "updatedAt":  "2021-07-23T22:13:06Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40zuuz",
                                           "createdAt":  "2021-07-24T00:44:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jessicah",
                                           "body":  "I\u0027m still running into the TLS issue, with the undefined TLS init symbols. It seems like the files using the `extern thread_local` variables are being compiled without the actual definition of the variables included, but I haven\u0027t yet been able to figure it all out. Looks like most of the thread local variables are in `vm`, but I haven\u0027t yet been able to find anything in the CMakeFiles that would hint at a configuration problem :-/\r\n\r\nAnd trying to build `clr.paltests` results in an MSBuild error related to `libhostpolicy.so`, looking for `artifacts/bin/linux-x64.Debug/corehost/libhostpolicy.so`:\r\n\r\nIs that meant to be generated? Or is this yet another build system config I\u0027ve missed? What a repo to dig through...\r\n\r\n```\r\n  Microsoft.NETCore.App.Runtime.Composite -\u003e\r\n/home/jessi/.nuget/packages/microsoft.dotnet.sharedframework.sdk/6.0.0-beta.21357.3/targets/sharedfx.targets(180,5):\r\n  error MSB4018: The \"GenerateSharedFrameworkDepsFile\" task failed unexpectedly. [/home/jessi/source/dotnet-runtime/src/installer/pkg/sfx/Microsoft.NETCore.App/Microsoft.NETCore.App.Runtime.Composite.sfxproj]\r\n  error MSB4018: System.IO.FileNotFoundException: /home/jessi/source/dotnet-runtime/artifacts/bin/linux-x64.Debug/corehost/libhostpolicy.so [/home/jessi/source/dotnet-runtime/src/installer/pkg/sfx/Microsoft.NETCore.App/Microsoft.NETCore.App.Runtime.Composite.sfxproj]\r\n  error MSB4018:    at System.Diagnostics.FileVersionInfo.GetVersionInfo(String fileName) in System.Diagnostics.FileVersionInfo.dll:token 0x6000027+0x1e [/home/jessi/source/dotnet-runtime/src/installer/pkg/sfx/Microsoft.NETCore.App/Microsoft.NETCore.App.Runtime.Composite.sfxproj]\r\n  error MSB4018:    at Microsoft.DotNet.SharedFramework.Sdk.FileUtilities.GetFileVersion(String sourcePath) in /_/src/Microsoft.DotNet.SharedFramework.Sdk/src/FileUtilities.cs:line 30 [/home/jessi/source/dotnet-runtime/src/installer/pkg/sfx/Microsoft.NETCore.App/Microsoft.NETCore.App.Runtime.Composite.sfxproj]\r\n  error MSB4018:    at Microsoft.DotNet.SharedFramework.Sdk.GenerateSharedFrameworkDepsFile.Execute() in /_/src/Microsoft.DotNet.SharedFramework.Sdk/src/GenerateSharedFrameworkDepsFile.cs:line 62 [/home/jessi/source/dotnet-runtime/src/installer/pkg/sfx/Microsoft.NETCore.App/Microsoft.NETCore.App.Runtime.Composite.sfxproj]\r\n  error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() in Microsoft.Build.dll:token 0x60015da+0x3e [/home/jessi/source/dotnet-runtime/src/installer/pkg/sfx/Microsoft.NETCore.App/Microsoft.NETCore.App.Runtime.Composite.sfxproj]\r\n  error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) in Microsoft.Build.dll:token 0x600145a+0x809 [/home/jessi/source/dotnet-runtime/src/installer/pkg/sfx/Microsoft.NETCore.App/Microsoft.NETCore.App.Runtime.Composite.sfxproj]\r\n\r\nBuild FAILED.\r\n```",
                                           "updatedAt":  "2021-07-24T03:27:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40z5Td",
                                           "createdAt":  "2021-07-24T08:18:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "\u003e when I had tried to run any of the shell scripts, it had still wanted to download a dotnet sdk.\r\n\r\nIn cross compilation, it downloads host system\u0027s SDK for any subset. If you are running commands on Ubuntu, then it will download linux-x64 SDK. If you want to only build coreclr directly on the target system (Haiku), then you can directly call the internal script which has option to bypass managed code compilation (which exempts downloading SDK):\r\n\r\n`runtime/src/coreclr/build-runtime.sh -skipgenerateversion -nopgooptimize -skipmanaged`\r\n\r\nIn the initial port, this method is useful to figure out the cmake introspection results, which we can compare with cross compilation ones and make adjustments accordingly in `eng/native/tryrun.cmake`.\r\n\r\n\u003e Do the paths actually need to match between the two VMs, or is that just a nicety?\r\n\r\nIt is just how currently I have it set up on local system (everything mounted at the root). It could be any path and we can also copy `artifacts/` to target rather than mounting.\r\n\r\n\u003e would it be possible to use the stack unwinding from `libgcc_s` instead of `libunwind`?\r\n\r\nCurrently nognu/HP libunwind (default for non-macOS and non-FreeBSD Unices) and LLVM libunwind (default for macOS and FreeBSD, optional for `$other`s) are supported. I am not sure if it is possible or how much work it is to support GCC one. If libgcc_s exposes similar interface which nognu libunwind and llvm ibunwind share, then it should be relatively straightforward given we have other two implementations.\r\n\r\n\u003e And trying to build `clr.paltests` results in an MSBuild error related to `libhostpolicy.so`, looking for `artifacts/bin/linux-x64.Debug/corehost/libhostpolicy.so`:\r\n\r\nInteresting. because it should not use or even build libhostpolicy or corehost when running:\r\n\r\n`dotnet-runtime/build.sh clr.paltests -cross -gcc -os haiku`\r\n\r\n\u003e  What a repo to dig through...\r\n\r\nYes, .NET is not a simple repo to port. It took FreeBSD years to port (and still in progress). Porting .NET libraries takes a lot of time, energy and effort. It builds != it works and that\u0027s just a tip of the iceberg. :)",
                                           "updatedAt":  "2021-07-24T08:28:57Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc400MF_",
                                           "createdAt":  "2021-07-24T18:50:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jessicah",
                                           "body":  "Is there a reason why PAL doesn\u0027t use \u003cerrno.h\u003e and instead hardcodes values for various error codes in a bunch of places?\r\n\r\nBecause the mapping from error symbol to number is a) not defined; and b) completely different on Haiku, causing test failures due to the false assumption. Just wary of adding a check for Haiku and using Haiku\u0027s values, in case there\u0027s a reason for it.",
                                           "updatedAt":  "2021-07-24T18:50:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc400fau",
                                           "createdAt":  "2021-07-25T09:48:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "\u003e Is there a reason why PAL doesn\u0027t use \u003cerrno.h\u003e and instead hardcodes values for various error codes in a bunch of places?\r\n\r\nI think for errnos, if we always want the platform specific value then we should just use the system header. If that is not possible, we could add a cmake check to get the system number and use that in `#ifndef PAL_STDCPP_COMPAT` case (where we redefine stuff). @janvorli, what do you think?",
                                           "updatedAt":  "2021-07-25T09:49:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc4004es",
                                           "createdAt":  "2021-07-25T23:52:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOBzxiaw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2021-07-26T00:20:02Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jessicah",
                                           "body":  "@am11 @janvorli this is my current fix, FWIW: https://github.com/jessicah/dotnet-runtime/commit/7bd4f1d40b4d938b81eecbc77d80e145e005118b\r\n\r\nIt resolves the PAL testsuite errors, at any case. I did try searching for uses of `errno` as much as possible, and from what I can tell elsewhere, the sources use the macro definitions, the PAL test suite was about the only place I could see using raw errno values.\r\n\r\nThe int casts resolved a couple of signed-vs-unsigned warnings as errors, BTW.",
                                           "updatedAt":  "2021-07-25T23:52:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc40057T",
                                           "createdAt":  "2021-07-26T00:20:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "Just a heads up, we also use errno conversion in libraries https://github.com/dotnet/runtime/blob/2a5bae8d50eda49580fcafedbe0a6480b6ff064f/src/libraries/Native/Unix/Common/pal_error_common.h (which will come later :slightly_smiling_face:)",
                                           "updatedAt":  "2021-07-26T00:20:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc402ein",
                                           "createdAt":  "2021-07-26T13:18:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOB1hvoA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2021-07-26T13:26:17Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "lukeb1961",
                                                                               "createdAt":  "2021-08-08T23:14:51Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@jessicah We actually do use errno.h everywhere in the PAL implementation. pal.h header is an interface for the runtime. The runtime code cannot include any platform headers to prevent collisions with runtime / windows types, functions and defines. \r\nWe never hit the problem you have with Haiku, as Linux, macOS, FreeBSD and other Unix OSes we have support for (and even Windows) use the same values for the couple of errnos we use in the runtime. Thus we\u0027ve never had a problem with those couple of values we use in the runtime and that we define there if not found. We basically use just the ERANGE, EBADF, ENOMEM, EILSEQ and EINVAL, as you have found.\r\n\r\nThe PAL errno test defines the ENOENT since all PAL tests execute on top of the coreclr PAL like the runtime and so they cannot include any platform headers.\r\n\r\nEdit: I\u0027ve forgotten to mention that the case when PAL_STDCPP_COMPAT is defined is a bit different - in that case, we try to do our best to ensure that pal.h can be included side by side with stl headers. But this is only a best effort thing that\u0027s not used in the runtime and was added to support special scenarios. And it keeps breaking things from time to time.\r\nThe ultimate goal is to eventually get rid of the PAL completely. That will require to remove all Windowsisms from the runtime implementation and moving the Windows specific stuff to a Windows minipal and Unix stuff to Unix minipal. Runtime would then use standard C/C++ functions for most of the stuff.",
                                           "updatedAt":  "2021-07-26T13:26:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc402gnd",
                                           "createdAt":  "2021-07-26T13:28:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "\u003e I think for errnos, if we always want the platform specific value then we should just use the system header. If that is not possible, we could add a cmake check to get the system number and use that in `#ifndef PAL_STDCPP_COMPAT` case (where we redefine stuff). @janvorli, what do you think?\r\n\r\nWe cannot use the system header in the runtime as I\u0027ve explained above. I think that for these few constants, I\u0027d accept what @jessicah has in the commit.",
                                           "updatedAt":  "2021-07-26T13:28:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5DEZQC",
                                           "createdAt":  "2022-05-12T17:01:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "trungnt2910",
                                           "body":  "What\u0027s the status of this port, and how can I reproduce and continue your work?",
                                           "updatedAt":  "2022-05-12T17:01:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5DKlZY",
                                           "createdAt":  "2022-05-15T02:47:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCc34Sg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "trungnt2910",
                                                                               "createdAt":  "2022-05-15T04:27:41Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2022-05-15T12:32:50Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "jessicah",
                                           "body":  "@trungnt2910 it\u0027s basically blocked on porting `libunwind`: https://github.com/jessicah/libunwind/tree/haiku-support; in particular, I\u0027m fairly sure exception handling needs to be working for use in .Net Core, which is currently still failing with `make check`.\r\n\r\nRegarding `libunwind`: Note that a bunch of offsets and things for register/stack frame layouts and such are guesses in some cases, so there\u0027s quite likely to be errors in my current tree.\r\n\r\nIn terms of building .Net Core itself, it\u0027s been a while, I\u0027ll need to run a fresh build to try remember what commands I used to run on both Linux and Haiku. Thought I would\u0027ve saved the commands to run somewhere, but it seems I failed to do so :-/",
                                           "updatedAt":  "2022-05-15T03:18:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5DK7jd",
                                           "createdAt":  "2022-05-15T13:12:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "Great progress! Your cmake fixes were merged and available as part of cmake releases since v3.21.2. We can use latest cmake in Docker manifest when preparing dotnet-buildtools-prereqs-docker image (for cross compilation toolchain; host: linux-x64, target: haiku-x64).\r\n\r\n\u003e currently still failing with `make check`\r\n\r\nA note about `make check` in libunwind: it runs the regression tests and often does not give us 100% clean results on other platforms/architectures either. Moreover, the usage of libunwind in .NET Runtime is confined to certain parts of the library. Some components are not required  for runtime (but they might be needed for other consumers of libunwind such as, julialang/julia, strace etc.). So it can be ported in parts; initial port followed by improvements/fixes needed, as we learn what does or doesn\u0027t work.\r\n\r\nIt might be a good idea to start upstreaming changes and then incrementally improve things gradually. Generally, smaller patches are quickly reviewed and merged.",
                                           "updatedAt":  "2022-05-15T13:12:40Z"
                                       }
                                   ],
                         "totalCount":  162
                     },
        "title":  "Haiku: add platform support",
        "labels":  [
                       "help wanted",
                       "area-PAL-coreclr",
                       "os-haiku"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/64253",
        "createdAt":  "2022-01-25T03:16:49Z",
        "number":  64253,
        "author":  "am11",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-06-13T19:59:54Z",
        "body":  "In CoreRT, we copied a few assembly macros from CoreCLR repo. Those macros were later modified in coreclr then in runtime repos. Now that NativeAOT and PAL code exist in the same repo, is it feasible to deduplicate that code? \r\n```sh\r\n/runtime $ git ls-files \u0027:/src/coreclr/pal/*unixasmmacros*.inc\u0027\r\nsrc/coreclr/pal/inc/unixasmmacros.inc\r\nsrc/coreclr/pal/inc/unixasmmacrosamd64.inc\r\nsrc/coreclr/pal/inc/unixasmmacrosarm.inc\r\nsrc/coreclr/pal/inc/unixasmmacrosarm64.inc\r\nsrc/coreclr/pal/inc/unixasmmacross390x.inc\r\nsrc/coreclr/pal/inc/unixasmmacrosx86.inc\r\n\r\n# vs.\r\n\r\n/runtime $ git ls-files \u0027:/src/coreclr/nativeaot/*unixasmmacros*.inc\u0027\r\nsrc/coreclr/nativeaot/Runtime/unix/unixasmmacros.inc\r\nsrc/coreclr/nativeaot/Runtime/unix/unixasmmacrosamd64.inc\r\nsrc/coreclr/nativeaot/Runtime/unix/unixasmmacrosarm.inc\r\nsrc/coreclr/nativeaot/Runtime/unix/unixasmmacrosarm64.inc\r\nsrc/coreclr/nativeaot/Runtime/unix/unixasmmacrosx86.inc\r\n```\r\n\r\ncc @MichalStrehovsky, @jkotas, @janvorli",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOPNhgOQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc4818M1",
                                           "createdAt":  "2022-01-25T03:23:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "cc @directhex (regarding https://github.com/dotnet/runtime/pull/62594#discussion_r791251077), for some reason the outerloop armv6 failure is caused by /pal/ variant\r\nhttps://github.com/dotnet/runtime/blob/a5cf724aa2c9a67eb45827b56d6315acd4edea84/src/coreclr/pal/inc/unixasmmacrosarm.inc#L265\r\nbut not the nativeaot one:\r\nhttps://github.com/dotnet/runtime/blob/a5cf724aa2c9a67eb45827b56d6315acd4edea84/src/coreclr/nativeaot/Runtime/unix/unixasmmacrosarm.inc#L185\r\n(although both components are bulilding; maybe it\u0027s unreachable code :thinking:)",
                                           "updatedAt":  "2022-01-25T05:51:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc482GA5",
                                           "createdAt":  "2022-01-25T05:00:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCLXSCw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2022-01-25T05:20:14Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkotas",
                                                                               "createdAt":  "2022-01-25T05:44:37Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "MichalStrehovsky",
                                           "body":  "It would definitely be nice to deduplicate.\r\n\r\nMy only concern is that we currently have zero testing for NativeAOT ARM64 (outside of just building it), so I would rather not make big changes to ARM64 files _right now_. ARM64 testing is on my TODO list for the coming weeks.\r\n\r\n\u003e but not the nativeaot one:\r\n\r\nNativeAOT is only building on ARM64 and x64:\r\n\r\nhttps://github.com/dotnet/runtime/blob/a5cf724aa2c9a67eb45827b56d6315acd4edea84/src/coreclr/CMakeLists.txt#L137-L142\r\n\r\nIt might be buildable on ARM32, but this was scoped down to what we really need in the initial move from runtimelab.",
                                           "updatedAt":  "2022-01-25T05:00:41Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Duplicate assembly macros",
        "labels":  [
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/71338",
        "createdAt":  "2022-06-27T15:09:26Z",
        "number":  71338,
        "author":  "sec",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC2vxfw==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "mmarinchenko",
                                            "createdAt":  "2023-09-10T16:04:36Z"
                                        },
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "ris-work",
                                            "createdAt":  "2024-03-24T15:10:12Z"
                                        }
                                    ],
                          "totalCount":  2
                      },
        "updatedAt":  "2024-12-04T17:07:02Z",
        "body":  "Hi,\r\nNot to spam #14537 (as it\u0027s already quite big) :)\r\nAs full native build of either v6 and v7 is possible under FreeBSD-amd64, I went ahead and tried to make the same process work for ARM64.\r\n\r\nAfter getting configure to success, I\u0027ve tried:\r\n\r\n1. Using Linux arm64 host to cross compile to FreeBSD (with custom rootfs created with libs, etc.)\r\nAs it was used before, to cross compile from Linux-amd64 to Freebsd-x64, this fail at very early stage with:\r\n```\r\n[  1%] Built target System.Globalization.Native-Static\r\nScanning dependencies of target coreclrpal\r\n[  1%] Building C object libs-native/System.IO.Compression.Native/CMakeFiles/System.IO.Compression.Native-Static.dir/root/runtime/src/native/external/brotli/dec/state.c.o\r\n[  1%] Building CXX object pal/src/CMakeFiles/coreclrpal.dir/cruntime/file.cpp.o\r\n[  1%] Building C object libs-native/System.Native/CMakeFiles/System.Native-Static.dir/pal_tcpstate.c.o\r\nIn file included from /root/runtime/src/coreclr/pal/src/cruntime/file.cpp:21:\r\n/root/runtime/src/coreclr/pal/src/include/pal/palinternal.h:158:10: fatal error: \u0027type_traits\u0027 file not found\r\n#include \u003ctype_traits\u003e\r\n         ^~~~~~~~~~~~~\r\n[  1%] Building C object libs-native/System.IO.Compression.Native/CMakeFiles/System.IO.Compression.Native-Static.dir/root/runtime/src/native/external/brotli/enc/backward_references.c.o\r\n[  1%] Building C object libs-native/System.Native/CMakeFiles/System.Native-Static.dir/pal_threading.c.o\r\n1 error generated.\r\n[  1%] Building C object libs-native/System.Native/CMakeFiles/System.Native-Static.dir/pal_time.c.o\r\nmake[2]: *** [pal/src/CMakeFiles/coreclrpal.dir/build.make:76: pal/src/CMakeFiles/coreclrpal.dir/cruntime/file.cpp.o] Error 1\r\nmake[1]: *** [CMakeFiles/Makefile2:2020: pal/src/CMakeFiles/coreclrpal.dir/all] Error 2\r\n```\r\n\r\nCommand I\u0027ve used `ROOTFS_DIR=/home/ubuntu/arm64 ./src/coreclr/build-runtime.sh -arm64 -debug clang14 -cross -os FreeBSD`.\r\nThis does look like something missing in configure step, as those headers are present on rootfs_dir and host system:\r\n```\r\nroot@instance-20220624-1221:/# find . -name type_traits\r\n./home/ubuntu/arm64/usr/include/c++/v1/tr1/type_traits\r\n./home/ubuntu/arm64/usr/include/c++/v1/experimental/type_traits\r\n./home/ubuntu/arm64/usr/include/c++/v1/type_traits\r\n\r\n./usr/include/c++/11/tr2/type_traits\r\n./usr/include/c++/11/tr1/type_traits\r\n./usr/include/c++/11/experimental/type_traits\r\n./usr/include/c++/11/type_traits\r\n\r\n./root/runtime/src/coreclr/inc/clr_std/type_traits\r\n\r\n```\r\nso I guess something during configure stage should be added to look in those directories?\r\n\r\n2. Using FreeBSD arm64 host directly to compile\r\nTrying with both `-cross` and without, it fails with the same error:\r\n```\r\n[  4%] Building C object libs-native/System.Security.Cryptography.Native/CMakeFiles/objlib.dir/pal_evp_pkey_ecdh.c.o\r\nIn file included from /usr/home/sec/runtime/src/coreclr/pal/src/debug/debug.cpp:32:\r\n/usr/home/sec/runtime/src/coreclr/pal/src/include/pal/context.h:450:1: error: unknown type name \u0027fpsimd_context\u0027\r\nfpsimd_context* GetNativeSigSimdContext(native_context_t *mc)\r\n^\r\n/usr/home/sec/runtime/src/coreclr/pal/src/include/pal/context.h:456:9: error: unknown type name \u0027fpsimd_context\u0027\r\n        fpsimd_context* fp = reinterpret_cast\u003cfpsimd_context *\u003e(\u0026mc-\u003euc_mcontext.__reserved[size]);\r\n        ^\r\n/usr/home/sec/runtime/src/coreclr/pal/src/include/pal/context.h:456:47: error: unknown type name \u0027fpsimd_context\u0027\r\n        fpsimd_context* fp = reinterpret_cast\u003cfpsimd_context *\u003e(\u0026mc-\u003euc_mcontext.__reserved[size]);\r\n                                              ^\r\n/usr/home/sec/runtime/src/coreclr/pal/src/include/pal/context.h:456:82: error: no member named \u0027__reserved\u0027 in \u0027__mcontext\u0027\r\n        fpsimd_context* fp = reinterpret_cast\u003cfpsimd_context *\u003e(\u0026mc-\u003euc_mcontext.__reserved[size]);\r\n                                                                 ~~~~~~~~~~~~~~~ ^\r\n/usr/home/sec/runtime/src/coreclr/pal/src/include/pal/context.h:458:30: error: use of undeclared identifier \u0027FPSIMD_MAGIC\u0027\r\n        if(fp-\u003ehead.magic == FPSIMD_MAGIC)\r\n                             ^\r\n/usr/home/sec/runtime/src/coreclr/pal/src/include/pal/context.h:460:46: error: use of undeclared identifier \u0027fpsimd_context\u0027\r\n            _ASSERTE(fp-\u003ehead.size \u003e= sizeof(fpsimd_context));\r\n                                             ^\r\n/usr/home/sec/runtime/src/coreclr/pal/src/include/pal/context.h:461:69: error: no member named \u0027__reserved\u0027 in \u0027__mcontext\u0027\r\n            _ASSERTE(size + fp-\u003ehead.size \u003c= sizeof(mc-\u003euc_mcontext.__reserved));\r\n                                                    ~~~~~~~~~~~~~~~ ^\r\n/usr/home/sec/runtime/src/coreclr/pal/src/include/pal/dbgmsg.h:362:35: note: expanded from macro \u0027_ASSERTE\u0027\r\n#define _ASSERTE(expr) do { if (!(expr)) { ASSERT(\"Expression: \" #expr \"\\n\"); } } while(0)\r\n                                  ^~~~\r\nIn file included from /usr/home/sec/runtime/src/coreclr/pal/src/debug/debug.cpp:32:\r\n/usr/home/sec/runtime/src/coreclr/pal/src/include/pal/context.h:472:28: error: use of undeclared identifier \u0027fpsimd_context\u0027\r\n    } while (size + sizeof(fpsimd_context) \u003c= sizeof(mc-\u003euc_mcontext.__reserved));\r\n                           ^\r\n/usr/home/sec/runtime/src/coreclr/pal/src/include/pal/context.h:472:70: error: no member named \u0027__reserved\u0027 in \u0027__mcontext\u0027\r\n    } while (size + sizeof(fpsimd_context) \u003c= sizeof(mc-\u003euc_mcontext.__reserved));\r\n                                                     ~~~~~~~~~~~~~~~ ^\r\n/usr/home/sec/runtime/src/coreclr/pal/src/include/pal/context.h:480:7: error: unknown type name \u0027fpsimd_context\u0027\r\nconst fpsimd_context* GetConstNativeSigSimdContext(const native_context_t *mc)\r\n      ^\r\n10 errors generated.\r\n[  4%] Linking C static library libSystem.Native.a\r\n--- pal/src/CMakeFiles/coreclrpal.dir/debug/debug.cpp.o ---\r\n*** [pal/src/CMakeFiles/coreclrpal.dir/debug/debug.cpp.o] Error code 1\r\n\r\nmake[2]: stopped in /usr/home/sec/runtime/artifacts/obj/coreclr/FreeBSD.arm64.Debug\r\n*** [all] Error code 6\r\n\r\nmake: stopped in /usr/home/sec/runtime/artifacts/obj/coreclr/FreeBSD.arm64.Debug\r\n1 error\r\n\r\nmake: stopped in /usr/home/sec/runtime/artifacts/obj/coreclr/FreeBSD.arm64.Debug\r\n```\r\n\r\nCommand used was the same as with ad. 1. This looks more complicated, as it have something to do with libunwind being used? No idea how to get over that :)\r\n\r\nIncluding patches I\u0027ve come up with.\r\n\r\nIf anyone expierenced with cross build could comment on that, to even confirm it\u0027s possible in the current state to make that work or would it require far more work?\r\n\r\nIf someone is interested in helping/testing/making this work I can provide access to either FreeBSD or Linux ARM64 box that I use.\r\n\r\n[runtime_freebsd_arm64.txt](https://github.com/dotnet/runtime/files/8993111/runtime_freebsd_arm64.txt)\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHORiAZgw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5Fqcws",
                                           "createdAt":  "2022-06-28T13:51:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Thefrank",
                                           "body":  "OSX/BSD builds use the target system\u0027s libunwind:\r\nfrom src/coreclr/pal/src/CMakeLists.txt\r\n```\r\nif(CLR_CMAKE_TARGET_OSX OR CLR_CMAKE_TARGET_FREEBSD)\r\n     # On OSX and *BSD, we use the libunwind that\u0027s part of the OS\r\n     set(CLR_CMAKE_USE_SYSTEM_LIBUNWIND 1)\r\nendif(CLR_CMAKE_TARGET_OSX OR CLR_CMAKE_TARGET_FREEBSD)\r\n```\r\nwhich makes it add only `include_directories(SYSTEM $ENV{ROOTFS_DIR}/usr/local/include)`",
                                           "updatedAt":  "2022-06-28T13:51:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FqviR",
                                           "createdAt":  "2022-06-28T14:54:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "Yup, I think we just need to update the list of compatible context registers for freebsd-arm64 to make it work.",
                                           "updatedAt":  "2022-06-28T14:54:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Fq3MW",
                                           "createdAt":  "2022-06-28T15:20:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sec",
                                           "body":  "If that would only make sense to me I would maybe help more, still learing on the fly. I found #40149 and doing quick change:\r\n```diff\r\ndiff --git a/src/coreclr/pal/src/include/pal/context.h b/src/coreclr/pal/src/include/pal/context.h\r\nindex fec5139fd5e..2cc4941d653 100644\r\n--- a/src/coreclr/pal/src/include/pal/context.h\r\n+++ b/src/coreclr/pal/src/include/pal/context.h\r\n@@ -407,7 +407,7 @@ inline void *FPREG_Xstate_Ymmh(const ucontext_t *uc)\r\n\r\n #if defined(HOST_ARM64)\r\n\r\n-#ifndef TARGET_OSX\r\n+#if !defined(TARGET_OSX) \u0026\u0026 !defined(TARGET_FREEBSD)\r\n\r\n #define MCREG_X0(mc)      ((mc).regs[0])\r\n #define MCREG_X1(mc)      ((mc).regs[1])\r\n@@ -482,7 +482,7 @@ const fpsimd_context* GetConstNativeSigSimdContext(const native_context_t *mc)\r\n     return GetNativeSigSimdContext(const_cast\u003cnative_context_t*\u003e(mc));\r\n }\r\n\r\n-#else // TARGET_OSX\r\n+#elif defined(TARGET_OSX) // TARGET_OSX\r\n\r\n #define MCREG_X0(mc)      ((mc)-\u003e__ss.__x[0])\r\n #define MCREG_X1(mc)      ((mc)-\u003e__ss.__x[1])\r\n```\r\nnative compile fail with:\r\n```\r\nIn file included from /usr/home/sec/runtime/src/coreclr/pal/src/exception/seh.cpp:407:\r\n/usr/home/sec/runtime/src/coreclr/pal/src/exception/seh-unwind.cpp:177:2: error: unsupported architecture\r\n#error unsupported architecture\r\n ^\r\n/usr/home/sec/runtime/src/coreclr/pal/src/exception/seh-unwind.cpp:183:5: error: use of undeclared identifier \u0027ASSIGN_UNWIND_REGS\u0027\r\n    ASSIGN_UNWIND_REGS\r\n    ^\r\n2 errors generated.\r\n--- pal/src/CMakeFiles/coreclrpal.dir/exception/seh.cpp.o ---\r\n*** [pal/src/CMakeFiles/coreclrpal.dir/exception/seh.cpp.o] Error code 1\r\n```\r\n\r\nIs this the context registers that needs to be updated (looked at the code and there\u0027s no ARM64 for any of the targets)?",
                                           "updatedAt":  "2022-06-28T15:20:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FrBtD",
                                           "createdAt":  "2022-06-28T15:57:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@sec, what are the detected features (the HAVE_xxx) for the FreeBSD arm64 build? When you do a clean build, it lists them to the console. From those, I should be able to tell where to update the context registers extraction.",
                                           "updatedAt":  "2022-06-28T15:57:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FrOwX",
                                           "createdAt":  "2022-06-28T16:37:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sec",
                                           "body":  "@janvorli There you go:\r\n```\r\n-- Performing Test COMPILER_SUPPORTS_F_STACK_PROTECTOR_STRONG - Success\r\n-- Performing Test COMPILER_SUPPORTS_W_IMPLICIT_FALLTHROUGH - Success\r\n-- Performing Test HAVE_LTO - Failed\r\n-- Performing Test COMPILER_SUPPORTS_F_ALIGNED_NEW - Success\r\n-- Performing Test HAVE_DIRENT_D_TYPE - Success\r\n-- Performing Test C_SUPPORTS_WUNGUARDED_AVAILABILITY - Success\r\n-- Performing Test HAVE_IN_PKTINFO - Failed\r\n-- Performing Test HAVE_IP_MREQN - Success\r\n-- Performing Test HAVE_STATFS_VFS - Failed\r\n-- Performing Test HAVE_STATFS_MOUNT - Success\r\n-- Performing Test HAVE_FLOCK64 - Failed\r\n-- Performing Test HAVE_IFADDRS - Success\r\n-- Performing Test HAVE_UTSNAME_DOMAINNAME - Failed\r\n-- Performing Test HAVE_STAT_BIRTHTIME - Success\r\n-- Performing Test HAVE_STAT_FLAGS - Success\r\n-- Performing Test HAVE_STAT_TIMESPEC - Success\r\n-- Performing Test HAVE_STAT_TIM - Success\r\n-- Performing Test HAVE_STAT_NSEC - Success\r\n-- Performing Test HAVE_DIRENT_NAME_LEN - Success\r\n-- Performing Test HAVE_STATFS_FSTYPENAME - Success\r\n-- Performing Test HAVE_STATVFS_FSTYPENAME - Failed\r\n-- Performing Test HAVE_GNU_STRERROR_R - Failed\r\n-- Performing Test HAVE_READDIR_R - Success\r\n-- Performing Test KEVENT_HAS_VOID_UDATA - Success\r\n-- Performing Test HAVE_FDS_BITS - Success\r\n-- Performing Test HAVE_PRIVATE_FDS_BITS - Success\r\n-- Performing Test HAVE_SENDFILE_4 - Failed\r\n-- Performing Test HAVE_SENDFILE_6 - Failed\r\n-- Performing Test HAVE_SENDFILE_7 - Success\r\n-- Performing Test HAVE_GETNAMEINFO_SIGNED_FLAGS - Success\r\n-- Performing Test HAVE_SHM_OPEN_THAT_WORKS_WELL_ENOUGH_WITH_MMAP - Success\r\n-- Performing Test HAVE_CLOCK_MONOTONIC - Success\r\n-- Performing Test HAVE_CLOCK_REALTIME - Success\r\n-- Performing Test BIND_ADDRLEN_UNSIGNED - Success\r\n-- Performing Test IPV6MR_INTERFACE_UNSIGNED - Success\r\n-- Performing Test INOTIFY_RM_WATCH_WD_UNSIGNED - Failed\r\n-- Performing Test HAVE_MKSTEMPS - Success\r\n-- Performing Test HAVE_MKSTEMP - Success\r\n-- Performing Test HAVE_NETINET_TCP_VAR_H - Success\r\n-- Performing Test HAVE_NETINET_UDP_VAR_H - Success\r\n-- Performing Test HAVE_NETINET_IP_VAR_H - Success\r\n-- Performing Test HAVE_NETINET_ICMP_VAR_H - Success\r\n-- Performing Test HAVE_TCP_H_TCPSTATE_ENUM - Failed\r\n-- Performing Test HAVE_GETDOMAINNAME_SIZET - Failed\r\n-- Performing Test HAVE_IN_EXCL_UNLINK - Success\r\n-- Performing Test HAVE_TCP_H_TCP_KEEPALIVE - Failed\r\n-- Performing Test HAVE_BUILTIN_MUL_OVERFLOW - Success\r\n-- Performing Test HAVE_UDAT_STANDALONE_SHORTER_WEEKDAYS - Success\r\n-- Performing Test HAVE_VM_FLAGS_SUPERPAGE_SIZE_ANY - Failed\r\n-- Performing Test HAVE_MAP_HUGETLB - Failed\r\n-- Performing Test HAVE_LTTNG_TRACEPOINT_H - Failed\r\n-- Performing Test HAVE_CPUSET_T - Success\r\n-- Performing Test HAVE_TM_GMTOFF - Success\r\n-- Performing Test HAVE_GREGSET_T - Failed\r\n-- Performing Test HAVE___GREGSET_T - Failed\r\n-- Performing Test HAVE_FPSTATE_GLIBC_RESERVED1 - Failed\r\n-- Performing Test HAVE_SYSINFO_WITH_MEM_UNIT - Failed\r\n-- Performing Test HAVE_FPREGS_WITH_CW - Failed\r\n-- Performing Test REALPATH_SUPPORTS_NONEXISTENT_FILES - Failed\r\n-- Performing Test SSCANF_SUPPORT_ll - Success\r\n-- Performing Test SSCANF_CANNOT_HANDLE_MISSING_EXPONENT - Failed\r\n-- Performing Test HAVE_LARGE_SNPRINTF_SUPPORT - Success\r\n-- Performing Test HAVE_BROKEN_FIFO_SELECT - Failed\r\n-- Performing Test HAVE_BROKEN_FIFO_KEVENT - Failed\r\n-- Performing Test HAVE_SCHED_GET_PRIORITY - Success\r\n-- Performing Test HAVE_WORKING_GETTIMEOFDAY - Success\r\n-- Performing Test HAVE_WORKING_CLOCK_GETTIME - Success\r\n-- Performing Test HAVE_CLOCK_MONOTONIC_COARSE - Success\r\n-- Performing Test HAVE_CLOCK_THREAD_CPUTIME - Success\r\n-- Performing Test MMAP_ANON_IGNORES_PROTECTION - Failed\r\n-- Performing Test ONE_SHARED_MAPPING_PER_FILEREGION_PER_PROCESS - Failed\r\n-- Performing Test PTHREAD_CREATE_MODIFIES_ERRNO - Failed\r\n-- Performing Test SEM_INIT_MODIFIES_ERRNO - Failed\r\n-- Performing Test HAVE_PROCFS_CTL - Failed\r\n-- Performing Test HAVE_PROCFS_MAPS - Failed\r\n-- Performing Test HAVE_PROCFS_STAT - Failed\r\n-- Performing Test HAVE_PROCFS_STATUS - Success\r\n-- Performing Test HAVE_COMPATIBLE_ACOS - Success\r\n-- Performing Test HAVE_COMPATIBLE_ASIN - Success\r\n-- Performing Test HAVE_COMPATIBLE_POW - Success\r\n-- Performing Test HAVE_VALID_NEGATIVE_INF_POW - Success\r\n-- Performing Test HAVE_VALID_POSITIVE_INF_POW - Success\r\n-- Performing Test HAVE_COMPATIBLE_ATAN2 - Success\r\n-- Performing Test HAVE_COMPATIBLE_EXP - Failed\r\n-- Performing Test HAVE_COMPATIBLE_ILOGB0 - Failed\r\n-- Performing Test HAVE_COMPATIBLE_ILOGBNAN - Success\r\n-- Performing Test HAVE_COMPATIBLE_LOG - Success\r\n-- Performing Test HAVE_COMPATIBLE_LOG10 - Success\r\n-- Performing Test UNGETC_NOT_RETURN_EOF - Failed\r\n-- Performing Test HAS_POSIX_SEMAPHORES - Success\r\n-- Performing Test GETPWUID_R_SETS_ERRNO - Failed\r\n-- Performing Test FILE_OPS_CHECK_FERROR_OF_PREVIOUS_CALL - Failed\r\n-- Performing Test UNWIND_CONTEXT_IS_UCONTEXT_T - Success\r\n-- Performing Test HAVE_XSWDEV - Success\r\n-- Performing Test HAVE_XSW_USAGE - Failed\r\n-- Performing Test HAVE_PUBLIC_XSTATE_STRUCT - Failed\r\n-- Performing Test HAVE_PR_SET_PTRACER - Failed\r\n-- Performing Test HAVE_FULLY_FEATURED_PTHREAD_MUTEXES - Success\r\n-- Performing Test HAVE_PTHREAD_THREADID_NP - Failed\r\n-- Performing Test HAVE_PTHREAD_GETTHREADID_NP - Success\r\n```\r\n\r\nedit: also attached full log from build attempt.\r\n[build_log.txt](https://github.com/dotnet/runtime/files/9003076/build_log.txt)\r\n",
                                           "updatedAt":  "2022-06-28T18:55:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FrZtl",
                                           "createdAt":  "2022-06-28T17:15:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "It seems to me that your last change was correct. But you also need to add #elif (defined(HOST_UNIX) \u0026\u0026 defined(HOST_ARM64)) before the #else with #error that fires. In that #elif, you\u0027d add:\r\n```C++\r\n    ASSIGN_REG(Pc) \\\r\n    ASSIGN_REG(Sp) \\\r\n    ASSIGN_REG(Fp) \\\r\n    ASSIGN_REG(Lr) \\\r\n    ASSIGN_REG(X19) \\\r\n    ASSIGN_REG(X20) \\\r\n    ASSIGN_REG(X21) \\\r\n    ASSIGN_REG(X22) \\\r\n    ASSIGN_REG(X23) \\\r\n    ASSIGN_REG(X24) \\\r\n    ASSIGN_REG(X25) \\\r\n    ASSIGN_REG(X26) \\\r\n    ASSIGN_REG(X27) \\\r\n    ASSIGN_REG(X28)\r\n```\r\nI hope I got it right.",
                                           "updatedAt":  "2022-06-28T17:15:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FrqMJ",
                                           "createdAt":  "2022-06-28T18:23:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sec",
                                           "body":  "@janvorli Tried that, it failed with bunch of errors for every register:\r\n```\r\nIn file included from /usr/home/sec/runtime/src/coreclr/pal/src/exception/seh.cpp:407:\r\n/usr/home/sec/runtime/src/coreclr/pal/src/exception/seh-unwind.cpp:190:2: error: use of undeclared identifier \u0027MCREG_X21\u0027\r\n        ASSIGN_UNWIND_REGS\r\n        ^\r\n/usr/home/sec/runtime/src/coreclr/pal/src/exception/seh-unwind.cpp:178:2: note: expanded from macro \u0027ASSIGN_UNWIND_REGS\u0027\r\n        ASSIGN_REG(X21) \\\r\n        ^\r\n/usr/home/sec/runtime/src/coreclr/pal/src/exception/seh-unwind.cpp:189:25: note: expanded from macro \u0027ASSIGN_REG\u0027\r\n#define ASSIGN_REG(reg) MCREG_##reg(unwContext-\u003euc_mcontext) = winContext-\u003ereg;\r\n                        ^\r\n\u003cscratch space\u003e:95:1: note: expanded from here\r\nMCREG_X21\r\n^\r\n```\r\n\r\nLeaving this empty, will go on but then fail again with similar errors. If I\u0027m looking at this correctly, I think it\u0027s missing some #def for HOST_ARM64 and TARGET_FREEBSD inside `src/coreclr/pal/src/include/pal/context.h` with those registers?\r\n\r\nAnd also there\u0027s again `error: unknown type name \u0027fpsimd_context\u0027` - which FreeBSD doesn\u0027t have, but if I add `|| defined(TARGET_FREEBSD)` next to TARGET_OSX those errors seems to go away (don\u0027t know if that will work in the end though, as I going blind in here. Also the undefined registers errors are there, so my bet is that fixing those first would be real fix).\r\n\r\nI wodner, if there\u0027s libunwind used (which state FreeBSD is supported under x64 and arm64) - shouldn\u0027t this be used (if I assume this code here is about that).\r\n\r\nAs I saw @sdmaclea did the OSX part of changes - maybe some hints? :)\r\n\r\nJust to make sure, this is native build under ARM64 FreeBSD host.",
                                           "updatedAt":  "2022-06-28T18:23:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Frymr",
                                           "createdAt":  "2022-06-28T18:57:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Ah, I haven\u0027t noticed that your change around line 490 was like this:\r\n```diff\r\n-#else // TARGET_OSX\r\n+#elif defined(TARGET_OSX) // TARGET_OSX\r\n```\r\nThat way, you have eliminated both definitions of the MCREG_xxx for arm64. What does the ucontext_t struct look like on FreeBSD arm64? We\u0027ll either need to define the MCREG_xxx for the FreeBSD separately or reuse the one for Linux / OSX if it happens to be the same.",
                                           "updatedAt":  "2022-06-28T18:57:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Fr1-g",
                                           "createdAt":  "2022-06-28T19:12:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Ah, found it in FreeBSD sources. So it is different and we will need to have another `#elif TARGET_FREEBSD` there. It seems that the definitions should look like:\r\n```C++\r\n#define MCREG_X21(mc) (mc.mc_gpregs.gp_x[21])\r\n#define MCREG_X22(mc) (mc.mc_gpregs.gp_x[22])\r\n#define MCREG_X23(mc) (mc.mc_gpregs.gp_x[23])\r\n#define MCREG_X24(mc) (mc.mc_gpregs.gp_x[24])\r\n#define MCREG_X25(mc) (mc.mc_gpregs.gp_x[25])\r\n#define MCREG_X26(mc) (mc.mc_gpregs.gp_x[26])\r\n#define MCREG_X27(mc) (mc.mc_gpregs.gp_x[27])\r\n#define MCREG_X28(mc) (mc.mc_gpregs.gp_x[28])\r\n#define MCREG_Fp(mc)      (mc.mc_gpregs.gp_fp)\r\n#define MCREG_Lr(mc)      (mc.mc_gpregs.gp_lr)\r\n#define MCREG_Sp(mc)      (mc.mc_gpregs.gp_sp)\r\n#define MCREG_Pc(mc)      (mc.mc_gpregs.gp_pc)\r\n```\r\nAs for the floating point access we will also need an extra code here. Take the following with a grain of salt, it might not be exactly right or might need extra change at another place too:\r\n```C++\r\ninline\r\nstruct fpregs* GetNativeSigSimdContext(native_context_t *mc)\r\n{\r\n    return \u0026(mc-\u003emc_fpregs);\r\n}\r\n\r\ninline\r\nconst struct fpregs* GetConstNativeSigSimdContext(const native_context_t *mc)\r\n{\r\n    return GetNativeSigSimdContext(const_cast\u003cnative_context_t*\u003e(mc));\r\n}\r\n```",
                                           "updatedAt":  "2022-06-28T19:12:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Fr2mW",
                                           "createdAt":  "2022-06-28T19:15:11Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Btw, this is based on https://github.com/freebsd/freebsd-src/blob/373ffc62c158e52cde86a5b934ab4a51307f9f2e/sys/arm64/include/ucontext.h#L53",
                                           "updatedAt":  "2022-06-28T19:15:11Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FsIFJ",
                                           "createdAt":  "2022-06-28T20:22:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sec",
                                           "body":  "@janvorli Thanks, I was looking at the same files and was about to post :) \r\nCan\u0027t find `Pc` and `Fp` in `ucontext` in structs btw.\r\n\r\nManaged to get past some errors, but now a lot of:\r\n```\r\n[  6%] Built target eventpipe_objs\r\nConsolidate compiler generated dependencies of target mdruntimerw_wks_obj\r\n/usr/home/sec/runtime/src/coreclr/pal/src/thread/context.cpp:339:9: error: use of undeclared identifier \u0027BSDREG_Cpsr\u0027\r\n        ASSIGN_ALL_REGS\r\n        ^\r\n/usr/home/sec/runtime/src/coreclr/pal/src/thread/context.cpp:286:9: note: expanded from macro \u0027ASSIGN_ALL_REGS\u0027\r\n        ASSIGN_CONTROL_REGS \\\r\n        ^\r\n/usr/home/sec/runtime/src/coreclr/pal/src/thread/context.cpp:137:9: note: expanded from macro \u0027ASSIGN_CONTROL_REGS\u0027\r\n        ASSIGN_REG(Cpsr)    \\\r\n        ^\r\n/usr/home/sec/runtime/src/coreclr/pal/src/thread/context.cpp:333:62: note: expanded from macro \u0027ASSIGN_REG\u0027\r\n#define ASSIGN_REG(reg) MCREG_##reg(registers.uc_mcontext) = BSDREG_##reg(ptrace_registers);\r\n                                                             ^\r\n\u003cscratch space\u003e:248:1: note: expanded from here\r\nBSDREG_Cpsr\r\n^\r\n[  8%] Built target ceefgen_obj\r\n/usr/home/sec/runtime/src/coreclr/pal/src/thread/context.cpp:339:9: error: use of undeclared identifier \u0027BSDREG_Fp\u0027\r\n/usr/home/sec/runtime/src/coreclr/pal/src/thread/context.cpp:286:9: note: expanded from macro \u0027ASSIGN_ALL_REGS\u0027\r\n        ASSIGN_CONTROL_REGS \\\r\n        ^\r\n/usr/home/sec/runtime/src/coreclr/pal/src/thread/context.cpp:138:9: note: expanded from macro \u0027ASSIGN_CONTROL_REGS\u0027\r\n        ASSIGN_REG(Fp)      \\\r\n        ^\r\n...\r\n```\r\nI haven\u0027t saw any existing `BSDREG_X` for defined (even for OSX)\r\n\r\nI\u0027m starting to think does this road make sense. Shouldn\u0027t this reuse existing ARM64 code and/or use machine specific libunwind for the rest?",
                                           "updatedAt":  "2022-06-28T20:22:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FsJPG",
                                           "createdAt":  "2022-06-28T20:27:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "We cannot reuse the code, because the structure of the `ucontext_t` is different from all other platforms, using different names of data fields for the registers etc. That\u0027s why we are adding new ones.\r\n",
                                           "updatedAt":  "2022-06-28T20:27:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FsL65",
                                           "createdAt":  "2022-06-28T20:37:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Can you please share the log from the clean build after you\u0027ve applied my previous fix? It is not clear to me how come we are compiling code using the BSDREG_xxx stuff when the `HAVE_BSD_REGS_T` doesn\u0027t seem to be defined.",
                                           "updatedAt":  "2022-06-28T20:37:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FsS_5",
                                           "createdAt":  "2022-06-28T21:02:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sec",
                                           "body":  "[build_log.txt](https://github.com/dotnet/runtime/files/9004847/build_log.txt)\r\n[freebsd_arm64_patch.txt](https://github.com/dotnet/runtime/files/9004848/freebsd_arm64_patch.txt)\r\n\r\n@janvorli  Here\u0027s build output and `git diff` of everything I have tweaked :)\r\n\r\nedit: accoring to CMakeOutput.txt, BSD_REG check passed:\r\n\r\nRun Build Command(s):/usr/local/bin/gmake -f Makefile cmTC_c2fef/fast \u0026\u0026 /usr/local/bin/gmake  -f CMakeFiles/cmTC_c2fef.dir/build.make CMakeFiles/cmTC_c2fef.dir/build\r\ngmake[1]: Entering directory \u0027/usr/home/sec/runtime/artifacts/obj/coreclr/FreeBSD.arm64.Debug/CMakeFiles/CMakeTmp\u0027\r\nBuilding C object CMakeFiles/cmTC_c2fef.dir/BSD_REGS_T.c.o\r\n/usr/local/bin/clang14 -D_FILE_OFFSET_BITS=64 -I/usr/local/include -fPIE -MD -MT CMakeFiles/cmTC_c2fef.dir/BSD_REGS_T.c.o -MF CMakeFiles/cmTC_c2fef.dir/BSD_REGS_T.c.o.d -o CMakeFiles/cmTC_c2fef.dir/BSD_REGS     _T.c.o -c /usr/home/sec/runtime/artifacts/obj/coreclr/FreeBSD.arm64.Debug/CMakeFiles/CheckTypeSize/BSD_REGS_T.c\r\nLinking C executable cmTC_c2fef\r\n/usr/local/bin/cmake -E cmake_link_script CMakeFiles/cmTC_c2fef.dir/link.txt --verbose=1\r\n/usr/local/bin/clang14 -fuse-ld=lld -pie -Wl,--build-id=sha1  CMakeFiles/cmTC_c2fef.dir/BSD_REGS_T.c.o -o cmTC_c2fef\r\ngmake[1]: Leaving directory \u0027/usr/home/sec/runtime/artifacts/obj/coreclr/FreeBSD.arm64.Debug/CMakeFiles/CMakeTmp\u0027\r\n[CMakeError.log](https://github.com/dotnet/runtime/files/9004969/CMakeError.log)\r\n[CMakeOutput.log](https://github.com/dotnet/runtime/files/9004970/CMakeOutput.log)\r\n\r\nedit 2: added CMakeFiles output, maybe it will help also",
                                           "updatedAt":  "2022-06-28T21:23:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Fsj8o",
                                           "createdAt":  "2022-06-28T21:46:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Ah, I\u0027ve forgotten that the `check_type_size(\"struct reg\" BSD_REGS_T)` doesn\u0027t log anything. In that case, we need to add definitions for BSDREG_xxx stuff. The `HAVE_BSD_REGS_T` branch in the source assumes it is either x64 or x86. So in `context.h`, look for the `#if HAVE_BSD_REGS_T` and then `#ifdef HOST_64BIT` under that. Inside that `#ifdef`, we need to put the current stuff under `#ifdef HOST_AMD64` and add `#elif defined(HOST_ARM64)` branch where we put the following:\r\n```\r\n#define BSDREG_X0(reg) BSD_REGS_STYLE(reg,X[0],x[0])\r\n.\r\n.\r\n.\r\n#define BSDREG_X29(reg) BSD_REGS_STYLE(reg,X[29],x[29])\r\n#define BSDREG_Fp(reg) BSD_REGS_STYLE(reg,Fp,fp)\r\n#define BSDREG_Sp(reg) BSD_REGS_STYLE(reg,Sp,sp)\r\n#define BSDREG_Pc(reg) BSD_REGS_STYLE(reg,Pc,pc)\r\n#define BSDREG_Lr(reg) BSD_REGS_STYLE(reg,Lr,lr)\r\n#define BSDREG_Cpsr(reg) BSD_REGS_STYLE(reg,Spsr,spsr)\r\n```\r\n\r\nAnd then in `src/coreclr/pal/src/configure.cmake`, find `elseif(CLR_CMAKE_TARGET_FREEBSD)`. In that branch, the `set(BSD_REGS_STYLE \"((reg).r_##rr)\")` has to be different for amd64 and arm64. For arm64, it needs to be `set(BSD_REGS_STYLE \"((reg).rr)\")`, because the naming convention of the registers is different there. So it should be:\r\n```cmake\r\nif (CLR_CMAKE_HOST_ARCH_AMD64)\r\n  set(BSD_REGS_STYLE \"((reg).r_##rr)\")\r\nelseif(CLR_CMAKE_HOST_ARCH_ARM64)\r\n  set(BSD_REGS_STYLE \"((reg).rr)\")\r\nelse()\r\n  message(FATAL_ERROR \"Unknown FreeBSD architecture\")\r\nendif()\r\n```\r\n",
                                           "updatedAt":  "2022-06-28T21:46:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Fsov7",
                                           "createdAt":  "2022-06-28T22:04:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sec",
                                           "body":  "Thanks, will try that  - any idea what about missing MCREG_Pc and MCREG_Fp - can\u0027t see those inside ucontext struct (or the name is not close to that) ?",
                                           "updatedAt":  "2022-06-28T22:04:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FszBZ",
                                           "createdAt":  "2022-06-28T23:03:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Ah, sorry, the Fp is X29, so it should be\r\n```c++\r\n#define MCREG_Fp(mc)      (mc.mc_gpregs.gp_x[29])\r\n```\r\nAnd the MCREG_Pc - hmm, that\u0027s strange. I can see that there is gp_lr and gp_elr. I think that maybe the gp_elr is in fact the Pc.\r\n\r\nAlso related to the x29 above, for the most recent change I\u0027ve suggested, this is wrong:\r\n```c++\r\n#define BSDREG_X29(reg) BSD_REGS_STYLE(reg,X[29],x[29])\r\n#define BSDREG_Fp(reg) BSD_REGS_STYLE(reg,Fp,fp)\r\n```\r\nIt should be just\r\n```c++\r\n#define BSDREG_Fp(reg) BSD_REGS_STYLE(reg,X[29],x[29])\r\n```",
                                           "updatedAt":  "2022-06-28T23:03:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Ftiyf",
                                           "createdAt":  "2022-06-29T06:00:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Thefrank",
                                           "body":  "With everything so far:\r\n[freebsd_arm_patch.txt](https://github.com/dotnet/runtime/files/9007648/freebsd_arm_patch.txt)\r\n\r\n```\r\n/home/frank/runtime/src/coreclr/pal/src/thread/context.cpp:339:9: error: no member named \u0027pc\u0027 in \u0027reg\u0027\r\n        ASSIGN_ALL_REGS\r\n        ^~~~~~~~~~~~~~~\r\n/home/frank/runtime/src/coreclr/pal/src/thread/context.cpp:286:9: note: expanded from macro \u0027ASSIGN_ALL_REGS\u0027\r\n        ASSIGN_CONTROL_REGS \\\r\n        ^~~~~~~~~~~~~~~~~~~\r\n/home/frank/runtime/src/coreclr/pal/src/thread/context.cpp:141:9: note: expanded from macro \u0027ASSIGN_CONTROL_REGS\u0027\r\n        ASSIGN_REG(Pc)\r\n        ^~~~~~~~~~~~~~\r\n/home/frank/runtime/src/coreclr/pal/src/thread/context.cpp:333:62: note: expanded from macro \u0027ASSIGN_REG\u0027\r\n#define ASSIGN_REG(reg) MCREG_##reg(registers.uc_mcontext) = BSDREG_##reg(ptrace_registers);\r\n                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\u003cscratch space\u003e:310:1: note: expanded from here\r\nBSDREG_Pc\r\n^\r\n/home/frank/runtime/src/coreclr/pal/src/include/pal/context.h:1020:46: note: expanded from macro \u0027BSDREG_Pc\u0027\r\n#define BSDREG_Pc(reg) BSD_REGS_STYLE(reg,Pc,pc)\r\n                       ~~~~~~~~~~~~~~~~~~~~~~^~~\r\n/home/frank/runtime/artifacts/obj/coreclr/FreeBSD.arm64.Debug/pal/src/config.h:158:44: note: expanded from macro \u0027BSD_REGS_STYLE\u0027\r\n#define BSD_REGS_STYLE(reg, RR, rr) ((reg).rr)\r\n                                     ~~~~~ ^\r\n/home/frank/runtime/src/coreclr/pal/src/thread/context.cpp:491:13: error: no member named \u0027pc\u0027 in \u0027reg\u0027\r\n            ASSIGN_CONTROL_REGS\r\n            ^~~~~~~~~~~~~~~~~~~\r\n/home/frank/runtime/src/coreclr/pal/src/thread/context.cpp:141:9: note: expanded from macro \u0027ASSIGN_CONTROL_REGS\u0027\r\n        ASSIGN_REG(Pc)\r\n        ^~~~~~~~~~~~~~\r\n/home/frank/runtime/src/coreclr/pal/src/thread/context.cpp:483:25: note: expanded from macro \u0027ASSIGN_REG\u0027\r\n#define ASSIGN_REG(reg) BSDREG_##reg(ptrace_registers) = lpContext-\u003ereg;\r\n                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\u003cscratch space\u003e:385:1: note: expanded from here\r\nBSDREG_Pc\r\n^\r\n/home/frank/runtime/src/coreclr/pal/src/include/pal/context.h:1020:46: note: expanded from macro \u0027BSDREG_Pc\u0027\r\n#define BSDREG_Pc(reg) BSD_REGS_STYLE(reg,Pc,pc)\r\n                       ~~~~~~~~~~~~~~~~~~~~~~^~~\r\n/home/frank/runtime/artifacts/obj/coreclr/FreeBSD.arm64.Debug/pal/src/config.h:158:44: note: expanded from macro \u0027BSD_REGS_STYLE\u0027\r\n#define BSD_REGS_STYLE(reg, RR, rr) ((reg).rr)\r\n                                     ~~~~~ ^\r\n/home/frank/runtime/src/coreclr/pal/src/thread/context.cpp:600:9: error: unknown type name \u0027fpsimd_context\u0027\r\n        fpsimd_context* fp = GetNativeSigSimdContext(native);\r\n        ^\r\n/home/frank/runtime/src/coreclr/pal/src/thread/context.cpp:744:15: error: unknown type name \u0027fpsimd_context\u0027\r\n        const fpsimd_context* fp = GetConstNativeSigSimdContext(native);\r\n              ^\r\n4 errors generated.\r\n```\r\n(Note: using Ubuntu 18.04 with FreeBSD AARCH64 crossroot)",
                                           "updatedAt":  "2022-06-29T06:00:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Ft_3W",
                                           "createdAt":  "2022-06-29T08:28:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Ok, sounds like again elr vs pc.\r\nSo can you please make this change?:\r\n```c++\r\n#define BSDREG_Pc(reg) BSD_REGS_STYLE(reg,Elr,elr)\r\n```\r\n\r\nLast thing is the floating point context. In context.cpp at line 743, we\u0027ll need to add before the `#else`:\r\n```c++\r\n#elif TARGET_FREEBSD\r\n        const struct fpregs* fp = GetConstNativeSigSimdContext(native);\r\n        if (fp)\r\n        {\r\n            lpContext-\u003eFpsr = fp-\u003efp_sr;\r\n            lpContext-\u003eFpcr = fp-\u003efp_cr;\r\n            for (int i = 0; i \u003c 32; i++)\r\n            {\r\n                lpContext-\u003eV[i] = *(NEON128*) \u0026fp-\u003eq[i];\r\n            }\r\n        }\r\n```\r\nSimilarly at line 599, we need to add before the `#else`:\r\n```c++\r\n#elif TARGET_FREEBSD\r\n        struct fpregs* fp = GetNativeSigSimdContext(native);\r\n        if (fp)\r\n        {\r\n            fp-\u003efp_sr = lpContext-\u003eFpsr;\r\n            fp-\u003efp_cr = lpContext-\u003eFpcr;\r\n            for (int i = 0; i \u003c 32; i++)\r\n            {\r\n                *(NEON128*) \u0026fp-\u003eq[i] = lpContext-\u003eV[i];\r\n            }\r\n        }\r\n```",
                                           "updatedAt":  "2022-06-29T08:28:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FvVxt",
                                           "createdAt":  "2022-06-29T14:15:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Thefrank",
                                           "body":  "Including above code:\r\n```\r\n/home/frank/runtime/src/coreclr/pal/src/thread/context.cpp:607:34: error: no member named \u0027q\u0027 in \u0027fpregs\u0027\r\n                *(NEON128*) \u0026fp-\u003eq[i] = lpContext-\u003eV[i];\r\n                             ~~  ^\r\n/home/frank/runtime/src/coreclr/pal/src/thread/context.cpp:762:52: error: no member named \u0027q\u0027 in \u0027fpregs\u0027\r\n                lpContext-\u003eV[i] = *(NEON128*) \u0026fp-\u003eq[i];\r\n                                               ~~  ^\r\n2 errors generated.\r\n```\r\n\r\nNot sure why its throwing that. `usr/include/machine/ucontext.h` on the crossrootfs has that member and seen (https://github.com/freebsd/freebsd-src/blob/373ffc62c158e52cde86a5b934ab4a51307f9f2e/sys/arm64/include/ucontext.h#L45)",
                                           "updatedAt":  "2022-06-29T14:15:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FvW_k",
                                           "createdAt":  "2022-06-29T14:18:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sec",
                                           "body":  "@janvorli Big thanks for help/pointers. I was able to compile coreclr part (there were some typos to fix):\r\n```\r\nRepo successfully built.\r\nProduct binaries are available at /usr/home/sec/runtime/artifacts/bin/coreclr/FreeBSD.arm64.Debug\r\n```\r\n\r\nAlso I\u0027ve pushed those changes here https://github.com/dotnet/runtime/compare/main...sec:runtime:freebsd.arm64\r\nAny way to test if all those register parts are working correctly (aka how to run the tests for the part that just got compiled) ?\r\n\r\n@Thefrank  I also took few changes from your patch regarding RID\u0027s - thanks :) Would you be able to try to cross compile under Linux? I\u0027ve tried, but on my setup (Linux ARM64) it fails with:\r\n```\r\nScanning dependencies of target coreclrpal\r\n[  1%] Building CXX object pal/src/CMakeFiles/coreclrpal.dir/cruntime/file.cpp.o\r\n[  1%] Building C object libs-native/System.Native/CMakeFiles/System.Native-Static.dir/pal_tcpstate.c.o\r\nIn file included from /home/ubuntu/runtime/src/coreclr/pal/src/cruntime/file.cpp:21:\r\n/home/ubuntu/runtime/src/coreclr/pal/src/include/pal/palinternal.h:158:10: fatal error: \u0027type_traits\u0027 file not found\r\n#include \u003ctype_traits\u003e\r\n         ^~~~~~~~~~~~~\r\n[  1%] Building C object libs-native/System.IO.Compression.Native/CMakeFiles/System.IO.Compression.Native-Static.dir/home/ubuntu/runtime/src/native/external/brotli/enc/backward_references.c.o\r\n[  1%] Building C object libs-native/System.Native/CMakeFiles/System.Native-Static.dir/pal_threading.c.o\r\n1 error generated.\r\nmake[2]: *** [pal/src/CMakeFiles/coreclrpal.dir/build.make:76: pal/src/CMakeFiles/coreclrpal.dir/cruntime/file.cpp.o] Error 1\r\nmake[1]: *** [CMakeFiles/Makefile2:2020: pal/src/CMakeFiles/coreclrpal.dir/all] Error 2\r\nmake[1]: *** Waiting for unfinished jobs....\r\n```\r\n\r\nAlso if you\u0027ll take my branch, those can also be needed - don\u0027t know if those are needed or it\u0027s just my setup:\r\n```diff\r\ndiff --git a/eng/common/cross/toolchain.cmake b/eng/common/cross/toolchain.cmake\r\nindex d5dfc13504b..478029410b7 100644\r\n--- a/eng/common/cross/toolchain.cmake\r\n+++ b/eng/common/cross/toolchain.cmake\r\n@@ -133,7 +133,11 @@ elseif(FREEBSD)\r\n     set(CMAKE_CXX_COMPILER_TARGET ${triple})\r\n     set(CMAKE_ASM_COMPILER_TARGET ${triple})\r\n     set(CMAKE_SYSROOT \"${CROSS_ROOTFS}\")\r\n-    set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -fuse-ld=lld\")\r\n+    if(CLR_CMAKE_HOST_OS STREQUAL FreeBSD)\r\n+      set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -fuse-ld=lld\")\r\n+    else()\r\n+      set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -fuse-ld=lld -stdlib=libc++ -Qunused-arguments\")\r\n+    endif()\r\n     set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -fuse-ld=lld\")\r\n     set(CMAKE_MODULE_LINKER_FLAGS \"${CMAKE_MODULE_LINKER_FLAGS} -fuse-ld=lld\")\r\n elseif(ILLUMOS)\r\ndiff --git a/eng/native/configuretools.cmake b/eng/native/configuretools.cmake\r\nindex 6697524c659..b44bcc3417c 100644\r\n--- a/eng/native/configuretools.cmake\r\n+++ b/eng/native/configuretools.cmake\r\n@@ -54,7 +54,11 @@ if(NOT WIN32 AND NOT CLR_CMAKE_TARGET_BROWSER)\r\n       set(TOOLSET_PREFIX ${ANDROID_TOOLCHAIN_PREFIX})\r\n     elseif(CMAKE_CROSSCOMPILING AND NOT DEFINED CLR_CROSS_COMPONENTS_BUILD AND\r\n         CMAKE_SYSTEM_PROCESSOR MATCHES \"^(armv8l|armv7l|armv6l|aarch64|arm|s390x|ppc64le)$\")\r\n-      set(TOOLSET_PREFIX \"${TOOLCHAIN}-\")\r\n+      if(FREEBSD)\r\n+        set(TOOLSET_PREFIX \"llvm-\")\r\n+      else()\r\n+        set(TOOLSET_PREFIX \"${TOOLCHAIN}-\")\r\n+      endif()\r\n     else()\r\n       set(TOOLSET_PREFIX \"\")\r\n     endif()\r\n```\r\n\r\nWhat should be next steps to get full SDK - as under FreeBSD ARM64 I don\u0027t have bootstrapped one, I think I will move to AMD64 FreeBSD and try there to cross compile?\r\n\r\nedit: @Thefrank for the error, it\u0027s `fp_q` and also sorry I wrongly tagged @wfurt :)\r\n\r\nedit 2: cross build under FreeBSD is going well... does this mean I will have working SDK on FreeBSD-arm64? 🤞 ",
                                           "updatedAt":  "2022-06-29T15:08:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FvfN3",
                                           "createdAt":  "2022-06-29T14:46:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@sec I was happy to help. As for testing whether these changes are correct, running coreclr tests is the best way. These code paths are exercised by exception handling.\r\nOn the target, you can build all coreclr tests (in `checked` flavor, which means mostly optimized code, but including asserts in PAL / runtime) using\r\n```sh\r\nsrc/tests/build.sh checked -priority1\r\n```\r\n\r\n(Please note that you have to have the runtime clr+libs part built there before building the tests.)\r\n\r\nAnd then run them using\r\n```sh\r\nsrc/tests/run.sh checked\r\n```\r\n",
                                           "updatedAt":  "2022-06-29T14:46:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FvygC",
                                           "createdAt":  "2022-06-29T15:49:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sec",
                                           "body":  "\r\nHm, not that easy @janvorli :) While doing crosscompile under FreeBSD-amd64, using command\r\n`ROOTFS_DIR=/home/sec/arm64_rootfs eng/build.sh -ci -c Debug -cross -os FreeBSD -a arm64 /p:IsEligibleForNgenOptimization=false -subset Clr.Native+Host.Native` it fails after soem time:\r\n\r\n```\r\n  Repo successfully built.\r\n  Product binaries are available at /usr/home/sec/runtime/artifacts/bin/coreclr/FreeBSD.arm64.Debug\r\n  Executing \"/usr/home/sec/runtime/src/coreclr/build-runtime.sh\" -arm64 -cmakeargs \"-DCLR_CROSS_COMPONENTS_BUILD=1\" -debug -ci -os FreeBSD -hostarch x64 -component crosscomponents\r\n  Commencing CoreCLR Repo build\r\n  __DistroRid: freebsd-arm64\r\n  Setting up directories for build\r\n  Checking prerequisites...\r\n  Commencing build of \"  crosscomponents \" target in \"CoreCLR component\" for FreeBSD.arm64.Debug in /usr/home/sec/runtime/artifacts/obj/coreclr/FreeBSD.arm64.Debug/x64\r\n  Invoking \"/usr/home/sec/runtime/eng/native/gen-buildsys.sh\" \"/usr/home/sec/runtime/src/coreclr\" \"/usr/home/sec/runtime/artifacts/obj/coreclr/FreeBSD.arm64.Debug/x64\" x64 clang Debug \"\"  -DCLR_CMAKE_TARGET_ARCH=arm64 -DCLR_CMAKE_PGO_INSTRUMENT=0 -DCLR_CMAKE_OPTDATA_PATH= -DCLR_CMAKE_PGO_OPTIMIZE=0 -DFEATURE_DISTRO_AGNOSTIC_SSL=1 -DCLR_CROSS_COMPONENTS_BUILD=1\r\n  /usr/home/sec/runtime/artifacts/obj/coreclr/FreeBSD.arm64.Debug/x64 /usr/home/sec/runtime/src/coreclr\r\n  Not searching for unused variables given on the command line.\r\n  -- The C compiler identification is Clang 10.0.1\r\n  -- The CXX compiler identification is Clang 10.0.1\r\n\r\n...\r\n\r\n  [  2%] Linking CXX static library libgcinfo_universal_arm64.a\r\n  In file included from /usr/home/sec/runtime/src/coreclr/pal/src/exception/seh.cpp:407:\r\n  In file included from /usr/home/sec/runtime/src/coreclr/pal/src/exception/seh-unwind.cpp:34:\r\n  /home/sec/arm64_rootfs/usr/local/include/libunwind.h:25:11: fatal error: \u0027libunwind-x86_64.h\u0027 file not found\r\n  # include \"libunwind-x86_64.h\"\r\n            ^~~~~~~~~~~~~~~~~~~~\r\n  [  2%] Built target gcinfo_universal_arm64\r\n  [  2%] Building CXX object pal/src/CMakeFiles/coreclrpal.dir/file/directory.cpp.o\r\n  1 error generated.\r\n  --- pal/src/CMakeFiles/coreclrpal.dir/exception/seh.cpp.o ---\r\n  *** [pal/src/CMakeFiles/coreclrpal.dir/exception/seh.cpp.o] Error code 1\r\n\r\n  make[3]: stopped in /usr/home/sec/runtime/artifacts/obj/coreclr/FreeBSD.arm64.Debug/x64\r\n  --- CMakeFiles/crosscomponents.dir/rule ---\r\n  *** [CMakeFiles/crosscomponents.dir/rule] Error code 6\r\n\r\n  make[1]: stopped in /usr/home/sec/runtime/artifacts/obj/coreclr/FreeBSD.arm64.Debug/x64\r\n  1 error\r\n\r\n  make[1]: stopped in /usr/home/sec/runtime/artifacts/obj/coreclr/FreeBSD.arm64.Debug/x64\r\n  *** [crosscomponents] Error code 2\r\n\r\n  make: stopped in /usr/home/sec/runtime/artifacts/obj/coreclr/FreeBSD.arm64.Debug/x64\r\n\r\n  make: stopped in /usr/home/sec/runtime/artifacts/obj/coreclr/FreeBSD.arm64.Debug/x64\r\n  1 error\r\n  /usr/home/sec/runtime/src/coreclr\r\n```\r\n\r\nWhat\u0027s going on in here? @Thefrank how\u0027s your Linux crossbuild?",
                                           "updatedAt":  "2022-06-29T15:49:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Fv0jT",
                                           "createdAt":  "2022-06-29T15:55:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "The cross components that are failing to build are compiled for x64, so they should be built on the host without the rootfs usage. It seems like there is some problem causing that the rootfs is still being used.\r\n",
                                           "updatedAt":  "2022-06-29T15:55:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FwgvF",
                                           "createdAt":  "2022-06-29T18:27:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Thefrank",
                                           "body":  "\r\nSo for my Ubuntu 18.04 AMD64 -\u003e FreeBSD AARCH64 an old bug has presented itself:\r\n[edit: `ROOTFS_DIR=/home/frank/freebsdarm/ ./src/coreclr/build-runtime.sh -arm64 --clang11 -cross -os FreeBSD`]\r\n\r\n```\r\n/home/frank/runtime/src/coreclr/debug/daccess/daccess.cpp:6996:38: error: invalid suffix \u0027x\u0027 on integer constant\r\n    *dacTableAddress = baseAddress + DAC_TABLE_RVA;\r\n                                     ^\r\n/home/frank/runtime/artifacts/obj/coreclr/FreeBSD.arm64.Debug/inc/dactablerva.h:1:24: note: expanded from macro \u0027DAC_TABLE_RVA\u0027\r\n#define DAC_TABLE_RVA 0x          c06bb8\r\n                       ^\r\n1 error generated.\r\n```\r\nPreviously under net6, this could be worked around in `eng/native/gen-buildsys.sh`\r\n```diff\r\ndiff --git a/eng/native/gen-buildsys.sh b/eng/native/gen-buildsys.sh\r\nindex bf04c26f2b1..7d8793dd92c 100755\r\n--- a/eng/native/gen-buildsys.sh\r\n+++ b/eng/native/gen-buildsys.sh\r\n@@ -97,7 +97,7 @@ if [[ \"$build_arch\" == \"wasm\" ]]; then\r\n     cmake_command=\"emcmake $cmake_command\"\r\n fi\r\n\r\n-cmake_args_to_cache=\"$scan_build\\n$SCAN_BUILD_COMMAND\\n$generator\\n$__UnprocessedCMakeArgs\"\r\n+cmake_args_to_cache=$(printf \"$scan_build${SCAN_BUILD_COMMAND:+ }${SCAN_BUILD_COMMAND} $generator $__UnprocessedCMakeArgs\")\r\n cmake_args_cache_file=\"$2/cmake_cmd_line.txt\"\r\n if [[ -z \"$__ConfigureOnly\" ]]; then\r\n     if [[ -e \"$cmake_args_cache_file\" ]]; then\r\n```\r\nThis whole codeblock was removed in https://github.com/dotnet/runtime/commit/d22aceff4b4b83672cfaaab92d9977445213f9f5 so this hacky-workaround won\u0027t work.",
                                           "updatedAt":  "2022-06-29T18:27:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Fwive",
                                           "createdAt":  "2022-06-29T18:34:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "The contents of the dactablerva.h is generated by this script:\r\nhttps://github.com/dotnet/runtime/blob/main/src/coreclr/pal/tools/gen-dactable-rva.sh\r\nSounds like this generates the extra spaces, so we can fix it there:\r\nhttps://github.com/dotnet/runtime/blob/879f201ceff095ff59a1f6d2373cee871d7aa102/src/coreclr/pal/tools/gen-dactable-rva.sh#L18",
                                           "updatedAt":  "2022-06-29T18:34:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FxYiT",
                                           "createdAt":  "2022-06-29T22:57:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sec",
                                           "body":  "@janvorli About that crosscomponents compile issue... Looking at the command `\"/usr/home/sec/runtime/src/coreclr/build-runtime.sh\" -arm64 -cmakeargs \"-DCLR_CROSS_COMPONENTS_BUILD=1\" -debug -ci -os FreeBSD -hostarch x64 -component crosscomponents` - there\u0027s no `-cross` so it shouldn\u0027t use cross fs, but it\u0027s using, so looks like it\u0027s env thing - anyway - if I run the command directly it fail with something more harder to fix (hope not):\r\n```\r\nConsolidate compiler generated dependencies of target cee_wks_obj\r\n[ 21%] Building ASM object vm/wks/CMakeFiles/cee_wks_core.dir/__/arm64/asmhelpers.S.o\r\n[ 21%] Building CXX object vm/wks/CMakeFiles/cee_wks_obj.dir/__/codeman.cpp.o\r\n[ 21%] Building CXX object pal/src/CMakeFiles/coreclrpal.dir/map/map.cpp.o\r\n/usr/home/sec/runtime/src/coreclr/vm/arm64/asmhelpers.S:9:5: error: unknown use of instruction mnemonic without a size suffix\r\n    mov x0, lr\r\n    ^\r\n/usr/home/sec/runtime/src/coreclr/vm/arm64/asmhelpers.S:10:5: error: unknown use of instruction mnemonic without a size suffix\r\n    ret lr\r\n    ^\r\n/usr/home/sec/runtime/src/coreclr/vm/arm64/asmhelpers.S:15:5: error: unknown use of instruction mnemonic without a size suffix\r\n    mov x0, sp\r\n    ^\r\n/usr/home/sec/runtime/src/coreclr/vm/arm64/asmhelpers.S:16:5: error: unknown use of instruction mnemonic without a size suffix\r\n    ret lr\r\n    ^\r\n/usr/home/sec/runtime/src/coreclr/vm/arm64/asmhelpers.S:21:5: error: invalid instruction mnemonic \u0027mrs\u0027\r\n    mrs x0, dczid_el0\r\n    ^~~\r\n/usr/home/sec/runtime/src/coreclr/vm/arm64/asmhelpers.S:22:5: error: unknown use of instruction mnemonic without a size suffix\r\n    and x0, x0, 31\r\n    ^\r\n/usr/home/sec/runtime/src/coreclr/vm/arm64/asmhelpers.S:23:5: error: unknown use of instruction mnemonic without a size suffix\r\n    ret lr\r\n    ^\r\n/usr/home/sec/runtime/src/coreclr/vm/arm64/asmhelpers.S:32:13: error: unknown token in expression\r\n    mov w1, #0\r\n            ^\r\n/usr/home/sec/runtime/src/coreclr/vm/arm64/asmhelpers.S:33:16: error: expected \u0027]\u0027 in brackets expression\r\n    str w1, [x0, #0xc0]\r\n               ^\r\n/usr/home/sec/runtime/src/coreclr/vm/arm64/asmhelpers.S:35:16: error: expected \u0027]\u0027 in brackets expression\r\n    str lr, [x0, #((0xc0 +8)+8)]\r\n               ^\r\n/usr/home/sec/runtime/src/coreclr/vm/arm64/asmhelpers.S:38:5: error: unknown use of instruction mnemonic without a size suffix\r\n    mov x1, sp\r\n    ^\r\n/usr/home/sec/runtime/src/coreclr/vm/arm64/asmhelpers.S:39:16: error: expected \u0027]\u0027 in brackets expression\r\n    str x1, [x0, #(0xc0 +8)]\r\n               ^\r\n/usr/home/sec/runtime/src/coreclr/vm/arm64/asmhelpers.S:42:17: error: unknown token in expression\r\n    add x1, x0, #0x0\r\n\r\n... a lot more of those errors ...\r\n```\r\n\r\nedit: running `./src/coreclr/build-runtime.sh -arm64 -hostarch arm64 -component crosscomponents -cmakeargs -DCLR_CROSS_COMPONENTS_BUILD=1` on FreeBSD-arm64 fail with\r\n```\r\nConsolidate compiler generated dependencies of target coreclr\r\n[ 94%] Linking CXX shared library libcoreclr.so\r\nld.lld: error: unable to find library -lSystem.Globalization.Native-Static\r\nclang-14: error: linker command failed with exit code 1 (use -v to see invocation)\r\n--- dlls/mscoree/coreclr/libcoreclr.so ---\r\n*** [dlls/mscoree/coreclr/libcoreclr.so] Error code 1\r\n```\r\n\r\nAlbo native libs compile fine under ARM64 host, but executing `./src/coreclr/build-runtime.sh` fail with:\r\n```\r\n[ 94%] Linking CXX shared library libcoreclr.so\r\nld.lld: error: unable to find library -lSystem.Globalization.Native-Static\r\n[ 94%] Building CXX object jit/CMakeFiles/clrjit_win_x86_arm64.dir/typeinfo.cpp.o\r\nclang-14: error: linker command failed with exit code 1 (use -v to see invocation)\r\n```\r\nand\r\n```\r\nsec@amper:~/runtime % ls artifacts/bin/native/FreeBSD-arm64-Debug/\r\n./                                                     libSystem.IO.Compression.Native.so.dbg                 libSystem.Net.Security.Native.a\r\n../                                                    libSystem.IO.Ports.Native.a                            libSystem.Net.Security.Native.so*\r\nlibSystem.Globalization.Native.a                       libSystem.IO.Ports.Native.so*                          libSystem.Net.Security.Native.so.dbg\r\nlibSystem.Globalization.Native.so*                     libSystem.IO.Ports.Native.so.dbg                       libSystem.Security.Cryptography.Native.OpenSsl.a\r\nlibSystem.Globalization.Native.so.dbg                  libSystem.Native.a                                     libSystem.Security.Cryptography.Native.OpenSsl.so*\r\nlibSystem.IO.Compression.Native.a                      libSystem.Native.so*                                   libSystem.Security.Cryptography.Native.OpenSsl.so.dbg\r\nlibSystem.IO.Compression.Native.so*                    libSystem.Native.so.dbg\r\n```\r\n\r\nedit: trying to build those components under Linux is working fine - maybe this is something wrong with cmakefiles def\u0027s ? :/",
                                           "updatedAt":  "2022-06-30T00:31:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FxqrJ",
                                           "createdAt":  "2022-06-30T01:19:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sec",
                                           "body":  "Tried to use Linux for crosscompile\r\n- RVA is caused I think when you have bash version \u003c5.1 - dirty hack was to remove 016 from the format string in script\r\n- `eng/common/cross/toolchain.cmake` need a fix when setting FreeBSD triple x86_64 -\u003e aarch64\r\n\r\nbut even then it fails, at mono stage, so that\u0027s the far most progress:\r\n```\r\n  [31/351] Building C object mono/mini/CMakeFiles/debugger-objects.dir/__/component/debugger-agent.c.o\r\n  FAILED: mono/mini/CMakeFiles/debugger-objects.dir/__/component/debugger-agent.c.o\r\n  /usr/bin/clang-10 --target=aarch64-unknown-freebsd12 --sysroot=/home/linux/arm64/ -DHAVE_CONFIG_H -I/home/linux/runtime/artifacts/obj -I/home/linux/runtime/src/native -Imono/mini -Imono/mini/../.. -Imono/mini/../../mono/eglib -I/home/linux/runtime/src/mono/mono/mini/../.. -I/home/linux/runtime/src/mono/mono/mini/.. -I/home/linux/runtime/src/mono/mono/mini/../eglib -I/home/linux/runtime/src/mono/mono/mini/../sgen -I/home/linux/runtime/src/mono/mono/mini/../eventpipe -Imono/mini/eventpipe -I/home/linux/runtime/src/native/public/. -std=gnu99 -fno-strict-aliasing -fwrapv -Wall -Wunused -Wmissing-declarations -Wpointer-arith -Wno-cast-qual -Wwrite-strings -Wno-switch -Wno-switch-enum -Wno-unused-value -Wno-attributes -Wno-format-zero-length -Wno-unused-function -Qunused-arguments -Wno-tautological-compare -Wno-parentheses-equality -Wno-self-assign -Wno-return-stack-address -Wno-constant-logical-operand -Wno-zero-length-array -Wno-asm-operand-widths -Wmissing-prototypes -Wstrict-prototypes -Wnested-externs -Werror=return-type -Werror=implicit-function-declaration -Werror=incompatible-pointer-types -g   -g -fPIC -fvisibility=hidden -ffp-contract=off -MD -MT mono/mini/CMakeFiles/debugger-objects.dir/__/component/debugger-agent.c.o -MF mono/mini/CMakeFiles/debugger-objects.dir/__/component/debugger-agent.c.o.d -o mono/mini/CMakeFiles/debugger-objects.dir/__/component/debugger-agent.c.o   -c /home/linux/runtime/src/mono/mono/component/debugger-agent.c\r\n  \u003cinline asm\u003e:1:6: error: invalid token in expression\r\n          int $03\r\n              ^\r\n  \u003cinline asm\u003e:1:6: error: invalid operand\r\n          int $03\r\n              ^\r\n  2 errors generated.\r\n  ninja: build stopped: subcommand failed.\r\n/home/linux/runtime/src/mono/mono.proj(541,5): error MSB3073: The command \"TARGET_BUILD_ARCH=arm64 PKG_CONFIG_PATH=/home/linux/arm64//usr/lib/aarch64-linux-gnu/pkgconfig TARGET_BUILD_ARCH=x64 cmake --build . --target install --config Debug\" exited with code 1.\r\n##vso[task.logissue type=error;sourcepath=/home/linux/runtime/src/mono/mono.proj;linenumber=541;columnnumber=5;code=MSB3073;](NETCORE_ENGINEERING_TELEMETRY=Build) The command \"TARGET_BUILD_ARCH=arm64 PKG_CONFIG_PATH=/home/linux/arm64//usr/lib/aarch64-linux-gnu/pkgconfig TARGET_BUILD_ARCH=x64 cmake --build . --target install --config Debug\" exited with code 1.\r\n\r\nBuild FAILED.\r\n\r\n/home/linux/runtime/src/mono/mono.proj(541,5): error MSB3073: The command \"TARGET_BUILD_ARCH=arm64 PKG_CONFIG_PATH=/home/linux/arm64//usr/lib/aarch64-linux-gnu/pkgconfig TARGET_BUILD_ARCH=x64 cmake --build . --target install --config Debug\" exited with code 1.\r\n    0 Warning(s)\r\n    1 Error(s)\r\n```\r\n\r\nCommands I used:\r\n- `ROOTFS_DIR=/home/linux/arm64/ ./eng/build.sh -ci -c Debug -cross -os FreeBSD -a arm64 /p:IsEligibleForNgenOptimization=false -subset Clr.Native+Host.Native` - compile fine\r\n- `ROOTFS_DIR=/home/linux/arm64/ ./eng/build.sh -ci -c Debug -cross -os FreeBSD -a arm64 /p:IsEligibleForNgenOptimization=false /p:AppHostSourcePath=/home/linux/runtime/artifacts/obj/freebsd-arm64.Debug/apphost/standalone/apphost` - failed\r\n",
                                           "updatedAt":  "2022-06-30T01:19:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Fx32N",
                                           "createdAt":  "2022-06-30T03:11:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Thefrank",
                                           "body":  "\r\n\u003e * RVA is caused I think when you have bash version \u003c5.1 - dirty hack was to remove 016 from the format string in script\r\n```\r\nfrank@buildbot:~/runtime$ bash --version\r\nGNU bash, version 5.0.17(1)-release (x86_64-pc-linux-gnu)\r\n```\r\nO.K. /sigh/\r\nremoving that deleting the old `artifacts/obj/coreclr/FreeBSD.arm64.Debug/inc/dactablerva.h` and rerunning finished!\r\nthe new file contained `#define DAC_TABLE_RVA 0xc06bb8`\r\n```\r\nRepo successfully built.\r\nProduct binaries are available at /home/frank/runtime/artifacts/bin/coreclr/FreeBSD.arm64.Debug\r\n```\r\nIt also makes it past the cross components but runs into the same issue for mono. \r\n\r\nWhich is interesting because...FreeBSD doesn\u0027t have pkg-config as a part of the base OS. It\u0027s in ports (as `pkgconf`). That path looks like it gets added from the mono.proj",
                                           "updatedAt":  "2022-06-30T03:11:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Fx8fb",
                                           "createdAt":  "2022-06-30T03:54:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Thefrank",
                                           "body":  "TOP EDIT: almost forgot to give credit to @janvorli for all the help\r\nIt\u0027s built!\r\n```\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:43:38.40\r\n```\r\nI just have no way to test it as...I don\u0027t have any ARM64 hardware sitting around. Posting patch + binaries shortly\r\n\r\nEDIT1:\r\n[freebsd_arm_patch.txt](https://github.com/dotnet/runtime/files/9016262/freebsd_arm_patch.txt)\r\n\r\nEDIT2: https://github.com/Thefrank/dotnet-freebsd-crossbuild/releases/tag/V7.0-ARM64-EXPERIMENTAL\r\n\r\nEDIT3: build command `ROOTFS_DIR=/home/frank/freebsd13arm/ ./build.sh -a arm64 --clang11 -cross -os FreeBSD`\r\n\r\nEDIT4: Tomorrow ill look into ASPNET and Installer, both of which should be much easier than runtime",
                                           "updatedAt":  "2022-06-30T06:09:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FziS_",
                                           "createdAt":  "2022-06-30T12:06:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sec",
                                           "body":  "@Thefrank @janvorli \r\n\r\nI was wrong about RVa issue - I have same version of bash and it format diffrently - but made a fix for that - https://github.com/sec/runtime/commit/1a6d28850f973de8a0713e785996f656389b27f8\r\n\r\nAlso all the other fixes (with some not needed removed) are integrated into my branch - would it be feasible to make PR for that at this stage @wfurt ?\r\n\r\nThanks to last mono fix - I was also able to crosscompile Linux x64 -\u003e FreeBSD arm64\r\n\r\nLinux arm64 -\u003e FreeBSD arm64 - also fine, with small patch (**edit: looks it\u0027s no longer need, maybe becuase clang11 was used, but I will leave it here for future reference anyway**):\r\n```diff\r\ndiff --git a/eng/common/cross/toolchain.cmake b/eng/common/cross/toolchain.cmake\r\nindex d5dfc13504b..478029410b7 100644\r\n--- a/eng/common/cross/toolchain.cmake\r\n+++ b/eng/common/cross/toolchain.cmake\r\n@@ -133,7 +133,11 @@ elseif(FREEBSD)\r\n     set(CMAKE_CXX_COMPILER_TARGET ${triple})\r\n     set(CMAKE_ASM_COMPILER_TARGET ${triple})\r\n     set(CMAKE_SYSROOT \"${CROSS_ROOTFS}\")\r\n-    set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -fuse-ld=lld\")\r\n+    if(CLR_CMAKE_HOST_OS STREQUAL FreeBSD)\r\n+      set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -fuse-ld=lld\")\r\n+    else()\r\n+      set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -fuse-ld=lld -stdlib=libc++ -Qunused-arguments\")\r\n+    endif()\r\n     set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -fuse-ld=lld\")\r\n     set(CMAKE_MODULE_LINKER_FLAGS \"${CMAKE_MODULE_LINKER_FLAGS} -fuse-ld=lld\")\r\n elseif(ILLUMOS)\r\n```\r\n\r\nFreeBSD x64 -\u003e FreeBSD arm64 - two issues:\r\n- on first run when it try to build `crosscomponents` - looks like crossrootfs is used\r\n- on manual re-run of the command used to build those - there are some errors in `/tmp/asmhelpers-8f0fb3.s` (more above)\r\n\r\nFreeBSD arm64:\r\n- `./src/coreclr/build-runtime.sh` - ok\r\n- `./src/native/libs/build-native.sh` - ok\r\n- don\u0027t know if building mono is possible without working runtime first (found https://github.com/dotnet/runtime/blob/main/docs/workflow/building/libraries/cross-building.md#build-corefx-for-a-new-architecture but it not enough information to me)\r\n\r\nNOW, testing runtime under FreeBSD arm64 host...\r\n```\r\n[sec@amper ~]$ ~/dotnet7/dotnet --info\r\n\r\nHost:\r\n  Version:      7.0.0-dev\r\n  Architecture: arm64\r\n  Commit:       N/A\r\n\r\n.NET SDKs installed:\r\n  No SDKs were found.\r\n\r\n.NET runtimes installed:\r\n  Microsoft.NETCore.App 7.0.0-dev [/usr/home/sec/dotnet7/shared/Microsoft.NETCore.App]\r\n\r\nOther architectures found:\r\n  None\r\n\r\nEnvironment variables:\r\n  Not set\r\n\r\nglobal.json file:\r\n  Not found\r\n\r\nLearn more:\r\n  https://aka.ms/dotnet/info\r\n\r\nDownload .NET:\r\n  https://aka.ms/dotnet/download\r\n```\r\n\r\nTried to make simple console app, restore, build, publish, copy to arm64 host, adjust json to use 7.0.0-dev and\r\n```\r\n[sec@amper ~/runtime/console_app]$ ~/dotnet7/dotnet bin/Debug/net6.0/publish/console_app.dll\r\nFailed to create CoreCLR, HRESULT: 0x80004005\r\n```\r\n\r\nAttaching COREHOST trace file - hope it\u0027s something trivial to fix :)\r\n[host.txt](https://github.com/dotnet/runtime/files/9019471/host.txt)\r\n",
                                           "updatedAt":  "2022-06-30T12:06:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5FzjVA",
                                           "createdAt":  "2022-06-30T12:11:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wfurt",
                                           "body":  "yes, I think so @sec.  main branch for 7.0 is still generally open (closing soon). I\u0027m on the road so my capacity is small for next 2-3 weeks.",
                                           "updatedAt":  "2022-06-30T12:11:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5F1Xsz",
                                           "createdAt":  "2022-06-30T19:55:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Thefrank",
                                           "body":  "@sec if run in jail, does the jail have `allow_mlock` on? Does the jail/OS have a defined and writable TMP folder?",
                                           "updatedAt":  "2022-06-30T19:55:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5F1co7",
                                           "createdAt":  "2022-06-30T20:20:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sec",
                                           "body":  "Not running in jail and yes, there\u0027s a writeable /tmp folder.",
                                           "updatedAt":  "2022-06-30T20:20:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5F2CTa",
                                           "createdAt":  "2022-07-01T00:17:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sec",
                                           "body":  "@janvorli any idea on how to debug this problem?",
                                           "updatedAt":  "2022-07-01T00:17:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5F2D7B",
                                           "createdAt":  "2022-07-01T00:30:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Thefrank",
                                           "body":  "`truss` work under ARM64? Might give that a shot",
                                           "updatedAt":  "2022-07-01T00:30:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5F2ESb",
                                           "createdAt":  "2022-07-01T00:34:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sec",
                                           "body":  "@Thefrank tried that already, nothing special, but attaching sample log\r\n[truss_output.txt](https://github.com/dotnet/runtime/files/9024209/truss_output.txt)",
                                           "updatedAt":  "2022-07-01T00:34:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5F6vS9",
                                           "createdAt":  "2022-07-03T07:07:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Thefrank",
                                           "body":  "attempt at full SDK. Still no way to test it:https://github.com/Thefrank/dotnet-freebsd-crossbuild/releases/tag/7.0.100-preview.7.22353.99-freebsd-arm64",
                                           "updatedAt":  "2022-07-03T07:07:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5F7RHr",
                                           "createdAt":  "2022-07-03T20:15:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sec",
                                           "body":  "@Thefrank nice - tried SDK, same result (one thing I notice is no runtime info about FreeBSD host etc., but that\u0027s why it fail right?):\r\n```\r\nsec@amper:~/sdk7 % ./dotnet --info\r\nFailed to create CoreCLR, HRESULT: 0x80004005\r\n\r\nHost:\r\n  Version:      7.0.0-preview.6.22329.5\r\n  Architecture: arm64\r\n  Commit:       c9140d621a\r\n\r\n.NET SDKs installed:\r\n  7.0.100-preview.7.22353.99 [/usr/home/sec/sdk7/sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 7.0.0-preview.7.22351.1 [/usr/home/sec/sdk7/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 7.0.0-preview.6.22329.5 [/usr/home/sec/sdk7/shared/Microsoft.NETCore.App]\r\n\r\nOther architectures found:\r\n  None\r\n\r\nEnvironment variables:\r\n  Not set\r\n\r\nglobal.json file:\r\n  Not found\r\n\r\nLearn more:\r\n  https://aka.ms/dotnet/info\r\n\r\nDownload .NET:\r\n  https://aka.ms/dotnet/download\r\n```\r\n\r\nOutput from SDK7 under x64 host:\r\n```\r\n.NET SDK:\r\n Version:   7.0.100-preview.5.22307.18\r\n Commit:    bd8b088037\r\n\r\nRuntime Environment:\r\n OS Name:     FreeBSD\r\n OS Version:  13\r\n OS Platform: FreeBSD\r\n RID:         freebsd.13-x64\r\n Base Path:   /usr/home/sec/dotnet7/sdk/7.0.100-preview.5.22307.18/\r\n\r\nglobal.json file:\r\n  Not found\r\n\r\nHost:\r\n  Version:      7.0.0-preview.5.22301.12\r\n  Architecture: x64\r\n  Commit:       425fedc0fb\r\n\r\n.NET SDKs installed:\r\n  7.0.100-preview.5.22307.18 [/usr/home/sec/dotnet7/sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 7.0.0-preview.5.22303.8 [/usr/home/sec/dotnet7/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 7.0.0-preview.5.22301.12 [/usr/home/sec/dotnet7/shared/Microsoft.NETCore.App]\r\n```\r\n\r\n@Thefrank could you share the steps/any patches that you used to make this - maybe we could use this to automate x64 builds and publish them on https://github.com/dotnet/runtimelab ?\r\n\r\nDoes anyone have any expierence in troubleshoting root cuase of this CLR fail - maybe something from https://github.com/dotnet/diagnostics will be to good use?",
                                           "updatedAt":  "2022-07-03T20:15:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5F7SPR",
                                           "createdAt":  "2022-07-03T20:48:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Thefrank",
                                           "body":  "\u003e @Thefrank nice - tried SDK, same result (one thing I notice is no runtime info about FreeBSD host etc., but that\u0027s why it fail right?):\r\n\r\nFrom what was posted it does not appear to be making it very far. Now WHY that is happening is beyond me\r\n\r\n\u003e @Thefrank could you share the steps/any patches that you used to make this - maybe we could use this to automate x64 builds and publish them on https://github.com/dotnet/runtimelab ?\r\n\r\nRuntime builds from head with only a quick `sed` patch to make it use a prebuilt SDK and that is how I do nightlies+tests for FreeBSD-x64\r\n\r\nBuilding a WHOLE SDK requires a bit more tweaks but is rather easy from TAG. \r\n\r\nHowever, if you want to build from a random commit, well, that takes a bit more work. For that I usually work backwards; examine what BUILDIDs dotnet/installer wants for dotnet/runtime and dotnet/aspnetcore, reverse them into YYYYMMDD.# format and plug them into the builds first for runtime and second for aspnetcore.\r\n\r\n\r\nEDIT: Does `lldb` provide any insights? Is it even making it to managed code?",
                                           "updatedAt":  "2022-07-03T20:49:58Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5F7Xno",
                                           "createdAt":  "2022-07-03T23:19:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sec",
                                           "body":  "@Thefrank I was rather asking, how to you build e. g. `installer` repo in `cross` mode, as I didn\u0027t saw any swithces just for that (and `--runtime-id freebsd-x64 /p:OSName=freebsd` prepare SDK with correct names, but Linux inside) - but that\u0027s offtopic :)\r\n\r\nAs for `lldb` - not an export on this one, but doesn\u0027t look like it\u0027s getting into managed code - tried to use `corerun` with bogus parameters and it\u0027s throwing the same error before even checking if given file exists.\r\n\r\nedit: I may be wrong, but maybe it\u0027s connected with fact, that cross build from FreeBSD-x64 host fail on cross components stage with some assembler compiler error (but is fine when doing the same from Linux host)?",
                                           "updatedAt":  "2022-07-03T23:24:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5F7gZ5",
                                           "createdAt":  "2022-07-04T01:12:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sec",
                                           "body":  "Had fun with `lldb`, learning at 2am is great :) The code looks like it\u0027s failing when loaded/loading `System.Private.CoreLib` and then going this route:\r\n```\r\n* thread #1, name = \u0027corerun\u0027, stop reason = breakpoint 7.1\r\n    frame #0: 0x0000000041544ce8 libcoreclr.so`Assembly::Init(this=0x0000000040c11650, pamTracker=0x0000ffffffffccf0, pLoaderAllocator=0x0000000000000000) at assembly.cpp:196:53\r\n   193          // manifest modules of dynamic assemblies are always transient\r\n   194          m_pModule = ReflectionModule::Create(this, pPEAssembly, pamTracker, REFEMIT_MANIFEST_MODULE_NAME);\r\n   195      else\r\n-\u003e 196          m_pModule = Module::Create(this, mdFileNil, pPEAssembly, pamTracker);\r\n   197\r\n   198      InterlockedIncrement((LONG*)\u0026g_cAssemblies);\r\n   199\r\n```\r\nafter some steps\r\n```\r\nProcess 25614 stopped\r\n* thread #1, name = \u0027corerun\u0027, stop reason = step over\r\n    frame #0: 0x000000004156461c libcoreclr.so`Module::Initialize(this=0x0000000042224000, pamTracker=0x0000ffffffffccf0, szName=0x0000000000000000) at ceeload.cpp:443:63\r\n   440\r\n   441  #ifdef FEATURE_READYTORUN\r\n   442      m_pNativeImage = NULL;\r\n-\u003e 443      if ((m_pReadyToRunInfo = ReadyToRunInfo::Initialize(this, pamTracker)) != NULL)\r\n   444      {\r\n   445          m_pNativeImage = m_pReadyToRunInfo-\u003eGetNativeImage();\r\n   446          if (m_pNativeImage != NULL)\r\n(lldb)\r\nBEGIN: coreclr_initialize failed - Error: 0x80004005\r\n```\r\n\r\ntime for bed...\r\n\r\nedit: I think final fail is here:\r\n```\r\nProcess 26961 stopped\r\n* thread #1, name = \u0027corerun\u0027, stop reason = step over\r\n    frame #0: 0x000000004172268c libcoreclr.so`ReadyToRunInfo::Initialize(pModule=0x0000000042254000, pamTracker=0x0000ffffffffccf0) at readytoruninfo.cpp:561:9\r\n   558      if (!pLayout-\u003eIsNativeMachineFormat())\r\n   559      {\r\n   560          // For CoreCLR, be strict about disallowing machine mismatches.\r\n-\u003e 561          COMPlusThrowHR(COR_E_BADIMAGEFORMAT);\r\n   562      }\r\n```\r\n\r\nIs this something wrong with cross compiled runtime/sdk ?\r\n\r\nIt\u0027s not `libcoreclr.so` fault for sure\r\n```\r\nsec@amper:~/runtime % file artifacts/bin/coreclr/FreeBSD.arm64.Debug/libcoreclr.so\r\nartifacts/bin/coreclr/FreeBSD.arm64.Debug/libcoreclr.so: ELF 64-bit LSB shared object, ARM aarch64, version 1 (FreeBSD), dynamically linked, for FreeBSD 13.1, BuildID[sha1]=3d30f6f528036a298d342a15af8b3b1e47af6a09, stripped\r\nsec@amper:~/runtime % ldd artifacts/bin/coreclr/FreeBSD.arm64.Debug/libcoreclr.so\r\nartifacts/bin/coreclr/FreeBSD.arm64.Debug/libcoreclr.so:\r\n        libthr.so.3 =\u003e /lib/libthr.so.3 (0x4195e000)\r\n        librt.so.1 =\u003e /usr/lib/librt.so.1 (0x419ba000)\r\n        libunwind-aarch64.so.8 =\u003e /usr/local/lib/libunwind-aarch64.so.8 (0x419ef000)\r\n        libunwind.so.8 =\u003e /usr/local/lib/libunwind.so.8 (0x41a51000)\r\n        libc++.so.1 =\u003e /usr/lib/libc++.so.1 (0x41aae000)\r\n        libcxxrt.so.1 =\u003e /lib/libcxxrt.so.1 (0x41ba9000)\r\n        libm.so.5 =\u003e /lib/libm.so.5 (0x41bf5000)\r\n        libgcc_s.so.1 =\u003e /lib/libgcc_s.so.1 (0x41c63000)\r\n        libc.so.7 =\u003e /lib/libc.so.7 (0x401e5000)\r\n        liblzma.so.5 =\u003e /usr/lib/liblzma.so.5 (0x41ccc000)\r\n        libz.so.6 =\u003e /lib/libz.so.6 (0x41d21000)\r\n        libmd.so.6 =\u003e /lib/libmd.so.6 (0x41d68000)\r\n```\r\n\r\nSo it\u0027s this one that\u0027s faulty?\r\n```\r\nsec@amper:~/runtime % file artifacts/bin/coreclr/FreeBSD.arm64.Debug/System.Private.CoreLib.dll\r\nartifacts/bin/coreclr/FreeBSD.arm64.Debug/System.Private.CoreLib.dll: PE32+ executable (DLL) (console) Mono/.Net assembly, for MS Windows\r\n```\r\n\r\nWhen doing cross build Linux -\u003e FreeBSD arm64, is this ok on Linux host - shouldn\u0027t this be \"freebsd-arm64\" by any chance?\r\n```\r\n./artifacts/bin/coreclr/FreeBSD.arm64.Debug/crossgen2/linux-arm64/System.Private.CoreLib.dll\r\n./artifacts/bin/coreclr/FreeBSD.arm64.Debug/crossgen2/linux-arm64/publish/System.Private.CoreLib.dll\r\n```\r\n\r\nChecking `Microsoft.NETCore.App.Crossgen2.freebsd-arm64.7.0.0-dev.nupkg` there are Linux binaries inside:\r\n```\r\nsec@amper:~/newb/tools % file crossgen2\r\ncrossgen2: ELF 64-bit LSB shared object, ARM aarch64, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux-aarch64.so.1, for GNU/Linux 3.7.0, BuildID[sha1]=725302cc1678f04d8935457644ebd9deeb09f8ab, stripped\r\n\r\nsec@amper:~/newb/tools % file dotnet\r\ndotnet: ELF 64-bit LSB shared object, ARM aarch64, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux-aarch64.so.1, for GNU/Linux 3.7.0, BuildID[sha1]=eb185bf4cb8984561b845c57ea43484c3ed2b40a, stripped\r\n\r\nsec@amper:~/newb/tools % file corerun\r\ncorerun: ELF 64-bit LSB pie executable, ARM aarch64, version 1 (FreeBSD), dynamically linked, interpreter /libexec/ld-elf.so.1, for FreeBSD 13.0 (1300139), FreeBSD-style, BuildID[sha1]=da7462690d3094983f41df3114505547a61835c8, with debug_info, not stripped\r\n\r\n```",
                                           "updatedAt":  "2022-07-04T14:19:54Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5F-Gi2",
                                           "createdAt":  "2022-07-04T14:52:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sec",
                                           "body":  "@Thefrank @janvorli @jkotas Maybe this is silly, but managed to get runtime/SDK to work (at some point at least). What I did was\r\n- took Crossgen2 package built for FreeBSD-x64 (maybe any will work)\r\n- took `System.Private.CoreLib.dll` from cross compiled arm64 runtime/SDK\r\n- run `tools/crossgen2 System.Private.CoreLib.dll --targetarch arm64 --out System.Private.CoreLib.dll.2` on it\r\n- replaced the original with new one\r\n\r\nAnd\r\n```\r\nsec@amper:~/sdk7 % ./dotnet --info\r\n.NET SDK:\r\n Version:   7.0.100-preview.7.22353.99\r\n Commit:    be72bcc21b\r\n\r\nRuntime Environment:\r\n OS Name:     FreeBSD\r\n OS Version:  13\r\n OS Platform: FreeBSD\r\n RID:         freebsd.13-arm64\r\n Base Path:   /usr/home/sec/sdk7/sdk/7.0.100-preview.7.22353.99/\r\n\r\nHost:\r\n  Version:      7.0.0-preview.6.22329.5\r\n  Architecture: arm64\r\n  Commit:       c9140d621a\r\n\r\n.NET SDKs installed:\r\n  7.0.100-preview.7.22353.99 [/usr/home/sec/sdk7/sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 7.0.0-preview.7.22351.1 [/usr/home/sec/sdk7/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 7.0.0-preview.6.22329.5 [/usr/home/sec/sdk7/shared/Microsoft.NETCore.App]\r\n```\r\n\r\nRun simple console app published from Windows host:\r\n```\r\nsec@amper:~/dotnet7 % ./dotnet ~/runtime/console_app/bin/Debug/net6.0/publish/console_app.dll\r\nHello, World!\r\n```\r\n\r\nBut:\r\n```\r\nsec@amper:~/temp % ~/sdk7/dotnet new console\r\nSegmentation fault (core dumped)\r\n```\r\n\r\nMore info:\r\n```\r\nsec@amper:~/temp % lldb14 ~/sdk7/dotnet new console\r\n(lldb) target create \"/home/sec/sdk7/dotnet\"\r\nCurrent executable set to \u0027/home/sec/sdk7/dotnet\u0027 (aarch64).\r\n(lldb) settings set -- target.run-args  \"new\" \"console\"\r\n(lldb) r\r\nProcess 27236 launched: \u0027/home/sec/sdk7/dotnet\u0027 (aarch64)\r\nProcess 27236 stopped\r\n* thread #1, name = \u0027dotnet\u0027, stop reason = signal SIGSEGV: invalid address (fault address: 0x0)\r\n    frame #0: 0x0000000041859f6c libunwind.so.8`___lldb_unnamed_symbol150 + 32\r\nlibunwind.so.8`___lldb_unnamed_symbol150:\r\n-\u003e  0x41859f6c \u003c+32\u003e: ldr    x8, [x1]\r\n    0x41859f70 \u003c+36\u003e: mov    w0, wzr\r\n    0x41859f74 \u003c+40\u003e: str    x8, [x2]\r\n    0x41859f78 \u003c+44\u003e: ldr    x19, [sp, #0x20]\r\n(lldb) bt\r\n* thread #1, name = \u0027dotnet\u0027, stop reason = signal SIGSEGV: invalid address (fault address: 0x0)\r\n  * frame #0: 0x0000000041859f6c libunwind.so.8`___lldb_unnamed_symbol150 + 32\r\n    frame #1: 0x000000004185af70 libunwind.so.8`_ULaarch64_step + 568\r\n    frame #2: 0x000000004178e8ec libcoreclr.so`___lldb_unnamed_symbol14794 + 256\r\n    frame #3: 0x00000000415b29ec libcoreclr.so`___lldb_unnamed_symbol7901 + 256\r\n    frame #4: 0x00000000413f75a0 libcoreclr.so`___lldb_unnamed_symbol2153 + 136\r\n    frame #5: 0x00000000413f7508 libcoreclr.so`___lldb_unnamed_symbol2152 + 28\r\n    frame #6: 0x00000000415b8400 libcoreclr.so`___lldb_unnamed_symbol8017 + 84\r\n    frame #7: 0x00000000415b7db0 libcoreclr.so`___lldb_unnamed_symbol8013 + 752\r\n    frame #8: 0x00000000415b7198 libcoreclr.so`___lldb_unnamed_symbol8011 + 1108\r\n    frame #9: 0x00000000415bb444 libcoreclr.so`___lldb_unnamed_symbol8050 + 336\r\n    frame #10: 0x00000000415bb71c libcoreclr.so`___lldb_unnamed_symbol8051 + 68\r\n    frame #11: 0x0000000041518964 libcoreclr.so`___lldb_unnamed_symbol6091 + 540\r\n```\r\n\r\n@Thefrank makes sense to build SDK in Debug to see where/why it\u0027s SIGSEGV or this is easy to fix now? :)",
                                           "updatedAt":  "2022-07-04T14:54:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5F_UQm",
                                           "createdAt":  "2022-07-04T20:01:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Thefrank",
                                           "body":  "Crossgen2 packages, AFAIK, are no longer generated for FreeBSD as that ability got removed somewhere after net7p3. This is not ideal as those packages are needed for native builds (restore requires it)\r\n\r\nCrossbuilt net7p5 for FreeBSD x64 with the package added back in looks like it generates incorrectly too:\r\n```\r\nShipping/Microsoft.NETCore.App.Crossgen2.freebsd-x64.7.0.0-preview.5.22301.12/tools # ls | xargs file\r\ncoreclr_delegates.h:                               C source, ASCII text\r\ncorerun:                                           ELF 64-bit LSB shared object, x86-64, version 1 (FreeBSD), dynamically linked, interpreter /libexec/ld-elf.so.1, for FreeBSD 12.3, FreeBSD-style, BuildID[sha1]=ea37edd26732ab0d86c7eff56bfd2dc4b97d7de5, with debug_info, not stripped\r\ncrossgen2:                                         ELF 64-bit LSB shared object, x86-64, version 1 (FreeBSD), dynamically linked, interpreter /libexec/ld-elf.so.1, for FreeBSD 12.3, FreeBSD-style, BuildID[sha1]=f2abf1f880cce1b944515bb44ccf8778bd1e0d4d, stripped\r\ndotnet:                                            ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=342e6dc49a1ef7d664ecf66554bd91f12377deb8, stripped\r\nhostfxr.h:                                         C source, ASCII text\r\nlibclrjit_universal_arm_x64.so:                    ELF 64-bit LSB shared object, x86-64, version 1 (FreeBSD), dynamically linked, BuildID[sha1]=5371055af15bb23ddab55f6d56ea05e68c4ec014, stripped\r\nlibclrjit_universal_arm64_x64.so:                  ELF 64-bit LSB shared object, x86-64, version 1 (FreeBSD), dynamically linked, BuildID[sha1]=df1c176a5aedfe127ee1097723e5a9dd1ca0c9d6, stripped\r\nlibclrjit_unix_x64_x64.so:                         ELF 64-bit LSB shared object, x86-64, version 1 (FreeBSD), dynamically linked, BuildID[sha1]=c0d6411b4d9dc86718543182049e390bebcc75c0, stripped\r\nlibclrjit_win_x64_x64.so:                          ELF 64-bit LSB shared object, x86-64, version 1 (FreeBSD), dynamically linked, BuildID[sha1]=c8498128119ad328a63433b0e113bf35a28b67b8, stripped\r\nlibclrjit_win_x86_x64.so:                          ELF 64-bit LSB shared object, x86-64, version 1 (FreeBSD), dynamically linked, BuildID[sha1]=e1ef1e6c1d44175ebe3f2dd1ed7a22bae89dd3ea, stripped\r\nlibclrjit.so:                                      ELF 64-bit LSB shared object, x86-64, version 1 (FreeBSD), dynamically linked, BuildID[sha1]=b3050876013379e1abd2c8ab67a3b649c901550c, stripped\r\nlibcoreclr.so:                                     ELF 64-bit LSB shared object, x86-64, version 1 (FreeBSD), dynamically linked, BuildID[sha1]=beb05fea73aadf25e83d75f7cb06a638becb31bd, stripped\r\nlibhostfxr.a:                                      current ar archive\r\nlibhostfxr.so:                                     ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, BuildID[sha1]=955d0bd7775d52bc8aba0124aa2e6f7b0e059ae1, stripped\r\nlibhostpolicy.so:                                  ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, BuildID[sha1]=bd4f445a772be690487d98d63be8aa0d7013dad0, stripped\r\nlibjitinterface_x64.so:                            ELF 64-bit LSB shared object, x86-64, version 1 (FreeBSD), dynamically linked, BuildID[sha1]=7aca7857d900236e5fd0925419afd2a1510541f5, stripped\r\nlibmscordaccore.so:                                ELF 64-bit LSB shared object, x86-64, version 1 (FreeBSD), dynamically linked, BuildID[sha1]=fae13f6b4f0a887250f6e2f9bbfa986c0b493edd, stripped\r\nlibmscordbi.so:                                    ELF 64-bit LSB shared object, x86-64, version 1 (FreeBSD), dynamically linked, BuildID[sha1]=e07ae986afb11b697f758994cb3dd069fe6cd801, stripped\r\nlibnethost.a:                                      current ar archive\r\nlibnethost.so:                                     ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, BuildID[sha1]=fb0e1694b1521c04c74755a2210c8b8988298f81, stripped\r\nlibSystem.Globalization.Native.a:                  current ar archive\r\nlibSystem.Globalization.Native.so:                 ELF 64-bit LSB shared object, x86-64, version 1 (FreeBSD), dynamically linked, BuildID[sha1]=411160e3995dfc8aa04d8929dc5958ae61e4d6c4, stripped\r\nlibSystem.IO.Compression.Native.a:                 current ar archive\r\nlibSystem.IO.Compression.Native.so:                ELF 64-bit LSB shared object, x86-64, version 1 (FreeBSD), dynamically linked, BuildID[sha1]=e539b4dd805290e3a19c8551ab766cc7d7d0bafd, stripped\r\nlibSystem.IO.Ports.Native.a:                       current ar archive\r\nlibSystem.IO.Ports.Native.so:                      ELF 64-bit LSB shared object, x86-64, version 1 (FreeBSD), dynamically linked, BuildID[sha1]=d41c2ed5987fd9f7ffe8f03c853673dc24f8a397, stripped\r\nlibSystem.Native.a:                                current ar archive\r\nlibSystem.Native.so:                               ELF 64-bit LSB shared object, x86-64, version 1 (FreeBSD), dynamically linked, BuildID[sha1]=e732c3d8b2d37c4584bcd8470f018a1493394bc0, stripped\r\nlibSystem.Net.Security.Native.a:                   current ar archive\r\nlibSystem.Net.Security.Native.so:                  ELF 64-bit LSB shared object, x86-64, version 1 (FreeBSD), dynamically linked, BuildID[sha1]=3ecfe261dd743c77c13bc8ed53a811d1e0c4c6c3, stripped\r\nlibSystem.Security.Cryptography.Native.OpenSsl.a:  current ar archive\r\nlibSystem.Security.Cryptography.Native.OpenSsl.so: ELF 64-bit LSB shared object, x86-64, version 1 (FreeBSD), dynamically linked, BuildID[sha1]=b3f59bd1083874d1c0db7fc528b3c8452d11be21, stripped\r\nnethost.h:                                         C source, ASCII text\r\nsinglefilehost:                                    ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=7d2abe4df7dfc9c4f875865784d606267bc42c77, stripped,\r\n```\r\nnet6RTM (the last crossbuild from that branch I have done) only contains one executable: crossgen2 and that is correctly FreeBSD\r\n\r\nEDIT: did a quick crossbuild from Linux x86_64 -\u003e FreeBSD ARM64. The contents of the Crossgen2 nupkg (and tarball) are just as odd: everything but `dotnet` and `singlefilehost` are FreeBSD  ARM aarch64. Those two are Linux ARM aarch64",
                                           "updatedAt":  "2022-07-04T22:37:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GCESn",
                                           "createdAt":  "2022-07-05T11:23:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sec",
                                           "body":  "Broken `System.Private.CoreLib` those make it work OOTB (for runtime part) - https://github.com/dotnet/runtime/pull/71486/commits/951c92afc499fddb19846bfd108bad5f3a086ae8 and https://github.com/dotnet/runtime/pull/71486/commits/98d39cd008c6160eb2feec60fad712d7b24661c1\r\n\r\nAs for SDK to fail somewhere inside `libunwind` - @Thefrank would you mind doing SDK build in `Debug` or share the steps I can reproduce to crossbuild it myself (so I won\u0027t bug you) ? :)\r\n\r\nAs for those Linux files inside packages - that\u0027s weird, becuase there is FreeBSD version of `singlefilehost` and `dotnet` produced during build, but the Linux one is being packed inside - all of the below have their correct FreeBSD, but are inside `dotnet-crossgen2-7.0.0-dev-freebsd-arm64.tar.gz`:\r\n```\r\n./singlefilehost:                                    ELF 64-bit LSB shared object, ARM aarch64, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux-aarch64.so.1, for GNU/Linux 3.7.0, BuildID[sha1]=000c66b0f0a90e33362b538857a1fe07858d95d2, stripped\r\n./libhostpolicy.so:                                  ELF 64-bit LSB shared object, ARM aarch64, version 1 (SYSV), dynamically linked, BuildID[sha1]=f7f923736c5fa480faec666385f8ae7cb6191905, stripped\r\n./libnethost.so:                                     ELF 64-bit LSB shared object, ARM aarch64, version 1 (SYSV), dynamically linked, BuildID[sha1]=ec8c97ecfbcf5bb77d4fa8a5fcb3e56cb7bc13e4, stripped\r\n./dotnet:                                            ELF 64-bit LSB shared object, ARM aarch64, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux-aarch64.so.1, for GNU/Linux 3.7.0, BuildID[sha1]=eb185bf4cb8984561b845c57ea43484c3ed2b40a, stripped\r\n./libhostfxr.so:                                     ELF 64-bit LSB shared object, ARM aarch64, version 1 (SYSV), dynamically linked, BuildID[sha1]=827719e673ae0b16ade2b80907cf2c39e6ae517a, stripped\r\n```\r\n\r\nAt least `crossgen2` inside is FreeBSD, bad news it doesn\u0027t work:\r\n```\r\nAssert failure(PID 42015 [0x0000a41f], Thread: 105128 [0x19aa8]): pThread\r\n    File: /home/ubuntu/runtime/src/coreclr/vm/threads.inl Line: 43\r\n    Image: /usr/home/sec/temp/cros/crossgen2\r\n\r\nAbort (core dumped)\r\n```",
                                           "updatedAt":  "2022-07-05T11:23:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GEKVI",
                                           "createdAt":  "2022-07-05T21:03:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Thefrank",
                                           "body":  "@sec https://github.com/Thefrank/dotnet-freebsd-crossbuild/releases/tag/7.0.100-preview.7.22355.99-freebsd-arm64\r\n\r\nI don\u0027t mind making the SDKs. This also reminds me that I should update my build script (from the above repo) to allow for arm64 builds.\r\n\r\nFor platforms like FreeBSD, the installer branch is basically a fancy `fetch`+`sed`+`tar`... unless you want to generate native binaries...which we don\u0027t under a crossbuild, as afaik, does not work for FreeBSD.",
                                           "updatedAt":  "2022-07-05T21:03:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GGUGj",
                                           "createdAt":  "2022-07-06T10:33:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sec",
                                           "body":  "@Thefrank Thanks, but can\u0027t find `libcoreclr.so.dbg` anywhere :) (my guess it\u0027s not packed into SDK) - so the backtrace is still unknown.\r\n\r\nMaybe someone more expierenced in this topic could help to debug the issue (something with threads, as crossgen2 fail in there) ? :)",
                                           "updatedAt":  "2022-07-06T10:33:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GHvjY",
                                           "createdAt":  "2022-07-06T16:33:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Thefrank",
                                           "body":  "@sec check [dotnet-runtime-7.0.0-preview.6.22329.5-freebsd-arm64.tar.gz](https://github.com/Thefrank/dotnet-freebsd-crossbuild/releases/download/7.0.100-preview.7.22355.99-freebsd-arm64/dotnet-runtime-7.0.0-preview.6.22329.5-freebsd-arm64.tar.gz)",
                                           "updatedAt":  "2022-07-06T16:33:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GIA0e",
                                           "createdAt":  "2022-07-06T17:44:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "sec",
                                           "body":  "@Thefrank Nope, `libcoreclr.so.dbg` is still not there:\r\n```\r\nsec@amper:~/sdk % tar --list --file dotnet-runtime-7.0.0-preview.6.22329.5-freebsd-arm64.tar.gz|grep libcoreclr\r\n./shared/Microsoft.NETCore.App/7.0.0-preview.6.22329.5/libcoreclr.so\r\n```\r\n\r\nI don\u0027t think `*.so.dbg` are packed into tar\u0027s",
                                           "updatedAt":  "2022-07-06T17:44:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GIBmD",
                                           "createdAt":  "2022-07-06T17:47:54Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "Thefrank",
                                           "body":  "I linked the wrong one [dotnet-runtime-symbols-freebsd-arm64-7.0.0-preview.6.22329.5.tar.gz](https://github.com/Thefrank/dotnet-freebsd-crossbuild/releases/download/7.0.100-preview.7.22355.99-freebsd-arm64/dotnet-runtime-symbols-freebsd-arm64-7.0.0-preview.6.22329.5.tar.gz) needs to say \"symbols\"\r\n\r\nEDIT:\r\n@sec on a different note: do you have any suggestions on cheap arm64 hardware that freebsd runs on?",
                                           "updatedAt":  "2022-07-06T18:23:33Z"
                                       }
                                   ],
                         "totalCount":  133
                     },
        "title":  "Support for FreeBSD-arm64",
        "labels":  [
                       "arch-arm64",
                       "os-freebsd",
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/72192",
        "createdAt":  "2022-07-14T15:49:44Z",
        "number":  72192,
        "author":  "josephmoresena",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-07-25T15:13:44Z",
        "body":  "### Description\n\nI\u0027m trying to build CoreCLR on Ubuntu using WSL1. The system displays the following output:\r\n`\r\n__DistroRid: linux-x64\r\nFailed to create CoreCLR, HRESULT: 0x80004005\r\nBuild failed with exit code 137. Check errors above.\r\n`\n\n### Reproduction Steps\n\nIn runtime repo directory execute:\r\n`./build.sh -subset clr`\n\n### Expected behavior\n\nStart CoreCLR compiling.\n\n### Actual behavior\n\nBuild failed with exit code 137. Check errors above.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHORy3Iww==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5Gm_Gx",
                                           "createdAt":  "2022-07-14T16:05:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "EgorBo",
                                           "body":  "You need to inspect the full log, e.g. make sure you installed all the needed dependencies from https://github.com/dotnet/runtime/blob/main/docs/workflow/requirements/linux-requirements.md\r\nAlso, check your cmake version",
                                           "updatedAt":  "2022-07-14T16:05:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GnAVj",
                                           "createdAt":  "2022-07-14T16:10:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "josephmoresena",
                                           "body":  "\u003e You need to inspect the full log, e.g. make sure you installed all the needed dependencies from https://github.com/dotnet/runtime/blob/main/docs/workflow/requirements/linux-requirements.md Also, check your cmake version\r\n\r\nThis is my current configuration:\r\n`\r\nReading package lists... Done\r\nBuilding dependency tree\r\nReading state information... Done\r\nNote, selecting \u0027python-is-python2\u0027 instead of \u0027python\u0027\r\nNote, selecting \u0027libunwind-dev\u0027 instead of \u0027libunwind8-dev\u0027\r\ncmake is already the newest version (3.16.3-1ubuntu1).\r\ngettext is already the newest version (0.19.8.1-10build1).\r\nliblttng-ust-dev is already the newest version (2.11.0-1).\r\nlibnuma-dev is already the newest version (2.0.12-1).\r\nlibunwind-dev is already the newest version (1.2.1-9build1).\r\nlibunwind8 is already the newest version (1.2.1-9build1).\r\nclang-9 is already the newest version (1:9.0.1-12).\r\nliblldb-6.0-dev is already the newest version (1:6.0.1-14).\r\nlldb-6.0 is already the newest version (1:6.0.1-14).\r\nllvm-9 is already the newest version (1:9.0.1-12).\r\nninja-build is already the newest version (1.10.0-1build1).\r\npython-is-python2 is already the newest version (2.7.17-4).\r\nbuild-essential is already the newest version (12.8ubuntu1.1).\r\ncurl is already the newest version (7.68.0-1ubuntu2.12).\r\ngit is already the newest version (1:2.25.1-1ubuntu3.5).\r\nlibicu-dev is already the newest version (66.1-2ubuntu2.1).\r\nlibkrb5-dev is already the newest version (1.17-6ubuntu4.1).\r\nlibssl-dev is already the newest version (1.1.1f-1ubuntu2.16).\r\nzlib1g-dev is already the newest version (1:1.2.11.dfsg-2ubuntu1.3).\r\n0 upgraded, 0 newly installed, 0 to remove and 40 not upgraded\r\n`",
                                           "updatedAt":  "2022-07-14T16:10:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GnFQ3",
                                           "createdAt":  "2022-07-14T16:30:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCmxNcw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "CONFUSED",
                                                                               "user":  "josephmoresena",
                                                                               "createdAt":  "2022-07-14T17:12:00Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkotas",
                                           "body":  "We are not doing any testing on WSL1. We should document that it is not supported. The current dotnet/runtime on WSL1 is likely completely broken.",
                                           "updatedAt":  "2022-07-14T16:30:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GnRG2",
                                           "createdAt":  "2022-07-14T17:16:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "josephmoresena",
                                           "body":  "\u003e We are not doing any testing on WSL1. We should document that it is not supported. The current dotnet/runtime on WSL1 is likely completely broken.\r\n\r\nI see... So sad read that. All my NativeAOT Linux tests are done in WSL1. WSL2 is not really a solution for me as sometimes the resource consumption can be quite extensive.",
                                           "updatedAt":  "2022-07-14T17:16:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GoGMP",
                                           "createdAt":  "2022-07-14T21:34:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCm19WA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "HEART",
                                                                               "user":  "josephmoresena",
                                                                               "createdAt":  "2022-07-15T01:05:17Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "MichalStrehovsky",
                                           "body":  "There is a workaround in https://github.com/dotnet/runtime/issues/70799#issuecomment-1158427454",
                                           "updatedAt":  "2022-07-14T21:34:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GoSzZ",
                                           "createdAt":  "2022-07-14T22:53:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichalPetryka",
                                           "body":  "\u003e There is a workaround in [#70799 (comment)](https://github.com/dotnet/runtime/issues/70799#issuecomment-1158427454)\r\n\r\nWasn\u0027t #70912 supposed to fix W^X under WSL1?",
                                           "updatedAt":  "2022-07-14T22:53:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Gookk",
                                           "createdAt":  "2022-07-15T00:42:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichalStrehovsky",
                                           "body":  "\u003e \u003e There is a workaround in [#70799 (comment)](https://github.com/dotnet/runtime/issues/70799#issuecomment-1158427454)\r\n\u003e \r\n\u003e Wasn\u0027t #70912 supposed to fix W^X under WSL1?\r\n\r\nThe repo builds with .NET 7 Preview 5 that doesn\u0027t have the fix.",
                                           "updatedAt":  "2022-07-15T00:42:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Gosqf",
                                           "createdAt":  "2022-07-15T01:18:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "josephmoresena",
                                           "body":  "Thanks a lot. I\u0027m now compilling CoreCLR on WSL1 with the workaround. \r\nWill WSL1 become bad enough (in the medium term) for no use .NET with it?",
                                           "updatedAt":  "2022-07-15T01:18:01Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Gos6j",
                                           "createdAt":  "2022-07-15T01:20:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOCm2DLQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "josephmoresena",
                                                                               "createdAt":  "2022-07-15T01:21:07Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "MichalStrehovsky",
                                           "body":  "\u003e Will WSL1 become bad enough (in the medium term) for no use .NET with it?\r\n\r\nAs Jan said, we\u0027re not testing with it.\r\n\r\nThat said, I use it in my local workflows for similar reasons as you. I only have 16 GB of RAM and a small SSD. WSL2 is very much not a good fit for that.",
                                           "updatedAt":  "2022-07-15T01:20:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5GouLf",
                                           "createdAt":  "2022-07-15T01:31:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "josephmoresena",
                                           "body":  "\u003e \u003e Will WSL1 become bad enough (in the medium term) for no use .NET with it?\r\n\u003e \r\n\u003e As Jan said, we\u0027re not testing with it.\r\n\u003e \r\n\u003e That said, I use it in my local workflows for similar reasons as you. I only have 16 GB of RAM and a small SSD. WSL2 is very much not a good fit for that.\r\n\r\nYes, thats why I ask that. So.. We just have to take advantage of it as much as possible. \r\nIt\u0027s really too bad that WSL1 has been frozen in time. I just loved it when I could see all the possibilities. It really makes me run away from dual booting and heavy VM (including WSL2), even bare-metal Linux (I only use it now in my personal server).",
                                           "updatedAt":  "2022-07-15T01:31:20Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5HLcjD",
                                           "createdAt":  "2022-07-25T15:13:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "mangod9",
                                           "body":  "Assume this is ok to close, now that there is a workaround? ",
                                           "updatedAt":  "2022-07-25T15:13:37Z"
                                       }
                                   ],
                         "totalCount":  11
                     },
        "title":  "Failed to create CoreCLR, HRESULT: 0x80004005 with WSL1",
        "labels":  [
                       "os-windows-wsl",
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/73644",
        "createdAt":  "2022-08-09T19:05:22Z",
        "number":  73644,
        "author":  "RobertHenry6bev",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2022-08-12T08:06:16Z",
        "body":  "### Description\n\nmacro CONTAINING_RECORD in https://github.com/dotnet/runtime/blob/8e407e32bbb13874a7a8b8651d6d3f1d70574754/src/coreclr/pal/src/include/pal/list.h#L131 dereferences NULL pointer prior to taking address of such dereference.\r\n\r\nubsan runtime will complain about this.\r\n\r\nThe code contains what appears to be legacy idiomatic code for computing offsetof().  offsetof() was a late addition to C.\r\n\r\nI\u0027ve confirmed that for clang-14 for C and C++ programs, ubsan will not complain about what goes on underneath the covers of offsetof.\r\n\r\nIt would be nice of some compile time tool could find this; perhaps there\u0027s some flag to clang, msvcc or gcc that can sniff these out?\r\n\r\ngrepping and hand editing turns up these suspicious code smells:\r\n\r\n```\r\n./mono/mono/eglib/glib.h:#   define offsetof(s_name,n_name) (size_t)(char *)\u0026(((s_name*)0)-\u003em_name)\r\n./coreclr/nativeaot/Runtime/CommonMacros.h:#define offsetof(s,m)   (uintptr_t)( (intptr_t)\u0026reinterpret_cast\u003cconst volatile char\u0026\u003e((((s *)0)-\u003em)) )\r\n./coreclr/pal/src/include/pal/list.h:                                                  (ULONG_PTR)(\u0026((type *)0)-\u003efield)))\r\n```\r\n\r\nThe macro definitions look especialy smelly.\r\n\r\nI do not know all of the clients of pal/list.h, nor the legacy requirements, etc, etc.\r\n\r\nI think we should \"program to the tool\" rather than suppressing errors from this construct; the suppression is likely to be a blunt insrument.\r\n\r\n                                                                                                                                                                                                           \n\n### Reproduction Steps\n\ncompile -fsanitize=address without suppressions and run without suppressions, and hope your test triggers runtime error \r\n```\r\nruntime error: member access within null pointer of type\r\n```\r\n\r\n\n\n### Expected behavior\n\nno runtime errors when there are no suppressions\n\n### Actual behavior\n\nruntime errors when there are no suppressions\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSEqFaQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5IG5tX",
                                           "createdAt":  "2022-08-09T19:05:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2022-08-09T19:05:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ISnrf",
                                           "createdAt":  "2022-08-12T08:03:10Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "Fixed by https://github.com/dotnet/runtime/pull/73657",
                                           "updatedAt":  "2022-08-12T08:03:10Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5ISoVp",
                                           "createdAt":  "2022-08-12T08:06:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "There are still these left:\r\n```\r\n./mono/mono/eglib/glib.h:#   define offsetof(s_name,n_name) (size_t)(char *)\u0026(((s_name*)0)-\u003em_name)\r\n./coreclr/nativeaot/Runtime/CommonMacros.h:#define offsetof(s,m)   (uintptr_t)( (intptr_t)\u0026reinterpret_cast\u003cconst volatile char\u0026\u003e((((s *)0)-\u003em)) )\r\n./coreclr/pal/src/include/pal/list.h:                                                  (ULONG_PTR)(\u0026((type *)0)-\u003efield)))\r\n```",
                                           "updatedAt":  "2022-08-12T08:06:16Z"
                                       }
                                   ],
                         "totalCount":  3
                     },
        "title":  "ubsan finds null pointer dereference in legacy code computing the equivalent of offset ",
        "labels":  [
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/74962",
        "createdAt":  "2022-08-20T16:35:53Z",
        "number":  74962,
        "author":  "acenji",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-03T21:31:29Z",
        "body":  "\u003c!--This is just a template - feel free to delete any and all of it and replace as appropriate. If you\u0027re not sure of an answer, just skip it. We\u0027ll help you! --\u003e\r\n\r\n### Description\r\nWhen i create dotnet new console, \r\nI get \r\n\"The template \"Console App\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning \u0027dotnet restore\u0027 on /home/ivanassenov/dev/dotnet-projects/dotnet-projects.csproj...\r\n  Determining projects to restore...\r\n  Restored /home/ivanassenov/dev/dotnet-projects/dotnet-projects.csproj (in 63 ms).\r\nRestore succeeded.\r\n\"\r\nthen I run \"dotnet restore\"\r\n\"dotnet restore\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n\"\r\nThen I run \"dotnet run\"\r\nI get this error\r\n\"tpp.c:82: __pthread_tpp_change_priority: Assertion `new_prio == -1 || (new_prio \u003e= fifo_min_prio \u0026\u0026 new_prio \u003c= fifo_max_prio)\u0027 failed.\"\r\n\r\nrestarted a few times, and tried few things. \r\n\r\nwhen I run with verbose I got \r\n\".....\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:00.72\r\ntpp.c:82: __pthread_tpp_change_priority: Assertion `new_prio == -1 || (new_prio \u003e= fifo_min_prio \u0026\u0026 new_prio \u003c= fifo_max_prio)\u0027 failed.\r\n\"\r\nAny idea why hello world program wouldn\u0027t work??\r\n\r\n\r\n\r\n\r\n\u003c!--\r\non Linux computer installed dotnet  SDK Version:   6.0.400\r\n\r\n\r\n  --\u003e\r\n\r\n### Configuration\r\n\r\n\u003c!--\r\n* Which version of .NET is the code running on?\r\n.NET SDK (reflecting any global.json):\r\n Version:   6.0.400\r\n Commit:    7771abd614\r\n\r\n\r\n* What OS and version, and for Linux, what distro?\r\nOS Name:     pop\r\n OS Version:  21.04\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /snap/dotnet-sdk/177/sdk/6.0.400/\r\n\r\n\r\n* What is the architecture (x64, x86, ARM, ARM64)?\r\nx86_64\r\n\r\n* Do you know whether it is specific to that configuration?\r\nno\r\n* If you\u0027re using Blazor, which web browser(s) do you see this issue in?\r\nN/a\r\n  --\u003e\r\n\r\n### Regression?\r\n\r\n\u003c!--\r\n* Did this work in a previous build or release of .NET, or from .NET Framework? If you can try a previous release or build to find out, that can help us narrow down the problem. If you don\u0027t know, that\u0027s OK.\r\n  --\u003e\r\nNo, first time installed\r\n### Other information\r\n\r\n\u003c!--\r\n* Please include any relevant stack traces or error messages. If possible please include text as text rather than images (so it shows up in searches).\r\n* If you have an idea where the problem might lie, let us know that here. Please include any pointers to code, relevant changes, or related issues you know of.\r\n* Do you know of any workarounds?\r\n  --\u003e\r\n",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSc4ZCA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5JmNAo",
                                           "createdAt":  "2022-08-22T18:12:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wfurt",
                                           "body":  "what is your OS and .NET version? (dotnet --info) \r\nAlso you may try `dotnet build` before trying to run it.",
                                           "updatedAt":  "2022-08-22T18:12:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JmNAt",
                                           "createdAt":  "2022-08-22T18:46:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "acenji",
                                           "body":  ".NET SDK (reflecting any global.json):\r\n Version:   6.0.400\r\n Commit:    7771abd614\r\n\r\nRuntime Environment:\r\n OS Name:     pop\r\n OS Version:  21.04\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /snap/dotnet-sdk/177/sdk/6.0.400/\r\n\r\nglobal.json file:\r\n  Not found\r\n\r\nHost:\r\n  Version:      6.0.8\r\n  Architecture: x64\r\n  Commit:       55fb7ef977\r\n\r\n.NET SDKs installed:\r\n  6.0.400 [/snap/dotnet-sdk/177/sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 6.0.8 [/snap/dotnet-sdk/177/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 6.0.8 [/snap/dotnet-sdk/177/shared/Microsoft.NETCore.App]\r\n\r\n\r\n\r\n\r\n",
                                           "updatedAt":  "2022-08-22T18:46:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JmNAx",
                                           "createdAt":  "2022-08-22T18:48:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "acenji",
                                           "body":  "When i run \"dotnet build\" i get \r\nMSBuild version 17.3.0+92e077650 for .NET\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  HelloWorld -\u003e /home/ivanassenov/dev/dotnet-projects/HelloWorld/bin/Debug/net6.0/HelloWorld.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:01.47\r\nthen I run \"dotnet run\" and I get \r\ntpp.c:82: __pthread_tpp_change_priority: Assertion `new_prio == -1 || (new_prio \u003e= fifo_min_prio \u0026\u0026 new_prio \u003c= fifo_max_prio)\u0027 failed.\r\n",
                                           "updatedAt":  "2022-08-22T18:48:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JmNAz",
                                           "createdAt":  "2022-08-22T19:05:07Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wfurt",
                                           "body":  "Can you build and run the app under debugger and get full trace? \r\ne.g. `dotnet publish -r linux-x64`, \r\n`lldb /home/ivanassenov/dev/dotnet-projects/HelloWorld/bin/Debug/net6.0/linux-x64/publish/HelloWorld` and \r\n`run` + `bt` when it dies. \r\n\r\nhttps://stackoverflow.com/questions/21825291/threading-issues suggest libc problem but I\u0027m not sure. \r\ncc: @janvorli as this smells like PAL.\r\n\r\n\r\n",
                                           "updatedAt":  "2022-08-22T19:05:07Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JmNA2",
                                           "createdAt":  "2022-08-22T19:22:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "acenji",
                                           "body":  "Process 123116 launched: \u0027/home/ivanassenov/dev/dotnet-projects/HelloWorld/bin/Debug/net6.0/linux-x64/publish/HelloWorld\u0027 (x86_64)\r\ntpp.c:82: __pthread_tpp_change_priority: Assertion `new_prio == -1 || (new_prio \u003e= fifo_min_prio \u0026\u0026 new_prio \u003c= fifo_max_prio)\u0027 failed.\r\nProcess 123116 stopped\r\n* thread dotnet/core#1, name = \u0027HelloWorld\u0027, stop reason = signal SIGABRT\r\n    frame #0: 0x00007ffff7a0efbb libc.so.6`raise + 203\r\nlibc.so.6`raise:\r\n-\u003e  0x7ffff7a0efbb \u003c+203\u003e: movq   0x108(%rsp), %rax\r\n    0x7ffff7a0efc3 \u003c+211\u003e: subq   %fs:0x28, %rax\r\n    0x7ffff7a0efcc \u003c+220\u003e: jne    0x7ffff7a0eff4            ; \u003c+260\u003e\r\n    0x7ffff7a0efce \u003c+222\u003e: movl   %r8d, %eax\r\n",
                                           "updatedAt":  "2022-08-22T19:22:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JmNA5",
                                           "createdAt":  "2022-08-22T19:26:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wfurt",
                                           "body":  "backtrace? ",
                                           "updatedAt":  "2022-08-22T19:26:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JmNA7",
                                           "createdAt":  "2022-08-22T19:34:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "acenji",
                                           "body":  "hm, not sure i followed you. i tried this \r\n\"dotnet-stack\r\n*** stack smashing detected ***: terminated\r\nAborted (core dumped)\r\n\"\r\n",
                                           "updatedAt":  "2022-08-22T19:34:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JmNBB",
                                           "createdAt":  "2022-08-22T19:43:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "wfurt",
                                           "body":  "can you run `bt` command in debugger after the SIGABRT? ",
                                           "updatedAt":  "2022-08-22T19:43:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JmNBG",
                                           "createdAt":  "2022-08-22T19:51:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "acenji",
                                           "body":  "```\r\n  * thread dotnet/core#1, name = \u0027HelloWorld\u0027, stop reason = signal SIGABRT\r\n  * frame #0: 0x00007ffff7a0efbb libc.so.6`raise + 203\r\n    frame dotnet/core#1: 0x00007ffff79f4864 libc.so.6`abort + 278\r\n    frame dotnet/core#2: 0x00007ffff79f4749 libc.so.6`___lldb_unnamed_symbol8$$libc.so.6 + 15\r\n    frame dotnet/core#3: 0x00007ffff7a063d6 libc.so.6`__assert_fail + 70\r\n    frame dotnet/core#4: 0x00007ffff7fcfe89 libpthread.so.0`__pthread_tpp_change_priority + 985\r\n    frame dotnet/core#5: 0x00007ffff7fc60b5 libpthread.so.0`__pthread_mutex_lock_full + 533\r\n    frame dotnet/core#6: 0x00007ffff7fc2fd8 libpthread.so.0`__pthread_initialize_minimal + 632\r\n    frame dotnet/core#7: 0x00007ffff7fc200d libpthread.so.0`_init + 13\r\n    frame dotnet/core#8: 0x00007ffff7de3a2d ld-2.27.so`___lldb_unnamed_symbol50$$ld-2.27.so + 605\r\n    frame dotnet/core#9: 0x00007ffff7dd40ca ld-2.27.so`___lldb_unnamed_symbol4$$ld-2.27.so + 105\r\n```",
                                           "updatedAt":  "2022-09-01T20:28:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JmNBI",
                                           "createdAt":  "2022-08-29T19:52:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "github-actions",
                                           "body":  "This issue is stale because there has been no response to a request for more information for 7 days.",
                                           "updatedAt":  "2022-08-29T19:52:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JmNBJ",
                                           "createdAt":  "2022-09-01T20:12:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "github-actions",
                                           "body":  "This issue was closed because there was no response to a request for more information for 10 days.",
                                           "updatedAt":  "2022-09-01T20:12:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JmNBO",
                                           "createdAt":  "2022-09-01T20:18:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "acenji",
                                           "body":  "yea, issue still exist, not sure what else to do ",
                                           "updatedAt":  "2022-09-01T20:18:32Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JmNBS",
                                           "createdAt":  "2022-09-01T20:33:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rzikm",
                                           "body":  "transfering to .NET Runtime repo for further investigation",
                                           "updatedAt":  "2022-09-01T20:33:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JmNBh",
                                           "createdAt":  "2022-09-01T20:34:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2022-09-01T20:34:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JmNK4",
                                           "createdAt":  "2022-09-01T20:34:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-runtime\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003cdetails\u003e\n\u003csummary\u003eIssue Details\u003c/summary\u003e\n\u003chr /\u003e\n\n\u003c!--This is just a template - feel free to delete any and all of it and replace as appropriate. If you\u0027re not sure of an answer, just skip it. We\u0027ll help you! --\u003e\r\n\r\n### Description\r\nWhen i create dotnet new console, \r\nI get \r\n\"The template \"Console App\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning \u0027dotnet restore\u0027 on /home/ivanassenov/dev/dotnet-projects/dotnet-projects.csproj...\r\n  Determining projects to restore...\r\n  Restored /home/ivanassenov/dev/dotnet-projects/dotnet-projects.csproj (in 63 ms).\r\nRestore succeeded.\r\n\"\r\nthen I run \"dotnet restore\"\r\n\"dotnet restore\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n\"\r\nThen I run \"dotnet run\"\r\nI get this error\r\n\"tpp.c:82: __pthread_tpp_change_priority: Assertion `new_prio == -1 || (new_prio \u003e= fifo_min_prio \u0026\u0026 new_prio \u003c= fifo_max_prio)\u0027 failed.\"\r\n\r\nrestarted a few times, and tried few things. \r\n\r\nwhen I run with verbose I got \r\n\".....\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:00.72\r\ntpp.c:82: __pthread_tpp_change_priority: Assertion `new_prio == -1 || (new_prio \u003e= fifo_min_prio \u0026\u0026 new_prio \u003c= fifo_max_prio)\u0027 failed.\r\n\"\r\nAny idea why hello world program wouldn\u0027t work??\r\n\r\n\r\n\r\n\r\n\u003c!--\r\non Linux computer installed dotnet  SDK Version:   6.0.400\r\n\r\n\r\n  --\u003e\r\n\r\n### Configuration\r\n\r\n\u003c!--\r\n* Which version of .NET is the code running on?\r\n.NET SDK (reflecting any global.json):\r\n Version:   6.0.400\r\n Commit:    7771abd614\r\n\r\n\r\n* What OS and version, and for Linux, what distro?\r\nOS Name:     pop\r\n OS Version:  21.04\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /snap/dotnet-sdk/177/sdk/6.0.400/\r\n\r\n\r\n* What is the architecture (x64, x86, ARM, ARM64)?\r\nx86_64\r\n\r\n* Do you know whether it is specific to that configuration?\r\nno\r\n* If you\u0027re using Blazor, which web browser(s) do you see this issue in?\r\nN/a\r\n  --\u003e\r\n\r\n### Regression?\r\n\r\n\u003c!--\r\n* Did this work in a previous build or release of .NET, or from .NET Framework? If you can try a previous release or build to find out, that can help us narrow down the problem. If you don\u0027t know, that\u0027s OK.\r\n  --\u003e\r\nNo, first time installed\r\n### Other information\r\n\r\n\u003c!--\r\n* Please include any relevant stack traces or error messages. If possible please include text as text rather than images (so it shows up in searches).\r\n* If you have an idea where the problem might lie, let us know that here. Please include any pointers to code, relevant changes, or related issues you know of.\r\n* Do you know of any workarounds?\r\n  --\u003e\r\n\n\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAuthor:\u003c/th\u003e\n    \u003ctd\u003eacenji\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eAssignees:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eLabels:\u003c/th\u003e\n    \u003ctd\u003e\n\n`area-System.Runtime`, `os-linux`, `untriaged`\n\n\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003cth align=\"left\"\u003eMilestone:\u003c/th\u003e\n    \u003ctd\u003e-\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e\n\u003c/details\u003e",
                                           "updatedAt":  "2022-09-01T20:34:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JmNbW",
                                           "createdAt":  "2022-09-01T20:35:59Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "rzikm",
                                           "body":  "I hope I chose an appropriate area for this issue, if this is not the right one please suggest a better option.",
                                           "updatedAt":  "2022-09-01T20:35:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JmOXy",
                                           "createdAt":  "2022-09-01T20:39:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "It seems the problem is caused by the fact that it is running with FIFO scheduler. Can you please try to run it with the following command? That should run it with the default scheduler.\r\n```sh\r\nchrt -o -p 0 dotnet run\r\n```",
                                           "updatedAt":  "2022-09-01T20:42:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JmQK6",
                                           "createdAt":  "2022-09-01T20:48:19Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "acenji",
                                           "body":  "hm, I copy this command and run it as is but got this :\r\n\"chrt: invalid PID argument: \u0027run\u0027\"\r\nsorry, not familiar with this command. ",
                                           "updatedAt":  "2022-09-01T20:48:19Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JmQq6",
                                           "createdAt":  "2022-09-01T20:51:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "I am sorry, my mistake, it should be \r\n```sh\r\nchrt -o 0 dotnet run\r\n```",
                                           "updatedAt":  "2022-09-01T20:51:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JmRMG",
                                           "createdAt":  "2022-09-01T20:53:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "acenji",
                                           "body":  "after i run it i got this:\r\n\"tpp.c:82: __pthread_tpp_change_priority: Assertion `new_prio == -1 || (new_prio \u003e= fifo_min_prio \u0026\u0026 new_prio \u003c= fifo_max_prio)\u0027 failed.\"",
                                           "updatedAt":  "2022-09-01T20:53:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JmSDr",
                                           "createdAt":  "2022-09-01T20:55:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Hmm, I have assumed the fifo scheduler is being used based on the fifo_min_prio / fifo_max_prio in the assert. Maybe these names don\u0027t have to do anything with the FIFO scheduler then.",
                                           "updatedAt":  "2022-09-01T20:55:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JpPlQ",
                                           "createdAt":  "2022-09-02T14:05:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tannergooding",
                                           "body":  "This seems like more PAL or VM related since it appears to be a potential `pthread` issue.",
                                           "updatedAt":  "2022-09-02T14:05:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JpQt0",
                                           "createdAt":  "2022-09-02T14:10:08Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "acenji",
                                           "body":  "Tanner, to clarify, I am using pure Linux System 67 system, with POP OS",
                                           "updatedAt":  "2022-09-02T14:10:08Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5JzhkI",
                                           "createdAt":  "2022-09-06T14:37:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "I am investigating it now, trying to install Pop OS locally. ",
                                           "updatedAt":  "2022-09-06T14:37:35Z"
                                       }
                                   ],
                         "totalCount":  24
                     },
        "title":  "dotnet run produces error: tpp.c:82: __pthread_tpp_change_priority: Assertion `new_prio == -1 || (new_prio \u003e= fifo_min_prio \u0026\u0026 new_prio \u003c= fifo_max_prio)\u0027 failed.",
        "labels":  [
                       "os-linux",
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/74391",
        "createdAt":  "2022-08-22T23:47:51Z",
        "number":  74391,
        "author":  "RobertHenry6bev",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-08-16T19:05:00Z",
        "body":  "### Description\n\nCompiling against main/head with gcc-12 on ARM64 turns up many instances of this warning message:\r\n   runtime/src/coreclr/debug/debug-pal/../../pal/inc/pal.h:3483:1: warning: attributes are not permitted in this position [-Wattributes]\r\n\r\nThis line seems to have been added in https://github.com/dotnet/runtime/pull/71512\r\nI\u0027m just noticing the issue now, perhaps as a side effect of starting the dotnet8 cycle.\n\n### Reproduction Steps\n\ncompile with g++-12, and do not suppress warning messages regarding attribute placement\n\n### Expected behavior\n\nno compile time warnings\n\n### Actual behavior\n\nget compile time warnings\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n/cc @kunal",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOSOqmgQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5I6qaB",
                                           "createdAt":  "2022-08-22T23:47:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2022-08-22T23:47:55Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "compilation warning from gcc regarding misplaced function attributes",
        "labels":  [
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/78286",
        "createdAt":  "2022-11-13T07:47:04Z",
        "number":  78286,
        "author":  "tonybaloney",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2023-03-17T23:24:16Z",
        "body":  "### Description\n\nI have some code which uses the .NET 6 JIT and I\u0027m updating it too .NET 7. It needs to import `\u003cwindows.h\u003e` and `\u003cpal.h\u003e` but I\u0027m getting an error on cross-compile/universal2 builds in clang-c++:\r\n\r\n```    \r\n In file included from /Users/anthonyshaw/CLionProjects/pyjion/src/pyjion/codemodel.h:43:\r\n      In file included from /Users/anthonyshaw/CLionProjects/pyjion/CoreCLR/src/coreclr/pal/inc/rt/windows.h:12:\r\n      In file included from /Users/anthonyshaw/CLionProjects/pyjion/CoreCLR/src/coreclr/pal/inc/rt/palrt.h:136:\r\n      /Users/anthonyshaw/CLionProjects/pyjion/CoreCLR/src/coreclr/pal/inc/pal.h:3546:1: error: use of undeclared identifier \u0027g_arm64_atomics_present\u0027\r\n      Define_InterlockMethod(\r\n      ^\r\n      /Users/anthonyshaw/CLionProjects/pyjion/CoreCLR/src/coreclr/pal/inc/pal.h:3501:9: note: expanded from macro \u0027Define_InterlockMethod\u0027\r\n          if (g_arm64_atomics_present)                                \\\r\n              ^\r\n      /Users/anthonyshaw/CLionProjects/pyjion/CoreCLR/src/coreclr/pal/inc/pal.h:3553:1: error: use of undeclared identifier \u0027g_arm64_atomics_present\u0027\r\n      Define_InterlockMethod(\r\n      ^\r\n      /Users/anthonyshaw/CLionProjects/pyjion/CoreCLR/src/coreclr/pal/inc/pal.h:3501:9: note: expanded from macro \u0027Define_InterlockMethod\u0027\r\n          if (g_arm64_atomics_present)                                \\\r\n```\r\n\r\nLooking at the source code, the macro `HOST_ARM64` is defined beneath the check on line 77 for it, so the global is never defined, which means imports of this header fail.\r\n\r\nThe header is required to use `clrlibjit.xxx` directly. \n\n### Reproduction Steps\n\n-\n\n### Expected behavior\n\n-\n\n### Actual behavior\n\n-\n\n### Regression?\n\nYes, worked on .NET 6\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOVaDzLA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5OPaO3",
                                           "createdAt":  "2022-11-13T07:47:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2022-11-13T07:47:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5OPaVW",
                                           "createdAt":  "2022-11-13T07:49:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tonybaloney",
                                           "body":  "This is for the v7.0.0 tag https://github.com/dotnet/runtime/blob/d099f075e45d2aa6007a22b71b45a08758559f80/src/coreclr/pal/inc/pal.h#L77-L81 ",
                                           "updatedAt":  "2022-11-13T07:49:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5OPs-C",
                                           "createdAt":  "2022-11-13T14:04:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "If you cherry-pick https://github.com/dotnet/runtime/commit/536f34d9ab88e153aa11329e789afe6975fbe9a9 on release/7.0, does it fix the error?",
                                           "updatedAt":  "2022-11-13T14:04:35Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Vn-kw",
                                           "createdAt":  "2023-02-20T08:31:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akorchev",
                                           "body":  "I tried cherry-picking that commit on release/7.0 and ended up with different errors. I am building on Mac m1.\r\n\r\n```\r\nsrc/coreclr/pal/inc/pal.h:2517:2: error: Unknown architecture for defining CONTEXT.\r\n#error Unknown architecture for defining CONTEXT.\r\n```",
                                           "updatedAt":  "2023-02-20T08:31:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5VoA3F",
                                           "createdAt":  "2023-02-20T08:40:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tonybaloney",
                                           "body":  "@akorchev I ended up targeting https://github.com/dotnet/runtime/commit/d099f075e45d2aa6007a22b71b45a08758559f80 as that was ABI compatible with the release 7.0.0 binaries.\r\n\r\nAlso added a workaround by predefining some macros before importing windows.h https://github.com/tonybaloney/Pyjion/blob/6694a01570bce1f55fc7a7cf972d196fb33714dd/src/pyjion/crossplat.h",
                                           "updatedAt":  "2023-02-20T08:40:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5VoPMs",
                                           "createdAt":  "2023-02-20T09:21:57Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "akorchev",
                                           "body":  "Thanks! I ended up doing something similar - defining HOST_ARM64 in the CMake configuration:\r\n\r\n`add_compile_definitions(HOST_ARM64)`",
                                           "updatedAt":  "2023-02-20T09:21:57Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "Importing `pal.h` causes undeclared identifier because of order of macro definitions",
        "labels":  [
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/83509",
        "createdAt":  "2023-03-16T11:32:40Z",
        "number":  83509,
        "author":  "am11",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-03-25T15:53:18Z",
        "body":  "_From @ayakael https://github.com/dotnet/runtime/issues/77667#issuecomment-1470253592_\r\n\r\nI\u0027m getting an execution failure when trying to run the resulting SDK. Running dotnet --info with the [following SDK](https://lab.ilot.io/ayakael/dotnet-stage0/-/jobs/1433/artifacts/raw/%5Bdotnet-sdk-8.0.100-preview.2.23157.25-r1-linux-musl-x86.tar.xz) in linux-musl-x86 chroot yields a freeze, and then eventually a Failed to create CoreCLR, HRESULT: 0x8007000E. It seems like CoreCLR tries to allocate all of the available memory for some reason. @am11 I see that you got the build-rootfs.sh script working for linux-musl-x86, have you managed a successful crossbuild to linux-musl-x86?\r\n\r\nI tried stracing it, but could only attach the process after execution.\r\n[strace.txt](https://github.com/dotnet/runtime/files/10981737/strace.txt)\r\n\r\nEdit: The following patchset is used to build the SDK: https://lab.ilot.io/ayakael/dotnet-stage0",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOacVeYA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5Xuawf",
                                           "createdAt":  "2023-03-16T11:32:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  null,
                                           "body":  "I couldn\u0027t figure out the best area label to add to this issue. If you have write-permissions please help me learn by adding exactly one [area label](https://github.com/dotnet/runtime/blob/master/docs/area-owners.md).",
                                           "updatedAt":  "2023-03-16T11:32:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Xua9Z",
                                           "createdAt":  "2023-03-16T11:33:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "@ayakael, I have only tried building runtime, didn\u0027t test the binaries.\r\n\r\n\u003e Running dotnet --info with the [following SDK](https://lab.ilot.io/ayakael/dotnet-stage0/-/jobs/1433/artifacts/raw/%5Bdotnet-sdk-8.0.100-preview.2.23157.25-r1-linux-musl-x86.tar.xz)\r\n\r\nI don\u0027t have permission to download it. :)\r\n\r\n\u003e `Failed to create CoreCLR, HRESULT: 0x8007000E`\r\n\r\nBTW, were you testing under VM / baremetal install or QEMU? CoreCLR-PAL has some issues with QEMU (even on 64-bit archs).",
                                           "updatedAt":  "2023-03-16T11:33:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5XubI9",
                                           "createdAt":  "2023-03-16T11:33:51Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "_From @ayakael https://github.com/dotnet/runtime/issues/77667#issuecomment-1470966847_\r\n\r\nWoops, here is a functional link: [dotnet-sdk-8.0.100-preview.2.23157.25-r1-linux-musl-x86.tar.xz](https://lab.ilot.io/ayakael/dotnet-stage0/-/releases/8.0.100-preview.2.23157.25-r1/downloads/sdk/dotnet-sdk-8.0.100-preview.2.23157.25-r1-linux-musl-x86.tar.xz)\r\n\r\nI tested first within a chroot of alpine-x86 that was in LXC, and then within a chroot in a qemu based env. Both behave the same.",
                                           "updatedAt":  "2023-03-16T11:33:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5XufVi",
                                           "createdAt":  "2023-03-16T11:46:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "Thanks @ayakael. I created a HyperV VM on Windows x64 and installed alpine 32 bit to rule out the emulation factor:\r\n\r\n\u003cimg src=https://user-images.githubusercontent.com/3840695/225601507-c9340500-74c5-4813-826c-78714385d19c.png width=30% /\u003e\r\n\r\n`dotnet --info` with your SDK build is failing in this VM as well.\r\n\r\n@janvorli, this seems like a memory mapping issue on 32-bit Alpine, where `DOTNET_EnableWriteXorExecute=0` and/or `DOTNET_GCHeapHardLimit=...` do not help.\r\n\r\n`strace -f dotnet --info` -\u003e http://sprunge.us/S9saN5\r\n\r\n```sh\r\n$ cat /proc/meminfo\r\nMemTotal:         308524 kB\r\nMemFree:          218152 kB\r\nMemAvailable:     108400 kB\r\nBuffers:            1020 kB\r\nCached:            29348 kB\r\nSwapCached:          180 kB\r\nActive:             5804 kB\r\nInactive:          21904 kB\r\nActive(anon):         68 kB\r\nInactive(anon):      344 kB\r\nActive(file):       5736 kB\r\nInactive(file):    21560 kB\r\nUnevictable:        3072 kB\r\nMlocked:               0 kB\r\nHighTotal:        151072 kB\r\nHighFree:          94044 kB\r\nLowTotal:         157452 kB\r\nLowFree:          124108 kB\r\nSwapTotal:       4194300 kB\r\nSwapFree:        4191476 kB\r\nDirty:                 0 kB\r\nWriteback:             0 kB\r\nAnonPages:           344 kB\r\nMapped:             2344 kB\r\nShmem:              3072 kB\r\nKReclaimable:       7992 kB\r\nSlab:              19800 kB\r\nSReclaimable:       7992 kB\r\nSUnreclaim:        11808 kB\r\nKernelStack:         640 kB\r\nPageTables:          284 kB\r\nNFS_Unstable:          0 kB\r\nBounce:                0 kB\r\nWritebackTmp:          0 kB\r\nCommitLimit:     4348560 kB\r\nCommitted_AS:       7956 kB\r\nVmallocTotal:     122880 kB\r\nVmallocUsed:       26060 kB\r\nVmallocChunk:          0 kB\r\nPercpu:              328 kB\r\nDirectMap4k:       20472 kB\r\nDirectMap4M:      868352 kB\r\n\r\n$ ulimit -a\r\ncore file size (blocks)         (-c) 0\r\ndata seg size (kb)              (-d) unlimited\r\nscheduling priority             (-e) 0\r\nfile size (blocks)              (-f) unlimited\r\npending signals                 (-i) 31256\r\nmax locked memory (kb)          (-l) 64\r\nmax memory size (kb)            (-m) unlimited\r\nopen files                      (-n) 1024\r\nPOSIX message queues (bytes)    (-q) 819200\r\nreal-time priority              (-r) 0\r\nstack size (kb)                 (-s) 8192\r\ncpu time (seconds)              (-t) unlimited\r\nmax user processes              (-u) 31256\r\nvirtual memory (kb)             (-v) unlimited\r\nfile locks                      (-x) unlimited\r\n```",
                                           "updatedAt":  "2023-03-16T11:46:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5XwBAG",
                                           "createdAt":  "2023-03-16T15:31:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ayakael",
                                           "body":  "\u003e Thanks @ayakael. I created a HyperV VM on Windows x64 and installed alpine 32 bit to rule out the emulation factor:\r\n\u003e \r\n\u003e \u003cimg alt=\"\" width=\"30%\" src=\"https://user-images.githubusercontent.com/3840695/225601507-c9340500-74c5-4813-826c-78714385d19c.png\"\u003e\r\n\u003e \r\n\u003e `dotnet --info` with your SDK build is failing in this VM as well.\r\n\u003e \r\n\u003e @janvorli, this seems like a memory mapping issue on 32-bit Alpine, where `DOTNET_EnableWriteXorExecute=0` and/or `DOTNET_GCHeapHardLimit=...` do not help.\r\n\u003e \r\n\u003e `strace -f dotnet --info` -\u003e http://sprunge.us/S9saN5\r\n\u003e \r\n\u003e ```shell\r\n\u003e $ cat /proc/meminfo\r\n\u003e MemTotal:         308524 kB\r\n\u003e MemFree:          218152 kB\r\n\u003e MemAvailable:     108400 kB\r\n\u003e Buffers:            1020 kB\r\n\u003e Cached:            29348 kB\r\n\u003e SwapCached:          180 kB\r\n\u003e Active:             5804 kB\r\n\u003e Inactive:          21904 kB\r\n\u003e Active(anon):         68 kB\r\n\u003e Inactive(anon):      344 kB\r\n\u003e Active(file):       5736 kB\r\n\u003e Inactive(file):    21560 kB\r\n\u003e Unevictable:        3072 kB\r\n\u003e Mlocked:               0 kB\r\n\u003e HighTotal:        151072 kB\r\n\u003e HighFree:          94044 kB\r\n\u003e LowTotal:         157452 kB\r\n\u003e LowFree:          124108 kB\r\n\u003e SwapTotal:       4194300 kB\r\n\u003e SwapFree:        4191476 kB\r\n\u003e Dirty:                 0 kB\r\n\u003e Writeback:             0 kB\r\n\u003e AnonPages:           344 kB\r\n\u003e Mapped:             2344 kB\r\n\u003e Shmem:              3072 kB\r\n\u003e KReclaimable:       7992 kB\r\n\u003e Slab:              19800 kB\r\n\u003e SReclaimable:       7992 kB\r\n\u003e SUnreclaim:        11808 kB\r\n\u003e KernelStack:         640 kB\r\n\u003e PageTables:          284 kB\r\n\u003e NFS_Unstable:          0 kB\r\n\u003e Bounce:                0 kB\r\n\u003e WritebackTmp:          0 kB\r\n\u003e CommitLimit:     4348560 kB\r\n\u003e Committed_AS:       7956 kB\r\n\u003e VmallocTotal:     122880 kB\r\n\u003e VmallocUsed:       26060 kB\r\n\u003e VmallocChunk:          0 kB\r\n\u003e Percpu:              328 kB\r\n\u003e DirectMap4k:       20472 kB\r\n\u003e DirectMap4M:      868352 kB\r\n\u003e \r\n\u003e $ ulimit -a\r\n\u003e core file size (blocks)         (-c) 0\r\n\u003e data seg size (kb)              (-d) unlimited\r\n\u003e scheduling priority             (-e) 0\r\n\u003e file size (blocks)              (-f) unlimited\r\n\u003e pending signals                 (-i) 31256\r\n\u003e max locked memory (kb)          (-l) 64\r\n\u003e max memory size (kb)            (-m) unlimited\r\n\u003e open files                      (-n) 1024\r\n\u003e POSIX message queues (bytes)    (-q) 819200\r\n\u003e real-time priority              (-r) 0\r\n\u003e stack size (kb)                 (-s) 8192\r\n\u003e cpu time (seconds)              (-t) unlimited\r\n\u003e max user processes              (-u) 31256\r\n\u003e virtual memory (kb)             (-v) unlimited\r\n\u003e file locks                      (-x) unlimited\r\n\u003e ```\r\n\r\nAwesome, thank you for creating the issue. Note that this is the product of a crossbuild from Alpine x86_64 to Alpine x86 via a rootfs dir. I use this method to build the s390x and ppc64le bootstraps, so it is a tested methdology. But as usually crossbuilding to x86 is done via -m32 (which for some reason didn\u0027t work when attempted), maybe some bits are being built in 64-bit mode?",
                                           "updatedAt":  "2023-03-16T15:31:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5XxYas",
                                           "createdAt":  "2023-03-16T18:45:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ayakael",
                                           "body":  "Turns out setting `-m32` works, but makes no difference. Maybe relevant, without setting `add_linker_flag(-Wl,-z,notext)`, I get the following error:\r\n```\r\n ld.lld: error: relocation R_386_PC32 cannot be used against symbol \u0027CONTEXT_CaptureContext\u0027; recompile with -fPIC\r\n                     \u003e\u003e\u003e defined in ../../../pal/src/libcoreclrpal.a(context2.S.o)\r\n                     \u003e\u003e\u003e referenced by context2.S:92 (/var/build/dotnet-stage0/src/dotnet-v8.0.100-preview.2/src/runtime/src/coreclr/pal/src/arch/i386/context2.S:92)\r\n                     \u003e\u003e\u003e               context2.S.o:(RtlCaptureContext) in archive ../../../pal/src/libcoreclrpal.a\r\n                     clang-15: error: linker command failed with exit code 1 (use -v to see invocation)\r\n                     make[2]: *** [tools/superpmi/superpmi-shim-simple/CMakeFiles/superpmi-shim-simple.dir/build.make:425: tools/superpmi/superpmi-shim-simple/libsuperpmi-shim-simple.so] Error 1\r\n                     make[1]: *** [CMakeFiles/Makefile2:4511: tools/superpmi/superpmi-shim-simple/CMakeFiles/superpmi-shim-simple.dir/all] Error 2\r\n                     make[1]: *** Waiting for unfinished jobs....\r\n```",
                                           "updatedAt":  "2023-03-16T18:45:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Xxfho",
                                           "createdAt":  "2023-03-16T19:03:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "\u003e Turns out setting -m32 works\r\n\r\nNice, can we remove conditions around -m32 from #83464 since it doesn\u0027t break the build?\r\n\r\nAnother difference is linkage of libucontext library on linux-musl-x86 for libunwind, which we don\u0027t need on linux-musl-x64. But that too seem unrelated to memory map issue.\r\n\r\nI think the issue is that PAL doesn\u0027t handle some case and we run into infinite recursion (the strace posted above is way too many \u003e 10 MB of `mremap` / `munmap` lines which suggests lack of error handling somewhere in PAL). It could be that we can make PAL resilient against this system state as a general improvement. Similar issues are reported previously: https://github.com/dotnet/runtime/issues/79612, https://github.com/dotnet/runtime/issues/13027 etc. but their resolution is mostly about lifting virtual memory limit. In this case, we have that `unlimited` so it could be a bug in 32-bit specific branch code somewhere. I haven\u0027t investigated with debug build.",
                                           "updatedAt":  "2023-03-16T19:03:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5Xxtsy",
                                           "createdAt":  "2023-03-16T19:51:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ayakael",
                                           "body":  "\u003e \u003e Turns out setting -m32 works\r\n\u003e \r\n\u003e Nice, can we remove conditions around -m32 from #83464 since it doesn\u0027t break the build?\r\n\u003e \r\n\u003e Another difference is linkage of libucontext library on linux-musl-x86 for libunwind, which we don\u0027t need on linux-musl-x64. But that too seem unrelated to memory map issue.\r\n\u003e \r\n\u003e I think the issue is that PAL doesn\u0027t handle some case and we run into infinite recursion (the strace posted above is way too many \u003e 10 MB of `mremap` / `munmap` lines which suggests lack of error handling somewhere in PAL). It could be that we can make PAL resilient against this system state as a general improvement. Similar issues are reported previously: #79612, #13027 etc. but their resolution is mostly about lifting virtual memory limit. In this case, we have that `unlimited` so it could be a bug in 32-bit specific branch code somewhere. I haven\u0027t investigated with debug build.\r\n\r\nYeah, we could. The following patch after toolchain changes works:\r\n```diff\r\ndiff --git a/src/runtime/eng/common/cross/toolchain.cmake b/src/runtime/eng/common/cross/toolchain.cmake\r\nindex 2bb1e0845..fed3b0fad 100644\r\n--- a/src/runtime/eng/common/cross/toolchain.cmake\r\n+++ b/src/runtime/eng/common/cross/toolchain.cmake\r\n@@ -284,8 +284,7 @@ elseif(TARGET_ARCH_NAME STREQUAL \"x86\")\r\n     add_toolchain_linker_flag(\"--target=${TOOLCHAIN}\")\r\n     add_toolchain_linker_flag(\"-Wl,--rpath-link=${CROSS_ROOTFS}/usr/lib/gcc/${TOOLCHAIN}\")\r\n-  else()\r\n-    add_toolchain_linker_flag(-m32)\r\n   endif()\r\n+  add_toolchain_linker_flag(-m32)\r\n   if(TIZEN)\r\n     add_toolchain_linker_flag(\"-B${CROSS_ROOTFS}/usr/lib/gcc/${TIZEN_TOOLCHAIN}\")\r\n     add_toolchain_linker_flag(\"-L${CROSS_ROOTFS}/lib\")\r\n@@ -324,9 +323,8 @@ if(TARGET_ARCH_NAME MATCHES \"^(arm|armel)$\")\r\n elseif(TARGET_ARCH_NAME STREQUAL \"x86\")\r\n   if(EXISTS ${CROSS_ROOTFS}/usr/lib/gcc/i586-alpine-linux-musl)\r\n     add_compile_options(--target=${TOOLCHAIN})\r\n-  else()\r\n-    add_compile_options(-m32)\r\n   endif()\r\n+  add_compile_options(-m32)\r\n   add_compile_options(-Wno-error=unused-command-line-argument)\r\n endif()\r\n```\r\n\r\n*edit* Updated both PRs with above change",
                                           "updatedAt":  "2023-03-16T19:57:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5k2ZPa",
                                           "createdAt":  "2023-08-24T16:06:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ayakael",
                                           "body":  "Circling back on this, I now get the following error on 8.0.0-preview.7:\r\n\r\n```\r\n$ ./dotnet --info\r\n Fatal error. SSE is not supported on the processor.\r\n Aborted\r\n```",
                                           "updatedAt":  "2023-08-24T16:06:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5k2mPf",
                                           "createdAt":  "2023-08-24T16:31:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tannergooding",
                                           "body":  ".NET requires SSE/SSE2 and cmov (on x86/x64 based CPUs), which have been around for well over 20 years now and are guaranteed available on any 64-bit capable CPU (regardless of whether the OS is running as 32-bit or 64-bit).",
                                           "updatedAt":  "2023-08-24T16:36:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5k3OH8",
                                           "createdAt":  "2023-08-24T18:18:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ayakael",
                                           "body":  "\u003e .NET requires SSE/SSE2 and cmov (on x86/x64 based CPUs), which have been around for well over 20 years now and are guaranteed available on any 64-bit capable CPU (regardless of whether the OS is running as 32-bit or 64-bit).\r\n\r\nRight, so why would running an x86 SDK in a x86 Alpine chroot on x86_64 hardware cause this error, when indeed the CPU has it? ",
                                           "updatedAt":  "2023-08-24T18:18:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5k3PHu",
                                           "createdAt":  "2023-08-24T18:21:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tannergooding",
                                           "body":  "If you\u0027re running in an emulator, its possible it has it disabled. You could always manually check CPUID or `cat /proc/cpuinfo` or `gcc -dumpmachine`",
                                           "updatedAt":  "2023-08-24T18:21:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5k3Qzl",
                                           "createdAt":  "2023-08-24T18:27:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ayakael",
                                           "body":  "It\u0027s very much available:\r\n\r\n```\r\n$ cat /proc/cpuinfo\r\n[...]\r\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr *sse* sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm rep_good nopl cpuid extd_apicid tsc_known_freq pni pclmulqdq ssse3 fma cx16 sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm cr8_legacy abm sse4a misalignsse 3dnowprefetch bpext ssbd ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 clzero xsaveerptr arat umip rdpid\r\n[...]\r\n```\r\n\r\nI can\u0027t find the piece of code that detects sse, but something doesn\u0027t seem right.",
                                           "updatedAt":  "2023-08-24T18:27:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5k3XLE",
                                           "createdAt":  "2023-08-24T18:47:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "tannergooding",
                                           "body":  "It\u0027s here for .NET 8: https://github.com/dotnet/runtime/blob/main/src/coreclr/vm/codeman.cpp#L1286-L1289\r\n\r\nand here for .NET 7: https://github.com/dotnet/runtime/blob/release/7.0/src/coreclr/vm/codeman.cpp#L1517-L1520",
                                           "updatedAt":  "2023-08-24T18:47:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5pxV5g",
                                           "createdAt":  "2023-10-23T06:54:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODLMHPg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2023-10-27T22:05:08Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "bfren",
                                           "body":  "I had this error too - with the same HRESULT.  After many (many) hours of searching and testing, I discovered it was nothing to do with memory or CPUs and everything to do with permissions on `/tmp`.\r\n\r\nUsing `COMPlus_EnableDiagnostics=0` I managed to get the application to startup, and saw a load of these followed by permissions errors:\r\n\r\n```\r\nNo XML encryptor configured. Key {daa53741-8295-4c9b-ae9c-e69b003f16fa} may be persisted to storage in unencrypted form.\r\n```\r\n\r\nTurns out my `/tmp` permissions were `1744` for some reason - changed them to `1777` and boom, it all works beautifully.\r\n\r\nI don\u0027t know if this will help you but it\u0027s lifted my mood that\u0027s been rather poor for the last two days trying to track this one down!",
                                           "updatedAt":  "2023-10-26T14:46:22Z"
                                       }
                                   ],
                         "totalCount":  15
                     },
        "title":  "`Failed to create CoreCLR, HRESULT: 0x8007000E` on linux-musl-x86",
        "labels":  [
                       "arch-x86",
                       "os-linux",
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/97452",
        "createdAt":  "2024-01-24T16:12:28Z",
        "number":  97452,
        "author":  "MichalPetryka",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-03T20:32:17Z",
        "body":  "While working on #92974, I\u0027ve realised that on some platforms without builtin atomics for all types, compilers might use a locking based implementation for them.\r\nChecking the C11 defines, it seems like [at least ARM32 is affected](https://godbolt.org/z/seqMYfn38) with Clang, but other platforms might be affected with GCC too.\r\n\r\n[Looking at the exact codegen](https://godbolt.org/z/GTq64oxWK), ARM32 and ARM 8.0 without atomics seem to use helper calls for Interlocked, only arm32 gives warnings about locking though.\r\n\r\nThe code should be fixed to avoid potential issues with this, I see 4 possible solutions:\r\n1. Make the helper calls QCalls - expensive\r\n2. Switch to preemptive in the FCall on affected platforms - also expensive\r\n3. Implement Interlocked with always expand intrinsics on affected platforms - requires JIT work (should already be handled on ARM 8.0 in .NET 9)\r\n4. Rewrite the unmanaged helpers in raw assembly in a way that doesn\u0027t use locks - requires VM work\r\n\r\nRelying on the compiler to be lock free on any platform that uses helper calls for atomics seems unreliable as AFAIR those are free to implement them using locks.\r\ncc @jkotas ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOccsK7A==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc5xwZWd",
                                           "createdAt":  "2024-01-24T16:42:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "Do `__sync...` intrinsics have this problem? I think the simplest solution is to avoid `__atomic_exchange_n` and switch to `__sync...` intrinsics: https://github.com/dotnet/runtime/pull/92974#issuecomment-1908427316 . ",
                                           "updatedAt":  "2024-01-24T16:42:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5xwaHi",
                                           "createdAt":  "2024-01-24T16:43:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichalPetryka",
                                           "body":  "\u003e Do `__sync...` intrinsics have this problem? I think the simplest solution is to avoid `__atomic_exchange_n` and switch to `__sync...` intrinsics: [#92974 (comment)](https://github.com/dotnet/runtime/pull/92974#issuecomment-1908427316) .\r\n\r\nThey also emit helper calls, they don\u0027t issue a warning though. I wouldn\u0027t rely on it being fine however as their docs say:\r\n```\r\nNot all operations are supported by all target processors. If a particular operation cannot be implemented on the target processor, a warning will be generated and a call an external function will be generated. The external function will carry the same name as the builtin, with an additional suffix `_n\u0027 where n is the size of the data type.\r\n```\r\nwhich makes it seem like there should be a warning in such case.",
                                           "updatedAt":  "2024-01-24T16:43:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5xyaDJ",
                                           "createdAt":  "2024-01-24T22:40:18Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "It is reasonable to assume that the helper calls that __sync intrinsics compile into do not use locks. The helper calls can be used e.g. to select the most efficient implementation for given hardware.\r\n\r\nPer LLVM documentation, `__sync_...` intrinsics are required to not use locks. From  https://github.com/llvm/llvm-project/blob/main/llvm/docs/Atomics.rst#libcalls-__sync_ : \"the Target in LLVM can claim support for atomics of an appropriate size, and then implement some subset of the operations via libcalls to a __sync_* function. Such functions must not use locks in their implementation\"\r\n\r\n",
                                           "updatedAt":  "2024-01-24T22:40:18Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5xymXj",
                                           "createdAt":  "2024-01-24T23:25:28Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichalPetryka",
                                           "body":  "This [doesn\u0027t seem to be guaranteed in GCC](https://gcc.gnu.org/onlinedocs/gcc/_005f_005fsync-Builtins.html):\r\n```\r\nThese functions are implemented in terms of the ‘__atomic’ builtins (see https://gcc.gnu.org/onlinedocs/gcc/_005f_005fatomic-Builtins.html).\r\nThey should not be used for new code which should use the ‘__atomic’ builtins instead.\r\n\r\nNot all operations are supported by all target processors.\r\nIf a particular operation cannot be implemented on the target processor, a warning is generated and a call to an external function is generated.\r\nThe external function carries the same name as the built-in version, with an additional suffix ‘_n’ where n is the size of the data type.\r\n```",
                                           "updatedAt":  "2024-01-24T23:25:28Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5xyoS8",
                                           "createdAt":  "2024-01-24T23:31:44Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "It may not be guaranteed, but it is reasonable to assume that it is the case.\r\n\r\nAlso, our officially supported build is clang/llvm. There is very little testing of gcc based builds. It is likely that gcc based builds have number of issues, so one more potential gcc-specific issue is not really a problem.",
                                           "updatedAt":  "2024-01-24T23:31:44Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc5xywrs",
                                           "createdAt":  "2024-01-25T00:11:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MichalPetryka",
                                           "body":  "It seems however that with GCC [all atomics are lock free](https://godbolt.org/z/qWec3ez3x) with the exception of 64bit integers on RISC-V 32bit.\r\n[It seems to not use helpers on arm32.](https://godbolt.org/z/GMqK7Kzf6)",
                                           "updatedAt":  "2024-01-25T00:11:35Z"
                                       }
                                   ],
                         "totalCount":  6
                     },
        "title":  "ARM32 (and possibly some others) might take locks in Interlocked FCalls",
        "labels":  [
                       "arch-arm32",
                       "area-PAL-coreclr",
                       "in-pr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/99171",
        "createdAt":  "2024-03-01T18:53:30Z",
        "number":  99171,
        "author":  "AustinWise",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC2Qaew==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "jkotas",
                                            "createdAt":  "2024-03-02T19:01:47Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-07-07T17:48:39Z",
        "body":  "It appears this code has been copy-pasted 4 times:\r\n\r\n* [src/coreclr/gc/unix/cgroup.cpp](https://github.com/dotnet/runtime/blob/main/src/coreclr/gc/unix/cgroup.cpp)\r\n* [src/coreclr/nativeaot/Runtime/unix/cgroupcpu.cpp](https://github.com/dotnet/runtime/blob/main/src/coreclr/nativeaot/Runtime/unix/cgroupcpu.cpp) \r\n* [src/coreclr/pal/src/misc/cgroup.cpp](https://github.com/dotnet/runtime/blob/main/src/coreclr/pal/src/misc/cgroup.cpp)\r\n* [src/mono/mono/utils/mono-cgroup.c](https://github.com/dotnet/runtime/blob/main/src/mono/mono/utils/mono-cgroup.c)\r\n\r\nI\u0027m guessing a good place to put a consolidated implementation is in [src/native/minipal/](https://github.com/dotnet/runtime/tree/main/src/native/minipal).\r\n\r\nThere is also a fifth copy written in C# at [src/libraries/Common/src/Interop/Linux/cgroups/Interop.cgroups.cs](https://github.com/dotnet/runtime/blob/main/src/libraries/Common/src/Interop/Linux/cgroups/Interop.cgroups.cs). I\u0027m not sure if it is worthwhile to change the C# code to delegated to a common unmanaged implementation.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOdc9cWQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc51tkWs",
                                           "createdAt":  "2024-03-02T19:01:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "cc @janvorli ",
                                           "updatedAt":  "2024-03-02T19:01:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc51z1xZ",
                                           "createdAt":  "2024-03-04T12:56:01Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "\u003e I\u0027m guessing a good place to put a consolidated implementation is in [src/native/minipal/](https://github.com/dotnet/runtime/tree/main/src/native/minipal).\r\n\r\nYes, we\u0027ve already moved the utf8 code there from the coreclr PAL in the past.\r\n\r\nI was actually not aware that mono used a clone of that code too. If there are any differences, I believe the files in [src/coreclr/pal/src/misc/cgroup.cpp](https://github.com/dotnet/runtime/blob/main/src/coreclr/pal/src/misc/cgroup.cpp) and [src/coreclr/gc/unix/cgroup.cpp](https://github.com/dotnet/runtime/blob/main/src/coreclr/gc/unix/cgroup.cpp) should be the source of truth.\r\n",
                                           "updatedAt":  "2024-03-04T12:56:01Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Deduplicate cgroup code",
        "labels":  [
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/99363",
        "createdAt":  "2024-03-06T16:34:54Z",
        "number":  99363,
        "author":  "janvorli",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHOC2WHKw==",
                          "nodes":  [
                                        {
                                            "content":  "HEART",
                                            "user":  "ivanpovazan",
                                            "createdAt":  "2024-03-06T16:37:33Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-07-07T17:49:10Z",
        "body":  "@ivanpovazan have made me aware today of the fact that we build and link cgroup.cpp variants and cgroupcpu.cpp macOS. Even though it doesn\u0027t cause any harm execution-wise, it is unused on it (we just effectively call statfs on \"/sys/fs/cgroup\" to check for the filesystem magic and return false since no cgroup filesystem is mounted there), there is no sense in having the code in.\r\n\r\nWe should still compile / link the code, but ifdef out everything that is trying to access cgroups. Only keep functions `GetPhysicalMemoryUsed` / `GetRestrictedPhysicalMemoryLimit` / `PAL_GetCpuLimit` / `GetCpuLimit` that it makes sense to preserve as they either have an implementation that contains non-cgroup fallback or might get one in the future.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOhblYxA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc52GGCc",
                                           "createdAt":  "2024-03-06T16:42:23Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ivanpovazan",
                                           "body":  "/cc: @MichalStrehovsky ",
                                           "updatedAt":  "2024-03-06T16:42:23Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6FuVjE",
                                           "createdAt":  "2024-07-22T18:00:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODrFmRw==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "ivanpovazan",
                                                                               "createdAt":  "2024-07-22T19:01:38Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Moving to 10.0 as it is not critical and we have more pressing issues to fix for 9.",
                                           "updatedAt":  "2024-07-22T18:00:40Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Exclude all cgroup.cpp variants from build on non-linux Unix OSes.",
        "labels":  [
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/99495",
        "createdAt":  "2024-03-10T15:18:30Z",
        "number":  99495,
        "author":  "gbalykov",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-03T20:33:38Z",
        "body":  "When first SIGABRT is sent to .net process (`kill -SIGABRT $PID`) process continues execution. Process only aborts after the second one.\r\n\r\nThis happens because currently SIGABRT handler passes `signalRestarts=true` to `invoke_previous_action`:\r\n\r\nhttps://github.com/dotnet/runtime/blob/a767111a925f8edc0b781d79ac30fd4543c4437f/src/coreclr/pal/src/exception/signal.cpp#L696-L699\r\n\r\nAnd `invoke_previous_action` simply resets signal handler to previous one without aborting:\r\n\r\nhttps://github.com/dotnet/runtime/blob/a767111a925f8edc0b781d79ac30fd4543c4437f/src/coreclr/pal/src/exception/signal.cpp#L389-L406\r\n\r\nIt seems that currently runtime only handles the case of `abort()`, which raises SIGABRT second time when there\u0027s non-default signal handler. However, shouldn\u0027t runtime abort on the first SIGABRT received?\r\n\r\nThis can be achieved with:\r\n```cpp\r\n static void sigabrt_handler(int code, siginfo_t *siginfo, void *context) \r\n { \r\n     invoke_previous_action(\u0026g_previous_sigabrt, code, siginfo, context, false); \r\n } \r\n```\r\n\r\ncc @jkotas @HJLeee @clamp03 @wscho77 @t-mustafin @viewizard ",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOeB9uBA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc52c17w",
                                           "createdAt":  "2024-03-10T15:40:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "cc @janvorli ",
                                           "updatedAt":  "2024-03-10T15:40:39Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc54H24E",
                                           "createdAt":  "2024-03-22T15:18:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gbalykov",
                                           "body":  "@janvorli do you know why is it implemented this way?",
                                           "updatedAt":  "2024-03-22T15:18:02Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Runtime doesn\u0027t abort after first SIGABRT sent to process",
        "labels":  [
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/103741",
        "createdAt":  "2024-06-20T02:48:37Z",
        "number":  103741,
        "author":  "koorogi",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-07T17:41:34Z",
        "body":  "### Description\n\nUsing netcoredbg (https://github.com/Samsung/netcoredbg) will crash with a segmentation fault when running on a musl-based Linux system.\n\n### Reproduction Steps\n\n```\r\n$ dotnet new console -o crash\r\nThe template \"Console App\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRestoring /home/koorogi/tmp/crash/crash/crash.csproj:\r\n  Determining projects to restore...\r\n  Restored /home/koorogi/tmp/crash/crash/crash.csproj (in 589 ms).\r\nRestore succeeded.\r\n\r\n\r\n$ cd crash\r\n$ dotnet build\r\nMSBuild version 17.8.5+b5265ef37 for .NET\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  crash -\u003e /home/koorogi/tmp/crash/crash/bin/Debug/net8.0/crash.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:01.73\r\n$ netcoredbg\r\nncdb\u003e file bin/Debug/net8.0/crash\r\nncdb\u003e run\r\nSegmentation fault\r\n```\n\n### Expected behavior\n\nShould be able to debug the program.\n\n### Actual behavior\n\nThe debugger crashes.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n* .NET 8.0.105\r\n* Gentoo Linux\r\n* Musl libc\r\n* x86_64\r\n\r\nThe issue is specific to the use of musl.\n\n### Other information\n\nBacktrace from gdb:\r\n\r\n```\r\n(gdb) bt\r\n#0  0x00007ffff72fd1f9 in EnsureStackSize (stackSize=1572864)\r\n    at /var/tmp/portage/dev-dotnet/dotnet-sdk-8.0.105/work/dotnet-sdk-8.0.5/src/runtime/artifacts/source-build/self/src/src/coreclr/pal/src/init/pal.cpp:266\r\n#1  0x00007ffff72fcbe3 in Initialize (argc=argc@entry=1, argv=argv@entry=0x7ffff67b7f78, \r\n    flags=flags@entry=255)\r\n    at /var/tmp/portage/dev-dotnet/dotnet-sdk-8.0.105/work/dotnet-sdk-8.0.5/src/runtime/artifacts/source-build/self/src/src/coreclr/pal/src/init/pal.cpp:410\r\n#2  0x00007ffff72fd35e in PAL_InitializeCoreCLR (\r\n    szExePath=0x7ffff66333e0 \"/usr/lib/netcoredbg/netcoredbg\", runningInExe=\u003coptimized out\u003e)\r\n    at /var/tmp/portage/dev-dotnet/dotnet-sdk-8.0.105/work/dotnet-sdk-8.0.5/src/runtime/artifacts/source-build/self/src/src/coreclr/pal/src/init/pal.cpp:778\r\n#3  0x00007ffff6e58b13 in coreclr_initialize (exePath=0x7ffff66333e0 \"/usr/lib/netcoredbg/netcoredbg\", \r\n    appDomainFriendlyName=appDomainFriendlyName@entry=0x5555556ecdea \"debugger\", \r\n    propertyCount=propertyCount@entry=5, propertyKeys=propertyKeys@entry=0x7ffff67b81a0, \r\n    propertyValues=propertyValues@entry=0x7ffff67b81e0, \r\n    hostHandle=hostHandle@entry=0x555555746c60 \u003cnetcoredbg::Interop::(anonymous namespace)::hostHandle\u003e, \r\n    domainId=0x555555746c58 \u003cnetcoredbg::Interop::(anonymous namespace)::domainId\u003e)\r\n    at /var/tmp/portage/dev-dotnet/dotnet-sdk-8.0.105/work/dotnet-sdk-8.0.5/src/runtime/artifacts/source-build/self/src/src/coreclr/dlls/mscoree/exports.cpp:275\r\n#4  0x0000555555647baa in netcoredbg::Interop::Init (coreClrPath=...)\r\n    at /usr/lib/gcc/x86_64-pc-linux-musl/14/include/g++-v14/bits/basic_string.h:227\r\n#5  0x000055555561d2a0 in netcoredbg::ManagedCallback::CreateProcessW (this=0x7ffff67b9e90, \r\n    pProcess=0x7ffff7417b08)\r\n    at /var/tmp/portage/dev-dotnet/netcoredbg-3.0.0.1018-r1/work/netcoredbg-3.0.0-1018/src/debugger/managedcallback.cpp:157\r\n#6  0x00007ffff6b1006d in ShimProxyCallback::QueueCreateProcess(ICorDebugProcess*)::CreateProcessEvent::Dispatch(ManagedEvent::DispatchArgs) (this=0x7ffff7418b50, args=...)\r\n    at /var/tmp/portage/dev-dotnet/dotnet-sdk-8.0.105/work/dotnet-sdk-8.0.5/src/runtime/artifacts/source-build/self/src/src/coreclr/debug/di/shimcallback.cpp:350\r\n#7  0x00007ffff6af93fe in CordbProcess::DispatchRCEvent (this=this@entry=0x7ffff7417ae0)\r\n    at /var/tmp/portage/dev-dotnet/dotnet-sdk-8.0.105/work/dotnet-sdk-8.0.5/src/runtime/artifacts/source-build/self/src/src/coreclr/debug/di/process.cpp:4701\r\n#8  0x00007ffff6b025c8 in CordbRCEventThread::FlushQueuedEvents (this=this@entry=0x7ffff67c1460, \r\n    process=process@entry=0x7ffff7417ae0)\r\n    at /var/tmp/portage/dev-dotnet/dotnet-sdk-8.0.105/work/dotnet-sdk-8.0.5/src/runtime/artifacts/source-build/self/src/src/coreclr/debug/di/process.cpp:10296\r\n#9  0x00007ffff6b02e6c in CordbRCEventThread::ThreadProc (this=0x7ffff67c1460)\r\n    at /var/tmp/portage/dev-dotnet/dotnet-sdk-8.0.105/work/dotnet-sdk-8.0.5/src/runtime/artifacts/source-build/self/src/src/coreclr/debug/di/process.cpp:10554\r\n#10 0x00007ffff6b02f19 in CordbRCEventThread::ThreadProc (parameter=0x180000)\r\n    at /var/tmp/portage/dev-dotnet/dotnet-sdk-8.0.105/work/dotnet-sdk-8.0.5/src/runtime/artifacts/source-build/self/src/src/coreclr/debug/di/process.cpp:10620\r\n#11 0x00007ffff69f44a0 in CorUnix::CPalThread::ThreadEntry (pvParam=0x7ffff67bf740)\r\n    at /var/tmp/portage/dev-dotnet/dotnet-sdk-8.0.105/work/dotnet-sdk-8.0.5/src/runtime/artifacts/source-build/self/src/src/coreclr/pal/src/thread/thread.cpp:1760\r\n#12 0x00007ffff7fb69ae in start (p=0x7ffff67b89b0) at src/thread/pthread_create.c:207\r\n#13 0x00007ffff7fc48b5 in __clone () at src/thread/x86_64/clone.s:22\r\nBacktrace stopped: frame did not save the PC\r\n```\r\n\r\nThe crash occurs in `EnsureStackSize`, which simply allocates 1.5MB on the stack and tries to write to it to ensure there is enough stack space available.\r\n\r\nMusl by default allocates smaller thread stack sizes than glibc does, but that\u0027s actually _not_ the root issue in this case.  This thread was created by .NET itself, and a fixed stack size (larger than the musl default) is [requested](https://github.com/dotnet/runtime/blob/4b111dce02fa60a8345d76f262c3206fa37641ba/src/coreclr/pal/src/thread/thread.cpp#L621) when the thread is created.\r\n\r\nThe value of `g_defaultStackSize` which determines the requested stack size is [set to a fixed value of 1.5MB](https://github.com/dotnet/runtime/blob/4b111dce02fa60a8345d76f262c3206fa37641ba/src/coreclr/pal/src/init/pal.cpp#L297) on musl.\r\n\r\nThis same size (`g_defaultStackSize`) is what is [passed to `EnsureStackSize`](https://github.com/dotnet/runtime/blob/4b111dce02fa60a8345d76f262c3206fa37641ba/src/coreclr/pal/src/init/pal.cpp#L411).\r\n\r\nSo, a thread is created with a 1.5MB stack, and 13 stack frames deep, the code tries to verify that 1.5MB is still available on the stack, and it isn\u0027t because those 13 stack frames have already used some of it.\r\n\r\nBased on https://github.com/dotnet/runtime/issues/9855#issuecomment-369389188, it sounds like `EnsureStackSize` is only intended to be used on the main thread, but the code that ensures this assumes that `Initialize` is called on the main thread, and that doesn\u0027t seem to be the case here.\r\n\r\nI don\u0027t know if netcoredbg is doing something wrong by calling into `Initialize` from a different thread, but it looks like the thread where this call is happening is the [`CordbRCEventThread::ThreadProc`](https://github.com/dotnet/runtime/blob/4b111dce02fa60a8345d76f262c3206fa37641ba/src/coreclr/debug/di/process.cpp#L10401) thread.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOgh1UJA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6B68xH",
                                           "createdAt":  "2024-06-20T02:50:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @tommcdon\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2024-06-20T02:50:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6B99he",
                                           "createdAt":  "2024-06-20T12:03:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "The coreclr_initialize is supposed to be called on the main thread only. Looking at the stack trace above, it is actually quite strange, as it calls coreclr_initialize on a thread that was created by the coreclr itself (the thread started in CorUnix::CPalThread::ThreadEntry). So it looks like a bug in the netcoredb - it must have already initialized coreclr before, otherwise it would not be able to start a thread under it.",
                                           "updatedAt":  "2024-06-20T12:03:00Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6B9-MR",
                                           "createdAt":  "2024-06-20T12:04:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "cc: @gbalykov ",
                                           "updatedAt":  "2024-06-20T12:04:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6B-Q6N",
                                           "createdAt":  "2024-06-20T12:46:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gbalykov",
                                           "body":  "cc @viewizard ",
                                           "updatedAt":  "2024-06-20T12:46:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6B-RcK",
                                           "createdAt":  "2024-06-20T12:47:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gbalykov",
                                           "body":  "@koorogi please share your build command for netcoredbg and runtime",
                                           "updatedAt":  "2024-06-20T12:50:42Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6B-obt",
                                           "createdAt":  "2024-06-20T13:22:43Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "viewizard",
                                           "body":  "In netcoredbg this `coreclr_initialize` called from `ICorDebugManagedCallback::CreateProcess` (that is callback of debuggee process). Note, this is not start of debuggee process, but internal managed part load of debugger itself (we call managed delegates from native debugger code):\r\nhttps://github.com/Samsung/netcoredbg/blob/e4512506fd211493864c4187fb52ff1384af8f5e/src/managed/interop.cpp#L214\r\n\r\nNot really sure why this happens for musl only, can\u0027t reproduce thus issue on Ubuntu with .NET SDK 8.0.",
                                           "updatedAt":  "2024-06-20T13:22:43Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6B_Acd",
                                           "createdAt":  "2024-06-20T13:57:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "\u003e can\u0027t reproduce thus issue on Ubuntu with .NET SDK 8.0.\r\n\r\n`ENSURE_PRIMARY_STACK_SIZE` is only enabled on linux-musl: https://github.com/dotnet/runtime/blob/4a7fe654d798a372f5786f026006437444f14f1e/src/coreclr/pal/src/CMakeLists.txt#L93-L98",
                                           "updatedAt":  "2024-06-20T13:57:37Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6B_SkA",
                                           "createdAt":  "2024-06-20T14:27:34Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODmZlRg==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2024-06-20T14:50:13Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkotas",
                                           "body":  "You can workaround this by setting `DOTNET_DefaultStackSize` to something less than 1.5MB before `core_initialize` call and resetting it back to its original value after the call.\r\n\r\nAs for the proper fix, would it make sense to move the stack-committing to the host so that it is really only done on the main thread when the runtime owns the process?",
                                           "updatedAt":  "2024-06-20T14:27:34Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6B_VSd",
                                           "createdAt":  "2024-06-20T14:32:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "Somewhat related to #96347",
                                           "updatedAt":  "2024-06-20T14:32:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6B_iLW",
                                           "createdAt":  "2024-06-20T14:56:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODmZsWQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "EYES",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2024-06-20T15:00:37Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "janvorli",
                                           "body":  "\u003e Note, this is not start of debuggee process, but internal managed part load of debugger itself (we call managed delegates from native debugger code):\r\n\r\nWhat I don\u0027t understand though is that the coreclr_initialize is called on a thread that was created by coreclr. From the stack trace above\r\n```\r\n11 0x00007ffff69f44a0 in CorUnix::CPalThread::ThreadEntry (pvParam=0x7ffff67bf740)\r\n    at /var/tmp/portage/dev-dotnet/dotnet-sdk-8.0.105/work/dotnet-sdk-8.0.5/src/runtime/artifacts/source-build/self/src/src/coreclr/pal/src/thread/thread.cpp:1760\r\n#12 0x00007ffff7fb69ae in start (p=0x7ffff67b89b0) at src/thread/pthread_create.c:207\r\n#13 0x00007ffff7fc48b5 in __clone () at src/thread/x86_64/clone.s:22\r\n```\r\n\r\nThe `CorUnix::CPalThread::ThreadEntry` is what coreclr sets as the entry point for its threads. An external native thread would not have that there. \r\n\r\n",
                                           "updatedAt":  "2024-06-20T14:56:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6B_kvu",
                                           "createdAt":  "2024-06-20T15:01:33Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "This is a thread created by CoreCLR PAL linked into libmscordbi.so. libmscordbi.so is out-proc debugger component., not a full CoreCLR runtime.",
                                           "updatedAt":  "2024-06-20T15:01:33Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6B_kze",
                                           "createdAt":  "2024-06-20T15:01:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "viewizard",
                                           "body":  "\u003e What I don\u0027t understand though is that the coreclr_initialize is called on a thread that was created by coreclr.\r\n\r\nYes, this thread created by coreclr (debugger part of it related to dbgshim) that call `ICorDebugManagedCallback::CreateProcess` (debugger native code).",
                                           "updatedAt":  "2024-06-20T15:02:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6B_oC0",
                                           "createdAt":  "2024-06-20T15:08:05Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "\u003e This is a thread created by CoreCLR PAL linked into libmscordbi.so.\r\n\r\nAh, I\u0027ve missed that. ",
                                           "updatedAt":  "2024-06-20T15:08:05Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6B_roJ",
                                           "createdAt":  "2024-06-20T15:15:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "\u003e As for the proper fix, would it make sense to move the stack-committing to the host so that it is really only done on the main thread when the runtime owns the process?\r\n\r\nThat would potentially break existing 3rd party hosts and it is also kind of weird to expose this PAL internal behavior. I would rather check for the primary thread and ran the EnsureStackSize only when it is executing on the primary thread. It doesn\u0027t make sense to run it on other threads anyways. Essentially, just checking `gettid() == getpid()`.",
                                           "updatedAt":  "2024-06-20T15:15:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6CEDXP",
                                           "createdAt":  "2024-06-21T06:35:56Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "We should be setting the thread stack size iff we created the thread. If somebody else created the thread and hosting us, we should leave the thread stack size alone.\r\n\r\nCoreCLR PAL does not have a reliable way to tell whether the main thread was created by us (the default dotnet host) or whether somebody else is hosting us. `gettid() == getpid()` condition is an approximation. When the condition is false, we definitely know that it is not our thread as you have pointed out. When this condition is true, we cannot tell whether we own the process or whether we are hosted by an app that happened to initialize us on the main thread.",
                                           "updatedAt":  "2024-06-21T06:35:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6CEP-i",
                                           "createdAt":  "2024-06-21T07:16:15Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "Perhaps something like:\r\n\r\n```c++\r\nbool IsThreadOwnedByCoreCLRPal()\r\n{\r\n    return !pthread_getspecific(thObjKey);\r\n}\r\n```\r\n\r\n```diff\r\n#ifdef ENSURE_PRIMARY_STACK_SIZE\r\n/*++\r\nFunction:\r\n  EnsureStackSize\r\n\r\nAbstract:\r\n  This fixes a problem on MUSL where the initial stack size reported by the\r\n  pthread_attr_getstack is about 128kB, but this limit is not fixed and\r\n  the stack can grow dynamically. The problem is that it makes the\r\n  functions ReflectionInvocation::[Try]EnsureSufficientExecutionStack\r\n  to fail for real life scenarios like e.g. compilation of corefx.\r\n  Since there is no real fixed limit for the stack, the code below\r\n  ensures moving the stack limit to a value that makes reasonable\r\n  real life scenarios work.\r\n\r\n --*/\r\n__attribute__((noinline,NOOPT_ATTRIBUTE))\r\nvoid\r\nEnsureStackSize(SIZE_T stackSize)\r\n{\r\n+     // if somebody else created the thread and hosting us, we should leave the thread stack size alone. \r\n+    if (!IsThreadOwnedByCoreCLRPal()) return;\r\n+\r\n    volatile uint8_t *s = (uint8_t *)_alloca(stackSize);\r\n    *s = 0;\r\n}\r\n#endif // ENSURE_PRIMARY_STACK_SIZE\r\n```",
                                           "updatedAt":  "2024-06-21T07:16:15Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6CF7pd",
                                           "createdAt":  "2024-06-21T11:43:38Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@am11 we need to do that for the primary thread only and never for secondary threads. That thread is always created by the OS. And even if we are hosted by a 3rd party host, we should ensure the stack size, because if this fails, there is not enough space on the stack left to ensure correct execution of the runtime.",
                                           "updatedAt":  "2024-06-21T11:43:38Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6CF9UF",
                                           "createdAt":  "2024-06-21T11:48:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "We could make the check more involved. We could allocate only stackSize minus the already used part of the stack and also trim the stackSize by the stack rlimit in case someone sets that. I think that should make it behave correctly in all scenarios.",
                                           "updatedAt":  "2024-06-21T11:48:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6CGDoo",
                                           "createdAt":  "2024-06-21T12:06:35Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "@janvorli, thanks. A question: is it absolutely necessary to ensure the stack size like that? I mean this program:\r\n\r\n```c\r\n#include \u003cstdio.h\u003e\r\n#include \u003cstdlib.h\u003e\r\n#include \u003csys/resource.h\u003e\r\n#include \u003cerrno.h\u003e\r\n\r\nvoid print_stack_limit() {\r\n    struct rlimit rl;\r\n    if (getrlimit(RLIMIT_STACK, \u0026rl) != 0) {\r\n        perror(\"getrlimit\");\r\n        exit(EXIT_FAILURE);\r\n    }\r\n    printf(\"Current stack size limit: soft=%llu, hard=%llu\\n\", (unsigned long long)rl.rlim_cur, (unsigned long long)rl.rlim_max);\r\n}\r\n\r\nvoid set_stack_limit(rlim_t new_limit) {\r\n    struct rlimit rl;\r\n    rl.rlim_cur = new_limit;\r\n    rl.rlim_max = new_limit;\r\n\r\n    if (setrlimit(RLIMIT_STACK, \u0026rl) != 0) {\r\n        perror(\"setrlimit\");\r\n        exit(EXIT_FAILURE);\r\n    }\r\n}\r\n\r\nint main(int argc, char *argv[]) {\r\n    printf(\"Initial stack size limit:\\n\");\r\n    print_stack_limit();\r\n\r\n    if (argc \u003e 1) {\r\n        rlim_t new_limit = strtoull(argv[1], NULL, 10) * 1024;\r\n        printf(\"Setting new stack size limit to %llu KB\\n\", (unsigned long long)new_limit / 1024);\r\n        set_stack_limit(new_limit);\r\n\r\n        printf(\"Updated stack size limit:\\n\");\r\n        print_stack_limit();\r\n    } else {\r\n        printf(\"Usage: %s \u003cnew_stack_size_in_KB\u003e\\n\", argv[0]);\r\n    }\r\n\r\n    return 0;\r\n}\r\n```\r\nwith `cc grow-stack.c \u0026\u0026 ./a.out 1024` prints:\r\n```\r\nInitial stack size limit:\r\nCurrent stack size limit: soft=8388608, hard=18446744073709551615\r\nSetting new stack size limit to 1024 KB\r\nUpdated stack size limit:\r\nCurrent stack size limit: soft=1048576, hard=1048576\r\n```\r\n\r\non ubuntu-arm64 and\r\n```\r\nInitial stack size limit:\r\nCurrent stack size limit: soft=8388608, hard=18446744073709551615\r\nSetting new stack size limit to 1024 KB\r\nUpdated stack size limit:\r\nCurrent stack size limit: soft=1048576, hard=1048576\r\n```\r\non alpine-arm64. So we can probably rely on the libc API without ensuring it (only) on linux-musl?",
                                           "updatedAt":  "2024-06-21T12:40:13Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6CGRAf",
                                           "createdAt":  "2024-06-21T12:41:36Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODmsyRQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "am11",
                                                                               "createdAt":  "2024-06-21T14:24:13Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkotas",
                                                                               "createdAt":  "2024-06-23T02:15:38Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "janvorli",
                                           "body":  "The reason was to ensure that `pthread_attr_getstack` would return a realistic stack limit instead of just 128kB, so that the CPalThread::GetStackLimit can get it. But it seems that for primary thread, we can actually return the rlimit value minus the guard page size and we would not have to do the ensuring. Or it is even possible that current alpine now behaves the same as glibc, this stuff is from the early years of .NET core.",
                                           "updatedAt":  "2024-06-21T12:41:36Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6CG8bc",
                                           "createdAt":  "2024-06-21T14:25:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "\u003e  Or it is even possible that current alpine now behaves the same as glibc, this stuff is from the early years of .NET core.\r\n\r\ncc @ayakael our resident Alpine Linux expert. 😉",
                                           "updatedAt":  "2024-06-21T14:25:22Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6CHVQk",
                                           "createdAt":  "2024-06-21T15:22:37Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "I\u0027ve just verified that on the latest Alpine, it still behaves the same way. The  pthread_attr_getstack returns 128kB stack limit.",
                                           "updatedAt":  "2024-06-21T15:22:37Z"
                                       }
                                   ],
                         "totalCount":  22
                     },
        "title":  "SIGSEGV in netcoredbg when running on Linux with musl libc",
        "labels":  [
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/104211",
        "createdAt":  "2024-06-30T13:14:59Z",
        "number":  104211,
        "author":  "am11",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-07-03T20:39:23Z",
        "body":  "Split from https://github.com/dotnet/runtime/issues/34944#issuecomment-2198431627\r\n\r\nWe should improve this implementation to support illumos properly, so it doesn\u0027t require setting the upper limit for heap memory alloc.\r\n\r\nWith linux procfs we get more accurate or up-to-date stats than sysconf. That\u0027s why it\u0027s only used in fallback. Since on illumos procfs is binary based, it bails out early from `ReadMemAvailable()` function.\r\n\r\nIf there are similar concerns with sysconf() on illumos, kstat might be more accurate; something like this:\r\n```c++\r\n#elif defined(__sun)\r\n    // Use kstat to get available memory on Illumos\r\n    kstat_ctl_t *kc;\r\n    kstat_t *ksp;\r\n    kstat_named_t *knp;\r\n    uint64_t free_memory = 0;\r\n\r\n    if ((kc = kstat_open()) != NULL) {\r\n        if ((ksp = kstat_lookup(kc, \"unix\", 0, \"system_pages\")) != NULL) {\r\n            if (kstat_read(kc, ksp, NULL) != -1) {\r\n                if ((knp = (kstat_named_t *)kstat_data_lookup(ksp, \"pagesfree\")) != NULL) {\r\n                    free_memory = (uint64_t)knp-\u003evalue.ui64 * sysconf(_SC_PAGESIZE);\r\n                }\r\n            }\r\n        }\r\n        kstat_close(kc);\r\n    }\r\n\r\n    if (free_memory == 0)  available = sysconf(SYSCONF_PAGES) * sysconf(_SC_PAGE_SIZE);\r\n\r\n    available = free_memory;\r\n```",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOgzuskw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6DC2aV",
                                           "createdAt":  "2024-06-30T13:22:41Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gwr",
                                           "body":  "Actually `sysconf(_SC_AVPHYS_PAGES)` gets us exactly the value we want here, and is a much simpler interface (and thread-safe etc).",
                                           "updatedAt":  "2024-06-30T13:22:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6DC2tB",
                                           "createdAt":  "2024-06-30T13:27:00Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gwr",
                                           "body":  "It looks like we might be better off using sysconf on Linux as well.\r\nHere\u0027s a handy little test program:\r\n```\r\n#include \u003cstdio.h\u003e\r\n#include \u003cunistd.h\u003e // sysconf\r\n\r\nint\r\nmain(int argc, char **argv)\r\n{\r\n\tlong mem, pgs;\r\n\r\n\tpgs = sysconf(_SC_AVPHYS_PAGES);\r\n\tmem = pgs * (getpagesize() / 1024);\r\n\tprintf(\"Available pages: %lu\\n\", pgs);\r\n\tprintf(\"Available KB: %lu\\n\", mem);\r\n\treturn (0);\r\n}\r\n```\r\nAnd comparing results:\r\n```\r\ngwr@ubuntu18:/g/ws/dotnet$ head -3 /proc/meminfo\r\nMemTotal:        8116820 kB\r\nMemFree:         2923380 kB\r\nMemAvailable:    7320288 kB\r\ngwr@ubuntu18:/g/ws/dotnet$ ./getavail.linux \r\nAvailable pages: 730782\r\nAvailable KB: 2923128\r\n```\r\nso it appears that on Linux, that sysconf gets you MemFree.\r\nI think that\u0027s generally what we want here anyway.\r\n\r\nI ran this on a VM with 8BG physical ram.  That 7+ GB of RAM reported by MemAvailable is questionable, but maybe that\u0027s the right thing to use on Linux.  I\u0027m not sure.",
                                           "updatedAt":  "2024-06-30T13:38:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6DC3HS",
                                           "createdAt":  "2024-06-30T13:32:53Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "Not sure I understood why it is requiring us to set `DOTNET_GCHeapHardLimit=\u003csomething smaller than 256 GB\u003e` on  illumos if sysconf is returning the correct value. Isn\u0027t that exactly what it ends up using on illumos change (procfs path returns false on illumos). Of course \"tidying up the implementation\" vs. \"fixing the heap mem issue for good\" are two different aspects of it, latter of which is more interesting for the moment. ;)",
                                           "updatedAt":  "2024-06-30T13:32:53Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6DC3Za",
                                           "createdAt":  "2024-06-30T13:36:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gwr",
                                           "body":  "Here is similar data for an 8GB VM running illumos:\r\n```\r\ngwr@oi-work:/g/ws/dotnet$ kstat -m unix -n system_pages\r\nmodule: unix                            instance: 0     \r\nname:   system_pages                    class:    pages\r\n        availrmem                       1114195\r\n        crtime                          0\r\n        desfree                         16366\r\n        desscan                         25\r\n        econtig                         4225150976\r\n        fastscan                        1047486\r\n        freemem                         1178999\r\n        kernelbase                      0\r\n        lotsfree                        32733\r\n        low_mem_scan                    0\r\n        minfree                         12274\r\n        n_throttle                      0\r\n        nalloc                          33109279\r\n        nalloc_calls                    17586\r\n        nfree                           32778862\r\n        nfree_calls                     9355\r\n        nscan                           0\r\n        pagesfree                       1178999\r\n        pageslocked                     980778\r\n        pagestotal                      2094973\r\n        physmem                         2094974\r\n        pp_kernel                       775618\r\n        slowscan                        100\r\n        snaptime                        49307.761938326\r\n```\r\nAnd here\u0027s what that sysconf says:\r\n```\r\ngwr@oi-work:/g/ws/dotnet$ ./getavail.illumos \r\nAvailable pages: 1179147\r\nAvailable KB: 4716588\r\n```\r\nSo a little over 4GB free memory.\r\n",
                                           "updatedAt":  "2024-06-30T13:36:27Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6DC5tz",
                                           "createdAt":  "2024-06-30T14:09:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gwr",
                                           "body":  "OK, when illumos actually uses `sysconf(_SC_AVPHYS_PAGES)` in\r\n`GetAvailablePhysicalMemory()` then the heap size stuff works correctly.\r\n\r\nHave a look at the latest in this comparison.  This is for debugging.\r\nWe could probably clean this up and integrate something like it.\r\nhttps://github.com/dotnet/runtime/compare/main...gwr:dotnet-runtime:illumos2\r\n\r\nRather than bother with config variables for `HAVE__SC_AVPHYS_PAGES` and\r\n`HAVE__SC_PHYS_PAGES` we could use defined(...) as shown here.\r\n\r\nI\u0027m not sure what went wrong with the config variables, but apparently something did.\r\nThe cross build stuff makes it hard to know which config header is used where.\r\n",
                                           "updatedAt":  "2024-06-30T14:15:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6DC6Tk",
                                           "createdAt":  "2024-06-30T14:18:39Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "\u003e OK, when illumos actually uses `sysconf(_SC_AVPHYS_PAGES)` in\r\n\u003e `GetAvailablePhysicalMemory()` then the heap size stuff works correctly.\r\n\r\nIs it not using sysconf without the change (i.e. ReadMemAvailable() returns false on illumos and we hit the fallback)?\r\n\r\nIOW, is this change saving us from setting `DOTNET_GCHeapHardLimit` or is the change only saving one call to `ReadMemAvailable()` that always returns false on the platform?",
                                           "updatedAt":  "2024-06-30T14:21:56Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6DDDR2",
                                           "createdAt":  "2024-06-30T16:33:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gwr",
                                           "body":  "Looks like my changes were unnecessary.  I must have been confused somehow. Maybe running a different build than I thought?  Anyway the `GetAvailablePhysicalMemory` code seems to be OK as it is.\r\nHere\u0027s what happens with the current code:\r\n```\r\ngdb dotnet\r\nGNU gdb (GDB) 14.2\r\n[...]\r\nReading symbols from dotnet...\r\n(gdb) break GetAvailablePhysicalMemory \r\nFunction \"GetAvailablePhysicalMemory\" not defined.\r\nMake breakpoint pending on future shared library load? (y or [n]) y\r\nBreakpoint 1 (GetAvailablePhysicalMemory) pending.\r\n(gdb) run helloworld/bin/Debug/net9.0/helloworld.dll\r\nStarting program: /tank/ws/dnt/dotnet helloworld/bin/Debug/net9.0/helloworld.dll\r\n\r\nThread 2 hit Breakpoint 1, GetAvailablePhysicalMemory ()\r\n    at /g/ws/dotnet/runtime/src/coreclr/gc/unix/gcenv.unix.cpp:1236\r\n1236\t{\r\n(gdb) next\r\n1237\t    uint64_t available = 0;\r\n(gdb) next\r\n1265\t    if (tryReadMemInfo)\r\n(gdb) next\r\n1269\t        tryReadMemInfo = ReadMemAvailable(\u0026available);\r\n(gdb) next\r\n1272\t    if (!tryReadMemInfo)\r\n(gdb) next\r\n1276\t        available = sysconf(SYSCONF_PAGES) * sysconf(_SC_PAGE_SIZE);\r\n(gdb) next\r\n1280\t    return available;\r\n(gdb) print available / 1024\r\n$1 = 4298396\r\n(gdb) cont\r\nContinuing.\r\n[New LWP    6        ]\r\n[New LWP    7        ]\r\nHello, World!\r\n[Inferior 1 (process 2368    ) exited normally]\r\n```\r\nThat was running with this code:\r\nThis is with my `illumos1` branch: https://github.com/dotnet/runtime/compare/main...gwr:dotnet-runtime:illumos1\r\nThat has no changes in coreclr/gc/unix/gcenv.unix.cpp (just other chanes I needed to unblock my work)\r\n\r\nI guess we can close this issue.  Thanks.\r\n",
                                           "updatedAt":  "2024-06-30T16:45:41Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6DDEmB",
                                           "createdAt":  "2024-06-30T16:56:21Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "Thank you for confirming. Glad to know that we don\u0027t need `DOTNET_GCHeapHardLimit=1C00000` or via runtimeconfig.json file anymore. :)\r\n(I\u0027m currently on arm64 machine, and emulating an x64 VM is quite slow but I\u0027ll try once I\u0027m on amd64 machine)\r\n\r\n\u003e This is with my illumos1 branch: https://github.com/dotnet/runtime/compare/main...gwr:dotnet-runtime:illumos1\r\n\r\nIt would be nice if we could call mlock under vfork() as you suggested (https://github.com/am11/runtime/commit/f1320973588a601c65b1686b420f90874f273b41?w=1) or other types of fork/clone to see if it emulates IPI and saves us from requiring mlock privileges. That would fix couple of issues with linux and freebsd jail as well (e.g. https://github.com/dotnet/runtime/issues/44417). Dealing with `mlock()` has been bit of a challenge across the board so it will be a general goodness IMHO.",
                                           "updatedAt":  "2024-06-30T16:56:21Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6DOKpw",
                                           "createdAt":  "2024-07-02T00:32:17Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gwr",
                                           "body":  "It turns out `GetAvailablePhysicalMemory()` was fine, but the mmap call needed `MAP_NORESERVE`.\r\nShould we reopen this?  Get a new issue?",
                                           "updatedAt":  "2024-07-02T00:32:17Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6DOQaW",
                                           "createdAt":  "2024-07-02T00:38:48Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "am11",
                                           "body":  "Could you please open a pull request with that change?",
                                           "updatedAt":  "2024-07-02T00:38:48Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6DO6yT",
                                           "createdAt":  "2024-07-02T02:42:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "gwr",
                                           "body":  "The PR is up.  [104275](https://github.com/dotnet/runtime/pull/104275)\r\nAs I mentioned there, I might suggest changing the issue title.  (I don\u0027t appear to be able to do that.) I\u0027d prefer: \r\n`Need MAP_NORESERVE in VirtualReserve for illumos`\r\nor something like that.  Or maybe:\r\n`VirtualReserve of 256GB fails on illumos`\r\n",
                                           "updatedAt":  "2024-07-02T02:56:56Z"
                                       }
                                   ],
                         "totalCount":  11
                     },
        "title":  "VirtualReserve is allocating 256GB on illumos rather than \"reserving\"",
        "labels":  [
                       "area-PAL-coreclr",
                       "os-SunOS"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/106645",
        "createdAt":  "2024-08-19T16:59:17Z",
        "number":  106645,
        "author":  "janvorli",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-08-19T16:59:18Z",
        "body":  "We currently never return from SIGSEGV and other hardware exception handlers on Unix. We process the exception and resume execution somewhere. This is problematic on some Unixes like Illumos where not returning from the handler skips some of the bookkeeping stuff that the return from the handler does. For example, the alternate stack is not used after a first invocation of the SIGSEGV handler on Illumos (and if we ever moved to signals for handling hardware exceptions on macOS, it has similar problem).\r\n\r\nConsider changing the hardware exception handling to return from the signal handler redirected to a helper function instead.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "Return from hardware exception signal handler before processing an exception on Unix",
        "labels":  [
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/107785",
        "createdAt":  "2024-09-13T09:04:52Z",
        "number":  107785,
        "author":  "JackJiang1234",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODCObDg==",
                          "nodes":  [
                                        {
                                            "content":  "THUMBS_UP",
                                            "user":  "Martin-Molinero",
                                            "createdAt":  "2025-05-09T21:03:34Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-08-26T07:00:12Z",
        "body":  "Hey buddy, we have an ASP.NET Core app deployed in a Kubernetes Docker environment. Lately, it’s been crashing occasionally, and the error message is as stated in the title, but there\u0027s no stack trace. We\u0027re using .NET Core version net6. Do you know any way to catch the specific error details?",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOwBkvyA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6MA-M3",
                                           "createdAt":  "2024-09-13T14:14:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "colejohnson66",
                                           "body":  "Are you using Mono or CoreCLR? Does the issue still occur on .NET 8 or .NET 9?",
                                           "updatedAt":  "2024-09-13T14:15:59Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6MDAHi",
                                           "createdAt":  "2024-09-13T17:35:04Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "`PAL_SEHException` should be always caught by the runtime code, it should never escape unhandled. If you see it escaping unhandled, it means there is a bug in the runtime. To get more detail, you would need to get a crash dump and inspect it under native debugger (lldb).\r\n\r\nWe have fixed a few bugs that can cause `PAL_SEHException` to escape. I agree with @colejohnson66 that upgrading to newer version is a good idea. .NET 6 has only two months of life left, so you will need to upgrade soon anyway to stay on a supported version.",
                                           "updatedAt":  "2024-09-13T17:35:04Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6MHjid",
                                           "createdAt":  "2024-09-14T02:24:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "JackJiang1234",
                                           "body":  "Thanks for getting back to me. We\u0027re using CoreCLR. We referred to https://learn.microsoft.com/zh-cn/dotnet/core/diagnostics/collect-dumps-crash to set up crash dumps. I\u0027ll keep you posted with any further updates.",
                                           "updatedAt":  "2024-09-14T02:24:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6NQ--W",
                                           "createdAt":  "2024-09-24T03:30:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "JackJiang1234",
                                           "body":  "i got the crash dump,  but i can\u0027t find any crash info.   \r\n![1727148554369](https://github.com/user-attachments/assets/facb4021-9a6e-4c51-aabe-cf753e97a1ab)\r\n![1727148615707](https://github.com/user-attachments/assets/d8a4d705-b24d-47c0-ae9a-174a11f01ba5)\r\ndo you have any suggest?  thank you",
                                           "updatedAt":  "2024-09-24T03:30:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6NQ_lg",
                                           "createdAt":  "2024-09-24T03:33:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "This is low-level runtime crash. `dotnet-dump` won\u0027t be able to diagnose it. `dotnet-dump` works for managed crashes only.\r\n\r\nCould you please open the crash dump in lldb debugger on the Linux distro where it crashed, and get the stacktrace?",
                                           "updatedAt":  "2024-09-24T03:34:30Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6NRCPv",
                                           "createdAt":  "2024-09-24T03:40:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "JackJiang1234",
                                           "body":  "thanks for response ,  i will try the lldb deubgger. ",
                                           "updatedAt":  "2024-09-24T03:40:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc7AGS_I",
                                           "createdAt":  "2025-08-26T06:58:32Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "ShivamBhardwaj93",
                                           "body":  "hello, I also got this error, here are the specifics, I am on ubuntu 22 and i\u0027m trying to code in python with pythonnet to use methods of a .netcore library ( my company\u0027s) this is the core dump I got\n` root@enguser:~# coredumpctl debug 532802\n           PID: 532802 (python)\n           UID: 0 (root)\n           GID: 0 (root)\n        Signal: 6 (ABRT)\n     Timestamp: Mon 2025-08-25 23:19:24 PDT (26s ago)\n  Command Line: /root/v/venv/bin/python /root/v/testcases/protectapp/dotnetcore/shivam/1.py\n    Executable: /usr/bin/python3.10\n Control Group: /user.slice/user-0.slice/session-41.scope\n          Unit: session-41.scope\n         Slice: user-0.slice\n       Session: 41\n     Owner UID: 0 (root)\n       Boot ID: 571b11f7c3c2481084e76792c30030b7\n    Machine ID: 0e72eff8b1e341e482ce5619164498fc\n      Hostname: enguser\n       Storage: /var/lib/systemd/coredump/core.python.0.571b11f7c3c2481084e76792c30030b7.532802.1756189164000000.zst (present)\n     Disk Size: 13.8M\n       Message: Process 532802 (python) of user 0 dumped core.\n                \n                Found module /root/v/venv/lib/python3.10/site-packages/_cffi_backend.cpython-310-x86_64-linux-gnu.so with build-id: 26ed60072bff621a3d04b423912b94ffa3f8ac14\n                Found module linux-vdso.so.1 with build-id: 8f6d5e26d7303ac48c3036ff1bc8c52dcca0ad65\n                Found module libicui18n.so.70 with build-id: ff2dbcdd92cbe5a63d20291e295d8fed9f87d35b\n                Found module libicudata.so.70 with build-id: b1c2496dd0543023c7a19c961bb7f3abc818f465\n                Found module libicuuc.so.70 with build-id: bef3ff1d70aadd68aab07d858a759360c8b919ae\n                Found module libSystem.Native.so with build-id: 698316f6f9fbc20f0886441ba56e3f7f59792c89\n                Found module libclrjit.so with build-id: 16500672b654cfb87912fc386d118efa313227ca\n                Found module librt.so.1 with build-id: cb5b17a9bdf060b73ecac80f77fb2c535ef84612\n                Found module libcoreclr.so with build-id: e1722451f96072c770b6ead831a68576f3387e96\n                Found module libhostpolicy.so with build-id: efdb9bb2b5ab2384c3dbaefcb12900e778c2859f\n                Found module libgcc_s.so.1 with build-id: 3ae8ad2eded3e51695b509273c67832869daf90b\n                Found module libstdc++.so.6 with build-id: e72c155b714bc42a767ec9c0dd94589110e5b42f\n                Found module libdl.so.2 with build-id: c71c8c73dd8b7323bd6190420f0ebc4301e93186\n                Found module libhostfxr.so with build-id: 073b2ecca0da32538390aa40d51436f38dc67ac2\n                Found module libpthread.so.0 with build-id: 81f46d553e2f7c999e43c3eede73a822bc8d5d93\n                Found module _opcode.cpython-310-x86_64-linux-gnu.so with build-id: bd9c71a0c269c3bb70b5d4c35667277e4ffb7767\n                Found module liblzma.so.5 with build-id: b85da6c48eb60a646615392559483b93617ef265\n                Found module _lzma.cpython-310-x86_64-linux-gnu.so with build-id: 27d63d8a76633403f36e74050b121a29d1774715\n                Found module libbz2.so.1.0 with build-id: e56b62c27bcc7ace8f9be36b255bd7b31bfde405\n                Found module _bz2.cpython-310-x86_64-linux-gnu.so with build-id: b725712d936960611982c5268a558462c0266f64\n                Found module _json.cpython-310-x86_64-linux-gnu.so with build-id: df02232316250800cd082493393d33af869c21b1\n                Found module termios.cpython-310-x86_64-linux-gnu.so with build-id: ba493002dc09c1d0b5dcf882b0c4574050c1134c\n                Found module ld-linux-x86-64.so.2 with build-id: 9cb53985768bb99f138f48655f7b8bf7e420d13d\n                Found module libc.so.6 with build-id: d5197096f709801829b118af1b7cf6631efa2dcd\n                Found module libz.so.1 with build-id: 30840b79ac329ecbf1dec0bb60180eed256d319f\n                Found module libexpat.so.1 with build-id: 0b6c4077faed982d2a40f9b30908095113fadc52\n                Found module libm.so.6 with build-id: a3ad9bb40b4907e509e4404cb972645c19675ca3\n                Found module python3.10 with build-id: b2fd9010dc75aa747aee5296c31a07d210d124ad\n                Stack trace of thread 532802:\n                #0  0x00007f1f7dfff9fc __pthread_kill_implementation (libc.so.6 + 0x969fc)\n                #1  0x00007f1f7dfab476 __GI_raise (libc.so.6 + 0x42476)\n                #2  0x00007f1f7df91885 __GI_abort (libc.so.6 + 0x28885)\n                #3  0x00007f1f7cfb3b9e n/a (libstdc++.so.6 + 0xa2b9e)\n                #4  0x00007f1f7cfbf20c n/a (libstdc++.so.6 + 0xae20c)\n                #5  0x00007f1f7cfbf277 _ZSt9terminatev (libstdc++.so.6 + 0xae277)\n                #6  0x00007f1f7cfbf52b __cxa_rethrow (libstdc++.so.6 + 0xae52b)\n                #7  0x00007f1f78f8105b n/a (libclrjit.so + 0xf405b)\n                #8  0x00007f1f78f78224 n/a (libclrjit.so + 0xeb224)\n                #9  0x00007f1efe61578a n/a (n/a + 0x0)\n                #10 0x00007f1efe616727 n/a (n/a + 0x0)\n                #11 0x00007f1efe615ff5 n/a (n/a + 0x0)\n                #12 0x00007f1f7c9eab2b n/a (libcoreclr.so + 0x23db2b)\n                #13 0x00007f1f7c9ead33 n/a (libcoreclr.so + 0x23dd33)\n                #14 0x00007f1f7c9eb8d7 n/a (libcoreclr.so + 0x23e8d7)\n                #15 0x00007f1f7ca272da n/a (libcoreclr.so + 0x27a2da)\n                #16 0x00007f1f7ca26bbb n/a (libcoreclr.so + 0x279bbb)\n                #17 0x00007f1f7ca2631f n/a (libcoreclr.so + 0x27931f)\n                #18 0x00007f1f7ca25d2d n/a (libcoreclr.so + 0x278d2d)\n                #19 0x00007f1f7c9968f8 n/a (libcoreclr.so + 0x1e98f8)\n                #20 0x00007f1f7ca2a346 n/a (libcoreclr.so + 0x27d346)\n                #21 0x00007f1f7ca29ea4 n/a (libcoreclr.so + 0x27cea4)\n                #22 0x00007f1f7cc4ab50 n/a (libcoreclr.so + 0x49db50)\n                #23 0x00007f1efe61a28b n/a (n/a + 0x0)\n                #24 0x00007f1f7cc49c37 n/a (libcoreclr.so + 0x49cc37)\n                #25 0x00007f1f7ca83646 n/a (libcoreclr.so + 0x2d6646)\n                #26 0x00007f1f7cb34f62 n/a (libcoreclr.so + 0x387f62)\n                #27 0x00007f1efda9753c n/a (n/a + 0x0)\n                #28 0x00007f1efe5ec4c5 n/a (n/a + 0x0)\n                #29 0x00007f1efe5ea5b8 n/a (n/a + 0x0)\n                #30 0x00007f1efe617b3f n/a (n/a + 0x0)\n                #31 0x00007f1efe5ea049 n/a (n/a + 0x0)\n                #32 0x000055e8f954af4b PyObject_Call (python3.10 + 0x198f4b)\n                #33 0x00007f1efe5e693b n/a (n/a + 0x0)\n                #34 0x00007f1efe616b0d n/a (n/a + 0x0)\n                #35 0x00007f1efe616a71 n/a (n/a + 0x0)\n                #36 0x00007f1efe6043af n/a (n/a + 0x0)\n                #37 0x00007f1efe5ea049 n/a (n/a + 0x0)\n                #38 0x000055e8f953342b _PyObject_MakeTpCall (python3.10 + 0x18142b)\n                #39 0x000055e8f952caf7 _PyEval_EvalFrameDefault (python3.10 + 0x17aaf7)\n                #40 0x000055e8f953d1bc _PyFunction_Vectorcall (python3.10 + 0x18b1bc)\n                #41 0x000055e8f9527820 _PyEval_EvalFrameDefault (python3.10 + 0x175820)\n                #42 0x000055e8f960c566 n/a (python3.10 + 0x25a566)\n                #43 0x000055e8f960c436 PyEval_EvalCode (python3.10 + 0x25a436)\n                #44 0x000055e8f9632ed8 n/a (python3.10 + 0x280ed8)\n                #45 0x000055e8f962d6df n/a (python3.10 + 0x27b6df)\n                #46 0x000055e8f9632c75 n/a (python3.10 + 0x280c75)\n                #47 0x000055e8f9632258 _PyRun_SimpleFileObject (python3.10 + 0x280258)\n                #48 0x000055e8f9631f37 _PyRun_AnyFileObject (python3.10 + 0x27ff37)\n                #49 0x000055e8f96263ae Py_RunMain (python3.10 + 0x2743ae)\n                #50 0x000055e8f960047d Py_BytesMain (python3.10 + 0x24e47d)\n                #51 0x00007f1f7df92d90 __libc_start_call_main (libc.so.6 + 0x29d90)\n                #52 0x00007f1f7df92e40 __libc_start_main_impl (libc.so.6 + 0x29e40)\n                #53 0x000055e8f9600375 _start (python3.10 + 0x24e375)\n                \n                Stack trace of thread 532804:\n                #0  0x00007f1f7e081bcf __GI___poll (libc.so.6 + 0x118bcf)\n                #1  0x00007f1f7ccb09fc n/a (libcoreclr.so + 0x5039fc)\n                #2  0x00007f1f7cd6857b n/a (libcoreclr.so + 0x5bb57b)\n                #3  0x00007f1f7cd66026 n/a (libcoreclr.so + 0x5b9026)\n                #4  0x00007f1f7cdbfe9e n/a (libcoreclr.so + 0x612e9e)\n                #5  0x00007f1f7dffdac3 start_thread (libc.so.6 + 0x94ac3)\n                #6  0x00007f1f7e08f850 __clone3 (libc.so.6 + 0x126850)\n                \n                Stack trace of thread 532828:\n                #0  0x00007f1f7dffa117 __futex_abstimed_wait_common64 (libc.so.6 + 0x91117)\n                #1  0x00007f1f7dffce9b __pthread_cond_wait_common (libc.so.6 + 0x93e9b)\n                #2  0x00007f1f7cdb4735 n/a (libcoreclr.so + 0x607735)\n                #3  0x00007f1f7cdb439f n/a (libcoreclr.so + 0x60739f)\n                #4  0x00007f1f7cdb96b9 n/a (libcoreclr.so + 0x60c6b9)\n                #5  0x00007f1f7ca55f3a n/a (libcoreclr.so + 0x2a8f3a)\n                #6  0x00007f1f7ca55def n/a (libcoreclr.so + 0x2a8def)\n                #7  0x00007f1f7ca52855 n/a (libcoreclr.so + 0x2a5855)\n                #8  0x00007f1f7ca52e2d n/a (libcoreclr.so + 0x2a5e2d)\n                #9  0x00007f1f7ca55d00 n/a (libcoreclr.so + 0x2a8d00)\n                #10 0x00007f1f7cdbfe9e n/a (libcoreclr.so + 0x612e9e)\n                #11 0x00007f1f7dffdac3 start_thread (libc.so.6 + 0x94ac3)\n                #12 0x00007f1f7e08f850 __clone3 (libc.so.6 + 0x126850)\n                \n                Stack trace of thread 532806:\n                #0  0x00007f1f7dffa117 __futex_abstimed_wait_common64 (libc.so.6 + 0x91117)\n                #1  0x00007f1f7dffca41 __pthread_cond_wait_common (libc.so.6 + 0x93a41)\n                #2  0x00007f1f7cdb4792 n/a (libcoreclr.so + 0x607792)\n                #3  0x00007f1f7cdb439f n/a (libcoreclr.so + 0x60739f)\n                #4  0x00007f1f7cdb8f95 n/a (libcoreclr.so + 0x60bf95)\n                #5  0x00007f1f7cdb9243 n/a (libcoreclr.so + 0x60c243)\n                #6  0x00007f1f7cca900d n/a (libcoreclr.so + 0x4fc00d)\n                #7  0x00007f1f7cca8e88 n/a (libcoreclr.so + 0x4fbe88)\n                #8  0x00007f1f7cca8b85 n/a (libcoreclr.so + 0x4fbb85)\n                #9  0x00007f1f7cdbfe9e n/a (libcoreclr.so + 0x612e9e)\n                #10 0x00007f1f7dffdac3 start_thread (libc.so.6 + 0x94ac3)\n                #11 0x00007f1f7e08f850 __clone3 (libc.so.6 + 0x126850)\n                \n                Stack trace of thread 532803:\n                #0  0x00007f1f7e081bcf __GI___poll (libc.so.6 + 0x118bcf)\n                #1  0x00007f1f7cdb6e51 n/a (libcoreclr.so + 0x609e51)\n                #2  0x00007f1f7cdb64a3 n/a (libcoreclr.so + 0x6094a3)\n                #3  0x00007f1f7cdbfe9e n/a (libcoreclr.so + 0x612e9e)\n                #4  0x00007f1f7dffdac3 start_thread (libc.so.6 + 0x94ac3)\n                #5  0x00007f1f7e08f850 __clone3 (libc.so.6 + 0x126850)\n                \n                Stack trace of thread 532805:\n                #0  0x00007f1f7e07d5b4 __libc_open64 (libc.so.6 + 0x1145b4)\n                #1  0x00007f1f7ccb140f n/a (libcoreclr.so + 0x50440f)\n                #2  0x00007f1f7ccab757 n/a (libcoreclr.so + 0x4fe757)\n                #3  0x00007f1f7ccaa8e5 n/a (libcoreclr.so + 0x4fd8e5)\n                #4  0x00007f1f7cdbfe9e n/a (libcoreclr.so + 0x612e9e)\n                #5  0x00007f1f7dffdac3 start_thread (libc.so.6 + 0x94ac3)\n                #6  0x00007f1f7e08f850 __clone3 (libc.so.6 + 0x126850)\n                \n                Stack trace of thread 532807:\n                #0  0x00007f1f7dffa117 __futex_abstimed_wait_common64 (libc.so.6 + 0x91117)\n                #1  0x00007f1f7dffce9b __pthread_cond_wait_common (libc.so.6 + 0x93e9b)\n                #2  0x00007f1f7cdb4735 n/a (libcoreclr.so + 0x607735)\n                #3  0x00007f1f7cdb439f n/a (libcoreclr.so + 0x60739f)\n                #4  0x00007f1f7cdb8f95 n/a (libcoreclr.so + 0x60bf95)\n                #5  0x00007f1f7cdb9169 n/a (libcoreclr.so + 0x60c169)\n                #6  0x00007f1f7cb55bbe n/a (libcoreclr.so + 0x3a8bbe)\n                #7  0x00007f1f7cac0e6f n/a (libcoreclr.so + 0x313e6f)\n                #8  0x00007f1f7cac106f n/a (libcoreclr.so + 0x31406f)\n                #9  0x00007f1f7ca52855 n/a (libcoreclr.so + 0x2a5855)\n                #10 0x00007f1f7ca52e7d n/a (libcoreclr.so + 0x2a5e7d)\n                #11 0x00007f1f7cac12c8 n/a (libcoreclr.so + 0x3142c8)\n                #12 0x00007f1f7cdbfe9e n/a (libcoreclr.so + 0x612e9e)\n                #13 0x00007f1f7dffdac3 start_thread (libc.so.6 + 0x94ac3)\n                #14 0x00007f1f7e08f850 __clone3 (libc.so.6 + 0x126850)\n\nGNU gdb (Ubuntu 12.1-0ubuntu1~22.04.2) 12.1\nCopyright (C) 2022 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later \u003chttp://gnu.org/licenses/gpl.html\u003e\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\nType \"show copying\" and \"show warranty\" for details.\nThis GDB was configured as \"x86_64-linux-gnu\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\n\u003chttps://www.gnu.org/software/gdb/bugs/\u003e.\nFind the GDB manual and other documentation resources online at:\n    \u003chttp://www.gnu.org/software/gdb/documentation/\u003e.\n\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\"...\nReading symbols from /usr/bin/python3.10...\n(No debugging symbols found in /usr/bin/python3.10)\n\nwarning: Can\u0027t open file /dev/zero (deleted) during file-backed mapping note processing\n[New LWP 532802]\n[New LWP 532804]\n[New LWP 532828]\n[New LWP 532806]\n[New LWP 532803]\n[New LWP 532805]\n[New LWP 532807]\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nCore was generated by `/root/v/venv/bin/python /root/v/testc\u0027.\nProgram terminated with signal SIGABRT, Aborted.\n#0  __pthread_kill_implementation (no_tid=0, signo=6, threadid=139773234020352) at ./nptl/pthread_kill.c:44\n44      ./nptl/pthread_kill.c: No such file or directory.\n[Current thread is 1 (Thread 0x7f1f7df68000 (LWP 532802))]\n(gdb) thread apply all bt\n\nThread 7 (Thread 0x7f1f7a67b640 (LWP 532807)):\n#0  __futex_abstimed_wait_common64 (private=24, cancel=true, abstime=0x7f1f7a67a690, op=137, expected=0, futex_word=0x55e8fa855024) at ./nptl/futex-internal.c:57\n#1  __futex_abstimed_wait_common (cancel=true, private=24, abstime=0x7f1f7a67a690, clockid=-91933440, expected=0, futex_word=0x55e8fa855024) at ./nptl/futex-internal.c:87\n#2  __GI___futex_abstimed_wait_cancelable64 (futex_word=futex_word@entry=0x55e8fa855024, expected=expected@entry=0, clockid=clockid@entry=1, abstime=abstime@entry=0x7f1f7a67a690, private=private@entry=0) at ./nptl/futex-internal.c:139\n#3  0x00007f1f7dffce9b in __pthread_cond_wait_common (abstime=0x7f1f7a67a690, clockid=1, mutex=0x55e8fa854fd0, cond=0x55e8fa854ff8) at ./nptl/pthread_cond_wait.c:503\n#4  ___pthread_cond_timedwait64 (cond=0x55e8fa854ff8, mutex=0x55e8fa854fd0, abstime=0x7f1f7a67a690) at ./nptl/pthread_cond_wait.c:652\n#5  0x00007f1f7cdb4735 in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#6  0x00007f1f7cdb439f in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#7  0x00007f1f7cdb8f95 in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#8  0x00007f1f7cdb9169 in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#9  0x00007f1f7cb55bbe in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#10 0x00007f1f7cac0e6f in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#11 0x00007f1f7cac106f in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#12 0x00007f1f7ca52855 in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#13 0x00007f1f7ca52e7d in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#14 0x00007f1f7cac12c8 in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#15 0x00007f1f7cdbfe9e in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#16 0x00007f1f7dffdac3 in start_thread (arg=\u003coptimized out\u003e) at ./nptl/pthread_create.c:442\n#17 0x00007f1f7e08f850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\n\nThread 6 (Thread 0x7f1f7b78f640 (LWP 532805)):\n#0  0x00007f1f7e07d5b4 in __libc_open64 (file=0x55e8fa771c74 \"/tmp/clr-debug-pipe-532802-6544070-in\", oflag=0) at ../sysdeps/unix/sysv/linux/open64.c:41\n#1  0x00007f1f7ccb140f in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#2  0x00007f1f7ccab757 in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#3  0x00007f1f7ccaa8e5 in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#4  0x00007f1f7cdbfe9e in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#5  0x00007f1f7dffdac3 in start_thread (arg=\u003coptimized out\u003e) at ./nptl/pthread_create.c:442\n#6  0x00007f1f7e08f850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\n\nThread 5 (Thread 0x7f1f7c7a7640 (LWP 532803)):\n#0  0x00007f1f7e081bcf in __GI___poll (fds=0x7f1f7c7a6cf8, nfds=1, timeout=-1) at ../sysdeps/unix/sysv/linux/poll.c:29\n#1  0x00007f1f7cdb6e51 in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#2  0x00007f1f7cdb64a3 in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#3  0x00007f1f7cdbfe9e in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#4  0x00007f1f7dffdac3 in start_thread (arg=\u003coptimized out\u003e) at ./nptl/pthread_create.c:442\n#5  0x00007f1f7e08f850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\n\nThread 4 (Thread 0x7f1f7af8a640 (LWP 532806)):\n#0  __futex_abstimed_wait_common64 (private=0, cancel=true, abstime=0x0, op=393, expected=0, futex_word=0x55e8fa825b40) at ./nptl/futex-internal.c:57\n#1  __futex_abstimed_wait_common (cancel=true, private=0, abstime=0x0, clockid=0, expected=0, futex_word=0x55e8fa825b40) at ./nptl/futex-internal.c:87\n#2  __GI___futex_abstimed_wait_cancelable64 (futex_word=futex_word@entry=0x55e8fa825b40, expected=expected@entry=0, clockid=clockid@entry=0, abstime=abstime@entry=0x0, private=private@entry=0) at ./nptl/futex-internal.c:139\n#3  0x00007f1f7dffca41 in __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x55e8fa825af0, cond=0x55e8fa825b18) at ./nptl/pthread_cond_wait.c:503\n#4  ___pthread_cond_wait (cond=0x55e8fa825b18, mutex=0x55e8fa825af0) at ./nptl/pthread_cond_wait.c:627\n#5  0x00007f1f7cdb4792 in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#6  0x00007f1f7cdb439f in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#7  0x00007f1f7cdb8f95 in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#8  0x00007f1f7cdb9243 in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#9  0x00007f1f7cca900d in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#10 0x00007f1f7cca8e88 in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#11 0x00007f1f7cca8b85 in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#12 0x00007f1f7cdbfe9e in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n--Type \u003cRET\u003e for more, q to quit, c to continue without paging--\n#13 0x00007f1f7dffdac3 in start_thread (arg=\u003coptimized out\u003e) at ./nptl/pthread_create.c:442\n#14 0x00007f1f7e08f850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\n\nThread 3 (Thread 0x7f1f78a7c640 (LWP 532828)):\n#0  __futex_abstimed_wait_common64 (private=-91729136, cancel=true, abstime=0x7f1f78a7bac0, op=137, expected=0, futex_word=0x55e8fa886304) at ./nptl/futex-internal.c:57\n#1  __futex_abstimed_wait_common (cancel=true, private=-91729136, abstime=0x7f1f78a7bac0, clockid=0, expected=0, futex_word=0x55e8fa886304) at ./nptl/futex-internal.c:87\n#2  __GI___futex_abstimed_wait_cancelable64 (futex_word=futex_word@entry=0x55e8fa886304, expected=expected@entry=0, clockid=clockid@entry=1, abstime=abstime@entry=0x7f1f78a7bac0, private=private@entry=0) at ./nptl/futex-internal.c:139\n#3  0x00007f1f7dffce9b in __pthread_cond_wait_common (abstime=0x7f1f78a7bac0, clockid=1, mutex=0x55e8fa8862b0, cond=0x55e8fa8862d8) at ./nptl/pthread_cond_wait.c:503\n#4  ___pthread_cond_timedwait64 (cond=0x55e8fa8862d8, mutex=0x55e8fa8862b0, abstime=0x7f1f78a7bac0) at ./nptl/pthread_cond_wait.c:652\n#5  0x00007f1f7cdb4735 in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#6  0x00007f1f7cdb439f in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#7  0x00007f1f7cdb96b9 in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#8  0x00007f1f7ca55f3a in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#9  0x00007f1f7ca55def in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#10 0x00007f1f7ca52855 in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#11 0x00007f1f7ca52e2d in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#12 0x00007f1f7ca55d00 in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#13 0x00007f1f7cdbfe9e in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#14 0x00007f1f7dffdac3 in start_thread (arg=\u003coptimized out\u003e) at ./nptl/pthread_create.c:442\n#15 0x00007f1f7e08f850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\n\nThread 2 (Thread 0x7f1f7bfa6640 (LWP 532804)):\n#0  0x00007f1f7e081bcf in __GI___poll (fds=0x7f1ef0000f00, nfds=1, timeout=-1) at ../sysdeps/unix/sysv/linux/poll.c:29\n#1  0x00007f1f7ccb09fc in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#2  0x00007f1f7cd6857b in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#3  0x00007f1f7cd66026 in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#4  0x00007f1f7cdbfe9e in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#5  0x00007f1f7dffdac3 in start_thread (arg=\u003coptimized out\u003e) at ./nptl/pthread_create.c:442\n#6  0x00007f1f7e08f850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\n\nThread 1 (Thread 0x7f1f7df68000 (LWP 532802)):\n#0  __pthread_kill_implementation (no_tid=0, signo=6, threadid=139773234020352) at ./nptl/pthread_kill.c:44\n#1  __pthread_kill_internal (signo=6, threadid=139773234020352) at ./nptl/pthread_kill.c:78\n#2  __GI___pthread_kill (threadid=139773234020352, signo=signo@entry=6) at ./nptl/pthread_kill.c:89\n#3  0x00007f1f7dfab476 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26\n#4  0x00007f1f7df91885 in __GI_abort () at ./stdlib/abort.c:100\n#5  0x00007f1f7cfb3b9e in ?? () from /lib/x86_64-linux-gnu/libstdc++.so.6\n#6  0x00007f1f7cfbf20c in ?? () from /lib/x86_64-linux-gnu/libstdc++.so.6\n#7  0x00007f1f7cfbf277 in std::terminate() () from /lib/x86_64-linux-gnu/libstdc++.so.6\n#8  0x00007f1f7cfbf52b in __cxa_rethrow () from /lib/x86_64-linux-gnu/libstdc++.so.6\n#9  0x00007f1f78f8105b in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libclrjit.so\n#10 0x00007f1f78f78224 in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libclrjit.so\n#11 0x00007f1efe61578a in ?? ()\n#12 0x0000000003e68c43 in ?? ()\n#13 0x00007f1f7ce1b238 in ?? () from /usr/share/dotnet/shared/Microsoft.NETCore.App/8.0.19/libcoreclr.so\n#14 0x00007ffc63351d00 in ?? ()\n#15 0x0000000000000000 in ?? ()\n(gdb) exit`",
                                           "updatedAt":  "2025-08-26T07:00:12Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "terminate called after throwing an instance of \u0027PAL_SEHException\u0027",
        "labels":  [
                       "area-PAL-coreclr",
                       "needs-further-triage"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/107989",
        "createdAt":  "2024-09-18T16:16:47Z",
        "number":  107989,
        "author":  "vcsjones",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2024-09-19T14:48:22Z",
        "body":  "On Linux, we use `/dev/urandom` as a source of cryptographically random data in `minipal_get_cryptographically_secure_random_bytes`\r\n\r\nhttps://github.com/dotnet/runtime/blob/14c80b0072ab3163ccab6f0af94b78e1abfd50e2/src/native/minipal/random.c#L102-L107\r\n\r\nThis is perfectly fine for getting cryptographically random data.\r\n\r\nLinux has, for a time now, supported [`getrandom(2)`](https://man7.org/linux/man-pages/man2/getrandom.2.html) as a means of generating cryptographically random data.\r\n\r\nThis particular API has also been a focus of performance lately, and it is expected to get faster with a vDSO implementation.\r\n\r\nEven using `getrandom` today on Ubuntu 24.04 yield some performance improves in `Guid.NewGuid`. A [quick spike](https://github.com/dotnet/runtime/compare/main...vcsjones:getrandom-linux) shows some promising performance improvements, such as in `Guid.NewGuid`\r\n\r\n| Method       | Job        | Toolchain | Mean     | Error   | StdDev  | Ratio | Allocated | Alloc Ratio |\r\n|------------- |----------- |---------- |---------:|--------:|--------:|------:|----------:|------------:|\r\n| Guid_NewGuid | Job-FLNCIL | pr        | 256.0 ns | 1.02 ns | 0.95 ns |  0.87 |         - |          NA |\r\n| Guid_NewGuid | Job-PIPFED | .NET 9.0  | 295.9 ns | 0.82 ns | 0.76 ns |  1.00 |         - |          NA |\r\n\r\nIndicating an improvement of about 13%.\r\n\r\nPerhaps we should consider using `getrandom(2)`, if it is available, for acquiring cryptographically random data.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOjL1mCg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6Mm8y3",
                                           "createdAt":  "2024-09-18T17:19:47Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "Earlier attempt to do this: https://github.com/dotnet/runtime/pull/1433",
                                           "updatedAt":  "2024-09-18T17:19:47Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6MvWYK",
                                           "createdAt":  "2024-09-19T14:48:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHODzCQKA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkotas",
                                                                               "createdAt":  "2024-09-19T14:57:51Z"
                                                                           },
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "filipnavara",
                                                                               "createdAt":  "2024-09-20T15:23:37Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  2
                                                         },
                                           "author":  "vcsjones",
                                           "body":  "I will try to get this over the finish line for 10.",
                                           "updatedAt":  "2024-09-19T14:48:20Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "Consider using Linux\u0027s getrandom in minipal_get_cryptographically_secure_random_bytes",
        "labels":  [
                       "tenet-performance",
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/111868",
        "createdAt":  "2025-01-27T16:22:43Z",
        "number":  111868,
        "author":  "janvorli",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-23T07:46:50Z",
        "body":  "This leads to two rebuilds of the libunwind even without any changes in its sources.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOm_ZiJw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6b84cV",
                                           "createdAt":  "2025-01-27T17:22:46Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "cc: @jkoritzinsky ",
                                           "updatedAt":  "2025-01-27T17:22:46Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6b9mIn",
                                           "createdAt":  "2025-01-27T18:43:30Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "The root of the problem seems to be in the fact that the CLR_ARTIFACTS_OBJ_DIR doesn\u0027t contain the os/arch/flavor triplet. But it is not as simple as adding those to this path.",
                                           "updatedAt":  "2025-01-27T18:43:30Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "During cross build, the same obj directory is used for target and host libunwind compilation",
        "labels":  [
                       "os-linux",
                       "area-PAL-coreclr",
                       "os-android"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/112726",
        "createdAt":  "2025-02-20T04:51:26Z",
        "number":  112726,
        "author":  "LukeButters",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-01T17:08:03Z",
        "body":  "### Description\n\nDotnet on mac is limited to only 10240 file handles, this occurs because:\n\nhttps://github.com/dotnet/runtime/blob/eab352d9b4339a912456f3577b7dd6f21c0c3ef6/src/coreclr/pal/src/init/pal.cpp#L964-L971\n\non OS X15.2 OPEN_MAX is defined as:\n\n```\n100:#define OPEN_MAX                10240   /* max open files per process - todo, make a config option? */\n```\n\nI got that from `/Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers/sys/syslimits.h`, another mac user got the same line from `sys/resource.h`.\n\nThe man page for setrlimit mentions:\n\n\u003e COMPATIBILITY\n\u003e      setrlimit() now returns with errno set to EINVAL in places that historically succeeded.  It no longer accepts \"rlim_cur = RLIM_INFINITY\" for RLIM_NOFILE.  Use \"rlim_cur = min(OPEN_MAX, rlim_max)\".\n\nCompiling my own version where those three lines are commented out, does result in a dotnet where I can open well over 10k files (my test ran to 250K files before I stopped it).\n\n\nIt would be useful if that artificial limit did not apply to the released version of dotnet.\n\n### Reproduction Steps\n\n```\nvar directory = \"/tmp/openfiles/\";\n        if(Directory.Exists(directory)) Directory.Delete(directory, true);\n        \n        Directory.CreateDirectory(directory);\n\n        var fhs = new List\u003cFileStream\u003e();\n        for (int i = 0; i \u003c 30000; i++)\n        {\n            var file = File.Open(directory + \"/\" + i + \".txt\", FileMode.OpenOrCreate, FileAccess.ReadWrite, FileShare.ReadWrite);\n            fhs.Add(file);\n            \n            if(i % 1000 == 0) Console.WriteLine($\"File {i} opened\");\n        }\n```\n\n### Expected behavior\n\nCan open more than 10240 files.\n\n### Actual behavior\n\nfails to open more than 10kish files.\n\n### Regression?\n\nno\n\n### Known Workarounds\n\nnone\n\n### Configuration\n\n.net 8.0.13\n\n### Other information\n\n_No response_",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOn09qgw==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6fK_yC",
                                           "createdAt":  "2025-02-20T04:51:52Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @dotnet/area-system-io\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-02-20T04:51:52Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6fLAZu",
                                           "createdAt":  "2025-02-20T04:54:26Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "LukeButters",
                                           "body":  "It is possible to compile a version that works around this on the mac for v8.0.13 by applying the attached diff then compiling with:\n`./build.sh clr -arch arm64 -c release`\nand then copying what is built into the existing copy of dotnet:\n`sudo cp -a artifacts/bin/coreclr/osx.arm64.Release/* /usr/local/share/dotnet/shared/Microsoft.NETCore.App/8.0.13/`\n\nDoing that does prevent things like dotnet-dump from running, I think because of unsigned code.",
                                           "updatedAt":  "2025-02-20T04:54:26Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6fLHXp",
                                           "createdAt":  "2025-02-20T05:19:12Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "LukeButters",
                                           "body":  "An easier workaround is to just intercept the sys call:\nSet the contents of file `hackopenfilelimits.c` to:\n```\n#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003cstring.h\u003e\n#include \u003csys/resource.h\u003e\n\n// From https://opensource.apple.com/source/dyld/dyld-97.1/include/mach-o/dyld-interposing.h.auto.html\n#define DYLD_INTERPOSE(_replacment, _replacee)                                    \\\n    __attribute__ ((used)) static struct                                          \\\n    {                                                                             \\\n        const void* replacment;                                                   \\\n        const void* replacee;                                                     \\\n    } _interpose_##_replacee __attribute__ ((section (\"__DATA,__interpose\"))) = { \\\n        (const void*) (unsigned long) \u0026_replacment, (const void*) (unsigned long) \u0026_replacee};\n\n\n\nint my_setrlimit(int resource, const struct rlimit *rlp)\n{\n    if (RLIMIT_NOFILE == resource)\n    {\n        struct rlimit rlp2;\n        rlp2.rlim_max = rlp-\u003erlim_max;\n        rlp2.rlim_cur = rlp-\u003erlim_max;\n\n        // printf (\"Back to max\");\n\n        return setrlimit(resource, \u0026rlp2);\n    }\n    return setrlimit(resource, rlp);\n}\n\nDYLD_INTERPOSE (my_setrlimit, setrlimit)\n```\n\nCompile it:\n```\nclang -dynamiclib hackopenfilelimits.c -o hackopenfilelimits.dylib\n```\n\nInclude the following env var in any dotnet apps:\n\n```\nexport DYLD_INSERT_LIBRARIES=`pwd`/hackopenfilelimits.dylib\n```",
                                           "updatedAt":  "2025-02-20T21:28:12Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6fMYtE",
                                           "createdAt":  "2025-02-20T08:46:16Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "adamsitnik",
                                           "body":  "This code pre-dates me (last touched 8 years ago!), but my understanding is that we increase the default limit to the max allowed limit:\n\nhttps://github.com/dotnet/runtime/blob/eab352d9b4339a912456f3577b7dd6f21c0c3ef6/src/coreclr/pal/src/init/pal.cpp#L944-L945\n\nhttps://github.com/dotnet/runtime/blob/eab352d9b4339a912456f3577b7dd6f21c0c3ef6/src/coreclr/pal/src/init/pal.cpp#L965-L970\n\n@janvorli @jkotas PTAL ",
                                           "updatedAt":  "2025-02-20T08:46:16Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6fOXmz",
                                           "createdAt":  "2025-02-20T12:22:55Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "@LukeButters based on our experience it seems that Apple has changed the behavior since 2017 when I have added the limitation to OPEN_MAX, as it was really failing. See https://github.com/dotnet/coreclr/pull/14054 description for details.\n\nI\u0027d be happy to accept a PR removing that artificial clipping if you prepared it.\n",
                                           "updatedAt":  "2025-02-20T12:22:55Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6fTuOJ",
                                           "createdAt":  "2025-02-20T21:40:25Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "LukeButters",
                                           "body":  "I had a look at what `getrlimit` is returning on my mac.\n\nFor context:\n```\nulimit -a\n-t: cpu time (seconds)              unlimited\n-f: file size (blocks)              unlimited\n-d: data seg size (kbytes)          unlimited\n-s: stack size (kbytes)             8176\n-c: core file size (blocks)         0\n-v: address space (kbytes)          unlimited\n-l: locked-in-memory size (kbytes)  unlimited\n-u: processes                       10666\n-n: file descriptors                245760\n```\n\nThe result of `getrlimit`:\n```\nrlim_max: 9223372036854775807\nrlim_cur: 245760\n```\n\nThis means the current behaviour results in the `rlim_cur` (soft limit) is set below the current value :(.\n\nI was also concerned about setting the value to `RLIM_INFINITY` which on my machine is: `9223372036854775807` (when printed as `%llu`). So I tried setting `rlim_cur` to infinity, and it was succesful specifically `setrlimit` returned a result of `0`.\n\n\n",
                                           "updatedAt":  "2025-02-20T21:40:25Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6fTwyN",
                                           "createdAt":  "2025-02-20T21:46:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "Should we simply disable this method for apple platforms? ",
                                           "updatedAt":  "2025-02-20T21:46:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6fT2qD",
                                           "createdAt":  "2025-02-20T21:59:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEHGMQA==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "borland",
                                                                               "createdAt":  "2025-02-20T22:56:42Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "LukeButters",
                                           "body":  "By default macos has a crazy low soft limit of 256!\n```\n ulimit -a\n-t: cpu time (seconds)              unlimited\n-f: file size (blocks)              unlimited\n-d: data seg size (kbytes)          unlimited\n-s: stack size (kbytes)             8176\n-c: core file size (blocks)         0\n-v: address space (kbytes)          unlimited\n-l: locked-in-memory size (kbytes)  unlimited\n-u: processes                       10666\n-n: file descriptors                256\n```\n\nIf a concern exists around backwards compatibility, we could on apple machines set the current limit to:\n```\nrlp.rlim_cur = max(rlp.rlim_cur, min(rlp.rlim_max, OPEN_MAX));\n```\nso if the user has already set a soft limit that exceeds OPEN_MAX we use what the user has set. If the user has a soft limit below rlim_max, we increase the soft limit up to the smaller of rlim_max and OPEN_MAX.\n\nDoing that means:\n- The soft limit is raised, since the default is way to low to realistically work.\n- The soft limit is not lowered below what a user has specified.\n- Backwards compatibility is maintained since soft limits are still raised, but we never raise them above what the doco says to raise them to.\n- If the OS was ever to actually reject soft limits above OPEN_MAX (each on unsupported versions from 2017) the user is able to workaround the issue  by using ulimit to lower the soft limit. (By default the limit is crazy low so this is a very unlikely scenario).\n",
                                           "updatedAt":  "2025-02-20T21:59:14Z"
                                       }
                                   ],
                         "totalCount":  8
                     },
        "title":  "Dotnet on OSX is limited to 10240 file handles",
        "labels":  [
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/113064",
        "createdAt":  "2025-03-03T10:10:48Z",
        "number":  113064,
        "author":  "radekdoulik",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-01T17:03:09Z",
        "body":  "run the paltests on helix, with selenium and chromedriver",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  null,
                         "nodes":  [

                                   ],
                         "totalCount":  0
                     },
        "title":  "[wasm coreclr] run paltests on helix",
        "labels":  [
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/113354",
        "createdAt":  "2025-03-11T01:10:15Z",
        "number":  113354,
        "author":  "driver1998",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  "Y3Vyc29yOnYyOpHODBtmmQ==",
                          "nodes":  [
                                        {
                                            "content":  "EYES",
                                            "user":  "Zonciu",
                                            "createdAt":  "2025-04-25T09:53:26Z"
                                        }
                                    ],
                          "totalCount":  1
                      },
        "updatedAt":  "2025-03-11T08:56:23Z",
        "body":  "I am trying to port CoreCLR to the 2K0300 SoC, a LoongArch SoC with no LSX/LASX support.\n\nFrom what I can see, SIMD JIT codegen is guarded behind FEATURE_SIMD and is not enabled by default, so that\u0027s fine.\n\nBut context switching code in PAL uses LASX `xvld`/`xvsd` instruction to load/save floating point/vector registers without any checks. \n\nSee: https://github.com/dotnet/runtime/blob/a49ed697037bad503e32daa23f4339ebfb8962ea/src/coreclr/pal/src/arch/loongarch64/context2.S#L41\n\nThis breaks on 2K0300, and I think also the 2K1000 / 2K2000 chips that do have LSX but no LASX.\n\nI partially reverted the change (https://github.com/dotnet/runtime/commit/d74b52492d85a3a250654d670942e35f9f0be2e8) and got a ImageSharp / dotnet-iot sample running on the 2K0300. Will still need to figure out a cleaner way to do it, like checking LSX/LASX support in runtime and use the correct instructions in each senario.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOobhVTg==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6hqa_M",
                                           "createdAt":  "2025-03-11T01:26:09Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @JulieLeeMSFT, @jakobbotsch\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-03-11T01:26:09Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6hqeBT",
                                           "createdAt":  "2025-03-11T01:34:49Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "driver1998",
                                           "body":  "cc @shushanhf @LuckyXu-HF",
                                           "updatedAt":  "2025-03-11T01:36:51Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6hqfkN",
                                           "createdAt":  "2025-03-11T01:40:40Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "shushanhf",
                                           "body":  "\u003e See:\n\u003e https://github.com/dotnet/runtime/blob/a49ed697037bad503e32daa23f4339ebfb8962ea/src/coreclr/pal/src/arch/loongarch64/context2.S#L41\n\nThanks,  we will check it.",
                                           "updatedAt":  "2025-03-11T01:40:40Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6huFVO",
                                           "createdAt":  "2025-03-11T08:56:22Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "xen0n",
                                           "body":  "Yeah, CPU capabilities should be checked upfront by means of HWCAP.",
                                           "updatedAt":  "2025-03-11T08:56:22Z"
                                       }
                                   ],
                         "totalCount":  4
                     },
        "title":  "LoongArch: LSX/LASX usage in CoreCLR",
        "labels":  [
                       "area-PAL-coreclr",
                       "untriaged",
                       "arch-loongarch64"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/113928",
        "createdAt":  "2025-03-26T16:59:37Z",
        "number":  113928,
        "author":  "radekdoulik",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-04-15T17:23:21Z",
        "body":  "During the runtime initialization we get few errors like this one:\n\n```\n  log: stderr: {0x135434-0x17d8} TRACE [PAL    ] at INIT_FormatCommandLine.1103: Command line is \u003cwasm\u003e\n  log: stderr: {0x135434-0x17d8} ENTRY [UNICODE] at /Users/rodo/git/runtime-main/src/coreclr/pal/src/locale/unicode.cpp.94: MultiByteToWideChar(CodePage=0, dwFlags=0, lpMultiByteStr=0xfd94 (/managed), cbMultiByte=-1, lpWideCharStr=0x13b360, cchWideChar=9)\n  log: stderr: {0x135434-0x17d8} ENTRY [UNICODE] at /Users/rodo/git/runtime-main/src/coreclr/pal/src/locale/unicode.cpp.94: MultiByteToWideChar(CodePage=0, dwFlags=0, lpMultiByteStr=0xfd94 (/managed), cbMultiByte=-1, lpWideCharStr=0, cchWideChar=0)\n  log: stderr: {0x135434-0x17d8} EXIT  [UNICODE] at /Users/rodo/git/runtime-main/src/coreclr/pal/src/locale/unicode.cpp.137: MultiByteToWideChar returns 9.\n  log: stderr: {0x135434-0x17d8} TRACE [PAL    ] at INIT_GetCurrentEXEPath.1161: full path to executable is /managed\n  log: stderr: {0x135434-0x17d8} EXIT  [UNICODE] at /Users/rodo/git/runtime-main/src/coreclr/pal/src/locale/unicode.cpp.137: MultiByteToWideChar returns 9.\n  log: stderr: ERROR : DBG_printf: vsnprintf_s failed errno:25 (Illegal byte sequence)\n  log: stderr: ERROR : DBG_printf: vsnprintf_s failed errno:25 (Illegal byte sequence)\n  log: stderr: ERROR : DBG_printf: vsnprintf_s failed errno:25 (Illegal byte sequence)\n  log: stderr: {0x135434-0x17d8} EXIT  [CRT    ] at /Users/rodo/git/runtime-main/src/coreclr/pal/src/cruntime/wchar.cpp.497: wcslen returning size_t 0\n```\n\nIt doesn\u0027t break the runtime, we should fix it though.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOp06fHA==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc6nSo5W",
                                           "createdAt":  "2025-04-15T16:12:14Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "radekdoulik",
                                           "body":  "this is coming from `PAL_wcsrchr` and `PAL_wcslen`, from ENTRY call with `%S`. the emscripten\u0027s fprintf doesn\u0027t support `%S` format extension. another occurrence is in `GetModuleFileNameW`\u0027s TRACE call.\n\n@davidwrighton @janvorli could you please take a look at it or tell me what is the preferred way to fix this?\n\nexample stacktrace:\n```\n  | put_char | @ | corewasmrun.js:2064\n  | write | @ | corewasmrun.js:2010\n  | write | @ | corewasmrun.js:3781\n  | doWritev | @ | corewasmrun.js:5552\n  | _fd_write | @ | corewasmrun.js:5566\n  | $__stdio_write | @ | __stdio_write.c:17\n  | $__vfprintf_internal | @ | vfprintf.c:746\n  | $vfprintf | @ | vfprintf.c:761\n  | $fprintf | @ | fprintf.c:10\n  | $DBG_printf | @ | dbgmsg.cpp:518\n  | $PAL_wcslen | @ | wchar.cpp:484\n  | $CorUnix::InitializeProcessCommandLine(char16_t*, char16_t*) | @ | process.cpp:2830\n  | $Initialize(int, char const* const*, unsigned int) | @ | pal.cpp:528\n  | $PAL_InitializeCoreCLR | @ | pal.cpp:733\n  | $coreclr_initialize | @ | exports.cpp:265\n  | $run() | @ | corewasmrun.cpp:17\n  | $__original_main | @ | corewasmrun.cpp:33\n  | $main | @ | corewasmrun.wasm:0xdc1b\n  | (anonymous) | @ | corewasmrun.js:941\n  | callMain | @ | corewasmrun.js:6064\n  | doRun | @ | corewasmrun.js:6114\n  | run | @ | corewasmrun.js:6129\n  | runCaller | @ | corewasmrun.js:6049\n  | removeRunDependency | @ | corewasmrun.js:865\n  | receiveInstance | @ | corewasmrun.js:1272\n  | receiveInstantiationResult | @ | corewasmrun.js:1290\n  | (anonymous) | @ | corewasmrun.js:1227\n  | Promise.then |   |  \n  | (anonymous) | @ | corewasmrun.js:1225\n  | Promise.then |   |  \n  | (anonymous) | @ | corewasmrun.js:1215\n  | Promise.then |   |  \n  | instantiateAsync | @ | corewasmrun.js:1199\n  | createWasm | @ | corewasmrun.js:1312\n  | (anonymous) | @ | corewasmrun.js:5705\n```",
                                           "updatedAt":  "2025-04-15T16:12:14Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc6nTp8c",
                                           "createdAt":  "2025-04-15T17:23:20Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "janvorli",
                                           "body":  "Ah, these are the logging messages for entry / leaving PAL functions. I think you may want to stop enabling those. There is quite a number of cases when it uses the `%S` formatting character to dump a string passed to an API that we\u0027ve already removed support for quite a while ago, not realizing it would break all of these logging methods. ",
                                           "updatedAt":  "2025-04-15T17:23:20Z"
                                       }
                                   ],
                         "totalCount":  2
                     },
        "title":  "[wasm coreclr] fix Illegal byte sequence errors",
        "labels":  [
                       "area-PAL-coreclr"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/117760",
        "createdAt":  "2025-07-17T13:14:41Z",
        "number":  117760,
        "author":  "kotlarmilos",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-07-18T07:37:02Z",
        "body":  "## Description\n\nThe failure occurs inside a background thread created by `ThreadTestHelpers.CreateGuardedThread`, which is used by `RunTestInBackgroundThread`.\n```\n---- System.IO.IOException : The system cannot open the device or file specified. : \u00279d82af713f23442b9ac977c74127c177\u0027. One or more system calls failed: mkdtemp(\"/data/local/tmp/.dotnet.vL0mk2\") == nullptr; errno == EACCES;\nat System.Threading.Tests.ThreadTestHelpers.\u003c\u003ec__DisplayClass4_0.\u003cCreateGuardedThread\u003eb__1()\nat System.Threading.Tests.ThreadTestHelpers.\u003c\u003ec__DisplayClass4_0.\u003cCreateGuardedThread\u003eb__2()\nat System.Threading.Tests.ThreadTestHelpers.RunTestInBackgroundThread(Action test)\nat System.Threading.Tests.MutexTests.AbandonExisting(String name, WaitHandleWaitType waitType, Int32 waitCount, Int32 notAbandonedWaitIndex, Boolean isNotAbandonedWaitObjectSignaled, Boolean abandonDuringWait, Boolean currentUserOnly, Boolean currentSessionOnly)\n```\n\nThe test attempts to create a temporary directory or file in `/data/local/tmp/`. The system call fails with `errno == EACCES` because Android does not grant write permissions to that location.\n\nThe same issue is expected to occur on Apple mobile platforms.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOuA077w==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc630qaB",
                                           "createdAt":  "2025-07-17T13:15:31Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to this area: @mangod9\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-07-17T13:15:31Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc630qps",
                                           "createdAt":  "2025-07-17T13:15:50Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "dotnet-policy-service",
                                           "body":  "Tagging subscribers to \u0027arch-android\u0027: @vitek-karas, @simonrozsival, @steveisok, @akoeplinger\nSee info in [area-owners.md](https://github.com/dotnet/runtime/blob/main/docs/area-owners.md) if you want to be subscribed.\n\u003c!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. --\u003e",
                                           "updatedAt":  "2025-07-17T13:15:50Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc636NCM",
                                           "createdAt":  "2025-07-17T21:13:29Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "@kotlarmilos if this doesn\u0027t need to be done for .NET 10, I have a PR that will fix this for .NET 11:\n\nhttps://github.com/dotnet/runtime/pull/117635",
                                           "updatedAt":  "2025-07-17T21:13:29Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc636TdG",
                                           "createdAt":  "2025-07-17T21:22:45Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkotas",
                                           "body":  "\u003e https://github.com/dotnet/runtime/pull/117635\n\nI do not think this PR alone is fixing it. We would also need to switch CoreCLR to managed wait subsystem. Is that correct?",
                                           "updatedAt":  "2025-07-17T21:22:45Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc636ZN2",
                                           "createdAt":  "2025-07-17T21:27:24Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "Yes, you\u0027re right. I have a branch for that as well. I\u0027ll push that out as a draft and rebase (and mark as blocked).",
                                           "updatedAt":  "2025-07-17T21:27:24Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc636gju",
                                           "createdAt":  "2025-07-17T21:37:03Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  "Y3Vyc29yOnYyOpHOEbAqaQ==",
                                                             "nodes":  [
                                                                           {
                                                                               "content":  "THUMBS_UP",
                                                                               "user":  "jkotas",
                                                                               "createdAt":  "2025-07-17T21:42:01Z"
                                                                           }
                                                                       ],
                                                             "totalCount":  1
                                                         },
                                           "author":  "jkoritzinsky",
                                           "body":  "Okay, https://github.com/dotnet/runtime/pull/117788 is the correct .NET 11 targeted PR for this issue.",
                                           "updatedAt":  "2025-07-17T21:37:03Z"
                                       },
                                       {
                                           "id":  "IC_kwDODI9FZc64DTvv",
                                           "createdAt":  "2025-07-18T07:37:02Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "kotlarmilos",
                                           "body":  "Thanks, this is not needed for .NET 10. Moved to .NET 11.",
                                           "updatedAt":  "2025-07-18T07:37:02Z"
                                       }
                                   ],
                         "totalCount":  7
                     },
        "title":  "[Android] Add support for named mutex on mobile platforms in CoreCLR",
        "labels":  [
                       "area-PAL-coreclr",
                       "os-android"
                   ]
    },
    {
        "url":  "https://github.com/dotnet/runtime/issues/119441",
        "createdAt":  "2025-09-07T16:42:56Z",
        "number":  119441,
        "author":  "huoyaoyuan",
        "reactions":  {
                          "hasNextPage":  false,
                          "endCursor":  null,
                          "nodes":  [

                                    ],
                          "totalCount":  0
                      },
        "updatedAt":  "2025-09-19T18:01:13Z",
        "body":  "`std::atomic` is supported as a part of C++ 11. It has convenient support for common interlocked operations, with strongest seq_cst as default memory order for operations. For all the simple cases like reference counters, it should be sufficient. Simple int32/int64 operations should be implemented in header only without extra dependency.\n\nMoreover, can it replace our custom `VOLATILE\u003cT\u003e`? The main purpose of `VOLATILE\u003cT\u003e` is to keep a consistent memory model, which is also provided by `std::atomic`. `VOLATILE\u003cT\u003e` is used a lot with interlocked operations.\n\nThe purpose is to reduce simulated Windows interlocked intrinsics, which may be less optimal and hard to maintain. Performance critical cases and complex cases like CAS128 are not considered for now.",
        "comments":  {
                         "hasNextPage":  false,
                         "endCursor":  "Y3Vyc29yOnYyOpHOwosoFQ==",
                         "nodes":  [
                                       {
                                           "id":  "IC_kwDODI9FZc7CiygV",
                                           "createdAt":  "2025-09-07T16:47:27Z",
                                           "reactions":  {
                                                             "hasNextPage":  false,
                                                             "endCursor":  null,
                                                             "nodes":  [

                                                                       ],
                                                             "totalCount":  0
                                                         },
                                           "author":  "MihuBot",
                                           "body":  "I\u0027m a bot. Here is a possible related and/or duplicate issue (I may be wrong):\n- https://github.com/dotnet/runtime/issues/8804",
                                           "updatedAt":  "2025-09-07T16:47:27Z"
                                       }
                                   ],
                         "totalCount":  1
                     },
        "title":  "Consider to use `std::atomic` for simple cases in coreclr",
        "labels":  [
                       "area-PAL-coreclr"
                   ]
    }
]
